---
source: crates/dora-compiler/src/wasm/tests/code.rs
expression: op
snapshot_kind: text
---
module {
  func.func @add(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.load %0 : !llvm.ptr -> i32
    %3 = llvm.load %1 : !llvm.ptr -> i32
    %4 = "wasm.add"(%2, %3) : (i32, i32) -> i32
    cf.br ^bb1(%4 : i32)
  ^bb1(%5: i32):  // pred: ^bb0
    return %5 : i32
  }
  func.func @main(%arg0: !llvm.ptr) -> i32 {
    %c2_i32 = arith.constant 2 : i32
    %c3_i32 = arith.constant 3 : i32
    %0 = call @add(%arg0, %c2_i32, %c3_i32) : (!llvm.ptr, i32, i32) -> i32
    cf.br ^bb1(%0 : i32)
  ^bb1(%1: i32):  // pred: ^bb0
    return %1 : i32
  }
}
