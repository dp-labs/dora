---
source: crates/dora-compiler/src/wasm/tests/code.rs
expression: op
snapshot_kind: text
---
module {
  func.func @f0(%arg0: !llvm.ptr) -> i32 {
    %c195940365_i32 = arith.constant 195940365 : i32
    cf.br ^bb1(%c195940365_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f1(%arg0: !llvm.ptr) -> i32 {
    %c-1_i32 = arith.constant -1 : i32
    cf.br ^bb1(%c-1_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f2(%arg0: !llvm.ptr) -> i32 {
    %c2147483647_i32 = arith.constant 2147483647 : i32
    cf.br ^bb1(%c2147483647_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f3(%arg0: !llvm.ptr) -> i32 {
    %c-2147483647_i32 = arith.constant -2147483647 : i32
    cf.br ^bb1(%c-2147483647_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f4(%arg0: !llvm.ptr) -> i32 {
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    cf.br ^bb1(%c-2147483648_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f5(%arg0: !llvm.ptr) -> i32 {
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    cf.br ^bb1(%c-2147483648_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f6(%arg0: !llvm.ptr) -> i32 {
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    %c1_i32 = arith.constant 1 : i32
    %0 = "wasm.add"(%c-2147483648_i32, %c1_i32) : (i32, i32) -> i32
    cf.br ^bb1(%0 : i32)
  ^bb1(%1: i32):  // pred: ^bb0
    return %1 : i32
  }
  func.func @f7(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    cf.br ^bb1(%c0_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f8(%arg0: !llvm.ptr) -> i32 {
    %c10_i32 = arith.constant 10 : i32
    cf.br ^bb1(%c10_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f9(%arg0: !llvm.ptr) -> i32 {
    %c-1_i32 = arith.constant -1 : i32
    cf.br ^bb1(%c-1_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f10(%arg0: !llvm.ptr) -> i32 {
    %c42_i32 = arith.constant 42 : i32
    cf.br ^bb1(%c42_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f11(%arg0: !llvm.ptr) -> i64 {
    %c913028331277281902_i64 = arith.constant 913028331277281902 : i64
    cf.br ^bb1(%c913028331277281902_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f12(%arg0: !llvm.ptr) -> i64 {
    %c-1_i64 = arith.constant -1 : i64
    cf.br ^bb1(%c-1_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f13(%arg0: !llvm.ptr) -> i64 {
    %c9223372036854775807_i64 = arith.constant 9223372036854775807 : i64
    cf.br ^bb1(%c9223372036854775807_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f14(%arg0: !llvm.ptr) -> i64 {
    %c-9223372036854775807_i64 = arith.constant -9223372036854775807 : i64
    cf.br ^bb1(%c-9223372036854775807_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f15(%arg0: !llvm.ptr) -> i64 {
    %c-9223372036854775808_i64 = arith.constant -9223372036854775808 : i64
    cf.br ^bb1(%c-9223372036854775808_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f16(%arg0: !llvm.ptr) -> i64 {
    %c-9223372036854775808_i64 = arith.constant -9223372036854775808 : i64
    cf.br ^bb1(%c-9223372036854775808_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f17(%arg0: !llvm.ptr) -> i64 {
    %c-9223372036854775808_i64 = arith.constant -9223372036854775808 : i64
    %c1_i64 = arith.constant 1 : i64
    %0 = "wasm.add"(%c-9223372036854775808_i64, %c1_i64) : (i64, i64) -> i64
    cf.br ^bb1(%0 : i64)
  ^bb1(%1: i64):  // pred: ^bb0
    return %1 : i64
  }
  func.func @f18(%arg0: !llvm.ptr) -> i64 {
    %c0_i64 = arith.constant 0 : i64
    cf.br ^bb1(%c0_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f19(%arg0: !llvm.ptr) -> i64 {
    %c10_i64 = arith.constant 10 : i64
    cf.br ^bb1(%c10_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f20(%arg0: !llvm.ptr) -> i64 {
    %c-1_i64 = arith.constant -1 : i64
    cf.br ^bb1(%c-1_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f21(%arg0: !llvm.ptr) -> i64 {
    %c42_i64 = arith.constant 42 : i64
    cf.br ^bb1(%c42_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f22(%arg0: !llvm.ptr) -> i32 {
    %c1000000_i32 = arith.constant 1000000 : i32
    cf.br ^bb1(%c1000000_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f23(%arg0: !llvm.ptr) -> i32 {
    %c1000_i32 = arith.constant 1000 : i32
    cf.br ^bb1(%c1000_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f24(%arg0: !llvm.ptr) -> i32 {
    %c168755353_i32 = arith.constant 168755353 : i32
    cf.br ^bb1(%c168755353_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f25(%arg0: !llvm.ptr) -> i32 {
    %c109071_i32 = arith.constant 109071 : i32
    cf.br ^bb1(%c109071_i32 : i32)
  ^bb1(%0: i32):  // pred: ^bb0
    return %0 : i32
  }
  func.func @f26(%arg0: !llvm.ptr) -> i64 {
    %c1000000_i64 = arith.constant 1000000 : i64
    cf.br ^bb1(%c1000000_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f27(%arg0: !llvm.ptr) -> i64 {
    %c1000_i64 = arith.constant 1000 : i64
    cf.br ^bb1(%c1000_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f28(%arg0: !llvm.ptr) -> i64 {
    %c3078696982321561_i64 = arith.constant 3078696982321561 : i64
    cf.br ^bb1(%c3078696982321561_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
  func.func @f29(%arg0: !llvm.ptr) -> i64 {
    %c109071_i64 = arith.constant 109071 : i64
    cf.br ^bb1(%c109071_i64 : i64)
  ^bb1(%0: i64):  // pred: ^bb0
    return %0 : i64
  }
}
