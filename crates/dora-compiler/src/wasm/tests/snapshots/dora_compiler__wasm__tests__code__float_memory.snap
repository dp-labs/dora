---
source: crates/dora-compiler/src/wasm/tests/code.rs
expression: op
snapshot_kind: text
---
module {
  func.func @f0(%arg0: !llvm.ptr) -> f64 {
    %c1_i32 = arith.constant 1 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c1_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> f64
    cf.br ^bb1(%6 : f64)
  ^bb1(%7: f64):  // pred: ^bb0
    return %7 : f64
  }
  func.func @f1(%arg0: !llvm.ptr) -> i64 {
    %c1_i32 = arith.constant 1 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c1_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i64
    cf.br ^bb1(%6 : i64)
  ^bb1(%7: i64):  // pred: ^bb0
    return %7 : i64
  }
  func.func @f2(%arg0: !llvm.ptr) {
    %c1_i32 = arith.constant 1 : i32
    %cst = arith.constant 9.2199943371342479E+18 : f64
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c1_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    llvm.store %cst, %5 : f64, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f3(%arg0: !llvm.ptr) {
    %c1_i32 = arith.constant 1 : i32
    %c9219994337134247936_i64 = arith.constant 9219994337134247936 : i64
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c1_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    llvm.store %c9219994337134247936_i64, %5 : i64, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f4(%arg0: !llvm.ptr) {
    %c1_i32 = arith.constant 1 : i32
    %c0_i64 = arith.constant 0 : i64
    %c0_i64_0 = arith.constant 0 : i64
    %0 = arith.extui %c1_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64_0 : i64
    %2 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
}
