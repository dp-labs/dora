---
source: crates/dora-compiler/src/wasm/tests/code.rs
expression: op
snapshot_kind: text
---
module {
  func.func @f0(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    cf.br ^bb2(%6 : i32)
  ^bb1(%7: i32):  // pred: ^bb2
    return %7 : i32
  ^bb2(%8: i32):  // pred: ^bb0
    cf.br ^bb1(%8 : i32)
  }
  func.func @f1(%arg0: !llvm.ptr) {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i32_0 = arith.constant 0 : i32
    %7 = arith.cmpi ne, %6, %c0_i32_0 : i32
    cf.cond_br %7, ^bb2, ^bb3
  ^bb1:  // pred: ^bb2
    return
  ^bb2:  // 2 preds: ^bb0, ^bb3
    cf.br ^bb1
  ^bb3:  // pred: ^bb0
    cf.br ^bb2
  }
  func.func @f2(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %c0_i32_0 = arith.constant 0 : i32
    %7 = arith.cmpi ne, %c1_i32, %c0_i32_0 : i32
    cf.cond_br %7, ^bb2(%6 : i32), ^bb3(%6 : i32)
  ^bb1(%8: i32):  // pred: ^bb2
    return %8 : i32
  ^bb2(%9: i32):  // 2 preds: ^bb0, ^bb3
    cf.br ^bb1(%9 : i32)
  ^bb3(%10: i32):  // pred: ^bb0
    %c7_i32 = arith.constant 7 : i32
    cf.br ^bb2(%c7_i32 : i32)
  }
  func.func @f3(%arg0: !llvm.ptr) -> i32 {
    %c6_i32 = arith.constant 6 : i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i32_0 = arith.constant 0 : i32
    %7 = arith.cmpi ne, %6, %c0_i32_0 : i32
    cf.cond_br %7, ^bb2(%c6_i32 : i32), ^bb3(%c6_i32 : i32)
  ^bb1(%8: i32):  // pred: ^bb2
    return %8 : i32
  ^bb2(%9: i32):  // 2 preds: ^bb0, ^bb3
    cf.br ^bb1(%9 : i32)
  ^bb3(%10: i32):  // pred: ^bb0
    %c7_i32 = arith.constant 7 : i32
    cf.br ^bb2(%c7_i32 : i32)
  }
  func.func @f4(%arg0: !llvm.ptr) {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_0 = arith.constant 0 : i64
    %c1_i64 = arith.constant 1 : i64
    cf.switch %6 : i32, [
      default: ^bb2,
      0: ^bb2,
      1: ^bb2
    ]
  ^bb1:  // pred: ^bb2
    return
  ^bb2:  // 3 preds: ^bb0, ^bb0, ^bb0
    cf.br ^bb1
  }
  func.func @f5(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %c0_i64_0 = arith.constant 0 : i64
    %c1_i64 = arith.constant 1 : i64
    cf.switch %c1_i32 : i32, [
      default: ^bb2(%6 : i32),
      0: ^bb2(%6 : i32),
      1: ^bb2(%6 : i32)
    ]
  ^bb1(%7: i32):  // pred: ^bb2
    return %7 : i32
  ^bb2(%8: i32):  // 3 preds: ^bb0, ^bb0, ^bb0
    cf.br ^bb1(%8 : i32)
  }
  func.func @f6(%arg0: !llvm.ptr) -> i32 {
    %c6_i32 = arith.constant 6 : i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_0 = arith.constant 0 : i64
    cf.switch %6 : i32, [
      default: ^bb2(%c6_i32 : i32),
      0: ^bb2(%c6_i32 : i32)
    ]
  ^bb1(%7: i32):  // pred: ^bb2
    return %7 : i32
  ^bb2(%8: i32):  // 2 preds: ^bb0, ^bb0
    cf.br ^bb1(%8 : i32)
  }
  func.func @f7(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    cf.br ^bb1(%6 : i32)
  ^bb1(%7: i32):  // pred: ^bb0
    return %7 : i32
  }
  func.func @f8(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i32_0 = arith.constant 0 : i32
    %7 = arith.cmpi ne, %6, %c0_i32_0 : i32
    cf.cond_br %7, ^bb2, ^bb3
  ^bb1(%8: i32):  // pred: ^bb4
    return %8 : i32
  ^bb2:  // pred: ^bb0
    %c0_i32_1 = arith.constant 0 : i32
    cf.br ^bb4(%c0_i32_1 : i32)
  ^bb3:  // pred: ^bb0
    %c1_i32 = arith.constant 1 : i32
    cf.br ^bb4(%c1_i32 : i32)
  ^bb4(%9: i32):  // 2 preds: ^bb2, ^bb3
    cf.br ^bb1(%9 : i32)
  }
  func.func @f9(%arg0: !llvm.ptr) -> i32 {
    %c1_i32 = arith.constant 1 : i32
    %c0_i32 = arith.constant 0 : i32
    %0 = arith.cmpi ne, %c1_i32, %c0_i32 : i32
    cf.cond_br %0, ^bb2, ^bb3
  ^bb1(%1: i32):  // pred: ^bb4
    return %1 : i32
  ^bb2:  // pred: ^bb0
    %c0_i32_0 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %2 = arith.extui %c0_i32_0 : i32 to i64
    %3 = arith.addi %2, %c0_i64 : i64
    %4 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    %7 = llvm.getelementptr %6[%3] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %8 = llvm.load %7 : !llvm.ptr -> i32
    cf.br ^bb4(%8 : i32)
  ^bb3:  // pred: ^bb0
    %c0_i32_1 = arith.constant 0 : i32
    cf.br ^bb4(%c0_i32_1 : i32)
  ^bb4(%9: i32):  // 2 preds: ^bb2, ^bb3
    cf.br ^bb1(%9 : i32)
  }
  func.func @f10(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i32_0 = arith.constant 0 : i32
    %0 = arith.cmpi ne, %c0_i32, %c0_i32_0 : i32
    cf.cond_br %0, ^bb2, ^bb3
  ^bb1(%1: i32):  // pred: ^bb4
    return %1 : i32
  ^bb2:  // pred: ^bb0
    %c0_i32_1 = arith.constant 0 : i32
    cf.br ^bb4(%c0_i32_1 : i32)
  ^bb3:  // pred: ^bb0
    %c0_i32_2 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %2 = arith.extui %c0_i32_2 : i32 to i64
    %3 = arith.addi %2, %c0_i64 : i64
    %4 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    %7 = llvm.getelementptr %6[%3] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %8 = llvm.load %7 : !llvm.ptr -> i32
    cf.br ^bb4(%8 : i32)
  ^bb4(%9: i32):  // 2 preds: ^bb2, ^bb3
    cf.br ^bb1(%9 : i32)
  }
  func.func @f11(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %2 = arith.extui %c0_i32 : i32 to i64
    %3 = arith.addi %2, %c0_i64 : i64
    %4 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    %7 = llvm.getelementptr %6[%3] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %8 = llvm.load %7 : !llvm.ptr -> i32
    %9 = llvm.load %0 : !llvm.ptr -> i32
    %10 = llvm.load %1 : !llvm.ptr -> i32
    %11 = "wasm.select"(%8, %9, %10) : (i32, i32, i32) -> i32
    cf.br ^bb1(%11 : i32)
  ^bb1(%12: i32):  // pred: ^bb0
    return %12 : i32
  }
  func.func @f12(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %3 = arith.extui %c0_i32 : i32 to i64
    %4 = arith.addi %3, %c0_i64 : i64
    %5 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %7[%4] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %9 = llvm.load %8 : !llvm.ptr -> i32
    %10 = llvm.load %1 : !llvm.ptr -> i32
    %11 = "wasm.select"(%2, %9, %10) : (i32, i32, i32) -> i32
    cf.br ^bb1(%11 : i32)
  ^bb1(%12: i32):  // pred: ^bb0
    return %12 : i32
  }
  func.func @f13(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c0_i32_0 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32_0 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %7 = "wasm.select"(%c0_i32, %c1_i32, %6) : (i32, i32, i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c-1_i32 = arith.constant -1 : i32
    cf.br ^bb1(%c-1_i32 : i32)
  ^bb1(%3: i32):  // pred: ^bb0
    return %3 : i32
  }
  func.func @f15(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c3_i32 = arith.constant 3 : i32
    %7 = call @f(%arg0, %6, %c2_i32, %c3_i32) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f16(%arg0: !llvm.ptr) -> i32 {
    %c1_i32 = arith.constant 1 : i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c3_i32 = arith.constant 3 : i32
    %7 = call @f(%arg0, %c1_i32, %6, %c3_i32) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f17(%arg0: !llvm.ptr) -> i32 {
    %c1_i32 = arith.constant 1 : i32
    %c2_i32 = arith.constant 2 : i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %7 = call @f(%arg0, %c1_i32, %c2_i32, %6) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f18(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c3_i32 = arith.constant 3 : i32
    %c0_i32_0 = arith.constant 0 : i32
    %7 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i32
    %9 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %arg0[24] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.load %10 : !llvm.ptr -> i32
    %13 = arith.cmpi ult, %c0_i32_0, %12 : i32
    %14 = llvm.getelementptr %11[%c0_i32_0] : (!llvm.ptr, i32) -> !llvm.ptr, !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.getelementptr %15[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.getelementptr %15[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %18 = llvm.getelementptr %15[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %19 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    %20 = llvm.load %17 : !llvm.ptr -> i32
    %21 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %22 = llvm.load %19 : !llvm.ptr -> i32
    %c0_i32_1 = arith.constant 0 : i32
    %23 = arith.cmpi eq, %22, %c0_i32_1 : i32
    %24 = llvm.call %19(%6, %c2_i32, %c3_i32) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (i32, i32, i32) -> i32
    cf.br ^bb1(%24 : i32)
  ^bb1(%25: i32):  // pred: ^bb0
    return %25 : i32
  }
  func.func @f19(%arg0: !llvm.ptr) -> i32 {
    %c1_i32 = arith.constant 1 : i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c3_i32 = arith.constant 3 : i32
    %c0_i32_0 = arith.constant 0 : i32
    %7 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i32
    %9 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %arg0[24] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.load %10 : !llvm.ptr -> i32
    %13 = arith.cmpi ult, %c0_i32_0, %12 : i32
    %14 = llvm.getelementptr %11[%c0_i32_0] : (!llvm.ptr, i32) -> !llvm.ptr, !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.getelementptr %15[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.getelementptr %15[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %18 = llvm.getelementptr %15[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %19 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    %20 = llvm.load %17 : !llvm.ptr -> i32
    %21 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %22 = llvm.load %19 : !llvm.ptr -> i32
    %c0_i32_1 = arith.constant 0 : i32
    %23 = arith.cmpi eq, %22, %c0_i32_1 : i32
    %24 = llvm.call %19(%c1_i32, %6, %c3_i32) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (i32, i32, i32) -> i32
    cf.br ^bb1(%24 : i32)
  ^bb1(%25: i32):  // pred: ^bb0
    return %25 : i32
  }
  func.func @f20(%arg0: !llvm.ptr) -> i32 {
    %c1_i32 = arith.constant 1 : i32
    %c2_i32 = arith.constant 2 : i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i32_0 = arith.constant 0 : i32
    %7 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i32
    %9 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %arg0[24] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.load %10 : !llvm.ptr -> i32
    %13 = arith.cmpi ult, %c0_i32_0, %12 : i32
    %14 = llvm.getelementptr %11[%c0_i32_0] : (!llvm.ptr, i32) -> !llvm.ptr, !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.getelementptr %15[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.getelementptr %15[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %18 = llvm.getelementptr %15[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %19 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    %20 = llvm.load %17 : !llvm.ptr -> i32
    %21 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %22 = llvm.load %19 : !llvm.ptr -> i32
    %c0_i32_1 = arith.constant 0 : i32
    %23 = arith.cmpi eq, %22, %c0_i32_1 : i32
    %24 = llvm.call %19(%c1_i32, %c2_i32, %6) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (i32, i32, i32) -> i32
    cf.br ^bb1(%24 : i32)
  ^bb1(%25: i32):  // pred: ^bb0
    return %25 : i32
  }
  func.func @f21(%arg0: !llvm.ptr) -> i32 {
    %c1_i32 = arith.constant 1 : i32
    %c2_i32 = arith.constant 2 : i32
    %c3_i32 = arith.constant 3 : i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %7 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i32
    %9 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %arg0[24] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.load %10 : !llvm.ptr -> i32
    %13 = arith.cmpi ult, %6, %12 : i32
    %14 = llvm.getelementptr %11[%6] : (!llvm.ptr, i32) -> !llvm.ptr, !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.getelementptr %15[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.getelementptr %15[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %18 = llvm.getelementptr %15[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %19 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    %20 = llvm.load %17 : !llvm.ptr -> i32
    %21 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %22 = llvm.load %19 : !llvm.ptr -> i32
    %c0_i32_0 = arith.constant 0 : i32
    %23 = arith.cmpi eq, %22, %c0_i32_0 : i32
    %24 = llvm.call %19(%c1_i32, %c2_i32, %c3_i32) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (i32, i32, i32) -> i32
    cf.br ^bb1(%24 : i32)
  ^bb1(%25: i32):  // pred: ^bb0
    return %25 : i32
  }
  func.func @f22(%arg0: !llvm.ptr) {
    %c0_i32 = arith.constant 0 : i32
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %0 : i32, !llvm.ptr
    %c0_i32_0 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %1 = arith.extui %c0_i32_0 : i32 to i64
    %2 = arith.addi %1, %c0_i64 : i64
    %3 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %5[%2] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %7 = llvm.load %6 : !llvm.ptr -> i32
    llvm.store %7, %0 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f23(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %0 : i32, !llvm.ptr
    %c0_i32_0 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %1 = arith.extui %c0_i32_0 : i32 to i64
    %2 = arith.addi %1, %c0_i64 : i64
    %3 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %5[%2] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %7 = llvm.load %6 : !llvm.ptr -> i32
    llvm.store %7, %0 : i32, !llvm.ptr
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f24(%arg0: !llvm.ptr) {
    %c0_i32 = arith.constant 0 : i32
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %0 : i32, !llvm.ptr
    %c0_i32_0 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %1 = arith.extui %c0_i32_0 : i32 to i64
    %2 = arith.addi %1, %c0_i64 : i64
    %3 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %5[%2] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %7 = llvm.load %6 : !llvm.ptr -> i32
    %8 = llvm.getelementptr %arg0[48] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    llvm.store %7, %9 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f25(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_0 = arith.constant 0 : i64
    %7 = arith.extui %6 : i32 to i64
    %8 = arith.addi %7, %c0_i64_0 : i64
    %9 = llvm.getelementptr %4[%8] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %10 = llvm.load %9 : !llvm.ptr -> i32
    cf.br ^bb1(%10 : i32)
  ^bb1(%11: i32):  // pred: ^bb0
    return %11 : i32
  }
  func.func @f26(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_0 = arith.constant 0 : i64
    %7 = arith.extui %6 : i32 to i64
    %8 = arith.addi %7, %c0_i64_0 : i64
    %9 = llvm.getelementptr %4[%8] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %10 = llvm.load %9 : !llvm.ptr -> i8
    %11 = arith.extui %10 : i8 to i32
    cf.br ^bb1(%11 : i32)
  ^bb1(%12: i32):  // pred: ^bb0
    return %12 : i32
  }
  func.func @f27(%arg0: !llvm.ptr) {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c7_i32 = arith.constant 7 : i32
    %c0_i64_0 = arith.constant 0 : i64
    %7 = arith.extui %6 : i32 to i64
    %8 = arith.addi %7, %c0_i64_0 : i64
    %9 = llvm.getelementptr %4[%8] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    llvm.store %c7_i32, %9 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f28(%arg0: !llvm.ptr) {
    %c2_i32 = arith.constant 2 : i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_0 = arith.constant 0 : i64
    %7 = arith.extui %c2_i32 : i32 to i64
    %8 = arith.addi %7, %c0_i64_0 : i64
    %9 = llvm.getelementptr %4[%8] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    llvm.store %6, %9 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f29(%arg0: !llvm.ptr) {
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i8
    %7 = arith.extui %6 : i8 to i32
    %c7_i32 = arith.constant 7 : i32
    %c0_i64_0 = arith.constant 0 : i64
    %8 = arith.extui %7 : i32 to i64
    %9 = arith.addi %8, %c0_i64_0 : i64
    %10 = llvm.getelementptr %4[%9] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %11 = arith.trunci %c7_i32 : i32 to i8
    llvm.store %11, %10 : i8, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f30(%arg0: !llvm.ptr) {
    %c2_i32 = arith.constant 2 : i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c0_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_0 = arith.constant 0 : i64
    %7 = arith.extui %c2_i32 : i32 to i64
    %8 = arith.addi %7, %c0_i64_0 : i64
    %9 = llvm.getelementptr %4[%8] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %10 = arith.trunci %6 : i32 to i16
    llvm.store %10, %9 : i16, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f31(%arg0: !llvm.ptr) -> i32 {
    %c100_i32 = arith.constant 100 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c100_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %7 = "wasm.clz"(%6) : (i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f32(%arg0: !llvm.ptr) -> i32 {
    %c100_i32 = arith.constant 100 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c100_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c10_i32 = arith.constant 10 : i32
    %7 = "wasm.add"(%6, %c10_i32) : (i32, i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f33(%arg0: !llvm.ptr) -> i32 {
    %c10_i32 = arith.constant 10 : i32
    %c100_i32 = arith.constant 100 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c100_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %7 = "wasm.sub"(%c10_i32, %6) : (i32, i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f34(%arg0: !llvm.ptr) -> i32 {
    %c100_i32 = arith.constant 100 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c100_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %7 = "wasm.eqz"(%6) : (i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f35(%arg0: !llvm.ptr) -> i32 {
    %c100_i32 = arith.constant 100 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c100_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c10_i32 = arith.constant 10 : i32
    %7 = "wasm.les"(%6, %c10_i32) : (i32, i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f36(%arg0: !llvm.ptr) -> i32 {
    %c10_i32 = arith.constant 10 : i32
    %c100_i32 = arith.constant 100 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c100_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %7 = "wasm.ne"(%c10_i32, %6) : (i32, i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
  func.func @f37(%arg0: !llvm.ptr) -> i32 {
    %c100_i32 = arith.constant 100 : i32
    %c0_i64 = arith.constant 0 : i64
    %0 = arith.extui %c100_i32 : i32 to i64
    %1 = arith.addi %0, %c0_i64 : i64
    %2 = llvm.getelementptr %arg0[32] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %4[%1] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %7 = "wasm.mem_grow"(%6, %c0_i32) : (i32, i32) -> i32
    cf.br ^bb1(%7 : i32)
  ^bb1(%8: i32):  // pred: ^bb0
    return %8 : i32
  }
}
