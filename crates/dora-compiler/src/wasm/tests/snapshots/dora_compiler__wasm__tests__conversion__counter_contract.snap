---
source: crates/dora-compiler/src/wasm/tests/conversion.rs
expression: op
snapshot_kind: text
---
module {
  func.func @f0(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_7 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_7 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %8 : i64, !llvm.ptr
    %c1_i64_8 = arith.constant 1 : i64
    %9 = llvm.alloca %c1_i64_8 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %9 : i64, !llvm.ptr
    %c1_i64_9 = arith.constant 1 : i64
    %10 = llvm.alloca %c1_i64_9 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %10 : i64, !llvm.ptr
    %c0_i32_10 = arith.constant 0 : i32
    %c1_i64_11 = arith.constant 1 : i64
    %11 = llvm.alloca %c1_i64_11 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32_10, %11 : i32, !llvm.ptr
    %c1_i64_12 = arith.constant 1 : i64
    %12 = llvm.alloca %c1_i64_12 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32_10, %12 : i32, !llvm.ptr
    %13 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %15 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.getelementptr %15[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %18 = llvm.load %14 : !llvm.ptr -> i32
    %c320_i32 = arith.constant 320 : i32
    %19 = arith.subi %18, %c320_i32 : i32
    llvm.store %19, %4 : i32, !llvm.ptr
    llvm.store %19, %14 : i32, !llvm.ptr
    %20 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32 = arith.constant 288 : i32
    %21 = arith.addi %20, %c288_i32 : i32
    %c24_i32 = arith.constant 24 : i32
    %22 = arith.addi %21, %c24_i32 : i32
    %c0_i64_13 = arith.constant 0 : i64
    %c0_i64_14 = arith.constant 0 : i64
    %23 = arith.extui %22 : i32 to i64
    %24 = arith.addi %23, %c0_i64_14 : i64
    %25 = llvm.getelementptr %17[%24] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_13, %25 : i64, !llvm.ptr
    %26 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_15 = arith.constant 288 : i32
    %27 = arith.addi %26, %c288_i32_15 : i32
    %c16_i32 = arith.constant 16 : i32
    %28 = arith.addi %27, %c16_i32 : i32
    %c0_i64_16 = arith.constant 0 : i64
    %c0_i64_17 = arith.constant 0 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c0_i64_17 : i64
    %31 = llvm.getelementptr %17[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_16, %31 : i64, !llvm.ptr
    %32 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_18 = arith.constant 288 : i32
    %33 = arith.addi %32, %c288_i32_18 : i32
    %c8_i32 = arith.constant 8 : i32
    %34 = arith.addi %33, %c8_i32 : i32
    %c0_i64_19 = arith.constant 0 : i64
    %c0_i64_20 = arith.constant 0 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c0_i64_20 : i64
    %37 = llvm.getelementptr %17[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_19, %37 : i64, !llvm.ptr
    %38 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_21 = arith.constant 0 : i64
    %c288_i64 = arith.constant 288 : i64
    %39 = arith.extui %38 : i32 to i64
    %40 = arith.addi %39, %c288_i64 : i64
    %41 = llvm.getelementptr %17[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_21, %41 : i64, !llvm.ptr
    %42 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32 = arith.constant 136 : i32
    %43 = arith.addi %42, %c136_i32 : i32
    %c24_i32_22 = arith.constant 24 : i32
    %44 = arith.addi %43, %c24_i32_22 : i32
    %c0_i64_23 = arith.constant 0 : i64
    %c0_i64_24 = arith.constant 0 : i64
    %45 = arith.extui %44 : i32 to i64
    %46 = arith.addi %45, %c0_i64_24 : i64
    %47 = llvm.getelementptr %17[%46] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_23, %47 : i64, !llvm.ptr
    %48 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_25 = arith.constant 136 : i32
    %49 = arith.addi %48, %c136_i32_25 : i32
    %c16_i32_26 = arith.constant 16 : i32
    %50 = arith.addi %49, %c16_i32_26 : i32
    %c0_i64_27 = arith.constant 0 : i64
    %c0_i64_28 = arith.constant 0 : i64
    %51 = arith.extui %50 : i32 to i64
    %52 = arith.addi %51, %c0_i64_28 : i64
    %53 = llvm.getelementptr %17[%52] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_27, %53 : i64, !llvm.ptr
    %54 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_29 = arith.constant 136 : i32
    %55 = arith.addi %54, %c136_i32_29 : i32
    %c8_i32_30 = arith.constant 8 : i32
    %56 = arith.addi %55, %c8_i32_30 : i32
    %c0_i64_31 = arith.constant 0 : i64
    %c0_i64_32 = arith.constant 0 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c0_i64_32 : i64
    %59 = llvm.getelementptr %17[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_31, %59 : i64, !llvm.ptr
    %60 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_33 = arith.constant 0 : i64
    %c136_i64 = arith.constant 136 : i64
    %61 = arith.extui %60 : i32 to i64
    %62 = arith.addi %61, %c136_i64 : i64
    %63 = llvm.getelementptr %17[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_33, %63 : i64, !llvm.ptr
    %c0_i32_34 = arith.constant 0 : i32
    llvm.store %c0_i32_34, %5 : i32, !llvm.ptr
    %c0_i32_35 = arith.constant 0 : i32
    llvm.store %c0_i32_35, %6 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb6
    return
  ^bb3:  // pred: ^bb5
    %64 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %65 = arith.addi %64, %c32_i32 : i32
    %66 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_36 = arith.constant 288 : i32
    %67 = arith.addi %66, %c288_i32_36 : i32
    %c24_i32_37 = arith.constant 24 : i32
    %68 = arith.addi %67, %c24_i32_37 : i32
    %c0_i64_38 = arith.constant 0 : i64
    %69 = arith.extui %68 : i32 to i64
    %70 = arith.addi %69, %c0_i64_38 : i64
    %71 = llvm.getelementptr %17[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c0_i64_39 = arith.constant 0 : i64
    %73 = arith.extui %65 : i32 to i64
    %74 = arith.addi %73, %c0_i64_39 : i64
    %75 = llvm.getelementptr %17[%74] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %72, %75 : i64, !llvm.ptr
    %76 = llvm.load %4 : !llvm.ptr -> i32
    %c24_i32_40 = arith.constant 24 : i32
    %77 = arith.addi %76, %c24_i32_40 : i32
    %78 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_41 = arith.constant 288 : i32
    %79 = arith.addi %78, %c288_i32_41 : i32
    %c16_i32_42 = arith.constant 16 : i32
    %80 = arith.addi %79, %c16_i32_42 : i32
    %c0_i64_43 = arith.constant 0 : i64
    %81 = arith.extui %80 : i32 to i64
    %82 = arith.addi %81, %c0_i64_43 : i64
    %83 = llvm.getelementptr %17[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %84 = llvm.load %83 : !llvm.ptr -> i64
    %c0_i64_44 = arith.constant 0 : i64
    %85 = arith.extui %77 : i32 to i64
    %86 = arith.addi %85, %c0_i64_44 : i64
    %87 = llvm.getelementptr %17[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %84, %87 : i64, !llvm.ptr
    %88 = llvm.load %4 : !llvm.ptr -> i32
    %c16_i32_45 = arith.constant 16 : i32
    %89 = arith.addi %88, %c16_i32_45 : i32
    %90 = llvm.load %4 : !llvm.ptr -> i32
    %c296_i32 = arith.constant 296 : i32
    %91 = arith.addi %90, %c296_i32 : i32
    %c0_i64_46 = arith.constant 0 : i64
    %92 = arith.extui %91 : i32 to i64
    %93 = arith.addi %92, %c0_i64_46 : i64
    %94 = llvm.getelementptr %17[%93] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %95 = llvm.load %94 : !llvm.ptr -> i64
    %c0_i64_47 = arith.constant 0 : i64
    %96 = arith.extui %89 : i32 to i64
    %97 = arith.addi %96, %c0_i64_47 : i64
    %98 = llvm.getelementptr %17[%97] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %95, %98 : i64, !llvm.ptr
    %99 = llvm.load %4 : !llvm.ptr -> i32
    %100 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i64_48 = arith.constant 288 : i64
    %101 = arith.extui %100 : i32 to i64
    %102 = arith.addi %101, %c288_i64_48 : i64
    %103 = llvm.getelementptr %17[%102] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %104 = llvm.load %103 : !llvm.ptr -> i64
    %c8_i64 = arith.constant 8 : i64
    %105 = arith.extui %99 : i32 to i64
    %106 = arith.addi %105, %c8_i64 : i64
    %107 = llvm.getelementptr %17[%106] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %104, %107 : i64, !llvm.ptr
    %108 = llvm.load %4 : !llvm.ptr -> i32
    %109 = llvm.load %3 : !llvm.ptr -> i32
    %c92_i64 = arith.constant 92 : i64
    %110 = arith.extui %108 : i32 to i64
    %111 = arith.addi %110, %c92_i64 : i64
    %112 = llvm.getelementptr %17[%111] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %109, %112 : i32, !llvm.ptr
    %113 = llvm.load %4 : !llvm.ptr -> i32
    %114 = llvm.load %2 : !llvm.ptr -> i32
    %c88_i64 = arith.constant 88 : i64
    %115 = arith.extui %113 : i32 to i64
    %116 = arith.addi %115, %c88_i64 : i64
    %117 = llvm.getelementptr %17[%116] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %114, %117 : i32, !llvm.ptr
    %118 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_49 = arith.constant 0 : i32
    %c80_i64 = arith.constant 80 : i64
    %119 = arith.extui %118 : i32 to i64
    %120 = arith.addi %119, %c80_i64 : i64
    %121 = llvm.getelementptr %17[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %122 = arith.trunci %c0_i32_49 : i32 to i8
    llvm.store %122, %121 : i8, !llvm.ptr
    %123 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_50 = arith.constant 0 : i64
    %c40_i64 = arith.constant 40 : i64
    %124 = arith.extui %123 : i32 to i64
    %125 = arith.addi %124, %c40_i64 : i64
    %126 = llvm.getelementptr %17[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_50, %126 : i64, !llvm.ptr
    %127 = llvm.load %4 : !llvm.ptr -> i32
    %128 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %129 = arith.extui %127 : i32 to i64
    %130 = arith.addi %129, %c4_i64 : i64
    %131 = llvm.getelementptr %17[%130] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %128, %131 : i32, !llvm.ptr
    %132 = llvm.load %4 : !llvm.ptr -> i32
    %133 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_51 = arith.constant 0 : i64
    %134 = arith.extui %132 : i32 to i64
    %135 = arith.addi %134, %c0_i64_51 : i64
    %136 = llvm.getelementptr %17[%135] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %133, %136 : i32, !llvm.ptr
    %137 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64_52 = arith.constant 8 : i64
    %138 = arith.extui %137 : i32 to i64
    %139 = arith.addi %138, %c8_i64_52 : i64
    %140 = llvm.getelementptr %17[%139] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %141 = llvm.load %140 : !llvm.ptr -> i32
    llvm.store %141, %5 : i32, !llvm.ptr
    %c0_i32_53 = arith.constant 0 : i32
    %142 = arith.cmpi eq, %141, %c0_i32_53 : i32
    %143 = arith.extui %142 : i1 to i32
    %c0_i32_54 = arith.constant 0 : i32
    %144 = arith.cmpi ne, %143, %c0_i32_54 : i32
    cf.cond_br %144, ^bb9, ^bb10
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %145 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_55 = arith.constant 288 : i32
    %146 = arith.addi %145, %c288_i32_55 : i32
    %147 = llvm.load %5 : !llvm.ptr -> i32
    %148 = arith.addi %146, %147 : i32
    llvm.store %148, %7 : i32, !llvm.ptr
    %149 = llvm.load %7 : !llvm.ptr -> i32
    %c0_i64_56 = arith.constant 0 : i64
    %150 = arith.extui %149 : i32 to i64
    %151 = arith.addi %150, %c0_i64_56 : i64
    %152 = llvm.getelementptr %17[%151] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %153 = llvm.load %152 : !llvm.ptr -> i64
    llvm.store %153, %8 : i64, !llvm.ptr
    %154 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_57 = arith.constant 136 : i32
    %155 = arith.addi %154, %c136_i32_57 : i32
    %156 = llvm.load %5 : !llvm.ptr -> i32
    %157 = arith.addi %155, %156 : i32
    %c0_i64_58 = arith.constant 0 : i64
    %158 = arith.extui %157 : i32 to i64
    %159 = arith.addi %158, %c0_i64_58 : i64
    %160 = llvm.getelementptr %17[%159] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %161 = llvm.load %160 : !llvm.ptr -> i64
    %162 = arith.addi %153, %161 : i64
    llvm.store %162, %9 : i64, !llvm.ptr
    %163 = llvm.load %6 : !llvm.ptr -> i32
    %164 = arith.extui %163 : i32 to i64
    %c1_i64_59 = arith.constant 1 : i64
    %165 = arith.andi %164, %c1_i64_59 : i64
    %166 = arith.addi %162, %165 : i64
    llvm.store %166, %10 : i64, !llvm.ptr
    %c0_i64_60 = arith.constant 0 : i64
    %167 = arith.extui %148 : i32 to i64
    %168 = arith.addi %167, %c0_i64_60 : i64
    %169 = llvm.getelementptr %17[%168] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %166, %169 : i64, !llvm.ptr
    %170 = llvm.load %9 : !llvm.ptr -> i64
    %171 = llvm.load %8 : !llvm.ptr -> i64
    %172 = arith.cmpi ult, %170, %171 : i64
    %173 = arith.extui %172 : i1 to i64
    %174 = arith.trunci %173 : i64 to i32
    %175 = llvm.load %10 : !llvm.ptr -> i64
    %176 = llvm.load %9 : !llvm.ptr -> i64
    %177 = arith.cmpi ult, %175, %176 : i64
    %178 = arith.extui %177 : i1 to i64
    %179 = arith.trunci %178 : i64 to i32
    %180 = arith.ori %174, %179 : i32
    llvm.store %180, %6 : i32, !llvm.ptr
    %181 = llvm.load %5 : !llvm.ptr -> i32
    %c8_i32_61 = arith.constant 8 : i32
    %182 = arith.addi %181, %c8_i32_61 : i32
    llvm.store %182, %5 : i32, !llvm.ptr
    %c32_i32_62 = arith.constant 32 : i32
    %183 = arith.cmpi eq, %182, %c32_i32_62 : i32
    %184 = arith.extui %183 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %185 = arith.xori %184, %c-1_i32 : i32
    %c0_i32_63 = arith.constant 0 : i32
    %186 = arith.cmpi ne, %185, %c0_i32_63 : i32
    cf.cond_br %186, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  ^bb6:  // 3 preds: ^bb9, ^bb11, ^bb14
    %187 = llvm.load %1 : !llvm.ptr -> i32
    call @f96(%arg0, %187) : (!llvm.ptr, i32) -> ()
    %188 = llvm.load %1 : !llvm.ptr -> i32
    call @f97(%arg0, %188) : (!llvm.ptr, i32) -> ()
    %189 = llvm.load %4 : !llvm.ptr -> i32
    %c320_i32_64 = arith.constant 320 : i32
    %190 = arith.addi %189, %c320_i32_64 : i32
    llvm.store %190, %14 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb7:  // pred: ^bb20
    %191 = llvm.load %6 : !llvm.ptr -> i32
    %192 = llvm.load %4 : !llvm.ptr -> i32
    %c144_i64 = arith.constant 144 : i64
    %193 = arith.extui %192 : i32 to i64
    %194 = arith.addi %193, %c144_i64 : i64
    %195 = llvm.getelementptr %17[%194] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %196 = llvm.load %195 : !llvm.ptr -> i32
    call @f126(%arg0, %191, %196) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb8:  // pred: ^bb18
    %197 = llvm.load %5 : !llvm.ptr -> i32
    %198 = llvm.load %4 : !llvm.ptr -> i32
    %c144_i64_65 = arith.constant 144 : i64
    %199 = arith.extui %198 : i32 to i64
    %200 = arith.addi %199, %c144_i64_65 : i64
    %201 = llvm.getelementptr %17[%200] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %202 = llvm.load %201 : !llvm.ptr -> i32
    call @f126(%arg0, %197, %202) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb9:  // pred: ^bb3
    %203 = llvm.load %4 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c136_i64_66 = arith.constant 136 : i64
    %204 = arith.extui %203 : i32 to i64
    %205 = arith.addi %204, %c136_i64_66 : i64
    %206 = llvm.getelementptr %17[%205] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c2_i32, %206 : i32, !llvm.ptr
    %207 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_67 = arith.constant 136 : i32
    %208 = arith.addi %207, %c136_i32_67 : i32
    call @f7(%arg0, %208) : (!llvm.ptr, i32) -> ()
    %209 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i64_68 = arith.constant 1 : i64
    %c8_i64_69 = arith.constant 8 : i64
    %210 = arith.extui %209 : i32 to i64
    %211 = arith.addi %210, %c8_i64_69 : i64
    %212 = llvm.getelementptr %17[%211] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_68, %212 : i64, !llvm.ptr
    %213 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i64_70 = arith.constant 1 : i64
    %c0_i64_71 = arith.constant 0 : i64
    %214 = arith.extui %213 : i32 to i64
    %215 = arith.addi %214, %c0_i64_71 : i64
    %216 = llvm.getelementptr %17[%215] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_70, %216 : i64, !llvm.ptr
    cf.br ^bb6
  ^bb10:  // pred: ^bb3
    %217 = llvm.load %5 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %218 = arith.cmpi ult, %217, %c4_i32 : i32
    %219 = arith.extui %218 : i1 to i32
    %c0_i32_72 = arith.constant 0 : i32
    %220 = arith.cmpi ne, %219, %c0_i32_72 : i32
    cf.cond_br %220, ^bb11, ^bb12
  ^bb11:  // 2 preds: ^bb10, ^bb13
    %221 = llvm.load %4 : !llvm.ptr -> i32
    %c2_i32_73 = arith.constant 2 : i32
    %c136_i64_74 = arith.constant 136 : i64
    %222 = arith.extui %221 : i32 to i64
    %223 = arith.addi %222, %c136_i64_74 : i64
    %224 = llvm.getelementptr %17[%223] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c2_i32_73, %224 : i32, !llvm.ptr
    %225 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_75 = arith.constant 136 : i32
    %226 = arith.addi %225, %c136_i32_75 : i32
    call @f7(%arg0, %226) : (!llvm.ptr, i32) -> ()
    %227 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i64_76 = arith.constant 1 : i64
    %c8_i64_77 = arith.constant 8 : i64
    %228 = arith.extui %227 : i32 to i64
    %229 = arith.addi %228, %c8_i64_77 : i64
    %230 = llvm.getelementptr %17[%229] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_76, %230 : i64, !llvm.ptr
    %231 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i64_78 = arith.constant 1 : i64
    %c0_i64_79 = arith.constant 0 : i64
    %232 = arith.extui %231 : i32 to i64
    %233 = arith.addi %232, %c0_i64_79 : i64
    %234 = llvm.getelementptr %17[%233] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_78, %234 : i64, !llvm.ptr
    cf.br ^bb6
  ^bb12:  // pred: ^bb10
    %235 = llvm.load %5 : !llvm.ptr -> i32
    %c-4_i32 = arith.constant -4 : i32
    %236 = arith.addi %235, %c-4_i32 : i32
    llvm.store %236, %7 : i32, !llvm.ptr
    %237 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_80 = arith.constant 4 : i64
    %238 = arith.extui %237 : i32 to i64
    %239 = arith.addi %238, %c4_i64_80 : i64
    %240 = llvm.getelementptr %17[%239] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %241 = llvm.load %240 : !llvm.ptr -> i32
    llvm.store %241, %6 : i32, !llvm.ptr
    %c4_i32_81 = arith.constant 4 : i32
    %242 = arith.addi %241, %c4_i32_81 : i32
    llvm.store %242, %3 : i32, !llvm.ptr
    %243 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i64_82 = arith.constant 0 : i64
    %244 = arith.extui %243 : i32 to i64
    %245 = arith.addi %244, %c0_i64_82 : i64
    %246 = llvm.getelementptr %17[%245] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %247 = llvm.load %246 : !llvm.ptr -> i32
    llvm.store %247, %5 : i32, !llvm.ptr
    %c24_i32_83 = arith.constant 24 : i32
    %c31_i32 = arith.constant 31 : i32
    %248 = arith.cmpi ule, %c24_i32_83, %c31_i32 : i32
    %249 = scf.if %248 -> (i32) {
      %997 = arith.shli %247, %c24_i32_83 : i32
      scf.yield %997 : i32
    } else {
      %c0_i32_298 = arith.constant 0 : i32
      scf.yield %c0_i32_298 : i32
    }
    %250 = llvm.load %5 : !llvm.ptr -> i32
    %c65280_i32 = arith.constant 65280 : i32
    %251 = arith.andi %250, %c65280_i32 : i32
    %c8_i32_84 = arith.constant 8 : i32
    %c31_i32_85 = arith.constant 31 : i32
    %252 = arith.cmpi ule, %c8_i32_84, %c31_i32_85 : i32
    %253 = scf.if %252 -> (i32) {
      %997 = arith.shli %251, %c8_i32_84 : i32
      scf.yield %997 : i32
    } else {
      %c0_i32_298 = arith.constant 0 : i32
      scf.yield %c0_i32_298 : i32
    }
    %254 = arith.ori %249, %253 : i32
    %255 = llvm.load %5 : !llvm.ptr -> i32
    %c8_i32_86 = arith.constant 8 : i32
    %c31_i32_87 = arith.constant 31 : i32
    %256 = arith.cmpi ule, %c8_i32_86, %c31_i32_87 : i32
    %257 = scf.if %256 -> (i32) {
      %997 = arith.shrui %255, %c8_i32_86 : i32
      scf.yield %997 : i32
    } else {
      %c0_i32_298 = arith.constant 0 : i32
      scf.yield %c0_i32_298 : i32
    }
    %c65280_i32_88 = arith.constant 65280 : i32
    %258 = arith.andi %257, %c65280_i32_88 : i32
    %259 = llvm.load %5 : !llvm.ptr -> i32
    %c24_i32_89 = arith.constant 24 : i32
    %c31_i32_90 = arith.constant 31 : i32
    %260 = arith.cmpi ule, %c24_i32_89, %c31_i32_90 : i32
    %261 = scf.if %260 -> (i32) {
      %997 = arith.shrui %259, %c24_i32_89 : i32
      scf.yield %997 : i32
    } else {
      %c0_i32_298 = arith.constant 0 : i32
      scf.yield %c0_i32_298 : i32
    }
    %262 = arith.ori %258, %261 : i32
    %263 = arith.ori %254, %262 : i32
    llvm.store %263, %5 : i32, !llvm.ptr
    %c1068876235_i32 = arith.constant 1068876235 : i32
    %264 = arith.cmpi eq, %263, %c1068876235_i32 : i32
    %265 = arith.extui %264 : i1 to i32
    %c0_i32_91 = arith.constant 0 : i32
    %266 = arith.cmpi ne, %265, %c0_i32_91 : i32
    cf.cond_br %266, ^bb15, ^bb16
  ^bb13:  // pred: ^bb16
    %267 = llvm.load %4 : !llvm.ptr -> i32
    %c2_i32_92 = arith.constant 2 : i32
    %c96_i64 = arith.constant 96 : i64
    %268 = arith.extui %267 : i32 to i64
    %269 = arith.addi %268, %c96_i64 : i64
    %270 = llvm.getelementptr %17[%269] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c2_i32_92, %270 : i32, !llvm.ptr
    %271 = llvm.load %4 : !llvm.ptr -> i32
    %c96_i32 = arith.constant 96 : i32
    %272 = arith.addi %271, %c96_i32 : i32
    call @f7(%arg0, %272) : (!llvm.ptr, i32) -> ()
    cf.br ^bb11
  ^bb14:  // 6 preds: ^bb19, ^bb22, ^bb23, ^bb25, ^bb26, ^bb30
    %273 = llvm.load %0 : !llvm.ptr -> i32
    %274 = llvm.load %4 : !llvm.ptr -> i32
    %c96_i64_93 = arith.constant 96 : i64
    %275 = arith.extui %274 : i32 to i64
    %276 = arith.addi %275, %c96_i64_93 : i64
    %277 = llvm.getelementptr %17[%276] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %278 = llvm.load %277 : !llvm.ptr -> i64
    %c0_i64_94 = arith.constant 0 : i64
    %279 = arith.extui %273 : i32 to i64
    %280 = arith.addi %279, %c0_i64_94 : i64
    %281 = llvm.getelementptr %17[%280] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %278, %281 : i64, !llvm.ptr
    %282 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_95 = arith.constant 8 : i32
    %283 = arith.addi %282, %c8_i32_95 : i32
    %284 = llvm.load %4 : !llvm.ptr -> i32
    %c96_i32_96 = arith.constant 96 : i32
    %285 = arith.addi %284, %c96_i32_96 : i32
    %c8_i32_97 = arith.constant 8 : i32
    %286 = arith.addi %285, %c8_i32_97 : i32
    %c0_i64_98 = arith.constant 0 : i64
    %287 = arith.extui %286 : i32 to i64
    %288 = arith.addi %287, %c0_i64_98 : i64
    %289 = llvm.getelementptr %17[%288] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %290 = llvm.load %289 : !llvm.ptr -> i64
    %c0_i64_99 = arith.constant 0 : i64
    %291 = arith.extui %283 : i32 to i64
    %292 = arith.addi %291, %c0_i64_99 : i64
    %293 = llvm.getelementptr %17[%292] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %290, %293 : i64, !llvm.ptr
    cf.br ^bb6
  ^bb15:  // pred: ^bb12
    %294 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_100 = arith.constant 136 : i32
    %295 = arith.addi %294, %c136_i32_100 : i32
    %c1049374_i32 = arith.constant 1049374 : i32
    %c10_i32 = arith.constant 10 : i32
    call @f31(%arg0, %295, %c1049374_i32, %c10_i32) : (!llvm.ptr, i32, i32, i32) -> ()
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    llvm.store %c-2147483648_i32, %5 : i32, !llvm.ptr
    %296 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i64_101 = arith.constant 136 : i64
    %297 = arith.extui %296 : i32 to i64
    %298 = arith.addi %297, %c136_i64_101 : i64
    %299 = llvm.getelementptr %17[%298] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %300 = llvm.load %299 : !llvm.ptr -> i32
    %c-2147483648_i32_102 = arith.constant -2147483648 : i32
    %301 = arith.cmpi eq, %300, %c-2147483648_i32_102 : i32
    %302 = arith.extui %301 : i1 to i32
    %c0_i32_103 = arith.constant 0 : i32
    %303 = arith.cmpi ne, %302, %c0_i32_103 : i32
    cf.cond_br %303, ^bb24, ^bb25
  ^bb16:  // pred: ^bb12
    %304 = llvm.load %5 : !llvm.ptr -> i32
    %c-2088634998_i32 = arith.constant -2088634998 : i32
    %305 = arith.cmpi eq, %304, %c-2088634998_i32 : i32
    %306 = arith.extui %305 : i1 to i32
    %c-1_i32_104 = arith.constant -1 : i32
    %307 = arith.xori %306, %c-1_i32_104 : i32
    %c0_i32_105 = arith.constant 0 : i32
    %308 = arith.cmpi ne, %307, %c0_i32_105 : i32
    cf.cond_br %308, ^bb13, ^bb17
  ^bb17:  // pred: ^bb16
    %309 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_106 = arith.constant 136 : i32
    %310 = arith.addi %309, %c136_i32_106 : i32
    %c1049368_i32 = arith.constant 1049368 : i32
    %c6_i32 = arith.constant 6 : i32
    call @f31(%arg0, %310, %c1049368_i32, %c6_i32) : (!llvm.ptr, i32, i32, i32) -> ()
    %311 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i64_107 = arith.constant 136 : i64
    %312 = arith.extui %311 : i32 to i64
    %313 = arith.addi %312, %c136_i64_107 : i64
    %314 = llvm.getelementptr %17[%313] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %315 = llvm.load %314 : !llvm.ptr -> i32
    %c-2147483648_i32_108 = arith.constant -2147483648 : i32
    %316 = arith.cmpi eq, %315, %c-2147483648_i32_108 : i32
    %317 = arith.extui %316 : i1 to i32
    %c0_i32_109 = arith.constant 0 : i32
    %318 = arith.cmpi ne, %317, %c0_i32_109 : i32
    cf.cond_br %318, ^bb18, ^bb19
  ^bb18:  // pred: ^bb17
    %319 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_110 = arith.constant 136 : i32
    %320 = arith.addi %319, %c136_i32_110 : i32
    call @f1(%arg0, %320) : (!llvm.ptr, i32) -> ()
    %321 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_111 = arith.constant 136 : i32
    %322 = arith.addi %321, %c136_i32_111 : i32
    %c0_i32_112 = arith.constant 0 : i32
    %c0_i32_113 = arith.constant 0 : i32
    call @f79(%arg0, %322, %c0_i32_112, %c0_i32_113) : (!llvm.ptr, i32, i32, i32) -> ()
    %323 = llvm.load %4 : !llvm.ptr -> i32
    %c140_i64 = arith.constant 140 : i64
    %324 = arith.extui %323 : i32 to i64
    %325 = arith.addi %324, %c140_i64 : i64
    %326 = llvm.getelementptr %17[%325] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %327 = llvm.load %326 : !llvm.ptr -> i32
    llvm.store %327, %5 : i32, !llvm.ptr
    %328 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i64_114 = arith.constant 136 : i64
    %329 = arith.extui %328 : i32 to i64
    %330 = arith.addi %329, %c136_i64_114 : i64
    %331 = llvm.getelementptr %17[%330] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %332 = llvm.load %331 : !llvm.ptr -> i32
    %c0_i32_115 = arith.constant 0 : i32
    %333 = arith.cmpi ne, %332, %c0_i32_115 : i32
    cf.cond_br %333, ^bb8, ^bb20
  ^bb19:  // pred: ^bb17
    %334 = llvm.load %4 : !llvm.ptr -> i32
    %c108_i32 = arith.constant 108 : i32
    %335 = arith.addi %334, %c108_i32 : i32
    %336 = llvm.load %4 : !llvm.ptr -> i32
    %c144_i32 = arith.constant 144 : i32
    %337 = arith.addi %336, %c144_i32 : i32
    %c0_i64_116 = arith.constant 0 : i64
    %338 = arith.extui %337 : i32 to i64
    %339 = arith.addi %338, %c0_i64_116 : i64
    %340 = llvm.getelementptr %17[%339] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %341 = llvm.load %340 : !llvm.ptr -> i32
    %c0_i64_117 = arith.constant 0 : i64
    %342 = arith.extui %335 : i32 to i64
    %343 = arith.addi %342, %c0_i64_117 : i64
    %344 = llvm.getelementptr %17[%343] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %341, %344 : i32, !llvm.ptr
    %345 = llvm.load %4 : !llvm.ptr -> i32
    %346 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i64_118 = arith.constant 136 : i64
    %347 = arith.extui %346 : i32 to i64
    %348 = arith.addi %347, %c136_i64_118 : i64
    %349 = llvm.getelementptr %17[%348] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %350 = llvm.load %349 : !llvm.ptr -> i64
    %c100_i64 = arith.constant 100 : i64
    %351 = arith.extui %345 : i32 to i64
    %352 = arith.addi %351, %c100_i64 : i64
    %353 = llvm.getelementptr %17[%352] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %350, %353 : i64, !llvm.ptr
    %354 = llvm.load %4 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %c96_i64_119 = arith.constant 96 : i64
    %355 = arith.extui %354 : i32 to i64
    %356 = arith.addi %355, %c96_i64_119 : i64
    %357 = llvm.getelementptr %17[%356] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i32, %357 : i32, !llvm.ptr
    cf.br ^bb14
  ^bb20:  // pred: ^bb18
    %358 = llvm.load %4 : !llvm.ptr -> i32
    %c144_i64_120 = arith.constant 144 : i64
    %359 = arith.extui %358 : i32 to i64
    %360 = arith.addi %359, %c144_i64_120 : i64
    %361 = llvm.getelementptr %17[%360] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %362 = llvm.load %361 : !llvm.ptr -> i32
    llvm.store %362, %2 : i32, !llvm.ptr
    %363 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_121 = arith.constant 136 : i32
    %364 = arith.addi %363, %c136_i32_121 : i32
    %c4_i32_122 = arith.constant 4 : i32
    %c0_i32_123 = arith.constant 0 : i32
    call @f78(%arg0, %364, %c4_i32_122, %c0_i32_123) : (!llvm.ptr, i32, i32, i32) -> ()
    %365 = llvm.load %4 : !llvm.ptr -> i32
    %c140_i64_124 = arith.constant 140 : i64
    %366 = arith.extui %365 : i32 to i64
    %367 = arith.addi %366, %c140_i64_124 : i64
    %368 = llvm.getelementptr %17[%367] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %369 = llvm.load %368 : !llvm.ptr -> i32
    llvm.store %369, %6 : i32, !llvm.ptr
    %370 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i64_125 = arith.constant 136 : i64
    %371 = arith.extui %370 : i32 to i64
    %372 = arith.addi %371, %c136_i64_125 : i64
    %373 = llvm.getelementptr %17[%372] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %374 = llvm.load %373 : !llvm.ptr -> i32
    %c0_i32_126 = arith.constant 0 : i32
    %375 = arith.cmpi ne, %374, %c0_i32_126 : i32
    cf.cond_br %375, ^bb7, ^bb21
  ^bb21:  // pred: ^bb20
    %376 = llvm.load %4 : !llvm.ptr -> i32
    %c144_i64_127 = arith.constant 144 : i64
    %377 = arith.extui %376 : i32 to i64
    %378 = arith.addi %377, %c144_i64_127 : i64
    %379 = llvm.getelementptr %17[%378] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %380 = llvm.load %379 : !llvm.ptr -> i32
    llvm.store %380, %11 : i32, !llvm.ptr
    %381 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_128 = arith.constant 136 : i32
    %382 = arith.addi %381, %c136_i32_128 : i32
    %c8_i32_129 = arith.constant 8 : i32
    %383 = arith.addi %382, %c8_i32_129 : i32
    llvm.store %383, %12 : i32, !llvm.ptr
    %c0_i32_130 = arith.constant 0 : i32
    %c0_i64_131 = arith.constant 0 : i64
    %384 = arith.extui %383 : i32 to i64
    %385 = arith.addi %384, %c0_i64_131 : i64
    %386 = llvm.getelementptr %17[%385] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_130, %386 : i32, !llvm.ptr
    %387 = llvm.load %4 : !llvm.ptr -> i32
    %388 = llvm.load %2 : !llvm.ptr -> i32
    %c140_i64_132 = arith.constant 140 : i64
    %389 = arith.extui %387 : i32 to i64
    %390 = arith.addi %389, %c140_i64_132 : i64
    %391 = llvm.getelementptr %17[%390] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %388, %391 : i32, !llvm.ptr
    %392 = llvm.load %4 : !llvm.ptr -> i32
    %393 = llvm.load %5 : !llvm.ptr -> i32
    %c136_i64_133 = arith.constant 136 : i64
    %394 = arith.extui %392 : i32 to i64
    %395 = arith.addi %394, %c136_i64_133 : i64
    %396 = llvm.getelementptr %17[%395] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %393, %396 : i32, !llvm.ptr
    %397 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_134 = arith.constant 0 : i32
    %c156_i64 = arith.constant 156 : i64
    %398 = arith.extui %397 : i32 to i64
    %399 = arith.addi %398, %c156_i64 : i64
    %400 = llvm.getelementptr %17[%399] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_134, %400 : i32, !llvm.ptr
    %401 = llvm.load %4 : !llvm.ptr -> i32
    %402 = llvm.load %11 : !llvm.ptr -> i32
    %c152_i64 = arith.constant 152 : i64
    %403 = arith.extui %401 : i32 to i64
    %404 = arith.addi %403, %c152_i64 : i64
    %405 = llvm.getelementptr %17[%404] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %402, %405 : i32, !llvm.ptr
    %406 = llvm.load %4 : !llvm.ptr -> i32
    %407 = llvm.load %6 : !llvm.ptr -> i32
    %c148_i64 = arith.constant 148 : i64
    %408 = arith.extui %406 : i32 to i64
    %409 = arith.addi %408, %c148_i64 : i64
    %410 = llvm.getelementptr %17[%409] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %407, %410 : i32, !llvm.ptr
    %411 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_135 = arith.constant 288 : i32
    %412 = arith.addi %411, %c288_i32_135 : i32
    %c8_i32_136 = arith.constant 8 : i32
    %413 = arith.addi %412, %c8_i32_136 : i32
    %c0_i32_137 = arith.constant 0 : i32
    %c0_i64_138 = arith.constant 0 : i64
    %414 = arith.extui %413 : i32 to i64
    %415 = arith.addi %414, %c0_i64_138 : i64
    %416 = llvm.getelementptr %17[%415] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_137, %416 : i32, !llvm.ptr
    %417 = llvm.load %4 : !llvm.ptr -> i32
    %418 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i64_139 = arith.constant 136 : i64
    %419 = arith.extui %418 : i32 to i64
    %420 = arith.addi %419, %c136_i64_139 : i64
    %421 = llvm.getelementptr %17[%420] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %422 = llvm.load %421 : !llvm.ptr -> i64
    %c288_i64_140 = arith.constant 288 : i64
    %423 = arith.extui %417 : i32 to i64
    %424 = arith.addi %423, %c288_i64_140 : i64
    %425 = llvm.getelementptr %17[%424] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %422, %425 : i64, !llvm.ptr
    %426 = llvm.load %4 : !llvm.ptr -> i32
    %c148_i32 = arith.constant 148 : i32
    %427 = arith.addi %426, %c148_i32 : i32
    llvm.store %427, %5 : i32, !llvm.ptr
    call @f82(%arg0, %427) : (!llvm.ptr, i32) -> ()
    %428 = llvm.load %5 : !llvm.ptr -> i32
    call @f84(%arg0, %428) : (!llvm.ptr, i32) -> ()
    %429 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32 = arith.constant 256 : i32
    %430 = arith.addi %429, %c256_i32 : i32
    %431 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_141 = arith.constant 288 : i32
    %432 = arith.addi %431, %c288_i32_141 : i32
    call @f75(%arg0, %430, %432) : (!llvm.ptr, i32, i32) -> ()
    %433 = llvm.load %4 : !llvm.ptr -> i32
    %c260_i64 = arith.constant 260 : i64
    %434 = arith.extui %433 : i32 to i64
    %435 = arith.addi %434, %c260_i64 : i64
    %436 = llvm.getelementptr %17[%435] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %437 = llvm.load %436 : !llvm.ptr -> i32
    %438 = llvm.load %4 : !llvm.ptr -> i32
    %c264_i64 = arith.constant 264 : i64
    %439 = arith.extui %438 : i32 to i64
    %440 = arith.addi %439, %c264_i64 : i64
    %441 = llvm.getelementptr %17[%440] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %442 = llvm.load %441 : !llvm.ptr -> i32
    %443 = llvm.load %3 : !llvm.ptr -> i32
    %444 = llvm.load %7 : !llvm.ptr -> i32
    %445 = call @f93(%arg0, %437, %442, %443, %444) : (!llvm.ptr, i32, i32, i32, i32) -> i32
    llvm.store %445, %5 : i32, !llvm.ptr
    %446 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_142 = arith.constant 256 : i32
    %447 = arith.addi %446, %c256_i32_142 : i32
    call @f96(%arg0, %447) : (!llvm.ptr, i32) -> ()
    %448 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_143 = arith.constant 256 : i32
    %449 = arith.addi %448, %c256_i32_143 : i32
    call @f97(%arg0, %449) : (!llvm.ptr, i32) -> ()
    %450 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i32_144 = arith.constant 0 : i32
    %451 = arith.cmpi eq, %450, %c0_i32_144 : i32
    %452 = arith.extui %451 : i1 to i32
    %c0_i32_145 = arith.constant 0 : i32
    %453 = arith.cmpi ne, %452, %c0_i32_145 : i32
    cf.cond_br %453, ^bb22, ^bb23
  ^bb22:  // pred: ^bb21
    %454 = llvm.load %4 : !llvm.ptr -> i32
    %c-2147483645_i32 = arith.constant -2147483645 : i32
    %c112_i64 = arith.constant 112 : i64
    %455 = arith.extui %454 : i32 to i64
    %456 = arith.addi %455, %c112_i64 : i64
    %457 = llvm.getelementptr %17[%456] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c-2147483645_i32, %457 : i32, !llvm.ptr
    %458 = llvm.load %4 : !llvm.ptr -> i32
    %c112_i32 = arith.constant 112 : i32
    %459 = arith.addi %458, %c112_i32 : i32
    call @f32(%arg0, %459) : (!llvm.ptr, i32) -> ()
    %460 = llvm.load %4 : !llvm.ptr -> i32
    %c1_i64_146 = arith.constant 1 : i64
    %c104_i64 = arith.constant 104 : i64
    %461 = arith.extui %460 : i32 to i64
    %462 = arith.addi %461, %c104_i64 : i64
    %463 = llvm.getelementptr %17[%462] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_146, %463 : i64, !llvm.ptr
    %464 = llvm.load %4 : !llvm.ptr -> i32
    %c1_i64_147 = arith.constant 1 : i64
    %c96_i64_148 = arith.constant 96 : i64
    %465 = arith.extui %464 : i32 to i64
    %466 = arith.addi %465, %c96_i64_148 : i64
    %467 = llvm.getelementptr %17[%466] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_147, %467 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb23:  // pred: ^bb21
    %468 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_149 = arith.constant 136 : i32
    %469 = arith.addi %468, %c136_i32_149 : i32
    %c24_i32_150 = arith.constant 24 : i32
    %470 = arith.addi %469, %c24_i32_150 : i32
    %471 = llvm.load %4 : !llvm.ptr -> i32
    %c40_i32 = arith.constant 40 : i32
    %472 = arith.addi %471, %c40_i32 : i32
    %473 = llvm.load %4 : !llvm.ptr -> i32
    %474 = call @f2(%arg0, %472, %473) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %474, %5 : i32, !llvm.ptr
    %c24_i32_151 = arith.constant 24 : i32
    %475 = arith.addi %474, %c24_i32_151 : i32
    %c0_i64_152 = arith.constant 0 : i64
    %476 = arith.extui %475 : i32 to i64
    %477 = arith.addi %476, %c0_i64_152 : i64
    %478 = llvm.getelementptr %17[%477] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %479 = llvm.load %478 : !llvm.ptr -> i64
    %c0_i64_153 = arith.constant 0 : i64
    %480 = arith.extui %470 : i32 to i64
    %481 = arith.addi %480, %c0_i64_153 : i64
    %482 = llvm.getelementptr %17[%481] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %479, %482 : i64, !llvm.ptr
    %483 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_154 = arith.constant 136 : i32
    %484 = arith.addi %483, %c136_i32_154 : i32
    %c16_i32_155 = arith.constant 16 : i32
    %485 = arith.addi %484, %c16_i32_155 : i32
    %486 = llvm.load %5 : !llvm.ptr -> i32
    %c16_i32_156 = arith.constant 16 : i32
    %487 = arith.addi %486, %c16_i32_156 : i32
    %c0_i64_157 = arith.constant 0 : i64
    %488 = arith.extui %487 : i32 to i64
    %489 = arith.addi %488, %c0_i64_157 : i64
    %490 = llvm.getelementptr %17[%489] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %491 = llvm.load %490 : !llvm.ptr -> i64
    %c0_i64_158 = arith.constant 0 : i64
    %492 = arith.extui %485 : i32 to i64
    %493 = arith.addi %492, %c0_i64_158 : i64
    %494 = llvm.getelementptr %17[%493] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %491, %494 : i64, !llvm.ptr
    %495 = llvm.load %12 : !llvm.ptr -> i32
    %496 = llvm.load %5 : !llvm.ptr -> i32
    %c8_i32_159 = arith.constant 8 : i32
    %497 = arith.addi %496, %c8_i32_159 : i32
    %c0_i64_160 = arith.constant 0 : i64
    %498 = arith.extui %497 : i32 to i64
    %499 = arith.addi %498, %c0_i64_160 : i64
    %500 = llvm.getelementptr %17[%499] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %501 = llvm.load %500 : !llvm.ptr -> i64
    %c0_i64_161 = arith.constant 0 : i64
    %502 = arith.extui %495 : i32 to i64
    %503 = arith.addi %502, %c0_i64_161 : i64
    %504 = llvm.getelementptr %17[%503] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %501, %504 : i64, !llvm.ptr
    %505 = llvm.load %4 : !llvm.ptr -> i32
    %506 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_162 = arith.constant 0 : i64
    %507 = arith.extui %506 : i32 to i64
    %508 = arith.addi %507, %c0_i64_162 : i64
    %509 = llvm.getelementptr %17[%508] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %510 = llvm.load %509 : !llvm.ptr -> i64
    %c136_i64_163 = arith.constant 136 : i64
    %511 = arith.extui %505 : i32 to i64
    %512 = arith.addi %511, %c136_i64_163 : i64
    %513 = llvm.getelementptr %17[%512] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %510, %513 : i64, !llvm.ptr
    %514 = llvm.load %4 : !llvm.ptr -> i32
    %c96_i32_164 = arith.constant 96 : i32
    %515 = arith.addi %514, %c96_i32_164 : i32
    %c4_i32_165 = arith.constant 4 : i32
    %516 = arith.addi %515, %c4_i32_165 : i32
    %517 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_166 = arith.constant 136 : i32
    %518 = arith.addi %517, %c136_i32_166 : i32
    call @f3(%arg0, %516, %518) : (!llvm.ptr, i32, i32) -> ()
    %519 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_167 = arith.constant 0 : i32
    %c96_i64_168 = arith.constant 96 : i64
    %520 = arith.extui %519 : i32 to i64
    %521 = arith.addi %520, %c96_i64_168 : i64
    %522 = llvm.getelementptr %17[%521] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_167, %522 : i32, !llvm.ptr
    cf.br ^bb14
  ^bb24:  // pred: ^bb15
    %523 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_169 = arith.constant 136 : i32
    %524 = arith.addi %523, %c136_i32_169 : i32
    call @f1(%arg0, %524) : (!llvm.ptr, i32) -> ()
    %525 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32_170 = arith.constant 32 : i32
    %526 = arith.cmpi ult, %525, %c32_i32_170 : i32
    %527 = arith.extui %526 : i1 to i32
    %c0_i32_171 = arith.constant 0 : i32
    %528 = arith.cmpi ne, %527, %c0_i32_171 : i32
    cf.cond_br %528, ^bb27, ^bb28
  ^bb25:  // pred: ^bb15
    %529 = llvm.load %4 : !llvm.ptr -> i32
    %c108_i32_172 = arith.constant 108 : i32
    %530 = arith.addi %529, %c108_i32_172 : i32
    %531 = llvm.load %4 : !llvm.ptr -> i32
    %c144_i32_173 = arith.constant 144 : i32
    %532 = arith.addi %531, %c144_i32_173 : i32
    %c0_i64_174 = arith.constant 0 : i64
    %533 = arith.extui %532 : i32 to i64
    %534 = arith.addi %533, %c0_i64_174 : i64
    %535 = llvm.getelementptr %17[%534] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %536 = llvm.load %535 : !llvm.ptr -> i32
    %c0_i64_175 = arith.constant 0 : i64
    %537 = arith.extui %530 : i32 to i64
    %538 = arith.addi %537, %c0_i64_175 : i64
    %539 = llvm.getelementptr %17[%538] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %536, %539 : i32, !llvm.ptr
    %540 = llvm.load %4 : !llvm.ptr -> i32
    %541 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i64_176 = arith.constant 136 : i64
    %542 = arith.extui %541 : i32 to i64
    %543 = arith.addi %542, %c136_i64_176 : i64
    %544 = llvm.getelementptr %17[%543] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %545 = llvm.load %544 : !llvm.ptr -> i64
    %c100_i64_177 = arith.constant 100 : i64
    %546 = arith.extui %540 : i32 to i64
    %547 = arith.addi %546, %c100_i64_177 : i64
    %548 = llvm.getelementptr %17[%547] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %545, %548 : i64, !llvm.ptr
    %549 = llvm.load %4 : !llvm.ptr -> i32
    %c1_i32_178 = arith.constant 1 : i32
    %c96_i64_179 = arith.constant 96 : i64
    %550 = arith.extui %549 : i32 to i64
    %551 = arith.addi %550, %c96_i64_179 : i64
    %552 = llvm.getelementptr %17[%551] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i32_178, %552 : i32, !llvm.ptr
    cf.br ^bb14
  ^bb26:  // 2 preds: ^bb27, ^bb32
    %553 = llvm.load %4 : !llvm.ptr -> i32
    %c192_i32 = arith.constant 192 : i32
    %554 = arith.addi %553, %c192_i32 : i32
    %555 = llvm.load %4 : !llvm.ptr -> i32
    %c156_i32 = arith.constant 156 : i32
    %556 = arith.addi %555, %c156_i32 : i32
    %c0_i64_180 = arith.constant 0 : i64
    %557 = arith.extui %556 : i32 to i64
    %558 = arith.addi %557, %c0_i64_180 : i64
    %559 = llvm.getelementptr %17[%558] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %560 = llvm.load %559 : !llvm.ptr -> i64
    %c0_i64_181 = arith.constant 0 : i64
    %561 = arith.extui %554 : i32 to i64
    %562 = arith.addi %561, %c0_i64_181 : i64
    %563 = llvm.getelementptr %17[%562] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %560, %563 : i64, !llvm.ptr
    %564 = llvm.load %4 : !llvm.ptr -> i32
    %c184_i32 = arith.constant 184 : i32
    %565 = arith.addi %564, %c184_i32 : i32
    %566 = llvm.load %4 : !llvm.ptr -> i32
    %c148_i32_182 = arith.constant 148 : i32
    %567 = arith.addi %566, %c148_i32_182 : i32
    %c0_i64_183 = arith.constant 0 : i64
    %568 = arith.extui %567 : i32 to i64
    %569 = arith.addi %568, %c0_i64_183 : i64
    %570 = llvm.getelementptr %17[%569] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %571 = llvm.load %570 : !llvm.ptr -> i64
    %c0_i64_184 = arith.constant 0 : i64
    %572 = arith.extui %565 : i32 to i64
    %573 = arith.addi %572, %c0_i64_184 : i64
    %574 = llvm.getelementptr %17[%573] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %571, %574 : i64, !llvm.ptr
    %575 = llvm.load %4 : !llvm.ptr -> i32
    %576 = llvm.load %4 : !llvm.ptr -> i32
    %c140_i64_185 = arith.constant 140 : i64
    %577 = arith.extui %576 : i32 to i64
    %578 = arith.addi %577, %c140_i64_185 : i64
    %579 = llvm.getelementptr %17[%578] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %580 = llvm.load %579 : !llvm.ptr -> i64
    %c176_i64 = arith.constant 176 : i64
    %581 = arith.extui %575 : i32 to i64
    %582 = arith.addi %581, %c176_i64 : i64
    %583 = llvm.getelementptr %17[%582] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %580, %583 : i64, !llvm.ptr
    %584 = llvm.load %4 : !llvm.ptr -> i32
    %c176_i32 = arith.constant 176 : i32
    %585 = arith.addi %584, %c176_i32 : i32
    call @f32(%arg0, %585) : (!llvm.ptr, i32) -> ()
    %586 = llvm.load %4 : !llvm.ptr -> i32
    %c1_i64_186 = arith.constant 1 : i64
    %c104_i64_187 = arith.constant 104 : i64
    %587 = arith.extui %586 : i32 to i64
    %588 = arith.addi %587, %c104_i64_187 : i64
    %589 = llvm.getelementptr %17[%588] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_186, %589 : i64, !llvm.ptr
    %590 = llvm.load %4 : !llvm.ptr -> i32
    %c1_i64_188 = arith.constant 1 : i64
    %c96_i64_189 = arith.constant 96 : i64
    %591 = arith.extui %590 : i32 to i64
    %592 = arith.addi %591, %c96_i64_189 : i64
    %593 = llvm.getelementptr %17[%592] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_188, %593 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb27:  // 2 preds: ^bb24, ^bb28
    %594 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_190 = arith.constant 32 : i32
    %c148_i64_191 = arith.constant 148 : i64
    %595 = arith.extui %594 : i32 to i64
    %596 = arith.addi %595, %c148_i64_191 : i64
    %597 = llvm.getelementptr %17[%596] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c32_i32_190, %597 : i32, !llvm.ptr
    %598 = llvm.load %4 : !llvm.ptr -> i32
    %599 = llvm.load %5 : !llvm.ptr -> i32
    %c140_i64_192 = arith.constant 140 : i64
    %600 = arith.extui %598 : i32 to i64
    %601 = arith.addi %600, %c140_i64_192 : i64
    %602 = llvm.getelementptr %17[%601] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %599, %602 : i32, !llvm.ptr
    cf.br ^bb26
  ^bb28:  // pred: ^bb24
    %603 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_193 = arith.constant 288 : i32
    %604 = arith.addi %603, %c288_i32_193 : i32
    %c2_i32_194 = arith.constant 2 : i32
    %605 = arith.addi %604, %c2_i32_194 : i32
    llvm.store %605, %12 : i32, !llvm.ptr
    %606 = llvm.load %3 : !llvm.ptr -> i32
    %c2_i32_195 = arith.constant 2 : i32
    %607 = arith.addi %606, %c2_i32_195 : i32
    %c0_i64_196 = arith.constant 0 : i64
    %608 = arith.extui %607 : i32 to i64
    %609 = arith.addi %608, %c0_i64_196 : i64
    %610 = llvm.getelementptr %17[%609] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %611 = llvm.load %610 : !llvm.ptr -> i8
    %612 = arith.extui %611 : i8 to i32
    %c0_i64_197 = arith.constant 0 : i64
    %613 = arith.extui %605 : i32 to i64
    %614 = arith.addi %613, %c0_i64_197 : i64
    %615 = llvm.getelementptr %17[%614] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %616 = arith.trunci %612 : i32 to i8
    llvm.store %616, %615 : i8, !llvm.ptr
    %617 = llvm.load %6 : !llvm.ptr -> i32
    %c27_i32 = arith.constant 27 : i32
    %618 = arith.addi %617, %c27_i32 : i32
    %c0_i64_198 = arith.constant 0 : i64
    %619 = arith.extui %618 : i32 to i64
    %620 = arith.addi %619, %c0_i64_198 : i64
    %621 = llvm.getelementptr %17[%620] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %622 = llvm.load %621 : !llvm.ptr -> i32
    llvm.store %622, %5 : i32, !llvm.ptr
    %623 = llvm.load %6 : !llvm.ptr -> i32
    %c7_i64 = arith.constant 7 : i64
    %624 = arith.extui %623 : i32 to i64
    %625 = arith.addi %624, %c7_i64 : i64
    %626 = llvm.getelementptr %17[%625] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %627 = llvm.load %626 : !llvm.ptr -> i64
    llvm.store %627, %9 : i64, !llvm.ptr
    %628 = llvm.load %6 : !llvm.ptr -> i32
    %c15_i64 = arith.constant 15 : i64
    %629 = arith.extui %628 : i32 to i64
    %630 = arith.addi %629, %c15_i64 : i64
    %631 = llvm.getelementptr %17[%630] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %632 = llvm.load %631 : !llvm.ptr -> i32
    llvm.store %632, %2 : i32, !llvm.ptr
    %633 = llvm.load %6 : !llvm.ptr -> i32
    %c19_i64 = arith.constant 19 : i64
    %634 = arith.extui %633 : i32 to i64
    %635 = arith.addi %634, %c19_i64 : i64
    %636 = llvm.getelementptr %17[%635] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %637 = llvm.load %636 : !llvm.ptr -> i64
    llvm.store %637, %8 : i64, !llvm.ptr
    %638 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_199 = arith.constant 0 : i64
    %639 = arith.extui %638 : i32 to i64
    %640 = arith.addi %639, %c0_i64_199 : i64
    %641 = llvm.getelementptr %17[%640] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %642 = llvm.load %641 : !llvm.ptr -> i16
    %643 = arith.extui %642 : i16 to i32
    llvm.store %643, %11 : i32, !llvm.ptr
    %644 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_200 = arith.constant 288 : i32
    %645 = arith.addi %644, %c288_i32_200 : i32
    %c31_i32_201 = arith.constant 31 : i32
    %646 = arith.addi %645, %c31_i32_201 : i32
    %647 = llvm.load %6 : !llvm.ptr -> i32
    %c35_i32 = arith.constant 35 : i32
    %648 = arith.addi %647, %c35_i32 : i32
    %c0_i64_202 = arith.constant 0 : i64
    %649 = arith.extui %648 : i32 to i64
    %650 = arith.addi %649, %c0_i64_202 : i64
    %651 = llvm.getelementptr %17[%650] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %652 = llvm.load %651 : !llvm.ptr -> i8
    %653 = arith.extui %652 : i8 to i32
    %c0_i64_203 = arith.constant 0 : i64
    %654 = arith.extui %646 : i32 to i64
    %655 = arith.addi %654, %c0_i64_203 : i64
    %656 = llvm.getelementptr %17[%655] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %657 = arith.trunci %653 : i32 to i8
    llvm.store %657, %656 : i8, !llvm.ptr
    %658 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_204 = arith.constant 288 : i32
    %659 = arith.addi %658, %c288_i32_204 : i32
    %c23_i32 = arith.constant 23 : i32
    %660 = arith.addi %659, %c23_i32 : i32
    %661 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_205 = arith.constant 0 : i64
    %662 = arith.extui %660 : i32 to i64
    %663 = arith.addi %662, %c0_i64_205 : i64
    %664 = llvm.getelementptr %17[%663] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %661, %664 : i32, !llvm.ptr
    %665 = llvm.load %4 : !llvm.ptr -> i32
    %666 = llvm.load %11 : !llvm.ptr -> i32
    %c288_i64_206 = arith.constant 288 : i64
    %667 = arith.extui %665 : i32 to i64
    %668 = arith.addi %667, %c288_i64_206 : i64
    %669 = llvm.getelementptr %17[%668] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %670 = arith.trunci %666 : i32 to i16
    llvm.store %670, %669 : i16, !llvm.ptr
    %671 = llvm.load %4 : !llvm.ptr -> i32
    %672 = llvm.load %6 : !llvm.ptr -> i32
    %c31_i64 = arith.constant 31 : i64
    %673 = arith.extui %672 : i32 to i64
    %674 = arith.addi %673, %c31_i64 : i64
    %675 = llvm.getelementptr %17[%674] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %676 = llvm.load %675 : !llvm.ptr -> i32
    %c315_i64 = arith.constant 315 : i64
    %677 = arith.extui %671 : i32 to i64
    %678 = arith.addi %677, %c315_i64 : i64
    %679 = llvm.getelementptr %17[%678] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %676, %679 : i32, !llvm.ptr
    %680 = llvm.load %4 : !llvm.ptr -> i32
    %681 = llvm.load %8 : !llvm.ptr -> i64
    %c303_i64 = arith.constant 303 : i64
    %682 = arith.extui %680 : i32 to i64
    %683 = arith.addi %682, %c303_i64 : i64
    %684 = llvm.getelementptr %17[%683] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %681, %684 : i64, !llvm.ptr
    %685 = llvm.load %4 : !llvm.ptr -> i32
    %686 = llvm.load %2 : !llvm.ptr -> i32
    %c299_i64 = arith.constant 299 : i64
    %687 = arith.extui %685 : i32 to i64
    %688 = arith.addi %687, %c299_i64 : i64
    %689 = llvm.getelementptr %17[%688] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %686, %689 : i32, !llvm.ptr
    %690 = llvm.load %4 : !llvm.ptr -> i32
    %691 = llvm.load %9 : !llvm.ptr -> i64
    %c291_i64 = arith.constant 291 : i64
    %692 = arith.extui %690 : i32 to i64
    %693 = arith.addi %692, %c291_i64 : i64
    %694 = llvm.getelementptr %17[%693] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %691, %694 : i64, !llvm.ptr
    %695 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_207 = arith.constant 256 : i32
    %696 = arith.addi %695, %c256_i32_207 : i32
    %697 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_208 = arith.constant 288 : i32
    %698 = arith.addi %697, %c288_i32_208 : i32
    call @f4(%arg0, %696, %698) : (!llvm.ptr, i32, i32) -> ()
    %699 = llvm.load %4 : !llvm.ptr -> i32
    %c260_i64_209 = arith.constant 260 : i64
    %700 = arith.extui %699 : i32 to i64
    %701 = arith.addi %700, %c260_i64_209 : i64
    %702 = llvm.getelementptr %17[%701] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %703 = llvm.load %702 : !llvm.ptr -> i32
    %704 = llvm.load %4 : !llvm.ptr -> i32
    %c264_i64_210 = arith.constant 264 : i64
    %705 = arith.extui %704 : i32 to i64
    %706 = arith.addi %705, %c264_i64_210 : i64
    %707 = llvm.getelementptr %17[%706] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %708 = llvm.load %707 : !llvm.ptr -> i32
    %709 = llvm.load %3 : !llvm.ptr -> i32
    %710 = llvm.load %7 : !llvm.ptr -> i32
    %711 = call @f93(%arg0, %703, %708, %709, %710) : (!llvm.ptr, i32, i32, i32, i32) -> i32
    llvm.store %711, %6 : i32, !llvm.ptr
    %712 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_211 = arith.constant 256 : i32
    %713 = arith.addi %712, %c256_i32_211 : i32
    call @f96(%arg0, %713) : (!llvm.ptr, i32) -> ()
    %714 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_212 = arith.constant 256 : i32
    %715 = arith.addi %714, %c256_i32_212 : i32
    call @f97(%arg0, %715) : (!llvm.ptr, i32) -> ()
    %c-2147483645_i32_213 = arith.constant -2147483645 : i32
    llvm.store %c-2147483645_i32_213, %5 : i32, !llvm.ptr
    %716 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i32_214 = arith.constant 0 : i32
    %717 = arith.cmpi eq, %716, %c0_i32_214 : i32
    %718 = arith.extui %717 : i1 to i32
    %c0_i32_215 = arith.constant 0 : i32
    %719 = arith.cmpi ne, %718, %c0_i32_215 : i32
    cf.cond_br %719, ^bb27, ^bb29
  ^bb29:  // pred: ^bb28
    %720 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_216 = arith.constant 256 : i32
    %721 = arith.addi %720, %c256_i32_216 : i32
    %c2_i32_217 = arith.constant 2 : i32
    %722 = arith.addi %721, %c2_i32_217 : i32
    %723 = llvm.load %12 : !llvm.ptr -> i32
    %c0_i64_218 = arith.constant 0 : i64
    %724 = arith.extui %723 : i32 to i64
    %725 = arith.addi %724, %c0_i64_218 : i64
    %726 = llvm.getelementptr %17[%725] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %727 = llvm.load %726 : !llvm.ptr -> i8
    %728 = arith.extui %727 : i8 to i32
    %c0_i64_219 = arith.constant 0 : i64
    %729 = arith.extui %722 : i32 to i64
    %730 = arith.addi %729, %c0_i64_219 : i64
    %731 = llvm.getelementptr %17[%730] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %732 = arith.trunci %728 : i32 to i8
    llvm.store %732, %731 : i8, !llvm.ptr
    %733 = llvm.load %4 : !llvm.ptr -> i32
    %c232_i32 = arith.constant 232 : i32
    %734 = arith.addi %733, %c232_i32 : i32
    %c8_i32_220 = arith.constant 8 : i32
    %735 = arith.addi %734, %c8_i32_220 : i32
    %736 = llvm.load %4 : !llvm.ptr -> i32
    %c303_i32 = arith.constant 303 : i32
    %737 = arith.addi %736, %c303_i32 : i32
    llvm.store %737, %5 : i32, !llvm.ptr
    %c8_i32_221 = arith.constant 8 : i32
    %738 = arith.addi %737, %c8_i32_221 : i32
    %c0_i64_222 = arith.constant 0 : i64
    %739 = arith.extui %738 : i32 to i64
    %740 = arith.addi %739, %c0_i64_222 : i64
    %741 = llvm.getelementptr %17[%740] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %742 = llvm.load %741 : !llvm.ptr -> i64
    llvm.store %742, %9 : i64, !llvm.ptr
    %c0_i64_223 = arith.constant 0 : i64
    %743 = arith.extui %735 : i32 to i64
    %744 = arith.addi %743, %c0_i64_223 : i64
    %745 = llvm.getelementptr %17[%744] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %742, %745 : i64, !llvm.ptr
    %746 = llvm.load %4 : !llvm.ptr -> i32
    %c232_i32_224 = arith.constant 232 : i32
    %747 = arith.addi %746, %c232_i32_224 : i32
    %c16_i32_225 = arith.constant 16 : i32
    %748 = arith.addi %747, %c16_i32_225 : i32
    %749 = llvm.load %5 : !llvm.ptr -> i32
    %c16_i32_226 = arith.constant 16 : i32
    %750 = arith.addi %749, %c16_i32_226 : i32
    %c0_i64_227 = arith.constant 0 : i64
    %751 = arith.extui %750 : i32 to i64
    %752 = arith.addi %751, %c0_i64_227 : i64
    %753 = llvm.getelementptr %17[%752] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %754 = llvm.load %753 : !llvm.ptr -> i8
    %755 = arith.extui %754 : i8 to i32
    llvm.store %755, %6 : i32, !llvm.ptr
    %c0_i64_228 = arith.constant 0 : i64
    %756 = arith.extui %748 : i32 to i64
    %757 = arith.addi %756, %c0_i64_228 : i64
    %758 = llvm.getelementptr %17[%757] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %759 = arith.trunci %755 : i32 to i8
    llvm.store %759, %758 : i8, !llvm.ptr
    %760 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_229 = arith.constant 256 : i32
    %761 = arith.addi %760, %c256_i32_229 : i32
    %c23_i32_230 = arith.constant 23 : i32
    %762 = arith.addi %761, %c23_i32_230 : i32
    %763 = llvm.load %9 : !llvm.ptr -> i64
    %c0_i64_231 = arith.constant 0 : i64
    %764 = arith.extui %762 : i32 to i64
    %765 = arith.addi %764, %c0_i64_231 : i64
    %766 = llvm.getelementptr %17[%765] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %763, %766 : i64, !llvm.ptr
    %767 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_232 = arith.constant 256 : i32
    %768 = arith.addi %767, %c256_i32_232 : i32
    %c31_i32_233 = arith.constant 31 : i32
    %769 = arith.addi %768, %c31_i32_233 : i32
    %770 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i64_234 = arith.constant 0 : i64
    %771 = arith.extui %769 : i32 to i64
    %772 = arith.addi %771, %c0_i64_234 : i64
    %773 = llvm.getelementptr %17[%772] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %774 = arith.trunci %770 : i32 to i8
    llvm.store %774, %773 : i8, !llvm.ptr
    %775 = llvm.load %4 : !llvm.ptr -> i32
    %776 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i64_235 = arith.constant 288 : i64
    %777 = arith.extui %776 : i32 to i64
    %778 = arith.addi %777, %c288_i64_235 : i64
    %779 = llvm.getelementptr %17[%778] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %780 = llvm.load %779 : !llvm.ptr -> i16
    %781 = arith.extui %780 : i16 to i32
    %c256_i64 = arith.constant 256 : i64
    %782 = arith.extui %775 : i32 to i64
    %783 = arith.addi %782, %c256_i64 : i64
    %784 = llvm.getelementptr %17[%783] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %785 = arith.trunci %781 : i32 to i16
    llvm.store %785, %784 : i16, !llvm.ptr
    %786 = llvm.load %4 : !llvm.ptr -> i32
    %787 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_236 = arith.constant 0 : i64
    %788 = arith.extui %787 : i32 to i64
    %789 = arith.addi %788, %c0_i64_236 : i64
    %790 = llvm.getelementptr %17[%789] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %791 = llvm.load %790 : !llvm.ptr -> i64
    llvm.store %791, %9 : i64, !llvm.ptr
    %c232_i64 = arith.constant 232 : i64
    %792 = arith.extui %786 : i32 to i64
    %793 = arith.addi %792, %c232_i64 : i64
    %794 = llvm.getelementptr %17[%793] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %791, %794 : i64, !llvm.ptr
    %795 = llvm.load %4 : !llvm.ptr -> i32
    %796 = llvm.load %4 : !llvm.ptr -> i32
    %c299_i64_237 = arith.constant 299 : i64
    %797 = arith.extui %796 : i32 to i64
    %798 = arith.addi %797, %c299_i64_237 : i64
    %799 = llvm.getelementptr %17[%798] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %800 = llvm.load %799 : !llvm.ptr -> i32
    %c267_i64 = arith.constant 267 : i64
    %801 = arith.extui %795 : i32 to i64
    %802 = arith.addi %801, %c267_i64 : i64
    %803 = llvm.getelementptr %17[%802] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %800, %803 : i32, !llvm.ptr
    %804 = llvm.load %4 : !llvm.ptr -> i32
    %805 = llvm.load %4 : !llvm.ptr -> i32
    %c291_i64_238 = arith.constant 291 : i64
    %806 = arith.extui %805 : i32 to i64
    %807 = arith.addi %806, %c291_i64_238 : i64
    %808 = llvm.getelementptr %17[%807] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %809 = llvm.load %808 : !llvm.ptr -> i64
    %c259_i64 = arith.constant 259 : i64
    %810 = arith.extui %804 : i32 to i64
    %811 = arith.addi %810, %c259_i64 : i64
    %812 = llvm.getelementptr %17[%811] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %809, %812 : i64, !llvm.ptr
    %813 = llvm.load %4 : !llvm.ptr -> i32
    %814 = llvm.load %9 : !llvm.ptr -> i64
    %c271_i64 = arith.constant 271 : i64
    %815 = arith.extui %813 : i32 to i64
    %816 = arith.addi %815, %c271_i64 : i64
    %817 = llvm.getelementptr %17[%816] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %814, %817 : i64, !llvm.ptr
    %818 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_239 = arith.constant 256 : i32
    %819 = arith.addi %818, %c256_i32_239 : i32
    %820 = call @f89(%arg0, %819) : (!llvm.ptr, i32) -> i32
    %c0_i32_240 = arith.constant 0 : i32
    %821 = arith.cmpi ne, %820, %c0_i32_240 : i32
    cf.cond_br %821, ^bb30, ^bb31
  ^bb30:  // 2 preds: ^bb29, ^bb31
    %822 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_241 = arith.constant 288 : i32
    %823 = arith.addi %822, %c288_i32_241 : i32
    %c24_i32_242 = arith.constant 24 : i32
    %824 = arith.addi %823, %c24_i32_242 : i32
    %825 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_243 = arith.constant 256 : i32
    %826 = arith.addi %825, %c256_i32_243 : i32
    %c24_i32_244 = arith.constant 24 : i32
    %827 = arith.addi %826, %c24_i32_244 : i32
    %c0_i64_245 = arith.constant 0 : i64
    %828 = arith.extui %827 : i32 to i64
    %829 = arith.addi %828, %c0_i64_245 : i64
    %830 = llvm.getelementptr %17[%829] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %831 = llvm.load %830 : !llvm.ptr -> i64
    %c0_i64_246 = arith.constant 0 : i64
    %832 = arith.extui %824 : i32 to i64
    %833 = arith.addi %832, %c0_i64_246 : i64
    %834 = llvm.getelementptr %17[%833] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %831, %834 : i64, !llvm.ptr
    %835 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_247 = arith.constant 288 : i32
    %836 = arith.addi %835, %c288_i32_247 : i32
    %c16_i32_248 = arith.constant 16 : i32
    %837 = arith.addi %836, %c16_i32_248 : i32
    %838 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_249 = arith.constant 256 : i32
    %839 = arith.addi %838, %c256_i32_249 : i32
    %c16_i32_250 = arith.constant 16 : i32
    %840 = arith.addi %839, %c16_i32_250 : i32
    %c0_i64_251 = arith.constant 0 : i64
    %841 = arith.extui %840 : i32 to i64
    %842 = arith.addi %841, %c0_i64_251 : i64
    %843 = llvm.getelementptr %17[%842] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %844 = llvm.load %843 : !llvm.ptr -> i64
    %c0_i64_252 = arith.constant 0 : i64
    %845 = arith.extui %837 : i32 to i64
    %846 = arith.addi %845, %c0_i64_252 : i64
    %847 = llvm.getelementptr %17[%846] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %844, %847 : i64, !llvm.ptr
    %848 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_253 = arith.constant 288 : i32
    %849 = arith.addi %848, %c288_i32_253 : i32
    %c8_i32_254 = arith.constant 8 : i32
    %850 = arith.addi %849, %c8_i32_254 : i32
    %851 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_255 = arith.constant 256 : i32
    %852 = arith.addi %851, %c256_i32_255 : i32
    %c8_i32_256 = arith.constant 8 : i32
    %853 = arith.addi %852, %c8_i32_256 : i32
    %c0_i64_257 = arith.constant 0 : i64
    %854 = arith.extui %853 : i32 to i64
    %855 = arith.addi %854, %c0_i64_257 : i64
    %856 = llvm.getelementptr %17[%855] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %857 = llvm.load %856 : !llvm.ptr -> i64
    %c0_i64_258 = arith.constant 0 : i64
    %858 = arith.extui %850 : i32 to i64
    %859 = arith.addi %858, %c0_i64_258 : i64
    %860 = llvm.getelementptr %17[%859] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %857, %860 : i64, !llvm.ptr
    %861 = llvm.load %4 : !llvm.ptr -> i32
    %862 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i64_259 = arith.constant 256 : i64
    %863 = arith.extui %862 : i32 to i64
    %864 = arith.addi %863, %c256_i64_259 : i64
    %865 = llvm.getelementptr %17[%864] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %866 = llvm.load %865 : !llvm.ptr -> i64
    %c288_i64_260 = arith.constant 288 : i64
    %867 = arith.extui %861 : i32 to i64
    %868 = arith.addi %867, %c288_i64_260 : i64
    %869 = llvm.getelementptr %17[%868] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %866, %869 : i64, !llvm.ptr
    %870 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_261 = arith.constant 136 : i32
    %871 = arith.addi %870, %c136_i32_261 : i32
    %c8_i32_262 = arith.constant 8 : i32
    %872 = arith.addi %871, %c8_i32_262 : i32
    %873 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_263 = arith.constant 288 : i32
    %874 = arith.addi %873, %c288_i32_263 : i32
    call @f90(%arg0, %872, %874) : (!llvm.ptr, i32, i32) -> ()
    %875 = llvm.load %4 : !llvm.ptr -> i32
    %c200_i32 = arith.constant 200 : i32
    %876 = arith.addi %875, %c200_i32 : i32
    %c8_i32_264 = arith.constant 8 : i32
    %877 = arith.addi %876, %c8_i32_264 : i32
    %878 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_265 = arith.constant 136 : i32
    %879 = arith.addi %878, %c136_i32_265 : i32
    %c16_i32_266 = arith.constant 16 : i32
    %880 = arith.addi %879, %c16_i32_266 : i32
    %c0_i64_267 = arith.constant 0 : i64
    %881 = arith.extui %880 : i32 to i64
    %882 = arith.addi %881, %c0_i64_267 : i64
    %883 = llvm.getelementptr %17[%882] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %884 = llvm.load %883 : !llvm.ptr -> i64
    %c0_i64_268 = arith.constant 0 : i64
    %885 = arith.extui %877 : i32 to i64
    %886 = arith.addi %885, %c0_i64_268 : i64
    %887 = llvm.getelementptr %17[%886] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %884, %887 : i64, !llvm.ptr
    %888 = llvm.load %4 : !llvm.ptr -> i32
    %c200_i32_269 = arith.constant 200 : i32
    %889 = arith.addi %888, %c200_i32_269 : i32
    %c16_i32_270 = arith.constant 16 : i32
    %890 = arith.addi %889, %c16_i32_270 : i32
    %891 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_271 = arith.constant 136 : i32
    %892 = arith.addi %891, %c136_i32_271 : i32
    %c24_i32_272 = arith.constant 24 : i32
    %893 = arith.addi %892, %c24_i32_272 : i32
    %c0_i64_273 = arith.constant 0 : i64
    %894 = arith.extui %893 : i32 to i64
    %895 = arith.addi %894, %c0_i64_273 : i64
    %896 = llvm.getelementptr %17[%895] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %897 = llvm.load %896 : !llvm.ptr -> i64
    %c0_i64_274 = arith.constant 0 : i64
    %898 = arith.extui %890 : i32 to i64
    %899 = arith.addi %898, %c0_i64_274 : i64
    %900 = llvm.getelementptr %17[%899] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %897, %900 : i64, !llvm.ptr
    %901 = llvm.load %4 : !llvm.ptr -> i32
    %c200_i32_275 = arith.constant 200 : i32
    %902 = arith.addi %901, %c200_i32_275 : i32
    %c24_i32_276 = arith.constant 24 : i32
    %903 = arith.addi %902, %c24_i32_276 : i32
    %904 = llvm.load %4 : !llvm.ptr -> i32
    %c168_i32 = arith.constant 168 : i32
    %905 = arith.addi %904, %c168_i32 : i32
    %c0_i64_277 = arith.constant 0 : i64
    %906 = arith.extui %905 : i32 to i64
    %907 = arith.addi %906, %c0_i64_277 : i64
    %908 = llvm.getelementptr %17[%907] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %909 = llvm.load %908 : !llvm.ptr -> i64
    %c0_i64_278 = arith.constant 0 : i64
    %910 = arith.extui %903 : i32 to i64
    %911 = arith.addi %910, %c0_i64_278 : i64
    %912 = llvm.getelementptr %17[%911] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %909, %912 : i64, !llvm.ptr
    %913 = llvm.load %4 : !llvm.ptr -> i32
    %914 = llvm.load %4 : !llvm.ptr -> i32
    %c144_i64_279 = arith.constant 144 : i64
    %915 = arith.extui %914 : i32 to i64
    %916 = arith.addi %915, %c144_i64_279 : i64
    %917 = llvm.getelementptr %17[%916] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %918 = llvm.load %917 : !llvm.ptr -> i64
    %c200_i64 = arith.constant 200 : i64
    %919 = arith.extui %913 : i32 to i64
    %920 = arith.addi %919, %c200_i64 : i64
    %921 = llvm.getelementptr %17[%920] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %918, %921 : i64, !llvm.ptr
    %922 = llvm.load %4 : !llvm.ptr -> i32
    %923 = llvm.load %4 : !llvm.ptr -> i32
    %c200_i32_280 = arith.constant 200 : i32
    %924 = arith.addi %923, %c200_i32_280 : i32
    call @f5(%arg0, %922, %924) : (!llvm.ptr, i32, i32) -> ()
    %925 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i32_281 = arith.constant 136 : i32
    %926 = arith.addi %925, %c136_i32_281 : i32
    call @f6(%arg0, %926) : (!llvm.ptr, i32) -> ()
    %927 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_282 = arith.constant 0 : i32
    %c96_i64_283 = arith.constant 96 : i64
    %928 = arith.extui %927 : i32 to i64
    %929 = arith.addi %928, %c96_i64_283 : i64
    %930 = llvm.getelementptr %17[%929] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_282, %930 : i32, !llvm.ptr
    %931 = llvm.load %4 : !llvm.ptr -> i32
    %932 = llvm.load %4 : !llvm.ptr -> i32
    %c140_i64_284 = arith.constant 140 : i64
    %933 = arith.extui %932 : i32 to i64
    %934 = arith.addi %933, %c140_i64_284 : i64
    %935 = llvm.getelementptr %17[%934] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %936 = llvm.load %935 : !llvm.ptr -> i64
    %c104_i64_285 = arith.constant 104 : i64
    %937 = arith.extui %931 : i32 to i64
    %938 = arith.addi %937, %c104_i64_285 : i64
    %939 = llvm.getelementptr %17[%938] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %936, %939 : i64, !llvm.ptr
    %940 = llvm.load %4 : !llvm.ptr -> i32
    %941 = llvm.load %4 : !llvm.ptr -> i32
    %c136_i64_286 = arith.constant 136 : i64
    %942 = arith.extui %941 : i32 to i64
    %943 = arith.addi %942, %c136_i64_286 : i64
    %944 = llvm.getelementptr %17[%943] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %945 = llvm.load %944 : !llvm.ptr -> i32
    %c100_i64_287 = arith.constant 100 : i64
    %946 = arith.extui %940 : i32 to i64
    %947 = arith.addi %946, %c100_i64_287 : i64
    %948 = llvm.getelementptr %17[%947] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %945, %948 : i32, !llvm.ptr
    cf.br ^bb14
  ^bb31:  // pred: ^bb29
    %949 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i32_288 = arith.constant 288 : i32
    %950 = arith.addi %949, %c288_i32_288 : i32
    %951 = llvm.load %4 : !llvm.ptr -> i32
    %c256_i32_289 = arith.constant 256 : i32
    %952 = arith.addi %951, %c256_i32_289 : i32
    call @f86(%arg0, %950, %952) : (!llvm.ptr, i32, i32) -> ()
    %953 = llvm.load %4 : !llvm.ptr -> i32
    %c288_i64_290 = arith.constant 288 : i64
    %954 = arith.extui %953 : i32 to i64
    %955 = arith.addi %954, %c288_i64_290 : i64
    %956 = llvm.getelementptr %17[%955] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %957 = llvm.load %956 : !llvm.ptr -> i32
    llvm.store %957, %5 : i32, !llvm.ptr
    %c-2147483638_i32 = arith.constant -2147483638 : i32
    %958 = arith.cmpi eq, %957, %c-2147483638_i32 : i32
    %959 = arith.extui %958 : i1 to i32
    %c0_i32_291 = arith.constant 0 : i32
    %960 = arith.cmpi ne, %959, %c0_i32_291 : i32
    cf.cond_br %960, ^bb30, ^bb32
  ^bb32:  // pred: ^bb31
    %961 = llvm.load %4 : !llvm.ptr -> i32
    %c160_i32 = arith.constant 160 : i32
    %962 = arith.addi %961, %c160_i32 : i32
    %963 = llvm.load %4 : !llvm.ptr -> i32
    %c308_i32 = arith.constant 308 : i32
    %964 = arith.addi %963, %c308_i32 : i32
    %c0_i64_292 = arith.constant 0 : i64
    %965 = arith.extui %964 : i32 to i64
    %966 = arith.addi %965, %c0_i64_292 : i64
    %967 = llvm.getelementptr %17[%966] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %968 = llvm.load %967 : !llvm.ptr -> i32
    %c0_i64_293 = arith.constant 0 : i64
    %969 = arith.extui %962 : i32 to i64
    %970 = arith.addi %969, %c0_i64_293 : i64
    %971 = llvm.getelementptr %17[%970] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %968, %971 : i32, !llvm.ptr
    %972 = llvm.load %4 : !llvm.ptr -> i32
    %c152_i32 = arith.constant 152 : i32
    %973 = arith.addi %972, %c152_i32 : i32
    %974 = llvm.load %4 : !llvm.ptr -> i32
    %c300_i32 = arith.constant 300 : i32
    %975 = arith.addi %974, %c300_i32 : i32
    %c0_i64_294 = arith.constant 0 : i64
    %976 = arith.extui %975 : i32 to i64
    %977 = arith.addi %976, %c0_i64_294 : i64
    %978 = llvm.getelementptr %17[%977] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %979 = llvm.load %978 : !llvm.ptr -> i64
    %c0_i64_295 = arith.constant 0 : i64
    %980 = arith.extui %973 : i32 to i64
    %981 = arith.addi %980, %c0_i64_295 : i64
    %982 = llvm.getelementptr %17[%981] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %979, %982 : i64, !llvm.ptr
    %983 = llvm.load %4 : !llvm.ptr -> i32
    %984 = llvm.load %4 : !llvm.ptr -> i32
    %c292_i64 = arith.constant 292 : i64
    %985 = arith.extui %984 : i32 to i64
    %986 = arith.addi %985, %c292_i64 : i64
    %987 = llvm.getelementptr %17[%986] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %988 = llvm.load %987 : !llvm.ptr -> i64
    %c144_i64_296 = arith.constant 144 : i64
    %989 = arith.extui %983 : i32 to i64
    %990 = arith.addi %989, %c144_i64_296 : i64
    %991 = llvm.getelementptr %17[%990] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %988, %991 : i64, !llvm.ptr
    %992 = llvm.load %4 : !llvm.ptr -> i32
    %993 = llvm.load %5 : !llvm.ptr -> i32
    %c140_i64_297 = arith.constant 140 : i64
    %994 = arith.extui %992 : i32 to i64
    %995 = arith.addi %994, %c140_i64_297 : i64
    %996 = llvm.getelementptr %17[%995] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %993, %996 : i32, !llvm.ptr
    cf.br ^bb26
  }
  func.func @f1(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %1 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.getelementptr %1[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %4 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %5 = arith.extui %4 : i32 to i64
    %6 = arith.addi %5, %c0_i64 : i64
    %7 = llvm.getelementptr %3[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i32
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    %9 = arith.cmpi eq, %8, %c-2147483648_i32 : i32
    %10 = arith.extui %9 : i1 to i32
    %c0_i32 = arith.constant 0 : i32
    %11 = arith.cmpi ne, %10, %c0_i32 : i32
    cf.cond_br %11, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %12 = llvm.load %0 : !llvm.ptr -> i32
    call @f96(%arg0, %12) : (!llvm.ptr, i32) -> ()
    %13 = llvm.load %0 : !llvm.ptr -> i32
    call @f97(%arg0, %13) : (!llvm.ptr, i32) -> ()
    cf.br ^bb3
  }
  func.func @f2(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %8 = llvm.load %4 : !llvm.ptr -> i32
    %c80_i32 = arith.constant 80 : i32
    %9 = arith.subi %8, %c80_i32 : i32
    llvm.store %9, %2 : i32, !llvm.ptr
    llvm.store %9, %4 : i32, !llvm.ptr
    %10 = llvm.load %2 : !llvm.ptr -> i32
    %11 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %12 = arith.extui %11 : i32 to i64
    %13 = arith.addi %12, %c0_i64 : i64
    %14 = llvm.getelementptr %7[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i64
    %c40_i64 = arith.constant 40 : i64
    %16 = arith.extui %10 : i32 to i64
    %17 = arith.addi %16, %c40_i64 : i64
    %18 = llvm.getelementptr %7[%17] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %15, %18 : i64, !llvm.ptr
    %19 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %20 = arith.addi %19, %c48_i32 : i32
    %c24_i32 = arith.constant 24 : i32
    %21 = arith.addi %20, %c24_i32 : i32
    %22 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %23 = arith.addi %22, %c32_i32 : i32
    %c0_i64_2 = arith.constant 0 : i64
    %24 = arith.extui %23 : i32 to i64
    %25 = arith.addi %24, %c0_i64_2 : i64
    %26 = llvm.getelementptr %7[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %27 = llvm.load %26 : !llvm.ptr -> i64
    %c0_i64_3 = arith.constant 0 : i64
    %28 = arith.extui %21 : i32 to i64
    %29 = arith.addi %28, %c0_i64_3 : i64
    %30 = llvm.getelementptr %7[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %27, %30 : i64, !llvm.ptr
    %31 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32_4 = arith.constant 48 : i32
    %32 = arith.addi %31, %c48_i32_4 : i32
    %c16_i32 = arith.constant 16 : i32
    %33 = arith.addi %32, %c16_i32 : i32
    %34 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_5 = arith.constant 24 : i32
    %35 = arith.addi %34, %c24_i32_5 : i32
    %c0_i64_6 = arith.constant 0 : i64
    %36 = arith.extui %35 : i32 to i64
    %37 = arith.addi %36, %c0_i64_6 : i64
    %38 = llvm.getelementptr %7[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %39 = llvm.load %38 : !llvm.ptr -> i64
    %c0_i64_7 = arith.constant 0 : i64
    %40 = arith.extui %33 : i32 to i64
    %41 = arith.addi %40, %c0_i64_7 : i64
    %42 = llvm.getelementptr %7[%41] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %39, %42 : i64, !llvm.ptr
    %43 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32_8 = arith.constant 48 : i32
    %44 = arith.addi %43, %c48_i32_8 : i32
    %c8_i32 = arith.constant 8 : i32
    %45 = arith.addi %44, %c8_i32 : i32
    %46 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32_9 = arith.constant 16 : i32
    %47 = arith.addi %46, %c16_i32_9 : i32
    %c0_i64_10 = arith.constant 0 : i64
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.addi %48, %c0_i64_10 : i64
    %50 = llvm.getelementptr %7[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %52 = arith.extui %45 : i32 to i64
    %53 = arith.addi %52, %c0_i64_11 : i64
    %54 = llvm.getelementptr %7[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %51, %54 : i64, !llvm.ptr
    %55 = llvm.load %2 : !llvm.ptr -> i32
    %56 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c8_i64 : i64
    %59 = llvm.getelementptr %7[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c48_i64 = arith.constant 48 : i64
    %61 = arith.extui %55 : i32 to i64
    %62 = arith.addi %61, %c48_i64 : i64
    %63 = llvm.getelementptr %7[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %60, %63 : i64, !llvm.ptr
    %64 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_12 = arith.constant 8 : i32
    %65 = arith.addi %64, %c8_i32_12 : i32
    %66 = llvm.load %2 : !llvm.ptr -> i32
    %c40_i32 = arith.constant 40 : i32
    %67 = arith.addi %66, %c40_i32 : i32
    %68 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32_13 = arith.constant 48 : i32
    %69 = arith.addi %68, %c48_i32_13 : i32
    %70 = llvm.load %1 : !llvm.ptr -> i32
    %c80_i64 = arith.constant 80 : i64
    %71 = arith.extui %70 : i32 to i64
    %72 = arith.addi %71, %c80_i64 : i64
    %73 = llvm.getelementptr %7[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %74 = llvm.load %73 : !llvm.ptr -> i8
    %75 = arith.extui %74 : i8 to i32
    call @f10(%arg0, %65, %67, %69, %75) : (!llvm.ptr, i32, i32, i32, i32) -> ()
    %76 = llvm.load %2 : !llvm.ptr -> i32
    %c40_i32_14 = arith.constant 40 : i32
    %77 = arith.addi %76, %c40_i32_14 : i32
    call @f9(%arg0, %77) : (!llvm.ptr, i32) -> ()
    %78 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_15 = arith.constant 0 : i64
    %79 = arith.extui %78 : i32 to i64
    %80 = arith.addi %79, %c0_i64_15 : i64
    %81 = llvm.getelementptr %7[%80] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %82 = llvm.load %81 : !llvm.ptr -> i64
    %c0_i64_16 = arith.constant 0 : i64
    %83 = arith.cmpi eq, %82, %c0_i64_16 : i64
    %84 = arith.extui %83 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %85 = arith.xori %84, %c-1_i32 : i32
    %c0_i32_17 = arith.constant 0 : i32
    %86 = arith.cmpi ne, %85, %c0_i32_17 : i32
    cf.cond_br %86, ^bb3, ^bb4
  ^bb2(%87: i32):  // pred: ^bb4
    return %87 : i32
  ^bb3:  // pred: ^bb1
    %88 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_18 = arith.constant 0 : i32
    %c64_i64 = arith.constant 64 : i64
    %89 = arith.extui %88 : i32 to i64
    %90 = arith.addi %89, %c64_i64 : i64
    %91 = llvm.getelementptr %7[%90] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_18, %91 : i32, !llvm.ptr
    %92 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %c52_i64 = arith.constant 52 : i64
    %93 = arith.extui %92 : i32 to i64
    %94 = arith.addi %93, %c52_i64 : i64
    %95 = llvm.getelementptr %7[%94] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i32, %95 : i32, !llvm.ptr
    %96 = llvm.load %2 : !llvm.ptr -> i32
    %c1048796_i32 = arith.constant 1048796 : i32
    %c48_i64_19 = arith.constant 48 : i64
    %97 = arith.extui %96 : i32 to i64
    %98 = arith.addi %97, %c48_i64_19 : i64
    %99 = llvm.getelementptr %7[%98] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1048796_i32, %99 : i32, !llvm.ptr
    %100 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %c56_i64 = arith.constant 56 : i64
    %101 = arith.extui %100 : i32 to i64
    %102 = arith.addi %101, %c56_i64 : i64
    %103 = llvm.getelementptr %7[%102] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c4_i64, %103 : i64, !llvm.ptr
    %104 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32_20 = arith.constant 48 : i32
    %105 = arith.addi %104, %c48_i32_20 : i32
    %c1048884_i32 = arith.constant 1048884 : i32
    call @f128(%arg0, %105, %c1048884_i32) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb4:  // pred: ^bb1
    %106 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i64_21 = arith.constant 1 : i64
    %c0_i64_22 = arith.constant 0 : i64
    %107 = arith.extui %106 : i32 to i64
    %108 = arith.addi %107, %c0_i64_22 : i64
    %109 = llvm.getelementptr %7[%108] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_21, %109 : i64, !llvm.ptr
    %110 = llvm.load %0 : !llvm.ptr -> i32
    %111 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_23 = arith.constant 8 : i64
    %112 = arith.extui %111 : i32 to i64
    %113 = arith.addi %112, %c8_i64_23 : i64
    %114 = llvm.getelementptr %7[%113] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %115 = llvm.load %114 : !llvm.ptr -> i64
    %c8_i64_24 = arith.constant 8 : i64
    %116 = arith.extui %110 : i32 to i64
    %117 = arith.addi %116, %c8_i64_24 : i64
    %118 = llvm.getelementptr %7[%117] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %115, %118 : i64, !llvm.ptr
    %119 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_25 = arith.constant 16 : i32
    %120 = arith.addi %119, %c16_i32_25 : i32
    %121 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_26 = arith.constant 8 : i32
    %122 = arith.addi %121, %c8_i32_26 : i32
    %c8_i32_27 = arith.constant 8 : i32
    %123 = arith.addi %122, %c8_i32_27 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %124 = arith.extui %123 : i32 to i64
    %125 = arith.addi %124, %c0_i64_28 : i64
    %126 = llvm.getelementptr %7[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %127 = llvm.load %126 : !llvm.ptr -> i64
    %c0_i64_29 = arith.constant 0 : i64
    %128 = arith.extui %120 : i32 to i64
    %129 = arith.addi %128, %c0_i64_29 : i64
    %130 = llvm.getelementptr %7[%129] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %127, %130 : i64, !llvm.ptr
    %131 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_30 = arith.constant 24 : i32
    %132 = arith.addi %131, %c24_i32_30 : i32
    %133 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_31 = arith.constant 8 : i32
    %134 = arith.addi %133, %c8_i32_31 : i32
    %c16_i32_32 = arith.constant 16 : i32
    %135 = arith.addi %134, %c16_i32_32 : i32
    %c0_i64_33 = arith.constant 0 : i64
    %136 = arith.extui %135 : i32 to i64
    %137 = arith.addi %136, %c0_i64_33 : i64
    %138 = llvm.getelementptr %7[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %139 = llvm.load %138 : !llvm.ptr -> i64
    %c0_i64_34 = arith.constant 0 : i64
    %140 = arith.extui %132 : i32 to i64
    %141 = arith.addi %140, %c0_i64_34 : i64
    %142 = llvm.getelementptr %7[%141] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %139, %142 : i64, !llvm.ptr
    %143 = llvm.load %0 : !llvm.ptr -> i32
    %c32_i32_35 = arith.constant 32 : i32
    %144 = arith.addi %143, %c32_i32_35 : i32
    %145 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_36 = arith.constant 8 : i32
    %146 = arith.addi %145, %c8_i32_36 : i32
    %c24_i32_37 = arith.constant 24 : i32
    %147 = arith.addi %146, %c24_i32_37 : i32
    %c0_i64_38 = arith.constant 0 : i64
    %148 = arith.extui %147 : i32 to i64
    %149 = arith.addi %148, %c0_i64_38 : i64
    %150 = llvm.getelementptr %7[%149] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %151 = llvm.load %150 : !llvm.ptr -> i64
    %c0_i64_39 = arith.constant 0 : i64
    %152 = arith.extui %144 : i32 to i64
    %153 = arith.addi %152, %c0_i64_39 : i64
    %154 = llvm.getelementptr %7[%153] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %151, %154 : i64, !llvm.ptr
    %155 = llvm.load %2 : !llvm.ptr -> i32
    %c80_i32_40 = arith.constant 80 : i32
    %156 = arith.addi %155, %c80_i32_40 : i32
    llvm.store %156, %4 : i32, !llvm.ptr
    %157 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_41 = arith.constant 8 : i32
    %158 = arith.addi %157, %c8_i32_41 : i32
    cf.br ^bb2(%158 : i32)
  }
  func.func @f3(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %11 = llvm.load %7 : !llvm.ptr -> i32
    %c96_i32 = arith.constant 96 : i32
    %12 = arith.subi %11, %c96_i32 : i32
    llvm.store %12, %2 : i32, !llvm.ptr
    llvm.store %12, %7 : i32, !llvm.ptr
    %13 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %14 = arith.addi %13, %c24_i32 : i32
    %c0_i64 = arith.constant 0 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %15 = arith.extui %14 : i32 to i64
    %16 = arith.addi %15, %c0_i64_5 : i64
    %17 = llvm.getelementptr %10[%16] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64, %17 : i64, !llvm.ptr
    %18 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %19 = arith.addi %18, %c16_i32 : i32
    %c0_i64_6 = arith.constant 0 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %20 = arith.extui %19 : i32 to i64
    %21 = arith.addi %20, %c0_i64_7 : i64
    %22 = llvm.getelementptr %10[%21] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_6, %22 : i64, !llvm.ptr
    %23 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %24 = arith.addi %23, %c8_i32 : i32
    %c0_i64_8 = arith.constant 0 : i64
    %c0_i64_9 = arith.constant 0 : i64
    %25 = arith.extui %24 : i32 to i64
    %26 = arith.addi %25, %c0_i64_9 : i64
    %27 = llvm.getelementptr %10[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_8, %27 : i64, !llvm.ptr
    %28 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_10 = arith.constant 0 : i64
    %c0_i64_11 = arith.constant 0 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c0_i64_11 : i64
    %31 = llvm.getelementptr %10[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_10, %31 : i64, !llvm.ptr
    %32 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %33 = arith.addi %32, %c64_i32 : i32
    %c24_i32_12 = arith.constant 24 : i32
    %34 = arith.addi %33, %c24_i32_12 : i32
    %35 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_13 = arith.constant 24 : i32
    %36 = arith.addi %35, %c24_i32_13 : i32
    %c0_i64_14 = arith.constant 0 : i64
    %37 = arith.extui %36 : i32 to i64
    %38 = arith.addi %37, %c0_i64_14 : i64
    %39 = llvm.getelementptr %10[%38] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %40 = llvm.load %39 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %41 = arith.extui %34 : i32 to i64
    %42 = arith.addi %41, %c0_i64_15 : i64
    %43 = llvm.getelementptr %10[%42] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %40, %43 : i64, !llvm.ptr
    %44 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_16 = arith.constant 64 : i32
    %45 = arith.addi %44, %c64_i32_16 : i32
    %c16_i32_17 = arith.constant 16 : i32
    %46 = arith.addi %45, %c16_i32_17 : i32
    %47 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32_18 = arith.constant 16 : i32
    %48 = arith.addi %47, %c16_i32_18 : i32
    %c0_i64_19 = arith.constant 0 : i64
    %49 = arith.extui %48 : i32 to i64
    %50 = arith.addi %49, %c0_i64_19 : i64
    %51 = llvm.getelementptr %10[%50] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c0_i64_20 = arith.constant 0 : i64
    %53 = arith.extui %46 : i32 to i64
    %54 = arith.addi %53, %c0_i64_20 : i64
    %55 = llvm.getelementptr %10[%54] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %52, %55 : i64, !llvm.ptr
    %56 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_21 = arith.constant 64 : i32
    %57 = arith.addi %56, %c64_i32_21 : i32
    %c8_i32_22 = arith.constant 8 : i32
    %58 = arith.addi %57, %c8_i32_22 : i32
    %59 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_23 = arith.constant 8 : i32
    %60 = arith.addi %59, %c8_i32_23 : i32
    %c0_i64_24 = arith.constant 0 : i64
    %61 = arith.extui %60 : i32 to i64
    %62 = arith.addi %61, %c0_i64_24 : i64
    %63 = llvm.getelementptr %10[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %64 = llvm.load %63 : !llvm.ptr -> i64
    %c0_i64_25 = arith.constant 0 : i64
    %65 = arith.extui %58 : i32 to i64
    %66 = arith.addi %65, %c0_i64_25 : i64
    %67 = llvm.getelementptr %10[%66] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %64, %67 : i64, !llvm.ptr
    %68 = llvm.load %2 : !llvm.ptr -> i32
    %69 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_26 = arith.constant 0 : i64
    %70 = arith.extui %69 : i32 to i64
    %71 = arith.addi %70, %c0_i64_26 : i64
    %72 = llvm.getelementptr %10[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %73 = llvm.load %72 : !llvm.ptr -> i64
    %c64_i64 = arith.constant 64 : i64
    %74 = arith.extui %68 : i32 to i64
    %75 = arith.addi %74, %c64_i64 : i64
    %76 = llvm.getelementptr %10[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %73, %76 : i64, !llvm.ptr
    %c0_i32_27 = arith.constant 0 : i32
    llvm.store %c0_i32_27, %1 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %77 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %78 = arith.addi %77, %c32_i32 : i32
    %c24_i32_28 = arith.constant 24 : i32
    %79 = arith.addi %78, %c24_i32_28 : i32
    %80 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_29 = arith.constant 64 : i32
    %81 = arith.addi %80, %c64_i32_29 : i32
    %c24_i32_30 = arith.constant 24 : i32
    %82 = arith.addi %81, %c24_i32_30 : i32
    llvm.store %82, %1 : i32, !llvm.ptr
    %c0_i64_31 = arith.constant 0 : i64
    %83 = arith.extui %82 : i32 to i64
    %84 = arith.addi %83, %c0_i64_31 : i64
    %85 = llvm.getelementptr %10[%84] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %86 = llvm.load %85 : !llvm.ptr -> i64
    %c0_i64_32 = arith.constant 0 : i64
    %87 = arith.extui %79 : i32 to i64
    %88 = arith.addi %87, %c0_i64_32 : i64
    %89 = llvm.getelementptr %10[%88] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %86, %89 : i64, !llvm.ptr
    %90 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_33 = arith.constant 32 : i32
    %91 = arith.addi %90, %c32_i32_33 : i32
    %c16_i32_34 = arith.constant 16 : i32
    %92 = arith.addi %91, %c16_i32_34 : i32
    %93 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_35 = arith.constant 64 : i32
    %94 = arith.addi %93, %c64_i32_35 : i32
    %c16_i32_36 = arith.constant 16 : i32
    %95 = arith.addi %94, %c16_i32_36 : i32
    llvm.store %95, %3 : i32, !llvm.ptr
    %c0_i64_37 = arith.constant 0 : i64
    %96 = arith.extui %95 : i32 to i64
    %97 = arith.addi %96, %c0_i64_37 : i64
    %98 = llvm.getelementptr %10[%97] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %99 = llvm.load %98 : !llvm.ptr -> i64
    %c0_i64_38 = arith.constant 0 : i64
    %100 = arith.extui %92 : i32 to i64
    %101 = arith.addi %100, %c0_i64_38 : i64
    %102 = llvm.getelementptr %10[%101] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %99, %102 : i64, !llvm.ptr
    %103 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_39 = arith.constant 32 : i32
    %104 = arith.addi %103, %c32_i32_39 : i32
    %c8_i32_40 = arith.constant 8 : i32
    %105 = arith.addi %104, %c8_i32_40 : i32
    %106 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_41 = arith.constant 64 : i32
    %107 = arith.addi %106, %c64_i32_41 : i32
    %c8_i32_42 = arith.constant 8 : i32
    %108 = arith.addi %107, %c8_i32_42 : i32
    llvm.store %108, %4 : i32, !llvm.ptr
    %c0_i64_43 = arith.constant 0 : i64
    %109 = arith.extui %108 : i32 to i64
    %110 = arith.addi %109, %c0_i64_43 : i64
    %111 = llvm.getelementptr %10[%110] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %112 = llvm.load %111 : !llvm.ptr -> i64
    %c0_i64_44 = arith.constant 0 : i64
    %113 = arith.extui %105 : i32 to i64
    %114 = arith.addi %113, %c0_i64_44 : i64
    %115 = llvm.getelementptr %10[%114] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %112, %115 : i64, !llvm.ptr
    %116 = llvm.load %2 : !llvm.ptr -> i32
    %117 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i64_45 = arith.constant 64 : i64
    %118 = arith.extui %117 : i32 to i64
    %119 = arith.addi %118, %c64_i64_45 : i64
    %120 = llvm.getelementptr %10[%119] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %121 = llvm.load %120 : !llvm.ptr -> i64
    %c32_i64 = arith.constant 32 : i64
    %122 = arith.extui %116 : i32 to i64
    %123 = arith.addi %122, %c32_i64 : i64
    %124 = llvm.getelementptr %10[%123] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %121, %124 : i64, !llvm.ptr
    %125 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_46 = arith.constant 32 : i32
    %126 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_47 = arith.constant 32 : i32
    %127 = arith.addi %126, %c32_i32_47 : i32
    %c32_i32_48 = arith.constant 32 : i32
    %c1048764_i32 = arith.constant 1048764 : i32
    call @f98(%arg0, %125, %c32_i32_46, %127, %c32_i32_48, %c1048764_i32) : (!llvm.ptr, i32, i32, i32, i32, i32) -> ()
    %128 = llvm.load %4 : !llvm.ptr -> i32
    %129 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_49 = arith.constant 8 : i32
    %130 = arith.addi %129, %c8_i32_49 : i32
    %c0_i64_50 = arith.constant 0 : i64
    %131 = arith.extui %130 : i32 to i64
    %132 = arith.addi %131, %c0_i64_50 : i64
    %133 = llvm.getelementptr %10[%132] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %134 = llvm.load %133 : !llvm.ptr -> i64
    %c0_i64_51 = arith.constant 0 : i64
    %135 = arith.extui %128 : i32 to i64
    %136 = arith.addi %135, %c0_i64_51 : i64
    %137 = llvm.getelementptr %10[%136] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %134, %137 : i64, !llvm.ptr
    %138 = llvm.load %3 : !llvm.ptr -> i32
    %139 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_52 = arith.constant 16 : i32
    %140 = arith.addi %139, %c16_i32_52 : i32
    %c0_i64_53 = arith.constant 0 : i64
    %141 = arith.extui %140 : i32 to i64
    %142 = arith.addi %141, %c0_i64_53 : i64
    %143 = llvm.getelementptr %10[%142] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %144 = llvm.load %143 : !llvm.ptr -> i64
    %c0_i64_54 = arith.constant 0 : i64
    %145 = arith.extui %138 : i32 to i64
    %146 = arith.addi %145, %c0_i64_54 : i64
    %147 = llvm.getelementptr %10[%146] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %144, %147 : i64, !llvm.ptr
    %148 = llvm.load %1 : !llvm.ptr -> i32
    %149 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_55 = arith.constant 24 : i32
    %150 = arith.addi %149, %c24_i32_55 : i32
    %c0_i64_56 = arith.constant 0 : i64
    %151 = arith.extui %150 : i32 to i64
    %152 = arith.addi %151, %c0_i64_56 : i64
    %153 = llvm.getelementptr %10[%152] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %154 = llvm.load %153 : !llvm.ptr -> i64
    %c0_i64_57 = arith.constant 0 : i64
    %155 = arith.extui %148 : i32 to i64
    %156 = arith.addi %155, %c0_i64_57 : i64
    %157 = llvm.getelementptr %10[%156] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %154, %157 : i64, !llvm.ptr
    %158 = llvm.load %2 : !llvm.ptr -> i32
    %159 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_58 = arith.constant 0 : i64
    %160 = arith.extui %159 : i32 to i64
    %161 = arith.addi %160, %c0_i64_58 : i64
    %162 = llvm.getelementptr %10[%161] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %163 = llvm.load %162 : !llvm.ptr -> i64
    %c64_i64_59 = arith.constant 64 : i64
    %164 = arith.extui %158 : i32 to i64
    %165 = arith.addi %164, %c64_i64_59 : i64
    %166 = llvm.getelementptr %10[%165] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %163, %166 : i64, !llvm.ptr
    %167 = llvm.load %0 : !llvm.ptr -> i32
    %168 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_60 = arith.constant 64 : i32
    %169 = arith.addi %168, %c64_i32_60 : i32
    call @f4(%arg0, %167, %169) : (!llvm.ptr, i32, i32) -> ()
    %170 = llvm.load %2 : !llvm.ptr -> i32
    %c96_i32_61 = arith.constant 96 : i32
    %171 = arith.addi %170, %c96_i32_61 : i32
    llvm.store %171, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %172 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_62 = arith.constant 64 : i32
    %173 = arith.addi %172, %c64_i32_62 : i32
    %174 = llvm.load %1 : !llvm.ptr -> i32
    %175 = arith.addi %173, %174 : i32
    llvm.store %175, %3 : i32, !llvm.ptr
    %c0_i64_63 = arith.constant 0 : i64
    %176 = arith.extui %175 : i32 to i64
    %177 = arith.addi %176, %c0_i64_63 : i64
    %178 = llvm.getelementptr %10[%177] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %179 = llvm.load %178 : !llvm.ptr -> i8
    %180 = arith.extui %179 : i8 to i32
    llvm.store %180, %4 : i32, !llvm.ptr
    %181 = llvm.load %3 : !llvm.ptr -> i32
    %182 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_64 = arith.constant 64 : i32
    %183 = arith.addi %182, %c64_i32_64 : i32
    %184 = llvm.load %1 : !llvm.ptr -> i32
    %c31_i32 = arith.constant 31 : i32
    %185 = arith.xori %184, %c31_i32 : i32
    %186 = arith.addi %183, %185 : i32
    llvm.store %186, %5 : i32, !llvm.ptr
    %c0_i64_65 = arith.constant 0 : i64
    %187 = arith.extui %186 : i32 to i64
    %188 = arith.addi %187, %c0_i64_65 : i64
    %189 = llvm.getelementptr %10[%188] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %190 = llvm.load %189 : !llvm.ptr -> i8
    %191 = arith.extui %190 : i8 to i32
    %c0_i64_66 = arith.constant 0 : i64
    %192 = arith.extui %181 : i32 to i64
    %193 = arith.addi %192, %c0_i64_66 : i64
    %194 = llvm.getelementptr %10[%193] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %195 = arith.trunci %191 : i32 to i8
    llvm.store %195, %194 : i8, !llvm.ptr
    %196 = llvm.load %5 : !llvm.ptr -> i32
    %197 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_67 = arith.constant 0 : i64
    %198 = arith.extui %196 : i32 to i64
    %199 = arith.addi %198, %c0_i64_67 : i64
    %200 = llvm.getelementptr %10[%199] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %201 = arith.trunci %197 : i32 to i8
    llvm.store %201, %200 : i8, !llvm.ptr
    %202 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %203 = arith.addi %202, %c1_i32 : i32
    llvm.store %203, %1 : i32, !llvm.ptr
    %c16_i32_68 = arith.constant 16 : i32
    %204 = arith.cmpi eq, %203, %c16_i32_68 : i32
    %205 = arith.extui %204 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %206 = arith.xori %205, %c-1_i32 : i32
    %c0_i32_69 = arith.constant 0 : i32
    %207 = arith.cmpi ne, %206, %c0_i32_69 : i32
    cf.cond_br %207, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f4(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_7 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_7 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %8 : i64, !llvm.ptr
    %9 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.getelementptr %11[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %14 = llvm.load %10 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %15 = arith.subi %14, %c64_i32 : i32
    llvm.store %15, %2 : i32, !llvm.ptr
    llvm.store %15, %10 : i32, !llvm.ptr
    %16 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %17 = arith.addi %16, %c24_i32 : i32
    %c1_i32 = arith.constant 1 : i32
    %c0_i32_8 = arith.constant 0 : i32
    call @f79(%arg0, %17, %c1_i32, %c0_i32_8) : (!llvm.ptr, i32, i32, i32) -> ()
    %18 = llvm.load %2 : !llvm.ptr -> i32
    %c28_i64 = arith.constant 28 : i64
    %19 = arith.extui %18 : i32 to i64
    %20 = arith.addi %19, %c28_i64 : i64
    %21 = llvm.getelementptr %13[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %22 = llvm.load %21 : !llvm.ptr -> i32
    llvm.store %22, %3 : i32, !llvm.ptr
    %23 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %24 = arith.extui %23 : i32 to i64
    %25 = arith.addi %24, %c24_i64 : i64
    %26 = llvm.getelementptr %13[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %27 = llvm.load %26 : !llvm.ptr -> i32
    %c0_i32_9 = arith.constant 0 : i32
    %28 = arith.cmpi ne, %27, %c0_i32_9 : i32
    cf.cond_br %28, ^bb4, ^bb5
  ^bb2:  // pred: ^bb6
    return
  ^bb3:  // pred: ^bb5
    %29 = llvm.load %5 : !llvm.ptr -> i32
    %30 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i64 = arith.constant 32 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c32_i64 : i64
    %33 = llvm.getelementptr %13[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %34 = llvm.load %33 : !llvm.ptr -> i32
    call @f126(%arg0, %29, %34) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb4:  // pred: ^bb1
    %35 = llvm.load %3 : !llvm.ptr -> i32
    %36 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i64_10 = arith.constant 32 : i64
    %37 = arith.extui %36 : i32 to i64
    %38 = arith.addi %37, %c32_i64_10 : i64
    %39 = llvm.getelementptr %13[%38] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %40 = llvm.load %39 : !llvm.ptr -> i32
    call @f126(%arg0, %35, %40) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb5:  // pred: ^bb1
    %41 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i64_11 = arith.constant 32 : i64
    %42 = arith.extui %41 : i32 to i64
    %43 = arith.addi %42, %c32_i64_11 : i64
    %44 = llvm.getelementptr %13[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> i32
    llvm.store %45, %4 : i32, !llvm.ptr
    %46 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_12 = arith.constant 24 : i32
    %47 = arith.addi %46, %c24_i32_12 : i32
    %c4_i32 = arith.constant 4 : i32
    %c0_i32_13 = arith.constant 0 : i32
    call @f78(%arg0, %47, %c4_i32, %c0_i32_13) : (!llvm.ptr, i32, i32, i32) -> ()
    %48 = llvm.load %2 : !llvm.ptr -> i32
    %c28_i64_14 = arith.constant 28 : i64
    %49 = arith.extui %48 : i32 to i64
    %50 = arith.addi %49, %c28_i64_14 : i64
    %51 = llvm.getelementptr %13[%50] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %52 = llvm.load %51 : !llvm.ptr -> i32
    llvm.store %52, %5 : i32, !llvm.ptr
    %53 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i64_15 = arith.constant 24 : i64
    %54 = arith.extui %53 : i32 to i64
    %55 = arith.addi %54, %c24_i64_15 : i64
    %56 = llvm.getelementptr %13[%55] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %57 = llvm.load %56 : !llvm.ptr -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %58 = arith.cmpi ne, %57, %c0_i32_16 : i32
    cf.cond_br %58, ^bb3, ^bb6
  ^bb6:  // pred: ^bb5
    %59 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %60 = arith.addi %59, %c16_i32 : i32
    llvm.store %60, %6 : i32, !llvm.ptr
    %61 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i64_17 = arith.constant 32 : i64
    %62 = arith.extui %61 : i32 to i64
    %63 = arith.addi %62, %c32_i64_17 : i64
    %64 = llvm.getelementptr %13[%63] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i32
    %c0_i64_18 = arith.constant 0 : i64
    %66 = arith.extui %60 : i32 to i64
    %67 = arith.addi %66, %c0_i64_18 : i64
    %68 = llvm.getelementptr %13[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %65, %68 : i32, !llvm.ptr
    %69 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %70 = arith.addi %69, %c8_i32 : i32
    llvm.store %70, %7 : i32, !llvm.ptr
    %c0_i32_19 = arith.constant 0 : i32
    %c0_i64_20 = arith.constant 0 : i64
    %71 = arith.extui %70 : i32 to i64
    %72 = arith.addi %71, %c0_i64_20 : i64
    %73 = llvm.getelementptr %13[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_19, %73 : i32, !llvm.ptr
    %74 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_21 = arith.constant 0 : i32
    %c20_i64 = arith.constant 20 : i64
    %75 = arith.extui %74 : i32 to i64
    %76 = arith.addi %75, %c20_i64 : i64
    %77 = llvm.getelementptr %13[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_21, %77 : i32, !llvm.ptr
    %78 = llvm.load %2 : !llvm.ptr -> i32
    %79 = llvm.load %5 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %80 = arith.extui %78 : i32 to i64
    %81 = arith.addi %80, %c12_i64 : i64
    %82 = llvm.getelementptr %13[%81] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %79, %82 : i32, !llvm.ptr
    %83 = llvm.load %2 : !llvm.ptr -> i32
    %84 = llvm.load %4 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %85 = arith.extui %83 : i32 to i64
    %86 = arith.addi %85, %c4_i64 : i64
    %87 = llvm.getelementptr %13[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %84, %87 : i32, !llvm.ptr
    %88 = llvm.load %2 : !llvm.ptr -> i32
    %89 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_22 = arith.constant 0 : i64
    %90 = arith.extui %88 : i32 to i64
    %91 = arith.addi %90, %c0_i64_22 : i64
    %92 = llvm.getelementptr %13[%91] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %89, %92 : i32, !llvm.ptr
    %93 = llvm.load %1 : !llvm.ptr -> i32
    %94 = llvm.load %2 : !llvm.ptr -> i32
    call @f88(%arg0, %93, %94) : (!llvm.ptr, i32, i32) -> ()
    %95 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_23 = arith.constant 24 : i32
    %96 = arith.addi %95, %c24_i32_23 : i32
    %c16_i32_24 = arith.constant 16 : i32
    %97 = arith.addi %96, %c16_i32_24 : i32
    %98 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i64_25 = arith.constant 0 : i64
    %99 = arith.extui %98 : i32 to i64
    %100 = arith.addi %99, %c0_i64_25 : i64
    %101 = llvm.getelementptr %13[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %102 = llvm.load %101 : !llvm.ptr -> i64
    %c0_i64_26 = arith.constant 0 : i64
    %103 = arith.extui %97 : i32 to i64
    %104 = arith.addi %103, %c0_i64_26 : i64
    %105 = llvm.getelementptr %13[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %102, %105 : i64, !llvm.ptr
    %106 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_27 = arith.constant 24 : i32
    %107 = arith.addi %106, %c24_i32_27 : i32
    %c8_i32_28 = arith.constant 8 : i32
    %108 = arith.addi %107, %c8_i32_28 : i32
    %109 = llvm.load %7 : !llvm.ptr -> i32
    %c0_i64_29 = arith.constant 0 : i64
    %110 = arith.extui %109 : i32 to i64
    %111 = arith.addi %110, %c0_i64_29 : i64
    %112 = llvm.getelementptr %13[%111] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %113 = llvm.load %112 : !llvm.ptr -> i64
    %c0_i64_30 = arith.constant 0 : i64
    %114 = arith.extui %108 : i32 to i64
    %115 = arith.addi %114, %c0_i64_30 : i64
    %116 = llvm.getelementptr %13[%115] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %113, %116 : i64, !llvm.ptr
    %117 = llvm.load %2 : !llvm.ptr -> i32
    %118 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_31 = arith.constant 0 : i64
    %119 = arith.extui %118 : i32 to i64
    %120 = arith.addi %119, %c0_i64_31 : i64
    %121 = llvm.getelementptr %13[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %122 = llvm.load %121 : !llvm.ptr -> i64
    llvm.store %122, %8 : i64, !llvm.ptr
    %c24_i64_32 = arith.constant 24 : i64
    %123 = arith.extui %117 : i32 to i64
    %124 = arith.addi %123, %c24_i64_32 : i64
    %125 = llvm.getelementptr %13[%124] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %122, %125 : i64, !llvm.ptr
    %126 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %127 = arith.addi %126, %c48_i32 : i32
    %c8_i32_33 = arith.constant 8 : i32
    %128 = arith.addi %127, %c8_i32_33 : i32
    %129 = llvm.load %7 : !llvm.ptr -> i32
    %c0_i64_34 = arith.constant 0 : i64
    %130 = arith.extui %129 : i32 to i64
    %131 = arith.addi %130, %c0_i64_34 : i64
    %132 = llvm.getelementptr %13[%131] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %133 = llvm.load %132 : !llvm.ptr -> i32
    %c0_i64_35 = arith.constant 0 : i64
    %134 = arith.extui %128 : i32 to i64
    %135 = arith.addi %134, %c0_i64_35 : i64
    %136 = llvm.getelementptr %13[%135] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %133, %136 : i32, !llvm.ptr
    %137 = llvm.load %2 : !llvm.ptr -> i32
    %138 = llvm.load %8 : !llvm.ptr -> i64
    %c48_i64 = arith.constant 48 : i64
    %139 = arith.extui %137 : i32 to i64
    %140 = arith.addi %139, %c48_i64 : i64
    %141 = llvm.getelementptr %13[%140] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %138, %141 : i64, !llvm.ptr
    %142 = llvm.load %2 : !llvm.ptr -> i32
    %c36_i32 = arith.constant 36 : i32
    %143 = arith.addi %142, %c36_i32 : i32
    llvm.store %143, %7 : i32, !llvm.ptr
    call @f82(%arg0, %143) : (!llvm.ptr, i32) -> ()
    %144 = llvm.load %7 : !llvm.ptr -> i32
    call @f84(%arg0, %144) : (!llvm.ptr, i32) -> ()
    %145 = llvm.load %0 : !llvm.ptr -> i32
    %146 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32_36 = arith.constant 48 : i32
    %147 = arith.addi %146, %c48_i32_36 : i32
    call @f75(%arg0, %145, %147) : (!llvm.ptr, i32, i32) -> ()
    %148 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_37 = arith.constant 64 : i32
    %149 = arith.addi %148, %c64_i32_37 : i32
    llvm.store %149, %10 : i32, !llvm.ptr
    cf.br ^bb2
  }
  func.func @f5(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %8 = llvm.load %4 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %9 = arith.subi %8, %c48_i32 : i32
    llvm.store %9, %2 : i32, !llvm.ptr
    llvm.store %9, %4 : i32, !llvm.ptr
    %10 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i64_2 = arith.constant 1 : i64
    %c40_i64 = arith.constant 40 : i64
    %11 = arith.extui %10 : i32 to i64
    %12 = arith.addi %11, %c40_i64 : i64
    %13 = llvm.getelementptr %7[%12] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_2, %13 : i64, !llvm.ptr
    %14 = llvm.load %0 : !llvm.ptr -> i32
    %15 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %16 = arith.extui %15 : i32 to i64
    %17 = arith.addi %16, %c0_i64 : i64
    %18 = llvm.getelementptr %7[%17] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %19 = llvm.load %18 : !llvm.ptr -> i64
    %c48_i64 = arith.constant 48 : i64
    %20 = arith.extui %14 : i32 to i64
    %21 = arith.addi %20, %c48_i64 : i64
    %22 = llvm.getelementptr %7[%21] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %19, %22 : i64, !llvm.ptr
    %23 = llvm.load %0 : !llvm.ptr -> i32
    %c56_i32 = arith.constant 56 : i32
    %24 = arith.addi %23, %c56_i32 : i32
    %25 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %26 = arith.addi %25, %c8_i32 : i32
    %c0_i64_3 = arith.constant 0 : i64
    %27 = arith.extui %26 : i32 to i64
    %28 = arith.addi %27, %c0_i64_3 : i64
    %29 = llvm.getelementptr %7[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %30 = llvm.load %29 : !llvm.ptr -> i64
    %c0_i64_4 = arith.constant 0 : i64
    %31 = arith.extui %24 : i32 to i64
    %32 = arith.addi %31, %c0_i64_4 : i64
    %33 = llvm.getelementptr %7[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %30, %33 : i64, !llvm.ptr
    %34 = llvm.load %0 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %35 = arith.addi %34, %c64_i32 : i32
    %36 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %37 = arith.addi %36, %c16_i32 : i32
    %c0_i64_5 = arith.constant 0 : i64
    %38 = arith.extui %37 : i32 to i64
    %39 = arith.addi %38, %c0_i64_5 : i64
    %40 = llvm.getelementptr %7[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i64
    %c0_i64_6 = arith.constant 0 : i64
    %42 = arith.extui %35 : i32 to i64
    %43 = arith.addi %42, %c0_i64_6 : i64
    %44 = llvm.getelementptr %7[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i64, !llvm.ptr
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c72_i32 = arith.constant 72 : i32
    %46 = arith.addi %45, %c72_i32 : i32
    %47 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %48 = arith.addi %47, %c24_i32 : i32
    %c0_i64_7 = arith.constant 0 : i64
    %49 = arith.extui %48 : i32 to i64
    %50 = arith.addi %49, %c0_i64_7 : i64
    %51 = llvm.getelementptr %7[%50] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c0_i64_8 = arith.constant 0 : i64
    %53 = arith.extui %46 : i32 to i64
    %54 = arith.addi %53, %c0_i64_8 : i64
    %55 = llvm.getelementptr %7[%54] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %52, %55 : i64, !llvm.ptr
    %56 = llvm.load %2 : !llvm.ptr -> i32
    %57 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %58 = arith.extui %57 : i32 to i64
    %59 = arith.addi %58, %c0_i64_9 : i64
    %60 = llvm.getelementptr %7[%59] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %61 = llvm.load %60 : !llvm.ptr -> i64
    %c8_i64 = arith.constant 8 : i64
    %62 = arith.extui %56 : i32 to i64
    %63 = arith.addi %62, %c8_i64 : i64
    %64 = llvm.getelementptr %7[%63] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %61, %64 : i64, !llvm.ptr
    %65 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_10 = arith.constant 16 : i32
    %66 = arith.addi %65, %c16_i32_10 : i32
    %c24_i32_11 = arith.constant 24 : i32
    %67 = arith.addi %66, %c24_i32_11 : i32
    %68 = llvm.load %0 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %69 = arith.addi %68, %c32_i32 : i32
    %c0_i64_12 = arith.constant 0 : i64
    %70 = arith.extui %69 : i32 to i64
    %71 = arith.addi %70, %c0_i64_12 : i64
    %72 = llvm.getelementptr %7[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %73 = llvm.load %72 : !llvm.ptr -> i64
    %c0_i64_13 = arith.constant 0 : i64
    %74 = arith.extui %67 : i32 to i64
    %75 = arith.addi %74, %c0_i64_13 : i64
    %76 = llvm.getelementptr %7[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %73, %76 : i64, !llvm.ptr
    %77 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_14 = arith.constant 16 : i32
    %78 = arith.addi %77, %c16_i32_14 : i32
    %c16_i32_15 = arith.constant 16 : i32
    %79 = arith.addi %78, %c16_i32_15 : i32
    %80 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_16 = arith.constant 24 : i32
    %81 = arith.addi %80, %c24_i32_16 : i32
    %c0_i64_17 = arith.constant 0 : i64
    %82 = arith.extui %81 : i32 to i64
    %83 = arith.addi %82, %c0_i64_17 : i64
    %84 = llvm.getelementptr %7[%83] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c0_i64_18 = arith.constant 0 : i64
    %86 = arith.extui %79 : i32 to i64
    %87 = arith.addi %86, %c0_i64_18 : i64
    %88 = llvm.getelementptr %7[%87] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %85, %88 : i64, !llvm.ptr
    %89 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_19 = arith.constant 16 : i32
    %90 = arith.addi %89, %c16_i32_19 : i32
    %c8_i32_20 = arith.constant 8 : i32
    %91 = arith.addi %90, %c8_i32_20 : i32
    %92 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_21 = arith.constant 16 : i32
    %93 = arith.addi %92, %c16_i32_21 : i32
    %c0_i64_22 = arith.constant 0 : i64
    %94 = arith.extui %93 : i32 to i64
    %95 = arith.addi %94, %c0_i64_22 : i64
    %96 = llvm.getelementptr %7[%95] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %97 = llvm.load %96 : !llvm.ptr -> i64
    %c0_i64_23 = arith.constant 0 : i64
    %98 = arith.extui %91 : i32 to i64
    %99 = arith.addi %98, %c0_i64_23 : i64
    %100 = llvm.getelementptr %7[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %97, %100 : i64, !llvm.ptr
    %101 = llvm.load %2 : !llvm.ptr -> i32
    %102 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i64_24 = arith.constant 8 : i64
    %103 = arith.extui %102 : i32 to i64
    %104 = arith.addi %103, %c8_i64_24 : i64
    %105 = llvm.getelementptr %7[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %106 = llvm.load %105 : !llvm.ptr -> i64
    %c16_i64 = arith.constant 16 : i64
    %107 = arith.extui %101 : i32 to i64
    %108 = arith.addi %107, %c16_i64 : i64
    %109 = llvm.getelementptr %7[%108] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %106, %109 : i64, !llvm.ptr
    %110 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_25 = arith.constant 8 : i32
    %111 = arith.addi %110, %c8_i32_25 : i32
    %112 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_26 = arith.constant 16 : i32
    %113 = arith.addi %112, %c16_i32_26 : i32
    %114 = llvm.load %0 : !llvm.ptr -> i32
    %115 = llvm.load %1 : !llvm.ptr -> i32
    call @f8(%arg0, %111, %113, %114, %115) : (!llvm.ptr, i32, i32, i32, i32) -> ()
    %116 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_27 = arith.constant 8 : i32
    %117 = arith.addi %116, %c8_i32_27 : i32
    call @f9(%arg0, %117) : (!llvm.ptr, i32) -> ()
    %118 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32_28 = arith.constant 48 : i32
    %119 = arith.addi %118, %c48_i32_28 : i32
    llvm.store %119, %4 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f6(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %6 : i64, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %12 = llvm.load %8 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %13 = arith.subi %12, %c64_i32 : i32
    llvm.store %13, %1 : i32, !llvm.ptr
    llvm.store %13, %8 : i32, !llvm.ptr
    %14 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %15 = arith.addi %14, %c24_i32 : i32
    %c0_i32_6 = arith.constant 0 : i32
    %c0_i32_7 = arith.constant 0 : i32
    call @f79(%arg0, %15, %c0_i32_6, %c0_i32_7) : (!llvm.ptr, i32, i32, i32) -> ()
    %16 = llvm.load %1 : !llvm.ptr -> i32
    %c28_i64 = arith.constant 28 : i64
    %17 = arith.extui %16 : i32 to i64
    %18 = arith.addi %17, %c28_i64 : i64
    %19 = llvm.getelementptr %11[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %20 = llvm.load %19 : !llvm.ptr -> i32
    llvm.store %20, %2 : i32, !llvm.ptr
    %21 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %22 = arith.extui %21 : i32 to i64
    %23 = arith.addi %22, %c24_i64 : i64
    %24 = llvm.getelementptr %11[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %25 = llvm.load %24 : !llvm.ptr -> i32
    %c0_i32_8 = arith.constant 0 : i32
    %26 = arith.cmpi ne, %25, %c0_i32_8 : i32
    cf.cond_br %26, ^bb4, ^bb5
  ^bb2:  // pred: ^bb7
    return
  ^bb3:  // pred: ^bb5
    %27 = llvm.load %4 : !llvm.ptr -> i32
    %28 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i64 = arith.constant 32 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c32_i64 : i64
    %31 = llvm.getelementptr %11[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %32 = llvm.load %31 : !llvm.ptr -> i32
    call @f126(%arg0, %27, %32) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb4:  // pred: ^bb1
    %33 = llvm.load %2 : !llvm.ptr -> i32
    %34 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i64_9 = arith.constant 32 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c32_i64_9 : i64
    %37 = llvm.getelementptr %11[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %38 = llvm.load %37 : !llvm.ptr -> i32
    call @f126(%arg0, %33, %38) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb5:  // pred: ^bb1
    %39 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i64_10 = arith.constant 32 : i64
    %40 = arith.extui %39 : i32 to i64
    %41 = arith.addi %40, %c32_i64_10 : i64
    %42 = llvm.getelementptr %11[%41] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %43 = llvm.load %42 : !llvm.ptr -> i32
    llvm.store %43, %3 : i32, !llvm.ptr
    %44 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_11 = arith.constant 24 : i32
    %45 = arith.addi %44, %c24_i32_11 : i32
    %c4_i32 = arith.constant 4 : i32
    %c0_i32_12 = arith.constant 0 : i32
    call @f78(%arg0, %45, %c4_i32, %c0_i32_12) : (!llvm.ptr, i32, i32, i32) -> ()
    %46 = llvm.load %1 : !llvm.ptr -> i32
    %c28_i64_13 = arith.constant 28 : i64
    %47 = arith.extui %46 : i32 to i64
    %48 = arith.addi %47, %c28_i64_13 : i64
    %49 = llvm.getelementptr %11[%48] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %50 = llvm.load %49 : !llvm.ptr -> i32
    llvm.store %50, %4 : i32, !llvm.ptr
    %51 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i64_14 = arith.constant 24 : i64
    %52 = arith.extui %51 : i32 to i64
    %53 = arith.addi %52, %c24_i64_14 : i64
    %54 = llvm.getelementptr %11[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %55 = llvm.load %54 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %56 = arith.cmpi ne, %55, %c0_i32_15 : i32
    cf.cond_br %56, ^bb3, ^bb6
  ^bb6:  // pred: ^bb5
    %57 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %c20_i64 = arith.constant 20 : i64
    %58 = arith.extui %57 : i32 to i64
    %59 = arith.addi %58, %c20_i64 : i64
    %60 = llvm.getelementptr %11[%59] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_16, %60 : i32, !llvm.ptr
    %61 = llvm.load %1 : !llvm.ptr -> i32
    %62 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i64_17 = arith.constant 32 : i64
    %63 = arith.extui %62 : i32 to i64
    %64 = arith.addi %63, %c32_i64_17 : i64
    %65 = llvm.getelementptr %11[%64] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %66 = llvm.load %65 : !llvm.ptr -> i32
    llvm.store %66, %5 : i32, !llvm.ptr
    %c16_i64 = arith.constant 16 : i64
    %67 = arith.extui %61 : i32 to i64
    %68 = arith.addi %67, %c16_i64 : i64
    %69 = llvm.getelementptr %11[%68] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %66, %69 : i32, !llvm.ptr
    %70 = llvm.load %1 : !llvm.ptr -> i32
    %71 = llvm.load %4 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %72 = arith.extui %70 : i32 to i64
    %73 = arith.addi %72, %c12_i64 : i64
    %74 = llvm.getelementptr %11[%73] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %71, %74 : i32, !llvm.ptr
    %75 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_18 = arith.constant 0 : i32
    %c8_i64 = arith.constant 8 : i64
    %76 = arith.extui %75 : i32 to i64
    %77 = arith.addi %76, %c8_i64 : i64
    %78 = llvm.getelementptr %11[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_18, %78 : i32, !llvm.ptr
    %79 = llvm.load %1 : !llvm.ptr -> i32
    %80 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %81 = arith.extui %79 : i32 to i64
    %82 = arith.addi %81, %c4_i64 : i64
    %83 = llvm.getelementptr %11[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %80, %83 : i32, !llvm.ptr
    %84 = llvm.load %1 : !llvm.ptr -> i32
    %85 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_19 = arith.constant 0 : i64
    %86 = arith.extui %84 : i32 to i64
    %87 = arith.addi %86, %c0_i64_19 : i64
    %88 = llvm.getelementptr %11[%87] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %85, %88 : i32, !llvm.ptr
    %89 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_20 = arith.constant 0 : i32
    %90 = arith.cmpi ne, %89, %c0_i32_20 : i32
    cf.cond_br %90, ^bb7, ^bb8
  ^bb7:  // 2 preds: ^bb6, ^bb8
    %91 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i32_21 = arith.constant 0 : i32
    %c0_i64_22 = arith.constant 0 : i64
    %92 = arith.extui %91 : i32 to i64
    %93 = arith.addi %92, %c0_i64_22 : i64
    %94 = llvm.getelementptr %11[%93] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_21, %94 : i32, !llvm.ptr
    %95 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_23 = arith.constant 0 : i32
    %c20_i64_24 = arith.constant 20 : i64
    %96 = arith.extui %95 : i32 to i64
    %97 = arith.addi %96, %c20_i64_24 : i64
    %98 = llvm.getelementptr %11[%97] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_23, %98 : i32, !llvm.ptr
    %99 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_25 = arith.constant 24 : i32
    %100 = arith.addi %99, %c24_i32_25 : i32
    %c16_i32 = arith.constant 16 : i32
    %101 = arith.addi %100, %c16_i32 : i32
    %102 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32_26 = arith.constant 16 : i32
    %103 = arith.addi %102, %c16_i32_26 : i32
    %c0_i64_27 = arith.constant 0 : i64
    %104 = arith.extui %103 : i32 to i64
    %105 = arith.addi %104, %c0_i64_27 : i64
    %106 = llvm.getelementptr %11[%105] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %c0_i64_28 = arith.constant 0 : i64
    %108 = arith.extui %101 : i32 to i64
    %109 = arith.addi %108, %c0_i64_28 : i64
    %110 = llvm.getelementptr %11[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %107, %110 : i64, !llvm.ptr
    %111 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_29 = arith.constant 24 : i32
    %112 = arith.addi %111, %c24_i32_29 : i32
    %c8_i32 = arith.constant 8 : i32
    %113 = arith.addi %112, %c8_i32 : i32
    %114 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_30 = arith.constant 8 : i32
    %115 = arith.addi %114, %c8_i32_30 : i32
    llvm.store %115, %4 : i32, !llvm.ptr
    %c0_i64_31 = arith.constant 0 : i64
    %116 = arith.extui %115 : i32 to i64
    %117 = arith.addi %116, %c0_i64_31 : i64
    %118 = llvm.getelementptr %11[%117] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c0_i64_32 = arith.constant 0 : i64
    %120 = arith.extui %113 : i32 to i64
    %121 = arith.addi %120, %c0_i64_32 : i64
    %122 = llvm.getelementptr %11[%121] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %119, %122 : i64, !llvm.ptr
    %123 = llvm.load %1 : !llvm.ptr -> i32
    %124 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_33 = arith.constant 0 : i64
    %125 = arith.extui %124 : i32 to i64
    %126 = arith.addi %125, %c0_i64_33 : i64
    %127 = llvm.getelementptr %11[%126] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %128 = llvm.load %127 : !llvm.ptr -> i64
    llvm.store %128, %6 : i64, !llvm.ptr
    %c24_i64_34 = arith.constant 24 : i64
    %129 = arith.extui %123 : i32 to i64
    %130 = arith.addi %129, %c24_i64_34 : i64
    %131 = llvm.getelementptr %11[%130] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %128, %131 : i64, !llvm.ptr
    %132 = llvm.load %1 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %133 = arith.addi %132, %c48_i32 : i32
    %c8_i32_35 = arith.constant 8 : i32
    %134 = arith.addi %133, %c8_i32_35 : i32
    %135 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_36 = arith.constant 0 : i64
    %136 = arith.extui %135 : i32 to i64
    %137 = arith.addi %136, %c0_i64_36 : i64
    %138 = llvm.getelementptr %11[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %139 = llvm.load %138 : !llvm.ptr -> i32
    %c0_i64_37 = arith.constant 0 : i64
    %140 = arith.extui %134 : i32 to i64
    %141 = arith.addi %140, %c0_i64_37 : i64
    %142 = llvm.getelementptr %11[%141] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %139, %142 : i32, !llvm.ptr
    %143 = llvm.load %1 : !llvm.ptr -> i32
    %144 = llvm.load %6 : !llvm.ptr -> i64
    %c48_i64 = arith.constant 48 : i64
    %145 = arith.extui %143 : i32 to i64
    %146 = arith.addi %145, %c48_i64 : i64
    %147 = llvm.getelementptr %11[%146] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %144, %147 : i64, !llvm.ptr
    %148 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_38 = arith.constant 24 : i32
    %149 = arith.addi %148, %c24_i32_38 : i32
    %c12_i32 = arith.constant 12 : i32
    %150 = arith.addi %149, %c12_i32 : i32
    llvm.store %150, %4 : i32, !llvm.ptr
    call @f82(%arg0, %150) : (!llvm.ptr, i32) -> ()
    %151 = llvm.load %4 : !llvm.ptr -> i32
    call @f84(%arg0, %151) : (!llvm.ptr, i32) -> ()
    %152 = llvm.load %0 : !llvm.ptr -> i32
    %153 = llvm.load %1 : !llvm.ptr -> i32
    %c48_i32_39 = arith.constant 48 : i32
    %154 = arith.addi %153, %c48_i32_39 : i32
    call @f75(%arg0, %152, %154) : (!llvm.ptr, i32, i32) -> ()
    %155 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_40 = arith.constant 64 : i32
    %156 = arith.addi %155, %c64_i32_40 : i32
    llvm.store %156, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb8:  // pred: ^bb6
    %157 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i32_41 = arith.constant 12 : i32
    %158 = arith.addi %157, %c12_i32_41 : i32
    call @f81(%arg0, %158) : (!llvm.ptr, i32) -> ()
    %159 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i64_42 = arith.constant 16 : i64
    %160 = arith.extui %159 : i32 to i64
    %161 = arith.addi %160, %c16_i64_42 : i64
    %162 = llvm.getelementptr %11[%161] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %163 = llvm.load %162 : !llvm.ptr -> i32
    llvm.store %163, %5 : i32, !llvm.ptr
    cf.br ^bb7
  }
  func.func @f7(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %1 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.getelementptr %1[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %4 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %5 = arith.extui %4 : i32 to i64
    %6 = arith.addi %5, %c0_i64 : i64
    %7 = llvm.getelementptr %3[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %9 = arith.cmpi eq, %8, %c2_i32 : i32
    %10 = arith.extui %9 : i1 to i32
    %c0_i32 = arith.constant 0 : i32
    %11 = arith.cmpi ne, %10, %c0_i32 : i32
    cf.cond_br %11, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %13 = arith.addi %12, %c4_i32 : i32
    llvm.store %13, %0 : i32, !llvm.ptr
    call @f96(%arg0, %13) : (!llvm.ptr, i32) -> ()
    %14 = llvm.load %0 : !llvm.ptr -> i32
    call @f97(%arg0, %14) : (!llvm.ptr, i32) -> ()
    cf.br ^bb3
  }
  func.func @f8(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %8 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %10 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.getelementptr %10[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %13 = llvm.load %9 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %14 = arith.subi %13, %c32_i32 : i32
    llvm.store %14, %4 : i32, !llvm.ptr
    llvm.store %14, %9 : i32, !llvm.ptr
    %15 = llvm.load %4 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %16 = arith.addi %15, %c24_i32 : i32
    %17 = llvm.load %3 : !llvm.ptr -> i32
    %c24_i32_7 = arith.constant 24 : i32
    %18 = arith.addi %17, %c24_i32_7 : i32
    %c0_i64 = arith.constant 0 : i64
    %19 = arith.extui %18 : i32 to i64
    %20 = arith.addi %19, %c0_i64 : i64
    %21 = llvm.getelementptr %12[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c0_i64_8 = arith.constant 0 : i64
    %23 = arith.extui %16 : i32 to i64
    %24 = arith.addi %23, %c0_i64_8 : i64
    %25 = llvm.getelementptr %12[%24] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %22, %25 : i64, !llvm.ptr
    %26 = llvm.load %4 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %27 = arith.addi %26, %c16_i32 : i32
    %28 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32_9 = arith.constant 16 : i32
    %29 = arith.addi %28, %c16_i32_9 : i32
    %c0_i64_10 = arith.constant 0 : i64
    %30 = arith.extui %29 : i32 to i64
    %31 = arith.addi %30, %c0_i64_10 : i64
    %32 = llvm.getelementptr %12[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %34 = arith.extui %27 : i32 to i64
    %35 = arith.addi %34, %c0_i64_11 : i64
    %36 = llvm.getelementptr %12[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %33, %36 : i64, !llvm.ptr
    %37 = llvm.load %4 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %38 = arith.addi %37, %c8_i32 : i32
    %39 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32_12 = arith.constant 8 : i32
    %40 = arith.addi %39, %c8_i32_12 : i32
    %c0_i64_13 = arith.constant 0 : i64
    %41 = arith.extui %40 : i32 to i64
    %42 = arith.addi %41, %c0_i64_13 : i64
    %43 = llvm.getelementptr %12[%42] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %44 = llvm.load %43 : !llvm.ptr -> i64
    %c0_i64_14 = arith.constant 0 : i64
    %45 = arith.extui %38 : i32 to i64
    %46 = arith.addi %45, %c0_i64_14 : i64
    %47 = llvm.getelementptr %12[%46] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %44, %47 : i64, !llvm.ptr
    %48 = llvm.load %4 : !llvm.ptr -> i32
    %49 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_15 = arith.constant 0 : i64
    %50 = arith.extui %49 : i32 to i64
    %51 = arith.addi %50, %c0_i64_15 : i64
    %52 = llvm.getelementptr %12[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %53 = llvm.load %52 : !llvm.ptr -> i64
    %c0_i64_16 = arith.constant 0 : i64
    %54 = arith.extui %48 : i32 to i64
    %55 = arith.addi %54, %c0_i64_16 : i64
    %56 = llvm.getelementptr %12[%55] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %53, %56 : i64, !llvm.ptr
    %c0_i32_17 = arith.constant 0 : i32
    llvm.store %c0_i32_17, %3 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %57 = llvm.load %0 : !llvm.ptr -> i32
    %58 = llvm.load %1 : !llvm.ptr -> i32
    %59 = llvm.load %4 : !llvm.ptr -> i32
    call @f70(%arg0, %57, %58, %59) : (!llvm.ptr, i32, i32, i32) -> ()
    %60 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_18 = arith.constant 32 : i32
    %61 = arith.addi %60, %c32_i32_18 : i32
    llvm.store %61, %9 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %62 = llvm.load %4 : !llvm.ptr -> i32
    %63 = llvm.load %3 : !llvm.ptr -> i32
    %64 = arith.addi %62, %63 : i32
    llvm.store %64, %5 : i32, !llvm.ptr
    %c0_i64_19 = arith.constant 0 : i64
    %65 = arith.extui %64 : i32 to i64
    %66 = arith.addi %65, %c0_i64_19 : i64
    %67 = llvm.getelementptr %12[%66] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %68 = llvm.load %67 : !llvm.ptr -> i8
    %69 = arith.extui %68 : i8 to i32
    llvm.store %69, %6 : i32, !llvm.ptr
    %70 = llvm.load %5 : !llvm.ptr -> i32
    %71 = llvm.load %4 : !llvm.ptr -> i32
    %72 = llvm.load %3 : !llvm.ptr -> i32
    %c31_i32 = arith.constant 31 : i32
    %73 = arith.xori %72, %c31_i32 : i32
    %74 = arith.addi %71, %73 : i32
    llvm.store %74, %7 : i32, !llvm.ptr
    %c0_i64_20 = arith.constant 0 : i64
    %75 = arith.extui %74 : i32 to i64
    %76 = arith.addi %75, %c0_i64_20 : i64
    %77 = llvm.getelementptr %12[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %78 = llvm.load %77 : !llvm.ptr -> i8
    %79 = arith.extui %78 : i8 to i32
    %c0_i64_21 = arith.constant 0 : i64
    %80 = arith.extui %70 : i32 to i64
    %81 = arith.addi %80, %c0_i64_21 : i64
    %82 = llvm.getelementptr %12[%81] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %83 = arith.trunci %79 : i32 to i8
    llvm.store %83, %82 : i8, !llvm.ptr
    %84 = llvm.load %7 : !llvm.ptr -> i32
    %85 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i64_22 = arith.constant 0 : i64
    %86 = arith.extui %84 : i32 to i64
    %87 = arith.addi %86, %c0_i64_22 : i64
    %88 = llvm.getelementptr %12[%87] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %89 = arith.trunci %85 : i32 to i8
    llvm.store %89, %88 : i8, !llvm.ptr
    %90 = llvm.load %3 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %91 = arith.addi %90, %c1_i32 : i32
    llvm.store %91, %3 : i32, !llvm.ptr
    %c16_i32_23 = arith.constant 16 : i32
    %92 = arith.cmpi eq, %91, %c16_i32_23 : i32
    %93 = arith.extui %92 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %94 = arith.xori %93, %c-1_i32 : i32
    %c0_i32_24 = arith.constant 0 : i32
    %95 = arith.cmpi ne, %94, %c0_i32_24 : i32
    cf.cond_br %95, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f9(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> i32
    %8 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.load %9 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c0_i64 : i64
    %15 = llvm.getelementptr %5[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i32
    llvm.store %16, %1 : i32, !llvm.ptr
    %17 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %18 = arith.extui %17 : i32 to i64
    %19 = arith.addi %18, %c4_i64 : i64
    %20 = llvm.getelementptr %5[%19] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %21 = llvm.load %20 : !llvm.ptr -> i32
    llvm.store %21, %0 : i32, !llvm.ptr
    %c0_i64_2 = arith.constant 0 : i64
    %22 = arith.extui %21 : i32 to i64
    %23 = arith.addi %22, %c0_i64_2 : i64
    %24 = llvm.getelementptr %5[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %25 = llvm.load %24 : !llvm.ptr -> i32
    llvm.store %25, %2 : i32, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    %26 = arith.cmpi eq, %25, %c0_i32_3 : i32
    %27 = arith.extui %26 : i1 to i32
    %c0_i32_4 = arith.constant 0 : i32
    %28 = arith.cmpi ne, %27, %c0_i32_4 : i32
    cf.cond_br %28, ^bb3, ^bb4
  ^bb2:  // pred: ^bb13
    return
  ^bb3:  // 2 preds: ^bb1, ^bb11
    %29 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64_5 = arith.constant 4 : i64
    %30 = arith.extui %29 : i32 to i64
    %31 = arith.addi %30, %c4_i64_5 : i64
    %32 = llvm.getelementptr %5[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.load %32 : !llvm.ptr -> i32
    llvm.store %33, %2 : i32, !llvm.ptr
    %c0_i32_6 = arith.constant 0 : i32
    %34 = arith.cmpi eq, %33, %c0_i32_6 : i32
    %35 = arith.extui %34 : i1 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %36 = arith.cmpi ne, %35, %c0_i32_7 : i32
    cf.cond_br %36, ^bb13, ^bb14
  ^bb4:  // pred: ^bb1
    %37 = llvm.load %1 : !llvm.ptr -> i32
    %38 = llvm.load %2 : !llvm.ptr -> i32
    %39 = arith.cmpi ult, %38, %11 : i32
    cf.cond_br %39, ^bb5, ^bb6
  ^bb5:  // 2 preds: ^bb4, ^bb6
    %40 = llvm.getelementptr %10[%38] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.load %41 : !llvm.ptr -> i32
    %c0_i32_8 = arith.constant 0 : i32
    %43 = arith.cmpi eq, %42, %c0_i32_8 : i32
    cf.cond_br %43, ^bb8, ^bb7
  ^bb6:  // pred: ^bb4
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb5
  ^bb7:  // 2 preds: ^bb5, ^bb8
    %44 = llvm.getelementptr %41[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %45 = llvm.getelementptr %41[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %46 = llvm.getelementptr %41[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %48 = llvm.load %46 : !llvm.ptr -> !llvm.ptr
    %49 = llvm.load %47 : !llvm.ptr -> i32
    %c0_i32_9 = arith.constant 0 : i32
    %50 = arith.cmpi eq, %49, %c0_i32_9 : i32
    cf.cond_br %50, ^bb10, ^bb9
  ^bb8:  // pred: ^bb5
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb7
  ^bb9:  // 2 preds: ^bb7, ^bb10
    %51 = llvm.load %45 : !llvm.ptr -> i32
    %52 = arith.cmpi ne, %7, %51 : i32
    cf.cond_br %52, ^bb12, ^bb11
  ^bb10:  // pred: ^bb7
    %c3_i32_10 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_10) : (i32) -> ()
    cf.br ^bb9
  ^bb11:  // 2 preds: ^bb9, ^bb12
    %53 = llvm.call %47(%48, %37) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    cf.br ^bb3
  ^bb12:  // pred: ^bb9
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb11
  ^bb13:  // 2 preds: ^bb3, ^bb14
    cf.br ^bb2
  ^bb14:  // pred: ^bb3
    %54 = llvm.load %1 : !llvm.ptr -> i32
    %55 = llvm.load %2 : !llvm.ptr -> i32
    %56 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c8_i64 : i64
    %59 = llvm.getelementptr %5[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i32
    call @f72(%arg0, %54, %55, %60) : (!llvm.ptr, i32, i32, i32) -> ()
    cf.br ^bb13
  }
  func.func @f10(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %11 = llvm.load %7 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %12 = arith.subi %11, %c64_i32 : i32
    llvm.store %12, %4 : i32, !llvm.ptr
    llvm.store %12, %7 : i32, !llvm.ptr
    %13 = llvm.load %4 : !llvm.ptr -> i32
    %14 = llvm.load %1 : !llvm.ptr -> i32
    %15 = llvm.load %2 : !llvm.ptr -> i32
    call @f69(%arg0, %13, %14, %15) : (!llvm.ptr, i32, i32, i32) -> ()
    %16 = llvm.load %3 : !llvm.ptr -> i32
    %c33_i32 = arith.constant 33 : i32
    %17 = arith.cmpi uge, %16, %c33_i32 : i32
    %18 = arith.extui %17 : i1 to i32
    %c0_i32_5 = arith.constant 0 : i32
    %19 = arith.cmpi ne, %18, %c0_i32_5 : i32
    cf.cond_br %19, ^bb4, ^bb5
  ^bb2:  // pred: ^bb7
    return
  ^bb3:  // pred: ^bb5
    %c32_i32 = arith.constant 32 : i32
    %c32_i32_6 = arith.constant 32 : i32
    %20 = llvm.load %3 : !llvm.ptr -> i32
    %21 = arith.subi %c32_i32_6, %20 : i32
    %c1048644_i32 = arith.constant 1048644 : i32
    call @f130(%arg0, %c32_i32, %21, %c1048644_i32) : (!llvm.ptr, i32, i32, i32) -> ()
    llvm.unreachable
  ^bb4:  // pred: ^bb1
    %22 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_7 = arith.constant 32 : i32
    %c1048628_i32 = arith.constant 1048628 : i32
    call @f129(%arg0, %22, %c32_i32_7, %c1048628_i32) : (!llvm.ptr, i32, i32, i32) -> ()
    llvm.unreachable
  ^bb5:  // pred: ^bb1
    %23 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_8 = arith.constant 0 : i32
    %24 = arith.cmpi ne, %23, %c0_i32_8 : i32
    cf.cond_br %24, ^bb3, ^bb6
  ^bb6:  // pred: ^bb5
    %c24_i32 = arith.constant 24 : i32
    llvm.store %c24_i32, %3 : i32, !llvm.ptr
    %25 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_9 = arith.constant 32 : i32
    %26 = arith.addi %25, %c32_i32_9 : i32
    %c24_i32_10 = arith.constant 24 : i32
    %27 = arith.addi %26, %c24_i32_10 : i32
    %c0_i64_11 = arith.constant 0 : i64
    %c0_i64_12 = arith.constant 0 : i64
    %28 = arith.extui %27 : i32 to i64
    %29 = arith.addi %28, %c0_i64_12 : i64
    %30 = llvm.getelementptr %10[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_11, %30 : i64, !llvm.ptr
    %31 = llvm.load %4 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %32 = arith.addi %31, %c48_i32 : i32
    %c0_i64_13 = arith.constant 0 : i64
    %c0_i64_14 = arith.constant 0 : i64
    %33 = arith.extui %32 : i32 to i64
    %34 = arith.addi %33, %c0_i64_14 : i64
    %35 = llvm.getelementptr %10[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_13, %35 : i64, !llvm.ptr
    %36 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_15 = arith.constant 32 : i32
    %37 = arith.addi %36, %c32_i32_15 : i32
    %c8_i32 = arith.constant 8 : i32
    %38 = arith.addi %37, %c8_i32 : i32
    %c0_i64_16 = arith.constant 0 : i64
    %c0_i64_17 = arith.constant 0 : i64
    %39 = arith.extui %38 : i32 to i64
    %40 = arith.addi %39, %c0_i64_17 : i64
    %41 = llvm.getelementptr %10[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_16, %41 : i64, !llvm.ptr
    %42 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_18 = arith.constant 0 : i64
    %c32_i64 = arith.constant 32 : i64
    %43 = arith.extui %42 : i32 to i64
    %44 = arith.addi %43, %c32_i64 : i64
    %45 = llvm.getelementptr %10[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_18, %45 : i64, !llvm.ptr
    %46 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_19 = arith.constant 32 : i32
    %47 = arith.addi %46, %c32_i32_19 : i32
    llvm.store %47, %2 : i32, !llvm.ptr
    cf.br ^bb8
  ^bb7:  // pred: ^bb9
    %48 = llvm.load %0 : !llvm.ptr -> i32
    %49 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i64_20 = arith.constant 32 : i64
    %50 = arith.extui %49 : i32 to i64
    %51 = arith.addi %50, %c32_i64_20 : i64
    %52 = llvm.getelementptr %10[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %53 = llvm.load %52 : !llvm.ptr -> i64
    %c0_i64_21 = arith.constant 0 : i64
    %54 = arith.extui %48 : i32 to i64
    %55 = arith.addi %54, %c0_i64_21 : i64
    %56 = llvm.getelementptr %10[%55] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %53, %56 : i64, !llvm.ptr
    %57 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_22 = arith.constant 24 : i32
    %58 = arith.addi %57, %c24_i32_22 : i32
    %59 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_23 = arith.constant 32 : i32
    %60 = arith.addi %59, %c32_i32_23 : i32
    %c24_i32_24 = arith.constant 24 : i32
    %61 = arith.addi %60, %c24_i32_24 : i32
    %c0_i64_25 = arith.constant 0 : i64
    %62 = arith.extui %61 : i32 to i64
    %63 = arith.addi %62, %c0_i64_25 : i64
    %64 = llvm.getelementptr %10[%63] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %c0_i64_26 = arith.constant 0 : i64
    %66 = arith.extui %58 : i32 to i64
    %67 = arith.addi %66, %c0_i64_26 : i64
    %68 = llvm.getelementptr %10[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %65, %68 : i64, !llvm.ptr
    %69 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %70 = arith.addi %69, %c16_i32 : i32
    %71 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_27 = arith.constant 32 : i32
    %72 = arith.addi %71, %c32_i32_27 : i32
    %c16_i32_28 = arith.constant 16 : i32
    %73 = arith.addi %72, %c16_i32_28 : i32
    %c0_i64_29 = arith.constant 0 : i64
    %74 = arith.extui %73 : i32 to i64
    %75 = arith.addi %74, %c0_i64_29 : i64
    %76 = llvm.getelementptr %10[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %77 = llvm.load %76 : !llvm.ptr -> i64
    %c0_i64_30 = arith.constant 0 : i64
    %78 = arith.extui %70 : i32 to i64
    %79 = arith.addi %78, %c0_i64_30 : i64
    %80 = llvm.getelementptr %10[%79] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %77, %80 : i64, !llvm.ptr
    %81 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_31 = arith.constant 8 : i32
    %82 = arith.addi %81, %c8_i32_31 : i32
    %83 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_32 = arith.constant 32 : i32
    %84 = arith.addi %83, %c32_i32_32 : i32
    %c8_i32_33 = arith.constant 8 : i32
    %85 = arith.addi %84, %c8_i32_33 : i32
    %c0_i64_34 = arith.constant 0 : i64
    %86 = arith.extui %85 : i32 to i64
    %87 = arith.addi %86, %c0_i64_34 : i64
    %88 = llvm.getelementptr %10[%87] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c0_i64_35 = arith.constant 0 : i64
    %90 = arith.extui %82 : i32 to i64
    %91 = arith.addi %90, %c0_i64_35 : i64
    %92 = llvm.getelementptr %10[%91] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %89, %92 : i64, !llvm.ptr
    %93 = llvm.load %4 : !llvm.ptr -> i32
    %c64_i32_36 = arith.constant 64 : i32
    %94 = arith.addi %93, %c64_i32_36 : i32
    llvm.store %94, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb8:  // 2 preds: ^bb6, ^bb8
    %95 = llvm.load %2 : !llvm.ptr -> i32
    %96 = llvm.load %4 : !llvm.ptr -> i32
    %97 = llvm.load %3 : !llvm.ptr -> i32
    %98 = arith.addi %96, %97 : i32
    %c0_i64_37 = arith.constant 0 : i64
    %99 = arith.extui %98 : i32 to i64
    %100 = arith.addi %99, %c0_i64_37 : i64
    %101 = llvm.getelementptr %10[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %102 = llvm.load %101 : !llvm.ptr -> i64
    llvm.store %102, %5 : i64, !llvm.ptr
    %c56_i64 = arith.constant 56 : i64
    %c63_i64 = arith.constant 63 : i64
    %103 = arith.cmpi ule, %c56_i64, %c63_i64 : i64
    %104 = scf.if %103 -> (i64) {
      %150 = arith.shli %102, %c56_i64 : i64
      scf.yield %150 : i64
    } else {
      %c0_i64_56 = arith.constant 0 : i64
      scf.yield %c0_i64_56 : i64
    }
    %105 = llvm.load %5 : !llvm.ptr -> i64
    %c65280_i64 = arith.constant 65280 : i64
    %106 = arith.andi %105, %c65280_i64 : i64
    %c40_i64 = arith.constant 40 : i64
    %c63_i64_38 = arith.constant 63 : i64
    %107 = arith.cmpi ule, %c40_i64, %c63_i64_38 : i64
    %108 = scf.if %107 -> (i64) {
      %150 = arith.shli %106, %c40_i64 : i64
      scf.yield %150 : i64
    } else {
      %c0_i64_56 = arith.constant 0 : i64
      scf.yield %c0_i64_56 : i64
    }
    %109 = arith.ori %104, %108 : i64
    %110 = llvm.load %5 : !llvm.ptr -> i64
    %c16711680_i64 = arith.constant 16711680 : i64
    %111 = arith.andi %110, %c16711680_i64 : i64
    %c24_i64 = arith.constant 24 : i64
    %c63_i64_39 = arith.constant 63 : i64
    %112 = arith.cmpi ule, %c24_i64, %c63_i64_39 : i64
    %113 = scf.if %112 -> (i64) {
      %150 = arith.shli %111, %c24_i64 : i64
      scf.yield %150 : i64
    } else {
      %c0_i64_56 = arith.constant 0 : i64
      scf.yield %c0_i64_56 : i64
    }
    %114 = llvm.load %5 : !llvm.ptr -> i64
    %c4278190080_i64 = arith.constant 4278190080 : i64
    %115 = arith.andi %114, %c4278190080_i64 : i64
    %c8_i64 = arith.constant 8 : i64
    %c63_i64_40 = arith.constant 63 : i64
    %116 = arith.cmpi ule, %c8_i64, %c63_i64_40 : i64
    %117 = scf.if %116 -> (i64) {
      %150 = arith.shli %115, %c8_i64 : i64
      scf.yield %150 : i64
    } else {
      %c0_i64_56 = arith.constant 0 : i64
      scf.yield %c0_i64_56 : i64
    }
    %118 = arith.ori %113, %117 : i64
    %119 = arith.ori %109, %118 : i64
    %120 = llvm.load %5 : !llvm.ptr -> i64
    %c8_i64_41 = arith.constant 8 : i64
    %c63_i64_42 = arith.constant 63 : i64
    %121 = arith.cmpi ule, %c8_i64_41, %c63_i64_42 : i64
    %122 = scf.if %121 -> (i64) {
      %150 = arith.shrui %120, %c8_i64_41 : i64
      scf.yield %150 : i64
    } else {
      %c0_i64_56 = arith.constant 0 : i64
      scf.yield %c0_i64_56 : i64
    }
    %c4278190080_i64_43 = arith.constant 4278190080 : i64
    %123 = arith.andi %122, %c4278190080_i64_43 : i64
    %124 = llvm.load %5 : !llvm.ptr -> i64
    %c24_i64_44 = arith.constant 24 : i64
    %c63_i64_45 = arith.constant 63 : i64
    %125 = arith.cmpi ule, %c24_i64_44, %c63_i64_45 : i64
    %126 = scf.if %125 -> (i64) {
      %150 = arith.shrui %124, %c24_i64_44 : i64
      scf.yield %150 : i64
    } else {
      %c0_i64_56 = arith.constant 0 : i64
      scf.yield %c0_i64_56 : i64
    }
    %c16711680_i64_46 = arith.constant 16711680 : i64
    %127 = arith.andi %126, %c16711680_i64_46 : i64
    %128 = arith.ori %123, %127 : i64
    %129 = llvm.load %5 : !llvm.ptr -> i64
    %c40_i64_47 = arith.constant 40 : i64
    %c63_i64_48 = arith.constant 63 : i64
    %130 = arith.cmpi ule, %c40_i64_47, %c63_i64_48 : i64
    %131 = scf.if %130 -> (i64) {
      %150 = arith.shrui %129, %c40_i64_47 : i64
      scf.yield %150 : i64
    } else {
      %c0_i64_56 = arith.constant 0 : i64
      scf.yield %c0_i64_56 : i64
    }
    %c65280_i64_49 = arith.constant 65280 : i64
    %132 = arith.andi %131, %c65280_i64_49 : i64
    %133 = llvm.load %5 : !llvm.ptr -> i64
    %c56_i64_50 = arith.constant 56 : i64
    %c63_i64_51 = arith.constant 63 : i64
    %134 = arith.cmpi ule, %c56_i64_50, %c63_i64_51 : i64
    %135 = scf.if %134 -> (i64) {
      %150 = arith.shrui %133, %c56_i64_50 : i64
      scf.yield %150 : i64
    } else {
      %c0_i64_56 = arith.constant 0 : i64
      scf.yield %c0_i64_56 : i64
    }
    %136 = arith.ori %132, %135 : i64
    %137 = arith.ori %128, %136 : i64
    %138 = arith.ori %119, %137 : i64
    %c0_i64_52 = arith.constant 0 : i64
    %139 = arith.extui %95 : i32 to i64
    %140 = arith.addi %139, %c0_i64_52 : i64
    %141 = llvm.getelementptr %10[%140] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %138, %141 : i64, !llvm.ptr
    %142 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_53 = arith.constant 8 : i32
    %143 = arith.addi %142, %c8_i32_53 : i32
    llvm.store %143, %2 : i32, !llvm.ptr
    %144 = llvm.load %3 : !llvm.ptr -> i32
    %c-8_i32 = arith.constant -8 : i32
    %145 = arith.addi %144, %c-8_i32 : i32
    llvm.store %145, %3 : i32, !llvm.ptr
    %c-8_i32_54 = arith.constant -8 : i32
    %146 = arith.cmpi eq, %145, %c-8_i32_54 : i32
    %147 = arith.extui %146 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %148 = arith.xori %147, %c-1_i32 : i32
    %c0_i32_55 = arith.constant 0 : i32
    %149 = arith.cmpi ne, %148, %c0_i32_55 : i32
    cf.cond_br %149, ^bb8, ^bb9
  ^bb9:  // pred: ^bb8
    cf.br ^bb7
  }
  func.func public @mark_used(%arg0: !llvm.ptr) attributes {llvm.emit_c_interface} {
    %c0_i32 = arith.constant 0 : i32
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %0 : i32, !llvm.ptr
    %1 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %3 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %4 = arith.subi %3, %c16_i32 : i32
    llvm.store %4, %0 : i32, !llvm.ptr
    llvm.store %4, %2 : i32, !llvm.ptr
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c15_i32 = arith.constant 15 : i32
    %6 = arith.addi %5, %c15_i32 : i32
    %c0_i32_0 = arith.constant 0 : i32
    call @f60(%arg0, %6, %c0_i32_0) : (!llvm.ptr, i32, i32) -> ()
    call @f12(%arg0) : (!llvm.ptr) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f12(%arg0: !llvm.ptr) {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c1048912_i32 = arith.constant 1048912 : i32
    call @f135(%arg0, %c1048912_i32) : (!llvm.ptr, i32) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func public @user_entrypoint(%arg0: !llvm.ptr, %arg1: i32) -> i32 attributes {llvm.emit_c_interface} {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %3 : i64, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    %c1_i64_4 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32_3, %4 : i32, !llvm.ptr
    %5 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    %7 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.getelementptr %7[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %10 = llvm.load %6 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %11 = arith.subi %10, %c64_i32 : i32
    llvm.store %11, %1 : i32, !llvm.ptr
    llvm.store %11, %6 : i32, !llvm.ptr
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %2 : i32, !llvm.ptr
    %c1_i32_5 = arith.constant 1 : i32
    %12 = call @f61(%arg0, %c1_i32_5) : (!llvm.ptr, i32) -> i32
    %c0_i32_6 = arith.constant 0 : i32
    %13 = arith.cmpi ne, %12, %c0_i32_6 : i32
    cf.cond_br %13, ^bb3, ^bb4
  ^bb2(%14: i32):  // pred: ^bb3
    return %14 : i32
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %15 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_7 = arith.constant 64 : i32
    %16 = arith.addi %15, %c64_i32_7 : i32
    llvm.store %16, %6 : i32, !llvm.ptr
    %17 = llvm.load %2 : !llvm.ptr -> i32
    cf.br ^bb2(%17 : i32)
  ^bb4:  // pred: ^bb1
    %c1_i32_8 = arith.constant 1 : i32
    %c0_i32_9 = arith.constant 0 : i32
    call @f60(%arg0, %c1_i32_8, %c0_i32_9) : (!llvm.ptr, i32, i32) -> ()
    %18 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %19 = arith.addi %18, %c4_i32 : i32
    %c1_i32_10 = arith.constant 1 : i32
    %20 = llvm.load %0 : !llvm.ptr -> i32
    call @f35(%arg0, %19, %c1_i32_10, %20) : (!llvm.ptr, i32, i32, i32) -> ()
    %21 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %22 = arith.addi %21, %c32_i32 : i32
    %23 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i32_11 = arith.constant 4 : i32
    %24 = arith.addi %23, %c4_i32_11 : i32
    %c1_i32_12 = arith.constant 1 : i32
    %c1049180_i32 = arith.constant 1049180 : i32
    call @f0(%arg0, %22, %24, %c1_i32_12, %c1049180_i32) : (!llvm.ptr, i32, i32, i32, i32) -> ()
    %25 = llvm.load %1 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %26 = arith.addi %25, %c48_i32 : i32
    %c8_i32 = arith.constant 8 : i32
    %27 = arith.addi %26, %c8_i32 : i32
    %28 = llvm.load %1 : !llvm.ptr -> i32
    %c44_i32 = arith.constant 44 : i32
    %29 = arith.addi %28, %c44_i32 : i32
    %c0_i64_13 = arith.constant 0 : i64
    %30 = arith.extui %29 : i32 to i64
    %31 = arith.addi %30, %c0_i64_13 : i64
    %32 = llvm.getelementptr %9[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.load %32 : !llvm.ptr -> i32
    llvm.store %33, %0 : i32, !llvm.ptr
    %c0_i64_14 = arith.constant 0 : i64
    %34 = arith.extui %27 : i32 to i64
    %35 = arith.addi %34, %c0_i64_14 : i64
    %36 = llvm.getelementptr %9[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %33, %36 : i32, !llvm.ptr
    %37 = llvm.load %1 : !llvm.ptr -> i32
    %38 = llvm.load %1 : !llvm.ptr -> i32
    %c36_i64 = arith.constant 36 : i64
    %39 = arith.extui %38 : i32 to i64
    %40 = arith.addi %39, %c36_i64 : i64
    %41 = llvm.getelementptr %9[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %42 = llvm.load %41 : !llvm.ptr -> i64
    llvm.store %42, %3 : i64, !llvm.ptr
    %c48_i64 = arith.constant 48 : i64
    %43 = arith.extui %37 : i32 to i64
    %44 = arith.addi %43, %c48_i64 : i64
    %45 = llvm.getelementptr %9[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %42, %45 : i64, !llvm.ptr
    %46 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i64 = arith.constant 32 : i64
    %47 = arith.extui %46 : i32 to i64
    %48 = arith.addi %47, %c32_i64 : i64
    %49 = llvm.getelementptr %9[%48] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %50 = llvm.load %49 : !llvm.ptr -> i32
    llvm.store %50, %2 : i32, !llvm.ptr
    %51 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %52 = arith.addi %51, %c16_i32 : i32
    %c8_i32_15 = arith.constant 8 : i32
    %53 = arith.addi %52, %c8_i32_15 : i32
    llvm.store %53, %4 : i32, !llvm.ptr
    %54 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_16 = arith.constant 0 : i64
    %55 = arith.extui %53 : i32 to i64
    %56 = arith.addi %55, %c0_i64_16 : i64
    %57 = llvm.getelementptr %9[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %54, %57 : i32, !llvm.ptr
    %58 = llvm.load %1 : !llvm.ptr -> i32
    %59 = llvm.load %3 : !llvm.ptr -> i64
    %c16_i64 = arith.constant 16 : i64
    %60 = arith.extui %58 : i32 to i64
    %61 = arith.addi %60, %c16_i64 : i64
    %62 = llvm.getelementptr %9[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %59, %62 : i64, !llvm.ptr
    %c1_i32_17 = arith.constant 1 : i32
    %c0_i32_18 = arith.constant 0 : i32
    call @f44(%arg0, %c1_i32_17, %c0_i32_18) : (!llvm.ptr, i32, i32) -> ()
    %c1_i32_19 = arith.constant 1 : i32
    %63 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %64 = arith.extui %63 : i32 to i64
    %65 = arith.addi %64, %c20_i64 : i64
    %66 = llvm.getelementptr %9[%65] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %67 = llvm.load %66 : !llvm.ptr -> i32
    %68 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_20 = arith.constant 0 : i64
    %69 = arith.extui %68 : i32 to i64
    %70 = arith.addi %69, %c0_i64_20 : i64
    %71 = llvm.getelementptr %9[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.load %71 : !llvm.ptr -> i32
    call @f38(%arg0, %c1_i32_19, %67, %72) : (!llvm.ptr, i32, i32, i32) -> ()
    %73 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32_21 = arith.constant 16 : i32
    %74 = arith.addi %73, %c16_i32_21 : i32
    call @f96(%arg0, %74) : (!llvm.ptr, i32) -> ()
    %75 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32_22 = arith.constant 16 : i32
    %76 = arith.addi %75, %c16_i32_22 : i32
    call @f97(%arg0, %76) : (!llvm.ptr, i32) -> ()
    cf.br ^bb3
  }
  func.func @f14(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %2 = llvm.load %0 : !llvm.ptr -> i32
    %3 = llvm.load %1 : !llvm.ptr -> i32
    call @f123(%arg0, %2, %3) : (!llvm.ptr, i32, i32) -> ()
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f15(%arg0: !llvm.ptr) -> i64 {
    %0 = llvm.getelementptr %arg0[80] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.getelementptr %0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    %3 = llvm.getelementptr %0[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.call %2(%4) vararg(!llvm.func<i64 (...)>) : !llvm.ptr, (!llvm.ptr) -> i64
    cf.br ^bb2(%5 : i64)
  ^bb2(%6: i64):  // pred: ^bb1
    return %6 : i64
  }
  func.func @f16(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[104] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %9[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %14 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %15 = arith.subi %14, %c32_i32 : i32
    llvm.store %15, %1 : i32, !llvm.ptr
    llvm.store %15, %5 : i32, !llvm.ptr
    %16 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %17 = arith.addi %16, %c8_i32 : i32
    %c16_i32 = arith.constant 16 : i32
    %18 = arith.addi %17, %c16_i32 : i32
    llvm.store %18, %2 : i32, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %19 = arith.extui %18 : i32 to i64
    %20 = arith.addi %19, %c0_i64 : i64
    %21 = llvm.getelementptr %8[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_3, %21 : i32, !llvm.ptr
    %22 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_4 = arith.constant 8 : i32
    %23 = arith.addi %22, %c8_i32_4 : i32
    %c8_i32_5 = arith.constant 8 : i32
    %24 = arith.addi %23, %c8_i32_5 : i32
    llvm.store %24, %3 : i32, !llvm.ptr
    %c0_i64_6 = arith.constant 0 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %25 = arith.extui %24 : i32 to i64
    %26 = arith.addi %25, %c0_i64_7 : i64
    %27 = llvm.getelementptr %8[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_6, %27 : i64, !llvm.ptr
    %28 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_8 = arith.constant 0 : i64
    %c8_i64 = arith.constant 8 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c8_i64 : i64
    %31 = llvm.getelementptr %8[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_8, %31 : i64, !llvm.ptr
    %32 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_9 = arith.constant 8 : i32
    %33 = arith.addi %32, %c8_i32_9 : i32
    %34 = llvm.call %11(%13, %33) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %35 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_10 = arith.constant 16 : i32
    %36 = arith.addi %35, %c16_i32_10 : i32
    %37 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_11 = arith.constant 0 : i64
    %38 = arith.extui %37 : i32 to i64
    %39 = arith.addi %38, %c0_i64_11 : i64
    %40 = llvm.getelementptr %8[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i32
    %c0_i64_12 = arith.constant 0 : i64
    %42 = arith.extui %36 : i32 to i64
    %43 = arith.addi %42, %c0_i64_12 : i64
    %44 = llvm.getelementptr %8[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i32, !llvm.ptr
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_13 = arith.constant 8 : i32
    %46 = arith.addi %45, %c8_i32_13 : i32
    %47 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_14 = arith.constant 0 : i64
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.addi %48, %c0_i64_14 : i64
    %50 = llvm.getelementptr %8[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %52 = arith.extui %46 : i32 to i64
    %53 = arith.addi %52, %c0_i64_15 : i64
    %54 = llvm.getelementptr %8[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %51, %54 : i64, !llvm.ptr
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %56 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64_16 = arith.constant 8 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c8_i64_16 : i64
    %59 = llvm.getelementptr %8[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c0_i64_17 = arith.constant 0 : i64
    %61 = arith.extui %55 : i32 to i64
    %62 = arith.addi %61, %c0_i64_17 : i64
    %63 = llvm.getelementptr %8[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %60, %63 : i64, !llvm.ptr
    %64 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_18 = arith.constant 32 : i32
    %65 = arith.addi %64, %c32_i32_18 : i32
    llvm.store %65, %5 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f17(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[128] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %9[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %14 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %15 = arith.subi %14, %c32_i32 : i32
    llvm.store %15, %1 : i32, !llvm.ptr
    llvm.store %15, %5 : i32, !llvm.ptr
    %16 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %17 = arith.addi %16, %c8_i32 : i32
    %c16_i32 = arith.constant 16 : i32
    %18 = arith.addi %17, %c16_i32 : i32
    llvm.store %18, %2 : i32, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %19 = arith.extui %18 : i32 to i64
    %20 = arith.addi %19, %c0_i64 : i64
    %21 = llvm.getelementptr %8[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_3, %21 : i32, !llvm.ptr
    %22 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_4 = arith.constant 8 : i32
    %23 = arith.addi %22, %c8_i32_4 : i32
    %c8_i32_5 = arith.constant 8 : i32
    %24 = arith.addi %23, %c8_i32_5 : i32
    llvm.store %24, %3 : i32, !llvm.ptr
    %c0_i64_6 = arith.constant 0 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %25 = arith.extui %24 : i32 to i64
    %26 = arith.addi %25, %c0_i64_7 : i64
    %27 = llvm.getelementptr %8[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_6, %27 : i64, !llvm.ptr
    %28 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_8 = arith.constant 0 : i64
    %c8_i64 = arith.constant 8 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c8_i64 : i64
    %31 = llvm.getelementptr %8[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_8, %31 : i64, !llvm.ptr
    %32 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_9 = arith.constant 8 : i32
    %33 = arith.addi %32, %c8_i32_9 : i32
    %34 = llvm.call %11(%13, %33) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %35 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_10 = arith.constant 16 : i32
    %36 = arith.addi %35, %c16_i32_10 : i32
    %37 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_11 = arith.constant 0 : i64
    %38 = arith.extui %37 : i32 to i64
    %39 = arith.addi %38, %c0_i64_11 : i64
    %40 = llvm.getelementptr %8[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i32
    %c0_i64_12 = arith.constant 0 : i64
    %42 = arith.extui %36 : i32 to i64
    %43 = arith.addi %42, %c0_i64_12 : i64
    %44 = llvm.getelementptr %8[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i32, !llvm.ptr
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_13 = arith.constant 8 : i32
    %46 = arith.addi %45, %c8_i32_13 : i32
    %47 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_14 = arith.constant 0 : i64
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.addi %48, %c0_i64_14 : i64
    %50 = llvm.getelementptr %8[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %52 = arith.extui %46 : i32 to i64
    %53 = arith.addi %52, %c0_i64_15 : i64
    %54 = llvm.getelementptr %8[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %51, %54 : i64, !llvm.ptr
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %56 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64_16 = arith.constant 8 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c8_i64_16 : i64
    %59 = llvm.getelementptr %8[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c0_i64_17 = arith.constant 0 : i64
    %61 = arith.extui %55 : i32 to i64
    %62 = arith.addi %61, %c0_i64_17 : i64
    %63 = llvm.getelementptr %8[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %60, %63 : i64, !llvm.ptr
    %64 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_18 = arith.constant 32 : i32
    %65 = arith.addi %64, %c32_i32_18 : i32
    llvm.store %65, %5 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f18(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[152] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %9[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %14 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %15 = arith.subi %14, %c32_i32 : i32
    llvm.store %15, %1 : i32, !llvm.ptr
    llvm.store %15, %5 : i32, !llvm.ptr
    %16 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %17 = arith.addi %16, %c8_i32 : i32
    %c16_i32 = arith.constant 16 : i32
    %18 = arith.addi %17, %c16_i32 : i32
    llvm.store %18, %2 : i32, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %19 = arith.extui %18 : i32 to i64
    %20 = arith.addi %19, %c0_i64 : i64
    %21 = llvm.getelementptr %8[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_3, %21 : i32, !llvm.ptr
    %22 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_4 = arith.constant 8 : i32
    %23 = arith.addi %22, %c8_i32_4 : i32
    %c8_i32_5 = arith.constant 8 : i32
    %24 = arith.addi %23, %c8_i32_5 : i32
    llvm.store %24, %3 : i32, !llvm.ptr
    %c0_i64_6 = arith.constant 0 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %25 = arith.extui %24 : i32 to i64
    %26 = arith.addi %25, %c0_i64_7 : i64
    %27 = llvm.getelementptr %8[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_6, %27 : i64, !llvm.ptr
    %28 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_8 = arith.constant 0 : i64
    %c8_i64 = arith.constant 8 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c8_i64 : i64
    %31 = llvm.getelementptr %8[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_8, %31 : i64, !llvm.ptr
    %32 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_9 = arith.constant 8 : i32
    %33 = arith.addi %32, %c8_i32_9 : i32
    %34 = llvm.call %11(%13, %33) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %35 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_10 = arith.constant 16 : i32
    %36 = arith.addi %35, %c16_i32_10 : i32
    %37 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_11 = arith.constant 0 : i64
    %38 = arith.extui %37 : i32 to i64
    %39 = arith.addi %38, %c0_i64_11 : i64
    %40 = llvm.getelementptr %8[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i32
    %c0_i64_12 = arith.constant 0 : i64
    %42 = arith.extui %36 : i32 to i64
    %43 = arith.addi %42, %c0_i64_12 : i64
    %44 = llvm.getelementptr %8[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i32, !llvm.ptr
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_13 = arith.constant 8 : i32
    %46 = arith.addi %45, %c8_i32_13 : i32
    %47 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_14 = arith.constant 0 : i64
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.addi %48, %c0_i64_14 : i64
    %50 = llvm.getelementptr %8[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %52 = arith.extui %46 : i32 to i64
    %53 = arith.addi %52, %c0_i64_15 : i64
    %54 = llvm.getelementptr %8[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %51, %54 : i64, !llvm.ptr
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %56 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64_16 = arith.constant 8 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c8_i64_16 : i64
    %59 = llvm.getelementptr %8[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c0_i64_17 = arith.constant 0 : i64
    %61 = arith.extui %55 : i32 to i64
    %62 = arith.addi %61, %c0_i64_17 : i64
    %63 = llvm.getelementptr %8[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %60, %63 : i64, !llvm.ptr
    %64 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_18 = arith.constant 32 : i32
    %65 = arith.addi %64, %c32_i32_18 : i32
    llvm.store %65, %5 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f19(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[176] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.getelementptr %0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    %3 = llvm.getelementptr %0[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.call %2(%4) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr) -> i32
    cf.br ^bb2(%5 : i32)
  ^bb2(%6: i32):  // pred: ^bb1
    return %6 : i32
  }
  func.func @f20(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[200] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.getelementptr %0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    %3 = llvm.getelementptr %0[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.call %2(%4) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr) -> i32
    cf.br ^bb2(%5 : i32)
  ^bb2(%6: i32):  // pred: ^bb1
    return %6 : i32
  }
  func.func @f21(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[224] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %9[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %14 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %15 = arith.subi %14, %c32_i32 : i32
    llvm.store %15, %1 : i32, !llvm.ptr
    llvm.store %15, %5 : i32, !llvm.ptr
    %16 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %17 = arith.addi %16, %c8_i32 : i32
    %c16_i32 = arith.constant 16 : i32
    %18 = arith.addi %17, %c16_i32 : i32
    llvm.store %18, %2 : i32, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %19 = arith.extui %18 : i32 to i64
    %20 = arith.addi %19, %c0_i64 : i64
    %21 = llvm.getelementptr %8[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_3, %21 : i32, !llvm.ptr
    %22 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_4 = arith.constant 8 : i32
    %23 = arith.addi %22, %c8_i32_4 : i32
    %c8_i32_5 = arith.constant 8 : i32
    %24 = arith.addi %23, %c8_i32_5 : i32
    llvm.store %24, %3 : i32, !llvm.ptr
    %c0_i64_6 = arith.constant 0 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %25 = arith.extui %24 : i32 to i64
    %26 = arith.addi %25, %c0_i64_7 : i64
    %27 = llvm.getelementptr %8[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_6, %27 : i64, !llvm.ptr
    %28 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_8 = arith.constant 0 : i64
    %c8_i64 = arith.constant 8 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c8_i64 : i64
    %31 = llvm.getelementptr %8[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_8, %31 : i64, !llvm.ptr
    %32 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_9 = arith.constant 8 : i32
    %33 = arith.addi %32, %c8_i32_9 : i32
    %34 = llvm.call %11(%13, %33) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %35 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_10 = arith.constant 16 : i32
    %36 = arith.addi %35, %c16_i32_10 : i32
    %37 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_11 = arith.constant 0 : i64
    %38 = arith.extui %37 : i32 to i64
    %39 = arith.addi %38, %c0_i64_11 : i64
    %40 = llvm.getelementptr %8[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i32
    %c0_i64_12 = arith.constant 0 : i64
    %42 = arith.extui %36 : i32 to i64
    %43 = arith.addi %42, %c0_i64_12 : i64
    %44 = llvm.getelementptr %8[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i32, !llvm.ptr
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_13 = arith.constant 8 : i32
    %46 = arith.addi %45, %c8_i32_13 : i32
    %47 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_14 = arith.constant 0 : i64
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.addi %48, %c0_i64_14 : i64
    %50 = llvm.getelementptr %8[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %52 = arith.extui %46 : i32 to i64
    %53 = arith.addi %52, %c0_i64_15 : i64
    %54 = llvm.getelementptr %8[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %51, %54 : i64, !llvm.ptr
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %56 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64_16 = arith.constant 8 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c8_i64_16 : i64
    %59 = llvm.getelementptr %8[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c0_i64_17 = arith.constant 0 : i64
    %61 = arith.extui %55 : i32 to i64
    %62 = arith.addi %61, %c0_i64_17 : i64
    %63 = llvm.getelementptr %8[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %60, %63 : i64, !llvm.ptr
    %64 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_18 = arith.constant 32 : i32
    %65 = arith.addi %64, %c32_i32_18 : i32
    llvm.store %65, %5 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f22(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %6 : i64, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[248] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.getelementptr %12[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %15 = llvm.getelementptr %12[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %17 = llvm.load %8 : !llvm.ptr -> i32
    %c96_i32 = arith.constant 96 : i32
    %18 = arith.subi %17, %c96_i32 : i32
    llvm.store %18, %1 : i32, !llvm.ptr
    llvm.store %18, %8 : i32, !llvm.ptr
    %c24_i32 = arith.constant 24 : i32
    llvm.store %c24_i32, %2 : i32, !llvm.ptr
    %19 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_6 = arith.constant 24 : i32
    %20 = arith.addi %19, %c24_i32_6 : i32
    llvm.store %20, %3 : i32, !llvm.ptr
    %c0_i64_7 = arith.constant 0 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %21 = arith.extui %20 : i32 to i64
    %22 = arith.addi %21, %c0_i64_8 : i64
    %23 = llvm.getelementptr %11[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_7, %23 : i64, !llvm.ptr
    %24 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %25 = arith.addi %24, %c16_i32 : i32
    llvm.store %25, %4 : i32, !llvm.ptr
    %c0_i64_9 = arith.constant 0 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %26 = arith.extui %25 : i32 to i64
    %27 = arith.addi %26, %c0_i64_10 : i64
    %28 = llvm.getelementptr %11[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_9, %28 : i64, !llvm.ptr
    %29 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %30 = arith.addi %29, %c8_i32 : i32
    llvm.store %30, %5 : i32, !llvm.ptr
    %c0_i64_11 = arith.constant 0 : i64
    %c0_i64_12 = arith.constant 0 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c0_i64_12 : i64
    %33 = llvm.getelementptr %11[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_11, %33 : i64, !llvm.ptr
    %34 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_13 = arith.constant 0 : i64
    %c0_i64_14 = arith.constant 0 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c0_i64_14 : i64
    %37 = llvm.getelementptr %11[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_13, %37 : i64, !llvm.ptr
    %38 = llvm.load %1 : !llvm.ptr -> i32
    %39 = llvm.call %14(%16, %38) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %40 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %41 = arith.addi %40, %c32_i32 : i32
    %c24_i32_15 = arith.constant 24 : i32
    %42 = arith.addi %41, %c24_i32_15 : i32
    %43 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_16 = arith.constant 0 : i64
    %44 = arith.extui %43 : i32 to i64
    %45 = arith.addi %44, %c0_i64_16 : i64
    %46 = llvm.getelementptr %11[%45] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i64
    %c0_i64_17 = arith.constant 0 : i64
    %48 = arith.extui %42 : i32 to i64
    %49 = arith.addi %48, %c0_i64_17 : i64
    %50 = llvm.getelementptr %11[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %47, %50 : i64, !llvm.ptr
    %51 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_18 = arith.constant 32 : i32
    %52 = arith.addi %51, %c32_i32_18 : i32
    %c16_i32_19 = arith.constant 16 : i32
    %53 = arith.addi %52, %c16_i32_19 : i32
    %54 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_20 = arith.constant 0 : i64
    %55 = arith.extui %54 : i32 to i64
    %56 = arith.addi %55, %c0_i64_20 : i64
    %57 = llvm.getelementptr %11[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i64
    %c0_i64_21 = arith.constant 0 : i64
    %59 = arith.extui %53 : i32 to i64
    %60 = arith.addi %59, %c0_i64_21 : i64
    %61 = llvm.getelementptr %11[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %58, %61 : i64, !llvm.ptr
    %62 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_22 = arith.constant 32 : i32
    %63 = arith.addi %62, %c32_i32_22 : i32
    %c8_i32_23 = arith.constant 8 : i32
    %64 = arith.addi %63, %c8_i32_23 : i32
    %65 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_24 = arith.constant 0 : i64
    %66 = arith.extui %65 : i32 to i64
    %67 = arith.addi %66, %c0_i64_24 : i64
    %68 = llvm.getelementptr %11[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %69 = llvm.load %68 : !llvm.ptr -> i64
    %c0_i64_25 = arith.constant 0 : i64
    %70 = arith.extui %64 : i32 to i64
    %71 = arith.addi %70, %c0_i64_25 : i64
    %72 = llvm.getelementptr %11[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %69, %72 : i64, !llvm.ptr
    %73 = llvm.load %1 : !llvm.ptr -> i32
    %74 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_26 = arith.constant 0 : i64
    %75 = arith.extui %74 : i32 to i64
    %76 = arith.addi %75, %c0_i64_26 : i64
    %77 = llvm.getelementptr %11[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c32_i64 = arith.constant 32 : i64
    %79 = arith.extui %73 : i32 to i64
    %80 = arith.addi %79, %c32_i64 : i64
    %81 = llvm.getelementptr %11[%80] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %78, %81 : i64, !llvm.ptr
    %82 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %83 = arith.addi %82, %c64_i32 : i32
    %c24_i32_27 = arith.constant 24 : i32
    %84 = arith.addi %83, %c24_i32_27 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %c0_i64_29 = arith.constant 0 : i64
    %85 = arith.extui %84 : i32 to i64
    %86 = arith.addi %85, %c0_i64_29 : i64
    %87 = llvm.getelementptr %11[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_28, %87 : i64, !llvm.ptr
    %88 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_30 = arith.constant 64 : i32
    %89 = arith.addi %88, %c64_i32_30 : i32
    %c16_i32_31 = arith.constant 16 : i32
    %90 = arith.addi %89, %c16_i32_31 : i32
    %c0_i64_32 = arith.constant 0 : i64
    %c0_i64_33 = arith.constant 0 : i64
    %91 = arith.extui %90 : i32 to i64
    %92 = arith.addi %91, %c0_i64_33 : i64
    %93 = llvm.getelementptr %11[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_32, %93 : i64, !llvm.ptr
    %94 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_34 = arith.constant 64 : i32
    %95 = arith.addi %94, %c64_i32_34 : i32
    %c8_i32_35 = arith.constant 8 : i32
    %96 = arith.addi %95, %c8_i32_35 : i32
    %c0_i64_36 = arith.constant 0 : i64
    %c0_i64_37 = arith.constant 0 : i64
    %97 = arith.extui %96 : i32 to i64
    %98 = arith.addi %97, %c0_i64_37 : i64
    %99 = llvm.getelementptr %11[%98] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_36, %99 : i64, !llvm.ptr
    %100 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_38 = arith.constant 0 : i64
    %c64_i64 = arith.constant 64 : i64
    %101 = arith.extui %100 : i32 to i64
    %102 = arith.addi %101, %c64_i64 : i64
    %103 = llvm.getelementptr %11[%102] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_38, %103 : i64, !llvm.ptr
    %104 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_39 = arith.constant 64 : i32
    %105 = arith.addi %104, %c64_i32_39 : i32
    llvm.store %105, %3 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %106 = llvm.load %0 : !llvm.ptr -> i32
    %107 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i64_40 = arith.constant 64 : i64
    %108 = arith.extui %107 : i32 to i64
    %109 = arith.addi %108, %c64_i64_40 : i64
    %110 = llvm.getelementptr %11[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %111 = llvm.load %110 : !llvm.ptr -> i64
    %c0_i64_41 = arith.constant 0 : i64
    %112 = arith.extui %106 : i32 to i64
    %113 = arith.addi %112, %c0_i64_41 : i64
    %114 = llvm.getelementptr %11[%113] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %111, %114 : i64, !llvm.ptr
    %115 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_42 = arith.constant 24 : i32
    %116 = arith.addi %115, %c24_i32_42 : i32
    %117 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_43 = arith.constant 64 : i32
    %118 = arith.addi %117, %c64_i32_43 : i32
    %c24_i32_44 = arith.constant 24 : i32
    %119 = arith.addi %118, %c24_i32_44 : i32
    %c0_i64_45 = arith.constant 0 : i64
    %120 = arith.extui %119 : i32 to i64
    %121 = arith.addi %120, %c0_i64_45 : i64
    %122 = llvm.getelementptr %11[%121] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %c0_i64_46 = arith.constant 0 : i64
    %124 = arith.extui %116 : i32 to i64
    %125 = arith.addi %124, %c0_i64_46 : i64
    %126 = llvm.getelementptr %11[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %123, %126 : i64, !llvm.ptr
    %127 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_47 = arith.constant 16 : i32
    %128 = arith.addi %127, %c16_i32_47 : i32
    %129 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_48 = arith.constant 64 : i32
    %130 = arith.addi %129, %c64_i32_48 : i32
    %c16_i32_49 = arith.constant 16 : i32
    %131 = arith.addi %130, %c16_i32_49 : i32
    %c0_i64_50 = arith.constant 0 : i64
    %132 = arith.extui %131 : i32 to i64
    %133 = arith.addi %132, %c0_i64_50 : i64
    %134 = llvm.getelementptr %11[%133] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %135 = llvm.load %134 : !llvm.ptr -> i64
    %c0_i64_51 = arith.constant 0 : i64
    %136 = arith.extui %128 : i32 to i64
    %137 = arith.addi %136, %c0_i64_51 : i64
    %138 = llvm.getelementptr %11[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %135, %138 : i64, !llvm.ptr
    %139 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_52 = arith.constant 8 : i32
    %140 = arith.addi %139, %c8_i32_52 : i32
    %141 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_53 = arith.constant 64 : i32
    %142 = arith.addi %141, %c64_i32_53 : i32
    %c8_i32_54 = arith.constant 8 : i32
    %143 = arith.addi %142, %c8_i32_54 : i32
    %c0_i64_55 = arith.constant 0 : i64
    %144 = arith.extui %143 : i32 to i64
    %145 = arith.addi %144, %c0_i64_55 : i64
    %146 = llvm.getelementptr %11[%145] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %147 = llvm.load %146 : !llvm.ptr -> i64
    %c0_i64_56 = arith.constant 0 : i64
    %148 = arith.extui %140 : i32 to i64
    %149 = arith.addi %148, %c0_i64_56 : i64
    %150 = llvm.getelementptr %11[%149] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %147, %150 : i64, !llvm.ptr
    %151 = llvm.load %1 : !llvm.ptr -> i32
    %c96_i32_57 = arith.constant 96 : i32
    %152 = arith.addi %151, %c96_i32_57 : i32
    llvm.store %152, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %153 = llvm.load %3 : !llvm.ptr -> i32
    %154 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_58 = arith.constant 32 : i32
    %155 = arith.addi %154, %c32_i32_58 : i32
    %156 = llvm.load %2 : !llvm.ptr -> i32
    %157 = arith.addi %155, %156 : i32
    %c0_i64_59 = arith.constant 0 : i64
    %158 = arith.extui %157 : i32 to i64
    %159 = arith.addi %158, %c0_i64_59 : i64
    %160 = llvm.getelementptr %11[%159] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %161 = llvm.load %160 : !llvm.ptr -> i64
    llvm.store %161, %6 : i64, !llvm.ptr
    %c56_i64 = arith.constant 56 : i64
    %c63_i64 = arith.constant 63 : i64
    %162 = arith.cmpi ule, %c56_i64, %c63_i64 : i64
    %163 = scf.if %162 -> (i64) {
      %209 = arith.shli %161, %c56_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %164 = llvm.load %6 : !llvm.ptr -> i64
    %c65280_i64 = arith.constant 65280 : i64
    %165 = arith.andi %164, %c65280_i64 : i64
    %c40_i64 = arith.constant 40 : i64
    %c63_i64_60 = arith.constant 63 : i64
    %166 = arith.cmpi ule, %c40_i64, %c63_i64_60 : i64
    %167 = scf.if %166 -> (i64) {
      %209 = arith.shli %165, %c40_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %168 = arith.ori %163, %167 : i64
    %169 = llvm.load %6 : !llvm.ptr -> i64
    %c16711680_i64 = arith.constant 16711680 : i64
    %170 = arith.andi %169, %c16711680_i64 : i64
    %c24_i64 = arith.constant 24 : i64
    %c63_i64_61 = arith.constant 63 : i64
    %171 = arith.cmpi ule, %c24_i64, %c63_i64_61 : i64
    %172 = scf.if %171 -> (i64) {
      %209 = arith.shli %170, %c24_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %173 = llvm.load %6 : !llvm.ptr -> i64
    %c4278190080_i64 = arith.constant 4278190080 : i64
    %174 = arith.andi %173, %c4278190080_i64 : i64
    %c8_i64 = arith.constant 8 : i64
    %c63_i64_62 = arith.constant 63 : i64
    %175 = arith.cmpi ule, %c8_i64, %c63_i64_62 : i64
    %176 = scf.if %175 -> (i64) {
      %209 = arith.shli %174, %c8_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %177 = arith.ori %172, %176 : i64
    %178 = arith.ori %168, %177 : i64
    %179 = llvm.load %6 : !llvm.ptr -> i64
    %c8_i64_63 = arith.constant 8 : i64
    %c63_i64_64 = arith.constant 63 : i64
    %180 = arith.cmpi ule, %c8_i64_63, %c63_i64_64 : i64
    %181 = scf.if %180 -> (i64) {
      %209 = arith.shrui %179, %c8_i64_63 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %c4278190080_i64_65 = arith.constant 4278190080 : i64
    %182 = arith.andi %181, %c4278190080_i64_65 : i64
    %183 = llvm.load %6 : !llvm.ptr -> i64
    %c24_i64_66 = arith.constant 24 : i64
    %c63_i64_67 = arith.constant 63 : i64
    %184 = arith.cmpi ule, %c24_i64_66, %c63_i64_67 : i64
    %185 = scf.if %184 -> (i64) {
      %209 = arith.shrui %183, %c24_i64_66 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %c16711680_i64_68 = arith.constant 16711680 : i64
    %186 = arith.andi %185, %c16711680_i64_68 : i64
    %187 = arith.ori %182, %186 : i64
    %188 = llvm.load %6 : !llvm.ptr -> i64
    %c40_i64_69 = arith.constant 40 : i64
    %c63_i64_70 = arith.constant 63 : i64
    %189 = arith.cmpi ule, %c40_i64_69, %c63_i64_70 : i64
    %190 = scf.if %189 -> (i64) {
      %209 = arith.shrui %188, %c40_i64_69 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %c65280_i64_71 = arith.constant 65280 : i64
    %191 = arith.andi %190, %c65280_i64_71 : i64
    %192 = llvm.load %6 : !llvm.ptr -> i64
    %c56_i64_72 = arith.constant 56 : i64
    %c63_i64_73 = arith.constant 63 : i64
    %193 = arith.cmpi ule, %c56_i64_72, %c63_i64_73 : i64
    %194 = scf.if %193 -> (i64) {
      %209 = arith.shrui %192, %c56_i64_72 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %195 = arith.ori %191, %194 : i64
    %196 = arith.ori %187, %195 : i64
    %197 = arith.ori %178, %196 : i64
    %c0_i64_74 = arith.constant 0 : i64
    %198 = arith.extui %153 : i32 to i64
    %199 = arith.addi %198, %c0_i64_74 : i64
    %200 = llvm.getelementptr %11[%199] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %197, %200 : i64, !llvm.ptr
    %201 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32_75 = arith.constant 8 : i32
    %202 = arith.addi %201, %c8_i32_75 : i32
    llvm.store %202, %3 : i32, !llvm.ptr
    %203 = llvm.load %2 : !llvm.ptr -> i32
    %c-8_i32 = arith.constant -8 : i32
    %204 = arith.addi %203, %c-8_i32 : i32
    llvm.store %204, %2 : i32, !llvm.ptr
    %c-8_i32_76 = arith.constant -8 : i32
    %205 = arith.cmpi eq, %204, %c-8_i32_76 : i32
    %206 = arith.extui %205 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %207 = arith.xori %206, %c-1_i32 : i32
    %c0_i32_77 = arith.constant 0 : i32
    %208 = arith.cmpi ne, %207, %c0_i32_77 : i32
    cf.cond_br %208, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f23(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[272] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.getelementptr %0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    %3 = llvm.getelementptr %0[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.call %2(%4) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr) -> i32
    cf.br ^bb2(%5 : i32)
  ^bb2(%6: i32):  // pred: ^bb1
    return %6 : i32
  }
  func.func @f24(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %6 : i64, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[296] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.getelementptr %12[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %15 = llvm.getelementptr %12[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %17 = llvm.load %8 : !llvm.ptr -> i32
    %c96_i32 = arith.constant 96 : i32
    %18 = arith.subi %17, %c96_i32 : i32
    llvm.store %18, %1 : i32, !llvm.ptr
    llvm.store %18, %8 : i32, !llvm.ptr
    %c24_i32 = arith.constant 24 : i32
    llvm.store %c24_i32, %2 : i32, !llvm.ptr
    %19 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_6 = arith.constant 24 : i32
    %20 = arith.addi %19, %c24_i32_6 : i32
    llvm.store %20, %3 : i32, !llvm.ptr
    %c0_i64_7 = arith.constant 0 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %21 = arith.extui %20 : i32 to i64
    %22 = arith.addi %21, %c0_i64_8 : i64
    %23 = llvm.getelementptr %11[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_7, %23 : i64, !llvm.ptr
    %24 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %25 = arith.addi %24, %c16_i32 : i32
    llvm.store %25, %4 : i32, !llvm.ptr
    %c0_i64_9 = arith.constant 0 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %26 = arith.extui %25 : i32 to i64
    %27 = arith.addi %26, %c0_i64_10 : i64
    %28 = llvm.getelementptr %11[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_9, %28 : i64, !llvm.ptr
    %29 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %30 = arith.addi %29, %c8_i32 : i32
    llvm.store %30, %5 : i32, !llvm.ptr
    %c0_i64_11 = arith.constant 0 : i64
    %c0_i64_12 = arith.constant 0 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c0_i64_12 : i64
    %33 = llvm.getelementptr %11[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_11, %33 : i64, !llvm.ptr
    %34 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_13 = arith.constant 0 : i64
    %c0_i64_14 = arith.constant 0 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c0_i64_14 : i64
    %37 = llvm.getelementptr %11[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_13, %37 : i64, !llvm.ptr
    %38 = llvm.load %1 : !llvm.ptr -> i32
    %39 = llvm.call %14(%16, %38) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %40 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %41 = arith.addi %40, %c32_i32 : i32
    %c24_i32_15 = arith.constant 24 : i32
    %42 = arith.addi %41, %c24_i32_15 : i32
    %43 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_16 = arith.constant 0 : i64
    %44 = arith.extui %43 : i32 to i64
    %45 = arith.addi %44, %c0_i64_16 : i64
    %46 = llvm.getelementptr %11[%45] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i64
    %c0_i64_17 = arith.constant 0 : i64
    %48 = arith.extui %42 : i32 to i64
    %49 = arith.addi %48, %c0_i64_17 : i64
    %50 = llvm.getelementptr %11[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %47, %50 : i64, !llvm.ptr
    %51 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_18 = arith.constant 32 : i32
    %52 = arith.addi %51, %c32_i32_18 : i32
    %c16_i32_19 = arith.constant 16 : i32
    %53 = arith.addi %52, %c16_i32_19 : i32
    %54 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_20 = arith.constant 0 : i64
    %55 = arith.extui %54 : i32 to i64
    %56 = arith.addi %55, %c0_i64_20 : i64
    %57 = llvm.getelementptr %11[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i64
    %c0_i64_21 = arith.constant 0 : i64
    %59 = arith.extui %53 : i32 to i64
    %60 = arith.addi %59, %c0_i64_21 : i64
    %61 = llvm.getelementptr %11[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %58, %61 : i64, !llvm.ptr
    %62 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_22 = arith.constant 32 : i32
    %63 = arith.addi %62, %c32_i32_22 : i32
    %c8_i32_23 = arith.constant 8 : i32
    %64 = arith.addi %63, %c8_i32_23 : i32
    %65 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_24 = arith.constant 0 : i64
    %66 = arith.extui %65 : i32 to i64
    %67 = arith.addi %66, %c0_i64_24 : i64
    %68 = llvm.getelementptr %11[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %69 = llvm.load %68 : !llvm.ptr -> i64
    %c0_i64_25 = arith.constant 0 : i64
    %70 = arith.extui %64 : i32 to i64
    %71 = arith.addi %70, %c0_i64_25 : i64
    %72 = llvm.getelementptr %11[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %69, %72 : i64, !llvm.ptr
    %73 = llvm.load %1 : !llvm.ptr -> i32
    %74 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_26 = arith.constant 0 : i64
    %75 = arith.extui %74 : i32 to i64
    %76 = arith.addi %75, %c0_i64_26 : i64
    %77 = llvm.getelementptr %11[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c32_i64 = arith.constant 32 : i64
    %79 = arith.extui %73 : i32 to i64
    %80 = arith.addi %79, %c32_i64 : i64
    %81 = llvm.getelementptr %11[%80] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %78, %81 : i64, !llvm.ptr
    %82 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %83 = arith.addi %82, %c64_i32 : i32
    %c24_i32_27 = arith.constant 24 : i32
    %84 = arith.addi %83, %c24_i32_27 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %c0_i64_29 = arith.constant 0 : i64
    %85 = arith.extui %84 : i32 to i64
    %86 = arith.addi %85, %c0_i64_29 : i64
    %87 = llvm.getelementptr %11[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_28, %87 : i64, !llvm.ptr
    %88 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_30 = arith.constant 64 : i32
    %89 = arith.addi %88, %c64_i32_30 : i32
    %c16_i32_31 = arith.constant 16 : i32
    %90 = arith.addi %89, %c16_i32_31 : i32
    %c0_i64_32 = arith.constant 0 : i64
    %c0_i64_33 = arith.constant 0 : i64
    %91 = arith.extui %90 : i32 to i64
    %92 = arith.addi %91, %c0_i64_33 : i64
    %93 = llvm.getelementptr %11[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_32, %93 : i64, !llvm.ptr
    %94 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_34 = arith.constant 64 : i32
    %95 = arith.addi %94, %c64_i32_34 : i32
    %c8_i32_35 = arith.constant 8 : i32
    %96 = arith.addi %95, %c8_i32_35 : i32
    %c0_i64_36 = arith.constant 0 : i64
    %c0_i64_37 = arith.constant 0 : i64
    %97 = arith.extui %96 : i32 to i64
    %98 = arith.addi %97, %c0_i64_37 : i64
    %99 = llvm.getelementptr %11[%98] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_36, %99 : i64, !llvm.ptr
    %100 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_38 = arith.constant 0 : i64
    %c64_i64 = arith.constant 64 : i64
    %101 = arith.extui %100 : i32 to i64
    %102 = arith.addi %101, %c64_i64 : i64
    %103 = llvm.getelementptr %11[%102] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_38, %103 : i64, !llvm.ptr
    %104 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_39 = arith.constant 64 : i32
    %105 = arith.addi %104, %c64_i32_39 : i32
    llvm.store %105, %3 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %106 = llvm.load %0 : !llvm.ptr -> i32
    %107 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i64_40 = arith.constant 64 : i64
    %108 = arith.extui %107 : i32 to i64
    %109 = arith.addi %108, %c64_i64_40 : i64
    %110 = llvm.getelementptr %11[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %111 = llvm.load %110 : !llvm.ptr -> i64
    %c0_i64_41 = arith.constant 0 : i64
    %112 = arith.extui %106 : i32 to i64
    %113 = arith.addi %112, %c0_i64_41 : i64
    %114 = llvm.getelementptr %11[%113] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %111, %114 : i64, !llvm.ptr
    %115 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_42 = arith.constant 24 : i32
    %116 = arith.addi %115, %c24_i32_42 : i32
    %117 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_43 = arith.constant 64 : i32
    %118 = arith.addi %117, %c64_i32_43 : i32
    %c24_i32_44 = arith.constant 24 : i32
    %119 = arith.addi %118, %c24_i32_44 : i32
    %c0_i64_45 = arith.constant 0 : i64
    %120 = arith.extui %119 : i32 to i64
    %121 = arith.addi %120, %c0_i64_45 : i64
    %122 = llvm.getelementptr %11[%121] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %c0_i64_46 = arith.constant 0 : i64
    %124 = arith.extui %116 : i32 to i64
    %125 = arith.addi %124, %c0_i64_46 : i64
    %126 = llvm.getelementptr %11[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %123, %126 : i64, !llvm.ptr
    %127 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_47 = arith.constant 16 : i32
    %128 = arith.addi %127, %c16_i32_47 : i32
    %129 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_48 = arith.constant 64 : i32
    %130 = arith.addi %129, %c64_i32_48 : i32
    %c16_i32_49 = arith.constant 16 : i32
    %131 = arith.addi %130, %c16_i32_49 : i32
    %c0_i64_50 = arith.constant 0 : i64
    %132 = arith.extui %131 : i32 to i64
    %133 = arith.addi %132, %c0_i64_50 : i64
    %134 = llvm.getelementptr %11[%133] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %135 = llvm.load %134 : !llvm.ptr -> i64
    %c0_i64_51 = arith.constant 0 : i64
    %136 = arith.extui %128 : i32 to i64
    %137 = arith.addi %136, %c0_i64_51 : i64
    %138 = llvm.getelementptr %11[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %135, %138 : i64, !llvm.ptr
    %139 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_52 = arith.constant 8 : i32
    %140 = arith.addi %139, %c8_i32_52 : i32
    %141 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_53 = arith.constant 64 : i32
    %142 = arith.addi %141, %c64_i32_53 : i32
    %c8_i32_54 = arith.constant 8 : i32
    %143 = arith.addi %142, %c8_i32_54 : i32
    %c0_i64_55 = arith.constant 0 : i64
    %144 = arith.extui %143 : i32 to i64
    %145 = arith.addi %144, %c0_i64_55 : i64
    %146 = llvm.getelementptr %11[%145] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %147 = llvm.load %146 : !llvm.ptr -> i64
    %c0_i64_56 = arith.constant 0 : i64
    %148 = arith.extui %140 : i32 to i64
    %149 = arith.addi %148, %c0_i64_56 : i64
    %150 = llvm.getelementptr %11[%149] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %147, %150 : i64, !llvm.ptr
    %151 = llvm.load %1 : !llvm.ptr -> i32
    %c96_i32_57 = arith.constant 96 : i32
    %152 = arith.addi %151, %c96_i32_57 : i32
    llvm.store %152, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %153 = llvm.load %3 : !llvm.ptr -> i32
    %154 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_58 = arith.constant 32 : i32
    %155 = arith.addi %154, %c32_i32_58 : i32
    %156 = llvm.load %2 : !llvm.ptr -> i32
    %157 = arith.addi %155, %156 : i32
    %c0_i64_59 = arith.constant 0 : i64
    %158 = arith.extui %157 : i32 to i64
    %159 = arith.addi %158, %c0_i64_59 : i64
    %160 = llvm.getelementptr %11[%159] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %161 = llvm.load %160 : !llvm.ptr -> i64
    llvm.store %161, %6 : i64, !llvm.ptr
    %c56_i64 = arith.constant 56 : i64
    %c63_i64 = arith.constant 63 : i64
    %162 = arith.cmpi ule, %c56_i64, %c63_i64 : i64
    %163 = scf.if %162 -> (i64) {
      %209 = arith.shli %161, %c56_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %164 = llvm.load %6 : !llvm.ptr -> i64
    %c65280_i64 = arith.constant 65280 : i64
    %165 = arith.andi %164, %c65280_i64 : i64
    %c40_i64 = arith.constant 40 : i64
    %c63_i64_60 = arith.constant 63 : i64
    %166 = arith.cmpi ule, %c40_i64, %c63_i64_60 : i64
    %167 = scf.if %166 -> (i64) {
      %209 = arith.shli %165, %c40_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %168 = arith.ori %163, %167 : i64
    %169 = llvm.load %6 : !llvm.ptr -> i64
    %c16711680_i64 = arith.constant 16711680 : i64
    %170 = arith.andi %169, %c16711680_i64 : i64
    %c24_i64 = arith.constant 24 : i64
    %c63_i64_61 = arith.constant 63 : i64
    %171 = arith.cmpi ule, %c24_i64, %c63_i64_61 : i64
    %172 = scf.if %171 -> (i64) {
      %209 = arith.shli %170, %c24_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %173 = llvm.load %6 : !llvm.ptr -> i64
    %c4278190080_i64 = arith.constant 4278190080 : i64
    %174 = arith.andi %173, %c4278190080_i64 : i64
    %c8_i64 = arith.constant 8 : i64
    %c63_i64_62 = arith.constant 63 : i64
    %175 = arith.cmpi ule, %c8_i64, %c63_i64_62 : i64
    %176 = scf.if %175 -> (i64) {
      %209 = arith.shli %174, %c8_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %177 = arith.ori %172, %176 : i64
    %178 = arith.ori %168, %177 : i64
    %179 = llvm.load %6 : !llvm.ptr -> i64
    %c8_i64_63 = arith.constant 8 : i64
    %c63_i64_64 = arith.constant 63 : i64
    %180 = arith.cmpi ule, %c8_i64_63, %c63_i64_64 : i64
    %181 = scf.if %180 -> (i64) {
      %209 = arith.shrui %179, %c8_i64_63 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %c4278190080_i64_65 = arith.constant 4278190080 : i64
    %182 = arith.andi %181, %c4278190080_i64_65 : i64
    %183 = llvm.load %6 : !llvm.ptr -> i64
    %c24_i64_66 = arith.constant 24 : i64
    %c63_i64_67 = arith.constant 63 : i64
    %184 = arith.cmpi ule, %c24_i64_66, %c63_i64_67 : i64
    %185 = scf.if %184 -> (i64) {
      %209 = arith.shrui %183, %c24_i64_66 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %c16711680_i64_68 = arith.constant 16711680 : i64
    %186 = arith.andi %185, %c16711680_i64_68 : i64
    %187 = arith.ori %182, %186 : i64
    %188 = llvm.load %6 : !llvm.ptr -> i64
    %c40_i64_69 = arith.constant 40 : i64
    %c63_i64_70 = arith.constant 63 : i64
    %189 = arith.cmpi ule, %c40_i64_69, %c63_i64_70 : i64
    %190 = scf.if %189 -> (i64) {
      %209 = arith.shrui %188, %c40_i64_69 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %c65280_i64_71 = arith.constant 65280 : i64
    %191 = arith.andi %190, %c65280_i64_71 : i64
    %192 = llvm.load %6 : !llvm.ptr -> i64
    %c56_i64_72 = arith.constant 56 : i64
    %c63_i64_73 = arith.constant 63 : i64
    %193 = arith.cmpi ule, %c56_i64_72, %c63_i64_73 : i64
    %194 = scf.if %193 -> (i64) {
      %209 = arith.shrui %192, %c56_i64_72 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %195 = arith.ori %191, %194 : i64
    %196 = arith.ori %187, %195 : i64
    %197 = arith.ori %178, %196 : i64
    %c0_i64_74 = arith.constant 0 : i64
    %198 = arith.extui %153 : i32 to i64
    %199 = arith.addi %198, %c0_i64_74 : i64
    %200 = llvm.getelementptr %11[%199] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %197, %200 : i64, !llvm.ptr
    %201 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32_75 = arith.constant 8 : i32
    %202 = arith.addi %201, %c8_i32_75 : i32
    llvm.store %202, %3 : i32, !llvm.ptr
    %203 = llvm.load %2 : !llvm.ptr -> i32
    %c-8_i32 = arith.constant -8 : i32
    %204 = arith.addi %203, %c-8_i32 : i32
    llvm.store %204, %2 : i32, !llvm.ptr
    %c-8_i32_76 = arith.constant -8 : i32
    %205 = arith.cmpi eq, %204, %c-8_i32_76 : i32
    %206 = arith.extui %205 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %207 = arith.xori %206, %c-1_i32 : i32
    %c0_i32_77 = arith.constant 0 : i32
    %208 = arith.cmpi ne, %207, %c0_i32_77 : i32
    cf.cond_br %208, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f25(%arg0: !llvm.ptr) -> i64 {
    %0 = llvm.getelementptr %arg0[320] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.getelementptr %0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    %3 = llvm.getelementptr %0[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.call %2(%4) vararg(!llvm.func<i64 (...)>) : !llvm.ptr, (!llvm.ptr) -> i64
    cf.br ^bb2(%5 : i64)
  ^bb2(%6: i64):  // pred: ^bb1
    return %6 : i64
  }
  func.func @f26(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %6 : i64, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[344] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.getelementptr %12[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %15 = llvm.getelementptr %12[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %17 = llvm.load %8 : !llvm.ptr -> i32
    %c96_i32 = arith.constant 96 : i32
    %18 = arith.subi %17, %c96_i32 : i32
    llvm.store %18, %1 : i32, !llvm.ptr
    llvm.store %18, %8 : i32, !llvm.ptr
    %c24_i32 = arith.constant 24 : i32
    llvm.store %c24_i32, %2 : i32, !llvm.ptr
    %19 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_6 = arith.constant 24 : i32
    %20 = arith.addi %19, %c24_i32_6 : i32
    llvm.store %20, %3 : i32, !llvm.ptr
    %c0_i64_7 = arith.constant 0 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %21 = arith.extui %20 : i32 to i64
    %22 = arith.addi %21, %c0_i64_8 : i64
    %23 = llvm.getelementptr %11[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_7, %23 : i64, !llvm.ptr
    %24 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %25 = arith.addi %24, %c16_i32 : i32
    llvm.store %25, %4 : i32, !llvm.ptr
    %c0_i64_9 = arith.constant 0 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %26 = arith.extui %25 : i32 to i64
    %27 = arith.addi %26, %c0_i64_10 : i64
    %28 = llvm.getelementptr %11[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_9, %28 : i64, !llvm.ptr
    %29 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %30 = arith.addi %29, %c8_i32 : i32
    llvm.store %30, %5 : i32, !llvm.ptr
    %c0_i64_11 = arith.constant 0 : i64
    %c0_i64_12 = arith.constant 0 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c0_i64_12 : i64
    %33 = llvm.getelementptr %11[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_11, %33 : i64, !llvm.ptr
    %34 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_13 = arith.constant 0 : i64
    %c0_i64_14 = arith.constant 0 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c0_i64_14 : i64
    %37 = llvm.getelementptr %11[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_13, %37 : i64, !llvm.ptr
    %38 = llvm.load %1 : !llvm.ptr -> i32
    %39 = llvm.call %14(%16, %38) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %40 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %41 = arith.addi %40, %c32_i32 : i32
    %c24_i32_15 = arith.constant 24 : i32
    %42 = arith.addi %41, %c24_i32_15 : i32
    %43 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_16 = arith.constant 0 : i64
    %44 = arith.extui %43 : i32 to i64
    %45 = arith.addi %44, %c0_i64_16 : i64
    %46 = llvm.getelementptr %11[%45] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i64
    %c0_i64_17 = arith.constant 0 : i64
    %48 = arith.extui %42 : i32 to i64
    %49 = arith.addi %48, %c0_i64_17 : i64
    %50 = llvm.getelementptr %11[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %47, %50 : i64, !llvm.ptr
    %51 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_18 = arith.constant 32 : i32
    %52 = arith.addi %51, %c32_i32_18 : i32
    %c16_i32_19 = arith.constant 16 : i32
    %53 = arith.addi %52, %c16_i32_19 : i32
    %54 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_20 = arith.constant 0 : i64
    %55 = arith.extui %54 : i32 to i64
    %56 = arith.addi %55, %c0_i64_20 : i64
    %57 = llvm.getelementptr %11[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i64
    %c0_i64_21 = arith.constant 0 : i64
    %59 = arith.extui %53 : i32 to i64
    %60 = arith.addi %59, %c0_i64_21 : i64
    %61 = llvm.getelementptr %11[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %58, %61 : i64, !llvm.ptr
    %62 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_22 = arith.constant 32 : i32
    %63 = arith.addi %62, %c32_i32_22 : i32
    %c8_i32_23 = arith.constant 8 : i32
    %64 = arith.addi %63, %c8_i32_23 : i32
    %65 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_24 = arith.constant 0 : i64
    %66 = arith.extui %65 : i32 to i64
    %67 = arith.addi %66, %c0_i64_24 : i64
    %68 = llvm.getelementptr %11[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %69 = llvm.load %68 : !llvm.ptr -> i64
    %c0_i64_25 = arith.constant 0 : i64
    %70 = arith.extui %64 : i32 to i64
    %71 = arith.addi %70, %c0_i64_25 : i64
    %72 = llvm.getelementptr %11[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %69, %72 : i64, !llvm.ptr
    %73 = llvm.load %1 : !llvm.ptr -> i32
    %74 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_26 = arith.constant 0 : i64
    %75 = arith.extui %74 : i32 to i64
    %76 = arith.addi %75, %c0_i64_26 : i64
    %77 = llvm.getelementptr %11[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c32_i64 = arith.constant 32 : i64
    %79 = arith.extui %73 : i32 to i64
    %80 = arith.addi %79, %c32_i64 : i64
    %81 = llvm.getelementptr %11[%80] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %78, %81 : i64, !llvm.ptr
    %82 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %83 = arith.addi %82, %c64_i32 : i32
    %c24_i32_27 = arith.constant 24 : i32
    %84 = arith.addi %83, %c24_i32_27 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %c0_i64_29 = arith.constant 0 : i64
    %85 = arith.extui %84 : i32 to i64
    %86 = arith.addi %85, %c0_i64_29 : i64
    %87 = llvm.getelementptr %11[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_28, %87 : i64, !llvm.ptr
    %88 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_30 = arith.constant 64 : i32
    %89 = arith.addi %88, %c64_i32_30 : i32
    %c16_i32_31 = arith.constant 16 : i32
    %90 = arith.addi %89, %c16_i32_31 : i32
    %c0_i64_32 = arith.constant 0 : i64
    %c0_i64_33 = arith.constant 0 : i64
    %91 = arith.extui %90 : i32 to i64
    %92 = arith.addi %91, %c0_i64_33 : i64
    %93 = llvm.getelementptr %11[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_32, %93 : i64, !llvm.ptr
    %94 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_34 = arith.constant 64 : i32
    %95 = arith.addi %94, %c64_i32_34 : i32
    %c8_i32_35 = arith.constant 8 : i32
    %96 = arith.addi %95, %c8_i32_35 : i32
    %c0_i64_36 = arith.constant 0 : i64
    %c0_i64_37 = arith.constant 0 : i64
    %97 = arith.extui %96 : i32 to i64
    %98 = arith.addi %97, %c0_i64_37 : i64
    %99 = llvm.getelementptr %11[%98] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_36, %99 : i64, !llvm.ptr
    %100 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_38 = arith.constant 0 : i64
    %c64_i64 = arith.constant 64 : i64
    %101 = arith.extui %100 : i32 to i64
    %102 = arith.addi %101, %c64_i64 : i64
    %103 = llvm.getelementptr %11[%102] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_38, %103 : i64, !llvm.ptr
    %104 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_39 = arith.constant 64 : i32
    %105 = arith.addi %104, %c64_i32_39 : i32
    llvm.store %105, %3 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %106 = llvm.load %0 : !llvm.ptr -> i32
    %107 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i64_40 = arith.constant 64 : i64
    %108 = arith.extui %107 : i32 to i64
    %109 = arith.addi %108, %c64_i64_40 : i64
    %110 = llvm.getelementptr %11[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %111 = llvm.load %110 : !llvm.ptr -> i64
    %c0_i64_41 = arith.constant 0 : i64
    %112 = arith.extui %106 : i32 to i64
    %113 = arith.addi %112, %c0_i64_41 : i64
    %114 = llvm.getelementptr %11[%113] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %111, %114 : i64, !llvm.ptr
    %115 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_42 = arith.constant 24 : i32
    %116 = arith.addi %115, %c24_i32_42 : i32
    %117 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_43 = arith.constant 64 : i32
    %118 = arith.addi %117, %c64_i32_43 : i32
    %c24_i32_44 = arith.constant 24 : i32
    %119 = arith.addi %118, %c24_i32_44 : i32
    %c0_i64_45 = arith.constant 0 : i64
    %120 = arith.extui %119 : i32 to i64
    %121 = arith.addi %120, %c0_i64_45 : i64
    %122 = llvm.getelementptr %11[%121] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %c0_i64_46 = arith.constant 0 : i64
    %124 = arith.extui %116 : i32 to i64
    %125 = arith.addi %124, %c0_i64_46 : i64
    %126 = llvm.getelementptr %11[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %123, %126 : i64, !llvm.ptr
    %127 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_47 = arith.constant 16 : i32
    %128 = arith.addi %127, %c16_i32_47 : i32
    %129 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_48 = arith.constant 64 : i32
    %130 = arith.addi %129, %c64_i32_48 : i32
    %c16_i32_49 = arith.constant 16 : i32
    %131 = arith.addi %130, %c16_i32_49 : i32
    %c0_i64_50 = arith.constant 0 : i64
    %132 = arith.extui %131 : i32 to i64
    %133 = arith.addi %132, %c0_i64_50 : i64
    %134 = llvm.getelementptr %11[%133] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %135 = llvm.load %134 : !llvm.ptr -> i64
    %c0_i64_51 = arith.constant 0 : i64
    %136 = arith.extui %128 : i32 to i64
    %137 = arith.addi %136, %c0_i64_51 : i64
    %138 = llvm.getelementptr %11[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %135, %138 : i64, !llvm.ptr
    %139 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_52 = arith.constant 8 : i32
    %140 = arith.addi %139, %c8_i32_52 : i32
    %141 = llvm.load %1 : !llvm.ptr -> i32
    %c64_i32_53 = arith.constant 64 : i32
    %142 = arith.addi %141, %c64_i32_53 : i32
    %c8_i32_54 = arith.constant 8 : i32
    %143 = arith.addi %142, %c8_i32_54 : i32
    %c0_i64_55 = arith.constant 0 : i64
    %144 = arith.extui %143 : i32 to i64
    %145 = arith.addi %144, %c0_i64_55 : i64
    %146 = llvm.getelementptr %11[%145] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %147 = llvm.load %146 : !llvm.ptr -> i64
    %c0_i64_56 = arith.constant 0 : i64
    %148 = arith.extui %140 : i32 to i64
    %149 = arith.addi %148, %c0_i64_56 : i64
    %150 = llvm.getelementptr %11[%149] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %147, %150 : i64, !llvm.ptr
    %151 = llvm.load %1 : !llvm.ptr -> i32
    %c96_i32_57 = arith.constant 96 : i32
    %152 = arith.addi %151, %c96_i32_57 : i32
    llvm.store %152, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %153 = llvm.load %3 : !llvm.ptr -> i32
    %154 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_58 = arith.constant 32 : i32
    %155 = arith.addi %154, %c32_i32_58 : i32
    %156 = llvm.load %2 : !llvm.ptr -> i32
    %157 = arith.addi %155, %156 : i32
    %c0_i64_59 = arith.constant 0 : i64
    %158 = arith.extui %157 : i32 to i64
    %159 = arith.addi %158, %c0_i64_59 : i64
    %160 = llvm.getelementptr %11[%159] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %161 = llvm.load %160 : !llvm.ptr -> i64
    llvm.store %161, %6 : i64, !llvm.ptr
    %c56_i64 = arith.constant 56 : i64
    %c63_i64 = arith.constant 63 : i64
    %162 = arith.cmpi ule, %c56_i64, %c63_i64 : i64
    %163 = scf.if %162 -> (i64) {
      %209 = arith.shli %161, %c56_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %164 = llvm.load %6 : !llvm.ptr -> i64
    %c65280_i64 = arith.constant 65280 : i64
    %165 = arith.andi %164, %c65280_i64 : i64
    %c40_i64 = arith.constant 40 : i64
    %c63_i64_60 = arith.constant 63 : i64
    %166 = arith.cmpi ule, %c40_i64, %c63_i64_60 : i64
    %167 = scf.if %166 -> (i64) {
      %209 = arith.shli %165, %c40_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %168 = arith.ori %163, %167 : i64
    %169 = llvm.load %6 : !llvm.ptr -> i64
    %c16711680_i64 = arith.constant 16711680 : i64
    %170 = arith.andi %169, %c16711680_i64 : i64
    %c24_i64 = arith.constant 24 : i64
    %c63_i64_61 = arith.constant 63 : i64
    %171 = arith.cmpi ule, %c24_i64, %c63_i64_61 : i64
    %172 = scf.if %171 -> (i64) {
      %209 = arith.shli %170, %c24_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %173 = llvm.load %6 : !llvm.ptr -> i64
    %c4278190080_i64 = arith.constant 4278190080 : i64
    %174 = arith.andi %173, %c4278190080_i64 : i64
    %c8_i64 = arith.constant 8 : i64
    %c63_i64_62 = arith.constant 63 : i64
    %175 = arith.cmpi ule, %c8_i64, %c63_i64_62 : i64
    %176 = scf.if %175 -> (i64) {
      %209 = arith.shli %174, %c8_i64 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %177 = arith.ori %172, %176 : i64
    %178 = arith.ori %168, %177 : i64
    %179 = llvm.load %6 : !llvm.ptr -> i64
    %c8_i64_63 = arith.constant 8 : i64
    %c63_i64_64 = arith.constant 63 : i64
    %180 = arith.cmpi ule, %c8_i64_63, %c63_i64_64 : i64
    %181 = scf.if %180 -> (i64) {
      %209 = arith.shrui %179, %c8_i64_63 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %c4278190080_i64_65 = arith.constant 4278190080 : i64
    %182 = arith.andi %181, %c4278190080_i64_65 : i64
    %183 = llvm.load %6 : !llvm.ptr -> i64
    %c24_i64_66 = arith.constant 24 : i64
    %c63_i64_67 = arith.constant 63 : i64
    %184 = arith.cmpi ule, %c24_i64_66, %c63_i64_67 : i64
    %185 = scf.if %184 -> (i64) {
      %209 = arith.shrui %183, %c24_i64_66 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %c16711680_i64_68 = arith.constant 16711680 : i64
    %186 = arith.andi %185, %c16711680_i64_68 : i64
    %187 = arith.ori %182, %186 : i64
    %188 = llvm.load %6 : !llvm.ptr -> i64
    %c40_i64_69 = arith.constant 40 : i64
    %c63_i64_70 = arith.constant 63 : i64
    %189 = arith.cmpi ule, %c40_i64_69, %c63_i64_70 : i64
    %190 = scf.if %189 -> (i64) {
      %209 = arith.shrui %188, %c40_i64_69 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %c65280_i64_71 = arith.constant 65280 : i64
    %191 = arith.andi %190, %c65280_i64_71 : i64
    %192 = llvm.load %6 : !llvm.ptr -> i64
    %c56_i64_72 = arith.constant 56 : i64
    %c63_i64_73 = arith.constant 63 : i64
    %193 = arith.cmpi ule, %c56_i64_72, %c63_i64_73 : i64
    %194 = scf.if %193 -> (i64) {
      %209 = arith.shrui %192, %c56_i64_72 : i64
      scf.yield %209 : i64
    } else {
      %c0_i64_78 = arith.constant 0 : i64
      scf.yield %c0_i64_78 : i64
    }
    %195 = arith.ori %191, %194 : i64
    %196 = arith.ori %187, %195 : i64
    %197 = arith.ori %178, %196 : i64
    %c0_i64_74 = arith.constant 0 : i64
    %198 = arith.extui %153 : i32 to i64
    %199 = arith.addi %198, %c0_i64_74 : i64
    %200 = llvm.getelementptr %11[%199] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %197, %200 : i64, !llvm.ptr
    %201 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32_75 = arith.constant 8 : i32
    %202 = arith.addi %201, %c8_i32_75 : i32
    llvm.store %202, %3 : i32, !llvm.ptr
    %203 = llvm.load %2 : !llvm.ptr -> i32
    %c-8_i32 = arith.constant -8 : i32
    %204 = arith.addi %203, %c-8_i32 : i32
    llvm.store %204, %2 : i32, !llvm.ptr
    %c-8_i32_76 = arith.constant -8 : i32
    %205 = arith.cmpi eq, %204, %c-8_i32_76 : i32
    %206 = arith.extui %205 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %207 = arith.xori %206, %c-1_i32 : i32
    %c0_i32_77 = arith.constant 0 : i32
    %208 = arith.cmpi ne, %207, %c0_i32_77 : i32
    cf.cond_br %208, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f27(%arg0: !llvm.ptr) -> i64 {
    %0 = llvm.getelementptr %arg0[368] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.getelementptr %0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    %3 = llvm.getelementptr %0[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.call %2(%4) vararg(!llvm.func<i64 (...)>) : !llvm.ptr, (!llvm.ptr) -> i64
    cf.br ^bb2(%5 : i64)
  ^bb2(%6: i64):  // pred: ^bb1
    return %6 : i64
  }
  func.func @f28(%arg0: !llvm.ptr) -> i64 {
    %0 = llvm.getelementptr %arg0[392] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.getelementptr %0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    %3 = llvm.getelementptr %0[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.call %2(%4) vararg(!llvm.func<i64 (...)>) : !llvm.ptr, (!llvm.ptr) -> i64
    cf.br ^bb2(%5 : i64)
  ^bb2(%6: i64):  // pred: ^bb1
    return %6 : i64
  }
  func.func @f29(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %1 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.getelementptr %1[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %4 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %5 = arith.extui %4 : i32 to i64
    %6 = arith.addi %5, %c0_i64 : i64
    %7 = llvm.getelementptr %3[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i32
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    %9 = arith.cmpi eq, %8, %c-2147483648_i32 : i32
    %10 = arith.extui %9 : i1 to i32
    %c0_i32 = arith.constant 0 : i32
    %11 = arith.cmpi ne, %10, %c0_i32 : i32
    cf.cond_br %11, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %12 = llvm.load %0 : !llvm.ptr -> i32
    call @f96(%arg0, %12) : (!llvm.ptr, i32) -> ()
    %13 = llvm.load %0 : !llvm.ptr -> i32
    call @f97(%arg0, %13) : (!llvm.ptr, i32) -> ()
    cf.br ^bb3
  }
  func.func @f30(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %arg0[4] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> i32
    %7 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %10 = llvm.load %8 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %11 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %12 = arith.extui %11 : i32 to i64
    %13 = arith.addi %12, %c0_i64 : i64
    %14 = llvm.getelementptr %4[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i32
    llvm.store %15, %1 : i32, !llvm.ptr
    %c-2147483647_i32 = arith.constant -2147483647 : i32
    %16 = arith.addi %15, %c-2147483647_i32 : i32
    %c0_i32_1 = arith.constant 0 : i32
    %17 = llvm.load %1 : !llvm.ptr -> i32
    %c-2147483638_i32 = arith.constant -2147483638 : i32
    %18 = arith.cmpi slt, %17, %c-2147483638_i32 : i32
    %19 = arith.extui %18 : i1 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %20 = arith.cmpi ne, %19, %c0_i32_2 : i32
    %21 = arith.select %20, %16, %c0_i32_1 : i32
    llvm.store %21, %1 : i32, !llvm.ptr
    %c9_i32 = arith.constant 9 : i32
    %22 = arith.cmpi ugt, %21, %c9_i32 : i32
    %23 = arith.extui %22 : i1 to i32
    %c0_i32_3 = arith.constant 0 : i32
    %24 = arith.cmpi ne, %23, %c0_i32_3 : i32
    cf.cond_br %24, ^bb3, ^bb4
  ^bb2:  // 3 preds: ^bb3, ^bb6, ^bb15
    return
  ^bb3:  // pred: ^bb1
    %25 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %26 = arith.addi %25, %c4_i32 : i32
    call @f29(%arg0, %26) : (!llvm.ptr, i32) -> ()
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %c1_i32 = arith.constant 1 : i32
    %27 = llvm.load %1 : !llvm.ptr -> i32
    %c31_i32 = arith.constant 31 : i32
    %28 = arith.cmpi ule, %27, %c31_i32 : i32
    %29 = scf.if %28 -> (i32) {
      %80 = arith.shli %c1_i32, %27 : i32
      scf.yield %80 : i32
    } else {
      %c0_i32_12 = arith.constant 0 : i32
      scf.yield %c0_i32_12 : i32
    }
    %c894_i32 = arith.constant 894 : i32
    %30 = arith.andi %29, %c894_i32 : i32
    %c0_i32_4 = arith.constant 0 : i32
    %31 = arith.cmpi ne, %30, %c0_i32_4 : i32
    cf.cond_br %31, ^bb6, ^bb7
  ^bb5:  // pred: ^bb7
    %32 = llvm.load %0 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %33 = arith.extui %32 : i32 to i64
    %34 = arith.addi %33, %c12_i64 : i64
    %35 = llvm.getelementptr %4[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %36 = llvm.load %35 : !llvm.ptr -> i32
    llvm.store %36, %0 : i32, !llvm.ptr
    call @f82(%arg0, %36) : (!llvm.ptr, i32) -> ()
    %37 = llvm.load %0 : !llvm.ptr -> i32
    call @f83(%arg0, %37) : (!llvm.ptr, i32) -> ()
    %38 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %39 = arith.addi %38, %c24_i32 : i32
    %40 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %41 = arith.extui %40 : i32 to i64
    %42 = arith.addi %41, %c16_i64 : i64
    %43 = llvm.getelementptr %4[%42] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %44 = llvm.load %43 : !llvm.ptr -> i32
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %46 = arith.extui %45 : i32 to i64
    %47 = arith.addi %46, %c20_i64 : i64
    %48 = llvm.getelementptr %4[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i32
    %50 = llvm.load %0 : !llvm.ptr -> i32
    %c12_i64_5 = arith.constant 12 : i64
    %51 = arith.extui %50 : i32 to i64
    %52 = arith.addi %51, %c12_i64_5 : i64
    %53 = llvm.getelementptr %4[%52] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.load %53 : !llvm.ptr -> i32
    %c16_i64_6 = arith.constant 16 : i64
    %55 = arith.extui %54 : i32 to i64
    %56 = arith.addi %55, %c16_i64_6 : i64
    %57 = llvm.getelementptr %4[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i32
    %59 = arith.cmpi ult, %58, %10 : i32
    cf.cond_br %59, ^bb9, ^bb10
  ^bb6:  // 2 preds: ^bb4, ^bb8
    cf.br ^bb2
  ^bb7:  // pred: ^bb4
    %60 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_7 = arith.constant 0 : i32
    %61 = arith.cmpi ne, %60, %c0_i32_7 : i32
    cf.cond_br %61, ^bb5, ^bb8
  ^bb8:  // pred: ^bb7
    %62 = llvm.load %0 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %63 = arith.addi %62, %c12_i32 : i32
    call @f29(%arg0, %63) : (!llvm.ptr, i32) -> ()
    %64 = llvm.load %0 : !llvm.ptr -> i32
    call @f96(%arg0, %64) : (!llvm.ptr, i32) -> ()
    %65 = llvm.load %0 : !llvm.ptr -> i32
    call @f97(%arg0, %65) : (!llvm.ptr, i32) -> ()
    cf.br ^bb6
  ^bb9:  // 2 preds: ^bb5, ^bb10
    %66 = llvm.getelementptr %9[%58] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %67 = llvm.load %66 : !llvm.ptr -> !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> i32
    %c0_i32_8 = arith.constant 0 : i32
    %69 = arith.cmpi eq, %68, %c0_i32_8 : i32
    cf.cond_br %69, ^bb12, ^bb11
  ^bb10:  // pred: ^bb5
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb9
  ^bb11:  // 2 preds: ^bb9, ^bb12
    %70 = llvm.getelementptr %67[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %71 = llvm.getelementptr %67[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %72 = llvm.getelementptr %67[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %73 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    %74 = llvm.load %72 : !llvm.ptr -> !llvm.ptr
    %75 = llvm.load %73 : !llvm.ptr -> i32
    %c0_i32_9 = arith.constant 0 : i32
    %76 = arith.cmpi eq, %75, %c0_i32_9 : i32
    cf.cond_br %76, ^bb14, ^bb13
  ^bb12:  // pred: ^bb9
    %c4_i32_10 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_10) : (i32) -> ()
    cf.br ^bb11
  ^bb13:  // 2 preds: ^bb11, ^bb14
    %77 = llvm.load %71 : !llvm.ptr -> i32
    %78 = arith.cmpi ne, %6, %77 : i32
    cf.cond_br %78, ^bb16, ^bb15
  ^bb14:  // pred: ^bb11
    %c3_i32_11 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_11) : (i32) -> ()
    cf.br ^bb13
  ^bb15:  // 2 preds: ^bb13, ^bb16
    %79 = llvm.call %73(%74, %39, %44, %49) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> !llvm.void
    cf.br ^bb2
  ^bb16:  // pred: ^bb13
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb15
  }
  func.func @f31(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %5 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    %7 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.getelementptr %7[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %10 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> i32
    %12 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    %15 = llvm.load %13 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %16 = llvm.load %6 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %17 = arith.subi %16, %c64_i32 : i32
    llvm.store %17, %3 : i32, !llvm.ptr
    llvm.store %17, %6 : i32, !llvm.ptr
    %c1050520_i32 = arith.constant 1050520 : i32
    llvm.store %c1050520_i32, %4 : i32, !llvm.ptr
    %c0_i32_4 = arith.constant 0 : i32
    %c1050556_i64 = arith.constant 1050556 : i64
    %18 = arith.extui %c0_i32_4 : i32 to i64
    %19 = arith.addi %18, %c1050556_i64 : i64
    %20 = llvm.getelementptr %9[%19] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %21 = llvm.load %20 : !llvm.ptr -> i8
    %22 = arith.extui %21 : i8 to i32
    %c0_i32_5 = arith.constant 0 : i32
    %23 = arith.cmpi ne, %22, %c0_i32_5 : i32
    cf.cond_br %23, ^bb3, ^bb4
  ^bb2:  // pred: ^bb13
    return
  ^bb3:  // 2 preds: ^bb1, ^bb11
    %24 = llvm.load %3 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %25 = arith.addi %24, %c24_i32 : i32
    %26 = llvm.load %4 : !llvm.ptr -> i32
    %c24_i32_6 = arith.constant 24 : i32
    %27 = arith.addi %26, %c24_i32_6 : i32
    %c0_i64 = arith.constant 0 : i64
    %28 = arith.extui %27 : i32 to i64
    %29 = arith.addi %28, %c0_i64 : i64
    %30 = llvm.getelementptr %9[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %31 = llvm.load %30 : !llvm.ptr -> i64
    %c0_i64_7 = arith.constant 0 : i64
    %32 = arith.extui %25 : i32 to i64
    %33 = arith.addi %32, %c0_i64_7 : i64
    %34 = llvm.getelementptr %9[%33] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %31, %34 : i64, !llvm.ptr
    %35 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %36 = arith.addi %35, %c16_i32 : i32
    %37 = llvm.load %4 : !llvm.ptr -> i32
    %c16_i32_8 = arith.constant 16 : i32
    %38 = arith.addi %37, %c16_i32_8 : i32
    %c0_i64_9 = arith.constant 0 : i64
    %39 = arith.extui %38 : i32 to i64
    %40 = arith.addi %39, %c0_i64_9 : i64
    %41 = llvm.getelementptr %9[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %42 = llvm.load %41 : !llvm.ptr -> i64
    %c0_i64_10 = arith.constant 0 : i64
    %43 = arith.extui %36 : i32 to i64
    %44 = arith.addi %43, %c0_i64_10 : i64
    %45 = llvm.getelementptr %9[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %42, %45 : i64, !llvm.ptr
    %46 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %47 = arith.addi %46, %c8_i32 : i32
    %48 = llvm.load %4 : !llvm.ptr -> i32
    %c8_i32_11 = arith.constant 8 : i32
    %49 = arith.addi %48, %c8_i32_11 : i32
    %c0_i64_12 = arith.constant 0 : i64
    %50 = arith.extui %49 : i32 to i64
    %51 = arith.addi %50, %c0_i64_12 : i64
    %52 = llvm.getelementptr %9[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %53 = llvm.load %52 : !llvm.ptr -> i64
    %c0_i64_13 = arith.constant 0 : i64
    %54 = arith.extui %47 : i32 to i64
    %55 = arith.addi %54, %c0_i64_13 : i64
    %56 = llvm.getelementptr %9[%55] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %53, %56 : i64, !llvm.ptr
    %57 = llvm.load %3 : !llvm.ptr -> i32
    %58 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_14 = arith.constant 0 : i64
    %59 = arith.extui %58 : i32 to i64
    %60 = arith.addi %59, %c0_i64_14 : i64
    %61 = llvm.getelementptr %9[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %62 = llvm.load %61 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %63 = arith.extui %57 : i32 to i64
    %64 = arith.addi %63, %c0_i64_15 : i64
    %65 = llvm.getelementptr %9[%64] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %62, %65 : i64, !llvm.ptr
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    llvm.store %c-2147483648_i32, %4 : i32, !llvm.ptr
    %66 = llvm.load %3 : !llvm.ptr -> i32
    %c1049384_i32 = arith.constant 1049384 : i32
    %67 = call @f91(%arg0, %66, %c1049384_i32) : (!llvm.ptr, i32, i32) -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %68 = arith.cmpi ne, %67, %c0_i32_16 : i32
    cf.cond_br %68, ^bb13, ^bb14
  ^bb4:  // pred: ^bb1
    %69 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %70 = arith.addi %69, %c32_i32 : i32
    %c0_i32_17 = arith.constant 0 : i32
    %c1050552_i64 = arith.constant 1050552 : i64
    %71 = arith.extui %c0_i32_17 : i32 to i64
    %72 = arith.addi %71, %c1050552_i64 : i64
    %73 = llvm.getelementptr %9[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %74 = llvm.load %73 : !llvm.ptr -> i32
    %75 = arith.cmpi ult, %74, %15 : i32
    cf.cond_br %75, ^bb5, ^bb6
  ^bb5:  // 2 preds: ^bb4, ^bb6
    %76 = llvm.getelementptr %14[%74] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %77 = llvm.load %76 : !llvm.ptr -> !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i32
    %c0_i32_18 = arith.constant 0 : i32
    %79 = arith.cmpi eq, %78, %c0_i32_18 : i32
    cf.cond_br %79, ^bb8, ^bb7
  ^bb6:  // pred: ^bb4
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb5
  ^bb7:  // 2 preds: ^bb5, ^bb8
    %80 = llvm.getelementptr %77[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %81 = llvm.getelementptr %77[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %82 = llvm.getelementptr %77[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %83 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    %84 = llvm.load %82 : !llvm.ptr -> !llvm.ptr
    %85 = llvm.load %83 : !llvm.ptr -> i32
    %c0_i32_19 = arith.constant 0 : i32
    %86 = arith.cmpi eq, %85, %c0_i32_19 : i32
    cf.cond_br %86, ^bb10, ^bb9
  ^bb8:  // pred: ^bb5
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb7
  ^bb9:  // 2 preds: ^bb7, ^bb10
    %87 = llvm.load %81 : !llvm.ptr -> i32
    %88 = arith.cmpi ne, %11, %87 : i32
    cf.cond_br %88, ^bb12, ^bb11
  ^bb10:  // pred: ^bb7
    %c3_i32_20 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_20) : (i32) -> ()
    cf.br ^bb9
  ^bb11:  // 2 preds: ^bb9, ^bb12
    %89 = llvm.call %83(%84, %70) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %c0_i32_21 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050556_i64_22 = arith.constant 1050556 : i64
    %90 = arith.extui %c0_i32_21 : i32 to i64
    %91 = arith.addi %90, %c1050556_i64_22 : i64
    %92 = llvm.getelementptr %9[%91] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %93 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %93, %92 : i8, !llvm.ptr
    %c0_i32_23 = arith.constant 0 : i32
    %94 = llvm.load %3 : !llvm.ptr -> i32
    %c56_i32 = arith.constant 56 : i32
    %95 = arith.addi %94, %c56_i32 : i32
    %c0_i64_24 = arith.constant 0 : i64
    %96 = arith.extui %95 : i32 to i64
    %97 = arith.addi %96, %c0_i64_24 : i64
    %98 = llvm.getelementptr %9[%97] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %99 = llvm.load %98 : !llvm.ptr -> i64
    %c1050544_i64 = arith.constant 1050544 : i64
    %100 = arith.extui %c0_i32_23 : i32 to i64
    %101 = arith.addi %100, %c1050544_i64 : i64
    %102 = llvm.getelementptr %9[%101] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %99, %102 : i64, !llvm.ptr
    %c0_i32_25 = arith.constant 0 : i32
    %103 = llvm.load %3 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %104 = arith.addi %103, %c48_i32 : i32
    %c0_i64_26 = arith.constant 0 : i64
    %105 = arith.extui %104 : i32 to i64
    %106 = arith.addi %105, %c0_i64_26 : i64
    %107 = llvm.getelementptr %9[%106] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %108 = llvm.load %107 : !llvm.ptr -> i64
    %c1050536_i64 = arith.constant 1050536 : i64
    %109 = arith.extui %c0_i32_25 : i32 to i64
    %110 = arith.addi %109, %c1050536_i64 : i64
    %111 = llvm.getelementptr %9[%110] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %108, %111 : i64, !llvm.ptr
    %c0_i32_27 = arith.constant 0 : i32
    %112 = llvm.load %3 : !llvm.ptr -> i32
    %c40_i32 = arith.constant 40 : i32
    %113 = arith.addi %112, %c40_i32 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %114 = arith.extui %113 : i32 to i64
    %115 = arith.addi %114, %c0_i64_28 : i64
    %116 = llvm.getelementptr %9[%115] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %117 = llvm.load %116 : !llvm.ptr -> i64
    %c1050528_i64 = arith.constant 1050528 : i64
    %118 = arith.extui %c0_i32_27 : i32 to i64
    %119 = arith.addi %118, %c1050528_i64 : i64
    %120 = llvm.getelementptr %9[%119] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %117, %120 : i64, !llvm.ptr
    %c0_i32_29 = arith.constant 0 : i32
    %121 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i64 = arith.constant 32 : i64
    %122 = arith.extui %121 : i32 to i64
    %123 = arith.addi %122, %c32_i64 : i64
    %124 = llvm.getelementptr %9[%123] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %125 = llvm.load %124 : !llvm.ptr -> i64
    %c1050520_i64 = arith.constant 1050520 : i64
    %126 = arith.extui %c0_i32_29 : i32 to i64
    %127 = arith.addi %126, %c1050520_i64 : i64
    %128 = llvm.getelementptr %9[%127] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %125, %128 : i64, !llvm.ptr
    %129 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_30 = arith.constant 32 : i32
    %130 = arith.addi %129, %c32_i32_30 : i32
    llvm.store %130, %4 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb12:  // pred: ^bb9
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb11
  ^bb13:  // 2 preds: ^bb3, ^bb14
    %131 = llvm.load %0 : !llvm.ptr -> i32
    %132 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_31 = arith.constant 0 : i64
    %133 = arith.extui %131 : i32 to i64
    %134 = arith.addi %133, %c0_i64_31 : i64
    %135 = llvm.getelementptr %9[%134] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %132, %135 : i32, !llvm.ptr
    %136 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i32_32 = arith.constant 64 : i32
    %137 = arith.addi %136, %c64_i32_32 : i32
    llvm.store %137, %6 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb14:  // pred: ^bb3
    %138 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i64_33 = arith.constant 1 : i64
    %c4_i64 = arith.constant 4 : i64
    %139 = arith.extui %138 : i32 to i64
    %140 = arith.addi %139, %c4_i64 : i64
    %141 = llvm.getelementptr %9[%140] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_33, %141 : i64, !llvm.ptr
    %c0_i32_34 = arith.constant 0 : i32
    llvm.store %c0_i32_34, %4 : i32, !llvm.ptr
    cf.br ^bb13
  }
  func.func @f32(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %1 = llvm.load %0 : !llvm.ptr -> i32
    call @f30(%arg0, %1) : (!llvm.ptr, i32) -> ()
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f33(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %7 : i64, !llvm.ptr
    %8 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %10 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.getelementptr %10[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    %13 = llvm.getelementptr %arg0[848] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.getelementptr %13[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.getelementptr %13[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %18 = llvm.load %9 : !llvm.ptr -> i32
    %c96_i32 = arith.constant 96 : i32
    %19 = arith.subi %18, %c96_i32 : i32
    llvm.store %19, %2 : i32, !llvm.ptr
    llvm.store %19, %9 : i32, !llvm.ptr
    %c24_i32 = arith.constant 24 : i32
    llvm.store %c24_i32, %3 : i32, !llvm.ptr
    %20 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_7 = arith.constant 24 : i32
    %21 = arith.addi %20, %c24_i32_7 : i32
    llvm.store %21, %4 : i32, !llvm.ptr
    %c0_i64_8 = arith.constant 0 : i64
    %c0_i64_9 = arith.constant 0 : i64
    %22 = arith.extui %21 : i32 to i64
    %23 = arith.addi %22, %c0_i64_9 : i64
    %24 = llvm.getelementptr %12[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_8, %24 : i64, !llvm.ptr
    %25 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %26 = arith.addi %25, %c16_i32 : i32
    llvm.store %26, %5 : i32, !llvm.ptr
    %c0_i64_10 = arith.constant 0 : i64
    %c0_i64_11 = arith.constant 0 : i64
    %27 = arith.extui %26 : i32 to i64
    %28 = arith.addi %27, %c0_i64_11 : i64
    %29 = llvm.getelementptr %12[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_10, %29 : i64, !llvm.ptr
    %30 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %31 = arith.addi %30, %c8_i32 : i32
    llvm.store %31, %6 : i32, !llvm.ptr
    %c0_i64_12 = arith.constant 0 : i64
    %c0_i64_13 = arith.constant 0 : i64
    %32 = arith.extui %31 : i32 to i64
    %33 = arith.addi %32, %c0_i64_13 : i64
    %34 = llvm.getelementptr %12[%33] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_12, %34 : i64, !llvm.ptr
    %35 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_14 = arith.constant 0 : i64
    %c0_i64_15 = arith.constant 0 : i64
    %36 = arith.extui %35 : i32 to i64
    %37 = arith.addi %36, %c0_i64_15 : i64
    %38 = llvm.getelementptr %12[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_14, %38 : i64, !llvm.ptr
    %39 = llvm.load %1 : !llvm.ptr -> i32
    %40 = llvm.load %2 : !llvm.ptr -> i32
    %41 = llvm.call %15(%17, %39, %40) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> !llvm.void
    %42 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %43 = arith.addi %42, %c32_i32 : i32
    %c24_i32_16 = arith.constant 24 : i32
    %44 = arith.addi %43, %c24_i32_16 : i32
    %45 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_17 = arith.constant 0 : i64
    %46 = arith.extui %45 : i32 to i64
    %47 = arith.addi %46, %c0_i64_17 : i64
    %48 = llvm.getelementptr %12[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %c0_i64_18 = arith.constant 0 : i64
    %50 = arith.extui %44 : i32 to i64
    %51 = arith.addi %50, %c0_i64_18 : i64
    %52 = llvm.getelementptr %12[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %49, %52 : i64, !llvm.ptr
    %53 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_19 = arith.constant 32 : i32
    %54 = arith.addi %53, %c32_i32_19 : i32
    %c16_i32_20 = arith.constant 16 : i32
    %55 = arith.addi %54, %c16_i32_20 : i32
    %56 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_21 = arith.constant 0 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c0_i64_21 : i64
    %59 = llvm.getelementptr %12[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c0_i64_22 = arith.constant 0 : i64
    %61 = arith.extui %55 : i32 to i64
    %62 = arith.addi %61, %c0_i64_22 : i64
    %63 = llvm.getelementptr %12[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %60, %63 : i64, !llvm.ptr
    %64 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_23 = arith.constant 32 : i32
    %65 = arith.addi %64, %c32_i32_23 : i32
    %c8_i32_24 = arith.constant 8 : i32
    %66 = arith.addi %65, %c8_i32_24 : i32
    %67 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i64_25 = arith.constant 0 : i64
    %68 = arith.extui %67 : i32 to i64
    %69 = arith.addi %68, %c0_i64_25 : i64
    %70 = llvm.getelementptr %12[%69] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %71 = llvm.load %70 : !llvm.ptr -> i64
    %c0_i64_26 = arith.constant 0 : i64
    %72 = arith.extui %66 : i32 to i64
    %73 = arith.addi %72, %c0_i64_26 : i64
    %74 = llvm.getelementptr %12[%73] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %71, %74 : i64, !llvm.ptr
    %75 = llvm.load %2 : !llvm.ptr -> i32
    %76 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_27 = arith.constant 0 : i64
    %77 = arith.extui %76 : i32 to i64
    %78 = arith.addi %77, %c0_i64_27 : i64
    %79 = llvm.getelementptr %12[%78] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %80 = llvm.load %79 : !llvm.ptr -> i64
    %c32_i64 = arith.constant 32 : i64
    %81 = arith.extui %75 : i32 to i64
    %82 = arith.addi %81, %c32_i64 : i64
    %83 = llvm.getelementptr %12[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %80, %83 : i64, !llvm.ptr
    %84 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %85 = arith.addi %84, %c64_i32 : i32
    %c24_i32_28 = arith.constant 24 : i32
    %86 = arith.addi %85, %c24_i32_28 : i32
    %c0_i64_29 = arith.constant 0 : i64
    %c0_i64_30 = arith.constant 0 : i64
    %87 = arith.extui %86 : i32 to i64
    %88 = arith.addi %87, %c0_i64_30 : i64
    %89 = llvm.getelementptr %12[%88] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_29, %89 : i64, !llvm.ptr
    %90 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_31 = arith.constant 64 : i32
    %91 = arith.addi %90, %c64_i32_31 : i32
    %c16_i32_32 = arith.constant 16 : i32
    %92 = arith.addi %91, %c16_i32_32 : i32
    %c0_i64_33 = arith.constant 0 : i64
    %c0_i64_34 = arith.constant 0 : i64
    %93 = arith.extui %92 : i32 to i64
    %94 = arith.addi %93, %c0_i64_34 : i64
    %95 = llvm.getelementptr %12[%94] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_33, %95 : i64, !llvm.ptr
    %96 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_35 = arith.constant 64 : i32
    %97 = arith.addi %96, %c64_i32_35 : i32
    %c8_i32_36 = arith.constant 8 : i32
    %98 = arith.addi %97, %c8_i32_36 : i32
    %c0_i64_37 = arith.constant 0 : i64
    %c0_i64_38 = arith.constant 0 : i64
    %99 = arith.extui %98 : i32 to i64
    %100 = arith.addi %99, %c0_i64_38 : i64
    %101 = llvm.getelementptr %12[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_37, %101 : i64, !llvm.ptr
    %102 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_39 = arith.constant 0 : i64
    %c64_i64 = arith.constant 64 : i64
    %103 = arith.extui %102 : i32 to i64
    %104 = arith.addi %103, %c64_i64 : i64
    %105 = llvm.getelementptr %12[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_39, %105 : i64, !llvm.ptr
    %106 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_40 = arith.constant 64 : i32
    %107 = arith.addi %106, %c64_i32_40 : i32
    llvm.store %107, %1 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %108 = llvm.load %0 : !llvm.ptr -> i32
    %109 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i64_41 = arith.constant 64 : i64
    %110 = arith.extui %109 : i32 to i64
    %111 = arith.addi %110, %c64_i64_41 : i64
    %112 = llvm.getelementptr %12[%111] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %113 = llvm.load %112 : !llvm.ptr -> i64
    %c0_i64_42 = arith.constant 0 : i64
    %114 = arith.extui %108 : i32 to i64
    %115 = arith.addi %114, %c0_i64_42 : i64
    %116 = llvm.getelementptr %12[%115] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %113, %116 : i64, !llvm.ptr
    %117 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_43 = arith.constant 24 : i32
    %118 = arith.addi %117, %c24_i32_43 : i32
    %119 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_44 = arith.constant 64 : i32
    %120 = arith.addi %119, %c64_i32_44 : i32
    %c24_i32_45 = arith.constant 24 : i32
    %121 = arith.addi %120, %c24_i32_45 : i32
    %c0_i64_46 = arith.constant 0 : i64
    %122 = arith.extui %121 : i32 to i64
    %123 = arith.addi %122, %c0_i64_46 : i64
    %124 = llvm.getelementptr %12[%123] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %125 = llvm.load %124 : !llvm.ptr -> i64
    %c0_i64_47 = arith.constant 0 : i64
    %126 = arith.extui %118 : i32 to i64
    %127 = arith.addi %126, %c0_i64_47 : i64
    %128 = llvm.getelementptr %12[%127] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %125, %128 : i64, !llvm.ptr
    %129 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_48 = arith.constant 16 : i32
    %130 = arith.addi %129, %c16_i32_48 : i32
    %131 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_49 = arith.constant 64 : i32
    %132 = arith.addi %131, %c64_i32_49 : i32
    %c16_i32_50 = arith.constant 16 : i32
    %133 = arith.addi %132, %c16_i32_50 : i32
    %c0_i64_51 = arith.constant 0 : i64
    %134 = arith.extui %133 : i32 to i64
    %135 = arith.addi %134, %c0_i64_51 : i64
    %136 = llvm.getelementptr %12[%135] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %137 = llvm.load %136 : !llvm.ptr -> i64
    %c0_i64_52 = arith.constant 0 : i64
    %138 = arith.extui %130 : i32 to i64
    %139 = arith.addi %138, %c0_i64_52 : i64
    %140 = llvm.getelementptr %12[%139] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %137, %140 : i64, !llvm.ptr
    %141 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_53 = arith.constant 8 : i32
    %142 = arith.addi %141, %c8_i32_53 : i32
    %143 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_54 = arith.constant 64 : i32
    %144 = arith.addi %143, %c64_i32_54 : i32
    %c8_i32_55 = arith.constant 8 : i32
    %145 = arith.addi %144, %c8_i32_55 : i32
    %c0_i64_56 = arith.constant 0 : i64
    %146 = arith.extui %145 : i32 to i64
    %147 = arith.addi %146, %c0_i64_56 : i64
    %148 = llvm.getelementptr %12[%147] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %149 = llvm.load %148 : !llvm.ptr -> i64
    %c0_i64_57 = arith.constant 0 : i64
    %150 = arith.extui %142 : i32 to i64
    %151 = arith.addi %150, %c0_i64_57 : i64
    %152 = llvm.getelementptr %12[%151] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %149, %152 : i64, !llvm.ptr
    %153 = llvm.load %2 : !llvm.ptr -> i32
    %c96_i32_58 = arith.constant 96 : i32
    %154 = arith.addi %153, %c96_i32_58 : i32
    llvm.store %154, %9 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %155 = llvm.load %1 : !llvm.ptr -> i32
    %156 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_59 = arith.constant 32 : i32
    %157 = arith.addi %156, %c32_i32_59 : i32
    %158 = llvm.load %3 : !llvm.ptr -> i32
    %159 = arith.addi %157, %158 : i32
    %c0_i64_60 = arith.constant 0 : i64
    %160 = arith.extui %159 : i32 to i64
    %161 = arith.addi %160, %c0_i64_60 : i64
    %162 = llvm.getelementptr %12[%161] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %163 = llvm.load %162 : !llvm.ptr -> i64
    llvm.store %163, %7 : i64, !llvm.ptr
    %c56_i64 = arith.constant 56 : i64
    %c63_i64 = arith.constant 63 : i64
    %164 = arith.cmpi ule, %c56_i64, %c63_i64 : i64
    %165 = scf.if %164 -> (i64) {
      %211 = arith.shli %163, %c56_i64 : i64
      scf.yield %211 : i64
    } else {
      %c0_i64_79 = arith.constant 0 : i64
      scf.yield %c0_i64_79 : i64
    }
    %166 = llvm.load %7 : !llvm.ptr -> i64
    %c65280_i64 = arith.constant 65280 : i64
    %167 = arith.andi %166, %c65280_i64 : i64
    %c40_i64 = arith.constant 40 : i64
    %c63_i64_61 = arith.constant 63 : i64
    %168 = arith.cmpi ule, %c40_i64, %c63_i64_61 : i64
    %169 = scf.if %168 -> (i64) {
      %211 = arith.shli %167, %c40_i64 : i64
      scf.yield %211 : i64
    } else {
      %c0_i64_79 = arith.constant 0 : i64
      scf.yield %c0_i64_79 : i64
    }
    %170 = arith.ori %165, %169 : i64
    %171 = llvm.load %7 : !llvm.ptr -> i64
    %c16711680_i64 = arith.constant 16711680 : i64
    %172 = arith.andi %171, %c16711680_i64 : i64
    %c24_i64 = arith.constant 24 : i64
    %c63_i64_62 = arith.constant 63 : i64
    %173 = arith.cmpi ule, %c24_i64, %c63_i64_62 : i64
    %174 = scf.if %173 -> (i64) {
      %211 = arith.shli %172, %c24_i64 : i64
      scf.yield %211 : i64
    } else {
      %c0_i64_79 = arith.constant 0 : i64
      scf.yield %c0_i64_79 : i64
    }
    %175 = llvm.load %7 : !llvm.ptr -> i64
    %c4278190080_i64 = arith.constant 4278190080 : i64
    %176 = arith.andi %175, %c4278190080_i64 : i64
    %c8_i64 = arith.constant 8 : i64
    %c63_i64_63 = arith.constant 63 : i64
    %177 = arith.cmpi ule, %c8_i64, %c63_i64_63 : i64
    %178 = scf.if %177 -> (i64) {
      %211 = arith.shli %176, %c8_i64 : i64
      scf.yield %211 : i64
    } else {
      %c0_i64_79 = arith.constant 0 : i64
      scf.yield %c0_i64_79 : i64
    }
    %179 = arith.ori %174, %178 : i64
    %180 = arith.ori %170, %179 : i64
    %181 = llvm.load %7 : !llvm.ptr -> i64
    %c8_i64_64 = arith.constant 8 : i64
    %c63_i64_65 = arith.constant 63 : i64
    %182 = arith.cmpi ule, %c8_i64_64, %c63_i64_65 : i64
    %183 = scf.if %182 -> (i64) {
      %211 = arith.shrui %181, %c8_i64_64 : i64
      scf.yield %211 : i64
    } else {
      %c0_i64_79 = arith.constant 0 : i64
      scf.yield %c0_i64_79 : i64
    }
    %c4278190080_i64_66 = arith.constant 4278190080 : i64
    %184 = arith.andi %183, %c4278190080_i64_66 : i64
    %185 = llvm.load %7 : !llvm.ptr -> i64
    %c24_i64_67 = arith.constant 24 : i64
    %c63_i64_68 = arith.constant 63 : i64
    %186 = arith.cmpi ule, %c24_i64_67, %c63_i64_68 : i64
    %187 = scf.if %186 -> (i64) {
      %211 = arith.shrui %185, %c24_i64_67 : i64
      scf.yield %211 : i64
    } else {
      %c0_i64_79 = arith.constant 0 : i64
      scf.yield %c0_i64_79 : i64
    }
    %c16711680_i64_69 = arith.constant 16711680 : i64
    %188 = arith.andi %187, %c16711680_i64_69 : i64
    %189 = arith.ori %184, %188 : i64
    %190 = llvm.load %7 : !llvm.ptr -> i64
    %c40_i64_70 = arith.constant 40 : i64
    %c63_i64_71 = arith.constant 63 : i64
    %191 = arith.cmpi ule, %c40_i64_70, %c63_i64_71 : i64
    %192 = scf.if %191 -> (i64) {
      %211 = arith.shrui %190, %c40_i64_70 : i64
      scf.yield %211 : i64
    } else {
      %c0_i64_79 = arith.constant 0 : i64
      scf.yield %c0_i64_79 : i64
    }
    %c65280_i64_72 = arith.constant 65280 : i64
    %193 = arith.andi %192, %c65280_i64_72 : i64
    %194 = llvm.load %7 : !llvm.ptr -> i64
    %c56_i64_73 = arith.constant 56 : i64
    %c63_i64_74 = arith.constant 63 : i64
    %195 = arith.cmpi ule, %c56_i64_73, %c63_i64_74 : i64
    %196 = scf.if %195 -> (i64) {
      %211 = arith.shrui %194, %c56_i64_73 : i64
      scf.yield %211 : i64
    } else {
      %c0_i64_79 = arith.constant 0 : i64
      scf.yield %c0_i64_79 : i64
    }
    %197 = arith.ori %193, %196 : i64
    %198 = arith.ori %189, %197 : i64
    %199 = arith.ori %180, %198 : i64
    %c0_i64_75 = arith.constant 0 : i64
    %200 = arith.extui %155 : i32 to i64
    %201 = arith.addi %200, %c0_i64_75 : i64
    %202 = llvm.getelementptr %12[%201] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %199, %202 : i64, !llvm.ptr
    %203 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_76 = arith.constant 8 : i32
    %204 = arith.addi %203, %c8_i32_76 : i32
    llvm.store %204, %1 : i32, !llvm.ptr
    %205 = llvm.load %3 : !llvm.ptr -> i32
    %c-8_i32 = arith.constant -8 : i32
    %206 = arith.addi %205, %c-8_i32 : i32
    llvm.store %206, %3 : i32, !llvm.ptr
    %c-8_i32_77 = arith.constant -8 : i32
    %207 = arith.cmpi eq, %206, %c-8_i32_77 : i32
    %208 = arith.extui %207 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %209 = arith.xori %208, %c-1_i32 : i32
    %c0_i32_78 = arith.constant 0 : i32
    %210 = arith.cmpi ne, %209, %c0_i32_78 : i32
    cf.cond_br %210, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f34(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %8 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %10 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.getelementptr %10[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    %13 = llvm.getelementptr %arg0[584] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.getelementptr %13[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.getelementptr %13[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %18 = llvm.load %9 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %19 = arith.subi %18, %c32_i32 : i32
    llvm.store %19, %4 : i32, !llvm.ptr
    llvm.store %19, %9 : i32, !llvm.ptr
    %20 = llvm.load %4 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %21 = arith.addi %20, %c24_i32 : i32
    llvm.store %21, %5 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %22 = arith.extui %21 : i32 to i64
    %23 = arith.addi %22, %c0_i64_7 : i64
    %24 = llvm.getelementptr %12[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64, %24 : i64, !llvm.ptr
    %25 = llvm.load %4 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %26 = arith.addi %25, %c16_i32 : i32
    llvm.store %26, %6 : i32, !llvm.ptr
    %c0_i64_8 = arith.constant 0 : i64
    %c0_i64_9 = arith.constant 0 : i64
    %27 = arith.extui %26 : i32 to i64
    %28 = arith.addi %27, %c0_i64_9 : i64
    %29 = llvm.getelementptr %12[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_8, %29 : i64, !llvm.ptr
    %30 = llvm.load %4 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %31 = arith.addi %30, %c8_i32 : i32
    llvm.store %31, %7 : i32, !llvm.ptr
    %c0_i64_10 = arith.constant 0 : i64
    %c0_i64_11 = arith.constant 0 : i64
    %32 = arith.extui %31 : i32 to i64
    %33 = arith.addi %32, %c0_i64_11 : i64
    %34 = llvm.getelementptr %12[%33] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_10, %34 : i64, !llvm.ptr
    %35 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_12 = arith.constant 0 : i64
    %c0_i64_13 = arith.constant 0 : i64
    %36 = arith.extui %35 : i32 to i64
    %37 = arith.addi %36, %c0_i64_13 : i64
    %38 = llvm.getelementptr %12[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_12, %38 : i64, !llvm.ptr
    %39 = llvm.load %2 : !llvm.ptr -> i32
    %40 = llvm.load %3 : !llvm.ptr -> i32
    %41 = llvm.load %4 : !llvm.ptr -> i32
    %42 = llvm.call %15(%17, %39, %40, %41) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> !llvm.void
    %43 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_14 = arith.constant 24 : i32
    %44 = arith.addi %43, %c24_i32_14 : i32
    %45 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_15 = arith.constant 0 : i64
    %46 = arith.extui %45 : i32 to i64
    %47 = arith.addi %46, %c0_i64_15 : i64
    %48 = llvm.getelementptr %12[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %c0_i64_16 = arith.constant 0 : i64
    %50 = arith.extui %44 : i32 to i64
    %51 = arith.addi %50, %c0_i64_16 : i64
    %52 = llvm.getelementptr %12[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %49, %52 : i64, !llvm.ptr
    %53 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_17 = arith.constant 16 : i32
    %54 = arith.addi %53, %c16_i32_17 : i32
    %55 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i64_18 = arith.constant 0 : i64
    %56 = arith.extui %55 : i32 to i64
    %57 = arith.addi %56, %c0_i64_18 : i64
    %58 = llvm.getelementptr %12[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %c0_i64_19 = arith.constant 0 : i64
    %60 = arith.extui %54 : i32 to i64
    %61 = arith.addi %60, %c0_i64_19 : i64
    %62 = llvm.getelementptr %12[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %59, %62 : i64, !llvm.ptr
    %63 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_20 = arith.constant 8 : i32
    %64 = arith.addi %63, %c8_i32_20 : i32
    %65 = llvm.load %7 : !llvm.ptr -> i32
    %c0_i64_21 = arith.constant 0 : i64
    %66 = arith.extui %65 : i32 to i64
    %67 = arith.addi %66, %c0_i64_21 : i64
    %68 = llvm.getelementptr %12[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %69 = llvm.load %68 : !llvm.ptr -> i64
    %c0_i64_22 = arith.constant 0 : i64
    %70 = arith.extui %64 : i32 to i64
    %71 = arith.addi %70, %c0_i64_22 : i64
    %72 = llvm.getelementptr %12[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %69, %72 : i64, !llvm.ptr
    %73 = llvm.load %0 : !llvm.ptr -> i32
    %74 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_23 = arith.constant 0 : i64
    %75 = arith.extui %74 : i32 to i64
    %76 = arith.addi %75, %c0_i64_23 : i64
    %77 = llvm.getelementptr %12[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c0_i64_24 = arith.constant 0 : i64
    %79 = arith.extui %73 : i32 to i64
    %80 = arith.addi %79, %c0_i64_24 : i64
    %81 = llvm.getelementptr %12[%80] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %78, %81 : i64, !llvm.ptr
    %82 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_25 = arith.constant 32 : i32
    %83 = arith.addi %82, %c32_i32_25 : i32
    llvm.store %83, %9 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f35(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.getelementptr %arg0[416] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.getelementptr %11[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    %14 = llvm.getelementptr %11[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %16 = llvm.load %7 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %17 = arith.subi %16, %c16_i32 : i32
    llvm.store %17, %3 : i32, !llvm.ptr
    llvm.store %17, %7 : i32, !llvm.ptr
    %18 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %19 = arith.addi %18, %c4_i32 : i32
    %20 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_5 = arith.constant 0 : i32
    call @f95(%arg0, %19, %20, %c0_i32_5) : (!llvm.ptr, i32, i32, i32) -> ()
    %21 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %22 = arith.extui %21 : i32 to i64
    %23 = arith.addi %22, %c8_i64 : i64
    %24 = llvm.getelementptr %10[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %25 = llvm.load %24 : !llvm.ptr -> i32
    llvm.store %25, %4 : i32, !llvm.ptr
    %26 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %27 = arith.extui %26 : i32 to i64
    %28 = arith.addi %27, %c4_i64 : i64
    %29 = llvm.getelementptr %10[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %30 = llvm.load %29 : !llvm.ptr -> i32
    %c0_i32_6 = arith.constant 0 : i32
    %31 = arith.cmpi eq, %30, %c0_i32_6 : i32
    %32 = arith.extui %31 : i1 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %33 = arith.cmpi ne, %32, %c0_i32_7 : i32
    cf.cond_br %33, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb1
    %34 = llvm.load %3 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c12_i64 : i64
    %37 = llvm.getelementptr %10[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %38 = llvm.load %37 : !llvm.ptr -> i32
    llvm.store %38, %5 : i32, !llvm.ptr
    %39 = llvm.call %13(%15, %38) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %40 = llvm.load %0 : !llvm.ptr -> i32
    %41 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_8 = arith.constant 8 : i64
    %42 = arith.extui %40 : i32 to i64
    %43 = arith.addi %42, %c8_i64_8 : i64
    %44 = llvm.getelementptr %10[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i32, !llvm.ptr
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %46 = llvm.load %5 : !llvm.ptr -> i32
    %c4_i64_9 = arith.constant 4 : i64
    %47 = arith.extui %45 : i32 to i64
    %48 = arith.addi %47, %c4_i64_9 : i64
    %49 = llvm.getelementptr %10[%48] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %46, %49 : i32, !llvm.ptr
    %50 = llvm.load %0 : !llvm.ptr -> i32
    %51 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %52 = arith.extui %50 : i32 to i64
    %53 = arith.addi %52, %c0_i64 : i64
    %54 = llvm.getelementptr %10[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %51, %54 : i32, !llvm.ptr
    %55 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32_10 = arith.constant 16 : i32
    %56 = arith.addi %55, %c16_i32_10 : i32
    llvm.store %56, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %57 = llvm.load %4 : !llvm.ptr -> i32
    %58 = llvm.load %3 : !llvm.ptr -> i32
    %c12_i64_11 = arith.constant 12 : i64
    %59 = arith.extui %58 : i32 to i64
    %60 = arith.addi %59, %c12_i64_11 : i64
    %61 = llvm.getelementptr %10[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %62 = llvm.load %61 : !llvm.ptr -> i32
    call @f126(%arg0, %57, %62) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  }
  func.func @f36(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %8 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %10 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.getelementptr %10[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    %13 = llvm.getelementptr %arg0[464] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.getelementptr %13[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.getelementptr %13[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %18 = llvm.load %9 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %19 = arith.subi %18, %c16_i32 : i32
    llvm.store %19, %5 : i32, !llvm.ptr
    llvm.store %19, %9 : i32, !llvm.ptr
    %20 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_7 = arith.constant 0 : i32
    %21 = arith.cmpi ne, %20, %c0_i32_7 : i32
    cf.cond_br %21, ^bb3, ^bb4
  ^bb2:  // pred: ^bb10
    return
  ^bb3:  // 2 preds: ^bb1, ^bb5
    %c0_i32_8 = arith.constant 0 : i32
    llvm.store %c0_i32_8, %3 : i32, !llvm.ptr
    %22 = llvm.load %5 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %23 = arith.addi %22, %c4_i32 : i32
    %24 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_9 = arith.constant 0 : i32
    call @f95(%arg0, %23, %24, %c0_i32_9) : (!llvm.ptr, i32, i32, i32) -> ()
    %25 = llvm.load %5 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %26 = arith.extui %25 : i32 to i64
    %27 = arith.addi %26, %c8_i64 : i64
    %28 = llvm.getelementptr %12[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %29 = llvm.load %28 : !llvm.ptr -> i32
    llvm.store %29, %6 : i32, !llvm.ptr
    %30 = llvm.load %5 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c4_i64 : i64
    %33 = llvm.getelementptr %12[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %34 = llvm.load %33 : !llvm.ptr -> i32
    %c0_i32_10 = arith.constant 0 : i32
    %35 = arith.cmpi ne, %34, %c0_i32_10 : i32
    cf.cond_br %35, ^bb8, ^bb9
  ^bb4:  // pred: ^bb1
    %c0_i32_11 = arith.constant 0 : i32
    %c1050704_i64 = arith.constant 1050704 : i64
    %36 = arith.extui %c0_i32_11 : i32 to i64
    %37 = arith.addi %36, %c1050704_i64 : i64
    %38 = llvm.getelementptr %12[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %39 = llvm.load %38 : !llvm.ptr -> i8
    %40 = arith.extui %39 : i8 to i32
    %c0_i32_12 = arith.constant 0 : i32
    %41 = arith.cmpi ne, %40, %c0_i32_12 : i32
    cf.cond_br %41, ^bb6, ^bb7
  ^bb5:  // 2 preds: ^bb6, ^bb7
    %c0_i32_13 = arith.constant 0 : i32
    %42 = llvm.load %4 : !llvm.ptr -> i32
    %43 = llvm.load %2 : !llvm.ptr -> i32
    %44 = arith.subi %42, %43 : i32
    llvm.store %44, %3 : i32, !llvm.ptr
    %45 = llvm.load %3 : !llvm.ptr -> i32
    %46 = llvm.load %4 : !llvm.ptr -> i32
    %47 = arith.cmpi ugt, %45, %46 : i32
    %48 = arith.extui %47 : i1 to i32
    %c0_i32_14 = arith.constant 0 : i32
    %49 = arith.cmpi ne, %48, %c0_i32_14 : i32
    %50 = arith.select %49, %c0_i32_13, %44 : i32
    llvm.store %50, %4 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb6:  // pred: ^bb4
    %c0_i32_15 = arith.constant 0 : i32
    %c1050700_i64 = arith.constant 1050700 : i64
    %51 = arith.extui %c0_i32_15 : i32 to i64
    %52 = arith.addi %51, %c1050700_i64 : i64
    %53 = llvm.getelementptr %12[%52] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.load %53 : !llvm.ptr -> i32
    llvm.store %54, %4 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb7:  // pred: ^bb4
    %55 = call @f23(%arg0) : (!llvm.ptr) -> i32
    llvm.store %55, %4 : i32, !llvm.ptr
    %c0_i32_16 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050704_i64_17 = arith.constant 1050704 : i64
    %56 = arith.extui %c0_i32_16 : i32 to i64
    %57 = arith.addi %56, %c1050704_i64_17 : i64
    %58 = llvm.getelementptr %12[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %59, %58 : i8, !llvm.ptr
    %c0_i32_18 = arith.constant 0 : i32
    %60 = llvm.load %4 : !llvm.ptr -> i32
    %c1050700_i64_19 = arith.constant 1050700 : i64
    %61 = arith.extui %c0_i32_18 : i32 to i64
    %62 = arith.addi %61, %c1050700_i64_19 : i64
    %63 = llvm.getelementptr %12[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %60, %63 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb8:  // pred: ^bb3
    %64 = llvm.load %6 : !llvm.ptr -> i32
    %65 = llvm.load %5 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %66 = arith.extui %65 : i32 to i64
    %67 = arith.addi %66, %c12_i64 : i64
    %68 = llvm.getelementptr %12[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %69 = llvm.load %68 : !llvm.ptr -> i32
    call @f126(%arg0, %64, %69) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb9:  // pred: ^bb3
    %70 = llvm.load %5 : !llvm.ptr -> i32
    %c12_i64_20 = arith.constant 12 : i64
    %71 = arith.extui %70 : i32 to i64
    %72 = arith.addi %71, %c12_i64_20 : i64
    %73 = llvm.getelementptr %12[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %74 = llvm.load %73 : !llvm.ptr -> i32
    llvm.store %74, %7 : i32, !llvm.ptr
    %75 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_21 = arith.constant 0 : i32
    %76 = arith.cmpi eq, %75, %c0_i32_21 : i32
    %77 = arith.extui %76 : i1 to i32
    %c0_i32_22 = arith.constant 0 : i32
    %78 = arith.cmpi ne, %77, %c0_i32_22 : i32
    cf.cond_br %78, ^bb10, ^bb11
  ^bb10:  // 2 preds: ^bb9, ^bb11
    %79 = llvm.load %0 : !llvm.ptr -> i32
    %80 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i64_23 = arith.constant 8 : i64
    %81 = arith.extui %79 : i32 to i64
    %82 = arith.addi %81, %c8_i64_23 : i64
    %83 = llvm.getelementptr %12[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %80, %83 : i32, !llvm.ptr
    %84 = llvm.load %0 : !llvm.ptr -> i32
    %85 = llvm.load %7 : !llvm.ptr -> i32
    %c4_i64_24 = arith.constant 4 : i64
    %86 = arith.extui %84 : i32 to i64
    %87 = arith.addi %86, %c4_i64_24 : i64
    %88 = llvm.getelementptr %12[%87] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %85, %88 : i32, !llvm.ptr
    %89 = llvm.load %0 : !llvm.ptr -> i32
    %90 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %91 = arith.extui %89 : i32 to i64
    %92 = arith.addi %91, %c0_i64 : i64
    %93 = llvm.getelementptr %12[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %90, %93 : i32, !llvm.ptr
    %94 = llvm.load %5 : !llvm.ptr -> i32
    %c16_i32_25 = arith.constant 16 : i32
    %95 = arith.addi %94, %c16_i32_25 : i32
    llvm.store %95, %9 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb11:  // pred: ^bb9
    %96 = llvm.load %7 : !llvm.ptr -> i32
    %97 = llvm.load %2 : !llvm.ptr -> i32
    %98 = llvm.load %4 : !llvm.ptr -> i32
    %99 = llvm.call %15(%17, %96, %97, %98) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    llvm.store %99, %3 : i32, !llvm.ptr
    cf.br ^bb10
  }
  func.func @f37(%arg0: !llvm.ptr, %arg1: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32_1 = arith.constant 0 : i32
    %c1050704_i64 = arith.constant 1050704 : i64
    %5 = arith.extui %c0_i32_1 : i32 to i64
    %6 = arith.addi %5, %c1050704_i64 : i64
    %7 = llvm.getelementptr %4[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i8
    %9 = arith.extui %8 : i8 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_2 : i32
    cf.cond_br %10, ^bb3, ^bb4
  ^bb2(%11: i32):  // 2 preds: ^bb3, ^bb4
    return %11 : i32
  ^bb3:  // pred: ^bb1
    %c0_i32_3 = arith.constant 0 : i32
    %c1050700_i64 = arith.constant 1050700 : i64
    %12 = arith.extui %c0_i32_3 : i32 to i64
    %13 = arith.addi %12, %c1050700_i64 : i64
    %14 = llvm.getelementptr %4[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i32
    cf.br ^bb2(%15 : i32)
  ^bb4:  // pred: ^bb1
    %16 = call @f23(%arg0) : (!llvm.ptr) -> i32
    llvm.store %16, %1 : i32, !llvm.ptr
    %c0_i32_4 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050704_i64_5 = arith.constant 1050704 : i64
    %17 = arith.extui %c0_i32_4 : i32 to i64
    %18 = arith.addi %17, %c1050704_i64_5 : i64
    %19 = llvm.getelementptr %4[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %20 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %20, %19 : i8, !llvm.ptr
    %c0_i32_6 = arith.constant 0 : i32
    %21 = llvm.load %1 : !llvm.ptr -> i32
    %c1050700_i64_7 = arith.constant 1050700 : i64
    %22 = arith.extui %c0_i32_6 : i32 to i64
    %23 = arith.addi %22, %c1050700_i64_7 : i64
    %24 = llvm.getelementptr %4[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %21, %24 : i32, !llvm.ptr
    %25 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb2(%25 : i32)
  }
  func.func @f38(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[440] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %3[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %8 = llvm.load %1 : !llvm.ptr -> i32
    %9 = llvm.load %2 : !llvm.ptr -> i32
    %10 = llvm.call %5(%7, %8, %9) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> !llvm.void
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f39(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %c1_i64_7 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_7 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %8 : i32, !llvm.ptr
    %9 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.getelementptr %11[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    %14 = llvm.getelementptr %arg0[512] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.getelementptr %14[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> !llvm.ptr
    %17 = llvm.getelementptr %14[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %18 = llvm.load %17 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %19 = llvm.load %10 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %20 = arith.subi %19, %c64_i32 : i32
    llvm.store %20, %5 : i32, !llvm.ptr
    llvm.store %20, %10 : i32, !llvm.ptr
    %21 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %22 = arith.addi %21, %c32_i32 : i32
    %c24_i32 = arith.constant 24 : i32
    %23 = arith.addi %22, %c24_i32 : i32
    %24 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_8 = arith.constant 24 : i32
    %25 = arith.addi %24, %c24_i32_8 : i32
    %c0_i64 = arith.constant 0 : i64
    %26 = arith.extui %25 : i32 to i64
    %27 = arith.addi %26, %c0_i64 : i64
    %28 = llvm.getelementptr %13[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c0_i64_9 = arith.constant 0 : i64
    %30 = arith.extui %23 : i32 to i64
    %31 = arith.addi %30, %c0_i64_9 : i64
    %32 = llvm.getelementptr %13[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %29, %32 : i64, !llvm.ptr
    %33 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32_10 = arith.constant 32 : i32
    %34 = arith.addi %33, %c32_i32_10 : i32
    %c16_i32 = arith.constant 16 : i32
    %35 = arith.addi %34, %c16_i32 : i32
    %36 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_11 = arith.constant 16 : i32
    %37 = arith.addi %36, %c16_i32_11 : i32
    %c0_i64_12 = arith.constant 0 : i64
    %38 = arith.extui %37 : i32 to i64
    %39 = arith.addi %38, %c0_i64_12 : i64
    %40 = llvm.getelementptr %13[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i64
    %c0_i64_13 = arith.constant 0 : i64
    %42 = arith.extui %35 : i32 to i64
    %43 = arith.addi %42, %c0_i64_13 : i64
    %44 = llvm.getelementptr %13[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i64, !llvm.ptr
    %45 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32_14 = arith.constant 32 : i32
    %46 = arith.addi %45, %c32_i32_14 : i32
    %c8_i32 = arith.constant 8 : i32
    %47 = arith.addi %46, %c8_i32 : i32
    %48 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_15 = arith.constant 8 : i32
    %49 = arith.addi %48, %c8_i32_15 : i32
    %c0_i64_16 = arith.constant 0 : i64
    %50 = arith.extui %49 : i32 to i64
    %51 = arith.addi %50, %c0_i64_16 : i64
    %52 = llvm.getelementptr %13[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %53 = llvm.load %52 : !llvm.ptr -> i64
    %c0_i64_17 = arith.constant 0 : i64
    %54 = arith.extui %47 : i32 to i64
    %55 = arith.addi %54, %c0_i64_17 : i64
    %56 = llvm.getelementptr %13[%55] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %53, %56 : i64, !llvm.ptr
    %57 = llvm.load %5 : !llvm.ptr -> i32
    %58 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_18 = arith.constant 0 : i64
    %59 = arith.extui %58 : i32 to i64
    %60 = arith.addi %59, %c0_i64_18 : i64
    %61 = llvm.getelementptr %13[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %62 = llvm.load %61 : !llvm.ptr -> i64
    %c32_i64 = arith.constant 32 : i64
    %63 = arith.extui %57 : i32 to i64
    %64 = arith.addi %63, %c32_i64 : i64
    %65 = llvm.getelementptr %13[%64] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %62, %65 : i64, !llvm.ptr
    %c0_i32_19 = arith.constant 0 : i32
    llvm.store %c0_i32_19, %2 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %66 = llvm.load %5 : !llvm.ptr -> i32
    %c24_i32_20 = arith.constant 24 : i32
    %67 = arith.addi %66, %c24_i32_20 : i32
    %68 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32_21 = arith.constant 32 : i32
    %69 = arith.addi %68, %c32_i32_21 : i32
    %c24_i32_22 = arith.constant 24 : i32
    %70 = arith.addi %69, %c24_i32_22 : i32
    %c0_i64_23 = arith.constant 0 : i64
    %71 = arith.extui %70 : i32 to i64
    %72 = arith.addi %71, %c0_i64_23 : i64
    %73 = llvm.getelementptr %13[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c0_i64_24 = arith.constant 0 : i64
    %75 = arith.extui %67 : i32 to i64
    %76 = arith.addi %75, %c0_i64_24 : i64
    %77 = llvm.getelementptr %13[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %74, %77 : i64, !llvm.ptr
    %78 = llvm.load %5 : !llvm.ptr -> i32
    %c16_i32_25 = arith.constant 16 : i32
    %79 = arith.addi %78, %c16_i32_25 : i32
    %80 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32_26 = arith.constant 32 : i32
    %81 = arith.addi %80, %c32_i32_26 : i32
    %c16_i32_27 = arith.constant 16 : i32
    %82 = arith.addi %81, %c16_i32_27 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %83 = arith.extui %82 : i32 to i64
    %84 = arith.addi %83, %c0_i64_28 : i64
    %85 = llvm.getelementptr %13[%84] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %86 = llvm.load %85 : !llvm.ptr -> i64
    %c0_i64_29 = arith.constant 0 : i64
    %87 = arith.extui %79 : i32 to i64
    %88 = arith.addi %87, %c0_i64_29 : i64
    %89 = llvm.getelementptr %13[%88] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %86, %89 : i64, !llvm.ptr
    %90 = llvm.load %5 : !llvm.ptr -> i32
    %c8_i32_30 = arith.constant 8 : i32
    %91 = arith.addi %90, %c8_i32_30 : i32
    %92 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32_31 = arith.constant 32 : i32
    %93 = arith.addi %92, %c32_i32_31 : i32
    %c8_i32_32 = arith.constant 8 : i32
    %94 = arith.addi %93, %c8_i32_32 : i32
    %c0_i64_33 = arith.constant 0 : i64
    %95 = arith.extui %94 : i32 to i64
    %96 = arith.addi %95, %c0_i64_33 : i64
    %97 = llvm.getelementptr %13[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %98 = llvm.load %97 : !llvm.ptr -> i64
    %c0_i64_34 = arith.constant 0 : i64
    %99 = arith.extui %91 : i32 to i64
    %100 = arith.addi %99, %c0_i64_34 : i64
    %101 = llvm.getelementptr %13[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %98, %101 : i64, !llvm.ptr
    %102 = llvm.load %5 : !llvm.ptr -> i32
    %103 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i64_35 = arith.constant 32 : i64
    %104 = arith.extui %103 : i32 to i64
    %105 = arith.addi %104, %c32_i64_35 : i64
    %106 = llvm.getelementptr %13[%105] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %c0_i64_36 = arith.constant 0 : i64
    %108 = arith.extui %102 : i32 to i64
    %109 = arith.addi %108, %c0_i64_36 : i64
    %110 = llvm.getelementptr %13[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %107, %110 : i64, !llvm.ptr
    %111 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i32 = arith.constant 20 : i32
    %112 = llvm.load %5 : !llvm.ptr -> i32
    %113 = llvm.load %3 : !llvm.ptr -> i32
    %114 = llvm.load %4 : !llvm.ptr -> i32
    %115 = llvm.call %16(%18, %111, %c20_i32, %112, %113, %114) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32, i32, i32) -> !llvm.void
    %116 = llvm.load %5 : !llvm.ptr -> i32
    %c64_i32_37 = arith.constant 64 : i32
    %117 = arith.addi %116, %c64_i32_37 : i32
    llvm.store %117, %10 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %118 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32_38 = arith.constant 32 : i32
    %119 = arith.addi %118, %c32_i32_38 : i32
    %120 = llvm.load %2 : !llvm.ptr -> i32
    %121 = arith.addi %119, %120 : i32
    llvm.store %121, %6 : i32, !llvm.ptr
    %c0_i64_39 = arith.constant 0 : i64
    %122 = arith.extui %121 : i32 to i64
    %123 = arith.addi %122, %c0_i64_39 : i64
    %124 = llvm.getelementptr %13[%123] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %125 = llvm.load %124 : !llvm.ptr -> i8
    %126 = arith.extui %125 : i8 to i32
    llvm.store %126, %7 : i32, !llvm.ptr
    %127 = llvm.load %6 : !llvm.ptr -> i32
    %128 = llvm.load %5 : !llvm.ptr -> i32
    %c32_i32_40 = arith.constant 32 : i32
    %129 = arith.addi %128, %c32_i32_40 : i32
    %130 = llvm.load %2 : !llvm.ptr -> i32
    %c31_i32 = arith.constant 31 : i32
    %131 = arith.xori %130, %c31_i32 : i32
    %132 = arith.addi %129, %131 : i32
    llvm.store %132, %8 : i32, !llvm.ptr
    %c0_i64_41 = arith.constant 0 : i64
    %133 = arith.extui %132 : i32 to i64
    %134 = arith.addi %133, %c0_i64_41 : i64
    %135 = llvm.getelementptr %13[%134] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %136 = llvm.load %135 : !llvm.ptr -> i8
    %137 = arith.extui %136 : i8 to i32
    %c0_i64_42 = arith.constant 0 : i64
    %138 = arith.extui %127 : i32 to i64
    %139 = arith.addi %138, %c0_i64_42 : i64
    %140 = llvm.getelementptr %13[%139] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %141 = arith.trunci %137 : i32 to i8
    llvm.store %141, %140 : i8, !llvm.ptr
    %142 = llvm.load %8 : !llvm.ptr -> i32
    %143 = llvm.load %7 : !llvm.ptr -> i32
    %c0_i64_43 = arith.constant 0 : i64
    %144 = arith.extui %142 : i32 to i64
    %145 = arith.addi %144, %c0_i64_43 : i64
    %146 = llvm.getelementptr %13[%145] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %147 = arith.trunci %143 : i32 to i8
    llvm.store %147, %146 : i8, !llvm.ptr
    %148 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %149 = arith.addi %148, %c1_i32 : i32
    llvm.store %149, %2 : i32, !llvm.ptr
    %c16_i32_44 = arith.constant 16 : i32
    %150 = arith.cmpi eq, %149, %c16_i32_44 : i32
    %151 = arith.extui %150 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %152 = arith.xori %151, %c-1_i32 : i32
    %c0_i32_45 = arith.constant 0 : i32
    %153 = arith.cmpi ne, %152, %c0_i32_45 : i32
    cf.cond_br %153, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f40(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg6, %5 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %c1_i64_7 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_7 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %8 : i32, !llvm.ptr
    %c1_i64_8 = arith.constant 1 : i64
    %9 = llvm.alloca %c1_i64_8 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %9 : i32, !llvm.ptr
    %10 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.getelementptr %12[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %15 = llvm.getelementptr %arg0[488] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.getelementptr %15[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    %18 = llvm.getelementptr %15[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %19 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %20 = llvm.load %11 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %21 = arith.subi %20, %c64_i32 : i32
    llvm.store %21, %6 : i32, !llvm.ptr
    llvm.store %21, %11 : i32, !llvm.ptr
    %22 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %23 = arith.addi %22, %c32_i32 : i32
    %c24_i32 = arith.constant 24 : i32
    %24 = arith.addi %23, %c24_i32 : i32
    %25 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_9 = arith.constant 24 : i32
    %26 = arith.addi %25, %c24_i32_9 : i32
    %c0_i64 = arith.constant 0 : i64
    %27 = arith.extui %26 : i32 to i64
    %28 = arith.addi %27, %c0_i64 : i64
    %29 = llvm.getelementptr %14[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %30 = llvm.load %29 : !llvm.ptr -> i64
    %c0_i64_10 = arith.constant 0 : i64
    %31 = arith.extui %24 : i32 to i64
    %32 = arith.addi %31, %c0_i64_10 : i64
    %33 = llvm.getelementptr %14[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %30, %33 : i64, !llvm.ptr
    %34 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i32_11 = arith.constant 32 : i32
    %35 = arith.addi %34, %c32_i32_11 : i32
    %c16_i32 = arith.constant 16 : i32
    %36 = arith.addi %35, %c16_i32 : i32
    %37 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_12 = arith.constant 16 : i32
    %38 = arith.addi %37, %c16_i32_12 : i32
    %c0_i64_13 = arith.constant 0 : i64
    %39 = arith.extui %38 : i32 to i64
    %40 = arith.addi %39, %c0_i64_13 : i64
    %41 = llvm.getelementptr %14[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %42 = llvm.load %41 : !llvm.ptr -> i64
    %c0_i64_14 = arith.constant 0 : i64
    %43 = arith.extui %36 : i32 to i64
    %44 = arith.addi %43, %c0_i64_14 : i64
    %45 = llvm.getelementptr %14[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %42, %45 : i64, !llvm.ptr
    %46 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i32_15 = arith.constant 32 : i32
    %47 = arith.addi %46, %c32_i32_15 : i32
    %c8_i32 = arith.constant 8 : i32
    %48 = arith.addi %47, %c8_i32 : i32
    %49 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_16 = arith.constant 8 : i32
    %50 = arith.addi %49, %c8_i32_16 : i32
    %c0_i64_17 = arith.constant 0 : i64
    %51 = arith.extui %50 : i32 to i64
    %52 = arith.addi %51, %c0_i64_17 : i64
    %53 = llvm.getelementptr %14[%52] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %c0_i64_18 = arith.constant 0 : i64
    %55 = arith.extui %48 : i32 to i64
    %56 = arith.addi %55, %c0_i64_18 : i64
    %57 = llvm.getelementptr %14[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %54, %57 : i64, !llvm.ptr
    %58 = llvm.load %6 : !llvm.ptr -> i32
    %59 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_19 = arith.constant 0 : i64
    %60 = arith.extui %59 : i32 to i64
    %61 = arith.addi %60, %c0_i64_19 : i64
    %62 = llvm.getelementptr %14[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %63 = llvm.load %62 : !llvm.ptr -> i64
    %c32_i64 = arith.constant 32 : i64
    %64 = arith.extui %58 : i32 to i64
    %65 = arith.addi %64, %c32_i64 : i64
    %66 = llvm.getelementptr %14[%65] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %63, %66 : i64, !llvm.ptr
    %c0_i32_20 = arith.constant 0 : i32
    llvm.store %c0_i32_20, %2 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %67 = llvm.load %6 : !llvm.ptr -> i32
    %c24_i32_21 = arith.constant 24 : i32
    %68 = arith.addi %67, %c24_i32_21 : i32
    %69 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i32_22 = arith.constant 32 : i32
    %70 = arith.addi %69, %c32_i32_22 : i32
    %c24_i32_23 = arith.constant 24 : i32
    %71 = arith.addi %70, %c24_i32_23 : i32
    %c0_i64_24 = arith.constant 0 : i64
    %72 = arith.extui %71 : i32 to i64
    %73 = arith.addi %72, %c0_i64_24 : i64
    %74 = llvm.getelementptr %14[%73] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %75 = llvm.load %74 : !llvm.ptr -> i64
    %c0_i64_25 = arith.constant 0 : i64
    %76 = arith.extui %68 : i32 to i64
    %77 = arith.addi %76, %c0_i64_25 : i64
    %78 = llvm.getelementptr %14[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %75, %78 : i64, !llvm.ptr
    %79 = llvm.load %6 : !llvm.ptr -> i32
    %c16_i32_26 = arith.constant 16 : i32
    %80 = arith.addi %79, %c16_i32_26 : i32
    %81 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i32_27 = arith.constant 32 : i32
    %82 = arith.addi %81, %c32_i32_27 : i32
    %c16_i32_28 = arith.constant 16 : i32
    %83 = arith.addi %82, %c16_i32_28 : i32
    %c0_i64_29 = arith.constant 0 : i64
    %84 = arith.extui %83 : i32 to i64
    %85 = arith.addi %84, %c0_i64_29 : i64
    %86 = llvm.getelementptr %14[%85] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %87 = llvm.load %86 : !llvm.ptr -> i64
    %c0_i64_30 = arith.constant 0 : i64
    %88 = arith.extui %80 : i32 to i64
    %89 = arith.addi %88, %c0_i64_30 : i64
    %90 = llvm.getelementptr %14[%89] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %87, %90 : i64, !llvm.ptr
    %91 = llvm.load %6 : !llvm.ptr -> i32
    %c8_i32_31 = arith.constant 8 : i32
    %92 = arith.addi %91, %c8_i32_31 : i32
    %93 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i32_32 = arith.constant 32 : i32
    %94 = arith.addi %93, %c32_i32_32 : i32
    %c8_i32_33 = arith.constant 8 : i32
    %95 = arith.addi %94, %c8_i32_33 : i32
    %c0_i64_34 = arith.constant 0 : i64
    %96 = arith.extui %95 : i32 to i64
    %97 = arith.addi %96, %c0_i64_34 : i64
    %98 = llvm.getelementptr %14[%97] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %99 = llvm.load %98 : !llvm.ptr -> i64
    %c0_i64_35 = arith.constant 0 : i64
    %100 = arith.extui %92 : i32 to i64
    %101 = arith.addi %100, %c0_i64_35 : i64
    %102 = llvm.getelementptr %14[%101] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %99, %102 : i64, !llvm.ptr
    %103 = llvm.load %6 : !llvm.ptr -> i32
    %104 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i64_36 = arith.constant 32 : i64
    %105 = arith.extui %104 : i32 to i64
    %106 = arith.addi %105, %c32_i64_36 : i64
    %107 = llvm.getelementptr %14[%106] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %108 = llvm.load %107 : !llvm.ptr -> i64
    %c0_i64_37 = arith.constant 0 : i64
    %109 = arith.extui %103 : i32 to i64
    %110 = arith.addi %109, %c0_i64_37 : i64
    %111 = llvm.getelementptr %14[%110] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %108, %111 : i64, !llvm.ptr
    %112 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i32 = arith.constant 20 : i32
    %113 = llvm.load %6 : !llvm.ptr -> i32
    %114 = llvm.load %3 : !llvm.ptr -> i32
    %115 = llvm.load %4 : !llvm.ptr -> i32
    %116 = llvm.load %5 : !llvm.ptr -> i32
    %117 = llvm.call %17(%19, %112, %c20_i32, %113, %114, %115, %116) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32, i32, i32, i32) -> !llvm.void
    %118 = llvm.load %6 : !llvm.ptr -> i32
    %c64_i32_38 = arith.constant 64 : i32
    %119 = arith.addi %118, %c64_i32_38 : i32
    llvm.store %119, %11 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %120 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i32_39 = arith.constant 32 : i32
    %121 = arith.addi %120, %c32_i32_39 : i32
    %122 = llvm.load %2 : !llvm.ptr -> i32
    %123 = arith.addi %121, %122 : i32
    llvm.store %123, %7 : i32, !llvm.ptr
    %c0_i64_40 = arith.constant 0 : i64
    %124 = arith.extui %123 : i32 to i64
    %125 = arith.addi %124, %c0_i64_40 : i64
    %126 = llvm.getelementptr %14[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %127 = llvm.load %126 : !llvm.ptr -> i8
    %128 = arith.extui %127 : i8 to i32
    llvm.store %128, %8 : i32, !llvm.ptr
    %129 = llvm.load %7 : !llvm.ptr -> i32
    %130 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i32_41 = arith.constant 32 : i32
    %131 = arith.addi %130, %c32_i32_41 : i32
    %132 = llvm.load %2 : !llvm.ptr -> i32
    %c31_i32 = arith.constant 31 : i32
    %133 = arith.xori %132, %c31_i32 : i32
    %134 = arith.addi %131, %133 : i32
    llvm.store %134, %9 : i32, !llvm.ptr
    %c0_i64_42 = arith.constant 0 : i64
    %135 = arith.extui %134 : i32 to i64
    %136 = arith.addi %135, %c0_i64_42 : i64
    %137 = llvm.getelementptr %14[%136] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %138 = llvm.load %137 : !llvm.ptr -> i8
    %139 = arith.extui %138 : i8 to i32
    %c0_i64_43 = arith.constant 0 : i64
    %140 = arith.extui %129 : i32 to i64
    %141 = arith.addi %140, %c0_i64_43 : i64
    %142 = llvm.getelementptr %14[%141] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %143 = arith.trunci %139 : i32 to i8
    llvm.store %143, %142 : i8, !llvm.ptr
    %144 = llvm.load %9 : !llvm.ptr -> i32
    %145 = llvm.load %8 : !llvm.ptr -> i32
    %c0_i64_44 = arith.constant 0 : i64
    %146 = arith.extui %144 : i32 to i64
    %147 = arith.addi %146, %c0_i64_44 : i64
    %148 = llvm.getelementptr %14[%147] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %149 = arith.trunci %145 : i32 to i8
    llvm.store %149, %148 : i8, !llvm.ptr
    %150 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %151 = arith.addi %150, %c1_i32 : i32
    llvm.store %151, %2 : i32, !llvm.ptr
    %c16_i32_45 = arith.constant 16 : i32
    %152 = arith.cmpi eq, %151, %c16_i32_45 : i32
    %153 = arith.extui %152 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %154 = arith.xori %153, %c-1_i32 : i32
    %c0_i32_46 = arith.constant 0 : i32
    %155 = arith.cmpi ne, %154, %c0_i32_46 : i32
    cf.cond_br %155, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f41(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[536] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    %7 = llvm.getelementptr %4[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %9 = llvm.load %1 : !llvm.ptr -> i32
    %10 = llvm.load %2 : !llvm.ptr -> i32
    %11 = llvm.load %3 : !llvm.ptr -> i32
    %12 = llvm.call %6(%8, %9, %10, %11) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> !llvm.void
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f42(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[608] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.getelementptr %12[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %15 = llvm.getelementptr %12[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %17 = llvm.load %8 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %18 = arith.subi %17, %c64_i32 : i32
    llvm.store %18, %3 : i32, !llvm.ptr
    llvm.store %18, %8 : i32, !llvm.ptr
    %19 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %20 = arith.addi %19, %c32_i32 : i32
    %c24_i32 = arith.constant 24 : i32
    %21 = arith.addi %20, %c24_i32 : i32
    %22 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_6 = arith.constant 24 : i32
    %23 = arith.addi %22, %c24_i32_6 : i32
    %c0_i64 = arith.constant 0 : i64
    %24 = arith.extui %23 : i32 to i64
    %25 = arith.addi %24, %c0_i64 : i64
    %26 = llvm.getelementptr %11[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %27 = llvm.load %26 : !llvm.ptr -> i64
    %c0_i64_7 = arith.constant 0 : i64
    %28 = arith.extui %21 : i32 to i64
    %29 = arith.addi %28, %c0_i64_7 : i64
    %30 = llvm.getelementptr %11[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %27, %30 : i64, !llvm.ptr
    %31 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_8 = arith.constant 32 : i32
    %32 = arith.addi %31, %c32_i32_8 : i32
    %c16_i32 = arith.constant 16 : i32
    %33 = arith.addi %32, %c16_i32 : i32
    %34 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32_9 = arith.constant 16 : i32
    %35 = arith.addi %34, %c16_i32_9 : i32
    %c0_i64_10 = arith.constant 0 : i64
    %36 = arith.extui %35 : i32 to i64
    %37 = arith.addi %36, %c0_i64_10 : i64
    %38 = llvm.getelementptr %11[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %39 = llvm.load %38 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %40 = arith.extui %33 : i32 to i64
    %41 = arith.addi %40, %c0_i64_11 : i64
    %42 = llvm.getelementptr %11[%41] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %39, %42 : i64, !llvm.ptr
    %43 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_12 = arith.constant 32 : i32
    %44 = arith.addi %43, %c32_i32_12 : i32
    %c8_i32 = arith.constant 8 : i32
    %45 = arith.addi %44, %c8_i32 : i32
    %46 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_13 = arith.constant 8 : i32
    %47 = arith.addi %46, %c8_i32_13 : i32
    %c0_i64_14 = arith.constant 0 : i64
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.addi %48, %c0_i64_14 : i64
    %50 = llvm.getelementptr %11[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %52 = arith.extui %45 : i32 to i64
    %53 = arith.addi %52, %c0_i64_15 : i64
    %54 = llvm.getelementptr %11[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %51, %54 : i64, !llvm.ptr
    %55 = llvm.load %3 : !llvm.ptr -> i32
    %56 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_16 = arith.constant 0 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c0_i64_16 : i64
    %59 = llvm.getelementptr %11[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c32_i64 = arith.constant 32 : i64
    %61 = arith.extui %55 : i32 to i64
    %62 = arith.addi %61, %c32_i64 : i64
    %63 = llvm.getelementptr %11[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %60, %63 : i64, !llvm.ptr
    %c0_i32_17 = arith.constant 0 : i32
    llvm.store %c0_i32_17, %1 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %64 = llvm.load %3 : !llvm.ptr -> i32
    %c24_i32_18 = arith.constant 24 : i32
    %65 = arith.addi %64, %c24_i32_18 : i32
    %66 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_19 = arith.constant 32 : i32
    %67 = arith.addi %66, %c32_i32_19 : i32
    %c24_i32_20 = arith.constant 24 : i32
    %68 = arith.addi %67, %c24_i32_20 : i32
    %c0_i64_21 = arith.constant 0 : i64
    %69 = arith.extui %68 : i32 to i64
    %70 = arith.addi %69, %c0_i64_21 : i64
    %71 = llvm.getelementptr %11[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c0_i64_22 = arith.constant 0 : i64
    %73 = arith.extui %65 : i32 to i64
    %74 = arith.addi %73, %c0_i64_22 : i64
    %75 = llvm.getelementptr %11[%74] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %72, %75 : i64, !llvm.ptr
    %76 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32_23 = arith.constant 16 : i32
    %77 = arith.addi %76, %c16_i32_23 : i32
    %78 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_24 = arith.constant 32 : i32
    %79 = arith.addi %78, %c32_i32_24 : i32
    %c16_i32_25 = arith.constant 16 : i32
    %80 = arith.addi %79, %c16_i32_25 : i32
    %c0_i64_26 = arith.constant 0 : i64
    %81 = arith.extui %80 : i32 to i64
    %82 = arith.addi %81, %c0_i64_26 : i64
    %83 = llvm.getelementptr %11[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %84 = llvm.load %83 : !llvm.ptr -> i64
    %c0_i64_27 = arith.constant 0 : i64
    %85 = arith.extui %77 : i32 to i64
    %86 = arith.addi %85, %c0_i64_27 : i64
    %87 = llvm.getelementptr %11[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %84, %87 : i64, !llvm.ptr
    %88 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32_28 = arith.constant 8 : i32
    %89 = arith.addi %88, %c8_i32_28 : i32
    %90 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_29 = arith.constant 32 : i32
    %91 = arith.addi %90, %c32_i32_29 : i32
    %c8_i32_30 = arith.constant 8 : i32
    %92 = arith.addi %91, %c8_i32_30 : i32
    %c0_i64_31 = arith.constant 0 : i64
    %93 = arith.extui %92 : i32 to i64
    %94 = arith.addi %93, %c0_i64_31 : i64
    %95 = llvm.getelementptr %11[%94] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c0_i64_32 = arith.constant 0 : i64
    %97 = arith.extui %89 : i32 to i64
    %98 = arith.addi %97, %c0_i64_32 : i64
    %99 = llvm.getelementptr %11[%98] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %96, %99 : i64, !llvm.ptr
    %100 = llvm.load %3 : !llvm.ptr -> i32
    %101 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i64_33 = arith.constant 32 : i64
    %102 = arith.extui %101 : i32 to i64
    %103 = arith.addi %102, %c32_i64_33 : i64
    %104 = llvm.getelementptr %11[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %105 = llvm.load %104 : !llvm.ptr -> i64
    %c0_i64_34 = arith.constant 0 : i64
    %106 = arith.extui %100 : i32 to i64
    %107 = arith.addi %106, %c0_i64_34 : i64
    %108 = llvm.getelementptr %11[%107] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %105, %108 : i64, !llvm.ptr
    %109 = llvm.load %3 : !llvm.ptr -> i32
    %110 = llvm.load %2 : !llvm.ptr -> i32
    %111 = llvm.call %14(%16, %109, %110) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> !llvm.void
    %112 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i32_35 = arith.constant 64 : i32
    %113 = arith.addi %112, %c64_i32_35 : i32
    llvm.store %113, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %114 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_36 = arith.constant 32 : i32
    %115 = arith.addi %114, %c32_i32_36 : i32
    %116 = llvm.load %1 : !llvm.ptr -> i32
    %117 = arith.addi %115, %116 : i32
    llvm.store %117, %4 : i32, !llvm.ptr
    %c0_i64_37 = arith.constant 0 : i64
    %118 = arith.extui %117 : i32 to i64
    %119 = arith.addi %118, %c0_i64_37 : i64
    %120 = llvm.getelementptr %11[%119] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %121 = llvm.load %120 : !llvm.ptr -> i8
    %122 = arith.extui %121 : i8 to i32
    llvm.store %122, %5 : i32, !llvm.ptr
    %123 = llvm.load %4 : !llvm.ptr -> i32
    %124 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_38 = arith.constant 32 : i32
    %125 = arith.addi %124, %c32_i32_38 : i32
    %126 = llvm.load %1 : !llvm.ptr -> i32
    %c31_i32 = arith.constant 31 : i32
    %127 = arith.xori %126, %c31_i32 : i32
    %128 = arith.addi %125, %127 : i32
    llvm.store %128, %6 : i32, !llvm.ptr
    %c0_i64_39 = arith.constant 0 : i64
    %129 = arith.extui %128 : i32 to i64
    %130 = arith.addi %129, %c0_i64_39 : i64
    %131 = llvm.getelementptr %11[%130] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %132 = llvm.load %131 : !llvm.ptr -> i8
    %133 = arith.extui %132 : i8 to i32
    %c0_i64_40 = arith.constant 0 : i64
    %134 = arith.extui %123 : i32 to i64
    %135 = arith.addi %134, %c0_i64_40 : i64
    %136 = llvm.getelementptr %11[%135] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %137 = arith.trunci %133 : i32 to i8
    llvm.store %137, %136 : i8, !llvm.ptr
    %138 = llvm.load %6 : !llvm.ptr -> i32
    %139 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_41 = arith.constant 0 : i64
    %140 = arith.extui %138 : i32 to i64
    %141 = arith.addi %140, %c0_i64_41 : i64
    %142 = llvm.getelementptr %11[%141] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %143 = arith.trunci %139 : i32 to i8
    llvm.store %143, %142 : i8, !llvm.ptr
    %144 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %145 = arith.addi %144, %c1_i32 : i32
    llvm.store %145, %1 : i32, !llvm.ptr
    %c16_i32_42 = arith.constant 16 : i32
    %146 = arith.cmpi eq, %145, %c16_i32_42 : i32
    %147 = arith.extui %146 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %148 = arith.xori %147, %c-1_i32 : i32
    %c0_i32_43 = arith.constant 0 : i32
    %149 = arith.cmpi ne, %148, %c0_i32_43 : i32
    cf.cond_br %149, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f43(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[632] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.getelementptr %12[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %15 = llvm.getelementptr %12[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %17 = llvm.load %8 : !llvm.ptr -> i32
    %c96_i32 = arith.constant 96 : i32
    %18 = arith.subi %17, %c96_i32 : i32
    llvm.store %18, %3 : i32, !llvm.ptr
    llvm.store %18, %8 : i32, !llvm.ptr
    %19 = llvm.load %3 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %20 = arith.addi %19, %c24_i32 : i32
    %c0_i64 = arith.constant 0 : i64
    %c0_i64_6 = arith.constant 0 : i64
    %21 = arith.extui %20 : i32 to i64
    %22 = arith.addi %21, %c0_i64_6 : i64
    %23 = llvm.getelementptr %11[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64, %23 : i64, !llvm.ptr
    %24 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %25 = arith.addi %24, %c16_i32 : i32
    %c0_i64_7 = arith.constant 0 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %26 = arith.extui %25 : i32 to i64
    %27 = arith.addi %26, %c0_i64_8 : i64
    %28 = llvm.getelementptr %11[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_7, %28 : i64, !llvm.ptr
    %29 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %30 = arith.addi %29, %c8_i32 : i32
    %c0_i64_9 = arith.constant 0 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c0_i64_10 : i64
    %33 = llvm.getelementptr %11[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_9, %33 : i64, !llvm.ptr
    %34 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_11 = arith.constant 0 : i64
    %c0_i64_12 = arith.constant 0 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c0_i64_12 : i64
    %37 = llvm.getelementptr %11[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_11, %37 : i64, !llvm.ptr
    %38 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %39 = arith.addi %38, %c64_i32 : i32
    %c24_i32_13 = arith.constant 24 : i32
    %40 = arith.addi %39, %c24_i32_13 : i32
    %41 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_14 = arith.constant 24 : i32
    %42 = arith.addi %41, %c24_i32_14 : i32
    %c0_i64_15 = arith.constant 0 : i64
    %43 = arith.extui %42 : i32 to i64
    %44 = arith.addi %43, %c0_i64_15 : i64
    %45 = llvm.getelementptr %11[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %46 = llvm.load %45 : !llvm.ptr -> i64
    %c0_i64_16 = arith.constant 0 : i64
    %47 = arith.extui %40 : i32 to i64
    %48 = arith.addi %47, %c0_i64_16 : i64
    %49 = llvm.getelementptr %11[%48] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %46, %49 : i64, !llvm.ptr
    %50 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i32_17 = arith.constant 64 : i32
    %51 = arith.addi %50, %c64_i32_17 : i32
    %c16_i32_18 = arith.constant 16 : i32
    %52 = arith.addi %51, %c16_i32_18 : i32
    %53 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_19 = arith.constant 16 : i32
    %54 = arith.addi %53, %c16_i32_19 : i32
    %c0_i64_20 = arith.constant 0 : i64
    %55 = arith.extui %54 : i32 to i64
    %56 = arith.addi %55, %c0_i64_20 : i64
    %57 = llvm.getelementptr %11[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i64
    %c0_i64_21 = arith.constant 0 : i64
    %59 = arith.extui %52 : i32 to i64
    %60 = arith.addi %59, %c0_i64_21 : i64
    %61 = llvm.getelementptr %11[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %58, %61 : i64, !llvm.ptr
    %62 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i32_22 = arith.constant 64 : i32
    %63 = arith.addi %62, %c64_i32_22 : i32
    %c8_i32_23 = arith.constant 8 : i32
    %64 = arith.addi %63, %c8_i32_23 : i32
    %65 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_24 = arith.constant 8 : i32
    %66 = arith.addi %65, %c8_i32_24 : i32
    %c0_i64_25 = arith.constant 0 : i64
    %67 = arith.extui %66 : i32 to i64
    %68 = arith.addi %67, %c0_i64_25 : i64
    %69 = llvm.getelementptr %11[%68] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %70 = llvm.load %69 : !llvm.ptr -> i64
    %c0_i64_26 = arith.constant 0 : i64
    %71 = arith.extui %64 : i32 to i64
    %72 = arith.addi %71, %c0_i64_26 : i64
    %73 = llvm.getelementptr %11[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %70, %73 : i64, !llvm.ptr
    %74 = llvm.load %3 : !llvm.ptr -> i32
    %75 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_27 = arith.constant 0 : i64
    %76 = arith.extui %75 : i32 to i64
    %77 = arith.addi %76, %c0_i64_27 : i64
    %78 = llvm.getelementptr %11[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %79 = llvm.load %78 : !llvm.ptr -> i64
    %c64_i64 = arith.constant 64 : i64
    %80 = arith.extui %74 : i32 to i64
    %81 = arith.addi %80, %c64_i64 : i64
    %82 = llvm.getelementptr %11[%81] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %79, %82 : i64, !llvm.ptr
    %c0_i32_28 = arith.constant 0 : i32
    llvm.store %c0_i32_28, %2 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %83 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %84 = arith.addi %83, %c32_i32 : i32
    %c24_i32_29 = arith.constant 24 : i32
    %85 = arith.addi %84, %c24_i32_29 : i32
    %86 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i32_30 = arith.constant 64 : i32
    %87 = arith.addi %86, %c64_i32_30 : i32
    %c24_i32_31 = arith.constant 24 : i32
    %88 = arith.addi %87, %c24_i32_31 : i32
    %c0_i64_32 = arith.constant 0 : i64
    %89 = arith.extui %88 : i32 to i64
    %90 = arith.addi %89, %c0_i64_32 : i64
    %91 = llvm.getelementptr %11[%90] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %92 = llvm.load %91 : !llvm.ptr -> i64
    %c0_i64_33 = arith.constant 0 : i64
    %93 = arith.extui %85 : i32 to i64
    %94 = arith.addi %93, %c0_i64_33 : i64
    %95 = llvm.getelementptr %11[%94] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %92, %95 : i64, !llvm.ptr
    %96 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_34 = arith.constant 32 : i32
    %97 = arith.addi %96, %c32_i32_34 : i32
    %c16_i32_35 = arith.constant 16 : i32
    %98 = arith.addi %97, %c16_i32_35 : i32
    %99 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i32_36 = arith.constant 64 : i32
    %100 = arith.addi %99, %c64_i32_36 : i32
    %c16_i32_37 = arith.constant 16 : i32
    %101 = arith.addi %100, %c16_i32_37 : i32
    %c0_i64_38 = arith.constant 0 : i64
    %102 = arith.extui %101 : i32 to i64
    %103 = arith.addi %102, %c0_i64_38 : i64
    %104 = llvm.getelementptr %11[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %105 = llvm.load %104 : !llvm.ptr -> i64
    %c0_i64_39 = arith.constant 0 : i64
    %106 = arith.extui %98 : i32 to i64
    %107 = arith.addi %106, %c0_i64_39 : i64
    %108 = llvm.getelementptr %11[%107] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %105, %108 : i64, !llvm.ptr
    %109 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_40 = arith.constant 32 : i32
    %110 = arith.addi %109, %c32_i32_40 : i32
    %c8_i32_41 = arith.constant 8 : i32
    %111 = arith.addi %110, %c8_i32_41 : i32
    %112 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i32_42 = arith.constant 64 : i32
    %113 = arith.addi %112, %c64_i32_42 : i32
    %c8_i32_43 = arith.constant 8 : i32
    %114 = arith.addi %113, %c8_i32_43 : i32
    %c0_i64_44 = arith.constant 0 : i64
    %115 = arith.extui %114 : i32 to i64
    %116 = arith.addi %115, %c0_i64_44 : i64
    %117 = llvm.getelementptr %11[%116] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %118 = llvm.load %117 : !llvm.ptr -> i64
    %c0_i64_45 = arith.constant 0 : i64
    %119 = arith.extui %111 : i32 to i64
    %120 = arith.addi %119, %c0_i64_45 : i64
    %121 = llvm.getelementptr %11[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %118, %121 : i64, !llvm.ptr
    %122 = llvm.load %3 : !llvm.ptr -> i32
    %123 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i64_46 = arith.constant 64 : i64
    %124 = arith.extui %123 : i32 to i64
    %125 = arith.addi %124, %c64_i64_46 : i64
    %126 = llvm.getelementptr %11[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %127 = llvm.load %126 : !llvm.ptr -> i64
    %c32_i64 = arith.constant 32 : i64
    %128 = arith.extui %122 : i32 to i64
    %129 = arith.addi %128, %c32_i64 : i64
    %130 = llvm.getelementptr %11[%129] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %127, %130 : i64, !llvm.ptr
    %131 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_47 = arith.constant 32 : i32
    %132 = arith.addi %131, %c32_i32_47 : i32
    %133 = llvm.load %3 : !llvm.ptr -> i32
    %134 = llvm.call %14(%16, %132, %133) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> !llvm.void
    %135 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_48 = arith.constant 24 : i32
    %136 = arith.addi %135, %c24_i32_48 : i32
    %137 = llvm.load %3 : !llvm.ptr -> i32
    %c24_i32_49 = arith.constant 24 : i32
    %138 = arith.addi %137, %c24_i32_49 : i32
    %c0_i64_50 = arith.constant 0 : i64
    %139 = arith.extui %138 : i32 to i64
    %140 = arith.addi %139, %c0_i64_50 : i64
    %141 = llvm.getelementptr %11[%140] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %142 = llvm.load %141 : !llvm.ptr -> i64
    %c0_i64_51 = arith.constant 0 : i64
    %143 = arith.extui %136 : i32 to i64
    %144 = arith.addi %143, %c0_i64_51 : i64
    %145 = llvm.getelementptr %11[%144] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %142, %145 : i64, !llvm.ptr
    %146 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_52 = arith.constant 16 : i32
    %147 = arith.addi %146, %c16_i32_52 : i32
    %148 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32_53 = arith.constant 16 : i32
    %149 = arith.addi %148, %c16_i32_53 : i32
    %c0_i64_54 = arith.constant 0 : i64
    %150 = arith.extui %149 : i32 to i64
    %151 = arith.addi %150, %c0_i64_54 : i64
    %152 = llvm.getelementptr %11[%151] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %c0_i64_55 = arith.constant 0 : i64
    %154 = arith.extui %147 : i32 to i64
    %155 = arith.addi %154, %c0_i64_55 : i64
    %156 = llvm.getelementptr %11[%155] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %153, %156 : i64, !llvm.ptr
    %157 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_56 = arith.constant 8 : i32
    %158 = arith.addi %157, %c8_i32_56 : i32
    %159 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32_57 = arith.constant 8 : i32
    %160 = arith.addi %159, %c8_i32_57 : i32
    %c0_i64_58 = arith.constant 0 : i64
    %161 = arith.extui %160 : i32 to i64
    %162 = arith.addi %161, %c0_i64_58 : i64
    %163 = llvm.getelementptr %11[%162] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %164 = llvm.load %163 : !llvm.ptr -> i64
    %c0_i64_59 = arith.constant 0 : i64
    %165 = arith.extui %158 : i32 to i64
    %166 = arith.addi %165, %c0_i64_59 : i64
    %167 = llvm.getelementptr %11[%166] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %164, %167 : i64, !llvm.ptr
    %168 = llvm.load %0 : !llvm.ptr -> i32
    %169 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_60 = arith.constant 0 : i64
    %170 = arith.extui %169 : i32 to i64
    %171 = arith.addi %170, %c0_i64_60 : i64
    %172 = llvm.getelementptr %11[%171] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %173 = llvm.load %172 : !llvm.ptr -> i64
    %c0_i64_61 = arith.constant 0 : i64
    %174 = arith.extui %168 : i32 to i64
    %175 = arith.addi %174, %c0_i64_61 : i64
    %176 = llvm.getelementptr %11[%175] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %173, %176 : i64, !llvm.ptr
    %177 = llvm.load %3 : !llvm.ptr -> i32
    %c96_i32_62 = arith.constant 96 : i32
    %178 = arith.addi %177, %c96_i32_62 : i32
    llvm.store %178, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %179 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i32_63 = arith.constant 64 : i32
    %180 = arith.addi %179, %c64_i32_63 : i32
    %181 = llvm.load %2 : !llvm.ptr -> i32
    %182 = arith.addi %180, %181 : i32
    llvm.store %182, %4 : i32, !llvm.ptr
    %c0_i64_64 = arith.constant 0 : i64
    %183 = arith.extui %182 : i32 to i64
    %184 = arith.addi %183, %c0_i64_64 : i64
    %185 = llvm.getelementptr %11[%184] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %186 = llvm.load %185 : !llvm.ptr -> i8
    %187 = arith.extui %186 : i8 to i32
    llvm.store %187, %5 : i32, !llvm.ptr
    %188 = llvm.load %4 : !llvm.ptr -> i32
    %189 = llvm.load %3 : !llvm.ptr -> i32
    %c64_i32_65 = arith.constant 64 : i32
    %190 = arith.addi %189, %c64_i32_65 : i32
    %191 = llvm.load %2 : !llvm.ptr -> i32
    %c31_i32 = arith.constant 31 : i32
    %192 = arith.xori %191, %c31_i32 : i32
    %193 = arith.addi %190, %192 : i32
    llvm.store %193, %6 : i32, !llvm.ptr
    %c0_i64_66 = arith.constant 0 : i64
    %194 = arith.extui %193 : i32 to i64
    %195 = arith.addi %194, %c0_i64_66 : i64
    %196 = llvm.getelementptr %11[%195] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %197 = llvm.load %196 : !llvm.ptr -> i8
    %198 = arith.extui %197 : i8 to i32
    %c0_i64_67 = arith.constant 0 : i64
    %199 = arith.extui %188 : i32 to i64
    %200 = arith.addi %199, %c0_i64_67 : i64
    %201 = llvm.getelementptr %11[%200] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %202 = arith.trunci %198 : i32 to i8
    llvm.store %202, %201 : i8, !llvm.ptr
    %203 = llvm.load %6 : !llvm.ptr -> i32
    %204 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_68 = arith.constant 0 : i64
    %205 = arith.extui %203 : i32 to i64
    %206 = arith.addi %205, %c0_i64_68 : i64
    %207 = llvm.getelementptr %11[%206] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %208 = arith.trunci %204 : i32 to i8
    llvm.store %208, %207 : i8, !llvm.ptr
    %209 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %210 = arith.addi %209, %c1_i32 : i32
    llvm.store %210, %2 : i32, !llvm.ptr
    %c16_i32_69 = arith.constant 16 : i32
    %211 = arith.cmpi eq, %210, %c16_i32_69 : i32
    %212 = arith.extui %211 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %213 = arith.xori %212, %c-1_i32 : i32
    %c0_i32_70 = arith.constant 0 : i32
    %214 = arith.cmpi ne, %213, %c0_i32_70 : i32
    cf.cond_br %214, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f44(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[656] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %2[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %1 : !llvm.ptr -> i32
    %8 = llvm.call %4(%6, %7) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f45(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i64, %arg7: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %arg6, %5 : i64, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg7, %6 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %c1_i64_7 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_7 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %8 : i32, !llvm.ptr
    %c1_i64_8 = arith.constant 1 : i64
    %9 = llvm.alloca %c1_i64_8 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %9 : i32, !llvm.ptr
    %c1_i64_9 = arith.constant 1 : i64
    %10 = llvm.alloca %c1_i64_9 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %10 : i32, !llvm.ptr
    %11 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    %13 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.getelementptr %13[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.getelementptr %arg0[680] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.getelementptr %16[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %18 = llvm.load %17 : !llvm.ptr -> !llvm.ptr
    %19 = llvm.getelementptr %16[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %20 = llvm.load %19 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %21 = llvm.load %12 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %22 = arith.subi %21, %c64_i32 : i32
    llvm.store %22, %7 : i32, !llvm.ptr
    llvm.store %22, %12 : i32, !llvm.ptr
    %23 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %24 = arith.addi %23, %c32_i32 : i32
    %c24_i32 = arith.constant 24 : i32
    %25 = arith.addi %24, %c24_i32 : i32
    %26 = llvm.load %4 : !llvm.ptr -> i32
    %c24_i32_10 = arith.constant 24 : i32
    %27 = arith.addi %26, %c24_i32_10 : i32
    %c0_i64 = arith.constant 0 : i64
    %28 = arith.extui %27 : i32 to i64
    %29 = arith.addi %28, %c0_i64 : i64
    %30 = llvm.getelementptr %15[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %31 = llvm.load %30 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %32 = arith.extui %25 : i32 to i64
    %33 = arith.addi %32, %c0_i64_11 : i64
    %34 = llvm.getelementptr %15[%33] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %31, %34 : i64, !llvm.ptr
    %35 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32_12 = arith.constant 32 : i32
    %36 = arith.addi %35, %c32_i32_12 : i32
    %c16_i32 = arith.constant 16 : i32
    %37 = arith.addi %36, %c16_i32 : i32
    %38 = llvm.load %4 : !llvm.ptr -> i32
    %c16_i32_13 = arith.constant 16 : i32
    %39 = arith.addi %38, %c16_i32_13 : i32
    %c0_i64_14 = arith.constant 0 : i64
    %40 = arith.extui %39 : i32 to i64
    %41 = arith.addi %40, %c0_i64_14 : i64
    %42 = llvm.getelementptr %15[%41] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %43 = llvm.load %42 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %44 = arith.extui %37 : i32 to i64
    %45 = arith.addi %44, %c0_i64_15 : i64
    %46 = llvm.getelementptr %15[%45] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %43, %46 : i64, !llvm.ptr
    %47 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32_16 = arith.constant 32 : i32
    %48 = arith.addi %47, %c32_i32_16 : i32
    %c8_i32 = arith.constant 8 : i32
    %49 = arith.addi %48, %c8_i32 : i32
    %50 = llvm.load %4 : !llvm.ptr -> i32
    %c8_i32_17 = arith.constant 8 : i32
    %51 = arith.addi %50, %c8_i32_17 : i32
    %c0_i64_18 = arith.constant 0 : i64
    %52 = arith.extui %51 : i32 to i64
    %53 = arith.addi %52, %c0_i64_18 : i64
    %54 = llvm.getelementptr %15[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %55 = llvm.load %54 : !llvm.ptr -> i64
    %c0_i64_19 = arith.constant 0 : i64
    %56 = arith.extui %49 : i32 to i64
    %57 = arith.addi %56, %c0_i64_19 : i64
    %58 = llvm.getelementptr %15[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %55, %58 : i64, !llvm.ptr
    %59 = llvm.load %7 : !llvm.ptr -> i32
    %60 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_20 = arith.constant 0 : i64
    %61 = arith.extui %60 : i32 to i64
    %62 = arith.addi %61, %c0_i64_20 : i64
    %63 = llvm.getelementptr %15[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %64 = llvm.load %63 : !llvm.ptr -> i64
    %c32_i64 = arith.constant 32 : i64
    %65 = arith.extui %59 : i32 to i64
    %66 = arith.addi %65, %c32_i64 : i64
    %67 = llvm.getelementptr %15[%66] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %64, %67 : i64, !llvm.ptr
    %c0_i32_21 = arith.constant 0 : i32
    llvm.store %c0_i32_21, %4 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2(%68: i32):  // pred: ^bb3
    return %68 : i32
  ^bb3:  // pred: ^bb5
    %69 = llvm.load %7 : !llvm.ptr -> i32
    %c24_i32_22 = arith.constant 24 : i32
    %70 = arith.addi %69, %c24_i32_22 : i32
    %71 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32_23 = arith.constant 32 : i32
    %72 = arith.addi %71, %c32_i32_23 : i32
    %c24_i32_24 = arith.constant 24 : i32
    %73 = arith.addi %72, %c24_i32_24 : i32
    %c0_i64_25 = arith.constant 0 : i64
    %74 = arith.extui %73 : i32 to i64
    %75 = arith.addi %74, %c0_i64_25 : i64
    %76 = llvm.getelementptr %15[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %77 = llvm.load %76 : !llvm.ptr -> i64
    %c0_i64_26 = arith.constant 0 : i64
    %78 = arith.extui %70 : i32 to i64
    %79 = arith.addi %78, %c0_i64_26 : i64
    %80 = llvm.getelementptr %15[%79] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %77, %80 : i64, !llvm.ptr
    %81 = llvm.load %7 : !llvm.ptr -> i32
    %c16_i32_27 = arith.constant 16 : i32
    %82 = arith.addi %81, %c16_i32_27 : i32
    %83 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32_28 = arith.constant 32 : i32
    %84 = arith.addi %83, %c32_i32_28 : i32
    %c16_i32_29 = arith.constant 16 : i32
    %85 = arith.addi %84, %c16_i32_29 : i32
    %c0_i64_30 = arith.constant 0 : i64
    %86 = arith.extui %85 : i32 to i64
    %87 = arith.addi %86, %c0_i64_30 : i64
    %88 = llvm.getelementptr %15[%87] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c0_i64_31 = arith.constant 0 : i64
    %90 = arith.extui %82 : i32 to i64
    %91 = arith.addi %90, %c0_i64_31 : i64
    %92 = llvm.getelementptr %15[%91] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %89, %92 : i64, !llvm.ptr
    %93 = llvm.load %7 : !llvm.ptr -> i32
    %c8_i32_32 = arith.constant 8 : i32
    %94 = arith.addi %93, %c8_i32_32 : i32
    %95 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32_33 = arith.constant 32 : i32
    %96 = arith.addi %95, %c32_i32_33 : i32
    %c8_i32_34 = arith.constant 8 : i32
    %97 = arith.addi %96, %c8_i32_34 : i32
    %c0_i64_35 = arith.constant 0 : i64
    %98 = arith.extui %97 : i32 to i64
    %99 = arith.addi %98, %c0_i64_35 : i64
    %100 = llvm.getelementptr %15[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i64
    %c0_i64_36 = arith.constant 0 : i64
    %102 = arith.extui %94 : i32 to i64
    %103 = arith.addi %102, %c0_i64_36 : i64
    %104 = llvm.getelementptr %15[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %101, %104 : i64, !llvm.ptr
    %105 = llvm.load %7 : !llvm.ptr -> i32
    %106 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i64_37 = arith.constant 32 : i64
    %107 = arith.extui %106 : i32 to i64
    %108 = arith.addi %107, %c32_i64_37 : i64
    %109 = llvm.getelementptr %15[%108] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %110 = llvm.load %109 : !llvm.ptr -> i64
    %c0_i64_38 = arith.constant 0 : i64
    %111 = arith.extui %105 : i32 to i64
    %112 = arith.addi %111, %c0_i64_38 : i64
    %113 = llvm.getelementptr %15[%112] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %110, %113 : i64, !llvm.ptr
    %114 = llvm.load %1 : !llvm.ptr -> i32
    %115 = llvm.load %2 : !llvm.ptr -> i32
    %116 = llvm.load %3 : !llvm.ptr -> i32
    %117 = llvm.load %7 : !llvm.ptr -> i32
    %118 = llvm.load %5 : !llvm.ptr -> i64
    %119 = llvm.load %6 : !llvm.ptr -> i32
    %120 = llvm.call %18(%20, %114, %115, %116, %117, %118, %119) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32, i32, i64, i32) -> i32
    llvm.store %120, %4 : i32, !llvm.ptr
    %121 = llvm.load %7 : !llvm.ptr -> i32
    %c64_i32_39 = arith.constant 64 : i32
    %122 = arith.addi %121, %c64_i32_39 : i32
    llvm.store %122, %12 : i32, !llvm.ptr
    %123 = llvm.load %4 : !llvm.ptr -> i32
    cf.br ^bb2(%123 : i32)
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %124 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32_40 = arith.constant 32 : i32
    %125 = arith.addi %124, %c32_i32_40 : i32
    %126 = llvm.load %4 : !llvm.ptr -> i32
    %127 = arith.addi %125, %126 : i32
    llvm.store %127, %8 : i32, !llvm.ptr
    %c0_i64_41 = arith.constant 0 : i64
    %128 = arith.extui %127 : i32 to i64
    %129 = arith.addi %128, %c0_i64_41 : i64
    %130 = llvm.getelementptr %15[%129] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %131 = llvm.load %130 : !llvm.ptr -> i8
    %132 = arith.extui %131 : i8 to i32
    llvm.store %132, %9 : i32, !llvm.ptr
    %133 = llvm.load %8 : !llvm.ptr -> i32
    %134 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32_42 = arith.constant 32 : i32
    %135 = arith.addi %134, %c32_i32_42 : i32
    %136 = llvm.load %4 : !llvm.ptr -> i32
    %c31_i32 = arith.constant 31 : i32
    %137 = arith.xori %136, %c31_i32 : i32
    %138 = arith.addi %135, %137 : i32
    llvm.store %138, %10 : i32, !llvm.ptr
    %c0_i64_43 = arith.constant 0 : i64
    %139 = arith.extui %138 : i32 to i64
    %140 = arith.addi %139, %c0_i64_43 : i64
    %141 = llvm.getelementptr %15[%140] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %142 = llvm.load %141 : !llvm.ptr -> i8
    %143 = arith.extui %142 : i8 to i32
    %c0_i64_44 = arith.constant 0 : i64
    %144 = arith.extui %133 : i32 to i64
    %145 = arith.addi %144, %c0_i64_44 : i64
    %146 = llvm.getelementptr %15[%145] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %147 = arith.trunci %143 : i32 to i8
    llvm.store %147, %146 : i8, !llvm.ptr
    %148 = llvm.load %10 : !llvm.ptr -> i32
    %149 = llvm.load %9 : !llvm.ptr -> i32
    %c0_i64_45 = arith.constant 0 : i64
    %150 = arith.extui %148 : i32 to i64
    %151 = arith.addi %150, %c0_i64_45 : i64
    %152 = llvm.getelementptr %15[%151] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %153 = arith.trunci %149 : i32 to i8
    llvm.store %153, %152 : i8, !llvm.ptr
    %154 = llvm.load %4 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %155 = arith.addi %154, %c1_i32 : i32
    llvm.store %155, %4 : i32, !llvm.ptr
    %c16_i32_46 = arith.constant 16 : i32
    %156 = arith.cmpi eq, %155, %c16_i32_46 : i32
    %157 = arith.extui %156 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %158 = arith.xori %157, %c-1_i32 : i32
    %c0_i32_47 = arith.constant 0 : i32
    %159 = arith.cmpi ne, %158, %c0_i32_47 : i32
    cf.cond_br %159, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f46(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i64, %arg6: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i64, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg6, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[704] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %6[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %11 = llvm.load %1 : !llvm.ptr -> i32
    %12 = llvm.load %2 : !llvm.ptr -> i32
    %13 = llvm.load %3 : !llvm.ptr -> i32
    %14 = llvm.load %4 : !llvm.ptr -> i64
    %15 = llvm.load %5 : !llvm.ptr -> i32
    %16 = llvm.call %8(%10, %11, %12, %13, %14, %15) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32, i64, i32) -> i32
    cf.br ^bb2(%16 : i32)
  ^bb2(%17: i32):  // pred: ^bb1
    return %17 : i32
  }
  func.func @f47(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i64, %arg6: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i64, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg6, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[728] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %6[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %11 = llvm.load %1 : !llvm.ptr -> i32
    %12 = llvm.load %2 : !llvm.ptr -> i32
    %13 = llvm.load %3 : !llvm.ptr -> i32
    %14 = llvm.load %4 : !llvm.ptr -> i64
    %15 = llvm.load %5 : !llvm.ptr -> i32
    %16 = llvm.call %8(%10, %11, %12, %13, %14, %15) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32, i64, i32) -> i32
    cf.br ^bb2(%16 : i32)
  ^bb2(%17: i32):  // pred: ^bb1
    return %17 : i32
  }
  func.func @f48(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %3 : i64, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %6 : i64, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> i32
    %14 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %17 = llvm.load %15 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %18 = llvm.load %8 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %19 = arith.subi %18, %c32_i32 : i32
    llvm.store %19, %2 : i32, !llvm.ptr
    llvm.store %19, %8 : i32, !llvm.ptr
    %c0_i32_6 = arith.constant 0 : i32
    %c1050428_i64 = arith.constant 1050428 : i64
    %20 = arith.extui %c0_i32_6 : i32 to i64
    %21 = arith.addi %20, %c1050428_i64 : i64
    %22 = llvm.getelementptr %11[%21] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %23 = llvm.load %22 : !llvm.ptr -> i8
    %24 = arith.extui %23 : i8 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %25 = arith.cmpi ne, %24, %c0_i32_7 : i32
    cf.cond_br %25, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb4, ^bb12
    %26 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_8 = arith.constant 32 : i32
    %27 = arith.addi %26, %c32_i32_8 : i32
    llvm.store %27, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %28 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %29 = arith.addi %28, %c24_i32 : i32
    %c0_i32_9 = arith.constant 0 : i32
    %c1050416_i64 = arith.constant 1050416 : i64
    %30 = arith.extui %c0_i32_9 : i32 to i64
    %31 = arith.addi %30, %c1050416_i64 : i64
    %32 = llvm.getelementptr %11[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c0_i64_10 = arith.constant 0 : i64
    %34 = arith.extui %29 : i32 to i64
    %35 = arith.addi %34, %c0_i64_10 : i64
    %36 = llvm.getelementptr %11[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %33, %36 : i64, !llvm.ptr
    %37 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %38 = arith.addi %37, %c16_i32 : i32
    %c0_i32_11 = arith.constant 0 : i32
    %c1050408_i64 = arith.constant 1050408 : i64
    %39 = arith.extui %c0_i32_11 : i32 to i64
    %40 = arith.addi %39, %c1050408_i64 : i64
    %41 = llvm.getelementptr %11[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %42 = llvm.load %41 : !llvm.ptr -> i64
    %c0_i64_12 = arith.constant 0 : i64
    %43 = arith.extui %38 : i32 to i64
    %44 = arith.addi %43, %c0_i64_12 : i64
    %45 = llvm.getelementptr %11[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %42, %45 : i64, !llvm.ptr
    %46 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %47 = arith.addi %46, %c8_i32 : i32
    %c0_i32_13 = arith.constant 0 : i32
    %c1050400_i64 = arith.constant 1050400 : i64
    %48 = arith.extui %c0_i32_13 : i32 to i64
    %49 = arith.addi %48, %c1050400_i64 : i64
    %50 = llvm.getelementptr %11[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c0_i64_14 = arith.constant 0 : i64
    %52 = arith.extui %47 : i32 to i64
    %53 = arith.addi %52, %c0_i64_14 : i64
    %54 = llvm.getelementptr %11[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %51, %54 : i64, !llvm.ptr
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %c1050392_i64 = arith.constant 1050392 : i64
    %56 = arith.extui %c0_i32_15 : i32 to i64
    %57 = arith.addi %56, %c1050392_i64 : i64
    %58 = llvm.getelementptr %11[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %c0_i64_16 = arith.constant 0 : i64
    %60 = arith.extui %55 : i32 to i64
    %61 = arith.addi %60, %c0_i64_16 : i64
    %62 = llvm.getelementptr %11[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %59, %62 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %63 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_17 = arith.constant 0 : i32
    %c1050424_i64 = arith.constant 1050424 : i64
    %64 = arith.extui %c0_i32_17 : i32 to i64
    %65 = arith.addi %64, %c1050424_i64 : i64
    %66 = llvm.getelementptr %11[%65] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %67 = llvm.load %66 : !llvm.ptr -> i32
    %68 = arith.cmpi ult, %67, %17 : i32
    cf.cond_br %68, ^bb6, ^bb7
  ^bb6:  // 2 preds: ^bb5, ^bb7
    %69 = llvm.getelementptr %16[%67] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> i32
    %c0_i32_18 = arith.constant 0 : i32
    %72 = arith.cmpi eq, %71, %c0_i32_18 : i32
    cf.cond_br %72, ^bb9, ^bb8
  ^bb7:  // pred: ^bb5
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb6
  ^bb8:  // 2 preds: ^bb6, ^bb9
    %73 = llvm.getelementptr %70[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %74 = llvm.getelementptr %70[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %75 = llvm.getelementptr %70[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %76 = llvm.load %73 : !llvm.ptr -> !llvm.ptr
    %77 = llvm.load %75 : !llvm.ptr -> !llvm.ptr
    %78 = llvm.load %76 : !llvm.ptr -> i32
    %c0_i32_19 = arith.constant 0 : i32
    %79 = arith.cmpi eq, %78, %c0_i32_19 : i32
    cf.cond_br %79, ^bb11, ^bb10
  ^bb9:  // pred: ^bb6
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb8
  ^bb10:  // 2 preds: ^bb8, ^bb11
    %80 = llvm.load %74 : !llvm.ptr -> i32
    %81 = arith.cmpi ne, %13, %80 : i32
    cf.cond_br %81, ^bb13, ^bb12
  ^bb11:  // pred: ^bb8
    %c3_i32_20 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_20) : (i32) -> ()
    cf.br ^bb10
  ^bb12:  // 2 preds: ^bb10, ^bb13
    %82 = llvm.call %76(%77, %63) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %c0_i32_21 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050428_i64_22 = arith.constant 1050428 : i64
    %83 = arith.extui %c0_i32_21 : i32 to i64
    %84 = arith.addi %83, %c1050428_i64_22 : i64
    %85 = llvm.getelementptr %11[%84] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %86 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %86, %85 : i8, !llvm.ptr
    %c0_i32_23 = arith.constant 0 : i32
    %87 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_24 = arith.constant 24 : i32
    %88 = arith.addi %87, %c24_i32_24 : i32
    %c0_i64_25 = arith.constant 0 : i64
    %89 = arith.extui %88 : i32 to i64
    %90 = arith.addi %89, %c0_i64_25 : i64
    %91 = llvm.getelementptr %11[%90] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %92 = llvm.load %91 : !llvm.ptr -> i64
    llvm.store %92, %3 : i64, !llvm.ptr
    %c1050416_i64_26 = arith.constant 1050416 : i64
    %93 = arith.extui %c0_i32_23 : i32 to i64
    %94 = arith.addi %93, %c1050416_i64_26 : i64
    %95 = llvm.getelementptr %11[%94] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %92, %95 : i64, !llvm.ptr
    %c0_i32_27 = arith.constant 0 : i32
    %96 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_28 = arith.constant 16 : i32
    %97 = arith.addi %96, %c16_i32_28 : i32
    %c0_i64_29 = arith.constant 0 : i64
    %98 = arith.extui %97 : i32 to i64
    %99 = arith.addi %98, %c0_i64_29 : i64
    %100 = llvm.getelementptr %11[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i64
    llvm.store %101, %4 : i64, !llvm.ptr
    %c1050408_i64_30 = arith.constant 1050408 : i64
    %102 = arith.extui %c0_i32_27 : i32 to i64
    %103 = arith.addi %102, %c1050408_i64_30 : i64
    %104 = llvm.getelementptr %11[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %101, %104 : i64, !llvm.ptr
    %c0_i32_31 = arith.constant 0 : i32
    %105 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_32 = arith.constant 8 : i32
    %106 = arith.addi %105, %c8_i32_32 : i32
    %c0_i64_33 = arith.constant 0 : i64
    %107 = arith.extui %106 : i32 to i64
    %108 = arith.addi %107, %c0_i64_33 : i64
    %109 = llvm.getelementptr %11[%108] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %110 = llvm.load %109 : !llvm.ptr -> i64
    llvm.store %110, %5 : i64, !llvm.ptr
    %c1050400_i64_34 = arith.constant 1050400 : i64
    %111 = arith.extui %c0_i32_31 : i32 to i64
    %112 = arith.addi %111, %c1050400_i64_34 : i64
    %113 = llvm.getelementptr %11[%112] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %110, %113 : i64, !llvm.ptr
    %c0_i32_35 = arith.constant 0 : i32
    %114 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_36 = arith.constant 0 : i64
    %115 = arith.extui %114 : i32 to i64
    %116 = arith.addi %115, %c0_i64_36 : i64
    %117 = llvm.getelementptr %11[%116] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %118 = llvm.load %117 : !llvm.ptr -> i64
    llvm.store %118, %6 : i64, !llvm.ptr
    %c1050392_i64_37 = arith.constant 1050392 : i64
    %119 = arith.extui %c0_i32_35 : i32 to i64
    %120 = arith.addi %119, %c1050392_i64_37 : i64
    %121 = llvm.getelementptr %11[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %118, %121 : i64, !llvm.ptr
    %122 = llvm.load %0 : !llvm.ptr -> i32
    %123 = llvm.load %6 : !llvm.ptr -> i64
    %c0_i64_38 = arith.constant 0 : i64
    %124 = arith.extui %122 : i32 to i64
    %125 = arith.addi %124, %c0_i64_38 : i64
    %126 = llvm.getelementptr %11[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %123, %126 : i64, !llvm.ptr
    %127 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_39 = arith.constant 8 : i32
    %128 = arith.addi %127, %c8_i32_39 : i32
    %129 = llvm.load %5 : !llvm.ptr -> i64
    %c0_i64_40 = arith.constant 0 : i64
    %130 = arith.extui %128 : i32 to i64
    %131 = arith.addi %130, %c0_i64_40 : i64
    %132 = llvm.getelementptr %11[%131] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %129, %132 : i64, !llvm.ptr
    %133 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_41 = arith.constant 16 : i32
    %134 = arith.addi %133, %c16_i32_41 : i32
    %135 = llvm.load %4 : !llvm.ptr -> i64
    %c0_i64_42 = arith.constant 0 : i64
    %136 = arith.extui %134 : i32 to i64
    %137 = arith.addi %136, %c0_i64_42 : i64
    %138 = llvm.getelementptr %11[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %135, %138 : i64, !llvm.ptr
    %139 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_43 = arith.constant 24 : i32
    %140 = arith.addi %139, %c24_i32_43 : i32
    %141 = llvm.load %3 : !llvm.ptr -> i64
    %c0_i64_44 = arith.constant 0 : i64
    %142 = arith.extui %140 : i32 to i64
    %143 = arith.addi %142, %c0_i64_44 : i64
    %144 = llvm.getelementptr %11[%143] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %141, %144 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb13:  // pred: ^bb10
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb12
  }
  func.func @f49(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> i32
    %13 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.load %14 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %17 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %18 = arith.subi %17, %c32_i32 : i32
    llvm.store %18, %2 : i32, !llvm.ptr
    llvm.store %18, %7 : i32, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    %c1050456_i64 = arith.constant 1050456 : i64
    %19 = arith.extui %c0_i32_5 : i32 to i64
    %20 = arith.addi %19, %c1050456_i64 : i64
    %21 = llvm.getelementptr %10[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %22 = llvm.load %21 : !llvm.ptr -> i8
    %23 = arith.extui %22 : i8 to i32
    %c0_i32_6 = arith.constant 0 : i32
    %24 = arith.cmpi ne, %23, %c0_i32_6 : i32
    cf.cond_br %24, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb4, ^bb12
    %25 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_7 = arith.constant 32 : i32
    %26 = arith.addi %25, %c32_i32_7 : i32
    llvm.store %26, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %27 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %28 = arith.addi %27, %c16_i32 : i32
    %c0_i32_8 = arith.constant 0 : i32
    %c1050452_i64 = arith.constant 1050452 : i64
    %29 = arith.extui %c0_i32_8 : i32 to i64
    %30 = arith.addi %29, %c1050452_i64 : i64
    %31 = llvm.getelementptr %10[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %32 = llvm.load %31 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %33 = arith.extui %28 : i32 to i64
    %34 = arith.addi %33, %c0_i64_9 : i64
    %35 = llvm.getelementptr %10[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %32, %35 : i32, !llvm.ptr
    %36 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %37 = arith.addi %36, %c8_i32 : i32
    %c0_i32_10 = arith.constant 0 : i32
    %c1050444_i64 = arith.constant 1050444 : i64
    %38 = arith.extui %c0_i32_10 : i32 to i64
    %39 = arith.addi %38, %c1050444_i64 : i64
    %40 = llvm.getelementptr %10[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %42 = arith.extui %37 : i32 to i64
    %43 = arith.addi %42, %c0_i64_11 : i64
    %44 = llvm.getelementptr %10[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i64, !llvm.ptr
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_12 = arith.constant 0 : i32
    %c1050436_i64 = arith.constant 1050436 : i64
    %46 = arith.extui %c0_i32_12 : i32 to i64
    %47 = arith.addi %46, %c1050436_i64 : i64
    %48 = llvm.getelementptr %10[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %c0_i64_13 = arith.constant 0 : i64
    %50 = arith.extui %45 : i32 to i64
    %51 = arith.addi %50, %c0_i64_13 : i64
    %52 = llvm.getelementptr %10[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %49, %52 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %53 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %54 = arith.addi %53, %c12_i32 : i32
    %c0_i32_14 = arith.constant 0 : i32
    %c1050432_i64 = arith.constant 1050432 : i64
    %55 = arith.extui %c0_i32_14 : i32 to i64
    %56 = arith.addi %55, %c1050432_i64 : i64
    %57 = llvm.getelementptr %10[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i32
    %59 = arith.cmpi ult, %58, %16 : i32
    cf.cond_br %59, ^bb6, ^bb7
  ^bb6:  // 2 preds: ^bb5, ^bb7
    %60 = llvm.getelementptr %15[%58] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %61 = llvm.load %60 : !llvm.ptr -> !llvm.ptr
    %62 = llvm.load %61 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %63 = arith.cmpi eq, %62, %c0_i32_15 : i32
    cf.cond_br %63, ^bb9, ^bb8
  ^bb7:  // pred: ^bb5
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb6
  ^bb8:  // 2 preds: ^bb6, ^bb9
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.getelementptr %61[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %66 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %67 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    %68 = llvm.load %66 : !llvm.ptr -> !llvm.ptr
    %69 = llvm.load %67 : !llvm.ptr -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %70 = arith.cmpi eq, %69, %c0_i32_16 : i32
    cf.cond_br %70, ^bb11, ^bb10
  ^bb9:  // pred: ^bb6
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb8
  ^bb10:  // 2 preds: ^bb8, ^bb11
    %71 = llvm.load %65 : !llvm.ptr -> i32
    %72 = arith.cmpi ne, %12, %71 : i32
    cf.cond_br %72, ^bb13, ^bb12
  ^bb11:  // pred: ^bb8
    %c3_i32_17 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_17) : (i32) -> ()
    cf.br ^bb10
  ^bb12:  // 2 preds: ^bb10, ^bb13
    %73 = llvm.call %67(%68, %54) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %c0_i32_18 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050456_i64_19 = arith.constant 1050456 : i64
    %74 = arith.extui %c0_i32_18 : i32 to i64
    %75 = arith.addi %74, %c1050456_i64_19 : i64
    %76 = llvm.getelementptr %10[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %77 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %77, %76 : i8, !llvm.ptr
    %c0_i32_20 = arith.constant 0 : i32
    %78 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_21 = arith.constant 12 : i32
    %79 = arith.addi %78, %c12_i32_21 : i32
    %c16_i32_22 = arith.constant 16 : i32
    %80 = arith.addi %79, %c16_i32_22 : i32
    %c0_i64_23 = arith.constant 0 : i64
    %81 = arith.extui %80 : i32 to i64
    %82 = arith.addi %81, %c0_i64_23 : i64
    %83 = llvm.getelementptr %10[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %84 = llvm.load %83 : !llvm.ptr -> i32
    llvm.store %84, %3 : i32, !llvm.ptr
    %c1050452_i64_24 = arith.constant 1050452 : i64
    %85 = arith.extui %c0_i32_20 : i32 to i64
    %86 = arith.addi %85, %c1050452_i64_24 : i64
    %87 = llvm.getelementptr %10[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %84, %87 : i32, !llvm.ptr
    %c0_i32_25 = arith.constant 0 : i32
    %88 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_26 = arith.constant 12 : i32
    %89 = arith.addi %88, %c12_i32_26 : i32
    %c8_i32_27 = arith.constant 8 : i32
    %90 = arith.addi %89, %c8_i32_27 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %91 = arith.extui %90 : i32 to i64
    %92 = arith.addi %91, %c0_i64_28 : i64
    %93 = llvm.getelementptr %10[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %94 = llvm.load %93 : !llvm.ptr -> i64
    llvm.store %94, %4 : i64, !llvm.ptr
    %c1050444_i64_29 = arith.constant 1050444 : i64
    %95 = arith.extui %c0_i32_25 : i32 to i64
    %96 = arith.addi %95, %c1050444_i64_29 : i64
    %97 = llvm.getelementptr %10[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %94, %97 : i64, !llvm.ptr
    %c0_i32_30 = arith.constant 0 : i32
    %98 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %99 = arith.extui %98 : i32 to i64
    %100 = arith.addi %99, %c12_i64 : i64
    %101 = llvm.getelementptr %10[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %102 = llvm.load %101 : !llvm.ptr -> i64
    llvm.store %102, %5 : i64, !llvm.ptr
    %c1050436_i64_31 = arith.constant 1050436 : i64
    %103 = arith.extui %c0_i32_30 : i32 to i64
    %104 = arith.addi %103, %c1050436_i64_31 : i64
    %105 = llvm.getelementptr %10[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %102, %105 : i64, !llvm.ptr
    %106 = llvm.load %0 : !llvm.ptr -> i32
    %107 = llvm.load %5 : !llvm.ptr -> i64
    %c0_i64_32 = arith.constant 0 : i64
    %108 = arith.extui %106 : i32 to i64
    %109 = arith.addi %108, %c0_i64_32 : i64
    %110 = llvm.getelementptr %10[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %107, %110 : i64, !llvm.ptr
    %111 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_33 = arith.constant 8 : i32
    %112 = arith.addi %111, %c8_i32_33 : i32
    %113 = llvm.load %4 : !llvm.ptr -> i64
    %c0_i64_34 = arith.constant 0 : i64
    %114 = arith.extui %112 : i32 to i64
    %115 = arith.addi %114, %c0_i64_34 : i64
    %116 = llvm.getelementptr %10[%115] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %113, %116 : i64, !llvm.ptr
    %117 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_35 = arith.constant 16 : i32
    %118 = arith.addi %117, %c16_i32_35 : i32
    %119 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_36 = arith.constant 0 : i64
    %120 = arith.extui %118 : i32 to i64
    %121 = arith.addi %120, %c0_i64_36 : i64
    %122 = llvm.getelementptr %10[%121] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %119, %122 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb13:  // pred: ^bb10
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb12
  }
  func.func @f50(%arg0: !llvm.ptr, %arg1: i32) -> i64 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %1 : i64, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32 = arith.constant 0 : i32
    %c1050664_i64 = arith.constant 1050664 : i64
    %5 = arith.extui %c0_i32 : i32 to i64
    %6 = arith.addi %5, %c1050664_i64 : i64
    %7 = llvm.getelementptr %4[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i8
    %9 = arith.extui %8 : i8 to i32
    %c0_i32_1 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_1 : i32
    cf.cond_br %10, ^bb3, ^bb4
  ^bb2(%11: i64):  // 2 preds: ^bb3, ^bb4
    return %11 : i64
  ^bb3:  // pred: ^bb1
    %c0_i32_2 = arith.constant 0 : i32
    %c1050656_i64 = arith.constant 1050656 : i64
    %12 = arith.extui %c0_i32_2 : i32 to i64
    %13 = arith.addi %12, %c1050656_i64 : i64
    %14 = llvm.getelementptr %4[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i64
    cf.br ^bb2(%15 : i64)
  ^bb4:  // pred: ^bb1
    %16 = call @f15(%arg0) : (!llvm.ptr) -> i64
    llvm.store %16, %1 : i64, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050664_i64_4 = arith.constant 1050664 : i64
    %17 = arith.extui %c0_i32_3 : i32 to i64
    %18 = arith.addi %17, %c1050664_i64_4 : i64
    %19 = llvm.getelementptr %4[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %20 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %20, %19 : i8, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    %21 = llvm.load %1 : !llvm.ptr -> i64
    %c1050656_i64_6 = arith.constant 1050656 : i64
    %22 = arith.extui %c0_i32_5 : i32 to i64
    %23 = arith.addi %22, %c1050656_i64_6 : i64
    %24 = llvm.getelementptr %4[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %21, %24 : i64, !llvm.ptr
    %25 = llvm.load %1 : !llvm.ptr -> i64
    cf.br ^bb2(%25 : i64)
  }
  func.func @f51(%arg0: !llvm.ptr, %arg1: i32) -> i64 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %1 : i64, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32 = arith.constant 0 : i32
    %c1050680_i64 = arith.constant 1050680 : i64
    %5 = arith.extui %c0_i32 : i32 to i64
    %6 = arith.addi %5, %c1050680_i64 : i64
    %7 = llvm.getelementptr %4[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i8
    %9 = arith.extui %8 : i8 to i32
    %c0_i32_1 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_1 : i32
    cf.cond_br %10, ^bb3, ^bb4
  ^bb2(%11: i64):  // 2 preds: ^bb3, ^bb4
    return %11 : i64
  ^bb3:  // pred: ^bb1
    %c0_i32_2 = arith.constant 0 : i32
    %c1050672_i64 = arith.constant 1050672 : i64
    %12 = arith.extui %c0_i32_2 : i32 to i64
    %13 = arith.addi %12, %c1050672_i64 : i64
    %14 = llvm.getelementptr %4[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i64
    cf.br ^bb2(%15 : i64)
  ^bb4:  // pred: ^bb1
    %16 = call @f25(%arg0) : (!llvm.ptr) -> i64
    llvm.store %16, %1 : i64, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050680_i64_4 = arith.constant 1050680 : i64
    %17 = arith.extui %c0_i32_3 : i32 to i64
    %18 = arith.addi %17, %c1050680_i64_4 : i64
    %19 = llvm.getelementptr %4[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %20 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %20, %19 : i8, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    %21 = llvm.load %1 : !llvm.ptr -> i64
    %c1050672_i64_6 = arith.constant 1050672 : i64
    %22 = arith.extui %c0_i32_5 : i32 to i64
    %23 = arith.addi %22, %c1050672_i64_6 : i64
    %24 = llvm.getelementptr %4[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %21, %24 : i64, !llvm.ptr
    %25 = llvm.load %1 : !llvm.ptr -> i64
    cf.br ^bb2(%25 : i64)
  }
  func.func @f52(%arg0: !llvm.ptr, %arg1: i32) -> i64 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %1 : i64, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32 = arith.constant 0 : i32
    %c1050696_i64 = arith.constant 1050696 : i64
    %5 = arith.extui %c0_i32 : i32 to i64
    %6 = arith.addi %5, %c1050696_i64 : i64
    %7 = llvm.getelementptr %4[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i8
    %9 = arith.extui %8 : i8 to i32
    %c0_i32_1 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_1 : i32
    cf.cond_br %10, ^bb3, ^bb4
  ^bb2(%11: i64):  // 2 preds: ^bb3, ^bb4
    return %11 : i64
  ^bb3:  // pred: ^bb1
    %c0_i32_2 = arith.constant 0 : i32
    %c1050688_i64 = arith.constant 1050688 : i64
    %12 = arith.extui %c0_i32_2 : i32 to i64
    %13 = arith.addi %12, %c1050688_i64 : i64
    %14 = llvm.getelementptr %4[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i64
    cf.br ^bb2(%15 : i64)
  ^bb4:  // pred: ^bb1
    %16 = call @f27(%arg0) : (!llvm.ptr) -> i64
    llvm.store %16, %1 : i64, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050696_i64_4 = arith.constant 1050696 : i64
    %17 = arith.extui %c0_i32_3 : i32 to i64
    %18 = arith.addi %17, %c1050696_i64_4 : i64
    %19 = llvm.getelementptr %4[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %20 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %20, %19 : i8, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    %21 = llvm.load %1 : !llvm.ptr -> i64
    %c1050688_i64_6 = arith.constant 1050688 : i64
    %22 = arith.extui %c0_i32_5 : i32 to i64
    %23 = arith.addi %22, %c1050688_i64_6 : i64
    %24 = llvm.getelementptr %4[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %21, %24 : i64, !llvm.ptr
    %25 = llvm.load %1 : !llvm.ptr -> i64
    cf.br ^bb2(%25 : i64)
  }
  func.func @f53(%arg0: !llvm.ptr, %arg1: i32) -> i64 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %1 : i64, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32 = arith.constant 0 : i32
    %c1050648_i64 = arith.constant 1050648 : i64
    %5 = arith.extui %c0_i32 : i32 to i64
    %6 = arith.addi %5, %c1050648_i64 : i64
    %7 = llvm.getelementptr %4[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i8
    %9 = arith.extui %8 : i8 to i32
    %c0_i32_1 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_1 : i32
    cf.cond_br %10, ^bb3, ^bb4
  ^bb2(%11: i64):  // 2 preds: ^bb3, ^bb4
    return %11 : i64
  ^bb3:  // pred: ^bb1
    %c0_i32_2 = arith.constant 0 : i32
    %c1050640_i64 = arith.constant 1050640 : i64
    %12 = arith.extui %c0_i32_2 : i32 to i64
    %13 = arith.addi %12, %c1050640_i64 : i64
    %14 = llvm.getelementptr %4[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i64
    cf.br ^bb2(%15 : i64)
  ^bb4:  // pred: ^bb1
    %16 = call @f28(%arg0) : (!llvm.ptr) -> i64
    llvm.store %16, %1 : i64, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050648_i64_4 = arith.constant 1050648 : i64
    %17 = arith.extui %c0_i32_3 : i32 to i64
    %18 = arith.addi %17, %c1050648_i64_4 : i64
    %19 = llvm.getelementptr %4[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %20 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %20, %19 : i8, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    %21 = llvm.load %1 : !llvm.ptr -> i64
    %c1050640_i64_6 = arith.constant 1050640 : i64
    %22 = arith.extui %c0_i32_5 : i32 to i64
    %23 = arith.addi %22, %c1050640_i64_6 : i64
    %24 = llvm.getelementptr %4[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %21, %24 : i64, !llvm.ptr
    %25 = llvm.load %1 : !llvm.ptr -> i64
    cf.br ^bb2(%25 : i64)
  }
  func.func @f54(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %3 = llvm.load %0 : !llvm.ptr -> i32
    %4 = llvm.load %2 : !llvm.ptr -> i32
    call @f33(%arg0, %3, %4) : (!llvm.ptr, i32, i32) -> ()
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f55(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> i32
    %13 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.load %14 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %17 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %18 = arith.subi %17, %c32_i32 : i32
    llvm.store %18, %2 : i32, !llvm.ptr
    llvm.store %18, %7 : i32, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    %c1050484_i64 = arith.constant 1050484 : i64
    %19 = arith.extui %c0_i32_5 : i32 to i64
    %20 = arith.addi %19, %c1050484_i64 : i64
    %21 = llvm.getelementptr %10[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %22 = llvm.load %21 : !llvm.ptr -> i8
    %23 = arith.extui %22 : i8 to i32
    %c0_i32_6 = arith.constant 0 : i32
    %24 = arith.cmpi ne, %23, %c0_i32_6 : i32
    cf.cond_br %24, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb4, ^bb12
    %25 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_7 = arith.constant 32 : i32
    %26 = arith.addi %25, %c32_i32_7 : i32
    llvm.store %26, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %27 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %28 = arith.addi %27, %c16_i32 : i32
    %c0_i32_8 = arith.constant 0 : i32
    %c1050480_i64 = arith.constant 1050480 : i64
    %29 = arith.extui %c0_i32_8 : i32 to i64
    %30 = arith.addi %29, %c1050480_i64 : i64
    %31 = llvm.getelementptr %10[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %32 = llvm.load %31 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %33 = arith.extui %28 : i32 to i64
    %34 = arith.addi %33, %c0_i64_9 : i64
    %35 = llvm.getelementptr %10[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %32, %35 : i32, !llvm.ptr
    %36 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %37 = arith.addi %36, %c8_i32 : i32
    %c0_i32_10 = arith.constant 0 : i32
    %c1050472_i64 = arith.constant 1050472 : i64
    %38 = arith.extui %c0_i32_10 : i32 to i64
    %39 = arith.addi %38, %c1050472_i64 : i64
    %40 = llvm.getelementptr %10[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %42 = arith.extui %37 : i32 to i64
    %43 = arith.addi %42, %c0_i64_11 : i64
    %44 = llvm.getelementptr %10[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i64, !llvm.ptr
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_12 = arith.constant 0 : i32
    %c1050464_i64 = arith.constant 1050464 : i64
    %46 = arith.extui %c0_i32_12 : i32 to i64
    %47 = arith.addi %46, %c1050464_i64 : i64
    %48 = llvm.getelementptr %10[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %c0_i64_13 = arith.constant 0 : i64
    %50 = arith.extui %45 : i32 to i64
    %51 = arith.addi %50, %c0_i64_13 : i64
    %52 = llvm.getelementptr %10[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %49, %52 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %53 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %54 = arith.addi %53, %c12_i32 : i32
    %c0_i32_14 = arith.constant 0 : i32
    %c1050460_i64 = arith.constant 1050460 : i64
    %55 = arith.extui %c0_i32_14 : i32 to i64
    %56 = arith.addi %55, %c1050460_i64 : i64
    %57 = llvm.getelementptr %10[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i32
    %59 = arith.cmpi ult, %58, %16 : i32
    cf.cond_br %59, ^bb6, ^bb7
  ^bb6:  // 2 preds: ^bb5, ^bb7
    %60 = llvm.getelementptr %15[%58] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %61 = llvm.load %60 : !llvm.ptr -> !llvm.ptr
    %62 = llvm.load %61 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %63 = arith.cmpi eq, %62, %c0_i32_15 : i32
    cf.cond_br %63, ^bb9, ^bb8
  ^bb7:  // pred: ^bb5
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb6
  ^bb8:  // 2 preds: ^bb6, ^bb9
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.getelementptr %61[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %66 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %67 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    %68 = llvm.load %66 : !llvm.ptr -> !llvm.ptr
    %69 = llvm.load %67 : !llvm.ptr -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %70 = arith.cmpi eq, %69, %c0_i32_16 : i32
    cf.cond_br %70, ^bb11, ^bb10
  ^bb9:  // pred: ^bb6
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb8
  ^bb10:  // 2 preds: ^bb8, ^bb11
    %71 = llvm.load %65 : !llvm.ptr -> i32
    %72 = arith.cmpi ne, %12, %71 : i32
    cf.cond_br %72, ^bb13, ^bb12
  ^bb11:  // pred: ^bb8
    %c3_i32_17 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_17) : (i32) -> ()
    cf.br ^bb10
  ^bb12:  // 2 preds: ^bb10, ^bb13
    %73 = llvm.call %67(%68, %54) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %c0_i32_18 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050484_i64_19 = arith.constant 1050484 : i64
    %74 = arith.extui %c0_i32_18 : i32 to i64
    %75 = arith.addi %74, %c1050484_i64_19 : i64
    %76 = llvm.getelementptr %10[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %77 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %77, %76 : i8, !llvm.ptr
    %c0_i32_20 = arith.constant 0 : i32
    %78 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_21 = arith.constant 12 : i32
    %79 = arith.addi %78, %c12_i32_21 : i32
    %c16_i32_22 = arith.constant 16 : i32
    %80 = arith.addi %79, %c16_i32_22 : i32
    %c0_i64_23 = arith.constant 0 : i64
    %81 = arith.extui %80 : i32 to i64
    %82 = arith.addi %81, %c0_i64_23 : i64
    %83 = llvm.getelementptr %10[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %84 = llvm.load %83 : !llvm.ptr -> i32
    llvm.store %84, %3 : i32, !llvm.ptr
    %c1050480_i64_24 = arith.constant 1050480 : i64
    %85 = arith.extui %c0_i32_20 : i32 to i64
    %86 = arith.addi %85, %c1050480_i64_24 : i64
    %87 = llvm.getelementptr %10[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %84, %87 : i32, !llvm.ptr
    %c0_i32_25 = arith.constant 0 : i32
    %88 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_26 = arith.constant 12 : i32
    %89 = arith.addi %88, %c12_i32_26 : i32
    %c8_i32_27 = arith.constant 8 : i32
    %90 = arith.addi %89, %c8_i32_27 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %91 = arith.extui %90 : i32 to i64
    %92 = arith.addi %91, %c0_i64_28 : i64
    %93 = llvm.getelementptr %10[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %94 = llvm.load %93 : !llvm.ptr -> i64
    llvm.store %94, %4 : i64, !llvm.ptr
    %c1050472_i64_29 = arith.constant 1050472 : i64
    %95 = arith.extui %c0_i32_25 : i32 to i64
    %96 = arith.addi %95, %c1050472_i64_29 : i64
    %97 = llvm.getelementptr %10[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %94, %97 : i64, !llvm.ptr
    %c0_i32_30 = arith.constant 0 : i32
    %98 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %99 = arith.extui %98 : i32 to i64
    %100 = arith.addi %99, %c12_i64 : i64
    %101 = llvm.getelementptr %10[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %102 = llvm.load %101 : !llvm.ptr -> i64
    llvm.store %102, %5 : i64, !llvm.ptr
    %c1050464_i64_31 = arith.constant 1050464 : i64
    %103 = arith.extui %c0_i32_30 : i32 to i64
    %104 = arith.addi %103, %c1050464_i64_31 : i64
    %105 = llvm.getelementptr %10[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %102, %105 : i64, !llvm.ptr
    %106 = llvm.load %0 : !llvm.ptr -> i32
    %107 = llvm.load %5 : !llvm.ptr -> i64
    %c0_i64_32 = arith.constant 0 : i64
    %108 = arith.extui %106 : i32 to i64
    %109 = arith.addi %108, %c0_i64_32 : i64
    %110 = llvm.getelementptr %10[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %107, %110 : i64, !llvm.ptr
    %111 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_33 = arith.constant 8 : i32
    %112 = arith.addi %111, %c8_i32_33 : i32
    %113 = llvm.load %4 : !llvm.ptr -> i64
    %c0_i64_34 = arith.constant 0 : i64
    %114 = arith.extui %112 : i32 to i64
    %115 = arith.addi %114, %c0_i64_34 : i64
    %116 = llvm.getelementptr %10[%115] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %113, %116 : i64, !llvm.ptr
    %117 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_35 = arith.constant 16 : i32
    %118 = arith.addi %117, %c16_i32_35 : i32
    %119 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_36 = arith.constant 0 : i64
    %120 = arith.extui %118 : i32 to i64
    %121 = arith.addi %120, %c0_i64_36 : i64
    %122 = llvm.getelementptr %10[%121] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %119, %122 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb13:  // pred: ^bb10
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb12
  }
  func.func @f56(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %3 = llvm.load %0 : !llvm.ptr -> i32
    %4 = llvm.load %2 : !llvm.ptr -> i32
    call @f57(%arg0, %3, %4) : (!llvm.ptr, i32, i32) -> ()
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f57(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[752] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.getelementptr %8[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    %13 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.getelementptr %13[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.getelementptr %arg0[872] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.getelementptr %16[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %18 = llvm.load %17 : !llvm.ptr -> !llvm.ptr
    %19 = llvm.getelementptr %16[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %20 = llvm.load %19 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %21 = llvm.load %7 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %22 = arith.subi %21, %c16_i32 : i32
    llvm.store %22, %2 : i32, !llvm.ptr
    llvm.store %22, %7 : i32, !llvm.ptr
    %23 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %24 = arith.addi %23, %c4_i32 : i32
    %25 = llvm.load %1 : !llvm.ptr -> i32
    %26 = llvm.call %10(%12, %25) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> i32
    llvm.store %26, %3 : i32, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    call @f95(%arg0, %24, %26, %c0_i32_5) : (!llvm.ptr, i32, i32, i32) -> ()
    %27 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %28 = arith.extui %27 : i32 to i64
    %29 = arith.addi %28, %c8_i64 : i64
    %30 = llvm.getelementptr %15[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %31 = llvm.load %30 : !llvm.ptr -> i32
    llvm.store %31, %4 : i32, !llvm.ptr
    %32 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %33 = arith.extui %32 : i32 to i64
    %34 = arith.addi %33, %c4_i64 : i64
    %35 = llvm.getelementptr %15[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %36 = llvm.load %35 : !llvm.ptr -> i32
    %c0_i32_6 = arith.constant 0 : i32
    %37 = arith.cmpi eq, %36, %c0_i32_6 : i32
    %38 = arith.extui %37 : i1 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %39 = arith.cmpi ne, %38, %c0_i32_7 : i32
    cf.cond_br %39, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb1
    %40 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_8 = arith.constant 0 : i32
    %41 = llvm.load %3 : !llvm.ptr -> i32
    %42 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %43 = arith.extui %42 : i32 to i64
    %44 = arith.addi %43, %c12_i64 : i64
    %45 = llvm.getelementptr %15[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %46 = llvm.load %45 : !llvm.ptr -> i32
    llvm.store %46, %5 : i32, !llvm.ptr
    %47 = llvm.call %18(%20, %40, %c0_i32_8, %41, %46) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32, i32) -> i32
    %48 = llvm.load %0 : !llvm.ptr -> i32
    %49 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i64_9 = arith.constant 8 : i64
    %50 = arith.extui %48 : i32 to i64
    %51 = arith.addi %50, %c8_i64_9 : i64
    %52 = llvm.getelementptr %15[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %49, %52 : i32, !llvm.ptr
    %53 = llvm.load %0 : !llvm.ptr -> i32
    %54 = llvm.load %5 : !llvm.ptr -> i32
    %c4_i64_10 = arith.constant 4 : i64
    %55 = arith.extui %53 : i32 to i64
    %56 = arith.addi %55, %c4_i64_10 : i64
    %57 = llvm.getelementptr %15[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %54, %57 : i32, !llvm.ptr
    %58 = llvm.load %0 : !llvm.ptr -> i32
    %59 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %60 = arith.extui %58 : i32 to i64
    %61 = arith.addi %60, %c0_i64 : i64
    %62 = llvm.getelementptr %15[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %59, %62 : i32, !llvm.ptr
    %63 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_11 = arith.constant 16 : i32
    %64 = arith.addi %63, %c16_i32_11 : i32
    llvm.store %64, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %65 = llvm.load %4 : !llvm.ptr -> i32
    %66 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i64_12 = arith.constant 12 : i64
    %67 = arith.extui %66 : i32 to i64
    %68 = arith.addi %67, %c12_i64_12 : i64
    %69 = llvm.getelementptr %15[%68] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %70 = llvm.load %69 : !llvm.ptr -> i32
    call @f126(%arg0, %65, %70) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  }
  func.func @f58(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[752] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %2[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %1 : !llvm.ptr -> i32
    %8 = llvm.call %4(%6, %7) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> i32
    cf.br ^bb2(%8 : i32)
  ^bb2(%9: i32):  // pred: ^bb1
    return %9 : i32
  }
  func.func @f59(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[776] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.getelementptr %12[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %15 = llvm.getelementptr %12[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %17 = llvm.load %8 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %18 = arith.subi %17, %c32_i32 : i32
    llvm.store %18, %3 : i32, !llvm.ptr
    llvm.store %18, %8 : i32, !llvm.ptr
    %19 = llvm.load %3 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %20 = arith.addi %19, %c24_i32 : i32
    llvm.store %20, %4 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c0_i64_6 = arith.constant 0 : i64
    %21 = arith.extui %20 : i32 to i64
    %22 = arith.addi %21, %c0_i64_6 : i64
    %23 = llvm.getelementptr %11[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64, %23 : i64, !llvm.ptr
    %24 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %25 = arith.addi %24, %c16_i32 : i32
    llvm.store %25, %5 : i32, !llvm.ptr
    %c0_i64_7 = arith.constant 0 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %26 = arith.extui %25 : i32 to i64
    %27 = arith.addi %26, %c0_i64_8 : i64
    %28 = llvm.getelementptr %11[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_7, %28 : i64, !llvm.ptr
    %29 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %30 = arith.addi %29, %c8_i32 : i32
    llvm.store %30, %6 : i32, !llvm.ptr
    %c0_i64_9 = arith.constant 0 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c0_i64_10 : i64
    %33 = llvm.getelementptr %11[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_9, %33 : i64, !llvm.ptr
    %34 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_11 = arith.constant 0 : i64
    %c0_i64_12 = arith.constant 0 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c0_i64_12 : i64
    %37 = llvm.getelementptr %11[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_11, %37 : i64, !llvm.ptr
    %38 = llvm.load %2 : !llvm.ptr -> i32
    %39 = llvm.load %3 : !llvm.ptr -> i32
    %40 = llvm.call %14(%16, %38, %39) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> !llvm.void
    %41 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_13 = arith.constant 24 : i32
    %42 = arith.addi %41, %c24_i32_13 : i32
    %43 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_14 = arith.constant 0 : i64
    %44 = arith.extui %43 : i32 to i64
    %45 = arith.addi %44, %c0_i64_14 : i64
    %46 = llvm.getelementptr %11[%45] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %48 = arith.extui %42 : i32 to i64
    %49 = arith.addi %48, %c0_i64_15 : i64
    %50 = llvm.getelementptr %11[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %47, %50 : i64, !llvm.ptr
    %51 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_16 = arith.constant 16 : i32
    %52 = arith.addi %51, %c16_i32_16 : i32
    %53 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64_17 = arith.constant 0 : i64
    %54 = arith.extui %53 : i32 to i64
    %55 = arith.addi %54, %c0_i64_17 : i64
    %56 = llvm.getelementptr %11[%55] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %57 = llvm.load %56 : !llvm.ptr -> i64
    %c0_i64_18 = arith.constant 0 : i64
    %58 = arith.extui %52 : i32 to i64
    %59 = arith.addi %58, %c0_i64_18 : i64
    %60 = llvm.getelementptr %11[%59] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %57, %60 : i64, !llvm.ptr
    %61 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_19 = arith.constant 8 : i32
    %62 = arith.addi %61, %c8_i32_19 : i32
    %63 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i64_20 = arith.constant 0 : i64
    %64 = arith.extui %63 : i32 to i64
    %65 = arith.addi %64, %c0_i64_20 : i64
    %66 = llvm.getelementptr %11[%65] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %67 = llvm.load %66 : !llvm.ptr -> i64
    %c0_i64_21 = arith.constant 0 : i64
    %68 = arith.extui %62 : i32 to i64
    %69 = arith.addi %68, %c0_i64_21 : i64
    %70 = llvm.getelementptr %11[%69] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %67, %70 : i64, !llvm.ptr
    %71 = llvm.load %0 : !llvm.ptr -> i32
    %72 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_22 = arith.constant 0 : i64
    %73 = arith.extui %72 : i32 to i64
    %74 = arith.addi %73, %c0_i64_22 : i64
    %75 = llvm.getelementptr %11[%74] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %76 = llvm.load %75 : !llvm.ptr -> i64
    %c0_i64_23 = arith.constant 0 : i64
    %77 = arith.extui %71 : i32 to i64
    %78 = arith.addi %77, %c0_i64_23 : i64
    %79 = llvm.getelementptr %11[%78] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %76, %79 : i64, !llvm.ptr
    %80 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_24 = arith.constant 32 : i32
    %81 = arith.addi %80, %c32_i32_24 : i32
    llvm.store %81, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f60(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[560] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %2[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %1 : !llvm.ptr -> i32
    %c65535_i32 = arith.constant 65535 : i32
    %8 = arith.andi %7, %c65535_i32 : i32
    %9 = llvm.call %4(%6, %8) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f61(%arg0: !llvm.ptr, %arg1: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32_1 = arith.constant 0 : i32
    %c1050712_i64 = arith.constant 1050712 : i64
    %5 = arith.extui %c0_i32_1 : i32 to i64
    %6 = arith.addi %5, %c1050712_i64 : i64
    %7 = llvm.getelementptr %4[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i8
    %9 = arith.extui %8 : i8 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_2 : i32
    cf.cond_br %10, ^bb3, ^bb4
  ^bb2(%11: i32):  // 2 preds: ^bb3, ^bb4
    return %11 : i32
  ^bb3:  // pred: ^bb1
    %c0_i32_3 = arith.constant 0 : i32
    %c1050708_i64 = arith.constant 1050708 : i64
    %12 = arith.extui %c0_i32_3 : i32 to i64
    %13 = arith.addi %12, %c1050708_i64 : i64
    %14 = llvm.getelementptr %4[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i8
    %16 = arith.extui %15 : i8 to i32
    %c1_i32 = arith.constant 1 : i32
    %17 = arith.andi %16, %c1_i32 : i32
    cf.br ^bb2(%17 : i32)
  ^bb4:  // pred: ^bb1
    %18 = call @f19(%arg0) : (!llvm.ptr) -> i32
    llvm.store %18, %1 : i32, !llvm.ptr
    %c0_i32_4 = arith.constant 0 : i32
    %c1_i32_5 = arith.constant 1 : i32
    %c1050712_i64_6 = arith.constant 1050712 : i64
    %19 = arith.extui %c0_i32_4 : i32 to i64
    %20 = arith.addi %19, %c1050712_i64_6 : i64
    %21 = llvm.getelementptr %4[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %22 = arith.trunci %c1_i32_5 : i32 to i8
    llvm.store %22, %21 : i8, !llvm.ptr
    %c0_i32_7 = arith.constant 0 : i32
    %23 = llvm.load %1 : !llvm.ptr -> i32
    %c1050708_i64_8 = arith.constant 1050708 : i64
    %24 = arith.extui %c0_i32_7 : i32 to i64
    %25 = arith.addi %24, %c1050708_i64_8 : i64
    %26 = llvm.getelementptr %4[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %27 = arith.trunci %23 : i32 to i8
    llvm.store %27, %26 : i8, !llvm.ptr
    %28 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb2(%28 : i32)
  }
  func.func @f62(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> i32
    %13 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.load %14 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %17 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %18 = arith.subi %17, %c32_i32 : i32
    llvm.store %18, %2 : i32, !llvm.ptr
    llvm.store %18, %7 : i32, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    %c1050512_i64 = arith.constant 1050512 : i64
    %19 = arith.extui %c0_i32_5 : i32 to i64
    %20 = arith.addi %19, %c1050512_i64 : i64
    %21 = llvm.getelementptr %10[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %22 = llvm.load %21 : !llvm.ptr -> i8
    %23 = arith.extui %22 : i8 to i32
    %c0_i32_6 = arith.constant 0 : i32
    %24 = arith.cmpi ne, %23, %c0_i32_6 : i32
    cf.cond_br %24, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb4, ^bb12
    %25 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_7 = arith.constant 32 : i32
    %26 = arith.addi %25, %c32_i32_7 : i32
    llvm.store %26, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %27 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %28 = arith.addi %27, %c16_i32 : i32
    %c0_i32_8 = arith.constant 0 : i32
    %c1050508_i64 = arith.constant 1050508 : i64
    %29 = arith.extui %c0_i32_8 : i32 to i64
    %30 = arith.addi %29, %c1050508_i64 : i64
    %31 = llvm.getelementptr %10[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %32 = llvm.load %31 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %33 = arith.extui %28 : i32 to i64
    %34 = arith.addi %33, %c0_i64_9 : i64
    %35 = llvm.getelementptr %10[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %32, %35 : i32, !llvm.ptr
    %36 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %37 = arith.addi %36, %c8_i32 : i32
    %c0_i32_10 = arith.constant 0 : i32
    %c1050500_i64 = arith.constant 1050500 : i64
    %38 = arith.extui %c0_i32_10 : i32 to i64
    %39 = arith.addi %38, %c1050500_i64 : i64
    %40 = llvm.getelementptr %10[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %42 = arith.extui %37 : i32 to i64
    %43 = arith.addi %42, %c0_i64_11 : i64
    %44 = llvm.getelementptr %10[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i64, !llvm.ptr
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_12 = arith.constant 0 : i32
    %c1050492_i64 = arith.constant 1050492 : i64
    %46 = arith.extui %c0_i32_12 : i32 to i64
    %47 = arith.addi %46, %c1050492_i64 : i64
    %48 = llvm.getelementptr %10[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %c0_i64_13 = arith.constant 0 : i64
    %50 = arith.extui %45 : i32 to i64
    %51 = arith.addi %50, %c0_i64_13 : i64
    %52 = llvm.getelementptr %10[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %49, %52 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %53 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %54 = arith.addi %53, %c12_i32 : i32
    %c0_i32_14 = arith.constant 0 : i32
    %c1050488_i64 = arith.constant 1050488 : i64
    %55 = arith.extui %c0_i32_14 : i32 to i64
    %56 = arith.addi %55, %c1050488_i64 : i64
    %57 = llvm.getelementptr %10[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i32
    %59 = arith.cmpi ult, %58, %16 : i32
    cf.cond_br %59, ^bb6, ^bb7
  ^bb6:  // 2 preds: ^bb5, ^bb7
    %60 = llvm.getelementptr %15[%58] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %61 = llvm.load %60 : !llvm.ptr -> !llvm.ptr
    %62 = llvm.load %61 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %63 = arith.cmpi eq, %62, %c0_i32_15 : i32
    cf.cond_br %63, ^bb9, ^bb8
  ^bb7:  // pred: ^bb5
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb6
  ^bb8:  // 2 preds: ^bb6, ^bb9
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.getelementptr %61[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %66 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %67 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    %68 = llvm.load %66 : !llvm.ptr -> !llvm.ptr
    %69 = llvm.load %67 : !llvm.ptr -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %70 = arith.cmpi eq, %69, %c0_i32_16 : i32
    cf.cond_br %70, ^bb11, ^bb10
  ^bb9:  // pred: ^bb6
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb8
  ^bb10:  // 2 preds: ^bb8, ^bb11
    %71 = llvm.load %65 : !llvm.ptr -> i32
    %72 = arith.cmpi ne, %12, %71 : i32
    cf.cond_br %72, ^bb13, ^bb12
  ^bb11:  // pred: ^bb8
    %c3_i32_17 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_17) : (i32) -> ()
    cf.br ^bb10
  ^bb12:  // 2 preds: ^bb10, ^bb13
    %73 = llvm.call %67(%68, %54) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %c0_i32_18 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050512_i64_19 = arith.constant 1050512 : i64
    %74 = arith.extui %c0_i32_18 : i32 to i64
    %75 = arith.addi %74, %c1050512_i64_19 : i64
    %76 = llvm.getelementptr %10[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %77 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %77, %76 : i8, !llvm.ptr
    %c0_i32_20 = arith.constant 0 : i32
    %78 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_21 = arith.constant 12 : i32
    %79 = arith.addi %78, %c12_i32_21 : i32
    %c16_i32_22 = arith.constant 16 : i32
    %80 = arith.addi %79, %c16_i32_22 : i32
    %c0_i64_23 = arith.constant 0 : i64
    %81 = arith.extui %80 : i32 to i64
    %82 = arith.addi %81, %c0_i64_23 : i64
    %83 = llvm.getelementptr %10[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %84 = llvm.load %83 : !llvm.ptr -> i32
    llvm.store %84, %3 : i32, !llvm.ptr
    %c1050508_i64_24 = arith.constant 1050508 : i64
    %85 = arith.extui %c0_i32_20 : i32 to i64
    %86 = arith.addi %85, %c1050508_i64_24 : i64
    %87 = llvm.getelementptr %10[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %84, %87 : i32, !llvm.ptr
    %c0_i32_25 = arith.constant 0 : i32
    %88 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_26 = arith.constant 12 : i32
    %89 = arith.addi %88, %c12_i32_26 : i32
    %c8_i32_27 = arith.constant 8 : i32
    %90 = arith.addi %89, %c8_i32_27 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %91 = arith.extui %90 : i32 to i64
    %92 = arith.addi %91, %c0_i64_28 : i64
    %93 = llvm.getelementptr %10[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %94 = llvm.load %93 : !llvm.ptr -> i64
    llvm.store %94, %4 : i64, !llvm.ptr
    %c1050500_i64_29 = arith.constant 1050500 : i64
    %95 = arith.extui %c0_i32_25 : i32 to i64
    %96 = arith.addi %95, %c1050500_i64_29 : i64
    %97 = llvm.getelementptr %10[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %94, %97 : i64, !llvm.ptr
    %c0_i32_30 = arith.constant 0 : i32
    %98 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %99 = arith.extui %98 : i32 to i64
    %100 = arith.addi %99, %c12_i64 : i64
    %101 = llvm.getelementptr %10[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %102 = llvm.load %101 : !llvm.ptr -> i64
    llvm.store %102, %5 : i64, !llvm.ptr
    %c1050492_i64_31 = arith.constant 1050492 : i64
    %103 = arith.extui %c0_i32_30 : i32 to i64
    %104 = arith.addi %103, %c1050492_i64_31 : i64
    %105 = llvm.getelementptr %10[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %102, %105 : i64, !llvm.ptr
    %106 = llvm.load %0 : !llvm.ptr -> i32
    %107 = llvm.load %5 : !llvm.ptr -> i64
    %c0_i64_32 = arith.constant 0 : i64
    %108 = arith.extui %106 : i32 to i64
    %109 = arith.addi %108, %c0_i64_32 : i64
    %110 = llvm.getelementptr %10[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %107, %110 : i64, !llvm.ptr
    %111 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_33 = arith.constant 8 : i32
    %112 = arith.addi %111, %c8_i32_33 : i32
    %113 = llvm.load %4 : !llvm.ptr -> i64
    %c0_i64_34 = arith.constant 0 : i64
    %114 = arith.extui %112 : i32 to i64
    %115 = arith.addi %114, %c0_i64_34 : i64
    %116 = llvm.getelementptr %10[%115] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %113, %116 : i64, !llvm.ptr
    %117 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_35 = arith.constant 16 : i32
    %118 = arith.addi %117, %c16_i32_35 : i32
    %119 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_36 = arith.constant 0 : i64
    %120 = arith.extui %118 : i32 to i64
    %121 = arith.addi %120, %c0_i64_36 : i64
    %122 = llvm.getelementptr %10[%121] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %119, %122 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb13:  // pred: ^bb10
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb12
  }
  func.func @f63(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %3 : i64, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %6 : i64, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> i32
    %14 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %17 = llvm.load %15 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %18 = llvm.load %8 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %19 = arith.subi %18, %c32_i32 : i32
    llvm.store %19, %2 : i32, !llvm.ptr
    llvm.store %19, %8 : i32, !llvm.ptr
    %c0_i32_6 = arith.constant 0 : i32
    %c1050556_i64 = arith.constant 1050556 : i64
    %20 = arith.extui %c0_i32_6 : i32 to i64
    %21 = arith.addi %20, %c1050556_i64 : i64
    %22 = llvm.getelementptr %11[%21] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %23 = llvm.load %22 : !llvm.ptr -> i8
    %24 = arith.extui %23 : i8 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %25 = arith.cmpi ne, %24, %c0_i32_7 : i32
    cf.cond_br %25, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb4, ^bb12
    %26 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_8 = arith.constant 32 : i32
    %27 = arith.addi %26, %c32_i32_8 : i32
    llvm.store %27, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %28 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %29 = arith.addi %28, %c24_i32 : i32
    %c0_i32_9 = arith.constant 0 : i32
    %c1050544_i64 = arith.constant 1050544 : i64
    %30 = arith.extui %c0_i32_9 : i32 to i64
    %31 = arith.addi %30, %c1050544_i64 : i64
    %32 = llvm.getelementptr %11[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c0_i64_10 = arith.constant 0 : i64
    %34 = arith.extui %29 : i32 to i64
    %35 = arith.addi %34, %c0_i64_10 : i64
    %36 = llvm.getelementptr %11[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %33, %36 : i64, !llvm.ptr
    %37 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %38 = arith.addi %37, %c16_i32 : i32
    %c0_i32_11 = arith.constant 0 : i32
    %c1050536_i64 = arith.constant 1050536 : i64
    %39 = arith.extui %c0_i32_11 : i32 to i64
    %40 = arith.addi %39, %c1050536_i64 : i64
    %41 = llvm.getelementptr %11[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %42 = llvm.load %41 : !llvm.ptr -> i64
    %c0_i64_12 = arith.constant 0 : i64
    %43 = arith.extui %38 : i32 to i64
    %44 = arith.addi %43, %c0_i64_12 : i64
    %45 = llvm.getelementptr %11[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %42, %45 : i64, !llvm.ptr
    %46 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %47 = arith.addi %46, %c8_i32 : i32
    %c0_i32_13 = arith.constant 0 : i32
    %c1050528_i64 = arith.constant 1050528 : i64
    %48 = arith.extui %c0_i32_13 : i32 to i64
    %49 = arith.addi %48, %c1050528_i64 : i64
    %50 = llvm.getelementptr %11[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c0_i64_14 = arith.constant 0 : i64
    %52 = arith.extui %47 : i32 to i64
    %53 = arith.addi %52, %c0_i64_14 : i64
    %54 = llvm.getelementptr %11[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %51, %54 : i64, !llvm.ptr
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %c1050520_i64 = arith.constant 1050520 : i64
    %56 = arith.extui %c0_i32_15 : i32 to i64
    %57 = arith.addi %56, %c1050520_i64 : i64
    %58 = llvm.getelementptr %11[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %c0_i64_16 = arith.constant 0 : i64
    %60 = arith.extui %55 : i32 to i64
    %61 = arith.addi %60, %c0_i64_16 : i64
    %62 = llvm.getelementptr %11[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %59, %62 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %63 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_17 = arith.constant 0 : i32
    %c1050552_i64 = arith.constant 1050552 : i64
    %64 = arith.extui %c0_i32_17 : i32 to i64
    %65 = arith.addi %64, %c1050552_i64 : i64
    %66 = llvm.getelementptr %11[%65] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %67 = llvm.load %66 : !llvm.ptr -> i32
    %68 = arith.cmpi ult, %67, %17 : i32
    cf.cond_br %68, ^bb6, ^bb7
  ^bb6:  // 2 preds: ^bb5, ^bb7
    %69 = llvm.getelementptr %16[%67] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> i32
    %c0_i32_18 = arith.constant 0 : i32
    %72 = arith.cmpi eq, %71, %c0_i32_18 : i32
    cf.cond_br %72, ^bb9, ^bb8
  ^bb7:  // pred: ^bb5
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb6
  ^bb8:  // 2 preds: ^bb6, ^bb9
    %73 = llvm.getelementptr %70[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %74 = llvm.getelementptr %70[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %75 = llvm.getelementptr %70[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %76 = llvm.load %73 : !llvm.ptr -> !llvm.ptr
    %77 = llvm.load %75 : !llvm.ptr -> !llvm.ptr
    %78 = llvm.load %76 : !llvm.ptr -> i32
    %c0_i32_19 = arith.constant 0 : i32
    %79 = arith.cmpi eq, %78, %c0_i32_19 : i32
    cf.cond_br %79, ^bb11, ^bb10
  ^bb9:  // pred: ^bb6
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb8
  ^bb10:  // 2 preds: ^bb8, ^bb11
    %80 = llvm.load %74 : !llvm.ptr -> i32
    %81 = arith.cmpi ne, %13, %80 : i32
    cf.cond_br %81, ^bb13, ^bb12
  ^bb11:  // pred: ^bb8
    %c3_i32_20 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_20) : (i32) -> ()
    cf.br ^bb10
  ^bb12:  // 2 preds: ^bb10, ^bb13
    %82 = llvm.call %76(%77, %63) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %c0_i32_21 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050556_i64_22 = arith.constant 1050556 : i64
    %83 = arith.extui %c0_i32_21 : i32 to i64
    %84 = arith.addi %83, %c1050556_i64_22 : i64
    %85 = llvm.getelementptr %11[%84] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %86 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %86, %85 : i8, !llvm.ptr
    %c0_i32_23 = arith.constant 0 : i32
    %87 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_24 = arith.constant 24 : i32
    %88 = arith.addi %87, %c24_i32_24 : i32
    %c0_i64_25 = arith.constant 0 : i64
    %89 = arith.extui %88 : i32 to i64
    %90 = arith.addi %89, %c0_i64_25 : i64
    %91 = llvm.getelementptr %11[%90] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %92 = llvm.load %91 : !llvm.ptr -> i64
    llvm.store %92, %3 : i64, !llvm.ptr
    %c1050544_i64_26 = arith.constant 1050544 : i64
    %93 = arith.extui %c0_i32_23 : i32 to i64
    %94 = arith.addi %93, %c1050544_i64_26 : i64
    %95 = llvm.getelementptr %11[%94] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %92, %95 : i64, !llvm.ptr
    %c0_i32_27 = arith.constant 0 : i32
    %96 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_28 = arith.constant 16 : i32
    %97 = arith.addi %96, %c16_i32_28 : i32
    %c0_i64_29 = arith.constant 0 : i64
    %98 = arith.extui %97 : i32 to i64
    %99 = arith.addi %98, %c0_i64_29 : i64
    %100 = llvm.getelementptr %11[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i64
    llvm.store %101, %4 : i64, !llvm.ptr
    %c1050536_i64_30 = arith.constant 1050536 : i64
    %102 = arith.extui %c0_i32_27 : i32 to i64
    %103 = arith.addi %102, %c1050536_i64_30 : i64
    %104 = llvm.getelementptr %11[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %101, %104 : i64, !llvm.ptr
    %c0_i32_31 = arith.constant 0 : i32
    %105 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_32 = arith.constant 8 : i32
    %106 = arith.addi %105, %c8_i32_32 : i32
    %c0_i64_33 = arith.constant 0 : i64
    %107 = arith.extui %106 : i32 to i64
    %108 = arith.addi %107, %c0_i64_33 : i64
    %109 = llvm.getelementptr %11[%108] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %110 = llvm.load %109 : !llvm.ptr -> i64
    llvm.store %110, %5 : i64, !llvm.ptr
    %c1050528_i64_34 = arith.constant 1050528 : i64
    %111 = arith.extui %c0_i32_31 : i32 to i64
    %112 = arith.addi %111, %c1050528_i64_34 : i64
    %113 = llvm.getelementptr %11[%112] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %110, %113 : i64, !llvm.ptr
    %c0_i32_35 = arith.constant 0 : i32
    %114 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_36 = arith.constant 0 : i64
    %115 = arith.extui %114 : i32 to i64
    %116 = arith.addi %115, %c0_i64_36 : i64
    %117 = llvm.getelementptr %11[%116] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %118 = llvm.load %117 : !llvm.ptr -> i64
    llvm.store %118, %6 : i64, !llvm.ptr
    %c1050520_i64_37 = arith.constant 1050520 : i64
    %119 = arith.extui %c0_i32_35 : i32 to i64
    %120 = arith.addi %119, %c1050520_i64_37 : i64
    %121 = llvm.getelementptr %11[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %118, %121 : i64, !llvm.ptr
    %122 = llvm.load %0 : !llvm.ptr -> i32
    %123 = llvm.load %6 : !llvm.ptr -> i64
    %c0_i64_38 = arith.constant 0 : i64
    %124 = arith.extui %122 : i32 to i64
    %125 = arith.addi %124, %c0_i64_38 : i64
    %126 = llvm.getelementptr %11[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %123, %126 : i64, !llvm.ptr
    %127 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_39 = arith.constant 8 : i32
    %128 = arith.addi %127, %c8_i32_39 : i32
    %129 = llvm.load %5 : !llvm.ptr -> i64
    %c0_i64_40 = arith.constant 0 : i64
    %130 = arith.extui %128 : i32 to i64
    %131 = arith.addi %130, %c0_i64_40 : i64
    %132 = llvm.getelementptr %11[%131] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %129, %132 : i64, !llvm.ptr
    %133 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_41 = arith.constant 16 : i32
    %134 = arith.addi %133, %c16_i32_41 : i32
    %135 = llvm.load %4 : !llvm.ptr -> i64
    %c0_i64_42 = arith.constant 0 : i64
    %136 = arith.extui %134 : i32 to i64
    %137 = arith.addi %136, %c0_i64_42 : i64
    %138 = llvm.getelementptr %11[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %135, %138 : i64, !llvm.ptr
    %139 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_43 = arith.constant 24 : i32
    %140 = arith.addi %139, %c24_i32_43 : i32
    %141 = llvm.load %3 : !llvm.ptr -> i64
    %c0_i64_44 = arith.constant 0 : i64
    %142 = arith.extui %140 : i32 to i64
    %143 = arith.addi %142, %c0_i64_44 : i64
    %144 = llvm.getelementptr %11[%143] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %141, %144 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb13:  // pred: ^bb10
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb12
  }
  func.func @f64(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> i32
    %13 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.load %14 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %17 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %18 = arith.subi %17, %c32_i32 : i32
    llvm.store %18, %2 : i32, !llvm.ptr
    llvm.store %18, %7 : i32, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    %c1050624_i64 = arith.constant 1050624 : i64
    %19 = arith.extui %c0_i32_5 : i32 to i64
    %20 = arith.addi %19, %c1050624_i64 : i64
    %21 = llvm.getelementptr %10[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %22 = llvm.load %21 : !llvm.ptr -> i8
    %23 = arith.extui %22 : i8 to i32
    %c0_i32_6 = arith.constant 0 : i32
    %24 = arith.cmpi ne, %23, %c0_i32_6 : i32
    cf.cond_br %24, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb4, ^bb12
    %25 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_7 = arith.constant 32 : i32
    %26 = arith.addi %25, %c32_i32_7 : i32
    llvm.store %26, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %27 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %28 = arith.addi %27, %c16_i32 : i32
    %c0_i32_8 = arith.constant 0 : i32
    %c1050620_i64 = arith.constant 1050620 : i64
    %29 = arith.extui %c0_i32_8 : i32 to i64
    %30 = arith.addi %29, %c1050620_i64 : i64
    %31 = llvm.getelementptr %10[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %32 = llvm.load %31 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %33 = arith.extui %28 : i32 to i64
    %34 = arith.addi %33, %c0_i64_9 : i64
    %35 = llvm.getelementptr %10[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %32, %35 : i32, !llvm.ptr
    %36 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %37 = arith.addi %36, %c8_i32 : i32
    %c0_i32_10 = arith.constant 0 : i32
    %c1050612_i64 = arith.constant 1050612 : i64
    %38 = arith.extui %c0_i32_10 : i32 to i64
    %39 = arith.addi %38, %c1050612_i64 : i64
    %40 = llvm.getelementptr %10[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %42 = arith.extui %37 : i32 to i64
    %43 = arith.addi %42, %c0_i64_11 : i64
    %44 = llvm.getelementptr %10[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i64, !llvm.ptr
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_12 = arith.constant 0 : i32
    %c1050604_i64 = arith.constant 1050604 : i64
    %46 = arith.extui %c0_i32_12 : i32 to i64
    %47 = arith.addi %46, %c1050604_i64 : i64
    %48 = llvm.getelementptr %10[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %c0_i64_13 = arith.constant 0 : i64
    %50 = arith.extui %45 : i32 to i64
    %51 = arith.addi %50, %c0_i64_13 : i64
    %52 = llvm.getelementptr %10[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %49, %52 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %53 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %54 = arith.addi %53, %c12_i32 : i32
    %c0_i32_14 = arith.constant 0 : i32
    %c1050600_i64 = arith.constant 1050600 : i64
    %55 = arith.extui %c0_i32_14 : i32 to i64
    %56 = arith.addi %55, %c1050600_i64 : i64
    %57 = llvm.getelementptr %10[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i32
    %59 = arith.cmpi ult, %58, %16 : i32
    cf.cond_br %59, ^bb6, ^bb7
  ^bb6:  // 2 preds: ^bb5, ^bb7
    %60 = llvm.getelementptr %15[%58] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %61 = llvm.load %60 : !llvm.ptr -> !llvm.ptr
    %62 = llvm.load %61 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %63 = arith.cmpi eq, %62, %c0_i32_15 : i32
    cf.cond_br %63, ^bb9, ^bb8
  ^bb7:  // pred: ^bb5
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb6
  ^bb8:  // 2 preds: ^bb6, ^bb9
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.getelementptr %61[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %66 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %67 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    %68 = llvm.load %66 : !llvm.ptr -> !llvm.ptr
    %69 = llvm.load %67 : !llvm.ptr -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %70 = arith.cmpi eq, %69, %c0_i32_16 : i32
    cf.cond_br %70, ^bb11, ^bb10
  ^bb9:  // pred: ^bb6
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb8
  ^bb10:  // 2 preds: ^bb8, ^bb11
    %71 = llvm.load %65 : !llvm.ptr -> i32
    %72 = arith.cmpi ne, %12, %71 : i32
    cf.cond_br %72, ^bb13, ^bb12
  ^bb11:  // pred: ^bb8
    %c3_i32_17 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_17) : (i32) -> ()
    cf.br ^bb10
  ^bb12:  // 2 preds: ^bb10, ^bb13
    %73 = llvm.call %67(%68, %54) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %c0_i32_18 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050624_i64_19 = arith.constant 1050624 : i64
    %74 = arith.extui %c0_i32_18 : i32 to i64
    %75 = arith.addi %74, %c1050624_i64_19 : i64
    %76 = llvm.getelementptr %10[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %77 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %77, %76 : i8, !llvm.ptr
    %c0_i32_20 = arith.constant 0 : i32
    %78 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_21 = arith.constant 12 : i32
    %79 = arith.addi %78, %c12_i32_21 : i32
    %c16_i32_22 = arith.constant 16 : i32
    %80 = arith.addi %79, %c16_i32_22 : i32
    %c0_i64_23 = arith.constant 0 : i64
    %81 = arith.extui %80 : i32 to i64
    %82 = arith.addi %81, %c0_i64_23 : i64
    %83 = llvm.getelementptr %10[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %84 = llvm.load %83 : !llvm.ptr -> i32
    llvm.store %84, %3 : i32, !llvm.ptr
    %c1050620_i64_24 = arith.constant 1050620 : i64
    %85 = arith.extui %c0_i32_20 : i32 to i64
    %86 = arith.addi %85, %c1050620_i64_24 : i64
    %87 = llvm.getelementptr %10[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %84, %87 : i32, !llvm.ptr
    %c0_i32_25 = arith.constant 0 : i32
    %88 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_26 = arith.constant 12 : i32
    %89 = arith.addi %88, %c12_i32_26 : i32
    %c8_i32_27 = arith.constant 8 : i32
    %90 = arith.addi %89, %c8_i32_27 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %91 = arith.extui %90 : i32 to i64
    %92 = arith.addi %91, %c0_i64_28 : i64
    %93 = llvm.getelementptr %10[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %94 = llvm.load %93 : !llvm.ptr -> i64
    llvm.store %94, %4 : i64, !llvm.ptr
    %c1050612_i64_29 = arith.constant 1050612 : i64
    %95 = arith.extui %c0_i32_25 : i32 to i64
    %96 = arith.addi %95, %c1050612_i64_29 : i64
    %97 = llvm.getelementptr %10[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %94, %97 : i64, !llvm.ptr
    %c0_i32_30 = arith.constant 0 : i32
    %98 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %99 = arith.extui %98 : i32 to i64
    %100 = arith.addi %99, %c12_i64 : i64
    %101 = llvm.getelementptr %10[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %102 = llvm.load %101 : !llvm.ptr -> i64
    llvm.store %102, %5 : i64, !llvm.ptr
    %c1050604_i64_31 = arith.constant 1050604 : i64
    %103 = arith.extui %c0_i32_30 : i32 to i64
    %104 = arith.addi %103, %c1050604_i64_31 : i64
    %105 = llvm.getelementptr %10[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %102, %105 : i64, !llvm.ptr
    %106 = llvm.load %0 : !llvm.ptr -> i32
    %107 = llvm.load %5 : !llvm.ptr -> i64
    %c0_i64_32 = arith.constant 0 : i64
    %108 = arith.extui %106 : i32 to i64
    %109 = arith.addi %108, %c0_i64_32 : i64
    %110 = llvm.getelementptr %10[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %107, %110 : i64, !llvm.ptr
    %111 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_33 = arith.constant 8 : i32
    %112 = arith.addi %111, %c8_i32_33 : i32
    %113 = llvm.load %4 : !llvm.ptr -> i64
    %c0_i64_34 = arith.constant 0 : i64
    %114 = arith.extui %112 : i32 to i64
    %115 = arith.addi %114, %c0_i64_34 : i64
    %116 = llvm.getelementptr %10[%115] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %113, %116 : i64, !llvm.ptr
    %117 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_35 = arith.constant 16 : i32
    %118 = arith.addi %117, %c16_i32_35 : i32
    %119 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_36 = arith.constant 0 : i64
    %120 = arith.extui %118 : i32 to i64
    %121 = arith.addi %120, %c0_i64_36 : i64
    %122 = llvm.getelementptr %10[%121] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %119, %122 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb13:  // pred: ^bb10
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb12
  }
  func.func @f65(%arg0: !llvm.ptr, %arg1: i32) -> i64 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %1 = llvm.getelementptr %arg0[800] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.getelementptr %1[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    %4 = llvm.getelementptr %1[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %6 = llvm.call %3(%5) vararg(!llvm.func<i64 (...)>) : !llvm.ptr, (!llvm.ptr) -> i64
    cf.br ^bb2(%6 : i64)
  ^bb2(%7: i64):  // pred: ^bb1
    return %7 : i64
  }
  func.func @f66(%arg0: !llvm.ptr, %arg1: i32) -> i64 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %1 = llvm.getelementptr %arg0[824] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.getelementptr %1[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    %4 = llvm.getelementptr %1[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %6 = llvm.call %3(%5) vararg(!llvm.func<i64 (...)>) : !llvm.ptr, (!llvm.ptr) -> i64
    cf.br ^bb2(%6 : i64)
  ^bb2(%7: i64):  // pred: ^bb1
    return %7 : i64
  }
  func.func @f67(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %3 : i64, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %6 : i64, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> i32
    %14 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %17 = llvm.load %15 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %18 = llvm.load %8 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %19 = arith.subi %18, %c32_i32 : i32
    llvm.store %19, %2 : i32, !llvm.ptr
    llvm.store %19, %8 : i32, !llvm.ptr
    %c0_i32_6 = arith.constant 0 : i32
    %c1050596_i64 = arith.constant 1050596 : i64
    %20 = arith.extui %c0_i32_6 : i32 to i64
    %21 = arith.addi %20, %c1050596_i64 : i64
    %22 = llvm.getelementptr %11[%21] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %23 = llvm.load %22 : !llvm.ptr -> i8
    %24 = arith.extui %23 : i8 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %25 = arith.cmpi ne, %24, %c0_i32_7 : i32
    cf.cond_br %25, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb4, ^bb12
    %26 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_8 = arith.constant 32 : i32
    %27 = arith.addi %26, %c32_i32_8 : i32
    llvm.store %27, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %28 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %29 = arith.addi %28, %c24_i32 : i32
    %c0_i32_9 = arith.constant 0 : i32
    %c1050584_i64 = arith.constant 1050584 : i64
    %30 = arith.extui %c0_i32_9 : i32 to i64
    %31 = arith.addi %30, %c1050584_i64 : i64
    %32 = llvm.getelementptr %11[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c0_i64_10 = arith.constant 0 : i64
    %34 = arith.extui %29 : i32 to i64
    %35 = arith.addi %34, %c0_i64_10 : i64
    %36 = llvm.getelementptr %11[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %33, %36 : i64, !llvm.ptr
    %37 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %38 = arith.addi %37, %c16_i32 : i32
    %c0_i32_11 = arith.constant 0 : i32
    %c1050576_i64 = arith.constant 1050576 : i64
    %39 = arith.extui %c0_i32_11 : i32 to i64
    %40 = arith.addi %39, %c1050576_i64 : i64
    %41 = llvm.getelementptr %11[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %42 = llvm.load %41 : !llvm.ptr -> i64
    %c0_i64_12 = arith.constant 0 : i64
    %43 = arith.extui %38 : i32 to i64
    %44 = arith.addi %43, %c0_i64_12 : i64
    %45 = llvm.getelementptr %11[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %42, %45 : i64, !llvm.ptr
    %46 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %47 = arith.addi %46, %c8_i32 : i32
    %c0_i32_13 = arith.constant 0 : i32
    %c1050568_i64 = arith.constant 1050568 : i64
    %48 = arith.extui %c0_i32_13 : i32 to i64
    %49 = arith.addi %48, %c1050568_i64 : i64
    %50 = llvm.getelementptr %11[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c0_i64_14 = arith.constant 0 : i64
    %52 = arith.extui %47 : i32 to i64
    %53 = arith.addi %52, %c0_i64_14 : i64
    %54 = llvm.getelementptr %11[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %51, %54 : i64, !llvm.ptr
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %c1050560_i64 = arith.constant 1050560 : i64
    %56 = arith.extui %c0_i32_15 : i32 to i64
    %57 = arith.addi %56, %c1050560_i64 : i64
    %58 = llvm.getelementptr %11[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %c0_i64_16 = arith.constant 0 : i64
    %60 = arith.extui %55 : i32 to i64
    %61 = arith.addi %60, %c0_i64_16 : i64
    %62 = llvm.getelementptr %11[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %59, %62 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %63 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_17 = arith.constant 0 : i32
    %c1050592_i64 = arith.constant 1050592 : i64
    %64 = arith.extui %c0_i32_17 : i32 to i64
    %65 = arith.addi %64, %c1050592_i64 : i64
    %66 = llvm.getelementptr %11[%65] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %67 = llvm.load %66 : !llvm.ptr -> i32
    %68 = arith.cmpi ult, %67, %17 : i32
    cf.cond_br %68, ^bb6, ^bb7
  ^bb6:  // 2 preds: ^bb5, ^bb7
    %69 = llvm.getelementptr %16[%67] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> i32
    %c0_i32_18 = arith.constant 0 : i32
    %72 = arith.cmpi eq, %71, %c0_i32_18 : i32
    cf.cond_br %72, ^bb9, ^bb8
  ^bb7:  // pred: ^bb5
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb6
  ^bb8:  // 2 preds: ^bb6, ^bb9
    %73 = llvm.getelementptr %70[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %74 = llvm.getelementptr %70[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %75 = llvm.getelementptr %70[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %76 = llvm.load %73 : !llvm.ptr -> !llvm.ptr
    %77 = llvm.load %75 : !llvm.ptr -> !llvm.ptr
    %78 = llvm.load %76 : !llvm.ptr -> i32
    %c0_i32_19 = arith.constant 0 : i32
    %79 = arith.cmpi eq, %78, %c0_i32_19 : i32
    cf.cond_br %79, ^bb11, ^bb10
  ^bb9:  // pred: ^bb6
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb8
  ^bb10:  // 2 preds: ^bb8, ^bb11
    %80 = llvm.load %74 : !llvm.ptr -> i32
    %81 = arith.cmpi ne, %13, %80 : i32
    cf.cond_br %81, ^bb13, ^bb12
  ^bb11:  // pred: ^bb8
    %c3_i32_20 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_20) : (i32) -> ()
    cf.br ^bb10
  ^bb12:  // 2 preds: ^bb10, ^bb13
    %82 = llvm.call %76(%77, %63) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32) -> !llvm.void
    %c0_i32_21 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050596_i64_22 = arith.constant 1050596 : i64
    %83 = arith.extui %c0_i32_21 : i32 to i64
    %84 = arith.addi %83, %c1050596_i64_22 : i64
    %85 = llvm.getelementptr %11[%84] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %86 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %86, %85 : i8, !llvm.ptr
    %c0_i32_23 = arith.constant 0 : i32
    %87 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_24 = arith.constant 24 : i32
    %88 = arith.addi %87, %c24_i32_24 : i32
    %c0_i64_25 = arith.constant 0 : i64
    %89 = arith.extui %88 : i32 to i64
    %90 = arith.addi %89, %c0_i64_25 : i64
    %91 = llvm.getelementptr %11[%90] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %92 = llvm.load %91 : !llvm.ptr -> i64
    llvm.store %92, %3 : i64, !llvm.ptr
    %c1050584_i64_26 = arith.constant 1050584 : i64
    %93 = arith.extui %c0_i32_23 : i32 to i64
    %94 = arith.addi %93, %c1050584_i64_26 : i64
    %95 = llvm.getelementptr %11[%94] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %92, %95 : i64, !llvm.ptr
    %c0_i32_27 = arith.constant 0 : i32
    %96 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_28 = arith.constant 16 : i32
    %97 = arith.addi %96, %c16_i32_28 : i32
    %c0_i64_29 = arith.constant 0 : i64
    %98 = arith.extui %97 : i32 to i64
    %99 = arith.addi %98, %c0_i64_29 : i64
    %100 = llvm.getelementptr %11[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i64
    llvm.store %101, %4 : i64, !llvm.ptr
    %c1050576_i64_30 = arith.constant 1050576 : i64
    %102 = arith.extui %c0_i32_27 : i32 to i64
    %103 = arith.addi %102, %c1050576_i64_30 : i64
    %104 = llvm.getelementptr %11[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %101, %104 : i64, !llvm.ptr
    %c0_i32_31 = arith.constant 0 : i32
    %105 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_32 = arith.constant 8 : i32
    %106 = arith.addi %105, %c8_i32_32 : i32
    %c0_i64_33 = arith.constant 0 : i64
    %107 = arith.extui %106 : i32 to i64
    %108 = arith.addi %107, %c0_i64_33 : i64
    %109 = llvm.getelementptr %11[%108] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %110 = llvm.load %109 : !llvm.ptr -> i64
    llvm.store %110, %5 : i64, !llvm.ptr
    %c1050568_i64_34 = arith.constant 1050568 : i64
    %111 = arith.extui %c0_i32_31 : i32 to i64
    %112 = arith.addi %111, %c1050568_i64_34 : i64
    %113 = llvm.getelementptr %11[%112] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %110, %113 : i64, !llvm.ptr
    %c0_i32_35 = arith.constant 0 : i32
    %114 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_36 = arith.constant 0 : i64
    %115 = arith.extui %114 : i32 to i64
    %116 = arith.addi %115, %c0_i64_36 : i64
    %117 = llvm.getelementptr %11[%116] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %118 = llvm.load %117 : !llvm.ptr -> i64
    llvm.store %118, %6 : i64, !llvm.ptr
    %c1050560_i64_37 = arith.constant 1050560 : i64
    %119 = arith.extui %c0_i32_35 : i32 to i64
    %120 = arith.addi %119, %c1050560_i64_37 : i64
    %121 = llvm.getelementptr %11[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %118, %121 : i64, !llvm.ptr
    %122 = llvm.load %0 : !llvm.ptr -> i32
    %123 = llvm.load %6 : !llvm.ptr -> i64
    %c0_i64_38 = arith.constant 0 : i64
    %124 = arith.extui %122 : i32 to i64
    %125 = arith.addi %124, %c0_i64_38 : i64
    %126 = llvm.getelementptr %11[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %123, %126 : i64, !llvm.ptr
    %127 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_39 = arith.constant 8 : i32
    %128 = arith.addi %127, %c8_i32_39 : i32
    %129 = llvm.load %5 : !llvm.ptr -> i64
    %c0_i64_40 = arith.constant 0 : i64
    %130 = arith.extui %128 : i32 to i64
    %131 = arith.addi %130, %c0_i64_40 : i64
    %132 = llvm.getelementptr %11[%131] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %129, %132 : i64, !llvm.ptr
    %133 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_41 = arith.constant 16 : i32
    %134 = arith.addi %133, %c16_i32_41 : i32
    %135 = llvm.load %4 : !llvm.ptr -> i64
    %c0_i64_42 = arith.constant 0 : i64
    %136 = arith.extui %134 : i32 to i64
    %137 = arith.addi %136, %c0_i64_42 : i64
    %138 = llvm.getelementptr %11[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %135, %138 : i64, !llvm.ptr
    %139 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_43 = arith.constant 24 : i32
    %140 = arith.addi %139, %c24_i32_43 : i32
    %141 = llvm.load %3 : !llvm.ptr -> i64
    %c0_i64_44 = arith.constant 0 : i64
    %142 = arith.extui %140 : i32 to i64
    %143 = arith.addi %142, %c0_i64_44 : i64
    %144 = llvm.getelementptr %11[%143] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %141, %144 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb13:  // pred: ^bb10
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb12
  }
  func.func @f68(%arg0: !llvm.ptr, %arg1: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32_1 = arith.constant 0 : i32
    %c1050720_i64 = arith.constant 1050720 : i64
    %5 = arith.extui %c0_i32_1 : i32 to i64
    %6 = arith.addi %5, %c1050720_i64 : i64
    %7 = llvm.getelementptr %4[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> i8
    %9 = arith.extui %8 : i8 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_2 : i32
    cf.cond_br %10, ^bb3, ^bb4
  ^bb2(%11: i32):  // 2 preds: ^bb3, ^bb4
    return %11 : i32
  ^bb3:  // pred: ^bb1
    %c0_i32_3 = arith.constant 0 : i32
    %c1050716_i64 = arith.constant 1050716 : i64
    %12 = arith.extui %c0_i32_3 : i32 to i64
    %13 = arith.addi %12, %c1050716_i64 : i64
    %14 = llvm.getelementptr %4[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i32
    cf.br ^bb2(%15 : i32)
  ^bb4:  // pred: ^bb1
    %16 = call @f20(%arg0) : (!llvm.ptr) -> i32
    llvm.store %16, %1 : i32, !llvm.ptr
    %c0_i32_4 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %c1050720_i64_5 = arith.constant 1050720 : i64
    %17 = arith.extui %c0_i32_4 : i32 to i64
    %18 = arith.addi %17, %c1050720_i64_5 : i64
    %19 = llvm.getelementptr %4[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %20 = arith.trunci %c1_i32 : i32 to i8
    llvm.store %20, %19 : i8, !llvm.ptr
    %c0_i32_6 = arith.constant 0 : i32
    %21 = llvm.load %1 : !llvm.ptr -> i32
    %c1050716_i64_7 = arith.constant 1050716 : i64
    %22 = arith.extui %c0_i32_6 : i32 to i64
    %23 = arith.addi %22, %c1050716_i64_7 : i64
    %24 = llvm.getelementptr %4[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %21, %24 : i32, !llvm.ptr
    %25 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb2(%25 : i32)
  }
  func.func @f69(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[4] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> i32
    %8 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.load %9 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %13 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c0_i64 : i64
    %16 = llvm.getelementptr %5[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i32
    %18 = llvm.load %2 : !llvm.ptr -> i32
    %19 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %20 = arith.extui %19 : i32 to i64
    %21 = arith.addi %20, %c4_i64 : i64
    %22 = llvm.getelementptr %5[%21] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %23 = llvm.load %22 : !llvm.ptr -> i32
    %c52_i64 = arith.constant 52 : i64
    %24 = arith.extui %23 : i32 to i64
    %25 = arith.addi %24, %c52_i64 : i64
    %26 = llvm.getelementptr %5[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %27 = llvm.load %26 : !llvm.ptr -> i32
    %28 = arith.cmpi ult, %27, %11 : i32
    cf.cond_br %28, ^bb3, ^bb4
  ^bb2:  // pred: ^bb9
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %29 = llvm.getelementptr %10[%27] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %30 = llvm.load %29 : !llvm.ptr -> !llvm.ptr
    %31 = llvm.load %30 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %32 = arith.cmpi eq, %31, %c0_i32 : i32
    cf.cond_br %32, ^bb6, ^bb5
  ^bb4:  // pred: ^bb1
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb3
  ^bb5:  // 2 preds: ^bb3, ^bb6
    %33 = llvm.getelementptr %30[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %34 = llvm.getelementptr %30[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %35 = llvm.getelementptr %30[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %36 = llvm.load %33 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.load %36 : !llvm.ptr -> i32
    %c0_i32_2 = arith.constant 0 : i32
    %39 = arith.cmpi eq, %38, %c0_i32_2 : i32
    cf.cond_br %39, ^bb8, ^bb7
  ^bb6:  // pred: ^bb3
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb5
  ^bb7:  // 2 preds: ^bb5, ^bb8
    %40 = llvm.load %34 : !llvm.ptr -> i32
    %41 = arith.cmpi ne, %7, %40 : i32
    cf.cond_br %41, ^bb10, ^bb9
  ^bb8:  // pred: ^bb5
    %c3_i32_3 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_3) : (i32) -> ()
    cf.br ^bb7
  ^bb9:  // 2 preds: ^bb7, ^bb10
    %42 = llvm.call %36(%37, %12, %17, %18) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> !llvm.void
    cf.br ^bb2
  ^bb10:  // pred: ^bb7
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb9
  }
  func.func @f70(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[4] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> i32
    %8 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.load %9 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c0_i64 : i64
    %15 = llvm.getelementptr %5[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i32
    %17 = llvm.load %1 : !llvm.ptr -> i32
    %18 = llvm.load %2 : !llvm.ptr -> i32
    %19 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %20 = arith.extui %19 : i32 to i64
    %21 = arith.addi %20, %c4_i64 : i64
    %22 = llvm.getelementptr %5[%21] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %23 = llvm.load %22 : !llvm.ptr -> i32
    %c56_i64 = arith.constant 56 : i64
    %24 = arith.extui %23 : i32 to i64
    %25 = arith.addi %24, %c56_i64 : i64
    %26 = llvm.getelementptr %5[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %27 = llvm.load %26 : !llvm.ptr -> i32
    %28 = arith.cmpi ult, %27, %11 : i32
    cf.cond_br %28, ^bb3, ^bb4
  ^bb2:  // pred: ^bb9
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %29 = llvm.getelementptr %10[%27] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %30 = llvm.load %29 : !llvm.ptr -> !llvm.ptr
    %31 = llvm.load %30 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %32 = arith.cmpi eq, %31, %c0_i32 : i32
    cf.cond_br %32, ^bb6, ^bb5
  ^bb4:  // pred: ^bb1
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb3
  ^bb5:  // 2 preds: ^bb3, ^bb6
    %33 = llvm.getelementptr %30[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %34 = llvm.getelementptr %30[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %35 = llvm.getelementptr %30[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %36 = llvm.load %33 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.load %36 : !llvm.ptr -> i32
    %c0_i32_2 = arith.constant 0 : i32
    %39 = arith.cmpi eq, %38, %c0_i32_2 : i32
    cf.cond_br %39, ^bb8, ^bb7
  ^bb6:  // pred: ^bb3
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb5
  ^bb7:  // 2 preds: ^bb5, ^bb8
    %40 = llvm.load %34 : !llvm.ptr -> i32
    %41 = arith.cmpi ne, %7, %40 : i32
    cf.cond_br %41, ^bb10, ^bb9
  ^bb8:  // pred: ^bb5
    %c3_i32_3 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_3) : (i32) -> ()
    cf.br ^bb7
  ^bb9:  // 2 preds: ^bb7, ^bb10
    %42 = llvm.call %36(%37, %16, %17, %18) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> !llvm.void
    cf.br ^bb2
  ^bb10:  // pred: ^bb7
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb9
  }
  func.func @f71(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c1049416_i32 = arith.constant 1049416 : i32
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %3 = llvm.load %0 : !llvm.ptr -> i32
    %4 = call @f74(%arg0, %c1049416_i32, %2, %3) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%4 : i32)
  ^bb2(%5: i32):  // pred: ^bb1
    return %5 : i32
  }
  func.func @f72(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f73(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c1049416_i32 = arith.constant 1049416 : i32
    %4 = llvm.load %2 : !llvm.ptr -> i32
    %5 = llvm.load %3 : !llvm.ptr -> i32
    %6 = call @f74(%arg0, %c1049416_i32, %4, %5) : (!llvm.ptr, i32, i32, i32) -> i32
    llvm.store %6, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %7 = arith.cmpi eq, %6, %c0_i32 : i32
    %8 = arith.extui %7 : i1 to i32
    %c0_i32_3 = arith.constant 0 : i32
    %9 = arith.cmpi ne, %8, %c0_i32_3 : i32
    cf.cond_br %9, ^bb3, ^bb4
  ^bb2(%10: i32):  // pred: ^bb3
    return %10 : i32
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %11 = llvm.load %2 : !llvm.ptr -> i32
    cf.br ^bb2(%11 : i32)
  ^bb4:  // pred: ^bb1
    %12 = llvm.load %2 : !llvm.ptr -> i32
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %14 = llvm.load %1 : !llvm.ptr -> i32
    %15 = llvm.load %3 : !llvm.ptr -> i32
    %16 = llvm.load %1 : !llvm.ptr -> i32
    %17 = llvm.load %3 : !llvm.ptr -> i32
    %18 = arith.cmpi ult, %16, %17 : i32
    %19 = arith.extui %18 : i1 to i32
    %c0_i32_4 = arith.constant 0 : i32
    %20 = arith.cmpi ne, %19, %c0_i32_4 : i32
    %21 = arith.select %20, %14, %15 : i32
    %22 = call @f145(%arg0, %12, %13, %21) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb3
  }
  func.func @f74(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32_5 = arith.constant 0 : i32
    llvm.store %c0_i32_5, %3 : i32, !llvm.ptr
    %c0_i32_6 = arith.constant 0 : i32
    %c1050724_i64 = arith.constant 1050724 : i64
    %9 = arith.extui %c0_i32_6 : i32 to i64
    %10 = arith.addi %9, %c1050724_i64 : i64
    %11 = llvm.getelementptr %8[%10] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> i32
    llvm.store %12, %4 : i32, !llvm.ptr
    %c0_i32_7 = arith.constant 0 : i32
    %13 = arith.cmpi ne, %12, %c0_i32_7 : i32
    cf.cond_br %13, ^bb3, ^bb4
  ^bb2(%14: i32):  // pred: ^bb5
    return %14 : i32
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %15 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_8 = arith.constant 0 : i32
    %16 = llvm.load %1 : !llvm.ptr -> i32
    %17 = arith.subi %c0_i32_8, %16 : i32
    %18 = arith.andi %15, %17 : i32
    llvm.store %18, %4 : i32, !llvm.ptr
    %19 = llvm.load %2 : !llvm.ptr -> i32
    %20 = arith.cmpi ult, %18, %19 : i32
    %21 = arith.extui %20 : i1 to i32
    %c0_i32_9 = arith.constant 0 : i32
    %22 = arith.cmpi ne, %21, %c0_i32_9 : i32
    cf.cond_br %22, ^bb5, ^bb6
  ^bb4:  // pred: ^bb1
    %c0_i32_10 = arith.constant 0 : i32
    %23 = call @dora_fn_wasm_memory_size(%arg0, %c0_i32_10) : (!llvm.ptr, i32) -> i32
    llvm.store %23, %5 : i32, !llvm.ptr
    %c0_i32_11 = arith.constant 0 : i32
    %c0_i32_12 = arith.constant 0 : i32
    %c1050768_i32 = arith.constant 1050768 : i32
    %24 = arith.subi %c0_i32_12, %c1050768_i32 : i32
    llvm.store %24, %4 : i32, !llvm.ptr
    %c1050724_i64_13 = arith.constant 1050724 : i64
    %25 = arith.extui %c0_i32_11 : i32 to i64
    %26 = arith.addi %25, %c1050724_i64_13 : i64
    %27 = llvm.getelementptr %8[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %24, %27 : i32, !llvm.ptr
    %c0_i32_14 = arith.constant 0 : i32
    %c1_i32 = arith.constant 1 : i32
    %28 = llvm.load %5 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %c31_i32 = arith.constant 31 : i32
    %29 = arith.cmpi ule, %c16_i32, %c31_i32 : i32
    %30 = scf.if %29 -> (i32) {
      %81 = arith.shli %28, %c16_i32 : i32
      scf.yield %81 : i32
    } else {
      %c0_i32_37 = arith.constant 0 : i32
      scf.yield %c0_i32_37 : i32
    }
    %31 = arith.subi %c1_i32, %30 : i32
    %c1050728_i64 = arith.constant 1050728 : i64
    %32 = arith.extui %c0_i32_14 : i32 to i64
    %33 = arith.addi %32, %c1050728_i64 : i64
    %34 = llvm.getelementptr %8[%33] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %31, %34 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // 3 preds: ^bb3, ^bb7, ^bb8
    %35 = llvm.load %3 : !llvm.ptr -> i32
    cf.br ^bb2(%35 : i32)
  ^bb6:  // pred: ^bb3
    %c0_i32_15 = arith.constant 0 : i32
    llvm.store %c0_i32_15, %3 : i32, !llvm.ptr
    %c0_i32_16 = arith.constant 0 : i32
    %c1050728_i64_17 = arith.constant 1050728 : i64
    %36 = arith.extui %c0_i32_16 : i32 to i64
    %37 = arith.addi %36, %c1050728_i64_17 : i64
    %38 = llvm.getelementptr %8[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %39 = llvm.load %38 : !llvm.ptr -> i32
    llvm.store %39, %1 : i32, !llvm.ptr
    %40 = llvm.load %4 : !llvm.ptr -> i32
    %41 = llvm.load %2 : !llvm.ptr -> i32
    %42 = arith.subi %40, %41 : i32
    llvm.store %42, %2 : i32, !llvm.ptr
    %c1_i32_18 = arith.constant 1 : i32
    %43 = arith.addi %42, %c1_i32_18 : i32
    llvm.store %43, %5 : i32, !llvm.ptr
    %44 = arith.cmpi ule, %39, %43 : i32
    %45 = arith.extui %44 : i1 to i32
    %c0_i32_19 = arith.constant 0 : i32
    %46 = arith.cmpi ne, %45, %c0_i32_19 : i32
    cf.cond_br %46, ^bb7, ^bb8
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %c0_i32_20 = arith.constant 0 : i32
    %47 = llvm.load %2 : !llvm.ptr -> i32
    %c1050724_i64_21 = arith.constant 1050724 : i64
    %48 = arith.extui %c0_i32_20 : i32 to i64
    %49 = arith.addi %48, %c1050724_i64_21 : i64
    %50 = llvm.getelementptr %8[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %47, %50 : i32, !llvm.ptr
    %c0_i32_22 = arith.constant 0 : i32
    %51 = llvm.load %4 : !llvm.ptr -> i32
    %52 = arith.subi %c0_i32_22, %51 : i32
    llvm.store %52, %3 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb8:  // pred: ^bb6
    %c0_i32_23 = arith.constant 0 : i32
    %53 = llvm.load %1 : !llvm.ptr -> i32
    %54 = llvm.load %5 : !llvm.ptr -> i32
    %55 = arith.subi %53, %54 : i32
    llvm.store %55, %5 : i32, !llvm.ptr
    %56 = llvm.load %5 : !llvm.ptr -> i32
    %57 = llvm.load %1 : !llvm.ptr -> i32
    %58 = arith.cmpi ugt, %56, %57 : i32
    %59 = arith.extui %58 : i1 to i32
    %c0_i32_24 = arith.constant 0 : i32
    %60 = arith.cmpi ne, %59, %c0_i32_24 : i32
    %61 = arith.select %60, %c0_i32_23, %55 : i32
    %c-1_i32 = arith.constant -1 : i32
    %62 = arith.addi %61, %c-1_i32 : i32
    %c16_i32_25 = arith.constant 16 : i32
    %c31_i32_26 = arith.constant 31 : i32
    %63 = arith.cmpi ule, %c16_i32_25, %c31_i32_26 : i32
    %64 = scf.if %63 -> (i32) {
      %81 = arith.shrui %62, %c16_i32_25 : i32
      scf.yield %81 : i32
    } else {
      %c0_i32_37 = arith.constant 0 : i32
      scf.yield %c0_i32_37 : i32
    }
    %c1_i32_27 = arith.constant 1 : i32
    %65 = arith.addi %64, %c1_i32_27 : i32
    llvm.store %65, %1 : i32, !llvm.ptr
    %c0_i32_28 = arith.constant 0 : i32
    %66 = call @dora_fn_wasm_memory_grow(%arg0, %65, %c0_i32_28) : (!llvm.ptr, i32, i32) -> i32
    %c-1_i32_29 = arith.constant -1 : i32
    %67 = arith.cmpi eq, %66, %c-1_i32_29 : i32
    %68 = arith.extui %67 : i1 to i32
    %c0_i32_30 = arith.constant 0 : i32
    %69 = arith.cmpi ne, %68, %c0_i32_30 : i32
    cf.cond_br %69, ^bb5, ^bb9
  ^bb9:  // pred: ^bb8
    %c0_i32_31 = arith.constant 0 : i32
    %c0_i32_32 = arith.constant 0 : i32
    %c1050728_i64_33 = arith.constant 1050728 : i64
    %70 = arith.extui %c0_i32_32 : i32 to i64
    %71 = arith.addi %70, %c1050728_i64_33 : i64
    %72 = llvm.getelementptr %8[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %73 = llvm.load %72 : !llvm.ptr -> i32
    %74 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32_34 = arith.constant 16 : i32
    %c31_i32_35 = arith.constant 31 : i32
    %75 = arith.cmpi ule, %c16_i32_34, %c31_i32_35 : i32
    %76 = scf.if %75 -> (i32) {
      %81 = arith.shli %74, %c16_i32_34 : i32
      scf.yield %81 : i32
    } else {
      %c0_i32_37 = arith.constant 0 : i32
      scf.yield %c0_i32_37 : i32
    }
    %77 = arith.subi %73, %76 : i32
    %c1050728_i64_36 = arith.constant 1050728 : i64
    %78 = arith.extui %c0_i32_31 : i32 to i64
    %79 = arith.addi %78, %c1050728_i64_36 : i64
    %80 = llvm.getelementptr %8[%79] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %77, %80 : i32, !llvm.ptr
    cf.br ^bb7
  }
  func.func @f75(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %6 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %7 = arith.extui %6 : i32 to i64
    %8 = arith.addi %7, %c4_i64 : i64
    %9 = llvm.getelementptr %4[%8] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> i32
    %c4_i64_1 = arith.constant 4 : i64
    %11 = arith.extui %5 : i32 to i64
    %12 = arith.addi %11, %c4_i64_1 : i64
    %13 = llvm.getelementptr %4[%12] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %10, %13 : i32, !llvm.ptr
    %14 = llvm.load %0 : !llvm.ptr -> i32
    %15 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %16 = arith.extui %15 : i32 to i64
    %17 = arith.addi %16, %c8_i64 : i64
    %18 = llvm.getelementptr %4[%17] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %19 = llvm.load %18 : !llvm.ptr -> i32
    %c5_i32 = arith.constant 5 : i32
    %c31_i32 = arith.constant 31 : i32
    %20 = arith.cmpi ule, %c5_i32, %c31_i32 : i32
    %21 = scf.if %20 -> (i32) {
      %36 = arith.shli %19, %c5_i32 : i32
      scf.yield %36 : i32
    } else {
      %c0_i32 = arith.constant 0 : i32
      scf.yield %c0_i32 : i32
    }
    %c8_i64_2 = arith.constant 8 : i64
    %22 = arith.extui %14 : i32 to i64
    %23 = arith.addi %22, %c8_i64_2 : i64
    %24 = llvm.getelementptr %4[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %21, %24 : i32, !llvm.ptr
    %25 = llvm.load %0 : !llvm.ptr -> i32
    %26 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %27 = arith.extui %26 : i32 to i64
    %28 = arith.addi %27, %c0_i64 : i64
    %29 = llvm.getelementptr %4[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %30 = llvm.load %29 : !llvm.ptr -> i32
    %c5_i32_3 = arith.constant 5 : i32
    %c31_i32_4 = arith.constant 31 : i32
    %31 = arith.cmpi ule, %c5_i32_3, %c31_i32_4 : i32
    %32 = scf.if %31 -> (i32) {
      %36 = arith.shli %30, %c5_i32_3 : i32
      scf.yield %36 : i32
    } else {
      %c0_i32 = arith.constant 0 : i32
      scf.yield %c0_i32 : i32
    }
    %c0_i64_5 = arith.constant 0 : i64
    %33 = arith.extui %25 : i32 to i64
    %34 = arith.addi %33, %c0_i64_5 : i64
    %35 = llvm.getelementptr %4[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %32, %35 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f76(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %8 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %10 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.getelementptr %10[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %13 = llvm.load %9 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %14 = arith.subi %13, %c32_i32 : i32
    llvm.store %14, %4 : i32, !llvm.ptr
    llvm.store %14, %9 : i32, !llvm.ptr
    %15 = llvm.load %2 : !llvm.ptr -> i32
    %16 = llvm.load %3 : !llvm.ptr -> i32
    %17 = arith.addi %15, %16 : i32
    llvm.store %17, %3 : i32, !llvm.ptr
    %18 = llvm.load %2 : !llvm.ptr -> i32
    %19 = arith.cmpi uge, %17, %18 : i32
    %20 = arith.extui %19 : i1 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %21 = arith.cmpi ne, %20, %c0_i32_7 : i32
    cf.cond_br %21, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 3 preds: ^bb5, ^bb9, ^bb10
    %22 = llvm.load %0 : !llvm.ptr -> i32
    %23 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %24 = arith.extui %22 : i32 to i64
    %25 = arith.addi %24, %c4_i64 : i64
    %26 = llvm.getelementptr %12[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %23, %26 : i32, !llvm.ptr
    %27 = llvm.load %0 : !llvm.ptr -> i32
    %28 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %29 = arith.extui %27 : i32 to i64
    %30 = arith.addi %29, %c0_i64 : i64
    %31 = llvm.getelementptr %12[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %28, %31 : i32, !llvm.ptr
    %32 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_8 = arith.constant 32 : i32
    %33 = arith.addi %32, %c32_i32_8 : i32
    llvm.store %33, %9 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %5 : i32, !llvm.ptr
    %34 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c0_i64_9 : i64
    %37 = llvm.getelementptr %12[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %38 = llvm.load %37 : !llvm.ptr -> i32
    llvm.store %38, %6 : i32, !llvm.ptr
    %c1_i32_10 = arith.constant 1 : i32
    %c31_i32 = arith.constant 31 : i32
    %39 = arith.cmpi ule, %c1_i32_10, %c31_i32 : i32
    %40 = scf.if %39 -> (i32) {
      %120 = arith.shli %38, %c1_i32_10 : i32
      scf.yield %120 : i32
    } else {
      %c0_i32_26 = arith.constant 0 : i32
      scf.yield %c0_i32_26 : i32
    }
    llvm.store %40, %2 : i32, !llvm.ptr
    %41 = llvm.load %3 : !llvm.ptr -> i32
    %42 = llvm.load %2 : !llvm.ptr -> i32
    %43 = llvm.load %3 : !llvm.ptr -> i32
    %44 = arith.cmpi ugt, %42, %43 : i32
    %45 = arith.extui %44 : i1 to i32
    %c0_i32_11 = arith.constant 0 : i32
    %46 = arith.cmpi ne, %45, %c0_i32_11 : i32
    %47 = arith.select %46, %40, %41 : i32
    llvm.store %47, %2 : i32, !llvm.ptr
    %c4_i32 = arith.constant 4 : i32
    %48 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i32_12 = arith.constant 4 : i32
    %49 = arith.cmpi ugt, %48, %c4_i32_12 : i32
    %50 = arith.extui %49 : i1 to i32
    %c0_i32_13 = arith.constant 0 : i32
    %51 = arith.cmpi ne, %50, %c0_i32_13 : i32
    %52 = arith.select %51, %47, %c4_i32 : i32
    llvm.store %52, %7 : i32, !llvm.ptr
    %c5_i32 = arith.constant 5 : i32
    %c31_i32_14 = arith.constant 31 : i32
    %53 = arith.cmpi ule, %c5_i32, %c31_i32_14 : i32
    %54 = scf.if %53 -> (i32) {
      %120 = arith.shli %52, %c5_i32 : i32
      scf.yield %120 : i32
    } else {
      %c0_i32_26 = arith.constant 0 : i32
      scf.yield %c0_i32_26 : i32
    }
    llvm.store %54, %3 : i32, !llvm.ptr
    %55 = llvm.load %2 : !llvm.ptr -> i32
    %c67108864_i32 = arith.constant 67108864 : i32
    %56 = arith.cmpi ult, %55, %c67108864_i32 : i32
    %57 = arith.extui %56 : i1 to i32
    llvm.store %57, %2 : i32, !llvm.ptr
    %58 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %59 = arith.cmpi ne, %58, %c0_i32_15 : i32
    cf.cond_br %59, ^bb7, ^bb8
  ^bb5:  // pred: ^bb1
    %c0_i32_16 = arith.constant 0 : i32
    llvm.store %c0_i32_16, %2 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb6:  // 2 preds: ^bb7, ^bb8
    %60 = llvm.load %4 : !llvm.ptr -> i32
    %61 = llvm.load %5 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %62 = arith.extui %60 : i32 to i64
    %63 = arith.addi %62, %c24_i64 : i64
    %64 = llvm.getelementptr %12[%63] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %61, %64 : i32, !llvm.ptr
    %65 = llvm.load %4 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %66 = arith.addi %65, %c8_i32 : i32
    %67 = llvm.load %2 : !llvm.ptr -> i32
    %68 = llvm.load %3 : !llvm.ptr -> i32
    %69 = llvm.load %4 : !llvm.ptr -> i32
    %c20_i32 = arith.constant 20 : i32
    %70 = arith.addi %69, %c20_i32 : i32
    %71 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_17 = arith.constant 8 : i32
    %72 = arith.addi %71, %c8_i32_17 : i32
    call @f94(%arg0, %66, %67, %68, %70, %72) : (!llvm.ptr, i32, i32, i32, i32, i32) -> ()
    %73 = llvm.load %4 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %74 = arith.extui %73 : i32 to i64
    %75 = arith.addi %74, %c8_i64 : i64
    %76 = llvm.getelementptr %12[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %77 = llvm.load %76 : !llvm.ptr -> i32
    %c0_i32_18 = arith.constant 0 : i32
    %78 = arith.cmpi ne, %77, %c0_i32_18 : i32
    cf.cond_br %78, ^bb9, ^bb10
  ^bb7:  // pred: ^bb4
    %79 = llvm.load %4 : !llvm.ptr -> i32
    %80 = llvm.load %6 : !llvm.ptr -> i32
    %c5_i32_19 = arith.constant 5 : i32
    %c31_i32_20 = arith.constant 31 : i32
    %81 = arith.cmpi ule, %c5_i32_19, %c31_i32_20 : i32
    %82 = scf.if %81 -> (i32) {
      %120 = arith.shli %80, %c5_i32_19 : i32
      scf.yield %120 : i32
    } else {
      %c0_i32_26 = arith.constant 0 : i32
      scf.yield %c0_i32_26 : i32
    }
    %c28_i64 = arith.constant 28 : i64
    %83 = arith.extui %79 : i32 to i64
    %84 = arith.addi %83, %c28_i64 : i64
    %85 = llvm.getelementptr %12[%84] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %82, %85 : i32, !llvm.ptr
    %86 = llvm.load %4 : !llvm.ptr -> i32
    %87 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_21 = arith.constant 4 : i64
    %88 = arith.extui %87 : i32 to i64
    %89 = arith.addi %88, %c4_i64_21 : i64
    %90 = llvm.getelementptr %12[%89] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %91 = llvm.load %90 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %92 = arith.extui %86 : i32 to i64
    %93 = arith.addi %92, %c20_i64 : i64
    %94 = llvm.getelementptr %12[%93] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %91, %94 : i32, !llvm.ptr
    cf.br ^bb6
  ^bb8:  // pred: ^bb4
    %c0_i32_22 = arith.constant 0 : i32
    llvm.store %c0_i32_22, %5 : i32, !llvm.ptr
    cf.br ^bb6
  ^bb9:  // pred: ^bb6
    %95 = llvm.load %4 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %96 = arith.extui %95 : i32 to i64
    %97 = arith.addi %96, %c16_i64 : i64
    %98 = llvm.getelementptr %12[%97] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %99 = llvm.load %98 : !llvm.ptr -> i32
    llvm.store %99, %1 : i32, !llvm.ptr
    %100 = llvm.load %4 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %101 = arith.extui %100 : i32 to i64
    %102 = arith.addi %101, %c12_i64 : i64
    %103 = llvm.getelementptr %12[%102] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %104 = llvm.load %103 : !llvm.ptr -> i32
    llvm.store %104, %2 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb10:  // pred: ^bb6
    %105 = llvm.load %4 : !llvm.ptr -> i32
    %c12_i64_23 = arith.constant 12 : i64
    %106 = arith.extui %105 : i32 to i64
    %107 = arith.addi %106, %c12_i64_23 : i64
    %108 = llvm.getelementptr %12[%107] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %109 = llvm.load %108 : !llvm.ptr -> i32
    llvm.store %109, %2 : i32, !llvm.ptr
    %110 = llvm.load %1 : !llvm.ptr -> i32
    %111 = llvm.load %7 : !llvm.ptr -> i32
    %c0_i64_24 = arith.constant 0 : i64
    %112 = arith.extui %110 : i32 to i64
    %113 = arith.addi %112, %c0_i64_24 : i64
    %114 = llvm.getelementptr %12[%113] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %111, %114 : i32, !llvm.ptr
    %115 = llvm.load %1 : !llvm.ptr -> i32
    %116 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i64_25 = arith.constant 4 : i64
    %117 = arith.extui %115 : i32 to i64
    %118 = arith.addi %117, %c4_i64_25 : i64
    %119 = llvm.getelementptr %12[%118] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %116, %119 : i32, !llvm.ptr
    %c-2147483647_i32 = arith.constant -2147483647 : i32
    llvm.store %c-2147483647_i32, %2 : i32, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f77(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %8 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %10 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.getelementptr %10[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %13 = llvm.load %9 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %14 = arith.subi %13, %c32_i32 : i32
    llvm.store %14, %4 : i32, !llvm.ptr
    llvm.store %14, %9 : i32, !llvm.ptr
    %15 = llvm.load %2 : !llvm.ptr -> i32
    %16 = llvm.load %3 : !llvm.ptr -> i32
    %17 = arith.addi %15, %16 : i32
    llvm.store %17, %3 : i32, !llvm.ptr
    %18 = llvm.load %2 : !llvm.ptr -> i32
    %19 = arith.cmpi uge, %17, %18 : i32
    %20 = arith.extui %19 : i1 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %21 = arith.cmpi ne, %20, %c0_i32_7 : i32
    cf.cond_br %21, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 3 preds: ^bb5, ^bb9, ^bb10
    %22 = llvm.load %0 : !llvm.ptr -> i32
    %23 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %24 = arith.extui %22 : i32 to i64
    %25 = arith.addi %24, %c4_i64 : i64
    %26 = llvm.getelementptr %12[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %23, %26 : i32, !llvm.ptr
    %27 = llvm.load %0 : !llvm.ptr -> i32
    %28 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %29 = arith.extui %27 : i32 to i64
    %30 = arith.addi %29, %c0_i64 : i64
    %31 = llvm.getelementptr %12[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %28, %31 : i32, !llvm.ptr
    %32 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32_8 = arith.constant 32 : i32
    %33 = arith.addi %32, %c32_i32_8 : i32
    llvm.store %33, %9 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %c4_i32 = arith.constant 4 : i32
    llvm.store %c4_i32, %5 : i32, !llvm.ptr
    %34 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c0_i64_9 : i64
    %37 = llvm.getelementptr %12[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %38 = llvm.load %37 : !llvm.ptr -> i32
    llvm.store %38, %6 : i32, !llvm.ptr
    %c1_i32 = arith.constant 1 : i32
    %c31_i32 = arith.constant 31 : i32
    %39 = arith.cmpi ule, %c1_i32, %c31_i32 : i32
    %40 = scf.if %39 -> (i32) {
      %122 = arith.shli %38, %c1_i32 : i32
      scf.yield %122 : i32
    } else {
      %c0_i32_28 = arith.constant 0 : i32
      scf.yield %c0_i32_28 : i32
    }
    llvm.store %40, %2 : i32, !llvm.ptr
    %41 = llvm.load %3 : !llvm.ptr -> i32
    %42 = llvm.load %2 : !llvm.ptr -> i32
    %43 = llvm.load %3 : !llvm.ptr -> i32
    %44 = arith.cmpi ugt, %42, %43 : i32
    %45 = arith.extui %44 : i1 to i32
    %c0_i32_10 = arith.constant 0 : i32
    %46 = arith.cmpi ne, %45, %c0_i32_10 : i32
    %47 = arith.select %46, %40, %41 : i32
    llvm.store %47, %2 : i32, !llvm.ptr
    %c4_i32_11 = arith.constant 4 : i32
    %48 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i32_12 = arith.constant 4 : i32
    %49 = arith.cmpi ugt, %48, %c4_i32_12 : i32
    %50 = arith.extui %49 : i1 to i32
    %c0_i32_13 = arith.constant 0 : i32
    %51 = arith.cmpi ne, %50, %c0_i32_13 : i32
    %52 = arith.select %51, %47, %c4_i32_11 : i32
    llvm.store %52, %7 : i32, !llvm.ptr
    %c2_i32 = arith.constant 2 : i32
    %c31_i32_14 = arith.constant 31 : i32
    %53 = arith.cmpi ule, %c2_i32, %c31_i32_14 : i32
    %54 = scf.if %53 -> (i32) {
      %122 = arith.shli %52, %c2_i32 : i32
      scf.yield %122 : i32
    } else {
      %c0_i32_28 = arith.constant 0 : i32
      scf.yield %c0_i32_28 : i32
    }
    llvm.store %54, %3 : i32, !llvm.ptr
    %55 = llvm.load %2 : !llvm.ptr -> i32
    %c536870912_i32 = arith.constant 536870912 : i32
    %56 = arith.cmpi ult, %55, %c536870912_i32 : i32
    %57 = arith.extui %56 : i1 to i32
    %c2_i32_15 = arith.constant 2 : i32
    %c31_i32_16 = arith.constant 31 : i32
    %58 = arith.cmpi ule, %c2_i32_15, %c31_i32_16 : i32
    %59 = scf.if %58 -> (i32) {
      %122 = arith.shli %57, %c2_i32_15 : i32
      scf.yield %122 : i32
    } else {
      %c0_i32_28 = arith.constant 0 : i32
      scf.yield %c0_i32_28 : i32
    }
    llvm.store %59, %2 : i32, !llvm.ptr
    %60 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i32_17 = arith.constant 0 : i32
    %61 = arith.cmpi ne, %60, %c0_i32_17 : i32
    cf.cond_br %61, ^bb7, ^bb8
  ^bb5:  // pred: ^bb1
    %c0_i32_18 = arith.constant 0 : i32
    llvm.store %c0_i32_18, %2 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb6:  // 2 preds: ^bb7, ^bb8
    %62 = llvm.load %4 : !llvm.ptr -> i32
    %63 = llvm.load %5 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %64 = arith.extui %62 : i32 to i64
    %65 = arith.addi %64, %c24_i64 : i64
    %66 = llvm.getelementptr %12[%65] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %63, %66 : i32, !llvm.ptr
    %67 = llvm.load %4 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %68 = arith.addi %67, %c8_i32 : i32
    %69 = llvm.load %2 : !llvm.ptr -> i32
    %70 = llvm.load %3 : !llvm.ptr -> i32
    %71 = llvm.load %4 : !llvm.ptr -> i32
    %c20_i32 = arith.constant 20 : i32
    %72 = arith.addi %71, %c20_i32 : i32
    %73 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_19 = arith.constant 8 : i32
    %74 = arith.addi %73, %c8_i32_19 : i32
    call @f94(%arg0, %68, %69, %70, %72, %74) : (!llvm.ptr, i32, i32, i32, i32, i32) -> ()
    %75 = llvm.load %4 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %76 = arith.extui %75 : i32 to i64
    %77 = arith.addi %76, %c8_i64 : i64
    %78 = llvm.getelementptr %12[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %79 = llvm.load %78 : !llvm.ptr -> i32
    %c0_i32_20 = arith.constant 0 : i32
    %80 = arith.cmpi ne, %79, %c0_i32_20 : i32
    cf.cond_br %80, ^bb9, ^bb10
  ^bb7:  // pred: ^bb4
    %81 = llvm.load %4 : !llvm.ptr -> i32
    %82 = llvm.load %6 : !llvm.ptr -> i32
    %c2_i32_21 = arith.constant 2 : i32
    %c31_i32_22 = arith.constant 31 : i32
    %83 = arith.cmpi ule, %c2_i32_21, %c31_i32_22 : i32
    %84 = scf.if %83 -> (i32) {
      %122 = arith.shli %82, %c2_i32_21 : i32
      scf.yield %122 : i32
    } else {
      %c0_i32_28 = arith.constant 0 : i32
      scf.yield %c0_i32_28 : i32
    }
    %c28_i64 = arith.constant 28 : i64
    %85 = arith.extui %81 : i32 to i64
    %86 = arith.addi %85, %c28_i64 : i64
    %87 = llvm.getelementptr %12[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %84, %87 : i32, !llvm.ptr
    %88 = llvm.load %4 : !llvm.ptr -> i32
    %89 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_23 = arith.constant 4 : i64
    %90 = arith.extui %89 : i32 to i64
    %91 = arith.addi %90, %c4_i64_23 : i64
    %92 = llvm.getelementptr %12[%91] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %93 = llvm.load %92 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %94 = arith.extui %88 : i32 to i64
    %95 = arith.addi %94, %c20_i64 : i64
    %96 = llvm.getelementptr %12[%95] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %93, %96 : i32, !llvm.ptr
    cf.br ^bb6
  ^bb8:  // pred: ^bb4
    %c0_i32_24 = arith.constant 0 : i32
    llvm.store %c0_i32_24, %5 : i32, !llvm.ptr
    cf.br ^bb6
  ^bb9:  // pred: ^bb6
    %97 = llvm.load %4 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %98 = arith.extui %97 : i32 to i64
    %99 = arith.addi %98, %c16_i64 : i64
    %100 = llvm.getelementptr %12[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i32
    llvm.store %101, %1 : i32, !llvm.ptr
    %102 = llvm.load %4 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %103 = arith.extui %102 : i32 to i64
    %104 = arith.addi %103, %c12_i64 : i64
    %105 = llvm.getelementptr %12[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %106 = llvm.load %105 : !llvm.ptr -> i32
    llvm.store %106, %2 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb10:  // pred: ^bb6
    %107 = llvm.load %4 : !llvm.ptr -> i32
    %c12_i64_25 = arith.constant 12 : i64
    %108 = arith.extui %107 : i32 to i64
    %109 = arith.addi %108, %c12_i64_25 : i64
    %110 = llvm.getelementptr %12[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %111 = llvm.load %110 : !llvm.ptr -> i32
    llvm.store %111, %2 : i32, !llvm.ptr
    %112 = llvm.load %1 : !llvm.ptr -> i32
    %113 = llvm.load %7 : !llvm.ptr -> i32
    %c0_i64_26 = arith.constant 0 : i64
    %114 = arith.extui %112 : i32 to i64
    %115 = arith.addi %114, %c0_i64_26 : i64
    %116 = llvm.getelementptr %12[%115] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %113, %116 : i32, !llvm.ptr
    %117 = llvm.load %1 : !llvm.ptr -> i32
    %118 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i64_27 = arith.constant 4 : i64
    %119 = arith.extui %117 : i32 to i64
    %120 = arith.addi %119, %c4_i64_27 : i64
    %121 = llvm.getelementptr %12[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %118, %121 : i32, !llvm.ptr
    %c-2147483647_i32 = arith.constant -2147483647 : i32
    llvm.store %c-2147483647_i32, %2 : i32, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f78(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_3 = arith.constant 0 : i32
    %8 = arith.cmpi eq, %7, %c0_i32_3 : i32
    %9 = arith.extui %8 : i1 to i32
    %c0_i32_4 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_4 : i32
    cf.cond_br %10, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 3 preds: ^bb4, ^bb6, ^bb13
    %11 = llvm.load %0 : !llvm.ptr -> i32
    %12 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %13 = arith.extui %11 : i32 to i64
    %14 = arith.addi %13, %c0_i64 : i64
    %15 = llvm.getelementptr %6[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %12, %15 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %16 = llvm.load %0 : !llvm.ptr -> i32
    %c17179869184_i64 = arith.constant 17179869184 : i64
    %c4_i64 = arith.constant 4 : i64
    %17 = arith.extui %16 : i32 to i64
    %18 = arith.addi %17, %c4_i64 : i64
    %19 = llvm.getelementptr %6[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c17179869184_i64, %19 : i64, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    llvm.store %c0_i32_5, %1 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %20 = llvm.load %1 : !llvm.ptr -> i32
    %c536870912_i32 = arith.constant 536870912 : i32
    %21 = arith.cmpi ult, %20, %c536870912_i32 : i32
    %22 = arith.extui %21 : i1 to i32
    %c0_i32_6 = arith.constant 0 : i32
    %23 = arith.cmpi ne, %22, %c0_i32_6 : i32
    cf.cond_br %23, ^bb7, ^bb8
  ^bb6:  // 2 preds: ^bb8, ^bb12
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %1 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb7:  // pred: ^bb5
    %24 = llvm.load %1 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c31_i32 = arith.constant 31 : i32
    %25 = arith.cmpi ule, %c2_i32, %c31_i32 : i32
    %26 = scf.if %25 -> (i32) {
      %65 = arith.shli %24, %c2_i32 : i32
      scf.yield %65 : i32
    } else {
      %c0_i32_19 = arith.constant 0 : i32
      scf.yield %c0_i32_19 : i32
    }
    llvm.store %26, %3 : i32, !llvm.ptr
    %27 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_7 = arith.constant 0 : i32
    %28 = arith.cmpi ne, %27, %c0_i32_7 : i32
    cf.cond_br %28, ^bb10, ^bb11
  ^bb8:  // pred: ^bb5
    %29 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_8 = arith.constant 0 : i32
    %c4_i64_9 = arith.constant 4 : i64
    %30 = arith.extui %29 : i32 to i64
    %31 = arith.addi %30, %c4_i64_9 : i64
    %32 = llvm.getelementptr %6[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_8, %32 : i32, !llvm.ptr
    cf.br ^bb6
  ^bb9:  // 2 preds: ^bb10, ^bb11
    %33 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_10 = arith.constant 0 : i32
    %34 = arith.cmpi eq, %33, %c0_i32_10 : i32
    %35 = arith.extui %34 : i1 to i32
    %c0_i32_11 = arith.constant 0 : i32
    %36 = arith.cmpi ne, %35, %c0_i32_11 : i32
    cf.cond_br %36, ^bb12, ^bb13
  ^bb10:  // pred: ^bb7
    %37 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %38 = call @f71(%arg0, %37, %c4_i32) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %38, %2 : i32, !llvm.ptr
    cf.br ^bb9
  ^bb11:  // pred: ^bb7
    %c0_i32_12 = arith.constant 0 : i32
    %c1050633_i64 = arith.constant 1050633 : i64
    %39 = arith.extui %c0_i32_12 : i32 to i64
    %40 = arith.addi %39, %c1050633_i64 : i64
    %41 = llvm.getelementptr %6[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %42 = llvm.load %41 : !llvm.ptr -> i8
    %43 = arith.extui %42 : i8 to i32
    %44 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i32_13 = arith.constant 4 : i32
    %45 = call @f71(%arg0, %44, %c4_i32_13) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %45, %2 : i32, !llvm.ptr
    cf.br ^bb9
  ^bb12:  // pred: ^bb9
    %46 = llvm.load %0 : !llvm.ptr -> i32
    %47 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %48 = arith.extui %46 : i32 to i64
    %49 = arith.addi %48, %c8_i64 : i64
    %50 = llvm.getelementptr %6[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %47, %50 : i32, !llvm.ptr
    %51 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i32_14 = arith.constant 4 : i32
    %c4_i64_15 = arith.constant 4 : i64
    %52 = arith.extui %51 : i32 to i64
    %53 = arith.addi %52, %c4_i64_15 : i64
    %54 = llvm.getelementptr %6[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c4_i32_14, %54 : i32, !llvm.ptr
    cf.br ^bb6
  ^bb13:  // pred: ^bb9
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %56 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_16 = arith.constant 8 : i64
    %57 = arith.extui %55 : i32 to i64
    %58 = arith.addi %57, %c8_i64_16 : i64
    %59 = llvm.getelementptr %6[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %56, %59 : i32, !llvm.ptr
    %60 = llvm.load %0 : !llvm.ptr -> i32
    %61 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_17 = arith.constant 4 : i64
    %62 = arith.extui %60 : i32 to i64
    %63 = arith.addi %62, %c4_i64_17 : i64
    %64 = llvm.getelementptr %6[%63] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %61, %64 : i32, !llvm.ptr
    %c0_i32_18 = arith.constant 0 : i32
    llvm.store %c0_i32_18, %1 : i32, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f79(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_3 = arith.constant 0 : i32
    %8 = arith.cmpi eq, %7, %c0_i32_3 : i32
    %9 = arith.extui %8 : i1 to i32
    %c0_i32_4 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_4 : i32
    cf.cond_br %10, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 4 preds: ^bb4, ^bb7, ^bb11, ^bb12
    %11 = llvm.load %0 : !llvm.ptr -> i32
    %12 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %13 = arith.extui %11 : i32 to i64
    %14 = arith.addi %13, %c0_i64 : i64
    %15 = llvm.getelementptr %6[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %12, %15 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %16 = llvm.load %0 : !llvm.ptr -> i32
    %c4294967296_i64 = arith.constant 4294967296 : i64
    %c4_i64 = arith.constant 4 : i64
    %17 = arith.extui %16 : i32 to i64
    %18 = arith.addi %17, %c4_i64 : i64
    %19 = llvm.getelementptr %6[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c4294967296_i64, %19 : i64, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    llvm.store %c0_i32_5, %1 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %20 = llvm.load %1 : !llvm.ptr -> i32
    %c67108864_i32 = arith.constant 67108864 : i32
    %21 = arith.cmpi ult, %20, %c67108864_i32 : i32
    %22 = arith.extui %21 : i1 to i32
    %c0_i32_6 = arith.constant 0 : i32
    %23 = arith.cmpi ne, %22, %c0_i32_6 : i32
    cf.cond_br %23, ^bb6, ^bb7
  ^bb6:  // pred: ^bb5
    %24 = llvm.load %1 : !llvm.ptr -> i32
    %c5_i32 = arith.constant 5 : i32
    %c31_i32 = arith.constant 31 : i32
    %25 = arith.cmpi ule, %c5_i32, %c31_i32 : i32
    %26 = scf.if %25 -> (i32) {
      %65 = arith.shli %24, %c5_i32 : i32
      scf.yield %65 : i32
    } else {
      %c0_i32_21 = arith.constant 0 : i32
      scf.yield %c0_i32_21 : i32
    }
    llvm.store %26, %3 : i32, !llvm.ptr
    %27 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_7 = arith.constant 0 : i32
    %28 = arith.cmpi ne, %27, %c0_i32_7 : i32
    cf.cond_br %28, ^bb9, ^bb10
  ^bb7:  // pred: ^bb5
    %29 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_8 = arith.constant 0 : i32
    %c4_i64_9 = arith.constant 4 : i64
    %30 = arith.extui %29 : i32 to i64
    %31 = arith.addi %30, %c4_i64_9 : i64
    %32 = llvm.getelementptr %6[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_8, %32 : i32, !llvm.ptr
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %1 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb8:  // 2 preds: ^bb9, ^bb10
    %33 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_10 = arith.constant 0 : i32
    %34 = arith.cmpi eq, %33, %c0_i32_10 : i32
    %35 = arith.extui %34 : i1 to i32
    %c0_i32_11 = arith.constant 0 : i32
    %36 = arith.cmpi ne, %35, %c0_i32_11 : i32
    cf.cond_br %36, ^bb11, ^bb12
  ^bb9:  // pred: ^bb6
    %37 = llvm.load %3 : !llvm.ptr -> i32
    %c1_i32_12 = arith.constant 1 : i32
    %38 = call @f71(%arg0, %37, %c1_i32_12) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %38, %2 : i32, !llvm.ptr
    cf.br ^bb8
  ^bb10:  // pred: ^bb6
    %c0_i32_13 = arith.constant 0 : i32
    %c1050633_i64 = arith.constant 1050633 : i64
    %39 = arith.extui %c0_i32_13 : i32 to i64
    %40 = arith.addi %39, %c1050633_i64 : i64
    %41 = llvm.getelementptr %6[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %42 = llvm.load %41 : !llvm.ptr -> i8
    %43 = arith.extui %42 : i8 to i32
    %44 = llvm.load %3 : !llvm.ptr -> i32
    %c1_i32_14 = arith.constant 1 : i32
    %45 = call @f71(%arg0, %44, %c1_i32_14) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %45, %2 : i32, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb8
    %46 = llvm.load %0 : !llvm.ptr -> i32
    %47 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %48 = arith.extui %46 : i32 to i64
    %49 = arith.addi %48, %c8_i64 : i64
    %50 = llvm.getelementptr %6[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %47, %50 : i32, !llvm.ptr
    %c1_i32_15 = arith.constant 1 : i32
    llvm.store %c1_i32_15, %1 : i32, !llvm.ptr
    %51 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i32_16 = arith.constant 1 : i32
    %c4_i64_17 = arith.constant 4 : i64
    %52 = arith.extui %51 : i32 to i64
    %53 = arith.addi %52, %c4_i64_17 : i64
    %54 = llvm.getelementptr %6[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i32_16, %54 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb12:  // pred: ^bb8
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %56 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_18 = arith.constant 8 : i64
    %57 = arith.extui %55 : i32 to i64
    %58 = arith.addi %57, %c8_i64_18 : i64
    %59 = llvm.getelementptr %6[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %56, %59 : i32, !llvm.ptr
    %60 = llvm.load %0 : !llvm.ptr -> i32
    %61 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_19 = arith.constant 4 : i64
    %62 = arith.extui %60 : i32 to i64
    %63 = arith.addi %62, %c4_i64_19 : i64
    %64 = llvm.getelementptr %6[%63] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %61, %64 : i32, !llvm.ptr
    %c0_i32_20 = arith.constant 0 : i32
    llvm.store %c0_i32_20, %1 : i32, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f80(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    %4 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %8 = arith.subi %7, %c16_i32 : i32
    llvm.store %8, %1 : i32, !llvm.ptr
    llvm.store %8, %3 : i32, !llvm.ptr
    %9 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %10 = arith.addi %9, %c8_i32 : i32
    %11 = llvm.load %0 : !llvm.ptr -> i32
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c0_i64 : i64
    %15 = llvm.getelementptr %6[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    call @f76(%arg0, %10, %11, %16, %c1_i32) : (!llvm.ptr, i32, i32, i32, i32) -> ()
    %17 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %18 = arith.extui %17 : i32 to i64
    %19 = arith.addi %18, %c8_i64 : i64
    %20 = llvm.getelementptr %6[%19] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %21 = llvm.load %20 : !llvm.ptr -> i32
    llvm.store %21, %0 : i32, !llvm.ptr
    %c-2147483647_i32 = arith.constant -2147483647 : i32
    %22 = arith.cmpi eq, %21, %c-2147483647_i32 : i32
    %23 = arith.extui %22 : i1 to i32
    %c0_i32_1 = arith.constant 0 : i32
    %24 = arith.cmpi ne, %23, %c0_i32_1 : i32
    cf.cond_br %24, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb1
    %25 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32_2 = arith.constant 16 : i32
    %26 = arith.addi %25, %c16_i32_2 : i32
    llvm.store %26, %3 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %27 = llvm.load %0 : !llvm.ptr -> i32
    %28 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c12_i64 : i64
    %31 = llvm.getelementptr %6[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %32 = llvm.load %31 : !llvm.ptr -> i32
    call @f126(%arg0, %27, %32) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  }
  func.func @f81(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    %4 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %8 = arith.subi %7, %c16_i32 : i32
    llvm.store %8, %1 : i32, !llvm.ptr
    llvm.store %8, %3 : i32, !llvm.ptr
    %9 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %10 = arith.addi %9, %c8_i32 : i32
    %11 = llvm.load %0 : !llvm.ptr -> i32
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c0_i64 : i64
    %15 = llvm.getelementptr %6[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    call @f77(%arg0, %10, %11, %16, %c1_i32) : (!llvm.ptr, i32, i32, i32, i32) -> ()
    %17 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %18 = arith.extui %17 : i32 to i64
    %19 = arith.addi %18, %c8_i64 : i64
    %20 = llvm.getelementptr %6[%19] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %21 = llvm.load %20 : !llvm.ptr -> i32
    llvm.store %21, %0 : i32, !llvm.ptr
    %c-2147483647_i32 = arith.constant -2147483647 : i32
    %22 = arith.cmpi eq, %21, %c-2147483647_i32 : i32
    %23 = arith.extui %22 : i1 to i32
    %c0_i32_1 = arith.constant 0 : i32
    %24 = arith.cmpi ne, %23, %c0_i32_1 : i32
    cf.cond_br %24, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb1
    %25 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32_2 = arith.constant 16 : i32
    %26 = arith.addi %25, %c16_i32_2 : i32
    llvm.store %26, %3 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %27 = llvm.load %0 : !llvm.ptr -> i32
    %28 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c12_i64 : i64
    %31 = llvm.getelementptr %6[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %32 = llvm.load %31 : !llvm.ptr -> i32
    call @f126(%arg0, %27, %32) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  }
  func.func @f82(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f83(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %6 = arith.extui %5 : i32 to i64
    %7 = arith.addi %6, %c0_i64 : i64
    %8 = llvm.getelementptr %4[%7] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> i32
    llvm.store %9, %1 : i32, !llvm.ptr
    %c0_i32_1 = arith.constant 0 : i32
    %10 = arith.cmpi eq, %9, %c0_i32_1 : i32
    %11 = arith.extui %10 : i1 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %12 = arith.cmpi ne, %11, %c0_i32_2 : i32
    cf.cond_br %12, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c4_i64 : i64
    %16 = llvm.getelementptr %4[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i32
    %18 = llvm.load %1 : !llvm.ptr -> i32
    %c5_i32 = arith.constant 5 : i32
    %c31_i32 = arith.constant 31 : i32
    %19 = arith.cmpi ule, %c5_i32, %c31_i32 : i32
    %20 = scf.if %19 -> (i32) {
      %21 = arith.shli %18, %c5_i32 : i32
      scf.yield %21 : i32
    } else {
      %c0_i32_3 = arith.constant 0 : i32
      scf.yield %c0_i32_3 : i32
    }
    %c1_i32 = arith.constant 1 : i32
    call @f72(%arg0, %17, %20, %c1_i32) : (!llvm.ptr, i32, i32, i32) -> ()
    cf.br ^bb3
  }
  func.func @f84(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %6 = arith.extui %5 : i32 to i64
    %7 = arith.addi %6, %c0_i64 : i64
    %8 = llvm.getelementptr %4[%7] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> i32
    llvm.store %9, %1 : i32, !llvm.ptr
    %c0_i32_1 = arith.constant 0 : i32
    %10 = arith.cmpi eq, %9, %c0_i32_1 : i32
    %11 = arith.extui %10 : i1 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %12 = arith.cmpi ne, %11, %c0_i32_2 : i32
    cf.cond_br %12, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c4_i64 : i64
    %16 = llvm.getelementptr %4[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i32
    %18 = llvm.load %1 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c31_i32 = arith.constant 31 : i32
    %19 = arith.cmpi ule, %c2_i32, %c31_i32 : i32
    %20 = scf.if %19 -> (i32) {
      %21 = arith.shli %18, %c2_i32 : i32
      scf.yield %21 : i32
    } else {
      %c0_i32_3 = arith.constant 0 : i32
      scf.yield %c0_i32_3 : i32
    }
    %c4_i32 = arith.constant 4 : i32
    call @f72(%arg0, %17, %20, %c4_i32) : (!llvm.ptr, i32, i32, i32) -> ()
    cf.br ^bb3
  }
  func.func @f85(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %12 = llvm.load %8 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %13 = arith.subi %12, %c16_i32 : i32
    llvm.store %13, %3 : i32, !llvm.ptr
    llvm.store %13, %8 : i32, !llvm.ptr
    %14 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %15 = arith.addi %14, %c4_i32 : i32
    %16 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %c31_i32 = arith.constant 31 : i32
    %17 = arith.cmpi ule, %c1_i32, %c31_i32 : i32
    %18 = scf.if %17 -> (i32) {
      %62 = arith.shli %16, %c1_i32 : i32
      scf.yield %62 : i32
    } else {
      %c0_i32_13 = arith.constant 0 : i32
      scf.yield %c0_i32_13 : i32
    }
    llvm.store %18, %4 : i32, !llvm.ptr
    %c0_i32_6 = arith.constant 0 : i32
    call @f95(%arg0, %15, %18, %c0_i32_6) : (!llvm.ptr, i32, i32, i32) -> ()
    %19 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %20 = arith.extui %19 : i32 to i64
    %21 = arith.addi %20, %c8_i64 : i64
    %22 = llvm.getelementptr %11[%21] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %23 = llvm.load %22 : !llvm.ptr -> i32
    llvm.store %23, %5 : i32, !llvm.ptr
    %24 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %25 = arith.extui %24 : i32 to i64
    %26 = arith.addi %25, %c4_i64 : i64
    %27 = llvm.getelementptr %11[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %28 = llvm.load %27 : !llvm.ptr -> i32
    %c0_i32_7 = arith.constant 0 : i32
    %29 = arith.cmpi eq, %28, %c0_i32_7 : i32
    %30 = arith.extui %29 : i1 to i32
    %c0_i32_8 = arith.constant 0 : i32
    %31 = arith.cmpi ne, %30, %c0_i32_8 : i32
    cf.cond_br %31, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb1
    %32 = llvm.load %1 : !llvm.ptr -> i32
    %33 = llvm.load %2 : !llvm.ptr -> i32
    %34 = llvm.load %3 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c12_i64 : i64
    %37 = llvm.getelementptr %11[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %38 = llvm.load %37 : !llvm.ptr -> i32
    llvm.store %38, %6 : i32, !llvm.ptr
    call @f92(%arg0, %32, %33, %38) : (!llvm.ptr, i32, i32, i32) -> ()
    %39 = llvm.load %0 : !llvm.ptr -> i32
    %40 = llvm.load %4 : !llvm.ptr -> i32
    %c8_i64_9 = arith.constant 8 : i64
    %41 = arith.extui %39 : i32 to i64
    %42 = arith.addi %41, %c8_i64_9 : i64
    %43 = llvm.getelementptr %11[%42] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %40, %43 : i32, !llvm.ptr
    %44 = llvm.load %0 : !llvm.ptr -> i32
    %45 = llvm.load %6 : !llvm.ptr -> i32
    %c4_i64_10 = arith.constant 4 : i64
    %46 = arith.extui %44 : i32 to i64
    %47 = arith.addi %46, %c4_i64_10 : i64
    %48 = llvm.getelementptr %11[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %45, %48 : i32, !llvm.ptr
    %49 = llvm.load %0 : !llvm.ptr -> i32
    %50 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %51 = arith.extui %49 : i32 to i64
    %52 = arith.addi %51, %c0_i64 : i64
    %53 = llvm.getelementptr %11[%52] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %50, %53 : i32, !llvm.ptr
    %54 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32_11 = arith.constant 16 : i32
    %55 = arith.addi %54, %c16_i32_11 : i32
    llvm.store %55, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %56 = llvm.load %5 : !llvm.ptr -> i32
    %57 = llvm.load %3 : !llvm.ptr -> i32
    %c12_i64_12 = arith.constant 12 : i64
    %58 = arith.extui %57 : i32 to i64
    %59 = arith.addi %58, %c12_i64_12 : i64
    %60 = llvm.getelementptr %11[%59] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %61 = llvm.load %60 : !llvm.ptr -> i32
    call @f126(%arg0, %56, %61) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  }
  func.func @f86(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %11 = llvm.load %7 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %12 = arith.subi %11, %c48_i32 : i32
    llvm.store %12, %2 : i32, !llvm.ptr
    llvm.store %12, %7 : i32, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    %c1050633_i64 = arith.constant 1050633 : i64
    %13 = arith.extui %c0_i32_5 : i32 to i64
    %14 = arith.addi %13, %c1050633_i64 : i64
    %15 = llvm.getelementptr %10[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i8
    %17 = arith.extui %16 : i8 to i32
    %c32_i32 = arith.constant 32 : i32
    %c1_i32 = arith.constant 1 : i32
    %18 = call @f71(%arg0, %c32_i32, %c1_i32) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %18, %3 : i32, !llvm.ptr
    %c0_i32_6 = arith.constant 0 : i32
    %19 = arith.cmpi eq, %18, %c0_i32_6 : i32
    %20 = arith.extui %19 : i1 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %21 = arith.cmpi ne, %20, %c0_i32_7 : i32
    cf.cond_br %21, ^bb4, ^bb5
  ^bb2:  // pred: ^bb7
    return
  ^bb3:  // pred: ^bb5
    %c4_i32 = arith.constant 4 : i32
    %c16_i32 = arith.constant 16 : i32
    call @f126(%arg0, %c4_i32, %c16_i32) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb4:  // pred: ^bb1
    %c1_i32_8 = arith.constant 1 : i32
    %c32_i32_9 = arith.constant 32 : i32
    call @f126(%arg0, %c1_i32_8, %c32_i32_9) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb5:  // pred: ^bb1
    %c0_i32_10 = arith.constant 0 : i32
    %c1050633_i64_11 = arith.constant 1050633 : i64
    %22 = arith.extui %c0_i32_10 : i32 to i64
    %23 = arith.addi %22, %c1050633_i64_11 : i64
    %24 = llvm.getelementptr %10[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %25 = llvm.load %24 : !llvm.ptr -> i8
    %26 = arith.extui %25 : i8 to i32
    %c16_i32_12 = arith.constant 16 : i32
    %c4_i32_13 = arith.constant 4 : i32
    %27 = call @f71(%arg0, %c16_i32_12, %c4_i32_13) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %27, %4 : i32, !llvm.ptr
    %c0_i32_14 = arith.constant 0 : i32
    %28 = arith.cmpi eq, %27, %c0_i32_14 : i32
    %29 = arith.extui %28 : i1 to i32
    %c0_i32_15 = arith.constant 0 : i32
    %30 = arith.cmpi ne, %29, %c0_i32_15 : i32
    cf.cond_br %30, ^bb3, ^bb6
  ^bb6:  // pred: ^bb5
    %31 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %c44_i64 = arith.constant 44 : i64
    %32 = arith.extui %31 : i32 to i64
    %33 = arith.addi %32, %c44_i64 : i64
    %34 = llvm.getelementptr %10[%33] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_16, %34 : i32, !llvm.ptr
    %35 = llvm.load %2 : !llvm.ptr -> i32
    %36 = llvm.load %4 : !llvm.ptr -> i32
    %c40_i64 = arith.constant 40 : i64
    %37 = arith.extui %35 : i32 to i64
    %38 = arith.addi %37, %c40_i64 : i64
    %39 = llvm.getelementptr %10[%38] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %36, %39 : i32, !llvm.ptr
    %40 = llvm.load %2 : !llvm.ptr -> i32
    %c17179869184_i64 = arith.constant 17179869184 : i64
    %c32_i64 = arith.constant 32 : i64
    %41 = arith.extui %40 : i32 to i64
    %42 = arith.addi %41, %c32_i64 : i64
    %43 = llvm.getelementptr %10[%42] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c17179869184_i64, %43 : i64, !llvm.ptr
    %44 = llvm.load %2 : !llvm.ptr -> i32
    %45 = llvm.load %3 : !llvm.ptr -> i32
    %c28_i64 = arith.constant 28 : i64
    %46 = arith.extui %44 : i32 to i64
    %47 = arith.addi %46, %c28_i64 : i64
    %48 = llvm.getelementptr %10[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %45, %48 : i32, !llvm.ptr
    %49 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32_17 = arith.constant 1 : i32
    %c24_i64 = arith.constant 24 : i64
    %50 = arith.extui %49 : i32 to i64
    %51 = arith.addi %50, %c24_i64 : i64
    %52 = llvm.getelementptr %10[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i32_17, %52 : i32, !llvm.ptr
    %53 = llvm.load %1 : !llvm.ptr -> i32
    %54 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %55 = arith.addi %54, %c24_i32 : i32
    call @f87(%arg0, %53, %55) : (!llvm.ptr, i32, i32) -> ()
    %56 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i64_18 = arith.constant 32 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c32_i64_18 : i64
    %59 = llvm.getelementptr %10[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i32
    llvm.store %60, %3 : i32, !llvm.ptr
    %61 = llvm.load %2 : !llvm.ptr -> i32
    %c28_i64_19 = arith.constant 28 : i64
    %62 = arith.extui %61 : i32 to i64
    %63 = arith.addi %62, %c28_i64_19 : i64
    %64 = llvm.getelementptr %10[%63] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i32
    llvm.store %65, %1 : i32, !llvm.ptr
    %66 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i64_20 = arith.constant 24 : i64
    %67 = arith.extui %66 : i32 to i64
    %68 = arith.addi %67, %c24_i64_20 : i64
    %69 = llvm.getelementptr %10[%68] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %70 = llvm.load %69 : !llvm.ptr -> i32
    llvm.store %70, %4 : i32, !llvm.ptr
    %71 = llvm.load %2 : !llvm.ptr -> i32
    %c36_i64 = arith.constant 36 : i64
    %72 = arith.extui %71 : i32 to i64
    %73 = arith.addi %72, %c36_i64 : i64
    %74 = llvm.getelementptr %10[%73] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %75 = llvm.load %74 : !llvm.ptr -> i32
    llvm.store %75, %5 : i32, !llvm.ptr
    %c0_i32_21 = arith.constant 0 : i32
    %76 = arith.cmpi eq, %75, %c0_i32_21 : i32
    %77 = arith.extui %76 : i1 to i32
    %c0_i32_22 = arith.constant 0 : i32
    %78 = arith.cmpi ne, %77, %c0_i32_22 : i32
    cf.cond_br %78, ^bb7, ^bb8
  ^bb7:  // 2 preds: ^bb6, ^bb8
    %79 = llvm.load %2 : !llvm.ptr -> i32
    %80 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %81 = arith.extui %79 : i32 to i64
    %82 = arith.addi %81, %c16_i64 : i64
    %83 = llvm.getelementptr %10[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %80, %83 : i32, !llvm.ptr
    %84 = llvm.load %2 : !llvm.ptr -> i32
    %85 = llvm.load %3 : !llvm.ptr -> i32
    %c5_i32 = arith.constant 5 : i32
    %c31_i32 = arith.constant 31 : i32
    %86 = arith.cmpi ule, %c5_i32, %c31_i32 : i32
    %87 = scf.if %86 -> (i32) {
      %127 = arith.shli %85, %c5_i32 : i32
      scf.yield %127 : i32
    } else {
      %c0_i32_33 = arith.constant 0 : i32
      scf.yield %c0_i32_33 : i32
    }
    llvm.store %87, %3 : i32, !llvm.ptr
    %c20_i64 = arith.constant 20 : i64
    %88 = arith.extui %84 : i32 to i64
    %89 = arith.addi %88, %c20_i64 : i64
    %90 = llvm.getelementptr %10[%89] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %87, %90 : i32, !llvm.ptr
    %91 = llvm.load %2 : !llvm.ptr -> i32
    %92 = llvm.load %4 : !llvm.ptr -> i32
    %c5_i32_23 = arith.constant 5 : i32
    %c31_i32_24 = arith.constant 31 : i32
    %93 = arith.cmpi ule, %c5_i32_23, %c31_i32_24 : i32
    %94 = scf.if %93 -> (i32) {
      %127 = arith.shli %92, %c5_i32_23 : i32
      scf.yield %127 : i32
    } else {
      %c0_i32_33 = arith.constant 0 : i32
      scf.yield %c0_i32_33 : i32
    }
    %c12_i64 = arith.constant 12 : i64
    %95 = arith.extui %91 : i32 to i64
    %96 = arith.addi %95, %c12_i64 : i64
    %97 = llvm.getelementptr %10[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %94, %97 : i32, !llvm.ptr
    %98 = llvm.load %0 : !llvm.ptr -> i32
    %99 = llvm.load %1 : !llvm.ptr -> i32
    %100 = llvm.load %3 : !llvm.ptr -> i32
    call @f85(%arg0, %98, %99, %100) : (!llvm.ptr, i32, i32, i32) -> ()
    %101 = llvm.load %0 : !llvm.ptr -> i32
    %c9_i32 = arith.constant 9 : i32
    %c20_i64_25 = arith.constant 20 : i64
    %102 = arith.extui %101 : i32 to i64
    %103 = arith.addi %102, %c20_i64_25 : i64
    %104 = llvm.getelementptr %10[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c9_i32, %104 : i32, !llvm.ptr
    %105 = llvm.load %0 : !llvm.ptr -> i32
    %c1049416_i32 = arith.constant 1049416 : i32
    %c16_i64_26 = arith.constant 16 : i64
    %106 = arith.extui %105 : i32 to i64
    %107 = arith.addi %106, %c16_i64_26 : i64
    %108 = llvm.getelementptr %10[%107] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1049416_i32, %108 : i32, !llvm.ptr
    %109 = llvm.load %0 : !llvm.ptr -> i32
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    %c12_i64_27 = arith.constant 12 : i64
    %110 = arith.extui %109 : i32 to i64
    %111 = arith.addi %110, %c12_i64_27 : i64
    %112 = llvm.getelementptr %10[%111] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c-2147483648_i32, %112 : i32, !llvm.ptr
    %113 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %114 = arith.addi %113, %c12_i32 : i32
    call @f96(%arg0, %114) : (!llvm.ptr, i32) -> ()
    %115 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_28 = arith.constant 12 : i32
    %116 = arith.addi %115, %c12_i32_28 : i32
    call @f97(%arg0, %116) : (!llvm.ptr, i32) -> ()
    %117 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32_29 = arith.constant 48 : i32
    %118 = arith.addi %117, %c48_i32_29 : i32
    llvm.store %118, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb8:  // pred: ^bb6
    %119 = llvm.load %2 : !llvm.ptr -> i32
    %c40_i64_30 = arith.constant 40 : i64
    %120 = arith.extui %119 : i32 to i64
    %121 = arith.addi %120, %c40_i64_30 : i64
    %122 = llvm.getelementptr %10[%121] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %123 = llvm.load %122 : !llvm.ptr -> i32
    %124 = llvm.load %5 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c31_i32_31 = arith.constant 31 : i32
    %125 = arith.cmpi ule, %c2_i32, %c31_i32_31 : i32
    %126 = scf.if %125 -> (i32) {
      %127 = arith.shli %124, %c2_i32 : i32
      scf.yield %127 : i32
    } else {
      %c0_i32_33 = arith.constant 0 : i32
      scf.yield %c0_i32_33 : i32
    }
    %c4_i32_32 = arith.constant 4 : i32
    call @f72(%arg0, %123, %126, %c4_i32_32) : (!llvm.ptr, i32, i32, i32) -> ()
    cf.br ^bb7
  }
  func.func @f87(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %8 = arith.extui %7 : i32 to i64
    %9 = arith.addi %8, %c20_i64 : i64
    %10 = llvm.getelementptr %6[%9] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> i32
    llvm.store %11, %2 : i32, !llvm.ptr
    %12 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c12_i64 : i64
    %15 = llvm.getelementptr %6[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i32
    %17 = arith.cmpi eq, %11, %16 : i32
    %18 = arith.extui %17 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %19 = arith.xori %18, %c-1_i32 : i32
    %c0_i32_3 = arith.constant 0 : i32
    %20 = arith.cmpi ne, %19, %c0_i32_3 : i32
    cf.cond_br %20, ^bb3, ^bb4
  ^bb2:  // pred: ^bb7
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %21 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %22 = arith.extui %21 : i32 to i64
    %23 = arith.addi %22, %c16_i64 : i64
    %24 = llvm.getelementptr %6[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %25 = llvm.load %24 : !llvm.ptr -> i32
    %26 = llvm.load %2 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c31_i32 = arith.constant 31 : i32
    %27 = arith.cmpi ule, %c2_i32, %c31_i32 : i32
    %28 = scf.if %27 -> (i32) {
      %126 = arith.shli %26, %c2_i32 : i32
      scf.yield %126 : i32
    } else {
      %c0_i32_27 = arith.constant 0 : i32
      scf.yield %c0_i32_27 : i32
    }
    %29 = arith.addi %25, %28 : i32
    %c32_i32 = arith.constant 32 : i32
    %c0_i64 = arith.constant 0 : i64
    %30 = arith.extui %29 : i32 to i64
    %31 = arith.addi %30, %c0_i64 : i64
    %32 = llvm.getelementptr %6[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c32_i32, %32 : i32, !llvm.ptr
    %33 = llvm.load %1 : !llvm.ptr -> i32
    %34 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %35 = arith.addi %34, %c1_i32 : i32
    %c20_i64_4 = arith.constant 20 : i64
    %36 = arith.extui %33 : i32 to i64
    %37 = arith.addi %36, %c20_i64_4 : i64
    %38 = llvm.getelementptr %6[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %35, %38 : i32, !llvm.ptr
    %39 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %40 = arith.extui %39 : i32 to i64
    %41 = arith.addi %40, %c8_i64 : i64
    %42 = llvm.getelementptr %6[%41] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %43 = llvm.load %42 : !llvm.ptr -> i32
    llvm.store %43, %3 : i32, !llvm.ptr
    %44 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_5 = arith.constant 0 : i64
    %45 = arith.extui %44 : i32 to i64
    %46 = arith.addi %45, %c0_i64_5 : i64
    %47 = llvm.getelementptr %6[%46] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %48 = llvm.load %47 : !llvm.ptr -> i32
    %49 = arith.cmpi eq, %43, %48 : i32
    %50 = arith.extui %49 : i1 to i32
    %c-1_i32_6 = arith.constant -1 : i32
    %51 = arith.xori %50, %c-1_i32_6 : i32
    %c0_i32_7 = arith.constant 0 : i32
    %52 = arith.cmpi ne, %51, %c0_i32_7 : i32
    cf.cond_br %52, ^bb5, ^bb6
  ^bb4:  // pred: ^bb1
    %53 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %54 = arith.addi %53, %c12_i32 : i32
    call @f81(%arg0, %54) : (!llvm.ptr, i32) -> ()
    cf.br ^bb3
  ^bb5:  // 2 preds: ^bb3, ^bb6
    %55 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %56 = arith.extui %55 : i32 to i64
    %57 = arith.addi %56, %c4_i64 : i64
    %58 = llvm.getelementptr %6[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = llvm.load %58 : !llvm.ptr -> i32
    %60 = llvm.load %3 : !llvm.ptr -> i32
    %c5_i32 = arith.constant 5 : i32
    %c31_i32_8 = arith.constant 31 : i32
    %61 = arith.cmpi ule, %c5_i32, %c31_i32_8 : i32
    %62 = scf.if %61 -> (i32) {
      %126 = arith.shli %60, %c5_i32 : i32
      scf.yield %126 : i32
    } else {
      %c0_i32_27 = arith.constant 0 : i32
      scf.yield %c0_i32_27 : i32
    }
    %63 = arith.addi %59, %62 : i32
    llvm.store %63, %2 : i32, !llvm.ptr
    %64 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %65 = arith.extui %64 : i32 to i64
    %66 = arith.addi %65, %c0_i64_9 : i64
    %67 = llvm.getelementptr %6[%66] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %68 = llvm.load %67 : !llvm.ptr -> i64
    %c0_i64_10 = arith.constant 0 : i64
    %69 = arith.extui %63 : i32 to i64
    %70 = arith.addi %69, %c0_i64_10 : i64
    %71 = llvm.getelementptr %6[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %68, %71 : i64, !llvm.ptr
    %72 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %73 = arith.addi %72, %c24_i32 : i32
    %74 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_11 = arith.constant 24 : i32
    %75 = arith.addi %74, %c24_i32_11 : i32
    %c0_i64_12 = arith.constant 0 : i64
    %76 = arith.extui %75 : i32 to i64
    %77 = arith.addi %76, %c0_i64_12 : i64
    %78 = llvm.getelementptr %6[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %79 = llvm.load %78 : !llvm.ptr -> i64
    %c0_i64_13 = arith.constant 0 : i64
    %80 = arith.extui %73 : i32 to i64
    %81 = arith.addi %80, %c0_i64_13 : i64
    %82 = llvm.getelementptr %6[%81] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %79, %82 : i64, !llvm.ptr
    %83 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %84 = arith.addi %83, %c16_i32 : i32
    %85 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_14 = arith.constant 16 : i32
    %86 = arith.addi %85, %c16_i32_14 : i32
    %c0_i64_15 = arith.constant 0 : i64
    %87 = arith.extui %86 : i32 to i64
    %88 = arith.addi %87, %c0_i64_15 : i64
    %89 = llvm.getelementptr %6[%88] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %90 = llvm.load %89 : !llvm.ptr -> i64
    %c0_i64_16 = arith.constant 0 : i64
    %91 = arith.extui %84 : i32 to i64
    %92 = arith.addi %91, %c0_i64_16 : i64
    %93 = llvm.getelementptr %6[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %90, %93 : i64, !llvm.ptr
    %94 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %95 = arith.addi %94, %c8_i32 : i32
    %96 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_17 = arith.constant 8 : i32
    %97 = arith.addi %96, %c8_i32_17 : i32
    %c0_i64_18 = arith.constant 0 : i64
    %98 = arith.extui %97 : i32 to i64
    %99 = arith.addi %98, %c0_i64_18 : i64
    %100 = llvm.getelementptr %6[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i64
    %c0_i64_19 = arith.constant 0 : i64
    %102 = arith.extui %95 : i32 to i64
    %103 = arith.addi %102, %c0_i64_19 : i64
    %104 = llvm.getelementptr %6[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %101, %104 : i64, !llvm.ptr
    %105 = llvm.load %1 : !llvm.ptr -> i32
    %106 = llvm.load %3 : !llvm.ptr -> i32
    %c1_i32_20 = arith.constant 1 : i32
    %107 = arith.addi %106, %c1_i32_20 : i32
    %c8_i64_21 = arith.constant 8 : i64
    %108 = arith.extui %105 : i32 to i64
    %109 = arith.addi %108, %c8_i64_21 : i64
    %110 = llvm.getelementptr %6[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %107, %110 : i32, !llvm.ptr
    %111 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i64_22 = arith.constant 20 : i64
    %112 = arith.extui %111 : i32 to i64
    %113 = arith.addi %112, %c20_i64_22 : i64
    %114 = llvm.getelementptr %6[%113] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %115 = llvm.load %114 : !llvm.ptr -> i32
    llvm.store %115, %0 : i32, !llvm.ptr
    %c0_i32_23 = arith.constant 0 : i32
    %116 = arith.cmpi eq, %115, %c0_i32_23 : i32
    %117 = arith.extui %116 : i1 to i32
    %c0_i32_24 = arith.constant 0 : i32
    %118 = arith.cmpi ne, %117, %c0_i32_24 : i32
    cf.cond_br %118, ^bb7, ^bb8
  ^bb6:  // pred: ^bb3
    %119 = llvm.load %1 : !llvm.ptr -> i32
    call @f80(%arg0, %119) : (!llvm.ptr, i32) -> ()
    cf.br ^bb5
  ^bb7:  // 2 preds: ^bb5, ^bb8
    cf.br ^bb2
  ^bb8:  // pred: ^bb5
    %120 = llvm.load %1 : !llvm.ptr -> i32
    %121 = llvm.load %0 : !llvm.ptr -> i32
    %c-1_i32_25 = arith.constant -1 : i32
    %122 = arith.addi %121, %c-1_i32_25 : i32
    %c20_i64_26 = arith.constant 20 : i64
    %123 = arith.extui %120 : i32 to i64
    %124 = arith.addi %123, %c20_i64_26 : i64
    %125 = llvm.getelementptr %6[%124] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %122, %125 : i32, !llvm.ptr
    cf.br ^bb7
  }
  func.func @f88(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %8 = arith.extui %7 : i32 to i64
    %9 = arith.addi %8, %c20_i64 : i64
    %10 = llvm.getelementptr %6[%9] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> i32
    llvm.store %11, %2 : i32, !llvm.ptr
    %12 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c12_i64 : i64
    %15 = llvm.getelementptr %6[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i32
    %17 = arith.cmpi eq, %11, %16 : i32
    %18 = arith.extui %17 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %19 = arith.xori %18, %c-1_i32 : i32
    %c0_i32_3 = arith.constant 0 : i32
    %20 = arith.cmpi ne, %19, %c0_i32_3 : i32
    cf.cond_br %20, ^bb3, ^bb4
  ^bb2:  // pred: ^bb7
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %21 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %22 = arith.extui %21 : i32 to i64
    %23 = arith.addi %22, %c16_i64 : i64
    %24 = llvm.getelementptr %6[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %25 = llvm.load %24 : !llvm.ptr -> i32
    %26 = llvm.load %2 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c31_i32 = arith.constant 31 : i32
    %27 = arith.cmpi ule, %c2_i32, %c31_i32 : i32
    %28 = scf.if %27 -> (i32) {
      %126 = arith.shli %26, %c2_i32 : i32
      scf.yield %126 : i32
    } else {
      %c0_i32_27 = arith.constant 0 : i32
      scf.yield %c0_i32_27 : i32
    }
    %29 = arith.addi %25, %28 : i32
    %c32_i32 = arith.constant 32 : i32
    %c0_i64 = arith.constant 0 : i64
    %30 = arith.extui %29 : i32 to i64
    %31 = arith.addi %30, %c0_i64 : i64
    %32 = llvm.getelementptr %6[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c32_i32, %32 : i32, !llvm.ptr
    %33 = llvm.load %1 : !llvm.ptr -> i32
    %34 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %35 = arith.addi %34, %c1_i32 : i32
    %c20_i64_4 = arith.constant 20 : i64
    %36 = arith.extui %33 : i32 to i64
    %37 = arith.addi %36, %c20_i64_4 : i64
    %38 = llvm.getelementptr %6[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %35, %38 : i32, !llvm.ptr
    %39 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %40 = arith.extui %39 : i32 to i64
    %41 = arith.addi %40, %c8_i64 : i64
    %42 = llvm.getelementptr %6[%41] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %43 = llvm.load %42 : !llvm.ptr -> i32
    llvm.store %43, %3 : i32, !llvm.ptr
    %44 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_5 = arith.constant 0 : i64
    %45 = arith.extui %44 : i32 to i64
    %46 = arith.addi %45, %c0_i64_5 : i64
    %47 = llvm.getelementptr %6[%46] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %48 = llvm.load %47 : !llvm.ptr -> i32
    %49 = arith.cmpi eq, %43, %48 : i32
    %50 = arith.extui %49 : i1 to i32
    %c-1_i32_6 = arith.constant -1 : i32
    %51 = arith.xori %50, %c-1_i32_6 : i32
    %c0_i32_7 = arith.constant 0 : i32
    %52 = arith.cmpi ne, %51, %c0_i32_7 : i32
    cf.cond_br %52, ^bb5, ^bb6
  ^bb4:  // pred: ^bb1
    %53 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %54 = arith.addi %53, %c12_i32 : i32
    call @f81(%arg0, %54) : (!llvm.ptr, i32) -> ()
    cf.br ^bb3
  ^bb5:  // 2 preds: ^bb3, ^bb6
    %55 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %56 = arith.extui %55 : i32 to i64
    %57 = arith.addi %56, %c4_i64 : i64
    %58 = llvm.getelementptr %6[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = llvm.load %58 : !llvm.ptr -> i32
    %60 = llvm.load %3 : !llvm.ptr -> i32
    %c5_i32 = arith.constant 5 : i32
    %c31_i32_8 = arith.constant 31 : i32
    %61 = arith.cmpi ule, %c5_i32, %c31_i32_8 : i32
    %62 = scf.if %61 -> (i32) {
      %126 = arith.shli %60, %c5_i32 : i32
      scf.yield %126 : i32
    } else {
      %c0_i32_27 = arith.constant 0 : i32
      scf.yield %c0_i32_27 : i32
    }
    %63 = arith.addi %59, %62 : i32
    llvm.store %63, %2 : i32, !llvm.ptr
    %64 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %65 = arith.extui %64 : i32 to i64
    %66 = arith.addi %65, %c0_i64_9 : i64
    %67 = llvm.getelementptr %6[%66] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %68 = llvm.load %67 : !llvm.ptr -> i64
    %c0_i64_10 = arith.constant 0 : i64
    %69 = arith.extui %63 : i32 to i64
    %70 = arith.addi %69, %c0_i64_10 : i64
    %71 = llvm.getelementptr %6[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %68, %71 : i64, !llvm.ptr
    %72 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %73 = arith.addi %72, %c24_i32 : i32
    %74 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_11 = arith.constant 24 : i32
    %75 = arith.addi %74, %c24_i32_11 : i32
    %c0_i64_12 = arith.constant 0 : i64
    %76 = arith.extui %75 : i32 to i64
    %77 = arith.addi %76, %c0_i64_12 : i64
    %78 = llvm.getelementptr %6[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %79 = llvm.load %78 : !llvm.ptr -> i64
    %c0_i64_13 = arith.constant 0 : i64
    %80 = arith.extui %73 : i32 to i64
    %81 = arith.addi %80, %c0_i64_13 : i64
    %82 = llvm.getelementptr %6[%81] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %79, %82 : i64, !llvm.ptr
    %83 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %84 = arith.addi %83, %c16_i32 : i32
    %85 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_14 = arith.constant 16 : i32
    %86 = arith.addi %85, %c16_i32_14 : i32
    %c0_i64_15 = arith.constant 0 : i64
    %87 = arith.extui %86 : i32 to i64
    %88 = arith.addi %87, %c0_i64_15 : i64
    %89 = llvm.getelementptr %6[%88] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %90 = llvm.load %89 : !llvm.ptr -> i64
    %c0_i64_16 = arith.constant 0 : i64
    %91 = arith.extui %84 : i32 to i64
    %92 = arith.addi %91, %c0_i64_16 : i64
    %93 = llvm.getelementptr %6[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %90, %93 : i64, !llvm.ptr
    %94 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %95 = arith.addi %94, %c8_i32 : i32
    %96 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_17 = arith.constant 8 : i32
    %97 = arith.addi %96, %c8_i32_17 : i32
    %c0_i64_18 = arith.constant 0 : i64
    %98 = arith.extui %97 : i32 to i64
    %99 = arith.addi %98, %c0_i64_18 : i64
    %100 = llvm.getelementptr %6[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i64
    %c0_i64_19 = arith.constant 0 : i64
    %102 = arith.extui %95 : i32 to i64
    %103 = arith.addi %102, %c0_i64_19 : i64
    %104 = llvm.getelementptr %6[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %101, %104 : i64, !llvm.ptr
    %105 = llvm.load %1 : !llvm.ptr -> i32
    %106 = llvm.load %3 : !llvm.ptr -> i32
    %c1_i32_20 = arith.constant 1 : i32
    %107 = arith.addi %106, %c1_i32_20 : i32
    %c8_i64_21 = arith.constant 8 : i64
    %108 = arith.extui %105 : i32 to i64
    %109 = arith.addi %108, %c8_i64_21 : i64
    %110 = llvm.getelementptr %6[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %107, %110 : i32, !llvm.ptr
    %111 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i64_22 = arith.constant 20 : i64
    %112 = arith.extui %111 : i32 to i64
    %113 = arith.addi %112, %c20_i64_22 : i64
    %114 = llvm.getelementptr %6[%113] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %115 = llvm.load %114 : !llvm.ptr -> i32
    llvm.store %115, %0 : i32, !llvm.ptr
    %c0_i32_23 = arith.constant 0 : i32
    %116 = arith.cmpi eq, %115, %c0_i32_23 : i32
    %117 = arith.extui %116 : i1 to i32
    %c0_i32_24 = arith.constant 0 : i32
    %118 = arith.cmpi ne, %117, %c0_i32_24 : i32
    cf.cond_br %118, ^bb7, ^bb8
  ^bb6:  // pred: ^bb3
    %119 = llvm.load %1 : !llvm.ptr -> i32
    call @f80(%arg0, %119) : (!llvm.ptr, i32) -> ()
    cf.br ^bb5
  ^bb7:  // 2 preds: ^bb5, ^bb8
    cf.br ^bb2
  ^bb8:  // pred: ^bb5
    %120 = llvm.load %1 : !llvm.ptr -> i32
    %121 = llvm.load %0 : !llvm.ptr -> i32
    %c-1_i32_25 = arith.constant -1 : i32
    %122 = arith.addi %121, %c-1_i32_25 : i32
    %c20_i64_26 = arith.constant 20 : i64
    %123 = arith.extui %120 : i32 to i64
    %124 = arith.addi %123, %c20_i64_26 : i64
    %125 = llvm.getelementptr %6[%124] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %122, %125 : i32, !llvm.ptr
    cf.br ^bb7
  }
  func.func @f89(%arg0: !llvm.ptr, %arg1: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c1_i32 = arith.constant 1 : i32
    cf.br ^bb2(%c1_i32 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f90(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %5 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    %7 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.getelementptr %7[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %10 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %11 = arith.subi %10, %c32_i32 : i32
    llvm.store %11, %2 : i32, !llvm.ptr
    %c24_i32 = arith.constant 24 : i32
    %12 = arith.addi %11, %c24_i32 : i32
    %c0_i64_4 = arith.constant 0 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c0_i64_5 : i64
    %15 = llvm.getelementptr %9[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_4, %15 : i64, !llvm.ptr
    %16 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %17 = arith.addi %16, %c16_i32 : i32
    %c0_i64_6 = arith.constant 0 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %18 = arith.extui %17 : i32 to i64
    %19 = arith.addi %18, %c0_i64_7 : i64
    %20 = llvm.getelementptr %9[%19] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_6, %20 : i64, !llvm.ptr
    %21 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %22 = arith.addi %21, %c8_i32 : i32
    %c0_i64_8 = arith.constant 0 : i64
    %c0_i64_9 = arith.constant 0 : i64
    %23 = arith.extui %22 : i32 to i64
    %24 = arith.addi %23, %c0_i64_9 : i64
    %25 = llvm.getelementptr %9[%24] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_8, %25 : i64, !llvm.ptr
    %26 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_10 = arith.constant 0 : i64
    %c0_i64_11 = arith.constant 0 : i64
    %27 = arith.extui %26 : i32 to i64
    %28 = arith.addi %27, %c0_i64_11 : i64
    %29 = llvm.getelementptr %9[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i64_10, %29 : i64, !llvm.ptr
    %30 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32_12 = arith.constant 24 : i32
    %31 = arith.addi %30, %c24_i32_12 : i32
    llvm.store %31, %1 : i32, !llvm.ptr
    %c0_i32_13 = arith.constant 0 : i32
    llvm.store %c0_i32_13, %3 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb5
    %32 = llvm.load %0 : !llvm.ptr -> i32
    %33 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_14 = arith.constant 0 : i64
    %34 = arith.extui %33 : i32 to i64
    %35 = arith.addi %34, %c0_i64_14 : i64
    %36 = llvm.getelementptr %9[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %37 = llvm.load %36 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %38 = arith.extui %32 : i32 to i64
    %39 = arith.addi %38, %c0_i64_15 : i64
    %40 = llvm.getelementptr %9[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %37, %40 : i64, !llvm.ptr
    %41 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i32_16 = arith.constant 24 : i32
    %42 = arith.addi %41, %c24_i32_16 : i32
    %43 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_17 = arith.constant 24 : i32
    %44 = arith.addi %43, %c24_i32_17 : i32
    %c0_i64_18 = arith.constant 0 : i64
    %45 = arith.extui %44 : i32 to i64
    %46 = arith.addi %45, %c0_i64_18 : i64
    %47 = llvm.getelementptr %9[%46] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %48 = llvm.load %47 : !llvm.ptr -> i64
    %c0_i64_19 = arith.constant 0 : i64
    %49 = arith.extui %42 : i32 to i64
    %50 = arith.addi %49, %c0_i64_19 : i64
    %51 = llvm.getelementptr %9[%50] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %48, %51 : i64, !llvm.ptr
    %52 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_20 = arith.constant 16 : i32
    %53 = arith.addi %52, %c16_i32_20 : i32
    %54 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_21 = arith.constant 16 : i32
    %55 = arith.addi %54, %c16_i32_21 : i32
    %c0_i64_22 = arith.constant 0 : i64
    %56 = arith.extui %55 : i32 to i64
    %57 = arith.addi %56, %c0_i64_22 : i64
    %58 = llvm.getelementptr %9[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %c0_i64_23 = arith.constant 0 : i64
    %60 = arith.extui %53 : i32 to i64
    %61 = arith.addi %60, %c0_i64_23 : i64
    %62 = llvm.getelementptr %9[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %59, %62 : i64, !llvm.ptr
    %63 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_24 = arith.constant 8 : i32
    %64 = arith.addi %63, %c8_i32_24 : i32
    %65 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_25 = arith.constant 8 : i32
    %66 = arith.addi %65, %c8_i32_25 : i32
    %c0_i64_26 = arith.constant 0 : i64
    %67 = arith.extui %66 : i32 to i64
    %68 = arith.addi %67, %c0_i64_26 : i64
    %69 = llvm.getelementptr %9[%68] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %70 = llvm.load %69 : !llvm.ptr -> i64
    %c0_i64_27 = arith.constant 0 : i64
    %71 = arith.extui %64 : i32 to i64
    %72 = arith.addi %71, %c0_i64_27 : i64
    %73 = llvm.getelementptr %9[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %70, %73 : i64, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 2 preds: ^bb1, ^bb4
    %74 = llvm.load %2 : !llvm.ptr -> i32
    %75 = llvm.load %3 : !llvm.ptr -> i32
    %76 = arith.addi %74, %75 : i32
    %77 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_28 = arith.constant 0 : i64
    %78 = arith.extui %77 : i32 to i64
    %79 = arith.addi %78, %c0_i64_28 : i64
    %80 = llvm.getelementptr %9[%79] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %81 = llvm.load %80 : !llvm.ptr -> i64
    llvm.store %81, %4 : i64, !llvm.ptr
    %c56_i64 = arith.constant 56 : i64
    %c63_i64 = arith.constant 63 : i64
    %82 = arith.cmpi ule, %c56_i64, %c63_i64 : i64
    %83 = scf.if %82 -> (i64) {
      %129 = arith.shli %81, %c56_i64 : i64
      scf.yield %129 : i64
    } else {
      %c0_i64_47 = arith.constant 0 : i64
      scf.yield %c0_i64_47 : i64
    }
    %84 = llvm.load %4 : !llvm.ptr -> i64
    %c65280_i64 = arith.constant 65280 : i64
    %85 = arith.andi %84, %c65280_i64 : i64
    %c40_i64 = arith.constant 40 : i64
    %c63_i64_29 = arith.constant 63 : i64
    %86 = arith.cmpi ule, %c40_i64, %c63_i64_29 : i64
    %87 = scf.if %86 -> (i64) {
      %129 = arith.shli %85, %c40_i64 : i64
      scf.yield %129 : i64
    } else {
      %c0_i64_47 = arith.constant 0 : i64
      scf.yield %c0_i64_47 : i64
    }
    %88 = arith.ori %83, %87 : i64
    %89 = llvm.load %4 : !llvm.ptr -> i64
    %c16711680_i64 = arith.constant 16711680 : i64
    %90 = arith.andi %89, %c16711680_i64 : i64
    %c24_i64 = arith.constant 24 : i64
    %c63_i64_30 = arith.constant 63 : i64
    %91 = arith.cmpi ule, %c24_i64, %c63_i64_30 : i64
    %92 = scf.if %91 -> (i64) {
      %129 = arith.shli %90, %c24_i64 : i64
      scf.yield %129 : i64
    } else {
      %c0_i64_47 = arith.constant 0 : i64
      scf.yield %c0_i64_47 : i64
    }
    %93 = llvm.load %4 : !llvm.ptr -> i64
    %c4278190080_i64 = arith.constant 4278190080 : i64
    %94 = arith.andi %93, %c4278190080_i64 : i64
    %c8_i64 = arith.constant 8 : i64
    %c63_i64_31 = arith.constant 63 : i64
    %95 = arith.cmpi ule, %c8_i64, %c63_i64_31 : i64
    %96 = scf.if %95 -> (i64) {
      %129 = arith.shli %94, %c8_i64 : i64
      scf.yield %129 : i64
    } else {
      %c0_i64_47 = arith.constant 0 : i64
      scf.yield %c0_i64_47 : i64
    }
    %97 = arith.ori %92, %96 : i64
    %98 = arith.ori %88, %97 : i64
    %99 = llvm.load %4 : !llvm.ptr -> i64
    %c8_i64_32 = arith.constant 8 : i64
    %c63_i64_33 = arith.constant 63 : i64
    %100 = arith.cmpi ule, %c8_i64_32, %c63_i64_33 : i64
    %101 = scf.if %100 -> (i64) {
      %129 = arith.shrui %99, %c8_i64_32 : i64
      scf.yield %129 : i64
    } else {
      %c0_i64_47 = arith.constant 0 : i64
      scf.yield %c0_i64_47 : i64
    }
    %c4278190080_i64_34 = arith.constant 4278190080 : i64
    %102 = arith.andi %101, %c4278190080_i64_34 : i64
    %103 = llvm.load %4 : !llvm.ptr -> i64
    %c24_i64_35 = arith.constant 24 : i64
    %c63_i64_36 = arith.constant 63 : i64
    %104 = arith.cmpi ule, %c24_i64_35, %c63_i64_36 : i64
    %105 = scf.if %104 -> (i64) {
      %129 = arith.shrui %103, %c24_i64_35 : i64
      scf.yield %129 : i64
    } else {
      %c0_i64_47 = arith.constant 0 : i64
      scf.yield %c0_i64_47 : i64
    }
    %c16711680_i64_37 = arith.constant 16711680 : i64
    %106 = arith.andi %105, %c16711680_i64_37 : i64
    %107 = arith.ori %102, %106 : i64
    %108 = llvm.load %4 : !llvm.ptr -> i64
    %c40_i64_38 = arith.constant 40 : i64
    %c63_i64_39 = arith.constant 63 : i64
    %109 = arith.cmpi ule, %c40_i64_38, %c63_i64_39 : i64
    %110 = scf.if %109 -> (i64) {
      %129 = arith.shrui %108, %c40_i64_38 : i64
      scf.yield %129 : i64
    } else {
      %c0_i64_47 = arith.constant 0 : i64
      scf.yield %c0_i64_47 : i64
    }
    %c65280_i64_40 = arith.constant 65280 : i64
    %111 = arith.andi %110, %c65280_i64_40 : i64
    %112 = llvm.load %4 : !llvm.ptr -> i64
    %c56_i64_41 = arith.constant 56 : i64
    %c63_i64_42 = arith.constant 63 : i64
    %113 = arith.cmpi ule, %c56_i64_41, %c63_i64_42 : i64
    %114 = scf.if %113 -> (i64) {
      %129 = arith.shrui %112, %c56_i64_41 : i64
      scf.yield %129 : i64
    } else {
      %c0_i64_47 = arith.constant 0 : i64
      scf.yield %c0_i64_47 : i64
    }
    %115 = arith.ori %111, %114 : i64
    %116 = arith.ori %107, %115 : i64
    %117 = arith.ori %98, %116 : i64
    %c0_i64_43 = arith.constant 0 : i64
    %118 = arith.extui %76 : i32 to i64
    %119 = arith.addi %118, %c0_i64_43 : i64
    %120 = llvm.getelementptr %9[%119] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %117, %120 : i64, !llvm.ptr
    %121 = llvm.load %1 : !llvm.ptr -> i32
    %c-8_i32 = arith.constant -8 : i32
    %122 = arith.addi %121, %c-8_i32 : i32
    llvm.store %122, %1 : i32, !llvm.ptr
    %123 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32_44 = arith.constant 8 : i32
    %124 = arith.addi %123, %c8_i32_44 : i32
    llvm.store %124, %3 : i32, !llvm.ptr
    %c32_i32_45 = arith.constant 32 : i32
    %125 = arith.cmpi eq, %124, %c32_i32_45 : i32
    %126 = arith.extui %125 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %127 = arith.xori %126, %c-1_i32 : i32
    %c0_i32_46 = arith.constant 0 : i32
    %128 = arith.cmpi ne, %127, %c0_i32_46 : i32
    cf.cond_br %128, ^bb4, ^bb5
  ^bb5:  // pred: ^bb4
    cf.br ^bb3
  }
  func.func @f91(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %2 = llvm.load %0 : !llvm.ptr -> i32
    %3 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %4 = call @f144(%arg0, %2, %3, %c32_i32) : (!llvm.ptr, i32, i32, i32) -> i32
    %c0_i32 = arith.constant 0 : i32
    %5 = arith.cmpi eq, %4, %c0_i32 : i32
    %6 = arith.extui %5 : i1 to i32
    cf.br ^bb2(%6 : i32)
  ^bb2(%7: i32):  // pred: ^bb1
    return %7 : i32
  }
  func.func @f92(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_3 = arith.constant 0 : i32
    %8 = arith.cmpi eq, %7, %c0_i32_3 : i32
    %9 = arith.extui %8 : i1 to i32
    %c0_i32_4 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_4 : i32
    cf.cond_br %10, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb1, ^bb5
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    cf.br ^bb6
  ^bb5:  // pred: ^bb7
    cf.br ^bb3
  ^bb6:  // 2 preds: ^bb4, ^bb6
    %11 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %12 = arith.addi %11, %c1_i32 : i32
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c0_i64 : i64
    %16 = llvm.getelementptr %6[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i8
    %18 = arith.extui %17 : i8 to i32
    llvm.store %18, %3 : i32, !llvm.ptr
    %c15_i32 = arith.constant 15 : i32
    %19 = arith.andi %18, %c15_i32 : i32
    %c1049676_i32 = arith.constant 1049676 : i32
    %20 = arith.addi %19, %c1049676_i32 : i32
    %c0_i64_5 = arith.constant 0 : i64
    %21 = arith.extui %20 : i32 to i64
    %22 = arith.addi %21, %c0_i64_5 : i64
    %23 = llvm.getelementptr %6[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %24 = llvm.load %23 : !llvm.ptr -> i8
    %25 = arith.extui %24 : i8 to i32
    %c0_i64_6 = arith.constant 0 : i64
    %26 = arith.extui %12 : i32 to i64
    %27 = arith.addi %26, %c0_i64_6 : i64
    %28 = llvm.getelementptr %6[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %29 = arith.trunci %25 : i32 to i8
    llvm.store %29, %28 : i8, !llvm.ptr
    %30 = llvm.load %2 : !llvm.ptr -> i32
    %31 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %c31_i32 = arith.constant 31 : i32
    %32 = arith.cmpi ule, %c4_i32, %c31_i32 : i32
    %33 = scf.if %32 -> (i32) {
      %51 = arith.shrui %31, %c4_i32 : i32
      scf.yield %51 : i32
    } else {
      %c0_i32_12 = arith.constant 0 : i32
      scf.yield %c0_i32_12 : i32
    }
    %c1049676_i32_7 = arith.constant 1049676 : i32
    %34 = arith.addi %33, %c1049676_i32_7 : i32
    %c0_i64_8 = arith.constant 0 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c0_i64_8 : i64
    %37 = llvm.getelementptr %6[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %38 = llvm.load %37 : !llvm.ptr -> i8
    %39 = arith.extui %38 : i8 to i32
    %c0_i64_9 = arith.constant 0 : i64
    %40 = arith.extui %30 : i32 to i64
    %41 = arith.addi %40, %c0_i64_9 : i64
    %42 = llvm.getelementptr %6[%41] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %43 = arith.trunci %39 : i32 to i8
    llvm.store %43, %42 : i8, !llvm.ptr
    %44 = llvm.load %2 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %45 = arith.addi %44, %c2_i32 : i32
    llvm.store %45, %2 : i32, !llvm.ptr
    %46 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i32_10 = arith.constant 1 : i32
    %47 = arith.addi %46, %c1_i32_10 : i32
    llvm.store %47, %0 : i32, !llvm.ptr
    %48 = llvm.load %1 : !llvm.ptr -> i32
    %c-1_i32 = arith.constant -1 : i32
    %49 = arith.addi %48, %c-1_i32 : i32
    llvm.store %49, %1 : i32, !llvm.ptr
    %c0_i32_11 = arith.constant 0 : i32
    %50 = arith.cmpi ne, %49, %c0_i32_11 : i32
    cf.cond_br %50, ^bb6, ^bb7
  ^bb7:  // pred: ^bb6
    cf.br ^bb5
  }
  func.func @f93(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32_4 = arith.constant 0 : i32
    llvm.store %c0_i32_4, %4 : i32, !llvm.ptr
    %5 = llvm.load %1 : !llvm.ptr -> i32
    %6 = llvm.load %3 : !llvm.ptr -> i32
    %7 = arith.cmpi eq, %5, %6 : i32
    %8 = arith.extui %7 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %9 = arith.xori %8, %c-1_i32 : i32
    %c0_i32_5 = arith.constant 0 : i32
    %10 = arith.cmpi ne, %9, %c0_i32_5 : i32
    cf.cond_br %10, ^bb3, ^bb4
  ^bb2(%11: i32):  // pred: ^bb3
    return %11 : i32
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %12 = llvm.load %4 : !llvm.ptr -> i32
    cf.br ^bb2(%12 : i32)
  ^bb4:  // pred: ^bb1
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %14 = llvm.load %2 : !llvm.ptr -> i32
    %15 = llvm.load %1 : !llvm.ptr -> i32
    %16 = call @f144(%arg0, %13, %14, %15) : (!llvm.ptr, i32, i32, i32) -> i32
    %c0_i32_6 = arith.constant 0 : i32
    %17 = arith.cmpi eq, %16, %c0_i32_6 : i32
    %18 = arith.extui %17 : i1 to i32
    llvm.store %18, %4 : i32, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f94(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %9 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_5 = arith.constant 0 : i32
    %10 = arith.cmpi eq, %9, %c0_i32_5 : i32
    %11 = arith.extui %10 : i1 to i32
    %c0_i32_6 = arith.constant 0 : i32
    %12 = arith.cmpi ne, %11, %c0_i32_6 : i32
    cf.cond_br %12, ^bb8, ^bb9
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb4, ^bb19
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %14 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %15 = arith.extui %13 : i32 to i64
    %16 = arith.addi %15, %c0_i64 : i64
    %17 = llvm.getelementptr %8[%16] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %14, %17 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // 3 preds: ^bb7, ^bb8, ^bb18
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %2 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // 3 preds: ^bb6, ^bb11, ^bb14
    %18 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_7 = arith.constant 0 : i32
    %19 = arith.cmpi eq, %18, %c0_i32_7 : i32
    %20 = arith.extui %19 : i1 to i32
    %c0_i32_8 = arith.constant 0 : i32
    %21 = arith.cmpi ne, %20, %c0_i32_8 : i32
    cf.cond_br %21, ^bb18, ^bb19
  ^bb6:  // 2 preds: ^bb12, ^bb15
    %22 = llvm.load %1 : !llvm.ptr -> i32
    llvm.store %22, %3 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb7:  // pred: ^bb9
    %23 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_9 = arith.constant 0 : i32
    %c4_i64 = arith.constant 4 : i64
    %24 = arith.extui %23 : i32 to i64
    %25 = arith.addi %24, %c4_i64 : i64
    %26 = llvm.getelementptr %8[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_9, %26 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb8:  // pred: ^bb1
    %27 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_10 = arith.constant 0 : i32
    %c4_i64_11 = arith.constant 4 : i64
    %28 = arith.extui %27 : i32 to i64
    %29 = arith.addi %28, %c4_i64_11 : i64
    %30 = llvm.getelementptr %8[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_10, %30 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb9:  // pred: ^bb1
    %31 = llvm.load %2 : !llvm.ptr -> i32
    %c-1_i32 = arith.constant -1 : i32
    %32 = arith.cmpi sle, %31, %c-1_i32 : i32
    %33 = arith.extui %32 : i1 to i32
    %c0_i32_12 = arith.constant 0 : i32
    %34 = arith.cmpi ne, %33, %c0_i32_12 : i32
    cf.cond_br %34, ^bb7, ^bb10
  ^bb10:  // pred: ^bb9
    %35 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i64_13 = arith.constant 4 : i64
    %36 = arith.extui %35 : i32 to i64
    %37 = arith.addi %36, %c4_i64_13 : i64
    %38 = llvm.getelementptr %8[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %39 = llvm.load %38 : !llvm.ptr -> i32
    %c0_i32_14 = arith.constant 0 : i32
    %40 = arith.cmpi eq, %39, %c0_i32_14 : i32
    %41 = arith.extui %40 : i1 to i32
    %c0_i32_15 = arith.constant 0 : i32
    %42 = arith.cmpi ne, %41, %c0_i32_15 : i32
    cf.cond_br %42, ^bb12, ^bb13
  ^bb11:  // 2 preds: ^bb16, ^bb17
    %43 = llvm.load %2 : !llvm.ptr -> i32
    %44 = llvm.load %1 : !llvm.ptr -> i32
    %45 = call @f71(%arg0, %43, %44) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %45, %3 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb12:  // pred: ^bb10
    %46 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %47 = arith.cmpi eq, %46, %c0_i32_16 : i32
    %48 = arith.extui %47 : i1 to i32
    %c0_i32_17 = arith.constant 0 : i32
    %49 = arith.cmpi ne, %48, %c0_i32_17 : i32
    cf.cond_br %49, ^bb6, ^bb17
  ^bb13:  // pred: ^bb10
    %50 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %51 = arith.extui %50 : i32 to i64
    %52 = arith.addi %51, %c8_i64 : i64
    %53 = llvm.getelementptr %8[%52] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.load %53 : !llvm.ptr -> i32
    llvm.store %54, %5 : i32, !llvm.ptr
    %c0_i32_18 = arith.constant 0 : i32
    %55 = arith.cmpi ne, %54, %c0_i32_18 : i32
    cf.cond_br %55, ^bb14, ^bb15
  ^bb14:  // pred: ^bb13
    %56 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_19 = arith.constant 0 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c0_i64_19 : i64
    %59 = llvm.getelementptr %8[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i32
    %61 = llvm.load %5 : !llvm.ptr -> i32
    %62 = llvm.load %1 : !llvm.ptr -> i32
    %63 = llvm.load %2 : !llvm.ptr -> i32
    %64 = call @f73(%arg0, %60, %61, %62, %63) : (!llvm.ptr, i32, i32, i32, i32) -> i32
    llvm.store %64, %3 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb15:  // pred: ^bb13
    %65 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_20 = arith.constant 0 : i32
    %66 = arith.cmpi eq, %65, %c0_i32_20 : i32
    %67 = arith.extui %66 : i1 to i32
    %c0_i32_21 = arith.constant 0 : i32
    %68 = arith.cmpi ne, %67, %c0_i32_21 : i32
    cf.cond_br %68, ^bb6, ^bb16
  ^bb16:  // pred: ^bb15
    %c0_i32_22 = arith.constant 0 : i32
    %c1050633_i64 = arith.constant 1050633 : i64
    %69 = arith.extui %c0_i32_22 : i32 to i64
    %70 = arith.addi %69, %c1050633_i64 : i64
    %71 = llvm.getelementptr %8[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.load %71 : !llvm.ptr -> i8
    %73 = arith.extui %72 : i8 to i32
    cf.br ^bb11
  ^bb17:  // pred: ^bb12
    %c0_i32_23 = arith.constant 0 : i32
    %c1050633_i64_24 = arith.constant 1050633 : i64
    %74 = arith.extui %c0_i32_23 : i32 to i64
    %75 = arith.addi %74, %c1050633_i64_24 : i64
    %76 = llvm.getelementptr %8[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %77 = llvm.load %76 : !llvm.ptr -> i8
    %78 = arith.extui %77 : i8 to i32
    cf.br ^bb11
  ^bb18:  // pred: ^bb5
    %79 = llvm.load %0 : !llvm.ptr -> i32
    %80 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_25 = arith.constant 8 : i64
    %81 = arith.extui %79 : i32 to i64
    %82 = arith.addi %81, %c8_i64_25 : i64
    %83 = llvm.getelementptr %8[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %80, %83 : i32, !llvm.ptr
    %84 = llvm.load %0 : !llvm.ptr -> i32
    %85 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_26 = arith.constant 4 : i64
    %86 = arith.extui %84 : i32 to i64
    %87 = arith.addi %86, %c4_i64_26 : i64
    %88 = llvm.getelementptr %8[%87] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %85, %88 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb19:  // pred: ^bb5
    %89 = llvm.load %0 : !llvm.ptr -> i32
    %90 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_27 = arith.constant 8 : i64
    %91 = arith.extui %89 : i32 to i64
    %92 = arith.addi %91, %c8_i64_27 : i64
    %93 = llvm.getelementptr %8[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %90, %93 : i32, !llvm.ptr
    %94 = llvm.load %0 : !llvm.ptr -> i32
    %95 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i64_28 = arith.constant 4 : i64
    %96 = arith.extui %94 : i32 to i64
    %97 = arith.addi %96, %c4_i64_28 : i64
    %98 = llvm.getelementptr %8[%97] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %95, %98 : i32, !llvm.ptr
    %c0_i32_29 = arith.constant 0 : i32
    llvm.store %c0_i32_29, %2 : i32, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f95(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %6 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %7 = arith.cmpi eq, %6, %c0_i32 : i32
    %8 = arith.extui %7 : i1 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %9 = arith.cmpi ne, %8, %c0_i32_2 : i32
    cf.cond_br %9, ^bb4, ^bb5
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 4 preds: ^bb4, ^bb7, ^bb11, ^bb12
    %10 = llvm.load %0 : !llvm.ptr -> i32
    %11 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %12 = arith.extui %10 : i32 to i64
    %13 = arith.addi %12, %c0_i64 : i64
    %14 = llvm.getelementptr %5[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %11, %14 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %15 = llvm.load %0 : !llvm.ptr -> i32
    %c4294967296_i64 = arith.constant 4294967296 : i64
    %c4_i64 = arith.constant 4 : i64
    %16 = arith.extui %15 : i32 to i64
    %17 = arith.addi %16, %c4_i64 : i64
    %18 = llvm.getelementptr %5[%17] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c4294967296_i64, %18 : i64, !llvm.ptr
    %c0_i32_3 = arith.constant 0 : i32
    llvm.store %c0_i32_3, %1 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %19 = llvm.load %1 : !llvm.ptr -> i32
    %c-1_i32 = arith.constant -1 : i32
    %20 = arith.cmpi sgt, %19, %c-1_i32 : i32
    %21 = arith.extui %20 : i1 to i32
    %c0_i32_4 = arith.constant 0 : i32
    %22 = arith.cmpi ne, %21, %c0_i32_4 : i32
    cf.cond_br %22, ^bb6, ^bb7
  ^bb6:  // pred: ^bb5
    %23 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_5 = arith.constant 0 : i32
    %24 = arith.cmpi ne, %23, %c0_i32_5 : i32
    cf.cond_br %24, ^bb9, ^bb10
  ^bb7:  // pred: ^bb5
    %25 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_6 = arith.constant 0 : i32
    %c4_i64_7 = arith.constant 4 : i64
    %26 = arith.extui %25 : i32 to i64
    %27 = arith.addi %26, %c4_i64_7 : i64
    %28 = llvm.getelementptr %5[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_6, %28 : i32, !llvm.ptr
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %1 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb8:  // 2 preds: ^bb9, ^bb10
    %29 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_8 = arith.constant 0 : i32
    %30 = arith.cmpi eq, %29, %c0_i32_8 : i32
    %31 = arith.extui %30 : i1 to i32
    %c0_i32_9 = arith.constant 0 : i32
    %32 = arith.cmpi ne, %31, %c0_i32_9 : i32
    cf.cond_br %32, ^bb11, ^bb12
  ^bb9:  // pred: ^bb6
    %33 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32_10 = arith.constant 1 : i32
    %34 = call @f71(%arg0, %33, %c1_i32_10) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %34, %2 : i32, !llvm.ptr
    cf.br ^bb8
  ^bb10:  // pred: ^bb6
    %c0_i32_11 = arith.constant 0 : i32
    %c1050633_i64 = arith.constant 1050633 : i64
    %35 = arith.extui %c0_i32_11 : i32 to i64
    %36 = arith.addi %35, %c1050633_i64 : i64
    %37 = llvm.getelementptr %5[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %38 = llvm.load %37 : !llvm.ptr -> i8
    %39 = arith.extui %38 : i8 to i32
    %40 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32_12 = arith.constant 1 : i32
    %41 = call @f71(%arg0, %40, %c1_i32_12) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %41, %2 : i32, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb8
    %42 = llvm.load %0 : !llvm.ptr -> i32
    %43 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %44 = arith.extui %42 : i32 to i64
    %45 = arith.addi %44, %c8_i64 : i64
    %46 = llvm.getelementptr %5[%45] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %43, %46 : i32, !llvm.ptr
    %c1_i32_13 = arith.constant 1 : i32
    llvm.store %c1_i32_13, %1 : i32, !llvm.ptr
    %47 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i32_14 = arith.constant 1 : i32
    %c4_i64_15 = arith.constant 4 : i64
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.addi %48, %c4_i64_15 : i64
    %50 = llvm.getelementptr %5[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i32_14, %50 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb12:  // pred: ^bb8
    %51 = llvm.load %0 : !llvm.ptr -> i32
    %52 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_16 = arith.constant 8 : i64
    %53 = arith.extui %51 : i32 to i64
    %54 = arith.addi %53, %c8_i64_16 : i64
    %55 = llvm.getelementptr %5[%54] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %52, %55 : i32, !llvm.ptr
    %56 = llvm.load %0 : !llvm.ptr -> i32
    %57 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_17 = arith.constant 4 : i64
    %58 = arith.extui %56 : i32 to i64
    %59 = arith.addi %58, %c4_i64_17 : i64
    %60 = llvm.getelementptr %5[%59] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %57, %60 : i32, !llvm.ptr
    %c0_i32_18 = arith.constant 0 : i32
    llvm.store %c0_i32_18, %1 : i32, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f96(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f97(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %6 = arith.extui %5 : i32 to i64
    %7 = arith.addi %6, %c0_i64 : i64
    %8 = llvm.getelementptr %4[%7] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> i32
    llvm.store %9, %1 : i32, !llvm.ptr
    %c0_i32_1 = arith.constant 0 : i32
    %10 = arith.cmpi eq, %9, %c0_i32_1 : i32
    %11 = arith.extui %10 : i1 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %12 = arith.cmpi ne, %11, %c0_i32_2 : i32
    cf.cond_br %12, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c4_i64 : i64
    %16 = llvm.getelementptr %4[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i32
    %18 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    call @f72(%arg0, %17, %18, %c1_i32) : (!llvm.ptr, i32, i32, i32) -> ()
    cf.br ^bb3
  }
  func.func @f98(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %1 : !llvm.ptr -> i32
    %6 = llvm.load %3 : !llvm.ptr -> i32
    %7 = arith.cmpi eq, %5, %6 : i32
    %8 = arith.extui %7 : i1 to i32
    %c0_i32 = arith.constant 0 : i32
    %9 = arith.cmpi ne, %8, %c0_i32 : i32
    cf.cond_br %9, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb1
    %10 = llvm.load %0 : !llvm.ptr -> i32
    %11 = llvm.load %2 : !llvm.ptr -> i32
    %12 = llvm.load %1 : !llvm.ptr -> i32
    %13 = call @f145(%arg0, %10, %11, %12) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %14 = llvm.load %1 : !llvm.ptr -> i32
    %15 = llvm.load %3 : !llvm.ptr -> i32
    %16 = llvm.load %4 : !llvm.ptr -> i32
    call @f140(%arg0, %14, %15, %16) : (!llvm.ptr, i32, i32, i32) -> ()
    llvm.unreachable
  }
  func.func @f99(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c4854689474455388916_i64 = arith.constant 4854689474455388916 : i64
    %c8_i64 = arith.constant 8 : i64
    %6 = arith.extui %5 : i32 to i64
    %7 = arith.addi %6, %c8_i64 : i64
    %8 = llvm.getelementptr %4[%7] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c4854689474455388916_i64, %8 : i64, !llvm.ptr
    %9 = llvm.load %0 : !llvm.ptr -> i32
    %c-1846477596472271460_i64 = arith.constant -1846477596472271460 : i64
    %c0_i64 = arith.constant 0 : i64
    %10 = arith.extui %9 : i32 to i64
    %11 = arith.addi %10, %c0_i64 : i64
    %12 = llvm.getelementptr %4[%11] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c-1846477596472271460_i64, %12 : i64, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f100(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c7199936582794304877_i64 = arith.constant 7199936582794304877 : i64
    %c8_i64 = arith.constant 8 : i64
    %6 = arith.extui %5 : i32 to i64
    %7 = arith.addi %6, %c8_i64 : i64
    %8 = llvm.getelementptr %4[%7] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c7199936582794304877_i64, %8 : i64, !llvm.ptr
    %9 = llvm.load %0 : !llvm.ptr -> i32
    %c-5076933981314334344_i64 = arith.constant -5076933981314334344 : i64
    %c0_i64 = arith.constant 0 : i64
    %10 = arith.extui %9 : i32 to i64
    %11 = arith.addi %10, %c0_i64 : i64
    %12 = llvm.getelementptr %4[%11] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c-5076933981314334344_i64, %12 : i64, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f101(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %11 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %12 = arith.subi %11, %c32_i32 : i32
    llvm.store %12, %3 : i32, !llvm.ptr
    llvm.store %12, %7 : i32, !llvm.ptr
    %13 = llvm.load %1 : !llvm.ptr -> i32
    %14 = llvm.load %2 : !llvm.ptr -> i32
    %15 = arith.addi %13, %14 : i32
    llvm.store %15, %2 : i32, !llvm.ptr
    %16 = llvm.load %1 : !llvm.ptr -> i32
    %17 = arith.cmpi uge, %15, %16 : i32
    %18 = arith.extui %17 : i1 to i32
    %c0_i32_5 = arith.constant 0 : i32
    %19 = arith.cmpi ne, %18, %c0_i32_5 : i32
    cf.cond_br %19, ^bb3, ^bb4
  ^bb2:  // pred: ^bb8
    return
  ^bb3:  // pred: ^bb1
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %4 : i32, !llvm.ptr
    %20 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %21 = arith.extui %20 : i32 to i64
    %22 = arith.addi %21, %c0_i64 : i64
    %23 = llvm.getelementptr %10[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %24 = llvm.load %23 : !llvm.ptr -> i32
    llvm.store %24, %5 : i32, !llvm.ptr
    %c1_i32_6 = arith.constant 1 : i32
    %c31_i32 = arith.constant 31 : i32
    %25 = arith.cmpi ule, %c1_i32_6, %c31_i32 : i32
    %26 = scf.if %25 -> (i32) {
      %104 = arith.shli %24, %c1_i32_6 : i32
      scf.yield %104 : i32
    } else {
      %c0_i32_23 = arith.constant 0 : i32
      scf.yield %c0_i32_23 : i32
    }
    llvm.store %26, %1 : i32, !llvm.ptr
    %27 = llvm.load %2 : !llvm.ptr -> i32
    %28 = llvm.load %1 : !llvm.ptr -> i32
    %29 = llvm.load %2 : !llvm.ptr -> i32
    %30 = arith.cmpi ugt, %28, %29 : i32
    %31 = arith.extui %30 : i1 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %32 = arith.cmpi ne, %31, %c0_i32_7 : i32
    %33 = arith.select %32, %26, %27 : i32
    llvm.store %33, %1 : i32, !llvm.ptr
    %c8_i32 = arith.constant 8 : i32
    %34 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_8 = arith.constant 8 : i32
    %35 = arith.cmpi ugt, %34, %c8_i32_8 : i32
    %36 = arith.extui %35 : i1 to i32
    %c0_i32_9 = arith.constant 0 : i32
    %37 = arith.cmpi ne, %36, %c0_i32_9 : i32
    %38 = arith.select %37, %33, %c8_i32 : i32
    llvm.store %38, %1 : i32, !llvm.ptr
    %c-1_i32 = arith.constant -1 : i32
    %39 = arith.xori %38, %c-1_i32 : i32
    %c31_i32_10 = arith.constant 31 : i32
    %c31_i32_11 = arith.constant 31 : i32
    %40 = arith.cmpi ule, %c31_i32_10, %c31_i32_11 : i32
    %41 = scf.if %40 -> (i32) {
      %104 = arith.shrui %39, %c31_i32_10 : i32
      scf.yield %104 : i32
    } else {
      %c0_i32_23 = arith.constant 0 : i32
      scf.yield %c0_i32_23 : i32
    }
    llvm.store %41, %2 : i32, !llvm.ptr
    %42 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i32_12 = arith.constant 0 : i32
    %43 = arith.cmpi ne, %42, %c0_i32_12 : i32
    cf.cond_br %43, ^bb6, ^bb7
  ^bb4:  // pred: ^bb1
    %c0_i32_13 = arith.constant 0 : i32
    %c0_i32_14 = arith.constant 0 : i32
    call @f126(%arg0, %c0_i32_13, %c0_i32_14) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb5:  // 2 preds: ^bb6, ^bb7
    %44 = llvm.load %3 : !llvm.ptr -> i32
    %45 = llvm.load %4 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %46 = arith.extui %44 : i32 to i64
    %47 = arith.addi %46, %c24_i64 : i64
    %48 = llvm.getelementptr %10[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %45, %48 : i32, !llvm.ptr
    %49 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32_15 = arith.constant 8 : i32
    %50 = arith.addi %49, %c8_i32_15 : i32
    %51 = llvm.load %2 : !llvm.ptr -> i32
    %52 = llvm.load %1 : !llvm.ptr -> i32
    %53 = llvm.load %3 : !llvm.ptr -> i32
    %c20_i32 = arith.constant 20 : i32
    %54 = arith.addi %53, %c20_i32 : i32
    call @f109(%arg0, %50, %51, %52, %54) : (!llvm.ptr, i32, i32, i32, i32) -> ()
    %55 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %56 = arith.extui %55 : i32 to i64
    %57 = arith.addi %56, %c8_i64 : i64
    %58 = llvm.getelementptr %10[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = llvm.load %58 : !llvm.ptr -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %60 = arith.cmpi eq, %59, %c0_i32_16 : i32
    %61 = arith.extui %60 : i1 to i32
    %c0_i32_17 = arith.constant 0 : i32
    %62 = arith.cmpi ne, %61, %c0_i32_17 : i32
    cf.cond_br %62, ^bb8, ^bb9
  ^bb6:  // pred: ^bb3
    %63 = llvm.load %3 : !llvm.ptr -> i32
    %64 = llvm.load %5 : !llvm.ptr -> i32
    %c28_i64 = arith.constant 28 : i64
    %65 = arith.extui %63 : i32 to i64
    %66 = arith.addi %65, %c28_i64 : i64
    %67 = llvm.getelementptr %10[%66] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %64, %67 : i32, !llvm.ptr
    %68 = llvm.load %3 : !llvm.ptr -> i32
    %69 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %70 = arith.extui %69 : i32 to i64
    %71 = arith.addi %70, %c4_i64 : i64
    %72 = llvm.getelementptr %10[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %73 = llvm.load %72 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %74 = arith.extui %68 : i32 to i64
    %75 = arith.addi %74, %c20_i64 : i64
    %76 = llvm.getelementptr %10[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %73, %76 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb7:  // pred: ^bb3
    %c0_i32_18 = arith.constant 0 : i32
    llvm.store %c0_i32_18, %4 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb8:  // pred: ^bb5
    %77 = llvm.load %3 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %78 = arith.extui %77 : i32 to i64
    %79 = arith.addi %78, %c12_i64 : i64
    %80 = llvm.getelementptr %10[%79] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %81 = llvm.load %80 : !llvm.ptr -> i32
    llvm.store %81, %2 : i32, !llvm.ptr
    %82 = llvm.load %0 : !llvm.ptr -> i32
    %83 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_19 = arith.constant 0 : i64
    %84 = arith.extui %82 : i32 to i64
    %85 = arith.addi %84, %c0_i64_19 : i64
    %86 = llvm.getelementptr %10[%85] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %83, %86 : i32, !llvm.ptr
    %87 = llvm.load %0 : !llvm.ptr -> i32
    %88 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i64_20 = arith.constant 4 : i64
    %89 = arith.extui %87 : i32 to i64
    %90 = arith.addi %89, %c4_i64_20 : i64
    %91 = llvm.getelementptr %10[%90] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %88, %91 : i32, !llvm.ptr
    %92 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32_21 = arith.constant 32 : i32
    %93 = arith.addi %92, %c32_i32_21 : i32
    llvm.store %93, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb9:  // pred: ^bb5
    %94 = llvm.load %3 : !llvm.ptr -> i32
    %c12_i64_22 = arith.constant 12 : i64
    %95 = arith.extui %94 : i32 to i64
    %96 = arith.addi %95, %c12_i64_22 : i64
    %97 = llvm.getelementptr %10[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %98 = llvm.load %97 : !llvm.ptr -> i32
    %99 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %100 = arith.extui %99 : i32 to i64
    %101 = arith.addi %100, %c16_i64 : i64
    %102 = llvm.getelementptr %10[%101] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %103 = llvm.load %102 : !llvm.ptr -> i32
    call @f126(%arg0, %98, %103) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  }
  func.func @f102(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %2 = llvm.load %0 : !llvm.ptr -> i32
    %c1049692_i32 = arith.constant 1049692 : i32
    %3 = llvm.load %1 : !llvm.ptr -> i32
    %4 = call @f133(%arg0, %2, %c1049692_i32, %3) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%4 : i32)
  ^bb2(%5: i32):  // pred: ^bb1
    return %5 : i32
  }
  func.func @f103(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %6 = arith.extui %5 : i32 to i64
    %7 = arith.addi %6, %c0_i64 : i64
    %8 = llvm.getelementptr %4[%7] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> i32
    llvm.store %9, %1 : i32, !llvm.ptr
    %c0_i32_1 = arith.constant 0 : i32
    %10 = arith.cmpi eq, %9, %c0_i32_1 : i32
    %11 = arith.extui %10 : i1 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %12 = arith.cmpi ne, %11, %c0_i32_2 : i32
    cf.cond_br %12, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c4_i64 : i64
    %16 = llvm.getelementptr %4[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i32
    %18 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    call @f72(%arg0, %17, %18, %c1_i32) : (!llvm.ptr, i32, i32, i32) -> ()
    cf.br ^bb3
  }
  func.func @f104(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %6 = arith.extui %5 : i32 to i64
    %7 = arith.addi %6, %c0_i64 : i64
    %8 = llvm.getelementptr %4[%7] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> i32
    llvm.store %9, %1 : i32, !llvm.ptr
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    %10 = arith.ori %9, %c-2147483648_i32 : i32
    %c-2147483648_i32_1 = arith.constant -2147483648 : i32
    %11 = arith.cmpi eq, %10, %c-2147483648_i32_1 : i32
    %12 = arith.extui %11 : i1 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %13 = arith.cmpi ne, %12, %c0_i32_2 : i32
    cf.cond_br %13, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %14 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %15 = arith.extui %14 : i32 to i64
    %16 = arith.addi %15, %c4_i64 : i64
    %17 = llvm.getelementptr %4[%16] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %18 = llvm.load %17 : !llvm.ptr -> i32
    %19 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    call @f72(%arg0, %18, %19, %c1_i32) : (!llvm.ptr, i32, i32, i32) -> ()
    cf.br ^bb3
  }
  func.func @f105(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %6 = arith.extui %5 : i32 to i64
    %7 = arith.addi %6, %c0_i64 : i64
    %8 = llvm.getelementptr %4[%7] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32, %8 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f106(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %9 = llvm.load %5 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %10 = arith.subi %9, %c16_i32 : i32
    llvm.store %10, %2 : i32, !llvm.ptr
    llvm.store %10, %5 : i32, !llvm.ptr
    %11 = llvm.load %1 : !llvm.ptr -> i32
    %c128_i32 = arith.constant 128 : i32
    %12 = arith.cmpi ult, %11, %c128_i32 : i32
    %13 = arith.extui %12 : i1 to i32
    %c0_i32_3 = arith.constant 0 : i32
    %14 = arith.cmpi ne, %13, %c0_i32_3 : i32
    cf.cond_br %14, ^bb6, ^bb7
  ^bb2(%15: i32):  // pred: ^bb3
    return %15 : i32
  ^bb3:  // 2 preds: ^bb11, ^bb13
    %16 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_4 = arith.constant 16 : i32
    %17 = arith.addi %16, %c16_i32_4 : i32
    llvm.store %17, %5 : i32, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    cf.br ^bb2(%c0_i32_5 : i32)
  ^bb4:  // 3 preds: ^bb5, ^bb9, ^bb10
    %18 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %19 = arith.extui %18 : i32 to i64
    %20 = arith.addi %19, %c0_i64 : i64
    %21 = llvm.getelementptr %8[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %22 = llvm.load %21 : !llvm.ptr -> i32
    %23 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %24 = arith.extui %23 : i32 to i64
    %25 = arith.addi %24, %c8_i64 : i64
    %26 = llvm.getelementptr %8[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %27 = llvm.load %26 : !llvm.ptr -> i32
    llvm.store %27, %3 : i32, !llvm.ptr
    %28 = arith.subi %22, %27 : i32
    %29 = llvm.load %1 : !llvm.ptr -> i32
    %30 = arith.cmpi uge, %28, %29 : i32
    %31 = arith.extui %30 : i1 to i32
    %c0_i32_6 = arith.constant 0 : i32
    %32 = arith.cmpi ne, %31, %c0_i32_6 : i32
    cf.cond_br %32, ^bb13, ^bb14
  ^bb5:  // pred: ^bb7
    %33 = llvm.load %2 : !llvm.ptr -> i32
    %34 = llvm.load %1 : !llvm.ptr -> i32
    %c63_i32 = arith.constant 63 : i32
    %35 = arith.andi %34, %c63_i32 : i32
    %c128_i32_7 = arith.constant 128 : i32
    %36 = arith.ori %35, %c128_i32_7 : i32
    %c13_i64 = arith.constant 13 : i64
    %37 = arith.extui %33 : i32 to i64
    %38 = arith.addi %37, %c13_i64 : i64
    %39 = llvm.getelementptr %8[%38] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %40 = arith.trunci %36 : i32 to i8
    llvm.store %40, %39 : i8, !llvm.ptr
    %41 = llvm.load %2 : !llvm.ptr -> i32
    %42 = llvm.load %1 : !llvm.ptr -> i32
    %c6_i32 = arith.constant 6 : i32
    %c31_i32 = arith.constant 31 : i32
    %43 = arith.cmpi ule, %c6_i32, %c31_i32 : i32
    %44 = scf.if %43 -> (i32) {
      %186 = arith.shrui %42, %c6_i32 : i32
      scf.yield %186 : i32
    } else {
      %c0_i32_44 = arith.constant 0 : i32
      scf.yield %c0_i32_44 : i32
    }
    %c192_i32 = arith.constant 192 : i32
    %45 = arith.ori %44, %c192_i32 : i32
    %c12_i64 = arith.constant 12 : i64
    %46 = arith.extui %41 : i32 to i64
    %47 = arith.addi %46, %c12_i64 : i64
    %48 = llvm.getelementptr %8[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = arith.trunci %45 : i32 to i8
    llvm.store %49, %48 : i8, !llvm.ptr
    %c2_i32 = arith.constant 2 : i32
    llvm.store %c2_i32, %1 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb6:  // pred: ^bb1
    %50 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i64_8 = arith.constant 8 : i64
    %51 = arith.extui %50 : i32 to i64
    %52 = arith.addi %51, %c8_i64_8 : i64
    %53 = llvm.getelementptr %8[%52] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.load %53 : !llvm.ptr -> i32
    llvm.store %54, %3 : i32, !llvm.ptr
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %56 = arith.extui %55 : i32 to i64
    %57 = arith.addi %56, %c0_i64_9 : i64
    %58 = llvm.getelementptr %8[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = llvm.load %58 : !llvm.ptr -> i32
    %60 = arith.cmpi eq, %54, %59 : i32
    %61 = arith.extui %60 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %62 = arith.xori %61, %c-1_i32 : i32
    %c0_i32_10 = arith.constant 0 : i32
    %63 = arith.cmpi ne, %62, %c0_i32_10 : i32
    cf.cond_br %63, ^bb11, ^bb12
  ^bb7:  // pred: ^bb1
    %64 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_11 = arith.constant 0 : i32
    %c12_i64_12 = arith.constant 12 : i64
    %65 = arith.extui %64 : i32 to i64
    %66 = arith.addi %65, %c12_i64_12 : i64
    %67 = llvm.getelementptr %8[%66] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_11, %67 : i32, !llvm.ptr
    %68 = llvm.load %1 : !llvm.ptr -> i32
    %c2048_i32 = arith.constant 2048 : i32
    %69 = arith.cmpi ult, %68, %c2048_i32 : i32
    %70 = arith.extui %69 : i1 to i32
    %c0_i32_13 = arith.constant 0 : i32
    %71 = arith.cmpi ne, %70, %c0_i32_13 : i32
    cf.cond_br %71, ^bb5, ^bb8
  ^bb8:  // pred: ^bb7
    %72 = llvm.load %1 : !llvm.ptr -> i32
    %c65536_i32 = arith.constant 65536 : i32
    %73 = arith.cmpi uge, %72, %c65536_i32 : i32
    %74 = arith.extui %73 : i1 to i32
    %c0_i32_14 = arith.constant 0 : i32
    %75 = arith.cmpi ne, %74, %c0_i32_14 : i32
    cf.cond_br %75, ^bb9, ^bb10
  ^bb9:  // pred: ^bb8
    %76 = llvm.load %2 : !llvm.ptr -> i32
    %77 = llvm.load %1 : !llvm.ptr -> i32
    %c63_i32_15 = arith.constant 63 : i32
    %78 = arith.andi %77, %c63_i32_15 : i32
    %c128_i32_16 = arith.constant 128 : i32
    %79 = arith.ori %78, %c128_i32_16 : i32
    %c15_i64 = arith.constant 15 : i64
    %80 = arith.extui %76 : i32 to i64
    %81 = arith.addi %80, %c15_i64 : i64
    %82 = llvm.getelementptr %8[%81] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %83 = arith.trunci %79 : i32 to i8
    llvm.store %83, %82 : i8, !llvm.ptr
    %84 = llvm.load %2 : !llvm.ptr -> i32
    %85 = llvm.load %1 : !llvm.ptr -> i32
    %c6_i32_17 = arith.constant 6 : i32
    %c31_i32_18 = arith.constant 31 : i32
    %86 = arith.cmpi ule, %c6_i32_17, %c31_i32_18 : i32
    %87 = scf.if %86 -> (i32) {
      %186 = arith.shrui %85, %c6_i32_17 : i32
      scf.yield %186 : i32
    } else {
      %c0_i32_44 = arith.constant 0 : i32
      scf.yield %c0_i32_44 : i32
    }
    %c63_i32_19 = arith.constant 63 : i32
    %88 = arith.andi %87, %c63_i32_19 : i32
    %c128_i32_20 = arith.constant 128 : i32
    %89 = arith.ori %88, %c128_i32_20 : i32
    %c14_i64 = arith.constant 14 : i64
    %90 = arith.extui %84 : i32 to i64
    %91 = arith.addi %90, %c14_i64 : i64
    %92 = llvm.getelementptr %8[%91] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %93 = arith.trunci %89 : i32 to i8
    llvm.store %93, %92 : i8, !llvm.ptr
    %94 = llvm.load %2 : !llvm.ptr -> i32
    %95 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %c31_i32_21 = arith.constant 31 : i32
    %96 = arith.cmpi ule, %c12_i32, %c31_i32_21 : i32
    %97 = scf.if %96 -> (i32) {
      %186 = arith.shrui %95, %c12_i32 : i32
      scf.yield %186 : i32
    } else {
      %c0_i32_44 = arith.constant 0 : i32
      scf.yield %c0_i32_44 : i32
    }
    %c63_i32_22 = arith.constant 63 : i32
    %98 = arith.andi %97, %c63_i32_22 : i32
    %c128_i32_23 = arith.constant 128 : i32
    %99 = arith.ori %98, %c128_i32_23 : i32
    %c13_i64_24 = arith.constant 13 : i64
    %100 = arith.extui %94 : i32 to i64
    %101 = arith.addi %100, %c13_i64_24 : i64
    %102 = llvm.getelementptr %8[%101] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %103 = arith.trunci %99 : i32 to i8
    llvm.store %103, %102 : i8, !llvm.ptr
    %104 = llvm.load %2 : !llvm.ptr -> i32
    %105 = llvm.load %1 : !llvm.ptr -> i32
    %c18_i32 = arith.constant 18 : i32
    %c31_i32_25 = arith.constant 31 : i32
    %106 = arith.cmpi ule, %c18_i32, %c31_i32_25 : i32
    %107 = scf.if %106 -> (i32) {
      %186 = arith.shrui %105, %c18_i32 : i32
      scf.yield %186 : i32
    } else {
      %c0_i32_44 = arith.constant 0 : i32
      scf.yield %c0_i32_44 : i32
    }
    %c7_i32 = arith.constant 7 : i32
    %108 = arith.andi %107, %c7_i32 : i32
    %c240_i32 = arith.constant 240 : i32
    %109 = arith.ori %108, %c240_i32 : i32
    %c12_i64_26 = arith.constant 12 : i64
    %110 = arith.extui %104 : i32 to i64
    %111 = arith.addi %110, %c12_i64_26 : i64
    %112 = llvm.getelementptr %8[%111] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %113 = arith.trunci %109 : i32 to i8
    llvm.store %113, %112 : i8, !llvm.ptr
    %c4_i32 = arith.constant 4 : i32
    llvm.store %c4_i32, %1 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb10:  // pred: ^bb8
    %114 = llvm.load %2 : !llvm.ptr -> i32
    %115 = llvm.load %1 : !llvm.ptr -> i32
    %c63_i32_27 = arith.constant 63 : i32
    %116 = arith.andi %115, %c63_i32_27 : i32
    %c128_i32_28 = arith.constant 128 : i32
    %117 = arith.ori %116, %c128_i32_28 : i32
    %c14_i64_29 = arith.constant 14 : i64
    %118 = arith.extui %114 : i32 to i64
    %119 = arith.addi %118, %c14_i64_29 : i64
    %120 = llvm.getelementptr %8[%119] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %121 = arith.trunci %117 : i32 to i8
    llvm.store %121, %120 : i8, !llvm.ptr
    %122 = llvm.load %2 : !llvm.ptr -> i32
    %123 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i32_30 = arith.constant 12 : i32
    %c31_i32_31 = arith.constant 31 : i32
    %124 = arith.cmpi ule, %c12_i32_30, %c31_i32_31 : i32
    %125 = scf.if %124 -> (i32) {
      %186 = arith.shrui %123, %c12_i32_30 : i32
      scf.yield %186 : i32
    } else {
      %c0_i32_44 = arith.constant 0 : i32
      scf.yield %c0_i32_44 : i32
    }
    %c224_i32 = arith.constant 224 : i32
    %126 = arith.ori %125, %c224_i32 : i32
    %c12_i64_32 = arith.constant 12 : i64
    %127 = arith.extui %122 : i32 to i64
    %128 = arith.addi %127, %c12_i64_32 : i64
    %129 = llvm.getelementptr %8[%128] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %130 = arith.trunci %126 : i32 to i8
    llvm.store %130, %129 : i8, !llvm.ptr
    %131 = llvm.load %2 : !llvm.ptr -> i32
    %132 = llvm.load %1 : !llvm.ptr -> i32
    %c6_i32_33 = arith.constant 6 : i32
    %c31_i32_34 = arith.constant 31 : i32
    %133 = arith.cmpi ule, %c6_i32_33, %c31_i32_34 : i32
    %134 = scf.if %133 -> (i32) {
      %186 = arith.shrui %132, %c6_i32_33 : i32
      scf.yield %186 : i32
    } else {
      %c0_i32_44 = arith.constant 0 : i32
      scf.yield %c0_i32_44 : i32
    }
    %c63_i32_35 = arith.constant 63 : i32
    %135 = arith.andi %134, %c63_i32_35 : i32
    %c128_i32_36 = arith.constant 128 : i32
    %136 = arith.ori %135, %c128_i32_36 : i32
    %c13_i64_37 = arith.constant 13 : i64
    %137 = arith.extui %131 : i32 to i64
    %138 = arith.addi %137, %c13_i64_37 : i64
    %139 = llvm.getelementptr %8[%138] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %140 = arith.trunci %136 : i32 to i8
    llvm.store %140, %139 : i8, !llvm.ptr
    %c3_i32 = arith.constant 3 : i32
    llvm.store %c3_i32, %1 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb11:  // 2 preds: ^bb6, ^bb12
    %141 = llvm.load %0 : !llvm.ptr -> i32
    %142 = llvm.load %3 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %143 = arith.addi %142, %c1_i32 : i32
    %c8_i64_38 = arith.constant 8 : i64
    %144 = arith.extui %141 : i32 to i64
    %145 = arith.addi %144, %c8_i64_38 : i64
    %146 = llvm.getelementptr %8[%145] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %143, %146 : i32, !llvm.ptr
    %147 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %148 = arith.extui %147 : i32 to i64
    %149 = arith.addi %148, %c4_i64 : i64
    %150 = llvm.getelementptr %8[%149] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %151 = llvm.load %150 : !llvm.ptr -> i32
    %152 = llvm.load %3 : !llvm.ptr -> i32
    %153 = arith.addi %151, %152 : i32
    %154 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_39 = arith.constant 0 : i64
    %155 = arith.extui %153 : i32 to i64
    %156 = arith.addi %155, %c0_i64_39 : i64
    %157 = llvm.getelementptr %8[%156] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %158 = arith.trunci %154 : i32 to i8
    llvm.store %158, %157 : i8, !llvm.ptr
    cf.br ^bb3
  ^bb12:  // pred: ^bb6
    %159 = llvm.load %0 : !llvm.ptr -> i32
    call @f107(%arg0, %159) : (!llvm.ptr, i32) -> ()
    cf.br ^bb11
  ^bb13:  // 2 preds: ^bb4, ^bb14
    %160 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64_40 = arith.constant 4 : i64
    %161 = arith.extui %160 : i32 to i64
    %162 = arith.addi %161, %c4_i64_40 : i64
    %163 = llvm.getelementptr %8[%162] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %164 = llvm.load %163 : !llvm.ptr -> i32
    %165 = llvm.load %3 : !llvm.ptr -> i32
    %166 = arith.addi %164, %165 : i32
    %167 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_41 = arith.constant 12 : i32
    %168 = arith.addi %167, %c12_i32_41 : i32
    %169 = llvm.load %1 : !llvm.ptr -> i32
    %170 = call @f145(%arg0, %166, %168, %169) : (!llvm.ptr, i32, i32, i32) -> i32
    %171 = llvm.load %0 : !llvm.ptr -> i32
    %172 = llvm.load %3 : !llvm.ptr -> i32
    %173 = llvm.load %1 : !llvm.ptr -> i32
    %174 = arith.addi %172, %173 : i32
    %c8_i64_42 = arith.constant 8 : i64
    %175 = arith.extui %171 : i32 to i64
    %176 = arith.addi %175, %c8_i64_42 : i64
    %177 = llvm.getelementptr %8[%176] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %174, %177 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb14:  // pred: ^bb4
    %178 = llvm.load %0 : !llvm.ptr -> i32
    %179 = llvm.load %3 : !llvm.ptr -> i32
    %180 = llvm.load %1 : !llvm.ptr -> i32
    call @f101(%arg0, %178, %179, %180) : (!llvm.ptr, i32, i32, i32) -> ()
    %181 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i64_43 = arith.constant 8 : i64
    %182 = arith.extui %181 : i32 to i64
    %183 = arith.addi %182, %c8_i64_43 : i64
    %184 = llvm.getelementptr %8[%183] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %185 = llvm.load %184 : !llvm.ptr -> i32
    llvm.store %185, %3 : i32, !llvm.ptr
    cf.br ^bb13
  }
  func.func @f107(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %11 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %12 = arith.subi %11, %c32_i32 : i32
    llvm.store %12, %1 : i32, !llvm.ptr
    llvm.store %12, %7 : i32, !llvm.ptr
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c0_i64 : i64
    %16 = llvm.getelementptr %10[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i32
    llvm.store %17, %2 : i32, !llvm.ptr
    %c-1_i32 = arith.constant -1 : i32
    %18 = arith.cmpi eq, %17, %c-1_i32 : i32
    %19 = arith.extui %18 : i1 to i32
    %c-1_i32_5 = arith.constant -1 : i32
    %20 = arith.xori %19, %c-1_i32_5 : i32
    %c0_i32_6 = arith.constant 0 : i32
    %21 = arith.cmpi ne, %20, %c0_i32_6 : i32
    cf.cond_br %21, ^bb3, ^bb4
  ^bb2:  // pred: ^bb8
    return
  ^bb3:  // pred: ^bb1
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %3 : i32, !llvm.ptr
    %22 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32_7 = arith.constant 1 : i32
    %c31_i32 = arith.constant 31 : i32
    %23 = arith.cmpi ule, %c1_i32_7, %c31_i32 : i32
    %24 = scf.if %23 -> (i32) {
      %103 = arith.shli %22, %c1_i32_7 : i32
      scf.yield %103 : i32
    } else {
      %c0_i32_26 = arith.constant 0 : i32
      scf.yield %c0_i32_26 : i32
    }
    llvm.store %24, %4 : i32, !llvm.ptr
    %25 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32_8 = arith.constant 1 : i32
    %26 = arith.addi %25, %c1_i32_8 : i32
    llvm.store %26, %5 : i32, !llvm.ptr
    %27 = llvm.load %4 : !llvm.ptr -> i32
    %28 = llvm.load %5 : !llvm.ptr -> i32
    %29 = arith.cmpi ugt, %27, %28 : i32
    %30 = arith.extui %29 : i1 to i32
    %c0_i32_9 = arith.constant 0 : i32
    %31 = arith.cmpi ne, %30, %c0_i32_9 : i32
    %32 = arith.select %31, %24, %26 : i32
    llvm.store %32, %4 : i32, !llvm.ptr
    %c8_i32 = arith.constant 8 : i32
    %33 = llvm.load %4 : !llvm.ptr -> i32
    %c8_i32_10 = arith.constant 8 : i32
    %34 = arith.cmpi ugt, %33, %c8_i32_10 : i32
    %35 = arith.extui %34 : i1 to i32
    %c0_i32_11 = arith.constant 0 : i32
    %36 = arith.cmpi ne, %35, %c0_i32_11 : i32
    %37 = arith.select %36, %32, %c8_i32 : i32
    llvm.store %37, %4 : i32, !llvm.ptr
    %c-1_i32_12 = arith.constant -1 : i32
    %38 = arith.xori %37, %c-1_i32_12 : i32
    %c31_i32_13 = arith.constant 31 : i32
    %c31_i32_14 = arith.constant 31 : i32
    %39 = arith.cmpi ule, %c31_i32_13, %c31_i32_14 : i32
    %40 = scf.if %39 -> (i32) {
      %103 = arith.shrui %38, %c31_i32_13 : i32
      scf.yield %103 : i32
    } else {
      %c0_i32_26 = arith.constant 0 : i32
      scf.yield %c0_i32_26 : i32
    }
    llvm.store %40, %5 : i32, !llvm.ptr
    %41 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %42 = arith.cmpi ne, %41, %c0_i32_15 : i32
    cf.cond_br %42, ^bb6, ^bb7
  ^bb4:  // pred: ^bb1
    %c0_i32_16 = arith.constant 0 : i32
    %c0_i32_17 = arith.constant 0 : i32
    call @f126(%arg0, %c0_i32_16, %c0_i32_17) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb5:  // 2 preds: ^bb6, ^bb7
    %43 = llvm.load %1 : !llvm.ptr -> i32
    %44 = llvm.load %3 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %45 = arith.extui %43 : i32 to i64
    %46 = arith.addi %45, %c24_i64 : i64
    %47 = llvm.getelementptr %10[%46] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %44, %47 : i32, !llvm.ptr
    %48 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_18 = arith.constant 8 : i32
    %49 = arith.addi %48, %c8_i32_18 : i32
    %50 = llvm.load %5 : !llvm.ptr -> i32
    %51 = llvm.load %4 : !llvm.ptr -> i32
    %52 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i32 = arith.constant 20 : i32
    %53 = arith.addi %52, %c20_i32 : i32
    call @f109(%arg0, %49, %50, %51, %53) : (!llvm.ptr, i32, i32, i32, i32) -> ()
    %54 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %55 = arith.extui %54 : i32 to i64
    %56 = arith.addi %55, %c8_i64 : i64
    %57 = llvm.getelementptr %10[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i32
    %c0_i32_19 = arith.constant 0 : i32
    %59 = arith.cmpi eq, %58, %c0_i32_19 : i32
    %60 = arith.extui %59 : i1 to i32
    %c0_i32_20 = arith.constant 0 : i32
    %61 = arith.cmpi ne, %60, %c0_i32_20 : i32
    cf.cond_br %61, ^bb8, ^bb9
  ^bb6:  // pred: ^bb3
    %62 = llvm.load %1 : !llvm.ptr -> i32
    %63 = llvm.load %2 : !llvm.ptr -> i32
    %c28_i64 = arith.constant 28 : i64
    %64 = arith.extui %62 : i32 to i64
    %65 = arith.addi %64, %c28_i64 : i64
    %66 = llvm.getelementptr %10[%65] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %63, %66 : i32, !llvm.ptr
    %67 = llvm.load %1 : !llvm.ptr -> i32
    %68 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %69 = arith.extui %68 : i32 to i64
    %70 = arith.addi %69, %c4_i64 : i64
    %71 = llvm.getelementptr %10[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.load %71 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %73 = arith.extui %67 : i32 to i64
    %74 = arith.addi %73, %c20_i64 : i64
    %75 = llvm.getelementptr %10[%74] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %72, %75 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb7:  // pred: ^bb3
    %c0_i32_21 = arith.constant 0 : i32
    llvm.store %c0_i32_21, %3 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb8:  // pred: ^bb5
    %76 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %77 = arith.extui %76 : i32 to i64
    %78 = arith.addi %77, %c12_i64 : i64
    %79 = llvm.getelementptr %10[%78] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %80 = llvm.load %79 : !llvm.ptr -> i32
    llvm.store %80, %2 : i32, !llvm.ptr
    %81 = llvm.load %0 : !llvm.ptr -> i32
    %82 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_22 = arith.constant 0 : i64
    %83 = arith.extui %81 : i32 to i64
    %84 = arith.addi %83, %c0_i64_22 : i64
    %85 = llvm.getelementptr %10[%84] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %82, %85 : i32, !llvm.ptr
    %86 = llvm.load %0 : !llvm.ptr -> i32
    %87 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i64_23 = arith.constant 4 : i64
    %88 = arith.extui %86 : i32 to i64
    %89 = arith.addi %88, %c4_i64_23 : i64
    %90 = llvm.getelementptr %10[%89] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %87, %90 : i32, !llvm.ptr
    %91 = llvm.load %1 : !llvm.ptr -> i32
    %c32_i32_24 = arith.constant 32 : i32
    %92 = arith.addi %91, %c32_i32_24 : i32
    llvm.store %92, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb9:  // pred: ^bb5
    %93 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i64_25 = arith.constant 12 : i64
    %94 = arith.extui %93 : i32 to i64
    %95 = arith.addi %94, %c12_i64_25 : i64
    %96 = llvm.getelementptr %10[%95] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %97 = llvm.load %96 : !llvm.ptr -> i32
    %98 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %99 = arith.extui %98 : i32 to i64
    %100 = arith.addi %99, %c16_i64 : i64
    %101 = llvm.getelementptr %10[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %102 = llvm.load %101 : !llvm.ptr -> i32
    call @f126(%arg0, %97, %102) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  }
  func.func @f108(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %8 = arith.extui %7 : i32 to i64
    %9 = arith.addi %8, %c0_i64 : i64
    %10 = llvm.getelementptr %6[%9] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> i32
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c8_i64 : i64
    %15 = llvm.getelementptr %6[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i32
    llvm.store %16, %3 : i32, !llvm.ptr
    %17 = arith.subi %11, %16 : i32
    %18 = llvm.load %2 : !llvm.ptr -> i32
    %19 = arith.cmpi uge, %17, %18 : i32
    %20 = arith.extui %19 : i1 to i32
    %c0_i32_3 = arith.constant 0 : i32
    %21 = arith.cmpi ne, %20, %c0_i32_3 : i32
    cf.cond_br %21, ^bb3, ^bb4
  ^bb2(%22: i32):  // pred: ^bb3
    return %22 : i32
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %23 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %24 = arith.extui %23 : i32 to i64
    %25 = arith.addi %24, %c4_i64 : i64
    %26 = llvm.getelementptr %6[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %27 = llvm.load %26 : !llvm.ptr -> i32
    %28 = llvm.load %3 : !llvm.ptr -> i32
    %29 = arith.addi %27, %28 : i32
    %30 = llvm.load %1 : !llvm.ptr -> i32
    %31 = llvm.load %2 : !llvm.ptr -> i32
    %32 = call @f145(%arg0, %29, %30, %31) : (!llvm.ptr, i32, i32, i32) -> i32
    %33 = llvm.load %0 : !llvm.ptr -> i32
    %34 = llvm.load %3 : !llvm.ptr -> i32
    %35 = llvm.load %2 : !llvm.ptr -> i32
    %36 = arith.addi %34, %35 : i32
    %c8_i64_4 = arith.constant 8 : i64
    %37 = arith.extui %33 : i32 to i64
    %38 = arith.addi %37, %c8_i64_4 : i64
    %39 = llvm.getelementptr %6[%38] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %36, %39 : i32, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    cf.br ^bb2(%c0_i32_5 : i32)
  ^bb4:  // pred: ^bb1
    %40 = llvm.load %0 : !llvm.ptr -> i32
    %41 = llvm.load %3 : !llvm.ptr -> i32
    %42 = llvm.load %2 : !llvm.ptr -> i32
    call @f101(%arg0, %40, %41, %42) : (!llvm.ptr, i32, i32, i32) -> ()
    %43 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i64_6 = arith.constant 8 : i64
    %44 = arith.extui %43 : i32 to i64
    %45 = arith.addi %44, %c8_i64_6 : i64
    %46 = llvm.getelementptr %6[%45] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i32
    llvm.store %47, %3 : i32, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f109(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %5 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %8 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_4 = arith.constant 0 : i32
    %9 = arith.cmpi eq, %8, %c0_i32_4 : i32
    %10 = arith.extui %9 : i1 to i32
    %c0_i32_5 = arith.constant 0 : i32
    %11 = arith.cmpi ne, %10, %c0_i32_5 : i32
    cf.cond_br %11, ^bb5, ^bb6
  ^bb2:  // 2 preds: ^bb3, ^bb19
    return
  ^bb3:  // 3 preds: ^bb4, ^bb5, ^bb18
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %c0_i64 = arith.constant 0 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c0_i64 : i64
    %15 = llvm.getelementptr %7[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i32, %15 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb6
    %16 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_6 = arith.constant 0 : i32
    %c4_i64 = arith.constant 4 : i64
    %17 = arith.extui %16 : i32 to i64
    %18 = arith.addi %17, %c4_i64 : i64
    %19 = llvm.getelementptr %7[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_6, %19 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %20 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_7 = arith.constant 0 : i32
    %c4_i64_8 = arith.constant 4 : i64
    %21 = arith.extui %20 : i32 to i64
    %22 = arith.addi %21, %c4_i64_8 : i64
    %23 = llvm.getelementptr %7[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_7, %23 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb6:  // pred: ^bb1
    %24 = llvm.load %2 : !llvm.ptr -> i32
    %c-1_i32 = arith.constant -1 : i32
    %25 = arith.cmpi sle, %24, %c-1_i32 : i32
    %26 = arith.extui %25 : i1 to i32
    %c0_i32_9 = arith.constant 0 : i32
    %27 = arith.cmpi ne, %26, %c0_i32_9 : i32
    cf.cond_br %27, ^bb4, ^bb7
  ^bb7:  // pred: ^bb6
    %28 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i64_10 = arith.constant 4 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c4_i64_10 : i64
    %31 = llvm.getelementptr %7[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %32 = llvm.load %31 : !llvm.ptr -> i32
    %c0_i32_11 = arith.constant 0 : i32
    %33 = arith.cmpi eq, %32, %c0_i32_11 : i32
    %34 = arith.extui %33 : i1 to i32
    %c0_i32_12 = arith.constant 0 : i32
    %35 = arith.cmpi ne, %34, %c0_i32_12 : i32
    cf.cond_br %35, ^bb10, ^bb11
  ^bb8:  // 4 preds: ^bb9, ^bb12, ^bb15, ^bb17
    %36 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_13 = arith.constant 0 : i32
    %37 = arith.cmpi eq, %36, %c0_i32_13 : i32
    %38 = arith.extui %37 : i1 to i32
    %c0_i32_14 = arith.constant 0 : i32
    %39 = arith.cmpi ne, %38, %c0_i32_14 : i32
    cf.cond_br %39, ^bb18, ^bb19
  ^bb9:  // 2 preds: ^bb14, ^bb16
    %40 = llvm.load %2 : !llvm.ptr -> i32
    %41 = llvm.load %1 : !llvm.ptr -> i32
    %42 = call @f71(%arg0, %40, %41) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %42, %3 : i32, !llvm.ptr
    cf.br ^bb8
  ^bb10:  // pred: ^bb7
    %43 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %44 = arith.cmpi ne, %43, %c0_i32_15 : i32
    cf.cond_br %44, ^bb16, ^bb17
  ^bb11:  // pred: ^bb7
    %45 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %46 = arith.extui %45 : i32 to i64
    %47 = arith.addi %46, %c8_i64 : i64
    %48 = llvm.getelementptr %7[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i32
    llvm.store %49, %4 : i32, !llvm.ptr
    %c0_i32_16 = arith.constant 0 : i32
    %50 = arith.cmpi ne, %49, %c0_i32_16 : i32
    cf.cond_br %50, ^bb12, ^bb13
  ^bb12:  // pred: ^bb11
    %51 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_17 = arith.constant 0 : i64
    %52 = arith.extui %51 : i32 to i64
    %53 = arith.addi %52, %c0_i64_17 : i64
    %54 = llvm.getelementptr %7[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %55 = llvm.load %54 : !llvm.ptr -> i32
    %56 = llvm.load %4 : !llvm.ptr -> i32
    %57 = llvm.load %1 : !llvm.ptr -> i32
    %58 = llvm.load %2 : !llvm.ptr -> i32
    %59 = call @f73(%arg0, %55, %56, %57, %58) : (!llvm.ptr, i32, i32, i32, i32) -> i32
    llvm.store %59, %3 : i32, !llvm.ptr
    cf.br ^bb8
  ^bb13:  // pred: ^bb11
    %60 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_18 = arith.constant 0 : i32
    %61 = arith.cmpi ne, %60, %c0_i32_18 : i32
    cf.cond_br %61, ^bb14, ^bb15
  ^bb14:  // pred: ^bb13
    %c0_i32_19 = arith.constant 0 : i32
    %c1050633_i64 = arith.constant 1050633 : i64
    %62 = arith.extui %c0_i32_19 : i32 to i64
    %63 = arith.addi %62, %c1050633_i64 : i64
    %64 = llvm.getelementptr %7[%63] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i8
    %66 = arith.extui %65 : i8 to i32
    cf.br ^bb9
  ^bb15:  // pred: ^bb13
    %67 = llvm.load %1 : !llvm.ptr -> i32
    llvm.store %67, %3 : i32, !llvm.ptr
    cf.br ^bb8
  ^bb16:  // pred: ^bb10
    %c0_i32_20 = arith.constant 0 : i32
    %c1050633_i64_21 = arith.constant 1050633 : i64
    %68 = arith.extui %c0_i32_20 : i32 to i64
    %69 = arith.addi %68, %c1050633_i64_21 : i64
    %70 = llvm.getelementptr %7[%69] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %71 = llvm.load %70 : !llvm.ptr -> i8
    %72 = arith.extui %71 : i8 to i32
    cf.br ^bb9
  ^bb17:  // pred: ^bb10
    %73 = llvm.load %1 : !llvm.ptr -> i32
    llvm.store %73, %3 : i32, !llvm.ptr
    cf.br ^bb8
  ^bb18:  // pred: ^bb8
    %74 = llvm.load %0 : !llvm.ptr -> i32
    %75 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_22 = arith.constant 8 : i64
    %76 = arith.extui %74 : i32 to i64
    %77 = arith.addi %76, %c8_i64_22 : i64
    %78 = llvm.getelementptr %7[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %75, %78 : i32, !llvm.ptr
    %79 = llvm.load %0 : !llvm.ptr -> i32
    %80 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_23 = arith.constant 4 : i64
    %81 = arith.extui %79 : i32 to i64
    %82 = arith.addi %81, %c4_i64_23 : i64
    %83 = llvm.getelementptr %7[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %80, %83 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb19:  // pred: ^bb8
    %84 = llvm.load %0 : !llvm.ptr -> i32
    %85 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_24 = arith.constant 8 : i64
    %86 = arith.extui %84 : i32 to i64
    %87 = arith.addi %86, %c8_i64_24 : i64
    %88 = llvm.getelementptr %7[%87] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %85, %88 : i32, !llvm.ptr
    %89 = llvm.load %0 : !llvm.ptr -> i32
    %90 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i64_25 = arith.constant 4 : i64
    %91 = arith.extui %89 : i32 to i64
    %92 = arith.addi %91, %c4_i64_25 : i64
    %93 = llvm.getelementptr %7[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %90, %93 : i32, !llvm.ptr
    %94 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_26 = arith.constant 0 : i32
    %c0_i64_27 = arith.constant 0 : i64
    %95 = arith.extui %94 : i32 to i64
    %96 = arith.addi %95, %c0_i64_27 : i64
    %97 = llvm.getelementptr %7[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_26, %97 : i32, !llvm.ptr
    cf.br ^bb2
  }
  func.func @f110(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %1 = llvm.load %0 : !llvm.ptr -> i32
    call @f111(%arg0, %1) : (!llvm.ptr, i32) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f111(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %9 = llvm.load %5 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %10 = arith.subi %9, %c16_i32 : i32
    llvm.store %10, %1 : i32, !llvm.ptr
    llvm.store %10, %5 : i32, !llvm.ptr
    %11 = llvm.load %0 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %12 = arith.extui %11 : i32 to i64
    %13 = arith.addi %12, %c12_i64 : i64
    %14 = llvm.getelementptr %8[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i32
    llvm.store %15, %2 : i32, !llvm.ptr
    %16 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %17 = arith.extui %16 : i32 to i64
    %18 = arith.addi %17, %c4_i64 : i64
    %19 = llvm.getelementptr %8[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %20 = llvm.load %19 : !llvm.ptr -> i32
    cf.switch %20 : i32, [
      default: ^bb4,
      0: ^bb6,
      1: ^bb5
    ]
  ^bb2:  // no predecessors
    return
  ^bb3:  // 2 preds: ^bb7, ^bb8
    %21 = llvm.load %1 : !llvm.ptr -> i32
    %22 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i64_3 = arith.constant 4 : i64
    %23 = arith.extui %21 : i32 to i64
    %24 = arith.addi %23, %c4_i64_3 : i64
    %25 = llvm.getelementptr %8[%24] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %22, %25 : i32, !llvm.ptr
    %26 = llvm.load %1 : !llvm.ptr -> i32
    %27 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %28 = arith.extui %26 : i32 to i64
    %29 = arith.addi %28, %c0_i64 : i64
    %30 = llvm.getelementptr %8[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %27, %30 : i32, !llvm.ptr
    %31 = llvm.load %1 : !llvm.ptr -> i32
    %c1049840_i32 = arith.constant 1049840 : i32
    %32 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %33 = arith.extui %32 : i32 to i64
    %34 = arith.addi %33, %c24_i64 : i64
    %35 = llvm.getelementptr %8[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %36 = llvm.load %35 : !llvm.ptr -> i32
    %37 = llvm.load %0 : !llvm.ptr -> i32
    %c28_i64 = arith.constant 28 : i64
    %38 = arith.extui %37 : i32 to i64
    %39 = arith.addi %38, %c28_i64 : i64
    %40 = llvm.getelementptr %8[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %41 = llvm.load %40 : !llvm.ptr -> i32
    llvm.store %41, %0 : i32, !llvm.ptr
    %c28_i64_4 = arith.constant 28 : i64
    %42 = arith.extui %41 : i32 to i64
    %43 = arith.addi %42, %c28_i64_4 : i64
    %44 = llvm.getelementptr %8[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> i8
    %46 = arith.extui %45 : i8 to i32
    %47 = llvm.load %0 : !llvm.ptr -> i32
    %c29_i64 = arith.constant 29 : i64
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.addi %48, %c29_i64 : i64
    %50 = llvm.getelementptr %8[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i8
    %52 = arith.extui %51 : i8 to i32
    call @f121(%arg0, %31, %c1049840_i32, %36, %46, %52) : (!llvm.ptr, i32, i32, i32, i32, i32) -> ()
    llvm.unreachable
  ^bb4:  // 3 preds: ^bb1, ^bb5, ^bb6
    %53 = llvm.load %1 : !llvm.ptr -> i32
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    %c0_i64_5 = arith.constant 0 : i64
    %54 = arith.extui %53 : i32 to i64
    %55 = arith.addi %54, %c0_i64_5 : i64
    %56 = llvm.getelementptr %8[%55] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c-2147483648_i32, %56 : i32, !llvm.ptr
    %57 = llvm.load %1 : !llvm.ptr -> i32
    %58 = llvm.load %0 : !llvm.ptr -> i32
    %c12_i64_6 = arith.constant 12 : i64
    %59 = arith.extui %57 : i32 to i64
    %60 = arith.addi %59, %c12_i64_6 : i64
    %61 = llvm.getelementptr %8[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %58, %61 : i32, !llvm.ptr
    %62 = llvm.load %1 : !llvm.ptr -> i32
    %c1049868_i32 = arith.constant 1049868 : i32
    %63 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64_7 = arith.constant 24 : i64
    %64 = arith.extui %63 : i32 to i64
    %65 = arith.addi %64, %c24_i64_7 : i64
    %66 = llvm.getelementptr %8[%65] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %67 = llvm.load %66 : !llvm.ptr -> i32
    %68 = llvm.load %0 : !llvm.ptr -> i32
    %c28_i64_8 = arith.constant 28 : i64
    %69 = arith.extui %68 : i32 to i64
    %70 = arith.addi %69, %c28_i64_8 : i64
    %71 = llvm.getelementptr %8[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.load %71 : !llvm.ptr -> i32
    llvm.store %72, %0 : i32, !llvm.ptr
    %c28_i64_9 = arith.constant 28 : i64
    %73 = arith.extui %72 : i32 to i64
    %74 = arith.addi %73, %c28_i64_9 : i64
    %75 = llvm.getelementptr %8[%74] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %76 = llvm.load %75 : !llvm.ptr -> i8
    %77 = arith.extui %76 : i8 to i32
    %78 = llvm.load %0 : !llvm.ptr -> i32
    %c29_i64_10 = arith.constant 29 : i64
    %79 = arith.extui %78 : i32 to i64
    %80 = arith.addi %79, %c29_i64_10 : i64
    %81 = llvm.getelementptr %8[%80] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %82 = llvm.load %81 : !llvm.ptr -> i8
    %83 = arith.extui %82 : i8 to i32
    call @f121(%arg0, %62, %c1049868_i32, %67, %77, %83) : (!llvm.ptr, i32, i32, i32, i32, i32) -> ()
    llvm.unreachable
  ^bb5:  // pred: ^bb1
    %84 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_11 = arith.constant 0 : i32
    %85 = arith.cmpi ne, %84, %c0_i32_11 : i32
    cf.cond_br %85, ^bb4, ^bb8
  ^bb6:  // pred: ^bb1
    %86 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_12 = arith.constant 0 : i32
    %87 = arith.cmpi ne, %86, %c0_i32_12 : i32
    cf.cond_br %87, ^bb4, ^bb7
  ^bb7:  // pred: ^bb6
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %2 : i32, !llvm.ptr
    %c0_i32_13 = arith.constant 0 : i32
    llvm.store %c0_i32_13, %3 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb8:  // pred: ^bb5
    %88 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_14 = arith.constant 0 : i64
    %89 = arith.extui %88 : i32 to i64
    %90 = arith.addi %89, %c0_i64_14 : i64
    %91 = llvm.getelementptr %8[%90] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %92 = llvm.load %91 : !llvm.ptr -> i32
    llvm.store %92, %2 : i32, !llvm.ptr
    %c4_i64_15 = arith.constant 4 : i64
    %93 = arith.extui %92 : i32 to i64
    %94 = arith.addi %93, %c4_i64_15 : i64
    %95 = llvm.getelementptr %8[%94] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %96 = llvm.load %95 : !llvm.ptr -> i32
    llvm.store %96, %3 : i32, !llvm.ptr
    %97 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_16 = arith.constant 0 : i64
    %98 = arith.extui %97 : i32 to i64
    %99 = arith.addi %98, %c0_i64_16 : i64
    %100 = llvm.getelementptr %8[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i32
    llvm.store %101, %2 : i32, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f112(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %8 = llvm.load %4 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %9 = arith.subi %8, %c48_i32 : i32
    llvm.store %9, %2 : i32, !llvm.ptr
    llvm.store %9, %4 : i32, !llvm.ptr
    %c0_i32_2 = arith.constant 0 : i32
    %c1050632_i64 = arith.constant 1050632 : i64
    %10 = arith.extui %c0_i32_2 : i32 to i64
    %11 = arith.addi %10, %c1050632_i64 : i64
    %12 = llvm.getelementptr %7[%11] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> i8
    %14 = arith.extui %13 : i8 to i32
    %c0_i32_3 = arith.constant 0 : i32
    %15 = arith.cmpi eq, %14, %c0_i32_3 : i32
    %16 = arith.extui %15 : i1 to i32
    %c0_i32_4 = arith.constant 0 : i32
    %17 = arith.cmpi ne, %16, %c0_i32_4 : i32
    cf.cond_br %17, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // pred: ^bb1
    %18 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32_5 = arith.constant 48 : i32
    %19 = arith.addi %18, %c48_i32_5 : i32
    llvm.store %19, %4 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %20 = llvm.load %2 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c12_i64 = arith.constant 12 : i64
    %21 = arith.extui %20 : i32 to i64
    %22 = arith.addi %21, %c12_i64 : i64
    %23 = llvm.getelementptr %7[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c2_i32, %23 : i32, !llvm.ptr
    %24 = llvm.load %2 : !llvm.ptr -> i32
    %c1049752_i32 = arith.constant 1049752 : i32
    %c8_i64 = arith.constant 8 : i64
    %25 = arith.extui %24 : i32 to i64
    %26 = arith.addi %25, %c8_i64 : i64
    %27 = llvm.getelementptr %7[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1049752_i32, %27 : i32, !llvm.ptr
    %28 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i64_6 = arith.constant 1 : i64
    %c20_i64 = arith.constant 20 : i64
    %29 = arith.extui %28 : i32 to i64
    %30 = arith.addi %29, %c20_i64 : i64
    %31 = llvm.getelementptr %7[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_6, %31 : i64, !llvm.ptr
    %32 = llvm.load %2 : !llvm.ptr -> i32
    %33 = llvm.load %1 : !llvm.ptr -> i32
    %c44_i64 = arith.constant 44 : i64
    %34 = arith.extui %32 : i32 to i64
    %35 = arith.addi %34, %c44_i64 : i64
    %36 = llvm.getelementptr %7[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %33, %36 : i32, !llvm.ptr
    %37 = llvm.load %2 : !llvm.ptr -> i32
    %c42_i32 = arith.constant 42 : i32
    %38 = arith.extui %c42_i32 : i32 to i64
    %c32_i64 = arith.constant 32 : i64
    %c63_i64 = arith.constant 63 : i64
    %39 = arith.cmpi ule, %c32_i64, %c63_i64 : i64
    %40 = scf.if %39 -> (i64) {
      %56 = arith.shli %38, %c32_i64 : i64
      scf.yield %56 : i64
    } else {
      %c0_i64 = arith.constant 0 : i64
      scf.yield %c0_i64 : i64
    }
    %41 = llvm.load %2 : !llvm.ptr -> i32
    %c44_i32 = arith.constant 44 : i32
    %42 = arith.addi %41, %c44_i32 : i32
    %43 = arith.extui %42 : i32 to i64
    %44 = arith.ori %40, %43 : i64
    %c32_i64_7 = arith.constant 32 : i64
    %45 = arith.extui %37 : i32 to i64
    %46 = arith.addi %45, %c32_i64_7 : i64
    %47 = llvm.getelementptr %7[%46] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %44, %47 : i64, !llvm.ptr
    %48 = llvm.load %2 : !llvm.ptr -> i32
    %49 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %50 = arith.addi %49, %c32_i32 : i32
    %c16_i64 = arith.constant 16 : i64
    %51 = arith.extui %48 : i32 to i64
    %52 = arith.addi %51, %c16_i64 : i64
    %53 = llvm.getelementptr %7[%52] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %50, %53 : i32, !llvm.ptr
    %54 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %55 = arith.addi %54, %c8_i32 : i32
    %c1049792_i32 = arith.constant 1049792 : i32
    call @f128(%arg0, %55, %c1049792_i32) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  }
  func.func @f113(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %8 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %9 = arith.subi %8, %c32_i32 : i32
    llvm.store %9, %1 : i32, !llvm.ptr
    llvm.store %9, %4 : i32, !llvm.ptr
    %10 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %11 = arith.extui %10 : i32 to i64
    %12 = arith.addi %11, %c24_i64 : i64
    %13 = llvm.getelementptr %7[%12] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> i32
    llvm.store %14, %2 : i32, !llvm.ptr
    %15 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %16 = arith.addi %15, %c16_i32 : i32
    %17 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_2 = arith.constant 16 : i32
    %18 = arith.addi %17, %c16_i32_2 : i32
    %c0_i64 = arith.constant 0 : i64
    %19 = arith.extui %18 : i32 to i64
    %20 = arith.addi %19, %c0_i64 : i64
    %21 = llvm.getelementptr %7[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c0_i64_3 = arith.constant 0 : i64
    %23 = arith.extui %16 : i32 to i64
    %24 = arith.addi %23, %c0_i64_3 : i64
    %25 = llvm.getelementptr %7[%24] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %22, %25 : i64, !llvm.ptr
    %26 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %27 = arith.addi %26, %c8_i32 : i32
    %28 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_4 = arith.constant 8 : i32
    %29 = arith.addi %28, %c8_i32_4 : i32
    %c0_i64_5 = arith.constant 0 : i64
    %30 = arith.extui %29 : i32 to i64
    %31 = arith.addi %30, %c0_i64_5 : i64
    %32 = llvm.getelementptr %7[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c0_i64_6 = arith.constant 0 : i64
    %34 = arith.extui %27 : i32 to i64
    %35 = arith.addi %34, %c0_i64_6 : i64
    %36 = llvm.getelementptr %7[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %33, %36 : i64, !llvm.ptr
    %37 = llvm.load %1 : !llvm.ptr -> i32
    %38 = llvm.load %0 : !llvm.ptr -> i32
    %c28_i64 = arith.constant 28 : i64
    %39 = arith.extui %37 : i32 to i64
    %40 = arith.addi %39, %c28_i64 : i64
    %41 = llvm.getelementptr %7[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %38, %41 : i32, !llvm.ptr
    %42 = llvm.load %1 : !llvm.ptr -> i32
    %43 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i64_7 = arith.constant 24 : i64
    %44 = arith.extui %42 : i32 to i64
    %45 = arith.addi %44, %c24_i64_7 : i64
    %46 = llvm.getelementptr %7[%45] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %43, %46 : i32, !llvm.ptr
    %47 = llvm.load %1 : !llvm.ptr -> i32
    %48 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_8 = arith.constant 0 : i64
    %49 = arith.extui %48 : i32 to i64
    %50 = arith.addi %49, %c0_i64_8 : i64
    %51 = llvm.getelementptr %7[%50] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c0_i64_9 = arith.constant 0 : i64
    %53 = arith.extui %47 : i32 to i64
    %54 = arith.addi %53, %c0_i64_9 : i64
    %55 = llvm.getelementptr %7[%54] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %52, %55 : i64, !llvm.ptr
    %56 = llvm.load %1 : !llvm.ptr -> i32
    call @f110(%arg0, %56) : (!llvm.ptr, i32) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f114(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %11 = llvm.load %7 : !llvm.ptr -> i32
    %c64_i32 = arith.constant 64 : i32
    %12 = arith.subi %11, %c64_i32 : i32
    llvm.store %12, %2 : i32, !llvm.ptr
    llvm.store %12, %7 : i32, !llvm.ptr
    %13 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_5 = arith.constant 0 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c0_i64_5 : i64
    %16 = llvm.getelementptr %10[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i32
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    %18 = arith.cmpi eq, %17, %c-2147483648_i32 : i32
    %19 = arith.extui %18 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %20 = arith.xori %19, %c-1_i32 : i32
    %c0_i32_6 = arith.constant 0 : i32
    %21 = arith.cmpi ne, %20, %c0_i32_6 : i32
    cf.cond_br %21, ^bb3, ^bb4
  ^bb2:  // pred: ^bb6
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %22 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_7 = arith.constant 0 : i64
    %23 = arith.extui %22 : i32 to i64
    %24 = arith.addi %23, %c0_i64_7 : i64
    %25 = llvm.getelementptr %10[%24] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %26 = llvm.load %25 : !llvm.ptr -> i64
    llvm.store %26, %5 : i64, !llvm.ptr
    %27 = llvm.load %1 : !llvm.ptr -> i32
    %c4294967296_i64 = arith.constant 4294967296 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %28 = arith.extui %27 : i32 to i64
    %29 = arith.addi %28, %c0_i64_8 : i64
    %30 = llvm.getelementptr %10[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c4294967296_i64, %30 : i64, !llvm.ptr
    %31 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %32 = arith.addi %31, %c8_i32 : i32
    llvm.store %32, %3 : i32, !llvm.ptr
    %33 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_9 = arith.constant 8 : i32
    %34 = arith.addi %33, %c8_i32_9 : i32
    llvm.store %34, %1 : i32, !llvm.ptr
    %c0_i64_10 = arith.constant 0 : i64
    %35 = arith.extui %34 : i32 to i64
    %36 = arith.addi %35, %c0_i64_10 : i64
    %37 = llvm.getelementptr %10[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %38 = llvm.load %37 : !llvm.ptr -> i32
    %c0_i64_11 = arith.constant 0 : i64
    %39 = arith.extui %32 : i32 to i64
    %40 = arith.addi %39, %c0_i64_11 : i64
    %41 = llvm.getelementptr %10[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %38, %41 : i32, !llvm.ptr
    %42 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_12 = arith.constant 0 : i32
    %c0_i64_13 = arith.constant 0 : i64
    %43 = arith.extui %42 : i32 to i64
    %44 = arith.addi %43, %c0_i64_13 : i64
    %45 = llvm.getelementptr %10[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_12, %45 : i32, !llvm.ptr
    %c0_i32_14 = arith.constant 0 : i32
    %c1050633_i64 = arith.constant 1050633 : i64
    %46 = arith.extui %c0_i32_14 : i32 to i64
    %47 = arith.addi %46, %c1050633_i64 : i64
    %48 = llvm.getelementptr %10[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i8
    %50 = arith.extui %49 : i8 to i32
    %51 = llvm.load %2 : !llvm.ptr -> i32
    %52 = llvm.load %5 : !llvm.ptr -> i64
    %c0_i64_15 = arith.constant 0 : i64
    %53 = arith.extui %51 : i32 to i64
    %54 = arith.addi %53, %c0_i64_15 : i64
    %55 = llvm.getelementptr %10[%54] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %52, %55 : i64, !llvm.ptr
    %c12_i32 = arith.constant 12 : i32
    %c4_i32 = arith.constant 4 : i32
    %56 = call @f71(%arg0, %c12_i32, %c4_i32) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %56, %1 : i32, !llvm.ptr
    %c0_i32_16 = arith.constant 0 : i32
    %57 = arith.cmpi eq, %56, %c0_i32_16 : i32
    %58 = arith.extui %57 : i1 to i32
    %c0_i32_17 = arith.constant 0 : i32
    %59 = arith.cmpi ne, %58, %c0_i32_17 : i32
    cf.cond_br %59, ^bb5, ^bb6
  ^bb4:  // pred: ^bb1
    %60 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %61 = arith.extui %60 : i32 to i64
    %62 = arith.addi %61, %c12_i64 : i64
    %63 = llvm.getelementptr %10[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %64 = llvm.load %63 : !llvm.ptr -> i32
    llvm.store %64, %3 : i32, !llvm.ptr
    %65 = llvm.load %2 : !llvm.ptr -> i32
    %c28_i32 = arith.constant 28 : i32
    %66 = arith.addi %65, %c28_i32 : i32
    %c8_i32_18 = arith.constant 8 : i32
    %67 = arith.addi %66, %c8_i32_18 : i32
    llvm.store %67, %4 : i32, !llvm.ptr
    %c0_i32_19 = arith.constant 0 : i32
    %c0_i64_20 = arith.constant 0 : i64
    %68 = arith.extui %67 : i32 to i64
    %69 = arith.addi %68, %c0_i64_20 : i64
    %70 = llvm.getelementptr %10[%69] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_19, %70 : i32, !llvm.ptr
    %71 = llvm.load %2 : !llvm.ptr -> i32
    %c4294967296_i64_21 = arith.constant 4294967296 : i64
    %c28_i64 = arith.constant 28 : i64
    %72 = arith.extui %71 : i32 to i64
    %73 = arith.addi %72, %c28_i64 : i64
    %74 = llvm.getelementptr %10[%73] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c4294967296_i64_21, %74 : i64, !llvm.ptr
    %75 = llvm.load %2 : !llvm.ptr -> i32
    %c40_i32 = arith.constant 40 : i32
    %76 = arith.addi %75, %c40_i32 : i32
    %c16_i32 = arith.constant 16 : i32
    %77 = arith.addi %76, %c16_i32 : i32
    %78 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32_22 = arith.constant 16 : i32
    %79 = arith.addi %78, %c16_i32_22 : i32
    %c0_i64_23 = arith.constant 0 : i64
    %80 = arith.extui %79 : i32 to i64
    %81 = arith.addi %80, %c0_i64_23 : i64
    %82 = llvm.getelementptr %10[%81] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %83 = llvm.load %82 : !llvm.ptr -> i64
    %c0_i64_24 = arith.constant 0 : i64
    %84 = arith.extui %77 : i32 to i64
    %85 = arith.addi %84, %c0_i64_24 : i64
    %86 = llvm.getelementptr %10[%85] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %83, %86 : i64, !llvm.ptr
    %87 = llvm.load %2 : !llvm.ptr -> i32
    %c40_i32_25 = arith.constant 40 : i32
    %88 = arith.addi %87, %c40_i32_25 : i32
    %c8_i32_26 = arith.constant 8 : i32
    %89 = arith.addi %88, %c8_i32_26 : i32
    %90 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32_27 = arith.constant 8 : i32
    %91 = arith.addi %90, %c8_i32_27 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %92 = arith.extui %91 : i32 to i64
    %93 = arith.addi %92, %c0_i64_28 : i64
    %94 = llvm.getelementptr %10[%93] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %95 = llvm.load %94 : !llvm.ptr -> i64
    %c0_i64_29 = arith.constant 0 : i64
    %96 = arith.extui %89 : i32 to i64
    %97 = arith.addi %96, %c0_i64_29 : i64
    %98 = llvm.getelementptr %10[%97] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %95, %98 : i64, !llvm.ptr
    %99 = llvm.load %2 : !llvm.ptr -> i32
    %100 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_30 = arith.constant 0 : i64
    %101 = arith.extui %100 : i32 to i64
    %102 = arith.addi %101, %c0_i64_30 : i64
    %103 = llvm.getelementptr %10[%102] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %104 = llvm.load %103 : !llvm.ptr -> i64
    %c40_i64 = arith.constant 40 : i64
    %105 = arith.extui %99 : i32 to i64
    %106 = arith.addi %105, %c40_i64 : i64
    %107 = llvm.getelementptr %10[%106] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %104, %107 : i64, !llvm.ptr
    %108 = llvm.load %2 : !llvm.ptr -> i32
    %c28_i32_31 = arith.constant 28 : i32
    %109 = arith.addi %108, %c28_i32_31 : i32
    %c1049692_i32 = arith.constant 1049692 : i32
    %110 = llvm.load %2 : !llvm.ptr -> i32
    %c40_i32_32 = arith.constant 40 : i32
    %111 = arith.addi %110, %c40_i32_32 : i32
    %112 = call @f133(%arg0, %109, %c1049692_i32, %111) : (!llvm.ptr, i32, i32, i32) -> i32
    %113 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32_33 = arith.constant 16 : i32
    %114 = arith.addi %113, %c16_i32_33 : i32
    %c8_i32_34 = arith.constant 8 : i32
    %115 = arith.addi %114, %c8_i32_34 : i32
    %116 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_35 = arith.constant 0 : i64
    %117 = arith.extui %116 : i32 to i64
    %118 = arith.addi %117, %c0_i64_35 : i64
    %119 = llvm.getelementptr %10[%118] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %120 = llvm.load %119 : !llvm.ptr -> i32
    llvm.store %120, %3 : i32, !llvm.ptr
    %c0_i64_36 = arith.constant 0 : i64
    %121 = arith.extui %115 : i32 to i64
    %122 = arith.addi %121, %c0_i64_36 : i64
    %123 = llvm.getelementptr %10[%122] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %120, %123 : i32, !llvm.ptr
    %124 = llvm.load %2 : !llvm.ptr -> i32
    %125 = llvm.load %2 : !llvm.ptr -> i32
    %c28_i64_37 = arith.constant 28 : i64
    %126 = arith.extui %125 : i32 to i64
    %127 = arith.addi %126, %c28_i64_37 : i64
    %128 = llvm.getelementptr %10[%127] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %129 = llvm.load %128 : !llvm.ptr -> i64
    llvm.store %129, %5 : i64, !llvm.ptr
    %c16_i64 = arith.constant 16 : i64
    %130 = arith.extui %124 : i32 to i64
    %131 = arith.addi %130, %c16_i64 : i64
    %132 = llvm.getelementptr %10[%131] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %129, %132 : i64, !llvm.ptr
    %133 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_38 = arith.constant 8 : i32
    %134 = arith.addi %133, %c8_i32_38 : i32
    %135 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_39 = arith.constant 0 : i64
    %136 = arith.extui %134 : i32 to i64
    %137 = arith.addi %136, %c0_i64_39 : i64
    %138 = llvm.getelementptr %10[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %135, %138 : i32, !llvm.ptr
    %139 = llvm.load %1 : !llvm.ptr -> i32
    %140 = llvm.load %5 : !llvm.ptr -> i64
    %c0_i64_40 = arith.constant 0 : i64
    %141 = arith.extui %139 : i32 to i64
    %142 = arith.addi %141, %c0_i64_40 : i64
    %143 = llvm.getelementptr %10[%142] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %140, %143 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb3
    %c4_i32_41 = arith.constant 4 : i32
    %c12_i32_42 = arith.constant 12 : i32
    call @f127(%arg0, %c4_i32_41, %c12_i32_42) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb6:  // pred: ^bb3
    %144 = llvm.load %1 : !llvm.ptr -> i32
    %145 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_43 = arith.constant 0 : i64
    %146 = arith.extui %145 : i32 to i64
    %147 = arith.addi %146, %c0_i64_43 : i64
    %148 = llvm.getelementptr %10[%147] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %149 = llvm.load %148 : !llvm.ptr -> i64
    %c0_i64_44 = arith.constant 0 : i64
    %150 = arith.extui %144 : i32 to i64
    %151 = arith.addi %150, %c0_i64_44 : i64
    %152 = llvm.getelementptr %10[%151] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %149, %152 : i64, !llvm.ptr
    %153 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_45 = arith.constant 8 : i32
    %154 = arith.addi %153, %c8_i32_45 : i32
    %155 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_46 = arith.constant 0 : i64
    %156 = arith.extui %155 : i32 to i64
    %157 = arith.addi %156, %c0_i64_46 : i64
    %158 = llvm.getelementptr %10[%157] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %159 = llvm.load %158 : !llvm.ptr -> i32
    %c0_i64_47 = arith.constant 0 : i64
    %160 = arith.extui %154 : i32 to i64
    %161 = arith.addi %160, %c0_i64_47 : i64
    %162 = llvm.getelementptr %10[%161] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %159, %162 : i32, !llvm.ptr
    %163 = llvm.load %0 : !llvm.ptr -> i32
    %c1049808_i32 = arith.constant 1049808 : i32
    %c4_i64 = arith.constant 4 : i64
    %164 = arith.extui %163 : i32 to i64
    %165 = arith.addi %164, %c4_i64 : i64
    %166 = llvm.getelementptr %10[%165] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1049808_i32, %166 : i32, !llvm.ptr
    %167 = llvm.load %0 : !llvm.ptr -> i32
    %168 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_48 = arith.constant 0 : i64
    %169 = arith.extui %167 : i32 to i64
    %170 = arith.addi %169, %c0_i64_48 : i64
    %171 = llvm.getelementptr %10[%170] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %168, %171 : i32, !llvm.ptr
    %172 = llvm.load %2 : !llvm.ptr -> i32
    %c64_i32_49 = arith.constant 64 : i32
    %173 = arith.addi %172, %c64_i32_49 : i32
    llvm.store %173, %7 : i32, !llvm.ptr
    cf.br ^bb2
  }
  func.func @f115(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %6 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %8[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %11 = llvm.load %7 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %12 = arith.subi %11, %c48_i32 : i32
    llvm.store %12, %2 : i32, !llvm.ptr
    llvm.store %12, %7 : i32, !llvm.ptr
    %13 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_5 = arith.constant 0 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c0_i64_5 : i64
    %16 = llvm.getelementptr %10[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i32
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    %18 = arith.cmpi eq, %17, %c-2147483648_i32 : i32
    %19 = arith.extui %18 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %20 = arith.xori %19, %c-1_i32 : i32
    %c0_i32_6 = arith.constant 0 : i32
    %21 = arith.cmpi ne, %20, %c0_i32_6 : i32
    cf.cond_br %21, ^bb3, ^bb4
  ^bb2:  // pred: ^bb3
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %22 = llvm.load %0 : !llvm.ptr -> i32
    %c1049808_i32 = arith.constant 1049808 : i32
    %c4_i64 = arith.constant 4 : i64
    %23 = arith.extui %22 : i32 to i64
    %24 = arith.addi %23, %c4_i64 : i64
    %25 = llvm.getelementptr %10[%24] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1049808_i32, %25 : i32, !llvm.ptr
    %26 = llvm.load %0 : !llvm.ptr -> i32
    %27 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_7 = arith.constant 0 : i64
    %28 = arith.extui %26 : i32 to i64
    %29 = arith.addi %28, %c0_i64_7 : i64
    %30 = llvm.getelementptr %10[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %27, %30 : i32, !llvm.ptr
    %31 = llvm.load %2 : !llvm.ptr -> i32
    %c48_i32_8 = arith.constant 48 : i32
    %32 = arith.addi %31, %c48_i32_8 : i32
    llvm.store %32, %7 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb4:  // pred: ^bb1
    %33 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %34 = arith.extui %33 : i32 to i64
    %35 = arith.addi %34, %c12_i64 : i64
    %36 = llvm.getelementptr %10[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %37 = llvm.load %36 : !llvm.ptr -> i32
    llvm.store %37, %3 : i32, !llvm.ptr
    %38 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %39 = arith.addi %38, %c12_i32 : i32
    %c8_i32 = arith.constant 8 : i32
    %40 = arith.addi %39, %c8_i32 : i32
    llvm.store %40, %4 : i32, !llvm.ptr
    %c0_i32_9 = arith.constant 0 : i32
    %c0_i64_10 = arith.constant 0 : i64
    %41 = arith.extui %40 : i32 to i64
    %42 = arith.addi %41, %c0_i64_10 : i64
    %43 = llvm.getelementptr %10[%42] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_9, %43 : i32, !llvm.ptr
    %44 = llvm.load %2 : !llvm.ptr -> i32
    %c4294967296_i64 = arith.constant 4294967296 : i64
    %c12_i64_11 = arith.constant 12 : i64
    %45 = arith.extui %44 : i32 to i64
    %46 = arith.addi %45, %c12_i64_11 : i64
    %47 = llvm.getelementptr %10[%46] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c4294967296_i64, %47 : i64, !llvm.ptr
    %48 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %49 = arith.addi %48, %c24_i32 : i32
    %c16_i32 = arith.constant 16 : i32
    %50 = arith.addi %49, %c16_i32 : i32
    %51 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32_12 = arith.constant 16 : i32
    %52 = arith.addi %51, %c16_i32_12 : i32
    %c0_i64_13 = arith.constant 0 : i64
    %53 = arith.extui %52 : i32 to i64
    %54 = arith.addi %53, %c0_i64_13 : i64
    %55 = llvm.getelementptr %10[%54] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %56 = llvm.load %55 : !llvm.ptr -> i64
    %c0_i64_14 = arith.constant 0 : i64
    %57 = arith.extui %50 : i32 to i64
    %58 = arith.addi %57, %c0_i64_14 : i64
    %59 = llvm.getelementptr %10[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %56, %59 : i64, !llvm.ptr
    %60 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_15 = arith.constant 24 : i32
    %61 = arith.addi %60, %c24_i32_15 : i32
    %c8_i32_16 = arith.constant 8 : i32
    %62 = arith.addi %61, %c8_i32_16 : i32
    %63 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32_17 = arith.constant 8 : i32
    %64 = arith.addi %63, %c8_i32_17 : i32
    %c0_i64_18 = arith.constant 0 : i64
    %65 = arith.extui %64 : i32 to i64
    %66 = arith.addi %65, %c0_i64_18 : i64
    %67 = llvm.getelementptr %10[%66] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %68 = llvm.load %67 : !llvm.ptr -> i64
    %c0_i64_19 = arith.constant 0 : i64
    %69 = arith.extui %62 : i32 to i64
    %70 = arith.addi %69, %c0_i64_19 : i64
    %71 = llvm.getelementptr %10[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %68, %71 : i64, !llvm.ptr
    %72 = llvm.load %2 : !llvm.ptr -> i32
    %73 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_20 = arith.constant 0 : i64
    %74 = arith.extui %73 : i32 to i64
    %75 = arith.addi %74, %c0_i64_20 : i64
    %76 = llvm.getelementptr %10[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %77 = llvm.load %76 : !llvm.ptr -> i64
    %c24_i64 = arith.constant 24 : i64
    %78 = arith.extui %72 : i32 to i64
    %79 = arith.addi %78, %c24_i64 : i64
    %80 = llvm.getelementptr %10[%79] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %77, %80 : i64, !llvm.ptr
    %81 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32_21 = arith.constant 12 : i32
    %82 = arith.addi %81, %c12_i32_21 : i32
    %c1049692_i32 = arith.constant 1049692 : i32
    %83 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i32_22 = arith.constant 24 : i32
    %84 = arith.addi %83, %c24_i32_22 : i32
    %85 = call @f133(%arg0, %82, %c1049692_i32, %84) : (!llvm.ptr, i32, i32, i32) -> i32
    %86 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_23 = arith.constant 8 : i32
    %87 = arith.addi %86, %c8_i32_23 : i32
    %88 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_24 = arith.constant 0 : i64
    %89 = arith.extui %88 : i32 to i64
    %90 = arith.addi %89, %c0_i64_24 : i64
    %91 = llvm.getelementptr %10[%90] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %92 = llvm.load %91 : !llvm.ptr -> i32
    llvm.store %92, %3 : i32, !llvm.ptr
    %c0_i64_25 = arith.constant 0 : i64
    %93 = arith.extui %87 : i32 to i64
    %94 = arith.addi %93, %c0_i64_25 : i64
    %95 = llvm.getelementptr %10[%94] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %92, %95 : i32, !llvm.ptr
    %96 = llvm.load %2 : !llvm.ptr -> i32
    %97 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i64_26 = arith.constant 12 : i64
    %98 = arith.extui %97 : i32 to i64
    %99 = arith.addi %98, %c12_i64_26 : i64
    %100 = llvm.getelementptr %10[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i64
    llvm.store %101, %5 : i64, !llvm.ptr
    %c0_i64_27 = arith.constant 0 : i64
    %102 = arith.extui %96 : i32 to i64
    %103 = arith.addi %102, %c0_i64_27 : i64
    %104 = llvm.getelementptr %10[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %101, %104 : i64, !llvm.ptr
    %105 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_28 = arith.constant 8 : i32
    %106 = arith.addi %105, %c8_i32_28 : i32
    %107 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_29 = arith.constant 0 : i64
    %108 = arith.extui %106 : i32 to i64
    %109 = arith.addi %108, %c0_i64_29 : i64
    %110 = llvm.getelementptr %10[%109] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %107, %110 : i32, !llvm.ptr
    %111 = llvm.load %1 : !llvm.ptr -> i32
    %112 = llvm.load %5 : !llvm.ptr -> i64
    %c0_i64_30 = arith.constant 0 : i64
    %113 = arith.extui %111 : i32 to i64
    %114 = arith.addi %113, %c0_i64_30 : i64
    %115 = llvm.getelementptr %10[%114] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %112, %115 : i64, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f116(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %8 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %9 = arith.subi %8, %c32_i32 : i32
    llvm.store %9, %2 : i32, !llvm.ptr
    llvm.store %9, %4 : i32, !llvm.ptr
    %10 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %11 = arith.extui %10 : i32 to i64
    %12 = arith.addi %11, %c0_i64 : i64
    %13 = llvm.getelementptr %7[%12] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> i32
    %c-2147483648_i32 = arith.constant -2147483648 : i32
    %15 = arith.cmpi eq, %14, %c-2147483648_i32 : i32
    %16 = arith.extui %15 : i1 to i32
    %c0_i32_2 = arith.constant 0 : i32
    %17 = arith.cmpi ne, %16, %c0_i32_2 : i32
    cf.cond_br %17, ^bb4, ^bb5
  ^bb2(%18: i32):  // pred: ^bb3
    return %18 : i32
  ^bb3:  // 2 preds: ^bb4, ^bb5
    %19 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32_3 = arith.constant 32 : i32
    %20 = arith.addi %19, %c32_i32_3 : i32
    llvm.store %20, %4 : i32, !llvm.ptr
    %21 = llvm.load %0 : !llvm.ptr -> i32
    cf.br ^bb2(%21 : i32)
  ^bb4:  // pred: ^bb1
    %22 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %23 = arith.addi %22, %c8_i32 : i32
    %c16_i32 = arith.constant 16 : i32
    %24 = arith.addi %23, %c16_i32 : i32
    %25 = llvm.load %0 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %26 = arith.extui %25 : i32 to i64
    %27 = arith.addi %26, %c12_i64 : i64
    %28 = llvm.getelementptr %7[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %29 = llvm.load %28 : !llvm.ptr -> i32
    llvm.store %29, %0 : i32, !llvm.ptr
    %c16_i32_4 = arith.constant 16 : i32
    %30 = arith.addi %29, %c16_i32_4 : i32
    %c0_i64_5 = arith.constant 0 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c0_i64_5 : i64
    %33 = llvm.getelementptr %7[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %34 = llvm.load %33 : !llvm.ptr -> i64
    %c0_i64_6 = arith.constant 0 : i64
    %35 = arith.extui %24 : i32 to i64
    %36 = arith.addi %35, %c0_i64_6 : i64
    %37 = llvm.getelementptr %7[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %34, %37 : i64, !llvm.ptr
    %38 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_7 = arith.constant 8 : i32
    %39 = arith.addi %38, %c8_i32_7 : i32
    %c8_i32_8 = arith.constant 8 : i32
    %40 = arith.addi %39, %c8_i32_8 : i32
    %41 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_9 = arith.constant 8 : i32
    %42 = arith.addi %41, %c8_i32_9 : i32
    %c0_i64_10 = arith.constant 0 : i64
    %43 = arith.extui %42 : i32 to i64
    %44 = arith.addi %43, %c0_i64_10 : i64
    %45 = llvm.getelementptr %7[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %46 = llvm.load %45 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %47 = arith.extui %40 : i32 to i64
    %48 = arith.addi %47, %c0_i64_11 : i64
    %49 = llvm.getelementptr %7[%48] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %46, %49 : i64, !llvm.ptr
    %50 = llvm.load %2 : !llvm.ptr -> i32
    %51 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_12 = arith.constant 0 : i64
    %52 = arith.extui %51 : i32 to i64
    %53 = arith.addi %52, %c0_i64_12 : i64
    %54 = llvm.getelementptr %7[%53] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %55 = llvm.load %54 : !llvm.ptr -> i64
    %c8_i64 = arith.constant 8 : i64
    %56 = arith.extui %50 : i32 to i64
    %57 = arith.addi %56, %c8_i64 : i64
    %58 = llvm.getelementptr %7[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %55, %58 : i64, !llvm.ptr
    %59 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %60 = arith.extui %59 : i32 to i64
    %61 = arith.addi %60, %c20_i64 : i64
    %62 = llvm.getelementptr %7[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %63 = llvm.load %62 : !llvm.ptr -> i32
    %64 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %65 = arith.extui %64 : i32 to i64
    %66 = arith.addi %65, %c24_i64 : i64
    %67 = llvm.getelementptr %7[%66] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %68 = llvm.load %67 : !llvm.ptr -> i32
    %69 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32_13 = arith.constant 8 : i32
    %70 = arith.addi %69, %c8_i32_13 : i32
    %71 = call @f133(%arg0, %63, %68, %70) : (!llvm.ptr, i32, i32, i32) -> i32
    llvm.store %71, %0 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %72 = llvm.load %1 : !llvm.ptr -> i32
    %73 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %74 = arith.extui %73 : i32 to i64
    %75 = arith.addi %74, %c4_i64 : i64
    %76 = llvm.getelementptr %7[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %77 = llvm.load %76 : !llvm.ptr -> i32
    %78 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i64_14 = arith.constant 8 : i64
    %79 = arith.extui %78 : i32 to i64
    %80 = arith.addi %79, %c8_i64_14 : i64
    %81 = llvm.getelementptr %7[%80] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %82 = llvm.load %81 : !llvm.ptr -> i32
    %83 = call @f139(%arg0, %72, %77, %82) : (!llvm.ptr, i32, i32, i32) -> i32
    llvm.store %83, %0 : i32, !llvm.ptr
    cf.br ^bb3
  }
  func.func @f117(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %4 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32_3 = arith.constant 0 : i32
    %c1050633_i64 = arith.constant 1050633 : i64
    %7 = arith.extui %c0_i32_3 : i32 to i64
    %8 = arith.addi %7, %c1050633_i64 : i64
    %9 = llvm.getelementptr %6[%8] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> i8
    %11 = arith.extui %10 : i8 to i32
    %12 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c4_i64 : i64
    %15 = llvm.getelementptr %6[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i32
    llvm.store %16, %2 : i32, !llvm.ptr
    %17 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %18 = arith.extui %17 : i32 to i64
    %19 = arith.addi %18, %c0_i64 : i64
    %20 = llvm.getelementptr %6[%19] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %21 = llvm.load %20 : !llvm.ptr -> i32
    llvm.store %21, %3 : i32, !llvm.ptr
    %c8_i32 = arith.constant 8 : i32
    %c4_i32 = arith.constant 4 : i32
    %22 = call @f71(%arg0, %c8_i32, %c4_i32) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %22, %1 : i32, !llvm.ptr
    %c0_i32_4 = arith.constant 0 : i32
    %23 = arith.cmpi eq, %22, %c0_i32_4 : i32
    %24 = arith.extui %23 : i1 to i32
    %c0_i32_5 = arith.constant 0 : i32
    %25 = arith.cmpi ne, %24, %c0_i32_5 : i32
    cf.cond_br %25, ^bb3, ^bb4
  ^bb2:  // pred: ^bb4
    return
  ^bb3:  // pred: ^bb1
    %c4_i32_6 = arith.constant 4 : i32
    %c8_i32_7 = arith.constant 8 : i32
    call @f127(%arg0, %c4_i32_6, %c8_i32_7) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb4:  // pred: ^bb1
    %26 = llvm.load %1 : !llvm.ptr -> i32
    %27 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i64_8 = arith.constant 4 : i64
    %28 = arith.extui %26 : i32 to i64
    %29 = arith.addi %28, %c4_i64_8 : i64
    %30 = llvm.getelementptr %6[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %27, %30 : i32, !llvm.ptr
    %31 = llvm.load %1 : !llvm.ptr -> i32
    %32 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i64_9 = arith.constant 0 : i64
    %33 = arith.extui %31 : i32 to i64
    %34 = arith.addi %33, %c0_i64_9 : i64
    %35 = llvm.getelementptr %6[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %32, %35 : i32, !llvm.ptr
    %36 = llvm.load %0 : !llvm.ptr -> i32
    %c1049824_i32 = arith.constant 1049824 : i32
    %c4_i64_10 = arith.constant 4 : i64
    %37 = arith.extui %36 : i32 to i64
    %38 = arith.addi %37, %c4_i64_10 : i64
    %39 = llvm.getelementptr %6[%38] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1049824_i32, %39 : i32, !llvm.ptr
    %40 = llvm.load %0 : !llvm.ptr -> i32
    %41 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_11 = arith.constant 0 : i64
    %42 = arith.extui %40 : i32 to i64
    %43 = arith.addi %42, %c0_i64_11 : i64
    %44 = llvm.getelementptr %6[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i32, !llvm.ptr
    cf.br ^bb2
  }
  func.func @f118(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c1049824_i32 = arith.constant 1049824 : i32
    %c4_i64 = arith.constant 4 : i64
    %6 = arith.extui %5 : i32 to i64
    %7 = arith.addi %6, %c4_i64 : i64
    %8 = llvm.getelementptr %4[%7] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1049824_i32, %8 : i32, !llvm.ptr
    %9 = llvm.load %0 : !llvm.ptr -> i32
    %10 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %11 = arith.extui %9 : i32 to i64
    %12 = arith.addi %11, %c0_i64 : i64
    %13 = llvm.getelementptr %4[%12] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %10, %13 : i32, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f119(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %6 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %7 = arith.extui %6 : i32 to i64
    %8 = arith.addi %7, %c0_i64 : i64
    %9 = llvm.getelementptr %4[%8] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c0_i64_1 = arith.constant 0 : i64
    %11 = arith.extui %5 : i32 to i64
    %12 = arith.addi %11, %c0_i64_1 : i64
    %13 = llvm.getelementptr %4[%12] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %10, %13 : i64, !llvm.ptr
    cf.br ^bb2
  ^bb2:  // pred: ^bb1
    return
  }
  func.func @f120(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %1 : !llvm.ptr -> i32
    %6 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %7 = arith.extui %6 : i32 to i64
    %8 = arith.addi %7, %c0_i64 : i64
    %9 = llvm.getelementptr %4[%8] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> i32
    %11 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %12 = arith.extui %11 : i32 to i64
    %13 = arith.addi %12, %c4_i64 : i64
    %14 = llvm.getelementptr %4[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i32
    %16 = call @f139(%arg0, %5, %10, %15) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%16 : i32)
  ^bb2(%17: i32):  // pred: ^bb1
    return %17 : i32
  }
  func.func @f121(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %7 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> i32
    %14 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %17 = llvm.load %15 : !llvm.ptr -> i32
    %18 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %19 = llvm.load %15 : !llvm.ptr -> i32
    %20 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %21 = llvm.load %15 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %22 = llvm.load %8 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %23 = arith.subi %22, %c32_i32 : i32
    llvm.store %23, %5 : i32, !llvm.ptr
    llvm.store %23, %8 : i32, !llvm.ptr
    %c0_i32_6 = arith.constant 0 : i32
    %c0_i32_7 = arith.constant 0 : i32
    %c1050748_i64 = arith.constant 1050748 : i64
    %24 = arith.extui %c0_i32_7 : i32 to i64
    %25 = arith.addi %24, %c1050748_i64 : i64
    %26 = llvm.getelementptr %11[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %27 = llvm.load %26 : !llvm.ptr -> i32
    llvm.store %27, %6 : i32, !llvm.ptr
    %c1_i32 = arith.constant 1 : i32
    %28 = arith.addi %27, %c1_i32 : i32
    %c1050748_i64_8 = arith.constant 1050748 : i64
    %29 = arith.extui %c0_i32_6 : i32 to i64
    %30 = arith.addi %29, %c1050748_i64_8 : i64
    %31 = llvm.getelementptr %11[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %28, %31 : i32, !llvm.ptr
    %32 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i32_9 = arith.constant 0 : i32
    %33 = arith.cmpi slt, %32, %c0_i32_9 : i32
    %34 = arith.extui %33 : i1 to i32
    %c0_i32_10 = arith.constant 0 : i32
    %35 = arith.cmpi ne, %34, %c0_i32_10 : i32
    cf.cond_br %35, ^bb3, ^bb4
  ^bb2:  // no predecessors
    return
  ^bb3:  // 4 preds: ^bb1, ^bb6, ^bb8, ^bb33
    llvm.unreachable
  ^bb4:  // pred: ^bb1
    %c0_i32_11 = arith.constant 0 : i32
    %c1050756_i64 = arith.constant 1050756 : i64
    %36 = arith.extui %c0_i32_11 : i32 to i64
    %37 = arith.addi %36, %c1050756_i64 : i64
    %38 = llvm.getelementptr %11[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %39 = llvm.load %38 : !llvm.ptr -> i8
    %40 = arith.extui %39 : i8 to i32
    %c0_i32_12 = arith.constant 0 : i32
    %41 = arith.cmpi ne, %40, %c0_i32_12 : i32
    cf.cond_br %41, ^bb5, ^bb6
  ^bb5:  // pred: ^bb4
    %42 = llvm.load %5 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %43 = arith.addi %42, %c8_i32 : i32
    %44 = llvm.load %0 : !llvm.ptr -> i32
    %45 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %46 = arith.extui %45 : i32 to i64
    %47 = arith.addi %46, %c24_i64 : i64
    %48 = llvm.getelementptr %11[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i32
    %50 = arith.cmpi ult, %49, %21 : i32
    cf.cond_br %50, ^bb27, ^bb28
  ^bb6:  // pred: ^bb4
    %c0_i32_13 = arith.constant 0 : i32
    %c1_i32_14 = arith.constant 1 : i32
    %c1050756_i64_15 = arith.constant 1050756 : i64
    %51 = arith.extui %c0_i32_13 : i32 to i64
    %52 = arith.addi %51, %c1050756_i64_15 : i64
    %53 = llvm.getelementptr %11[%52] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = arith.trunci %c1_i32_14 : i32 to i8
    llvm.store %54, %53 : i8, !llvm.ptr
    %c0_i32_16 = arith.constant 0 : i32
    %c0_i32_17 = arith.constant 0 : i32
    %c1050752_i64 = arith.constant 1050752 : i64
    %55 = arith.extui %c0_i32_17 : i32 to i64
    %56 = arith.addi %55, %c1050752_i64 : i64
    %57 = llvm.getelementptr %11[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = llvm.load %57 : !llvm.ptr -> i32
    %c1_i32_18 = arith.constant 1 : i32
    %59 = arith.addi %58, %c1_i32_18 : i32
    %c1050752_i64_19 = arith.constant 1050752 : i64
    %60 = arith.extui %c0_i32_16 : i32 to i64
    %61 = arith.addi %60, %c1050752_i64_19 : i64
    %62 = llvm.getelementptr %11[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %59, %62 : i32, !llvm.ptr
    %c0_i32_20 = arith.constant 0 : i32
    %c1050736_i64 = arith.constant 1050736 : i64
    %63 = arith.extui %c0_i32_20 : i32 to i64
    %64 = arith.addi %63, %c1050736_i64 : i64
    %65 = llvm.getelementptr %11[%64] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %66 = llvm.load %65 : !llvm.ptr -> i32
    llvm.store %66, %6 : i32, !llvm.ptr
    %c-1_i32 = arith.constant -1 : i32
    %67 = arith.cmpi sle, %66, %c-1_i32 : i32
    %68 = arith.extui %67 : i1 to i32
    %c0_i32_21 = arith.constant 0 : i32
    %69 = arith.cmpi ne, %68, %c0_i32_21 : i32
    cf.cond_br %69, ^bb3, ^bb7
  ^bb7:  // pred: ^bb6
    %c0_i32_22 = arith.constant 0 : i32
    %70 = llvm.load %6 : !llvm.ptr -> i32
    %c1_i32_23 = arith.constant 1 : i32
    %71 = arith.addi %70, %c1_i32_23 : i32
    %c1050736_i64_24 = arith.constant 1050736 : i64
    %72 = arith.extui %c0_i32_22 : i32 to i64
    %73 = arith.addi %72, %c1050736_i64_24 : i64
    %74 = llvm.getelementptr %11[%73] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %71, %74 : i32, !llvm.ptr
    %c0_i32_25 = arith.constant 0 : i32
    %c1050740_i64 = arith.constant 1050740 : i64
    %75 = arith.extui %c0_i32_25 : i32 to i64
    %76 = arith.addi %75, %c1050740_i64 : i64
    %77 = llvm.getelementptr %11[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %78 = llvm.load %77 : !llvm.ptr -> i32
    %c0_i32_26 = arith.constant 0 : i32
    %79 = arith.cmpi eq, %78, %c0_i32_26 : i32
    %80 = arith.extui %79 : i1 to i32
    %c0_i32_27 = arith.constant 0 : i32
    %81 = arith.cmpi ne, %80, %c0_i32_27 : i32
    cf.cond_br %81, ^bb8, ^bb9
  ^bb8:  // 2 preds: ^bb7, ^bb24
    %c0_i32_28 = arith.constant 0 : i32
    %82 = llvm.load %6 : !llvm.ptr -> i32
    %c1050736_i64_29 = arith.constant 1050736 : i64
    %83 = arith.extui %c0_i32_28 : i32 to i64
    %84 = arith.addi %83, %c1050736_i64_29 : i64
    %85 = llvm.getelementptr %11[%84] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %82, %85 : i32, !llvm.ptr
    %c0_i32_30 = arith.constant 0 : i32
    %c0_i32_31 = arith.constant 0 : i32
    %c1050756_i64_32 = arith.constant 1050756 : i64
    %86 = arith.extui %c0_i32_30 : i32 to i64
    %87 = arith.addi %86, %c1050756_i64_32 : i64
    %88 = llvm.getelementptr %11[%87] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %89 = arith.trunci %c0_i32_31 : i32 to i8
    llvm.store %89, %88 : i8, !llvm.ptr
    %90 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_33 = arith.constant 0 : i32
    %91 = arith.cmpi eq, %90, %c0_i32_33 : i32
    %92 = arith.extui %91 : i1 to i32
    %c0_i32_34 = arith.constant 0 : i32
    %93 = arith.cmpi ne, %92, %c0_i32_34 : i32
    cf.cond_br %93, ^bb3, ^bb26
  ^bb9:  // pred: ^bb7
    %94 = llvm.load %5 : !llvm.ptr -> i32
    %95 = llvm.load %0 : !llvm.ptr -> i32
    %96 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %97 = arith.extui %96 : i32 to i64
    %98 = arith.addi %97, %c20_i64 : i64
    %99 = llvm.getelementptr %11[%98] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %100 = llvm.load %99 : !llvm.ptr -> i32
    %101 = arith.cmpi ult, %100, %17 : i32
    cf.cond_br %101, ^bb10, ^bb11
  ^bb10:  // 2 preds: ^bb9, ^bb11
    %102 = llvm.getelementptr %16[%100] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %103 = llvm.load %102 : !llvm.ptr -> !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> i32
    %c0_i32_35 = arith.constant 0 : i32
    %105 = arith.cmpi eq, %104, %c0_i32_35 : i32
    cf.cond_br %105, ^bb13, ^bb12
  ^bb11:  // pred: ^bb9
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb10
  ^bb12:  // 2 preds: ^bb10, ^bb13
    %106 = llvm.getelementptr %103[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %107 = llvm.getelementptr %103[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %108 = llvm.getelementptr %103[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %109 = llvm.load %106 : !llvm.ptr -> !llvm.ptr
    %110 = llvm.load %108 : !llvm.ptr -> !llvm.ptr
    %111 = llvm.load %109 : !llvm.ptr -> i32
    %c0_i32_36 = arith.constant 0 : i32
    %112 = arith.cmpi eq, %111, %c0_i32_36 : i32
    cf.cond_br %112, ^bb15, ^bb14
  ^bb13:  // pred: ^bb10
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb12
  ^bb14:  // 2 preds: ^bb12, ^bb15
    %113 = llvm.load %107 : !llvm.ptr -> i32
    %114 = arith.cmpi ne, %13, %113 : i32
    cf.cond_br %114, ^bb17, ^bb16
  ^bb15:  // pred: ^bb12
    %c3_i32_37 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_37) : (i32) -> ()
    cf.br ^bb14
  ^bb16:  // 2 preds: ^bb14, ^bb17
    %115 = llvm.call %109(%110, %94, %95) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> !llvm.void
    %116 = llvm.load %5 : !llvm.ptr -> i32
    %117 = llvm.load %4 : !llvm.ptr -> i32
    %c29_i64 = arith.constant 29 : i64
    %118 = arith.extui %116 : i32 to i64
    %119 = arith.addi %118, %c29_i64 : i64
    %120 = llvm.getelementptr %11[%119] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %121 = arith.trunci %117 : i32 to i8
    llvm.store %121, %120 : i8, !llvm.ptr
    %122 = llvm.load %5 : !llvm.ptr -> i32
    %123 = llvm.load %3 : !llvm.ptr -> i32
    %c28_i64 = arith.constant 28 : i64
    %124 = arith.extui %122 : i32 to i64
    %125 = arith.addi %124, %c28_i64 : i64
    %126 = llvm.getelementptr %11[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %127 = arith.trunci %123 : i32 to i8
    llvm.store %127, %126 : i8, !llvm.ptr
    %128 = llvm.load %5 : !llvm.ptr -> i32
    %129 = llvm.load %2 : !llvm.ptr -> i32
    %c24_i64_38 = arith.constant 24 : i64
    %130 = arith.extui %128 : i32 to i64
    %131 = arith.addi %130, %c24_i64_38 : i64
    %132 = llvm.getelementptr %11[%131] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %129, %132 : i32, !llvm.ptr
    %133 = llvm.load %5 : !llvm.ptr -> i32
    %134 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %135 = arith.extui %134 : i32 to i64
    %136 = arith.addi %135, %c0_i64 : i64
    %137 = llvm.getelementptr %11[%136] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %138 = llvm.load %137 : !llvm.ptr -> i64
    %c16_i64 = arith.constant 16 : i64
    %139 = arith.extui %133 : i32 to i64
    %140 = arith.addi %139, %c16_i64 : i64
    %141 = llvm.getelementptr %11[%140] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %138, %141 : i64, !llvm.ptr
    %c0_i32_39 = arith.constant 0 : i32
    %c1050740_i64_40 = arith.constant 1050740 : i64
    %142 = arith.extui %c0_i32_39 : i32 to i64
    %143 = arith.addi %142, %c1050740_i64_40 : i64
    %144 = llvm.getelementptr %11[%143] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %145 = llvm.load %144 : !llvm.ptr -> i32
    %146 = llvm.load %5 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %147 = arith.addi %146, %c16_i32 : i32
    %c0_i32_41 = arith.constant 0 : i32
    %c1050744_i64 = arith.constant 1050744 : i64
    %148 = arith.extui %c0_i32_41 : i32 to i64
    %149 = arith.addi %148, %c1050744_i64 : i64
    %150 = llvm.getelementptr %11[%149] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %151 = llvm.load %150 : !llvm.ptr -> i32
    %c20_i64_42 = arith.constant 20 : i64
    %152 = arith.extui %151 : i32 to i64
    %153 = arith.addi %152, %c20_i64_42 : i64
    %154 = llvm.getelementptr %11[%153] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %155 = llvm.load %154 : !llvm.ptr -> i32
    %156 = arith.cmpi ult, %155, %19 : i32
    cf.cond_br %156, ^bb18, ^bb19
  ^bb17:  // pred: ^bb14
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb16
  ^bb18:  // 2 preds: ^bb16, ^bb19
    %157 = llvm.getelementptr %18[%155] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %158 = llvm.load %157 : !llvm.ptr -> !llvm.ptr
    %159 = llvm.load %158 : !llvm.ptr -> i32
    %c0_i32_43 = arith.constant 0 : i32
    %160 = arith.cmpi eq, %159, %c0_i32_43 : i32
    cf.cond_br %160, ^bb21, ^bb20
  ^bb19:  // pred: ^bb16
    %c3_i32_44 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_44) : (i32) -> ()
    cf.br ^bb18
  ^bb20:  // 2 preds: ^bb18, ^bb21
    %161 = llvm.getelementptr %158[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %162 = llvm.getelementptr %158[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %163 = llvm.getelementptr %158[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %164 = llvm.load %161 : !llvm.ptr -> !llvm.ptr
    %165 = llvm.load %163 : !llvm.ptr -> !llvm.ptr
    %166 = llvm.load %164 : !llvm.ptr -> i32
    %c0_i32_45 = arith.constant 0 : i32
    %167 = arith.cmpi eq, %166, %c0_i32_45 : i32
    cf.cond_br %167, ^bb23, ^bb22
  ^bb21:  // pred: ^bb18
    %c4_i32_46 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_46) : (i32) -> ()
    cf.br ^bb20
  ^bb22:  // 2 preds: ^bb20, ^bb23
    %168 = llvm.load %162 : !llvm.ptr -> i32
    %169 = arith.cmpi ne, %13, %168 : i32
    cf.cond_br %169, ^bb25, ^bb24
  ^bb23:  // pred: ^bb20
    %c3_i32_47 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_47) : (i32) -> ()
    cf.br ^bb22
  ^bb24:  // 2 preds: ^bb22, ^bb25
    %170 = llvm.call %164(%165, %145, %147) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> !llvm.void
    %c0_i32_48 = arith.constant 0 : i32
    %c1050736_i64_49 = arith.constant 1050736 : i64
    %171 = arith.extui %c0_i32_48 : i32 to i64
    %172 = arith.addi %171, %c1050736_i64_49 : i64
    %173 = llvm.getelementptr %11[%172] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %174 = llvm.load %173 : !llvm.ptr -> i32
    %c-1_i32_50 = arith.constant -1 : i32
    %175 = arith.addi %174, %c-1_i32_50 : i32
    llvm.store %175, %6 : i32, !llvm.ptr
    cf.br ^bb8
  ^bb25:  // pred: ^bb22
    %c5_i32_51 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_51) : (i32) -> ()
    cf.br ^bb24
  ^bb26:  // pred: ^bb8
    %176 = llvm.load %0 : !llvm.ptr -> i32
    %177 = llvm.load %1 : !llvm.ptr -> i32
    call @f122(%arg0, %176, %177) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb27:  // 2 preds: ^bb5, ^bb28
    %178 = llvm.getelementptr %20[%49] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %179 = llvm.load %178 : !llvm.ptr -> !llvm.ptr
    %180 = llvm.load %179 : !llvm.ptr -> i32
    %c0_i32_52 = arith.constant 0 : i32
    %181 = arith.cmpi eq, %180, %c0_i32_52 : i32
    cf.cond_br %181, ^bb30, ^bb29
  ^bb28:  // pred: ^bb5
    %c3_i32_53 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_53) : (i32) -> ()
    cf.br ^bb27
  ^bb29:  // 2 preds: ^bb27, ^bb30
    %182 = llvm.getelementptr %179[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %183 = llvm.getelementptr %179[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %184 = llvm.getelementptr %179[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %185 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    %186 = llvm.load %184 : !llvm.ptr -> !llvm.ptr
    %187 = llvm.load %185 : !llvm.ptr -> i32
    %c0_i32_54 = arith.constant 0 : i32
    %188 = arith.cmpi eq, %187, %c0_i32_54 : i32
    cf.cond_br %188, ^bb32, ^bb31
  ^bb30:  // pred: ^bb27
    %c4_i32_55 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_55) : (i32) -> ()
    cf.br ^bb29
  ^bb31:  // 2 preds: ^bb29, ^bb32
    %189 = llvm.load %183 : !llvm.ptr -> i32
    %190 = arith.cmpi ne, %13, %189 : i32
    cf.cond_br %190, ^bb34, ^bb33
  ^bb32:  // pred: ^bb29
    %c3_i32_56 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_56) : (i32) -> ()
    cf.br ^bb31
  ^bb33:  // 2 preds: ^bb31, ^bb34
    %191 = llvm.call %185(%186, %43, %44) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> !llvm.void
    cf.br ^bb3
  ^bb34:  // pred: ^bb31
    %c5_i32_57 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_57) : (i32) -> ()
    cf.br ^bb33
  }
  func.func @f122(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %2 = llvm.load %0 : !llvm.ptr -> i32
    %3 = llvm.load %1 : !llvm.ptr -> i32
    %4 = call @f124(%arg0, %2, %3) : (!llvm.ptr, i32, i32) -> i32
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f123(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> i32
    %8 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.load %9 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %12 = llvm.load %1 : !llvm.ptr -> i32
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_2 = arith.constant 0 : i32
    %c1050732_i64 = arith.constant 1050732 : i64
    %14 = arith.extui %c0_i32_2 : i32 to i64
    %15 = arith.addi %14, %c1050732_i64 : i64
    %16 = llvm.getelementptr %5[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i32
    llvm.store %17, %2 : i32, !llvm.ptr
    %c43_i32 = arith.constant 43 : i32
    %18 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_3 = arith.constant 0 : i32
    %19 = arith.cmpi ne, %18, %c0_i32_3 : i32
    %20 = arith.select %19, %17, %c43_i32 : i32
    %21 = arith.cmpi ult, %20, %11 : i32
    cf.cond_br %21, ^bb3, ^bb4
  ^bb2:  // no predecessors
    return
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %22 = llvm.getelementptr %10[%20] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    %24 = llvm.load %23 : !llvm.ptr -> i32
    %c0_i32_4 = arith.constant 0 : i32
    %25 = arith.cmpi eq, %24, %c0_i32_4 : i32
    cf.cond_br %25, ^bb6, ^bb5
  ^bb4:  // pred: ^bb1
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb3
  ^bb5:  // 2 preds: ^bb3, ^bb6
    %26 = llvm.getelementptr %23[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %27 = llvm.getelementptr %23[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %28 = llvm.getelementptr %23[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %29 = llvm.load %26 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %31 = llvm.load %29 : !llvm.ptr -> i32
    %c0_i32_5 = arith.constant 0 : i32
    %32 = arith.cmpi eq, %31, %c0_i32_5 : i32
    cf.cond_br %32, ^bb8, ^bb7
  ^bb6:  // pred: ^bb3
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb5
  ^bb7:  // 2 preds: ^bb5, ^bb8
    %33 = llvm.load %27 : !llvm.ptr -> i32
    %34 = arith.cmpi ne, %7, %33 : i32
    cf.cond_br %34, ^bb10, ^bb9
  ^bb8:  // pred: ^bb5
    %c3_i32_6 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_6) : (i32) -> ()
    cf.br ^bb7
  ^bb9:  // 2 preds: ^bb7, ^bb10
    %35 = llvm.call %29(%30, %12, %13) vararg(!llvm.func<void (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> !llvm.void
    llvm.unreachable
  ^bb10:  // pred: ^bb7
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb9
  }
  func.func @f124(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    llvm.unreachable
  ^bb2(%2: i32):  // no predecessors
    return %2 : i32
  }
  func.func @f125(%arg0: !llvm.ptr) {
    %c0_i32 = arith.constant 0 : i32
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %0 : i32, !llvm.ptr
    %1 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    %3 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %6 = llvm.load %2 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %7 = arith.subi %6, %c32_i32 : i32
    llvm.store %7, %0 : i32, !llvm.ptr
    llvm.store %7, %2 : i32, !llvm.ptr
    %8 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_0 = arith.constant 0 : i32
    %c24_i64 = arith.constant 24 : i64
    %9 = arith.extui %8 : i32 to i64
    %10 = arith.addi %9, %c24_i64 : i64
    %11 = llvm.getelementptr %5[%10] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_0, %11 : i32, !llvm.ptr
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %c12_i64 = arith.constant 12 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c12_i64 : i64
    %15 = llvm.getelementptr %5[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i32, %15 : i32, !llvm.ptr
    %16 = llvm.load %0 : !llvm.ptr -> i32
    %c1049916_i32 = arith.constant 1049916 : i32
    %c8_i64 = arith.constant 8 : i64
    %17 = arith.extui %16 : i32 to i64
    %18 = arith.addi %17, %c8_i64 : i64
    %19 = llvm.getelementptr %5[%18] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1049916_i32, %19 : i32, !llvm.ptr
    %20 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %c16_i64 = arith.constant 16 : i64
    %21 = arith.extui %20 : i32 to i64
    %22 = arith.addi %21, %c16_i64 : i64
    %23 = llvm.getelementptr %5[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c4_i64, %23 : i64, !llvm.ptr
    %24 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %25 = arith.addi %24, %c8_i32 : i32
    %c1049952_i32 = arith.constant 1049952 : i32
    call @f128(%arg0, %25, %c1049952_i32) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f126(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %2 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %3 = arith.cmpi ne, %2, %c0_i32 : i32
    cf.cond_br %3, ^bb3, ^bb4
  ^bb2:  // no predecessors
    return
  ^bb3:  // pred: ^bb1
    %4 = llvm.load %0 : !llvm.ptr -> i32
    %5 = llvm.load %1 : !llvm.ptr -> i32
    call @f127(%arg0, %4, %5) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb4:  // pred: ^bb1
    call @f125(%arg0) : (!llvm.ptr) -> ()
    llvm.unreachable
  }
  func.func @f127(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %3 = llvm.load %0 : !llvm.ptr -> i32
    call @f14(%arg0, %2, %3) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f128(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    %5 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %8 = llvm.load %4 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %9 = arith.subi %8, %c32_i32 : i32
    llvm.store %9, %2 : i32, !llvm.ptr
    llvm.store %9, %4 : i32, !llvm.ptr
    %10 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %11 = arith.addi %10, %c16_i32 : i32
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i32_2 = arith.constant 16 : i32
    %13 = arith.addi %12, %c16_i32_2 : i32
    %c0_i64 = arith.constant 0 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c0_i64 : i64
    %16 = llvm.getelementptr %7[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c0_i64_3 = arith.constant 0 : i64
    %18 = arith.extui %11 : i32 to i64
    %19 = arith.addi %18, %c0_i64_3 : i64
    %20 = llvm.getelementptr %7[%19] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %17, %20 : i64, !llvm.ptr
    %21 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %22 = arith.addi %21, %c8_i32 : i32
    %23 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_4 = arith.constant 8 : i32
    %24 = arith.addi %23, %c8_i32_4 : i32
    %c0_i64_5 = arith.constant 0 : i64
    %25 = arith.extui %24 : i32 to i64
    %26 = arith.addi %25, %c0_i64_5 : i64
    %27 = llvm.getelementptr %7[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c0_i64_6 = arith.constant 0 : i64
    %29 = arith.extui %22 : i32 to i64
    %30 = arith.addi %29, %c0_i64_6 : i64
    %31 = llvm.getelementptr %7[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %28, %31 : i64, !llvm.ptr
    %32 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %c28_i64 = arith.constant 28 : i64
    %33 = arith.extui %32 : i32 to i64
    %34 = arith.addi %33, %c28_i64 : i64
    %35 = llvm.getelementptr %7[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %36 = arith.trunci %c1_i32 : i32 to i16
    llvm.store %36, %35 : i16, !llvm.ptr
    %37 = llvm.load %2 : !llvm.ptr -> i32
    %38 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %39 = arith.extui %37 : i32 to i64
    %40 = arith.addi %39, %c24_i64 : i64
    %41 = llvm.getelementptr %7[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %38, %41 : i32, !llvm.ptr
    %42 = llvm.load %2 : !llvm.ptr -> i32
    %43 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_7 = arith.constant 0 : i64
    %44 = arith.extui %43 : i32 to i64
    %45 = arith.addi %44, %c0_i64_7 : i64
    %46 = llvm.getelementptr %7[%45] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i64
    %c0_i64_8 = arith.constant 0 : i64
    %48 = arith.extui %42 : i32 to i64
    %49 = arith.addi %48, %c0_i64_8 : i64
    %50 = llvm.getelementptr %7[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %47, %50 : i64, !llvm.ptr
    %51 = llvm.load %2 : !llvm.ptr -> i32
    call @f113(%arg0, %51) : (!llvm.ptr, i32) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f129(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %5 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    %7 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.getelementptr %7[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %10 = llvm.load %6 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %11 = arith.subi %10, %c48_i32 : i32
    llvm.store %11, %3 : i32, !llvm.ptr
    llvm.store %11, %6 : i32, !llvm.ptr
    %12 = llvm.load %3 : !llvm.ptr -> i32
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_4 = arith.constant 0 : i64
    %14 = arith.extui %12 : i32 to i64
    %15 = arith.addi %14, %c0_i64_4 : i64
    %16 = llvm.getelementptr %9[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %13, %16 : i32, !llvm.ptr
    %17 = llvm.load %3 : !llvm.ptr -> i32
    %18 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %19 = arith.extui %17 : i32 to i64
    %20 = arith.addi %19, %c4_i64 : i64
    %21 = llvm.getelementptr %9[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %18, %21 : i32, !llvm.ptr
    %22 = llvm.load %3 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c12_i64 = arith.constant 12 : i64
    %23 = arith.extui %22 : i32 to i64
    %24 = arith.addi %23, %c12_i64 : i64
    %25 = llvm.getelementptr %9[%24] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c2_i32, %25 : i32, !llvm.ptr
    %26 = llvm.load %3 : !llvm.ptr -> i32
    %c1050256_i32 = arith.constant 1050256 : i32
    %c8_i64 = arith.constant 8 : i64
    %27 = arith.extui %26 : i32 to i64
    %28 = arith.addi %27, %c8_i64 : i64
    %29 = llvm.getelementptr %9[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1050256_i32, %29 : i32, !llvm.ptr
    %30 = llvm.load %3 : !llvm.ptr -> i32
    %c2_i64 = arith.constant 2 : i64
    %c20_i64 = arith.constant 20 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c20_i64 : i64
    %33 = llvm.getelementptr %9[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c2_i64, %33 : i64, !llvm.ptr
    %34 = llvm.load %3 : !llvm.ptr -> i32
    %c42_i32 = arith.constant 42 : i32
    %35 = arith.extui %c42_i32 : i32 to i64
    %c32_i64 = arith.constant 32 : i64
    %c63_i64 = arith.constant 63 : i64
    %36 = arith.cmpi ule, %c32_i64, %c63_i64 : i64
    %37 = scf.if %36 -> (i64) {
      %62 = arith.shli %35, %c32_i64 : i64
      scf.yield %62 : i64
    } else {
      %c0_i64_6 = arith.constant 0 : i64
      scf.yield %c0_i64_6 : i64
    }
    llvm.store %37, %4 : i64, !llvm.ptr
    %38 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %39 = arith.addi %38, %c4_i32 : i32
    %40 = arith.extui %39 : i32 to i64
    %41 = arith.ori %37, %40 : i64
    %c40_i64 = arith.constant 40 : i64
    %42 = arith.extui %34 : i32 to i64
    %43 = arith.addi %42, %c40_i64 : i64
    %44 = llvm.getelementptr %9[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i64, !llvm.ptr
    %45 = llvm.load %3 : !llvm.ptr -> i32
    %46 = llvm.load %4 : !llvm.ptr -> i64
    %47 = llvm.load %3 : !llvm.ptr -> i32
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.ori %46, %48 : i64
    %c32_i64_5 = arith.constant 32 : i64
    %50 = arith.extui %45 : i32 to i64
    %51 = arith.addi %50, %c32_i64_5 : i64
    %52 = llvm.getelementptr %9[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %49, %52 : i64, !llvm.ptr
    %53 = llvm.load %3 : !llvm.ptr -> i32
    %54 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %55 = arith.addi %54, %c32_i32 : i32
    %c16_i64 = arith.constant 16 : i64
    %56 = arith.extui %53 : i32 to i64
    %57 = arith.addi %56, %c16_i64 : i64
    %58 = llvm.getelementptr %9[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %55, %58 : i32, !llvm.ptr
    %59 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %60 = arith.addi %59, %c8_i32 : i32
    %61 = llvm.load %2 : !llvm.ptr -> i32
    call @f128(%arg0, %60, %61) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f130(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %5 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    %7 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.getelementptr %7[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %10 = llvm.load %6 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %11 = arith.subi %10, %c48_i32 : i32
    llvm.store %11, %3 : i32, !llvm.ptr
    llvm.store %11, %6 : i32, !llvm.ptr
    %12 = llvm.load %3 : !llvm.ptr -> i32
    %13 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_4 = arith.constant 0 : i64
    %14 = arith.extui %12 : i32 to i64
    %15 = arith.addi %14, %c0_i64_4 : i64
    %16 = llvm.getelementptr %9[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %13, %16 : i32, !llvm.ptr
    %17 = llvm.load %3 : !llvm.ptr -> i32
    %18 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %19 = arith.extui %17 : i32 to i64
    %20 = arith.addi %19, %c4_i64 : i64
    %21 = llvm.getelementptr %9[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %18, %21 : i32, !llvm.ptr
    %22 = llvm.load %3 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c12_i64 = arith.constant 12 : i64
    %23 = arith.extui %22 : i32 to i64
    %24 = arith.addi %23, %c12_i64 : i64
    %25 = llvm.getelementptr %9[%24] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c2_i32, %25 : i32, !llvm.ptr
    %26 = llvm.load %3 : !llvm.ptr -> i32
    %c1050288_i32 = arith.constant 1050288 : i32
    %c8_i64 = arith.constant 8 : i64
    %27 = arith.extui %26 : i32 to i64
    %28 = arith.addi %27, %c8_i64 : i64
    %29 = llvm.getelementptr %9[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1050288_i32, %29 : i32, !llvm.ptr
    %30 = llvm.load %3 : !llvm.ptr -> i32
    %c2_i64 = arith.constant 2 : i64
    %c20_i64 = arith.constant 20 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c20_i64 : i64
    %33 = llvm.getelementptr %9[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c2_i64, %33 : i64, !llvm.ptr
    %34 = llvm.load %3 : !llvm.ptr -> i32
    %c42_i32 = arith.constant 42 : i32
    %35 = arith.extui %c42_i32 : i32 to i64
    %c32_i64 = arith.constant 32 : i64
    %c63_i64 = arith.constant 63 : i64
    %36 = arith.cmpi ule, %c32_i64, %c63_i64 : i64
    %37 = scf.if %36 -> (i64) {
      %62 = arith.shli %35, %c32_i64 : i64
      scf.yield %62 : i64
    } else {
      %c0_i64_6 = arith.constant 0 : i64
      scf.yield %c0_i64_6 : i64
    }
    llvm.store %37, %4 : i64, !llvm.ptr
    %38 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %39 = arith.addi %38, %c4_i32 : i32
    %40 = arith.extui %39 : i32 to i64
    %41 = arith.ori %37, %40 : i64
    %c40_i64 = arith.constant 40 : i64
    %42 = arith.extui %34 : i32 to i64
    %43 = arith.addi %42, %c40_i64 : i64
    %44 = llvm.getelementptr %9[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %41, %44 : i64, !llvm.ptr
    %45 = llvm.load %3 : !llvm.ptr -> i32
    %46 = llvm.load %4 : !llvm.ptr -> i64
    %47 = llvm.load %3 : !llvm.ptr -> i32
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.ori %46, %48 : i64
    %c32_i64_5 = arith.constant 32 : i64
    %50 = arith.extui %45 : i32 to i64
    %51 = arith.addi %50, %c32_i64_5 : i64
    %52 = llvm.getelementptr %9[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %49, %52 : i64, !llvm.ptr
    %53 = llvm.load %3 : !llvm.ptr -> i32
    %54 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %55 = arith.addi %54, %c32_i32 : i32
    %c16_i64 = arith.constant 16 : i64
    %56 = arith.extui %53 : i32 to i64
    %57 = arith.addi %56, %c16_i64 : i64
    %58 = llvm.getelementptr %9[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %55, %58 : i32, !llvm.ptr
    %59 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %60 = arith.addi %59, %c8_i32 : i32
    %61 = llvm.load %2 : !llvm.ptr -> i32
    call @f128(%arg0, %60, %61) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f131(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %c1_i64_7 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_7 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %8 : i32, !llvm.ptr
    %9 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.getelementptr %9[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.load %10 : !llvm.ptr -> !llvm.ptr
    %12 = llvm.getelementptr %arg0[12] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> i32
    %14 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %17 = llvm.load %15 : !llvm.ptr -> i32
    %18 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %19 = llvm.load %18 : !llvm.ptr -> i32
    %20 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %21 = llvm.load %15 : !llvm.ptr -> i32
    %22 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %23 = llvm.load %15 : !llvm.ptr -> i32
    %24 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %25 = llvm.load %15 : !llvm.ptr -> i32
    %26 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %27 = llvm.load %15 : !llvm.ptr -> i32
    %28 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %29 = llvm.load %15 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %30 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c0_i64 : i64
    %33 = llvm.getelementptr %11[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %34 = llvm.load %33 : !llvm.ptr -> i32
    llvm.store %34, %3 : i32, !llvm.ptr
    %35 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %36 = arith.extui %35 : i32 to i64
    %37 = arith.addi %36, %c8_i64 : i64
    %38 = llvm.getelementptr %11[%37] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %39 = llvm.load %38 : !llvm.ptr -> i32
    llvm.store %39, %4 : i32, !llvm.ptr
    %40 = arith.ori %34, %39 : i32
    %c0_i32_8 = arith.constant 0 : i32
    %41 = arith.cmpi eq, %40, %c0_i32_8 : i32
    %42 = arith.extui %41 : i1 to i32
    %c0_i32_9 = arith.constant 0 : i32
    %43 = arith.cmpi ne, %42, %c0_i32_9 : i32
    cf.cond_br %43, ^bb3, ^bb4
  ^bb2(%44: i32):  // 5 preds: ^bb39, ^bb62, ^bb80, ^bb82, ^bb112
    return %44 : i32
  ^bb3:  // pred: ^bb1
    %45 = llvm.load %0 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %46 = arith.extui %45 : i32 to i64
    %47 = arith.addi %46, %c20_i64 : i64
    %48 = llvm.getelementptr %11[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i32
    %50 = llvm.load %1 : !llvm.ptr -> i32
    %51 = llvm.load %2 : !llvm.ptr -> i32
    %52 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %53 = arith.extui %52 : i32 to i64
    %54 = arith.addi %53, %c24_i64 : i64
    %55 = llvm.getelementptr %11[%54] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %56 = llvm.load %55 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %57 = arith.extui %56 : i32 to i64
    %58 = arith.addi %57, %c12_i64 : i64
    %59 = llvm.getelementptr %11[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> i32
    %61 = arith.cmpi ult, %60, %29 : i32
    cf.cond_br %61, ^bb106, ^bb107
  ^bb4:  // pred: ^bb1
    %62 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_10 = arith.constant 0 : i32
    %63 = arith.cmpi eq, %62, %c0_i32_10 : i32
    %64 = arith.extui %63 : i1 to i32
    %c0_i32_11 = arith.constant 0 : i32
    %65 = arith.cmpi ne, %64, %c0_i32_11 : i32
    cf.cond_br %65, ^bb5, ^bb6
  ^bb5:  // 4 preds: ^bb4, ^bb7, ^bb11, ^bb24
    %66 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_12 = arith.constant 0 : i32
    %67 = arith.cmpi ne, %66, %c0_i32_12 : i32
    cf.cond_br %67, ^bb31, ^bb32
  ^bb6:  // pred: ^bb4
    %68 = llvm.load %1 : !llvm.ptr -> i32
    %69 = llvm.load %2 : !llvm.ptr -> i32
    %70 = arith.addi %68, %69 : i32
    llvm.store %70, %5 : i32, !llvm.ptr
    %71 = llvm.load %0 : !llvm.ptr -> i32
    %c12_i64_13 = arith.constant 12 : i64
    %72 = arith.extui %71 : i32 to i64
    %73 = arith.addi %72, %c12_i64_13 : i64
    %74 = llvm.getelementptr %11[%73] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %75 = llvm.load %74 : !llvm.ptr -> i32
    llvm.store %75, %6 : i32, !llvm.ptr
    %c0_i32_14 = arith.constant 0 : i32
    %76 = arith.cmpi ne, %75, %c0_i32_14 : i32
    cf.cond_br %76, ^bb8, ^bb9
  ^bb7:  // 2 preds: ^bb9, ^bb10
    %77 = llvm.load %8 : !llvm.ptr -> i32
    %78 = llvm.load %5 : !llvm.ptr -> i32
    %79 = arith.cmpi eq, %77, %78 : i32
    %80 = arith.extui %79 : i1 to i32
    %c0_i32_15 = arith.constant 0 : i32
    %81 = arith.cmpi ne, %80, %c0_i32_15 : i32
    cf.cond_br %81, ^bb5, ^bb21
  ^bb8:  // pred: ^bb6
    %c0_i32_16 = arith.constant 0 : i32
    llvm.store %c0_i32_16, %7 : i32, !llvm.ptr
    %82 = llvm.load %1 : !llvm.ptr -> i32
    llvm.store %82, %8 : i32, !llvm.ptr
    cf.br ^bb11
  ^bb9:  // pred: ^bb6
    %c0_i32_17 = arith.constant 0 : i32
    llvm.store %c0_i32_17, %7 : i32, !llvm.ptr
    %83 = llvm.load %1 : !llvm.ptr -> i32
    llvm.store %83, %8 : i32, !llvm.ptr
    cf.br ^bb7
  ^bb10:  // pred: ^bb20
    cf.br ^bb7
  ^bb11:  // 2 preds: ^bb8, ^bb13
    %84 = llvm.load %8 : !llvm.ptr -> i32
    llvm.store %84, %4 : i32, !llvm.ptr
    %85 = llvm.load %5 : !llvm.ptr -> i32
    %86 = arith.cmpi eq, %84, %85 : i32
    %87 = arith.extui %86 : i1 to i32
    %c0_i32_18 = arith.constant 0 : i32
    %88 = arith.cmpi ne, %87, %c0_i32_18 : i32
    cf.cond_br %88, ^bb5, ^bb12
  ^bb12:  // pred: ^bb11
    %89 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i64_19 = arith.constant 0 : i64
    %90 = arith.extui %89 : i32 to i64
    %91 = arith.addi %90, %c0_i64_19 : i64
    %92 = llvm.getelementptr %11[%91] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %93 = llvm.load %92 : !llvm.ptr -> i8
    %94 = arith.extsi %93 : i8 to i32
    llvm.store %94, %8 : i32, !llvm.ptr
    %c-1_i32 = arith.constant -1 : i32
    %95 = arith.cmpi sle, %94, %c-1_i32 : i32
    %96 = arith.extui %95 : i1 to i32
    %c0_i32_20 = arith.constant 0 : i32
    %97 = arith.cmpi ne, %96, %c0_i32_20 : i32
    cf.cond_br %97, ^bb14, ^bb15
  ^bb13:  // 4 preds: ^bb15, ^bb17, ^bb18, ^bb19
    %98 = llvm.load %8 : !llvm.ptr -> i32
    %99 = llvm.load %4 : !llvm.ptr -> i32
    %100 = arith.subi %98, %99 : i32
    %101 = llvm.load %7 : !llvm.ptr -> i32
    %102 = arith.addi %100, %101 : i32
    llvm.store %102, %7 : i32, !llvm.ptr
    %103 = llvm.load %6 : !llvm.ptr -> i32
    %c-1_i32_21 = arith.constant -1 : i32
    %104 = arith.addi %103, %c-1_i32_21 : i32
    llvm.store %104, %6 : i32, !llvm.ptr
    %c0_i32_22 = arith.constant 0 : i32
    %105 = arith.cmpi ne, %104, %c0_i32_22 : i32
    cf.cond_br %105, ^bb11, ^bb20
  ^bb14:  // pred: ^bb12
    %106 = llvm.load %8 : !llvm.ptr -> i32
    %c-32_i32 = arith.constant -32 : i32
    %107 = arith.cmpi uge, %106, %c-32_i32 : i32
    %108 = arith.extui %107 : i1 to i32
    %c0_i32_23 = arith.constant 0 : i32
    %109 = arith.cmpi ne, %108, %c0_i32_23 : i32
    cf.cond_br %109, ^bb16, ^bb17
  ^bb15:  // pred: ^bb12
    %110 = llvm.load %4 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %111 = arith.addi %110, %c1_i32 : i32
    llvm.store %111, %8 : i32, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb14
    %112 = llvm.load %8 : !llvm.ptr -> i32
    %c-16_i32 = arith.constant -16 : i32
    %113 = arith.cmpi uge, %112, %c-16_i32 : i32
    %114 = arith.extui %113 : i1 to i32
    %c0_i32_24 = arith.constant 0 : i32
    %115 = arith.cmpi ne, %114, %c0_i32_24 : i32
    cf.cond_br %115, ^bb18, ^bb19
  ^bb17:  // pred: ^bb14
    %116 = llvm.load %4 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %117 = arith.addi %116, %c2_i32 : i32
    llvm.store %117, %8 : i32, !llvm.ptr
    cf.br ^bb13
  ^bb18:  // pred: ^bb16
    %118 = llvm.load %4 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %119 = arith.addi %118, %c4_i32 : i32
    llvm.store %119, %8 : i32, !llvm.ptr
    cf.br ^bb13
  ^bb19:  // pred: ^bb16
    %120 = llvm.load %4 : !llvm.ptr -> i32
    %c3_i32 = arith.constant 3 : i32
    %121 = arith.addi %120, %c3_i32 : i32
    llvm.store %121, %8 : i32, !llvm.ptr
    cf.br ^bb13
  ^bb20:  // pred: ^bb13
    cf.br ^bb10
  ^bb21:  // pred: ^bb7
    %122 = llvm.load %8 : !llvm.ptr -> i32
    %c0_i64_25 = arith.constant 0 : i64
    %123 = arith.extui %122 : i32 to i64
    %124 = arith.addi %123, %c0_i64_25 : i64
    %125 = llvm.getelementptr %11[%124] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %126 = llvm.load %125 : !llvm.ptr -> i8
    %127 = arith.extsi %126 : i8 to i32
    llvm.store %127, %4 : i32, !llvm.ptr
    %c-1_i32_26 = arith.constant -1 : i32
    %128 = arith.cmpi sgt, %127, %c-1_i32_26 : i32
    %129 = arith.extui %128 : i1 to i32
    %c0_i32_27 = arith.constant 0 : i32
    %130 = arith.cmpi ne, %129, %c0_i32_27 : i32
    cf.cond_br %130, ^bb22, ^bb23
  ^bb22:  // 2 preds: ^bb21, ^bb23
    %131 = llvm.load %7 : !llvm.ptr -> i32
    %c0_i32_28 = arith.constant 0 : i32
    %132 = arith.cmpi eq, %131, %c0_i32_28 : i32
    %133 = arith.extui %132 : i1 to i32
    %c0_i32_29 = arith.constant 0 : i32
    %134 = arith.cmpi ne, %133, %c0_i32_29 : i32
    cf.cond_br %134, ^bb25, ^bb26
  ^bb23:  // pred: ^bb21
    %135 = llvm.load %4 : !llvm.ptr -> i32
    %c-32_i32_30 = arith.constant -32 : i32
    %136 = arith.cmpi ult, %135, %c-32_i32_30 : i32
    %137 = arith.extui %136 : i1 to i32
    cf.br ^bb22
  ^bb24:  // 3 preds: ^bb25, ^bb27, ^bb29
    %138 = llvm.load %7 : !llvm.ptr -> i32
    %139 = llvm.load %2 : !llvm.ptr -> i32
    %140 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_31 = arith.constant 0 : i32
    %141 = arith.cmpi ne, %140, %c0_i32_31 : i32
    %142 = arith.select %141, %138, %139 : i32
    llvm.store %142, %2 : i32, !llvm.ptr
    %143 = llvm.load %4 : !llvm.ptr -> i32
    %144 = llvm.load %1 : !llvm.ptr -> i32
    %145 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_32 = arith.constant 0 : i32
    %146 = arith.cmpi ne, %145, %c0_i32_32 : i32
    %147 = arith.select %146, %143, %144 : i32
    llvm.store %147, %1 : i32, !llvm.ptr
    cf.br ^bb5
  ^bb25:  // 3 preds: ^bb22, ^bb28, ^bb30
    %148 = llvm.load %1 : !llvm.ptr -> i32
    llvm.store %148, %4 : i32, !llvm.ptr
    cf.br ^bb24
  ^bb26:  // pred: ^bb22
    %149 = llvm.load %7 : !llvm.ptr -> i32
    %150 = llvm.load %2 : !llvm.ptr -> i32
    %151 = arith.cmpi uge, %149, %150 : i32
    %152 = arith.extui %151 : i1 to i32
    %c0_i32_33 = arith.constant 0 : i32
    %153 = arith.cmpi ne, %152, %c0_i32_33 : i32
    cf.cond_br %153, ^bb27, ^bb28
  ^bb27:  // pred: ^bb26
    %c0_i32_34 = arith.constant 0 : i32
    llvm.store %c0_i32_34, %4 : i32, !llvm.ptr
    %154 = llvm.load %7 : !llvm.ptr -> i32
    %155 = llvm.load %2 : !llvm.ptr -> i32
    %156 = arith.cmpi eq, %154, %155 : i32
    %157 = arith.extui %156 : i1 to i32
    %c-1_i32_35 = arith.constant -1 : i32
    %158 = arith.xori %157, %c-1_i32_35 : i32
    %c0_i32_36 = arith.constant 0 : i32
    %159 = arith.cmpi ne, %158, %c0_i32_36 : i32
    cf.cond_br %159, ^bb24, ^bb30
  ^bb28:  // pred: ^bb26
    %c0_i32_37 = arith.constant 0 : i32
    llvm.store %c0_i32_37, %4 : i32, !llvm.ptr
    %160 = llvm.load %1 : !llvm.ptr -> i32
    %161 = llvm.load %7 : !llvm.ptr -> i32
    %162 = arith.addi %160, %161 : i32
    %c0_i64_38 = arith.constant 0 : i64
    %163 = arith.extui %162 : i32 to i64
    %164 = arith.addi %163, %c0_i64_38 : i64
    %165 = llvm.getelementptr %11[%164] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %166 = llvm.load %165 : !llvm.ptr -> i8
    %167 = arith.extsi %166 : i8 to i32
    %c-65_i32 = arith.constant -65 : i32
    %168 = arith.cmpi sgt, %167, %c-65_i32 : i32
    %169 = arith.extui %168 : i1 to i32
    %c0_i32_39 = arith.constant 0 : i32
    %170 = arith.cmpi ne, %169, %c0_i32_39 : i32
    cf.cond_br %170, ^bb25, ^bb29
  ^bb29:  // pred: ^bb28
    cf.br ^bb24
  ^bb30:  // pred: ^bb27
    cf.br ^bb25
  ^bb31:  // pred: ^bb5
    %171 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %172 = arith.extui %171 : i32 to i64
    %173 = arith.addi %172, %c4_i64 : i64
    %174 = llvm.getelementptr %11[%173] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %175 = llvm.load %174 : !llvm.ptr -> i32
    llvm.store %175, %3 : i32, !llvm.ptr
    %176 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %177 = arith.cmpi ult, %176, %c16_i32 : i32
    %178 = arith.extui %177 : i1 to i32
    %c0_i32_40 = arith.constant 0 : i32
    %179 = arith.cmpi ne, %178, %c0_i32_40 : i32
    cf.cond_br %179, ^bb42, ^bb43
  ^bb32:  // pred: ^bb5
    %180 = llvm.load %0 : !llvm.ptr -> i32
    %c20_i64_41 = arith.constant 20 : i64
    %181 = arith.extui %180 : i32 to i64
    %182 = arith.addi %181, %c20_i64_41 : i64
    %183 = llvm.getelementptr %11[%182] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %184 = llvm.load %183 : !llvm.ptr -> i32
    %185 = llvm.load %1 : !llvm.ptr -> i32
    %186 = llvm.load %2 : !llvm.ptr -> i32
    %187 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64_42 = arith.constant 24 : i64
    %188 = arith.extui %187 : i32 to i64
    %189 = arith.addi %188, %c24_i64_42 : i64
    %190 = llvm.getelementptr %11[%189] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %191 = llvm.load %190 : !llvm.ptr -> i32
    %c12_i64_43 = arith.constant 12 : i64
    %192 = arith.extui %191 : i32 to i64
    %193 = arith.addi %192, %c12_i64_43 : i64
    %194 = llvm.getelementptr %11[%193] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %195 = llvm.load %194 : !llvm.ptr -> i32
    %196 = arith.cmpi ult, %195, %17 : i32
    cf.cond_br %196, ^bb33, ^bb34
  ^bb33:  // 2 preds: ^bb32, ^bb34
    %197 = llvm.getelementptr %16[%195] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %198 = llvm.load %197 : !llvm.ptr -> !llvm.ptr
    %199 = llvm.load %198 : !llvm.ptr -> i32
    %c0_i32_44 = arith.constant 0 : i32
    %200 = arith.cmpi eq, %199, %c0_i32_44 : i32
    cf.cond_br %200, ^bb36, ^bb35
  ^bb34:  // pred: ^bb32
    %c3_i32_45 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_45) : (i32) -> ()
    cf.br ^bb33
  ^bb35:  // 2 preds: ^bb33, ^bb36
    %201 = llvm.getelementptr %198[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %202 = llvm.getelementptr %198[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %203 = llvm.getelementptr %198[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %204 = llvm.load %201 : !llvm.ptr -> !llvm.ptr
    %205 = llvm.load %203 : !llvm.ptr -> !llvm.ptr
    %206 = llvm.load %204 : !llvm.ptr -> i32
    %c0_i32_46 = arith.constant 0 : i32
    %207 = arith.cmpi eq, %206, %c0_i32_46 : i32
    cf.cond_br %207, ^bb38, ^bb37
  ^bb36:  // pred: ^bb33
    %c4_i32_47 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_47) : (i32) -> ()
    cf.br ^bb35
  ^bb37:  // 2 preds: ^bb35, ^bb38
    %208 = llvm.load %202 : !llvm.ptr -> i32
    %209 = arith.cmpi ne, %13, %208 : i32
    cf.cond_br %209, ^bb40, ^bb39
  ^bb38:  // pred: ^bb35
    %c3_i32_48 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_48) : (i32) -> ()
    cf.br ^bb37
  ^bb39:  // 2 preds: ^bb37, ^bb40
    %210 = llvm.call %204(%205, %184, %185, %186) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%210 : i32)
  ^bb40:  // pred: ^bb37
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb39
  ^bb41:  // 4 preds: ^bb43, ^bb45, ^bb46, ^bb53
    %211 = llvm.load %3 : !llvm.ptr -> i32
    %212 = llvm.load %4 : !llvm.ptr -> i32
    %213 = arith.cmpi ule, %211, %212 : i32
    %214 = arith.extui %213 : i1 to i32
    %c0_i32_49 = arith.constant 0 : i32
    %215 = arith.cmpi ne, %214, %c0_i32_49 : i32
    cf.cond_br %215, ^bb57, ^bb58
  ^bb42:  // pred: ^bb31
    %216 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_50 = arith.constant 0 : i32
    %217 = arith.cmpi ne, %216, %c0_i32_50 : i32
    cf.cond_br %217, ^bb44, ^bb45
  ^bb43:  // pred: ^bb31
    %218 = llvm.load %1 : !llvm.ptr -> i32
    %219 = llvm.load %2 : !llvm.ptr -> i32
    %220 = call @f137(%arg0, %218, %219) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %220, %4 : i32, !llvm.ptr
    cf.br ^bb41
  ^bb44:  // pred: ^bb42
    %221 = llvm.load %2 : !llvm.ptr -> i32
    %c3_i32_51 = arith.constant 3 : i32
    %222 = arith.andi %221, %c3_i32_51 : i32
    llvm.store %222, %6 : i32, !llvm.ptr
    %223 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i32_52 = arith.constant 4 : i32
    %224 = arith.cmpi uge, %223, %c4_i32_52 : i32
    %225 = arith.extui %224 : i1 to i32
    %c0_i32_53 = arith.constant 0 : i32
    %226 = arith.cmpi ne, %225, %c0_i32_53 : i32
    cf.cond_br %226, ^bb47, ^bb48
  ^bb45:  // pred: ^bb42
    %c0_i32_54 = arith.constant 0 : i32
    llvm.store %c0_i32_54, %4 : i32, !llvm.ptr
    cf.br ^bb41
  ^bb46:  // 2 preds: ^bb48, ^bb49
    %227 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i32_55 = arith.constant 0 : i32
    %228 = arith.cmpi eq, %227, %c0_i32_55 : i32
    %229 = arith.extui %228 : i1 to i32
    %c0_i32_56 = arith.constant 0 : i32
    %230 = arith.cmpi ne, %229, %c0_i32_56 : i32
    cf.cond_br %230, ^bb41, ^bb52
  ^bb47:  // pred: ^bb44
    %231 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %232 = arith.andi %231, %c12_i32 : i32
    llvm.store %232, %5 : i32, !llvm.ptr
    %c0_i32_57 = arith.constant 0 : i32
    llvm.store %c0_i32_57, %4 : i32, !llvm.ptr
    %c0_i32_58 = arith.constant 0 : i32
    llvm.store %c0_i32_58, %7 : i32, !llvm.ptr
    cf.br ^bb50
  ^bb48:  // pred: ^bb44
    %c0_i32_59 = arith.constant 0 : i32
    llvm.store %c0_i32_59, %4 : i32, !llvm.ptr
    %c0_i32_60 = arith.constant 0 : i32
    llvm.store %c0_i32_60, %7 : i32, !llvm.ptr
    cf.br ^bb46
  ^bb49:  // pred: ^bb51
    cf.br ^bb46
  ^bb50:  // 2 preds: ^bb47, ^bb50
    %233 = llvm.load %4 : !llvm.ptr -> i32
    %234 = llvm.load %1 : !llvm.ptr -> i32
    %235 = llvm.load %7 : !llvm.ptr -> i32
    %236 = arith.addi %234, %235 : i32
    llvm.store %236, %8 : i32, !llvm.ptr
    %c0_i64_61 = arith.constant 0 : i64
    %237 = arith.extui %236 : i32 to i64
    %238 = arith.addi %237, %c0_i64_61 : i64
    %239 = llvm.getelementptr %11[%238] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %240 = llvm.load %239 : !llvm.ptr -> i8
    %241 = arith.extsi %240 : i8 to i32
    %c-65_i32_62 = arith.constant -65 : i32
    %242 = arith.cmpi sgt, %241, %c-65_i32_62 : i32
    %243 = arith.extui %242 : i1 to i32
    %244 = arith.addi %233, %243 : i32
    %245 = llvm.load %8 : !llvm.ptr -> i32
    %c1_i32_63 = arith.constant 1 : i32
    %246 = arith.addi %245, %c1_i32_63 : i32
    %c0_i64_64 = arith.constant 0 : i64
    %247 = arith.extui %246 : i32 to i64
    %248 = arith.addi %247, %c0_i64_64 : i64
    %249 = llvm.getelementptr %11[%248] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %250 = llvm.load %249 : !llvm.ptr -> i8
    %251 = arith.extsi %250 : i8 to i32
    %c-65_i32_65 = arith.constant -65 : i32
    %252 = arith.cmpi sgt, %251, %c-65_i32_65 : i32
    %253 = arith.extui %252 : i1 to i32
    %254 = arith.addi %244, %253 : i32
    %255 = llvm.load %8 : !llvm.ptr -> i32
    %c2_i32_66 = arith.constant 2 : i32
    %256 = arith.addi %255, %c2_i32_66 : i32
    %c0_i64_67 = arith.constant 0 : i64
    %257 = arith.extui %256 : i32 to i64
    %258 = arith.addi %257, %c0_i64_67 : i64
    %259 = llvm.getelementptr %11[%258] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %260 = llvm.load %259 : !llvm.ptr -> i8
    %261 = arith.extsi %260 : i8 to i32
    %c-65_i32_68 = arith.constant -65 : i32
    %262 = arith.cmpi sgt, %261, %c-65_i32_68 : i32
    %263 = arith.extui %262 : i1 to i32
    %264 = arith.addi %254, %263 : i32
    %265 = llvm.load %8 : !llvm.ptr -> i32
    %c3_i32_69 = arith.constant 3 : i32
    %266 = arith.addi %265, %c3_i32_69 : i32
    %c0_i64_70 = arith.constant 0 : i64
    %267 = arith.extui %266 : i32 to i64
    %268 = arith.addi %267, %c0_i64_70 : i64
    %269 = llvm.getelementptr %11[%268] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %270 = llvm.load %269 : !llvm.ptr -> i8
    %271 = arith.extsi %270 : i8 to i32
    %c-65_i32_71 = arith.constant -65 : i32
    %272 = arith.cmpi sgt, %271, %c-65_i32_71 : i32
    %273 = arith.extui %272 : i1 to i32
    %274 = arith.addi %264, %273 : i32
    llvm.store %274, %4 : i32, !llvm.ptr
    %275 = llvm.load %5 : !llvm.ptr -> i32
    %276 = llvm.load %7 : !llvm.ptr -> i32
    %c4_i32_72 = arith.constant 4 : i32
    %277 = arith.addi %276, %c4_i32_72 : i32
    llvm.store %277, %7 : i32, !llvm.ptr
    %278 = arith.cmpi eq, %275, %277 : i32
    %279 = arith.extui %278 : i1 to i32
    %c-1_i32_73 = arith.constant -1 : i32
    %280 = arith.xori %279, %c-1_i32_73 : i32
    %c0_i32_74 = arith.constant 0 : i32
    %281 = arith.cmpi ne, %280, %c0_i32_74 : i32
    cf.cond_br %281, ^bb50, ^bb51
  ^bb51:  // pred: ^bb50
    cf.br ^bb49
  ^bb52:  // pred: ^bb46
    %282 = llvm.load %1 : !llvm.ptr -> i32
    %283 = llvm.load %7 : !llvm.ptr -> i32
    %284 = arith.addi %282, %283 : i32
    llvm.store %284, %8 : i32, !llvm.ptr
    cf.br ^bb54
  ^bb53:  // pred: ^bb55
    cf.br ^bb41
  ^bb54:  // 2 preds: ^bb52, ^bb54
    %285 = llvm.load %4 : !llvm.ptr -> i32
    %286 = llvm.load %8 : !llvm.ptr -> i32
    %c0_i64_75 = arith.constant 0 : i64
    %287 = arith.extui %286 : i32 to i64
    %288 = arith.addi %287, %c0_i64_75 : i64
    %289 = llvm.getelementptr %11[%288] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %290 = llvm.load %289 : !llvm.ptr -> i8
    %291 = arith.extsi %290 : i8 to i32
    %c-65_i32_76 = arith.constant -65 : i32
    %292 = arith.cmpi sgt, %291, %c-65_i32_76 : i32
    %293 = arith.extui %292 : i1 to i32
    %294 = arith.addi %285, %293 : i32
    llvm.store %294, %4 : i32, !llvm.ptr
    %295 = llvm.load %8 : !llvm.ptr -> i32
    %c1_i32_77 = arith.constant 1 : i32
    %296 = arith.addi %295, %c1_i32_77 : i32
    llvm.store %296, %8 : i32, !llvm.ptr
    %297 = llvm.load %6 : !llvm.ptr -> i32
    %c-1_i32_78 = arith.constant -1 : i32
    %298 = arith.addi %297, %c-1_i32_78 : i32
    llvm.store %298, %6 : i32, !llvm.ptr
    %c0_i32_79 = arith.constant 0 : i32
    %299 = arith.cmpi ne, %298, %c0_i32_79 : i32
    cf.cond_br %299, ^bb54, ^bb55
  ^bb55:  // pred: ^bb54
    cf.br ^bb53
  ^bb56:  // pred: ^bb63
    %c1_i32_80 = arith.constant 1 : i32
    llvm.store %c1_i32_80, %4 : i32, !llvm.ptr
    %300 = llvm.load %7 : !llvm.ptr -> i32
    %301 = llvm.load %1 : !llvm.ptr -> i32
    %302 = llvm.load %2 : !llvm.ptr -> i32
    %303 = llvm.load %8 : !llvm.ptr -> i32
    %c12_i64_81 = arith.constant 12 : i64
    %304 = arith.extui %303 : i32 to i64
    %305 = arith.addi %304, %c12_i64_81 : i64
    %306 = llvm.getelementptr %11[%305] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %307 = llvm.load %306 : !llvm.ptr -> i32
    %308 = arith.cmpi ult, %307, %25 : i32
    cf.cond_br %308, ^bb83, ^bb84
  ^bb57:  // pred: ^bb41
    %309 = llvm.load %0 : !llvm.ptr -> i32
    %c20_i64_82 = arith.constant 20 : i64
    %310 = arith.extui %309 : i32 to i64
    %311 = arith.addi %310, %c20_i64_82 : i64
    %312 = llvm.getelementptr %11[%311] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %313 = llvm.load %312 : !llvm.ptr -> i32
    %314 = llvm.load %1 : !llvm.ptr -> i32
    %315 = llvm.load %2 : !llvm.ptr -> i32
    %316 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64_83 = arith.constant 24 : i64
    %317 = arith.extui %316 : i32 to i64
    %318 = arith.addi %317, %c24_i64_83 : i64
    %319 = llvm.getelementptr %11[%318] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %320 = llvm.load %319 : !llvm.ptr -> i32
    %c12_i64_84 = arith.constant 12 : i64
    %321 = arith.extui %320 : i32 to i64
    %322 = arith.addi %321, %c12_i64_84 : i64
    %323 = llvm.getelementptr %11[%322] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %324 = llvm.load %323 : !llvm.ptr -> i32
    %325 = arith.cmpi ult, %324, %23 : i32
    cf.cond_br %325, ^bb74, ^bb75
  ^bb58:  // pred: ^bb41
    %326 = llvm.load %3 : !llvm.ptr -> i32
    %327 = llvm.load %4 : !llvm.ptr -> i32
    %328 = arith.subi %326, %327 : i32
    llvm.store %328, %5 : i32, !llvm.ptr
    %c0_i32_85 = arith.constant 0 : i32
    llvm.store %c0_i32_85, %4 : i32, !llvm.ptr
    %329 = llvm.load %0 : !llvm.ptr -> i32
    %c32_i64 = arith.constant 32 : i64
    %330 = arith.extui %329 : i32 to i64
    %331 = arith.addi %330, %c32_i64 : i64
    %332 = llvm.getelementptr %11[%331] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %333 = llvm.load %332 : !llvm.ptr -> i8
    %334 = arith.extui %333 : i8 to i32
    cf.switch %334 : i32, [
      default: ^bb59,
      0: ^bb59,
      1: ^bb61,
      2: ^bb60,
      3: ^bb59
    ]
  ^bb59:  // 5 preds: ^bb58, ^bb58, ^bb58, ^bb60, ^bb61
    %335 = llvm.load %4 : !llvm.ptr -> i32
    %c1_i32_86 = arith.constant 1 : i32
    %336 = arith.addi %335, %c1_i32_86 : i32
    llvm.store %336, %4 : i32, !llvm.ptr
    %337 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %338 = arith.extui %337 : i32 to i64
    %339 = arith.addi %338, %c16_i64 : i64
    %340 = llvm.getelementptr %11[%339] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %341 = llvm.load %340 : !llvm.ptr -> i32
    llvm.store %341, %6 : i32, !llvm.ptr
    %342 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64_87 = arith.constant 24 : i64
    %343 = arith.extui %342 : i32 to i64
    %344 = arith.addi %343, %c24_i64_87 : i64
    %345 = llvm.getelementptr %11[%344] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %346 = llvm.load %345 : !llvm.ptr -> i32
    llvm.store %346, %8 : i32, !llvm.ptr
    %347 = llvm.load %0 : !llvm.ptr -> i32
    %c20_i64_88 = arith.constant 20 : i64
    %348 = arith.extui %347 : i32 to i64
    %349 = arith.addi %348, %c20_i64_88 : i64
    %350 = llvm.getelementptr %11[%349] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %351 = llvm.load %350 : !llvm.ptr -> i32
    llvm.store %351, %7 : i32, !llvm.ptr
    cf.br ^bb63
  ^bb60:  // pred: ^bb58
    %352 = llvm.load %5 : !llvm.ptr -> i32
    %c1_i32_89 = arith.constant 1 : i32
    %c31_i32 = arith.constant 31 : i32
    %353 = arith.cmpi ule, %c1_i32_89, %c31_i32 : i32
    %354 = scf.if %353 -> (i32) {
      %474 = arith.shrui %352, %c1_i32_89 : i32
      scf.yield %474 : i32
    } else {
      %c0_i32_140 = arith.constant 0 : i32
      scf.yield %c0_i32_140 : i32
    }
    llvm.store %354, %4 : i32, !llvm.ptr
    %355 = llvm.load %5 : !llvm.ptr -> i32
    %c1_i32_90 = arith.constant 1 : i32
    %356 = arith.addi %355, %c1_i32_90 : i32
    %c1_i32_91 = arith.constant 1 : i32
    %c31_i32_92 = arith.constant 31 : i32
    %357 = arith.cmpi ule, %c1_i32_91, %c31_i32_92 : i32
    %358 = scf.if %357 -> (i32) {
      %474 = arith.shrui %356, %c1_i32_91 : i32
      scf.yield %474 : i32
    } else {
      %c0_i32_140 = arith.constant 0 : i32
      scf.yield %c0_i32_140 : i32
    }
    llvm.store %358, %5 : i32, !llvm.ptr
    cf.br ^bb59
  ^bb61:  // pred: ^bb58
    %359 = llvm.load %5 : !llvm.ptr -> i32
    llvm.store %359, %4 : i32, !llvm.ptr
    %c0_i32_93 = arith.constant 0 : i32
    llvm.store %c0_i32_93, %5 : i32, !llvm.ptr
    cf.br ^bb59
  ^bb62:  // pred: ^bb73
    %c1_i32_94 = arith.constant 1 : i32
    cf.br ^bb2(%c1_i32_94 : i32)
  ^bb63:  // 2 preds: ^bb59, ^bb71
    %360 = llvm.load %4 : !llvm.ptr -> i32
    %c-1_i32_95 = arith.constant -1 : i32
    %361 = arith.addi %360, %c-1_i32_95 : i32
    llvm.store %361, %4 : i32, !llvm.ptr
    %c0_i32_96 = arith.constant 0 : i32
    %362 = arith.cmpi eq, %361, %c0_i32_96 : i32
    %363 = arith.extui %362 : i1 to i32
    %c0_i32_97 = arith.constant 0 : i32
    %364 = arith.cmpi ne, %363, %c0_i32_97 : i32
    cf.cond_br %364, ^bb56, ^bb64
  ^bb64:  // pred: ^bb63
    %365 = llvm.load %7 : !llvm.ptr -> i32
    %366 = llvm.load %6 : !llvm.ptr -> i32
    %367 = llvm.load %8 : !llvm.ptr -> i32
    %c16_i64_98 = arith.constant 16 : i64
    %368 = arith.extui %367 : i32 to i64
    %369 = arith.addi %368, %c16_i64_98 : i64
    %370 = llvm.getelementptr %11[%369] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %371 = llvm.load %370 : !llvm.ptr -> i32
    %372 = arith.cmpi ult, %371, %21 : i32
    cf.cond_br %372, ^bb65, ^bb66
  ^bb65:  // 2 preds: ^bb64, ^bb66
    %373 = llvm.getelementptr %20[%371] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %374 = llvm.load %373 : !llvm.ptr -> !llvm.ptr
    %375 = llvm.load %374 : !llvm.ptr -> i32
    %c0_i32_99 = arith.constant 0 : i32
    %376 = arith.cmpi eq, %375, %c0_i32_99 : i32
    cf.cond_br %376, ^bb68, ^bb67
  ^bb66:  // pred: ^bb64
    %c3_i32_100 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_100) : (i32) -> ()
    cf.br ^bb65
  ^bb67:  // 2 preds: ^bb65, ^bb68
    %377 = llvm.getelementptr %374[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %378 = llvm.getelementptr %374[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %379 = llvm.getelementptr %374[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %380 = llvm.load %377 : !llvm.ptr -> !llvm.ptr
    %381 = llvm.load %379 : !llvm.ptr -> !llvm.ptr
    %382 = llvm.load %380 : !llvm.ptr -> i32
    %c0_i32_101 = arith.constant 0 : i32
    %383 = arith.cmpi eq, %382, %c0_i32_101 : i32
    cf.cond_br %383, ^bb70, ^bb69
  ^bb68:  // pred: ^bb65
    %c4_i32_102 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_102) : (i32) -> ()
    cf.br ^bb67
  ^bb69:  // 2 preds: ^bb67, ^bb70
    %384 = llvm.load %378 : !llvm.ptr -> i32
    %385 = arith.cmpi ne, %19, %384 : i32
    cf.cond_br %385, ^bb72, ^bb71
  ^bb70:  // pred: ^bb67
    %c3_i32_103 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_103) : (i32) -> ()
    cf.br ^bb69
  ^bb71:  // 2 preds: ^bb69, ^bb72
    %386 = llvm.call %380(%381, %365, %366) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> i32
    %c0_i32_104 = arith.constant 0 : i32
    %387 = arith.cmpi eq, %386, %c0_i32_104 : i32
    %388 = arith.extui %387 : i1 to i32
    %c0_i32_105 = arith.constant 0 : i32
    %389 = arith.cmpi ne, %388, %c0_i32_105 : i32
    cf.cond_br %389, ^bb63, ^bb73
  ^bb72:  // pred: ^bb69
    %c5_i32_106 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_106) : (i32) -> ()
    cf.br ^bb71
  ^bb73:  // pred: ^bb71
    cf.br ^bb62
  ^bb74:  // 2 preds: ^bb57, ^bb75
    %390 = llvm.getelementptr %22[%324] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %391 = llvm.load %390 : !llvm.ptr -> !llvm.ptr
    %392 = llvm.load %391 : !llvm.ptr -> i32
    %c0_i32_107 = arith.constant 0 : i32
    %393 = arith.cmpi eq, %392, %c0_i32_107 : i32
    cf.cond_br %393, ^bb77, ^bb76
  ^bb75:  // pred: ^bb57
    %c3_i32_108 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_108) : (i32) -> ()
    cf.br ^bb74
  ^bb76:  // 2 preds: ^bb74, ^bb77
    %394 = llvm.getelementptr %391[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %395 = llvm.getelementptr %391[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %396 = llvm.getelementptr %391[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %397 = llvm.load %394 : !llvm.ptr -> !llvm.ptr
    %398 = llvm.load %396 : !llvm.ptr -> !llvm.ptr
    %399 = llvm.load %397 : !llvm.ptr -> i32
    %c0_i32_109 = arith.constant 0 : i32
    %400 = arith.cmpi eq, %399, %c0_i32_109 : i32
    cf.cond_br %400, ^bb79, ^bb78
  ^bb77:  // pred: ^bb74
    %c4_i32_110 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_110) : (i32) -> ()
    cf.br ^bb76
  ^bb78:  // 2 preds: ^bb76, ^bb79
    %401 = llvm.load %395 : !llvm.ptr -> i32
    %402 = arith.cmpi ne, %13, %401 : i32
    cf.cond_br %402, ^bb81, ^bb80
  ^bb79:  // pred: ^bb76
    %c3_i32_111 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_111) : (i32) -> ()
    cf.br ^bb78
  ^bb80:  // 2 preds: ^bb78, ^bb81
    %403 = llvm.call %397(%398, %313, %314, %315) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%403 : i32)
  ^bb81:  // pred: ^bb78
    %c5_i32_112 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_112) : (i32) -> ()
    cf.br ^bb80
  ^bb82:  // 2 preds: ^bb89, ^bb92
    %404 = llvm.load %4 : !llvm.ptr -> i32
    cf.br ^bb2(%404 : i32)
  ^bb83:  // 2 preds: ^bb56, ^bb84
    %405 = llvm.getelementptr %24[%307] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %406 = llvm.load %405 : !llvm.ptr -> !llvm.ptr
    %407 = llvm.load %406 : !llvm.ptr -> i32
    %c0_i32_113 = arith.constant 0 : i32
    %408 = arith.cmpi eq, %407, %c0_i32_113 : i32
    cf.cond_br %408, ^bb86, ^bb85
  ^bb84:  // pred: ^bb56
    %c3_i32_114 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_114) : (i32) -> ()
    cf.br ^bb83
  ^bb85:  // 2 preds: ^bb83, ^bb86
    %409 = llvm.getelementptr %406[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %410 = llvm.getelementptr %406[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %411 = llvm.getelementptr %406[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %412 = llvm.load %409 : !llvm.ptr -> !llvm.ptr
    %413 = llvm.load %411 : !llvm.ptr -> !llvm.ptr
    %414 = llvm.load %412 : !llvm.ptr -> i32
    %c0_i32_115 = arith.constant 0 : i32
    %415 = arith.cmpi eq, %414, %c0_i32_115 : i32
    cf.cond_br %415, ^bb88, ^bb87
  ^bb86:  // pred: ^bb83
    %c4_i32_116 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_116) : (i32) -> ()
    cf.br ^bb85
  ^bb87:  // 2 preds: ^bb85, ^bb88
    %416 = llvm.load %410 : !llvm.ptr -> i32
    %417 = arith.cmpi ne, %13, %416 : i32
    cf.cond_br %417, ^bb90, ^bb89
  ^bb88:  // pred: ^bb85
    %c3_i32_117 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_117) : (i32) -> ()
    cf.br ^bb87
  ^bb89:  // 2 preds: ^bb87, ^bb90
    %418 = llvm.call %412(%413, %300, %301, %302) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    %c0_i32_118 = arith.constant 0 : i32
    %419 = arith.cmpi ne, %418, %c0_i32_118 : i32
    cf.cond_br %419, ^bb82, ^bb91
  ^bb90:  // pred: ^bb87
    %c5_i32_119 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_119) : (i32) -> ()
    cf.br ^bb89
  ^bb91:  // pred: ^bb89
    %c0_i32_120 = arith.constant 0 : i32
    llvm.store %c0_i32_120, %4 : i32, !llvm.ptr
    cf.br ^bb94
  ^bb92:  // 2 preds: ^bb93, ^bb96
    %420 = llvm.load %4 : !llvm.ptr -> i32
    %421 = llvm.load %5 : !llvm.ptr -> i32
    %422 = arith.cmpi ult, %420, %421 : i32
    %423 = arith.extui %422 : i1 to i32
    llvm.store %423, %4 : i32, !llvm.ptr
    cf.br ^bb82
  ^bb93:  // pred: ^bb105
    %424 = llvm.load %4 : !llvm.ptr -> i32
    %c-1_i32_121 = arith.constant -1 : i32
    %425 = arith.addi %424, %c-1_i32_121 : i32
    llvm.store %425, %4 : i32, !llvm.ptr
    cf.br ^bb92
  ^bb94:  // 2 preds: ^bb91, ^bb103
    %426 = llvm.load %5 : !llvm.ptr -> i32
    %427 = llvm.load %4 : !llvm.ptr -> i32
    %428 = arith.cmpi eq, %426, %427 : i32
    %429 = arith.extui %428 : i1 to i32
    %c-1_i32_122 = arith.constant -1 : i32
    %430 = arith.xori %429, %c-1_i32_122 : i32
    %c0_i32_123 = arith.constant 0 : i32
    %431 = arith.cmpi ne, %430, %c0_i32_123 : i32
    cf.cond_br %431, ^bb95, ^bb96
  ^bb95:  // pred: ^bb94
    %432 = llvm.load %4 : !llvm.ptr -> i32
    %c1_i32_124 = arith.constant 1 : i32
    %433 = arith.addi %432, %c1_i32_124 : i32
    llvm.store %433, %4 : i32, !llvm.ptr
    %434 = llvm.load %7 : !llvm.ptr -> i32
    %435 = llvm.load %6 : !llvm.ptr -> i32
    %436 = llvm.load %8 : !llvm.ptr -> i32
    %c16_i64_125 = arith.constant 16 : i64
    %437 = arith.extui %436 : i32 to i64
    %438 = arith.addi %437, %c16_i64_125 : i64
    %439 = llvm.getelementptr %11[%438] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %440 = llvm.load %439 : !llvm.ptr -> i32
    %441 = arith.cmpi ult, %440, %27 : i32
    cf.cond_br %441, ^bb97, ^bb98
  ^bb96:  // pred: ^bb94
    %442 = llvm.load %5 : !llvm.ptr -> i32
    llvm.store %442, %4 : i32, !llvm.ptr
    cf.br ^bb92
  ^bb97:  // 2 preds: ^bb95, ^bb98
    %443 = llvm.getelementptr %26[%440] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %444 = llvm.load %443 : !llvm.ptr -> !llvm.ptr
    %445 = llvm.load %444 : !llvm.ptr -> i32
    %c0_i32_126 = arith.constant 0 : i32
    %446 = arith.cmpi eq, %445, %c0_i32_126 : i32
    cf.cond_br %446, ^bb100, ^bb99
  ^bb98:  // pred: ^bb95
    %c3_i32_127 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_127) : (i32) -> ()
    cf.br ^bb97
  ^bb99:  // 2 preds: ^bb97, ^bb100
    %447 = llvm.getelementptr %444[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %448 = llvm.getelementptr %444[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %449 = llvm.getelementptr %444[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %450 = llvm.load %447 : !llvm.ptr -> !llvm.ptr
    %451 = llvm.load %449 : !llvm.ptr -> !llvm.ptr
    %452 = llvm.load %450 : !llvm.ptr -> i32
    %c0_i32_128 = arith.constant 0 : i32
    %453 = arith.cmpi eq, %452, %c0_i32_128 : i32
    cf.cond_br %453, ^bb102, ^bb101
  ^bb100:  // pred: ^bb97
    %c4_i32_129 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_129) : (i32) -> ()
    cf.br ^bb99
  ^bb101:  // 2 preds: ^bb99, ^bb102
    %454 = llvm.load %448 : !llvm.ptr -> i32
    %455 = arith.cmpi ne, %19, %454 : i32
    cf.cond_br %455, ^bb104, ^bb103
  ^bb102:  // pred: ^bb99
    %c3_i32_130 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_130) : (i32) -> ()
    cf.br ^bb101
  ^bb103:  // 2 preds: ^bb101, ^bb104
    %456 = llvm.call %450(%451, %434, %435) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> i32
    %c0_i32_131 = arith.constant 0 : i32
    %457 = arith.cmpi eq, %456, %c0_i32_131 : i32
    %458 = arith.extui %457 : i1 to i32
    %c0_i32_132 = arith.constant 0 : i32
    %459 = arith.cmpi ne, %458, %c0_i32_132 : i32
    cf.cond_br %459, ^bb94, ^bb105
  ^bb104:  // pred: ^bb101
    %c5_i32_133 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_133) : (i32) -> ()
    cf.br ^bb103
  ^bb105:  // pred: ^bb103
    cf.br ^bb93
  ^bb106:  // 2 preds: ^bb3, ^bb107
    %460 = llvm.getelementptr %28[%60] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %461 = llvm.load %460 : !llvm.ptr -> !llvm.ptr
    %462 = llvm.load %461 : !llvm.ptr -> i32
    %c0_i32_134 = arith.constant 0 : i32
    %463 = arith.cmpi eq, %462, %c0_i32_134 : i32
    cf.cond_br %463, ^bb109, ^bb108
  ^bb107:  // pred: ^bb3
    %c3_i32_135 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_135) : (i32) -> ()
    cf.br ^bb106
  ^bb108:  // 2 preds: ^bb106, ^bb109
    %464 = llvm.getelementptr %461[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %465 = llvm.getelementptr %461[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %466 = llvm.getelementptr %461[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %467 = llvm.load %464 : !llvm.ptr -> !llvm.ptr
    %468 = llvm.load %466 : !llvm.ptr -> !llvm.ptr
    %469 = llvm.load %467 : !llvm.ptr -> i32
    %c0_i32_136 = arith.constant 0 : i32
    %470 = arith.cmpi eq, %469, %c0_i32_136 : i32
    cf.cond_br %470, ^bb111, ^bb110
  ^bb109:  // pred: ^bb106
    %c4_i32_137 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_137) : (i32) -> ()
    cf.br ^bb108
  ^bb110:  // 2 preds: ^bb108, ^bb111
    %471 = llvm.load %465 : !llvm.ptr -> i32
    %472 = arith.cmpi ne, %13, %471 : i32
    cf.cond_br %472, ^bb113, ^bb112
  ^bb111:  // pred: ^bb108
    %c3_i32_138 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_138) : (i32) -> ()
    cf.br ^bb110
  ^bb112:  // 2 preds: ^bb110, ^bb113
    %473 = llvm.call %467(%468, %49, %50, %51) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%473 : i32)
  ^bb113:  // pred: ^bb110
    %c5_i32_139 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_139) : (i32) -> ()
    cf.br ^bb112
  }
  func.func @f132(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %6 = arith.extui %5 : i32 to i64
    %7 = arith.addi %6, %c0_i64 : i64
    %8 = llvm.getelementptr %4[%7] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> i32
    %10 = arith.extui %9 : i32 to i64
    %c1_i32 = arith.constant 1 : i32
    %11 = llvm.load %1 : !llvm.ptr -> i32
    %12 = call @f141(%arg0, %10, %c1_i32, %11) : (!llvm.ptr, i64, i32, i32) -> i32
    cf.br ^bb2(%12 : i32)
  ^bb2(%13: i32):  // pred: ^bb1
    return %13 : i32
  }
  func.func @f133(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %c1_i64_7 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_7 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %8 : i32, !llvm.ptr
    %c1_i64_8 = arith.constant 1 : i64
    %9 = llvm.alloca %c1_i64_8 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %9 : i32, !llvm.ptr
    %c1_i64_9 = arith.constant 1 : i64
    %10 = llvm.alloca %c1_i64_9 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %10 : i32, !llvm.ptr
    %c1_i64_10 = arith.constant 1 : i64
    %11 = llvm.alloca %c1_i64_10 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %11 : i32, !llvm.ptr
    %c1_i64_11 = arith.constant 1 : i64
    %12 = llvm.alloca %c1_i64_11 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %12 : i32, !llvm.ptr
    %13 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    %15 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.getelementptr %15[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    %18 = llvm.getelementptr %arg0[12] : (!llvm.ptr) -> !llvm.ptr, i8
    %19 = llvm.load %18 : !llvm.ptr -> i32
    %20 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %21 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %22 = llvm.load %20 : !llvm.ptr -> !llvm.ptr
    %23 = llvm.load %21 : !llvm.ptr -> i32
    %24 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %25 = llvm.load %24 : !llvm.ptr -> i32
    %26 = llvm.load %20 : !llvm.ptr -> !llvm.ptr
    %27 = llvm.load %21 : !llvm.ptr -> i32
    %28 = llvm.load %20 : !llvm.ptr -> !llvm.ptr
    %29 = llvm.load %21 : !llvm.ptr -> i32
    %30 = llvm.load %20 : !llvm.ptr -> !llvm.ptr
    %31 = llvm.load %21 : !llvm.ptr -> i32
    %32 = llvm.load %20 : !llvm.ptr -> !llvm.ptr
    %33 = llvm.load %21 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %34 = llvm.load %14 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %35 = arith.subi %34, %c48_i32 : i32
    llvm.store %35, %3 : i32, !llvm.ptr
    llvm.store %35, %14 : i32, !llvm.ptr
    %36 = llvm.load %3 : !llvm.ptr -> i32
    %c3_i32 = arith.constant 3 : i32
    %c44_i64 = arith.constant 44 : i64
    %37 = arith.extui %36 : i32 to i64
    %38 = arith.addi %37, %c44_i64 : i64
    %39 = llvm.getelementptr %17[%38] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %40 = arith.trunci %c3_i32 : i32 to i8
    llvm.store %40, %39 : i8, !llvm.ptr
    %41 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %c28_i64 = arith.constant 28 : i64
    %42 = arith.extui %41 : i32 to i64
    %43 = arith.addi %42, %c28_i64 : i64
    %44 = llvm.getelementptr %17[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c32_i32, %44 : i32, !llvm.ptr
    %c0_i32_12 = arith.constant 0 : i32
    llvm.store %c0_i32_12, %4 : i32, !llvm.ptr
    %45 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_13 = arith.constant 0 : i32
    %c40_i64 = arith.constant 40 : i64
    %46 = arith.extui %45 : i32 to i64
    %47 = arith.addi %46, %c40_i64 : i64
    %48 = llvm.getelementptr %17[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_13, %48 : i32, !llvm.ptr
    %49 = llvm.load %3 : !llvm.ptr -> i32
    %50 = llvm.load %1 : !llvm.ptr -> i32
    %c36_i64 = arith.constant 36 : i64
    %51 = arith.extui %49 : i32 to i64
    %52 = arith.addi %51, %c36_i64 : i64
    %53 = llvm.getelementptr %17[%52] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %50, %53 : i32, !llvm.ptr
    %54 = llvm.load %3 : !llvm.ptr -> i32
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %c32_i64 = arith.constant 32 : i64
    %56 = arith.extui %54 : i32 to i64
    %57 = arith.addi %56, %c32_i64 : i64
    %58 = llvm.getelementptr %17[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %55, %58 : i32, !llvm.ptr
    %59 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_14 = arith.constant 0 : i32
    %c20_i64 = arith.constant 20 : i64
    %60 = arith.extui %59 : i32 to i64
    %61 = arith.addi %60, %c20_i64 : i64
    %62 = llvm.getelementptr %17[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_14, %62 : i32, !llvm.ptr
    %63 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_15 = arith.constant 0 : i32
    %c12_i64 = arith.constant 12 : i64
    %64 = arith.extui %63 : i32 to i64
    %65 = arith.addi %64, %c12_i64 : i64
    %66 = llvm.getelementptr %17[%65] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c0_i32_15, %66 : i32, !llvm.ptr
    %67 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %68 = arith.extui %67 : i32 to i64
    %69 = arith.addi %68, %c16_i64 : i64
    %70 = llvm.getelementptr %17[%69] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %71 = llvm.load %70 : !llvm.ptr -> i32
    llvm.store %71, %5 : i32, !llvm.ptr
    %c0_i32_16 = arith.constant 0 : i32
    %72 = arith.cmpi ne, %71, %c0_i32_16 : i32
    cf.cond_br %72, ^bb7, ^bb8
  ^bb2(%73: i32):  // pred: ^bb3
    return %73 : i32
  ^bb3:  // 2 preds: ^bb4, ^bb5
    %74 = llvm.load %3 : !llvm.ptr -> i32
    %c48_i32_17 = arith.constant 48 : i32
    %75 = arith.addi %74, %c48_i32_17 : i32
    llvm.store %75, %14 : i32, !llvm.ptr
    %76 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb2(%76 : i32)
  ^bb4:  // 2 preds: ^bb6, ^bb72
    %c0_i32_18 = arith.constant 0 : i32
    llvm.store %c0_i32_18, %1 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // 5 preds: ^bb20, ^bb29, ^bb44, ^bb61, ^bb74
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %1 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb6:  // 4 preds: ^bb7, ^bb8, ^bb32, ^bb34
    %77 = llvm.load %4 : !llvm.ptr -> i32
    %78 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %79 = arith.extui %78 : i32 to i64
    %80 = arith.addi %79, %c4_i64 : i64
    %81 = llvm.getelementptr %17[%80] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %82 = llvm.load %81 : !llvm.ptr -> i32
    %83 = arith.cmpi uge, %77, %82 : i32
    %84 = arith.extui %83 : i1 to i32
    %c0_i32_19 = arith.constant 0 : i32
    %85 = arith.cmpi ne, %84, %c0_i32_19 : i32
    cf.cond_br %85, ^bb4, ^bb65
  ^bb7:  // 2 preds: ^bb1, ^bb10
    %86 = llvm.load %2 : !llvm.ptr -> i32
    %c20_i64_20 = arith.constant 20 : i64
    %87 = arith.extui %86 : i32 to i64
    %88 = arith.addi %87, %c20_i64_20 : i64
    %89 = llvm.getelementptr %17[%88] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %90 = llvm.load %89 : !llvm.ptr -> i32
    llvm.store %90, %1 : i32, !llvm.ptr
    %c0_i32_21 = arith.constant 0 : i32
    %91 = arith.cmpi eq, %90, %c0_i32_21 : i32
    %92 = arith.extui %91 : i1 to i32
    %c0_i32_22 = arith.constant 0 : i32
    %93 = arith.cmpi ne, %92, %c0_i32_22 : i32
    cf.cond_br %93, ^bb6, ^bb33
  ^bb8:  // pred: ^bb1
    %94 = llvm.load %2 : !llvm.ptr -> i32
    %c12_i64_23 = arith.constant 12 : i64
    %95 = arith.extui %94 : i32 to i64
    %96 = arith.addi %95, %c12_i64_23 : i64
    %97 = llvm.getelementptr %17[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %98 = llvm.load %97 : !llvm.ptr -> i32
    llvm.store %98, %0 : i32, !llvm.ptr
    %c0_i32_24 = arith.constant 0 : i32
    %99 = arith.cmpi eq, %98, %c0_i32_24 : i32
    %100 = arith.extui %99 : i1 to i32
    %c0_i32_25 = arith.constant 0 : i32
    %101 = arith.cmpi ne, %100, %c0_i32_25 : i32
    cf.cond_br %101, ^bb6, ^bb9
  ^bb9:  // pred: ^bb8
    %102 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %103 = arith.extui %102 : i32 to i64
    %104 = arith.addi %103, %c8_i64 : i64
    %105 = llvm.getelementptr %17[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %106 = llvm.load %105 : !llvm.ptr -> i32
    llvm.store %106, %1 : i32, !llvm.ptr
    %107 = llvm.load %0 : !llvm.ptr -> i32
    %c3_i32_26 = arith.constant 3 : i32
    %c31_i32 = arith.constant 31 : i32
    %108 = arith.cmpi ule, %c3_i32_26, %c31_i32 : i32
    %109 = scf.if %108 -> (i32) {
      %466 = arith.shli %107, %c3_i32_26 : i32
      scf.yield %466 : i32
    } else {
      %c0_i32_138 = arith.constant 0 : i32
      scf.yield %c0_i32_138 : i32
    }
    llvm.store %109, %6 : i32, !llvm.ptr
    %110 = llvm.load %0 : !llvm.ptr -> i32
    %c-1_i32 = arith.constant -1 : i32
    %111 = arith.addi %110, %c-1_i32 : i32
    %c536870911_i32 = arith.constant 536870911 : i32
    %112 = arith.andi %111, %c536870911_i32 : i32
    %c1_i32_27 = arith.constant 1 : i32
    %113 = arith.addi %112, %c1_i32_27 : i32
    llvm.store %113, %4 : i32, !llvm.ptr
    %114 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %115 = arith.extui %114 : i32 to i64
    %116 = arith.addi %115, %c0_i64 : i64
    %117 = llvm.getelementptr %17[%116] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %118 = llvm.load %117 : !llvm.ptr -> i32
    llvm.store %118, %0 : i32, !llvm.ptr
    cf.br ^bb11
  ^bb10:  // no predecessors
    cf.br ^bb7
  ^bb11:  // 2 preds: ^bb9, ^bb31
    %119 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %120 = arith.addi %119, %c4_i32 : i32
    %c0_i64_28 = arith.constant 0 : i64
    %121 = arith.extui %120 : i32 to i64
    %122 = arith.addi %121, %c0_i64_28 : i64
    %123 = llvm.getelementptr %17[%122] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %124 = llvm.load %123 : !llvm.ptr -> i32
    llvm.store %124, %7 : i32, !llvm.ptr
    %c0_i32_29 = arith.constant 0 : i32
    %125 = arith.cmpi eq, %124, %c0_i32_29 : i32
    %126 = arith.extui %125 : i1 to i32
    %c0_i32_30 = arith.constant 0 : i32
    %127 = arith.cmpi ne, %126, %c0_i32_30 : i32
    cf.cond_br %127, ^bb12, ^bb13
  ^bb12:  // 2 preds: ^bb11, ^bb22
    %128 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_31 = arith.constant 0 : i64
    %129 = arith.extui %128 : i32 to i64
    %130 = arith.addi %129, %c0_i64_31 : i64
    %131 = llvm.getelementptr %17[%130] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %132 = llvm.load %131 : !llvm.ptr -> i32
    %133 = llvm.load %3 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %134 = arith.addi %133, %c12_i32 : i32
    %135 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_32 = arith.constant 4 : i64
    %136 = arith.extui %135 : i32 to i64
    %137 = arith.addi %136, %c4_i64_32 : i64
    %138 = llvm.getelementptr %17[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %139 = llvm.load %138 : !llvm.ptr -> i32
    %140 = arith.cmpi ult, %139, %27 : i32
    cf.cond_br %140, ^bb23, ^bb24
  ^bb13:  // pred: ^bb11
    %141 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i64_33 = arith.constant 32 : i64
    %142 = arith.extui %141 : i32 to i64
    %143 = arith.addi %142, %c32_i64_33 : i64
    %144 = llvm.getelementptr %17[%143] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %145 = llvm.load %144 : !llvm.ptr -> i32
    %146 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_34 = arith.constant 0 : i64
    %147 = arith.extui %146 : i32 to i64
    %148 = arith.addi %147, %c0_i64_34 : i64
    %149 = llvm.getelementptr %17[%148] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %150 = llvm.load %149 : !llvm.ptr -> i32
    %151 = llvm.load %7 : !llvm.ptr -> i32
    %152 = llvm.load %3 : !llvm.ptr -> i32
    %c36_i64_35 = arith.constant 36 : i64
    %153 = arith.extui %152 : i32 to i64
    %154 = arith.addi %153, %c36_i64_35 : i64
    %155 = llvm.getelementptr %17[%154] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %156 = llvm.load %155 : !llvm.ptr -> i32
    %c12_i64_36 = arith.constant 12 : i64
    %157 = arith.extui %156 : i32 to i64
    %158 = arith.addi %157, %c12_i64_36 : i64
    %159 = llvm.getelementptr %17[%158] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %160 = llvm.load %159 : !llvm.ptr -> i32
    %161 = arith.cmpi ult, %160, %23 : i32
    cf.cond_br %161, ^bb14, ^bb15
  ^bb14:  // 2 preds: ^bb13, ^bb15
    %162 = llvm.getelementptr %22[%160] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %163 = llvm.load %162 : !llvm.ptr -> !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> i32
    %c0_i32_37 = arith.constant 0 : i32
    %165 = arith.cmpi eq, %164, %c0_i32_37 : i32
    cf.cond_br %165, ^bb17, ^bb16
  ^bb15:  // pred: ^bb13
    %c3_i32_38 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_38) : (i32) -> ()
    cf.br ^bb14
  ^bb16:  // 2 preds: ^bb14, ^bb17
    %166 = llvm.getelementptr %163[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %167 = llvm.getelementptr %163[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %168 = llvm.getelementptr %163[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %169 = llvm.load %166 : !llvm.ptr -> !llvm.ptr
    %170 = llvm.load %168 : !llvm.ptr -> !llvm.ptr
    %171 = llvm.load %169 : !llvm.ptr -> i32
    %c0_i32_39 = arith.constant 0 : i32
    %172 = arith.cmpi eq, %171, %c0_i32_39 : i32
    cf.cond_br %172, ^bb19, ^bb18
  ^bb17:  // pred: ^bb14
    %c4_i32_40 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_40) : (i32) -> ()
    cf.br ^bb16
  ^bb18:  // 2 preds: ^bb16, ^bb19
    %173 = llvm.load %167 : !llvm.ptr -> i32
    %174 = arith.cmpi ne, %19, %173 : i32
    cf.cond_br %174, ^bb21, ^bb20
  ^bb19:  // pred: ^bb16
    %c3_i32_41 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_41) : (i32) -> ()
    cf.br ^bb18
  ^bb20:  // 2 preds: ^bb18, ^bb21
    %175 = llvm.call %169(%170, %145, %150, %151) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    %c0_i32_42 = arith.constant 0 : i32
    %176 = arith.cmpi ne, %175, %c0_i32_42 : i32
    cf.cond_br %176, ^bb5, ^bb22
  ^bb21:  // pred: ^bb18
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb20
  ^bb22:  // pred: ^bb20
    cf.br ^bb12
  ^bb23:  // 2 preds: ^bb12, ^bb24
    %177 = llvm.getelementptr %26[%139] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %178 = llvm.load %177 : !llvm.ptr -> !llvm.ptr
    %179 = llvm.load %178 : !llvm.ptr -> i32
    %c0_i32_43 = arith.constant 0 : i32
    %180 = arith.cmpi eq, %179, %c0_i32_43 : i32
    cf.cond_br %180, ^bb26, ^bb25
  ^bb24:  // pred: ^bb12
    %c3_i32_44 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_44) : (i32) -> ()
    cf.br ^bb23
  ^bb25:  // 2 preds: ^bb23, ^bb26
    %181 = llvm.getelementptr %178[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %182 = llvm.getelementptr %178[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %183 = llvm.getelementptr %178[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %184 = llvm.load %181 : !llvm.ptr -> !llvm.ptr
    %185 = llvm.load %183 : !llvm.ptr -> !llvm.ptr
    %186 = llvm.load %184 : !llvm.ptr -> i32
    %c0_i32_45 = arith.constant 0 : i32
    %187 = arith.cmpi eq, %186, %c0_i32_45 : i32
    cf.cond_br %187, ^bb28, ^bb27
  ^bb26:  // pred: ^bb23
    %c4_i32_46 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_46) : (i32) -> ()
    cf.br ^bb25
  ^bb27:  // 2 preds: ^bb25, ^bb28
    %188 = llvm.load %182 : !llvm.ptr -> i32
    %189 = arith.cmpi ne, %25, %188 : i32
    cf.cond_br %189, ^bb30, ^bb29
  ^bb28:  // pred: ^bb25
    %c3_i32_47 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_47) : (i32) -> ()
    cf.br ^bb27
  ^bb29:  // 2 preds: ^bb27, ^bb30
    %190 = llvm.call %184(%185, %132, %134) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> i32
    %c0_i32_48 = arith.constant 0 : i32
    %191 = arith.cmpi ne, %190, %c0_i32_48 : i32
    cf.cond_br %191, ^bb5, ^bb31
  ^bb30:  // pred: ^bb27
    %c5_i32_49 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_49) : (i32) -> ()
    cf.br ^bb29
  ^bb31:  // pred: ^bb29
    %192 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %193 = arith.addi %192, %c8_i32 : i32
    llvm.store %193, %1 : i32, !llvm.ptr
    %194 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_50 = arith.constant 8 : i32
    %195 = arith.addi %194, %c8_i32_50 : i32
    llvm.store %195, %0 : i32, !llvm.ptr
    %196 = llvm.load %6 : !llvm.ptr -> i32
    %c-8_i32 = arith.constant -8 : i32
    %197 = arith.addi %196, %c-8_i32 : i32
    llvm.store %197, %6 : i32, !llvm.ptr
    %c0_i32_51 = arith.constant 0 : i32
    %198 = arith.cmpi ne, %197, %c0_i32_51 : i32
    cf.cond_br %198, ^bb11, ^bb32
  ^bb32:  // pred: ^bb31
    cf.br ^bb6
  ^bb33:  // pred: ^bb7
    %199 = llvm.load %1 : !llvm.ptr -> i32
    %c5_i32_52 = arith.constant 5 : i32
    %c31_i32_53 = arith.constant 31 : i32
    %200 = arith.cmpi ule, %c5_i32_52, %c31_i32_53 : i32
    %201 = scf.if %200 -> (i32) {
      %466 = arith.shli %199, %c5_i32_52 : i32
      scf.yield %466 : i32
    } else {
      %c0_i32_138 = arith.constant 0 : i32
      scf.yield %c0_i32_138 : i32
    }
    llvm.store %201, %8 : i32, !llvm.ptr
    %202 = llvm.load %1 : !llvm.ptr -> i32
    %c-1_i32_54 = arith.constant -1 : i32
    %203 = arith.addi %202, %c-1_i32_54 : i32
    %c134217727_i32 = arith.constant 134217727 : i32
    %204 = arith.andi %203, %c134217727_i32 : i32
    %c1_i32_55 = arith.constant 1 : i32
    %205 = arith.addi %204, %c1_i32_55 : i32
    llvm.store %205, %4 : i32, !llvm.ptr
    %206 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_56 = arith.constant 8 : i64
    %207 = arith.extui %206 : i32 to i64
    %208 = arith.addi %207, %c8_i64_56 : i64
    %209 = llvm.getelementptr %17[%208] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %210 = llvm.load %209 : !llvm.ptr -> i32
    llvm.store %210, %9 : i32, !llvm.ptr
    %211 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_57 = arith.constant 0 : i64
    %212 = arith.extui %211 : i32 to i64
    %213 = arith.addi %212, %c0_i64_57 : i64
    %214 = llvm.getelementptr %17[%213] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %215 = llvm.load %214 : !llvm.ptr -> i32
    llvm.store %215, %0 : i32, !llvm.ptr
    %c0_i32_58 = arith.constant 0 : i32
    llvm.store %c0_i32_58, %6 : i32, !llvm.ptr
    cf.br ^bb35
  ^bb34:  // pred: ^bb64
    cf.br ^bb6
  ^bb35:  // 2 preds: ^bb33, ^bb63
    %216 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i32_59 = arith.constant 4 : i32
    %217 = arith.addi %216, %c4_i32_59 : i32
    %c0_i64_60 = arith.constant 0 : i64
    %218 = arith.extui %217 : i32 to i64
    %219 = arith.addi %218, %c0_i64_60 : i64
    %220 = llvm.getelementptr %17[%219] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %221 = llvm.load %220 : !llvm.ptr -> i32
    llvm.store %221, %1 : i32, !llvm.ptr
    %c0_i32_61 = arith.constant 0 : i32
    %222 = arith.cmpi eq, %221, %c0_i32_61 : i32
    %223 = arith.extui %222 : i1 to i32
    %c0_i32_62 = arith.constant 0 : i32
    %224 = arith.cmpi ne, %223, %c0_i32_62 : i32
    cf.cond_br %224, ^bb36, ^bb37
  ^bb36:  // 2 preds: ^bb35, ^bb46
    %225 = llvm.load %3 : !llvm.ptr -> i32
    %226 = llvm.load %5 : !llvm.ptr -> i32
    %227 = llvm.load %6 : !llvm.ptr -> i32
    %228 = arith.addi %226, %227 : i32
    llvm.store %228, %1 : i32, !llvm.ptr
    %c16_i32 = arith.constant 16 : i32
    %229 = arith.addi %228, %c16_i32 : i32
    %c0_i64_63 = arith.constant 0 : i64
    %230 = arith.extui %229 : i32 to i64
    %231 = arith.addi %230, %c0_i64_63 : i64
    %232 = llvm.getelementptr %17[%231] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %233 = llvm.load %232 : !llvm.ptr -> i32
    %c28_i64_64 = arith.constant 28 : i64
    %234 = arith.extui %225 : i32 to i64
    %235 = arith.addi %234, %c28_i64_64 : i64
    %236 = llvm.getelementptr %17[%235] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %233, %236 : i32, !llvm.ptr
    %237 = llvm.load %3 : !llvm.ptr -> i32
    %238 = llvm.load %1 : !llvm.ptr -> i32
    %c28_i32 = arith.constant 28 : i32
    %239 = arith.addi %238, %c28_i32 : i32
    %c0_i64_65 = arith.constant 0 : i64
    %240 = arith.extui %239 : i32 to i64
    %241 = arith.addi %240, %c0_i64_65 : i64
    %242 = llvm.getelementptr %17[%241] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %243 = llvm.load %242 : !llvm.ptr -> i8
    %244 = arith.extui %243 : i8 to i32
    %c44_i64_66 = arith.constant 44 : i64
    %245 = arith.extui %237 : i32 to i64
    %246 = arith.addi %245, %c44_i64_66 : i64
    %247 = llvm.getelementptr %17[%246] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %248 = arith.trunci %244 : i32 to i8
    llvm.store %248, %247 : i8, !llvm.ptr
    %249 = llvm.load %3 : !llvm.ptr -> i32
    %250 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %251 = arith.addi %250, %c24_i32 : i32
    %c0_i64_67 = arith.constant 0 : i64
    %252 = arith.extui %251 : i32 to i64
    %253 = arith.addi %252, %c0_i64_67 : i64
    %254 = llvm.getelementptr %17[%253] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %255 = llvm.load %254 : !llvm.ptr -> i32
    %c40_i64_68 = arith.constant 40 : i64
    %256 = arith.extui %249 : i32 to i64
    %257 = arith.addi %256, %c40_i64_68 : i64
    %258 = llvm.getelementptr %17[%257] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %255, %258 : i32, !llvm.ptr
    %259 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i32_69 = arith.constant 12 : i32
    %260 = arith.addi %259, %c12_i32_69 : i32
    %c0_i64_70 = arith.constant 0 : i64
    %261 = arith.extui %260 : i32 to i64
    %262 = arith.addi %261, %c0_i64_70 : i64
    %263 = llvm.getelementptr %17[%262] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %264 = llvm.load %263 : !llvm.ptr -> i32
    llvm.store %264, %7 : i32, !llvm.ptr
    %c0_i32_71 = arith.constant 0 : i32
    llvm.store %c0_i32_71, %10 : i32, !llvm.ptr
    %c0_i32_72 = arith.constant 0 : i32
    llvm.store %c0_i32_72, %11 : i32, !llvm.ptr
    %265 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_73 = arith.constant 8 : i32
    %266 = arith.addi %265, %c8_i32_73 : i32
    %c0_i64_74 = arith.constant 0 : i64
    %267 = arith.extui %266 : i32 to i64
    %268 = arith.addi %267, %c0_i64_74 : i64
    %269 = llvm.getelementptr %17[%268] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %270 = llvm.load %269 : !llvm.ptr -> i32
    cf.switch %270 : i32, [
      default: ^bb48,
      0: ^bb48,
      1: ^bb49,
      2: ^bb47
    ]
  ^bb37:  // pred: ^bb35
    %271 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i64_75 = arith.constant 32 : i64
    %272 = arith.extui %271 : i32 to i64
    %273 = arith.addi %272, %c32_i64_75 : i64
    %274 = llvm.getelementptr %17[%273] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %275 = llvm.load %274 : !llvm.ptr -> i32
    %276 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_76 = arith.constant 0 : i64
    %277 = arith.extui %276 : i32 to i64
    %278 = arith.addi %277, %c0_i64_76 : i64
    %279 = llvm.getelementptr %17[%278] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %280 = llvm.load %279 : !llvm.ptr -> i32
    %281 = llvm.load %1 : !llvm.ptr -> i32
    %282 = llvm.load %3 : !llvm.ptr -> i32
    %c36_i64_77 = arith.constant 36 : i64
    %283 = arith.extui %282 : i32 to i64
    %284 = arith.addi %283, %c36_i64_77 : i64
    %285 = llvm.getelementptr %17[%284] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %286 = llvm.load %285 : !llvm.ptr -> i32
    %c12_i64_78 = arith.constant 12 : i64
    %287 = arith.extui %286 : i32 to i64
    %288 = arith.addi %287, %c12_i64_78 : i64
    %289 = llvm.getelementptr %17[%288] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %290 = llvm.load %289 : !llvm.ptr -> i32
    %291 = arith.cmpi ult, %290, %29 : i32
    cf.cond_br %291, ^bb38, ^bb39
  ^bb38:  // 2 preds: ^bb37, ^bb39
    %292 = llvm.getelementptr %28[%290] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %293 = llvm.load %292 : !llvm.ptr -> !llvm.ptr
    %294 = llvm.load %293 : !llvm.ptr -> i32
    %c0_i32_79 = arith.constant 0 : i32
    %295 = arith.cmpi eq, %294, %c0_i32_79 : i32
    cf.cond_br %295, ^bb41, ^bb40
  ^bb39:  // pred: ^bb37
    %c3_i32_80 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_80) : (i32) -> ()
    cf.br ^bb38
  ^bb40:  // 2 preds: ^bb38, ^bb41
    %296 = llvm.getelementptr %293[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %297 = llvm.getelementptr %293[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %298 = llvm.getelementptr %293[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %299 = llvm.load %296 : !llvm.ptr -> !llvm.ptr
    %300 = llvm.load %298 : !llvm.ptr -> !llvm.ptr
    %301 = llvm.load %299 : !llvm.ptr -> i32
    %c0_i32_81 = arith.constant 0 : i32
    %302 = arith.cmpi eq, %301, %c0_i32_81 : i32
    cf.cond_br %302, ^bb43, ^bb42
  ^bb41:  // pred: ^bb38
    %c4_i32_82 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_82) : (i32) -> ()
    cf.br ^bb40
  ^bb42:  // 2 preds: ^bb40, ^bb43
    %303 = llvm.load %297 : !llvm.ptr -> i32
    %304 = arith.cmpi ne, %19, %303 : i32
    cf.cond_br %304, ^bb45, ^bb44
  ^bb43:  // pred: ^bb40
    %c3_i32_83 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_83) : (i32) -> ()
    cf.br ^bb42
  ^bb44:  // 2 preds: ^bb42, ^bb45
    %305 = llvm.call %299(%300, %275, %280, %281) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    %c0_i32_84 = arith.constant 0 : i32
    %306 = arith.cmpi ne, %305, %c0_i32_84 : i32
    cf.cond_br %306, ^bb5, ^bb46
  ^bb45:  // pred: ^bb42
    %c5_i32_85 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_85) : (i32) -> ()
    cf.br ^bb44
  ^bb46:  // pred: ^bb44
    cf.br ^bb36
  ^bb47:  // 3 preds: ^bb36, ^bb48, ^bb49
    %307 = llvm.load %3 : !llvm.ptr -> i32
    %308 = llvm.load %7 : !llvm.ptr -> i32
    %c16_i64_86 = arith.constant 16 : i64
    %309 = arith.extui %307 : i32 to i64
    %310 = arith.addi %309, %c16_i64_86 : i64
    %311 = llvm.getelementptr %17[%310] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %308, %311 : i32, !llvm.ptr
    %312 = llvm.load %3 : !llvm.ptr -> i32
    %313 = llvm.load %11 : !llvm.ptr -> i32
    %c12_i64_87 = arith.constant 12 : i64
    %314 = arith.extui %312 : i32 to i64
    %315 = arith.addi %314, %c12_i64_87 : i64
    %316 = llvm.getelementptr %17[%315] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %313, %316 : i32, !llvm.ptr
    %317 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i32_88 = arith.constant 4 : i32
    %318 = arith.addi %317, %c4_i32_88 : i32
    %c0_i64_89 = arith.constant 0 : i64
    %319 = arith.extui %318 : i32 to i64
    %320 = arith.addi %319, %c0_i64_89 : i64
    %321 = llvm.getelementptr %17[%320] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %322 = llvm.load %321 : !llvm.ptr -> i32
    llvm.store %322, %7 : i32, !llvm.ptr
    %323 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_90 = arith.constant 0 : i64
    %324 = arith.extui %323 : i32 to i64
    %325 = arith.addi %324, %c0_i64_90 : i64
    %326 = llvm.getelementptr %17[%325] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %327 = llvm.load %326 : !llvm.ptr -> i32
    cf.switch %327 : i32, [
      default: ^bb52,
      0: ^bb52,
      1: ^bb53,
      2: ^bb51
    ]
  ^bb48:  // 3 preds: ^bb36, ^bb36, ^bb50
    %c1_i32_91 = arith.constant 1 : i32
    llvm.store %c1_i32_91, %11 : i32, !llvm.ptr
    cf.br ^bb47
  ^bb49:  // pred: ^bb36
    %328 = llvm.load %7 : !llvm.ptr -> i32
    %c3_i32_92 = arith.constant 3 : i32
    %c31_i32_93 = arith.constant 31 : i32
    %329 = arith.cmpi ule, %c3_i32_92, %c31_i32_93 : i32
    %330 = scf.if %329 -> (i32) {
      %466 = arith.shli %328, %c3_i32_92 : i32
      scf.yield %466 : i32
    } else {
      %c0_i32_138 = arith.constant 0 : i32
      scf.yield %c0_i32_138 : i32
    }
    llvm.store %330, %12 : i32, !llvm.ptr
    %c0_i32_94 = arith.constant 0 : i32
    llvm.store %c0_i32_94, %11 : i32, !llvm.ptr
    %331 = llvm.load %9 : !llvm.ptr -> i32
    %332 = llvm.load %12 : !llvm.ptr -> i32
    %333 = arith.addi %331, %332 : i32
    llvm.store %333, %12 : i32, !llvm.ptr
    %c4_i64_95 = arith.constant 4 : i64
    %334 = arith.extui %333 : i32 to i64
    %335 = arith.addi %334, %c4_i64_95 : i64
    %336 = llvm.getelementptr %17[%335] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %337 = llvm.load %336 : !llvm.ptr -> i32
    %c0_i32_96 = arith.constant 0 : i32
    %338 = arith.cmpi ne, %337, %c0_i32_96 : i32
    cf.cond_br %338, ^bb47, ^bb50
  ^bb50:  // pred: ^bb49
    %339 = llvm.load %12 : !llvm.ptr -> i32
    %c0_i64_97 = arith.constant 0 : i64
    %340 = arith.extui %339 : i32 to i64
    %341 = arith.addi %340, %c0_i64_97 : i64
    %342 = llvm.getelementptr %17[%341] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %343 = llvm.load %342 : !llvm.ptr -> i32
    llvm.store %343, %7 : i32, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // 3 preds: ^bb47, ^bb52, ^bb53
    %344 = llvm.load %3 : !llvm.ptr -> i32
    %345 = llvm.load %7 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %346 = arith.extui %344 : i32 to i64
    %347 = arith.addi %346, %c24_i64 : i64
    %348 = llvm.getelementptr %17[%347] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %345, %348 : i32, !llvm.ptr
    %349 = llvm.load %3 : !llvm.ptr -> i32
    %350 = llvm.load %10 : !llvm.ptr -> i32
    %c20_i64_98 = arith.constant 20 : i64
    %351 = arith.extui %349 : i32 to i64
    %352 = arith.addi %351, %c20_i64_98 : i64
    %353 = llvm.getelementptr %17[%352] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %350, %353 : i32, !llvm.ptr
    %354 = llvm.load %9 : !llvm.ptr -> i32
    %355 = llvm.load %1 : !llvm.ptr -> i32
    %c20_i32 = arith.constant 20 : i32
    %356 = arith.addi %355, %c20_i32 : i32
    %c0_i64_99 = arith.constant 0 : i64
    %357 = arith.extui %356 : i32 to i64
    %358 = arith.addi %357, %c0_i64_99 : i64
    %359 = llvm.getelementptr %17[%358] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %360 = llvm.load %359 : !llvm.ptr -> i32
    %c3_i32_100 = arith.constant 3 : i32
    %c31_i32_101 = arith.constant 31 : i32
    %361 = arith.cmpi ule, %c3_i32_100, %c31_i32_101 : i32
    %362 = scf.if %361 -> (i32) {
      %466 = arith.shli %360, %c3_i32_100 : i32
      scf.yield %466 : i32
    } else {
      %c0_i32_138 = arith.constant 0 : i32
      scf.yield %c0_i32_138 : i32
    }
    %363 = arith.addi %354, %362 : i32
    llvm.store %363, %1 : i32, !llvm.ptr
    %c0_i64_102 = arith.constant 0 : i64
    %364 = arith.extui %363 : i32 to i64
    %365 = arith.addi %364, %c0_i64_102 : i64
    %366 = llvm.getelementptr %17[%365] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %367 = llvm.load %366 : !llvm.ptr -> i32
    %368 = llvm.load %3 : !llvm.ptr -> i32
    %c12_i32_103 = arith.constant 12 : i32
    %369 = arith.addi %368, %c12_i32_103 : i32
    %370 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_104 = arith.constant 4 : i64
    %371 = arith.extui %370 : i32 to i64
    %372 = arith.addi %371, %c4_i64_104 : i64
    %373 = llvm.getelementptr %17[%372] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %374 = llvm.load %373 : !llvm.ptr -> i32
    %375 = arith.cmpi ult, %374, %31 : i32
    cf.cond_br %375, ^bb55, ^bb56
  ^bb52:  // 3 preds: ^bb47, ^bb47, ^bb54
    %c1_i32_105 = arith.constant 1 : i32
    llvm.store %c1_i32_105, %10 : i32, !llvm.ptr
    cf.br ^bb51
  ^bb53:  // pred: ^bb47
    %376 = llvm.load %7 : !llvm.ptr -> i32
    %c3_i32_106 = arith.constant 3 : i32
    %c31_i32_107 = arith.constant 31 : i32
    %377 = arith.cmpi ule, %c3_i32_106, %c31_i32_107 : i32
    %378 = scf.if %377 -> (i32) {
      %466 = arith.shli %376, %c3_i32_106 : i32
      scf.yield %466 : i32
    } else {
      %c0_i32_138 = arith.constant 0 : i32
      scf.yield %c0_i32_138 : i32
    }
    llvm.store %378, %11 : i32, !llvm.ptr
    %379 = llvm.load %9 : !llvm.ptr -> i32
    %380 = llvm.load %11 : !llvm.ptr -> i32
    %381 = arith.addi %379, %380 : i32
    llvm.store %381, %11 : i32, !llvm.ptr
    %c4_i64_108 = arith.constant 4 : i64
    %382 = arith.extui %381 : i32 to i64
    %383 = arith.addi %382, %c4_i64_108 : i64
    %384 = llvm.getelementptr %17[%383] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %385 = llvm.load %384 : !llvm.ptr -> i32
    %c0_i32_109 = arith.constant 0 : i32
    %386 = arith.cmpi ne, %385, %c0_i32_109 : i32
    cf.cond_br %386, ^bb51, ^bb54
  ^bb54:  // pred: ^bb53
    %387 = llvm.load %11 : !llvm.ptr -> i32
    %c0_i64_110 = arith.constant 0 : i64
    %388 = arith.extui %387 : i32 to i64
    %389 = arith.addi %388, %c0_i64_110 : i64
    %390 = llvm.getelementptr %17[%389] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %391 = llvm.load %390 : !llvm.ptr -> i32
    llvm.store %391, %7 : i32, !llvm.ptr
    cf.br ^bb52
  ^bb55:  // 2 preds: ^bb51, ^bb56
    %392 = llvm.getelementptr %30[%374] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %393 = llvm.load %392 : !llvm.ptr -> !llvm.ptr
    %394 = llvm.load %393 : !llvm.ptr -> i32
    %c0_i32_111 = arith.constant 0 : i32
    %395 = arith.cmpi eq, %394, %c0_i32_111 : i32
    cf.cond_br %395, ^bb58, ^bb57
  ^bb56:  // pred: ^bb51
    %c3_i32_112 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_112) : (i32) -> ()
    cf.br ^bb55
  ^bb57:  // 2 preds: ^bb55, ^bb58
    %396 = llvm.getelementptr %393[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %397 = llvm.getelementptr %393[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %398 = llvm.getelementptr %393[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %399 = llvm.load %396 : !llvm.ptr -> !llvm.ptr
    %400 = llvm.load %398 : !llvm.ptr -> !llvm.ptr
    %401 = llvm.load %399 : !llvm.ptr -> i32
    %c0_i32_113 = arith.constant 0 : i32
    %402 = arith.cmpi eq, %401, %c0_i32_113 : i32
    cf.cond_br %402, ^bb60, ^bb59
  ^bb58:  // pred: ^bb55
    %c4_i32_114 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_114) : (i32) -> ()
    cf.br ^bb57
  ^bb59:  // 2 preds: ^bb57, ^bb60
    %403 = llvm.load %397 : !llvm.ptr -> i32
    %404 = arith.cmpi ne, %25, %403 : i32
    cf.cond_br %404, ^bb62, ^bb61
  ^bb60:  // pred: ^bb57
    %c3_i32_115 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_115) : (i32) -> ()
    cf.br ^bb59
  ^bb61:  // 2 preds: ^bb59, ^bb62
    %405 = llvm.call %399(%400, %367, %369) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> i32
    %c0_i32_116 = arith.constant 0 : i32
    %406 = arith.cmpi ne, %405, %c0_i32_116 : i32
    cf.cond_br %406, ^bb5, ^bb63
  ^bb62:  // pred: ^bb59
    %c5_i32_117 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_117) : (i32) -> ()
    cf.br ^bb61
  ^bb63:  // pred: ^bb61
    %407 = llvm.load %0 : !llvm.ptr -> i32
    %c8_i32_118 = arith.constant 8 : i32
    %408 = arith.addi %407, %c8_i32_118 : i32
    llvm.store %408, %0 : i32, !llvm.ptr
    %409 = llvm.load %8 : !llvm.ptr -> i32
    %410 = llvm.load %6 : !llvm.ptr -> i32
    %c32_i32_119 = arith.constant 32 : i32
    %411 = arith.addi %410, %c32_i32_119 : i32
    llvm.store %411, %6 : i32, !llvm.ptr
    %412 = arith.cmpi eq, %409, %411 : i32
    %413 = arith.extui %412 : i1 to i32
    %c-1_i32_120 = arith.constant -1 : i32
    %414 = arith.xori %413, %c-1_i32_120 : i32
    %c0_i32_121 = arith.constant 0 : i32
    %415 = arith.cmpi ne, %414, %c0_i32_121 : i32
    cf.cond_br %415, ^bb35, ^bb64
  ^bb64:  // pred: ^bb63
    cf.br ^bb34
  ^bb65:  // pred: ^bb6
    %416 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i64_122 = arith.constant 32 : i64
    %417 = arith.extui %416 : i32 to i64
    %418 = arith.addi %417, %c32_i64_122 : i64
    %419 = llvm.getelementptr %17[%418] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %420 = llvm.load %419 : !llvm.ptr -> i32
    %421 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_123 = arith.constant 0 : i64
    %422 = arith.extui %421 : i32 to i64
    %423 = arith.addi %422, %c0_i64_123 : i64
    %424 = llvm.getelementptr %17[%423] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %425 = llvm.load %424 : !llvm.ptr -> i32
    %426 = llvm.load %4 : !llvm.ptr -> i32
    %c3_i32_124 = arith.constant 3 : i32
    %c31_i32_125 = arith.constant 31 : i32
    %427 = arith.cmpi ule, %c3_i32_124, %c31_i32_125 : i32
    %428 = scf.if %427 -> (i32) {
      %466 = arith.shli %426, %c3_i32_124 : i32
      scf.yield %466 : i32
    } else {
      %c0_i32_138 = arith.constant 0 : i32
      scf.yield %c0_i32_138 : i32
    }
    %429 = arith.addi %425, %428 : i32
    llvm.store %429, %1 : i32, !llvm.ptr
    %c0_i64_126 = arith.constant 0 : i64
    %430 = arith.extui %429 : i32 to i64
    %431 = arith.addi %430, %c0_i64_126 : i64
    %432 = llvm.getelementptr %17[%431] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %433 = llvm.load %432 : !llvm.ptr -> i32
    %434 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64_127 = arith.constant 4 : i64
    %435 = arith.extui %434 : i32 to i64
    %436 = arith.addi %435, %c4_i64_127 : i64
    %437 = llvm.getelementptr %17[%436] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %438 = llvm.load %437 : !llvm.ptr -> i32
    %439 = llvm.load %3 : !llvm.ptr -> i32
    %c36_i64_128 = arith.constant 36 : i64
    %440 = arith.extui %439 : i32 to i64
    %441 = arith.addi %440, %c36_i64_128 : i64
    %442 = llvm.getelementptr %17[%441] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %443 = llvm.load %442 : !llvm.ptr -> i32
    %c12_i64_129 = arith.constant 12 : i64
    %444 = arith.extui %443 : i32 to i64
    %445 = arith.addi %444, %c12_i64_129 : i64
    %446 = llvm.getelementptr %17[%445] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %447 = llvm.load %446 : !llvm.ptr -> i32
    %448 = arith.cmpi ult, %447, %33 : i32
    cf.cond_br %448, ^bb66, ^bb67
  ^bb66:  // 2 preds: ^bb65, ^bb67
    %449 = llvm.getelementptr %32[%447] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %450 = llvm.load %449 : !llvm.ptr -> !llvm.ptr
    %451 = llvm.load %450 : !llvm.ptr -> i32
    %c0_i32_130 = arith.constant 0 : i32
    %452 = arith.cmpi eq, %451, %c0_i32_130 : i32
    cf.cond_br %452, ^bb69, ^bb68
  ^bb67:  // pred: ^bb65
    %c3_i32_131 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_131) : (i32) -> ()
    cf.br ^bb66
  ^bb68:  // 2 preds: ^bb66, ^bb69
    %453 = llvm.getelementptr %450[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %454 = llvm.getelementptr %450[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %455 = llvm.getelementptr %450[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %456 = llvm.load %453 : !llvm.ptr -> !llvm.ptr
    %457 = llvm.load %455 : !llvm.ptr -> !llvm.ptr
    %458 = llvm.load %456 : !llvm.ptr -> i32
    %c0_i32_132 = arith.constant 0 : i32
    %459 = arith.cmpi eq, %458, %c0_i32_132 : i32
    cf.cond_br %459, ^bb71, ^bb70
  ^bb69:  // pred: ^bb66
    %c4_i32_133 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_133) : (i32) -> ()
    cf.br ^bb68
  ^bb70:  // 2 preds: ^bb68, ^bb71
    %460 = llvm.load %454 : !llvm.ptr -> i32
    %461 = arith.cmpi ne, %19, %460 : i32
    cf.cond_br %461, ^bb73, ^bb72
  ^bb71:  // pred: ^bb68
    %c3_i32_134 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_134) : (i32) -> ()
    cf.br ^bb70
  ^bb72:  // 2 preds: ^bb70, ^bb73
    %462 = llvm.call %456(%457, %420, %433, %438) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    %c0_i32_135 = arith.constant 0 : i32
    %463 = arith.cmpi eq, %462, %c0_i32_135 : i32
    %464 = arith.extui %463 : i1 to i32
    %c0_i32_136 = arith.constant 0 : i32
    %465 = arith.cmpi ne, %464, %c0_i32_136 : i32
    cf.cond_br %465, ^bb4, ^bb74
  ^bb73:  // pred: ^bb70
    %c5_i32_137 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_137) : (i32) -> ()
    cf.br ^bb72
  ^bb74:  // pred: ^bb72
    cf.br ^bb5
  }
  func.func @f134(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.getelementptr %2[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.load %3 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %5 = llvm.load %1 : !llvm.ptr -> i32
    %6 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %7 = arith.extui %6 : i32 to i64
    %8 = arith.addi %7, %c0_i64 : i64
    %9 = llvm.getelementptr %4[%8] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> i32
    %11 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %12 = arith.extui %11 : i32 to i64
    %13 = arith.addi %12, %c4_i64 : i64
    %14 = llvm.getelementptr %4[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> i32
    %16 = call @f131(%arg0, %5, %10, %15) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%16 : i32)
  ^bb2(%17: i32):  // pred: ^bb1
    return %17 : i32
  }
  func.func @f135(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %1 : i32, !llvm.ptr
    %2 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    %4 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.getelementptr %4[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %7 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %8 = arith.subi %7, %c32_i32 : i32
    llvm.store %8, %1 : i32, !llvm.ptr
    llvm.store %8, %3 : i32, !llvm.ptr
    %9 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %c4_i64 = arith.constant 4 : i64
    %10 = arith.extui %9 : i32 to i64
    %11 = arith.addi %10, %c4_i64 : i64
    %12 = llvm.getelementptr %6[%11] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i32, %12 : i32, !llvm.ptr
    %13 = llvm.load %1 : !llvm.ptr -> i32
    %c1049972_i32 = arith.constant 1049972 : i32
    %c0_i64 = arith.constant 0 : i64
    %14 = arith.extui %13 : i32 to i64
    %15 = arith.addi %14, %c0_i64 : i64
    %16 = llvm.getelementptr %6[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1049972_i32, %16 : i32, !llvm.ptr
    %17 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i64_1 = arith.constant 1 : i64
    %c12_i64 = arith.constant 12 : i64
    %18 = arith.extui %17 : i32 to i64
    %19 = arith.addi %18, %c12_i64 : i64
    %20 = llvm.getelementptr %6[%19] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1_i64_1, %20 : i64, !llvm.ptr
    %21 = llvm.load %1 : !llvm.ptr -> i32
    %c59_i32 = arith.constant 59 : i32
    %22 = arith.extui %c59_i32 : i32 to i64
    %c32_i64 = arith.constant 32 : i64
    %c63_i64 = arith.constant 63 : i64
    %23 = arith.cmpi ule, %c32_i64, %c63_i64 : i64
    %24 = scf.if %23 -> (i64) {
      %38 = arith.shli %22, %c32_i64 : i64
      scf.yield %38 : i64
    } else {
      %c0_i64_2 = arith.constant 0 : i64
      scf.yield %c0_i64_2 : i64
    }
    %c1049996_i32 = arith.constant 1049996 : i32
    %25 = arith.extui %c1049996_i32 : i32 to i64
    %26 = arith.ori %24, %25 : i64
    %c24_i64 = arith.constant 24 : i64
    %27 = arith.extui %21 : i32 to i64
    %28 = arith.addi %27, %c24_i64 : i64
    %29 = llvm.getelementptr %6[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %26, %29 : i64, !llvm.ptr
    %30 = llvm.load %1 : !llvm.ptr -> i32
    %31 = llvm.load %1 : !llvm.ptr -> i32
    %c24_i32 = arith.constant 24 : i32
    %32 = arith.addi %31, %c24_i32 : i32
    %c8_i64 = arith.constant 8 : i64
    %33 = arith.extui %30 : i32 to i64
    %34 = arith.addi %33, %c8_i64 : i64
    %35 = llvm.getelementptr %6[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %32, %35 : i32, !llvm.ptr
    %36 = llvm.load %1 : !llvm.ptr -> i32
    %37 = llvm.load %0 : !llvm.ptr -> i32
    call @f128(%arg0, %36, %37) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f136(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg6, %5 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %c1_i64_7 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_7 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %8 : i32, !llvm.ptr
    %c1_i64_8 = arith.constant 1 : i64
    %9 = llvm.alloca %c1_i64_8 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %9 : i32, !llvm.ptr
    %c1_i64_9 = arith.constant 1 : i64
    %10 = llvm.alloca %c1_i64_9 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %10 : i32, !llvm.ptr
    %c1_i64_10 = arith.constant 1 : i64
    %11 = llvm.alloca %c1_i64_10 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %11 : i32, !llvm.ptr
    %c1_i64_11 = arith.constant 1 : i64
    %12 = llvm.alloca %c1_i64_11 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %12 : i32, !llvm.ptr
    %13 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %14 = llvm.getelementptr %13[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    %16 = llvm.getelementptr %arg0[12] : (!llvm.ptr) -> !llvm.ptr, i8
    %17 = llvm.load %16 : !llvm.ptr -> i32
    %18 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %19 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %20 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %21 = llvm.load %19 : !llvm.ptr -> i32
    %22 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %23 = llvm.load %19 : !llvm.ptr -> i32
    %24 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %25 = llvm.load %24 : !llvm.ptr -> i32
    %26 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %27 = llvm.load %19 : !llvm.ptr -> i32
    %28 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %29 = llvm.load %19 : !llvm.ptr -> i32
    %30 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %31 = llvm.load %19 : !llvm.ptr -> i32
    %32 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %33 = llvm.load %19 : !llvm.ptr -> i32
    %34 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %35 = llvm.load %19 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %36 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_12 = arith.constant 0 : i32
    %37 = arith.cmpi ne, %36, %c0_i32_12 : i32
    cf.cond_br %37, ^bb4, ^bb5
  ^bb2(%38: i32):  // 7 preds: ^bb24, ^bb34, ^bb45, ^bb51, ^bb76, ^bb98, ^bb101
    return %38 : i32
  ^bb3:  // 2 preds: ^bb4, ^bb5
    %39 = llvm.load %7 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %40 = arith.andi %39, %c4_i32 : i32
    %c0_i32_13 = arith.constant 0 : i32
    %41 = arith.cmpi ne, %40, %c0_i32_13 : i32
    cf.cond_br %41, ^bb7, ^bb8
  ^bb4:  // pred: ^bb1
    %c43_i32 = arith.constant 43 : i32
    %c1114112_i32 = arith.constant 1114112 : i32
    %42 = llvm.load %0 : !llvm.ptr -> i32
    %c28_i64 = arith.constant 28 : i64
    %43 = arith.extui %42 : i32 to i64
    %44 = arith.addi %43, %c28_i64 : i64
    %45 = llvm.getelementptr %15[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %46 = llvm.load %45 : !llvm.ptr -> i32
    llvm.store %46, %7 : i32, !llvm.ptr
    %c1_i32 = arith.constant 1 : i32
    %47 = arith.andi %46, %c1_i32 : i32
    llvm.store %47, %1 : i32, !llvm.ptr
    %c0_i32_14 = arith.constant 0 : i32
    %48 = arith.cmpi ne, %47, %c0_i32_14 : i32
    %49 = arith.select %48, %c43_i32, %c1114112_i32 : i32
    llvm.store %49, %8 : i32, !llvm.ptr
    %50 = llvm.load %1 : !llvm.ptr -> i32
    %51 = llvm.load %5 : !llvm.ptr -> i32
    %52 = arith.addi %50, %51 : i32
    llvm.store %52, %6 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb5:  // pred: ^bb1
    %53 = llvm.load %5 : !llvm.ptr -> i32
    %c1_i32_15 = arith.constant 1 : i32
    %54 = arith.addi %53, %c1_i32_15 : i32
    llvm.store %54, %6 : i32, !llvm.ptr
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %c28_i64_16 = arith.constant 28 : i64
    %56 = arith.extui %55 : i32 to i64
    %57 = arith.addi %56, %c28_i64_16 : i64
    %58 = llvm.getelementptr %15[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %59 = llvm.load %58 : !llvm.ptr -> i32
    llvm.store %59, %7 : i32, !llvm.ptr
    %c45_i32 = arith.constant 45 : i32
    llvm.store %c45_i32, %8 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb6:  // 2 preds: ^bb8, ^bb9
    %60 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %61 = arith.extui %60 : i32 to i64
    %62 = arith.addi %61, %c0_i64 : i64
    %63 = llvm.getelementptr %15[%62] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %64 = llvm.load %63 : !llvm.ptr -> i32
    %c0_i32_17 = arith.constant 0 : i32
    %65 = arith.cmpi ne, %64, %c0_i32_17 : i32
    cf.cond_br %65, ^bb25, ^bb26
  ^bb7:  // pred: ^bb3
    %66 = llvm.load %3 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %67 = arith.cmpi ult, %66, %c16_i32 : i32
    %68 = arith.extui %67 : i1 to i32
    %c0_i32_18 = arith.constant 0 : i32
    %69 = arith.cmpi ne, %68, %c0_i32_18 : i32
    cf.cond_br %69, ^bb10, ^bb11
  ^bb8:  // pred: ^bb3
    %c0_i32_19 = arith.constant 0 : i32
    llvm.store %c0_i32_19, %2 : i32, !llvm.ptr
    cf.br ^bb6
  ^bb9:  // 4 preds: ^bb11, ^bb13, ^bb14, ^bb21
    %70 = llvm.load %1 : !llvm.ptr -> i32
    %71 = llvm.load %6 : !llvm.ptr -> i32
    %72 = arith.addi %70, %71 : i32
    llvm.store %72, %6 : i32, !llvm.ptr
    cf.br ^bb6
  ^bb10:  // pred: ^bb7
    %73 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_20 = arith.constant 0 : i32
    %74 = arith.cmpi ne, %73, %c0_i32_20 : i32
    cf.cond_br %74, ^bb12, ^bb13
  ^bb11:  // pred: ^bb7
    %75 = llvm.load %2 : !llvm.ptr -> i32
    %76 = llvm.load %3 : !llvm.ptr -> i32
    %77 = call @f137(%arg0, %75, %76) : (!llvm.ptr, i32, i32) -> i32
    llvm.store %77, %1 : i32, !llvm.ptr
    cf.br ^bb9
  ^bb12:  // pred: ^bb10
    %78 = llvm.load %3 : !llvm.ptr -> i32
    %c3_i32 = arith.constant 3 : i32
    %79 = arith.andi %78, %c3_i32 : i32
    llvm.store %79, %9 : i32, !llvm.ptr
    %80 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i32_21 = arith.constant 4 : i32
    %81 = arith.cmpi uge, %80, %c4_i32_21 : i32
    %82 = arith.extui %81 : i1 to i32
    %c0_i32_22 = arith.constant 0 : i32
    %83 = arith.cmpi ne, %82, %c0_i32_22 : i32
    cf.cond_br %83, ^bb15, ^bb16
  ^bb13:  // pred: ^bb10
    %c0_i32_23 = arith.constant 0 : i32
    llvm.store %c0_i32_23, %1 : i32, !llvm.ptr
    cf.br ^bb9
  ^bb14:  // 2 preds: ^bb16, ^bb17
    %84 = llvm.load %9 : !llvm.ptr -> i32
    %c0_i32_24 = arith.constant 0 : i32
    %85 = arith.cmpi eq, %84, %c0_i32_24 : i32
    %86 = arith.extui %85 : i1 to i32
    %c0_i32_25 = arith.constant 0 : i32
    %87 = arith.cmpi ne, %86, %c0_i32_25 : i32
    cf.cond_br %87, ^bb9, ^bb20
  ^bb15:  // pred: ^bb12
    %88 = llvm.load %3 : !llvm.ptr -> i32
    %c12_i32 = arith.constant 12 : i32
    %89 = arith.andi %88, %c12_i32 : i32
    llvm.store %89, %11 : i32, !llvm.ptr
    %c0_i32_26 = arith.constant 0 : i32
    llvm.store %c0_i32_26, %1 : i32, !llvm.ptr
    %c0_i32_27 = arith.constant 0 : i32
    llvm.store %c0_i32_27, %10 : i32, !llvm.ptr
    cf.br ^bb18
  ^bb16:  // pred: ^bb12
    %c0_i32_28 = arith.constant 0 : i32
    llvm.store %c0_i32_28, %1 : i32, !llvm.ptr
    %c0_i32_29 = arith.constant 0 : i32
    llvm.store %c0_i32_29, %10 : i32, !llvm.ptr
    cf.br ^bb14
  ^bb17:  // pred: ^bb19
    cf.br ^bb14
  ^bb18:  // 2 preds: ^bb15, ^bb18
    %90 = llvm.load %1 : !llvm.ptr -> i32
    %91 = llvm.load %2 : !llvm.ptr -> i32
    %92 = llvm.load %10 : !llvm.ptr -> i32
    %93 = arith.addi %91, %92 : i32
    llvm.store %93, %12 : i32, !llvm.ptr
    %c0_i64_30 = arith.constant 0 : i64
    %94 = arith.extui %93 : i32 to i64
    %95 = arith.addi %94, %c0_i64_30 : i64
    %96 = llvm.getelementptr %15[%95] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %97 = llvm.load %96 : !llvm.ptr -> i8
    %98 = arith.extsi %97 : i8 to i32
    %c-65_i32 = arith.constant -65 : i32
    %99 = arith.cmpi sgt, %98, %c-65_i32 : i32
    %100 = arith.extui %99 : i1 to i32
    %101 = arith.addi %90, %100 : i32
    %102 = llvm.load %12 : !llvm.ptr -> i32
    %c1_i32_31 = arith.constant 1 : i32
    %103 = arith.addi %102, %c1_i32_31 : i32
    %c0_i64_32 = arith.constant 0 : i64
    %104 = arith.extui %103 : i32 to i64
    %105 = arith.addi %104, %c0_i64_32 : i64
    %106 = llvm.getelementptr %15[%105] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %107 = llvm.load %106 : !llvm.ptr -> i8
    %108 = arith.extsi %107 : i8 to i32
    %c-65_i32_33 = arith.constant -65 : i32
    %109 = arith.cmpi sgt, %108, %c-65_i32_33 : i32
    %110 = arith.extui %109 : i1 to i32
    %111 = arith.addi %101, %110 : i32
    %112 = llvm.load %12 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %113 = arith.addi %112, %c2_i32 : i32
    %c0_i64_34 = arith.constant 0 : i64
    %114 = arith.extui %113 : i32 to i64
    %115 = arith.addi %114, %c0_i64_34 : i64
    %116 = llvm.getelementptr %15[%115] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %117 = llvm.load %116 : !llvm.ptr -> i8
    %118 = arith.extsi %117 : i8 to i32
    %c-65_i32_35 = arith.constant -65 : i32
    %119 = arith.cmpi sgt, %118, %c-65_i32_35 : i32
    %120 = arith.extui %119 : i1 to i32
    %121 = arith.addi %111, %120 : i32
    %122 = llvm.load %12 : !llvm.ptr -> i32
    %c3_i32_36 = arith.constant 3 : i32
    %123 = arith.addi %122, %c3_i32_36 : i32
    %c0_i64_37 = arith.constant 0 : i64
    %124 = arith.extui %123 : i32 to i64
    %125 = arith.addi %124, %c0_i64_37 : i64
    %126 = llvm.getelementptr %15[%125] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %127 = llvm.load %126 : !llvm.ptr -> i8
    %128 = arith.extsi %127 : i8 to i32
    %c-65_i32_38 = arith.constant -65 : i32
    %129 = arith.cmpi sgt, %128, %c-65_i32_38 : i32
    %130 = arith.extui %129 : i1 to i32
    %131 = arith.addi %121, %130 : i32
    llvm.store %131, %1 : i32, !llvm.ptr
    %132 = llvm.load %11 : !llvm.ptr -> i32
    %133 = llvm.load %10 : !llvm.ptr -> i32
    %c4_i32_39 = arith.constant 4 : i32
    %134 = arith.addi %133, %c4_i32_39 : i32
    llvm.store %134, %10 : i32, !llvm.ptr
    %135 = arith.cmpi eq, %132, %134 : i32
    %136 = arith.extui %135 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %137 = arith.xori %136, %c-1_i32 : i32
    %c0_i32_40 = arith.constant 0 : i32
    %138 = arith.cmpi ne, %137, %c0_i32_40 : i32
    cf.cond_br %138, ^bb18, ^bb19
  ^bb19:  // pred: ^bb18
    cf.br ^bb17
  ^bb20:  // pred: ^bb14
    %139 = llvm.load %2 : !llvm.ptr -> i32
    %140 = llvm.load %10 : !llvm.ptr -> i32
    %141 = arith.addi %139, %140 : i32
    llvm.store %141, %12 : i32, !llvm.ptr
    cf.br ^bb22
  ^bb21:  // pred: ^bb23
    cf.br ^bb9
  ^bb22:  // 2 preds: ^bb20, ^bb22
    %142 = llvm.load %1 : !llvm.ptr -> i32
    %143 = llvm.load %12 : !llvm.ptr -> i32
    %c0_i64_41 = arith.constant 0 : i64
    %144 = arith.extui %143 : i32 to i64
    %145 = arith.addi %144, %c0_i64_41 : i64
    %146 = llvm.getelementptr %15[%145] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %147 = llvm.load %146 : !llvm.ptr -> i8
    %148 = arith.extsi %147 : i8 to i32
    %c-65_i32_42 = arith.constant -65 : i32
    %149 = arith.cmpi sgt, %148, %c-65_i32_42 : i32
    %150 = arith.extui %149 : i1 to i32
    %151 = arith.addi %142, %150 : i32
    llvm.store %151, %1 : i32, !llvm.ptr
    %152 = llvm.load %12 : !llvm.ptr -> i32
    %c1_i32_43 = arith.constant 1 : i32
    %153 = arith.addi %152, %c1_i32_43 : i32
    llvm.store %153, %12 : i32, !llvm.ptr
    %154 = llvm.load %9 : !llvm.ptr -> i32
    %c-1_i32_44 = arith.constant -1 : i32
    %155 = arith.addi %154, %c-1_i32_44 : i32
    llvm.store %155, %9 : i32, !llvm.ptr
    %c0_i32_45 = arith.constant 0 : i32
    %156 = arith.cmpi ne, %155, %c0_i32_45 : i32
    cf.cond_br %156, ^bb22, ^bb23
  ^bb23:  // pred: ^bb22
    cf.br ^bb21
  ^bb24:  // 7 preds: ^bb26, ^bb37, ^bb48, ^bb69, ^bb71, ^bb75, ^bb95
    %157 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb2(%157 : i32)
  ^bb25:  // pred: ^bb6
    %158 = llvm.load %0 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %159 = arith.extui %158 : i32 to i64
    %160 = arith.addi %159, %c4_i64 : i64
    %161 = llvm.getelementptr %15[%160] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %162 = llvm.load %161 : !llvm.ptr -> i32
    llvm.store %162, %9 : i32, !llvm.ptr
    %163 = llvm.load %6 : !llvm.ptr -> i32
    %164 = arith.cmpi ugt, %162, %163 : i32
    %165 = arith.extui %164 : i1 to i32
    %c0_i32_46 = arith.constant 0 : i32
    %166 = arith.cmpi ne, %165, %c0_i32_46 : i32
    cf.cond_br %166, ^bb36, ^bb37
  ^bb26:  // pred: ^bb6
    %c1_i32_47 = arith.constant 1 : i32
    llvm.store %c1_i32_47, %1 : i32, !llvm.ptr
    %167 = llvm.load %0 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %168 = arith.extui %167 : i32 to i64
    %169 = arith.addi %168, %c20_i64 : i64
    %170 = llvm.getelementptr %15[%169] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %171 = llvm.load %170 : !llvm.ptr -> i32
    llvm.store %171, %12 : i32, !llvm.ptr
    %172 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %173 = arith.extui %172 : i32 to i64
    %174 = arith.addi %173, %c24_i64 : i64
    %175 = llvm.getelementptr %15[%174] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %176 = llvm.load %175 : !llvm.ptr -> i32
    llvm.store %176, %10 : i32, !llvm.ptr
    %177 = llvm.load %8 : !llvm.ptr -> i32
    %178 = llvm.load %2 : !llvm.ptr -> i32
    %179 = llvm.load %3 : !llvm.ptr -> i32
    %180 = call @f138(%arg0, %171, %176, %177, %178, %179) : (!llvm.ptr, i32, i32, i32, i32, i32) -> i32
    %c0_i32_48 = arith.constant 0 : i32
    %181 = arith.cmpi ne, %180, %c0_i32_48 : i32
    cf.cond_br %181, ^bb24, ^bb27
  ^bb27:  // pred: ^bb26
    %182 = llvm.load %12 : !llvm.ptr -> i32
    %183 = llvm.load %4 : !llvm.ptr -> i32
    %184 = llvm.load %5 : !llvm.ptr -> i32
    %185 = llvm.load %10 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %186 = arith.extui %185 : i32 to i64
    %187 = arith.addi %186, %c12_i64 : i64
    %188 = llvm.getelementptr %15[%187] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %189 = llvm.load %188 : !llvm.ptr -> i32
    %190 = arith.cmpi ult, %189, %21 : i32
    cf.cond_br %190, ^bb28, ^bb29
  ^bb28:  // 2 preds: ^bb27, ^bb29
    %191 = llvm.getelementptr %20[%189] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %192 = llvm.load %191 : !llvm.ptr -> !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> i32
    %c0_i32_49 = arith.constant 0 : i32
    %194 = arith.cmpi eq, %193, %c0_i32_49 : i32
    cf.cond_br %194, ^bb31, ^bb30
  ^bb29:  // pred: ^bb27
    %c3_i32_50 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_50) : (i32) -> ()
    cf.br ^bb28
  ^bb30:  // 2 preds: ^bb28, ^bb31
    %195 = llvm.getelementptr %192[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %196 = llvm.getelementptr %192[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %197 = llvm.getelementptr %192[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %198 = llvm.load %195 : !llvm.ptr -> !llvm.ptr
    %199 = llvm.load %197 : !llvm.ptr -> !llvm.ptr
    %200 = llvm.load %198 : !llvm.ptr -> i32
    %c0_i32_51 = arith.constant 0 : i32
    %201 = arith.cmpi eq, %200, %c0_i32_51 : i32
    cf.cond_br %201, ^bb33, ^bb32
  ^bb31:  // pred: ^bb28
    %c4_i32_52 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_52) : (i32) -> ()
    cf.br ^bb30
  ^bb32:  // 2 preds: ^bb30, ^bb33
    %202 = llvm.load %196 : !llvm.ptr -> i32
    %203 = arith.cmpi ne, %17, %202 : i32
    cf.cond_br %203, ^bb35, ^bb34
  ^bb33:  // pred: ^bb30
    %c3_i32_53 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_53) : (i32) -> ()
    cf.br ^bb32
  ^bb34:  // 2 preds: ^bb32, ^bb35
    %204 = llvm.call %198(%199, %182, %183, %184) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%204 : i32)
  ^bb35:  // pred: ^bb32
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb34
  ^bb36:  // pred: ^bb25
    %205 = llvm.load %7 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %206 = arith.andi %205, %c8_i32 : i32
    %c0_i32_54 = arith.constant 0 : i32
    %207 = arith.cmpi eq, %206, %c0_i32_54 : i32
    %208 = arith.extui %207 : i1 to i32
    %c0_i32_55 = arith.constant 0 : i32
    %209 = arith.cmpi ne, %208, %c0_i32_55 : i32
    cf.cond_br %209, ^bb47, ^bb48
  ^bb37:  // pred: ^bb25
    %c1_i32_56 = arith.constant 1 : i32
    llvm.store %c1_i32_56, %1 : i32, !llvm.ptr
    %210 = llvm.load %0 : !llvm.ptr -> i32
    %c20_i64_57 = arith.constant 20 : i64
    %211 = arith.extui %210 : i32 to i64
    %212 = arith.addi %211, %c20_i64_57 : i64
    %213 = llvm.getelementptr %15[%212] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %214 = llvm.load %213 : !llvm.ptr -> i32
    llvm.store %214, %12 : i32, !llvm.ptr
    %215 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64_58 = arith.constant 24 : i64
    %216 = arith.extui %215 : i32 to i64
    %217 = arith.addi %216, %c24_i64_58 : i64
    %218 = llvm.getelementptr %15[%217] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %219 = llvm.load %218 : !llvm.ptr -> i32
    llvm.store %219, %10 : i32, !llvm.ptr
    %220 = llvm.load %8 : !llvm.ptr -> i32
    %221 = llvm.load %2 : !llvm.ptr -> i32
    %222 = llvm.load %3 : !llvm.ptr -> i32
    %223 = call @f138(%arg0, %214, %219, %220, %221, %222) : (!llvm.ptr, i32, i32, i32, i32, i32) -> i32
    %c0_i32_59 = arith.constant 0 : i32
    %224 = arith.cmpi ne, %223, %c0_i32_59 : i32
    cf.cond_br %224, ^bb24, ^bb38
  ^bb38:  // pred: ^bb37
    %225 = llvm.load %12 : !llvm.ptr -> i32
    %226 = llvm.load %4 : !llvm.ptr -> i32
    %227 = llvm.load %5 : !llvm.ptr -> i32
    %228 = llvm.load %10 : !llvm.ptr -> i32
    %c12_i64_60 = arith.constant 12 : i64
    %229 = arith.extui %228 : i32 to i64
    %230 = arith.addi %229, %c12_i64_60 : i64
    %231 = llvm.getelementptr %15[%230] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %232 = llvm.load %231 : !llvm.ptr -> i32
    %233 = arith.cmpi ult, %232, %23 : i32
    cf.cond_br %233, ^bb39, ^bb40
  ^bb39:  // 2 preds: ^bb38, ^bb40
    %234 = llvm.getelementptr %22[%232] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %235 = llvm.load %234 : !llvm.ptr -> !llvm.ptr
    %236 = llvm.load %235 : !llvm.ptr -> i32
    %c0_i32_61 = arith.constant 0 : i32
    %237 = arith.cmpi eq, %236, %c0_i32_61 : i32
    cf.cond_br %237, ^bb42, ^bb41
  ^bb40:  // pred: ^bb38
    %c3_i32_62 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_62) : (i32) -> ()
    cf.br ^bb39
  ^bb41:  // 2 preds: ^bb39, ^bb42
    %238 = llvm.getelementptr %235[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %239 = llvm.getelementptr %235[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %240 = llvm.getelementptr %235[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %241 = llvm.load %238 : !llvm.ptr -> !llvm.ptr
    %242 = llvm.load %240 : !llvm.ptr -> !llvm.ptr
    %243 = llvm.load %241 : !llvm.ptr -> i32
    %c0_i32_63 = arith.constant 0 : i32
    %244 = arith.cmpi eq, %243, %c0_i32_63 : i32
    cf.cond_br %244, ^bb44, ^bb43
  ^bb42:  // pred: ^bb39
    %c4_i32_64 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_64) : (i32) -> ()
    cf.br ^bb41
  ^bb43:  // 2 preds: ^bb41, ^bb44
    %245 = llvm.load %239 : !llvm.ptr -> i32
    %246 = arith.cmpi ne, %17, %245 : i32
    cf.cond_br %246, ^bb46, ^bb45
  ^bb44:  // pred: ^bb41
    %c3_i32_65 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_65) : (i32) -> ()
    cf.br ^bb43
  ^bb45:  // 2 preds: ^bb43, ^bb46
    %247 = llvm.call %241(%242, %225, %226, %227) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%247 : i32)
  ^bb46:  // pred: ^bb43
    %c5_i32_66 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_66) : (i32) -> ()
    cf.br ^bb45
  ^bb47:  // pred: ^bb36
    %248 = llvm.load %9 : !llvm.ptr -> i32
    %249 = llvm.load %6 : !llvm.ptr -> i32
    %250 = arith.subi %248, %249 : i32
    llvm.store %250, %6 : i32, !llvm.ptr
    %251 = llvm.load %0 : !llvm.ptr -> i32
    %c32_i64 = arith.constant 32 : i64
    %252 = arith.extui %251 : i32 to i64
    %253 = arith.addi %252, %c32_i64 : i64
    %254 = llvm.getelementptr %15[%253] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %255 = llvm.load %254 : !llvm.ptr -> i8
    %256 = arith.extui %255 : i8 to i32
    llvm.store %256, %1 : i32, !llvm.ptr
    cf.switch %256 : i32, [
      default: ^bb72,
      0: ^bb72,
      1: ^bb74,
      2: ^bb73,
      3: ^bb74
    ]
  ^bb48:  // pred: ^bb36
    %257 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %258 = arith.extui %257 : i32 to i64
    %259 = arith.addi %258, %c16_i64 : i64
    %260 = llvm.getelementptr %15[%259] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %261 = llvm.load %260 : !llvm.ptr -> i32
    llvm.store %261, %11 : i32, !llvm.ptr
    %262 = llvm.load %0 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %c16_i64_67 = arith.constant 16 : i64
    %263 = arith.extui %262 : i32 to i64
    %264 = arith.addi %263, %c16_i64_67 : i64
    %265 = llvm.getelementptr %15[%264] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c48_i32, %265 : i32, !llvm.ptr
    %266 = llvm.load %0 : !llvm.ptr -> i32
    %c32_i64_68 = arith.constant 32 : i64
    %267 = arith.extui %266 : i32 to i64
    %268 = arith.addi %267, %c32_i64_68 : i64
    %269 = llvm.getelementptr %15[%268] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %270 = llvm.load %269 : !llvm.ptr -> i8
    %271 = arith.extui %270 : i8 to i32
    llvm.store %271, %7 : i32, !llvm.ptr
    %c1_i32_69 = arith.constant 1 : i32
    llvm.store %c1_i32_69, %1 : i32, !llvm.ptr
    %272 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i32_70 = arith.constant 1 : i32
    %c32_i64_71 = arith.constant 32 : i64
    %273 = arith.extui %272 : i32 to i64
    %274 = arith.addi %273, %c32_i64_71 : i64
    %275 = llvm.getelementptr %15[%274] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %276 = arith.trunci %c1_i32_70 : i32 to i8
    llvm.store %276, %275 : i8, !llvm.ptr
    %277 = llvm.load %0 : !llvm.ptr -> i32
    %c20_i64_72 = arith.constant 20 : i64
    %278 = arith.extui %277 : i32 to i64
    %279 = arith.addi %278, %c20_i64_72 : i64
    %280 = llvm.getelementptr %15[%279] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %281 = llvm.load %280 : !llvm.ptr -> i32
    llvm.store %281, %12 : i32, !llvm.ptr
    %282 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64_73 = arith.constant 24 : i64
    %283 = arith.extui %282 : i32 to i64
    %284 = arith.addi %283, %c24_i64_73 : i64
    %285 = llvm.getelementptr %15[%284] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %286 = llvm.load %285 : !llvm.ptr -> i32
    llvm.store %286, %10 : i32, !llvm.ptr
    %287 = llvm.load %8 : !llvm.ptr -> i32
    %288 = llvm.load %2 : !llvm.ptr -> i32
    %289 = llvm.load %3 : !llvm.ptr -> i32
    %290 = call @f138(%arg0, %281, %286, %287, %288, %289) : (!llvm.ptr, i32, i32, i32, i32, i32) -> i32
    %c0_i32_74 = arith.constant 0 : i32
    %291 = arith.cmpi ne, %290, %c0_i32_74 : i32
    cf.cond_br %291, ^bb24, ^bb49
  ^bb49:  // pred: ^bb48
    %292 = llvm.load %9 : !llvm.ptr -> i32
    %293 = llvm.load %6 : !llvm.ptr -> i32
    %294 = arith.subi %292, %293 : i32
    %c1_i32_75 = arith.constant 1 : i32
    %295 = arith.addi %294, %c1_i32_75 : i32
    llvm.store %295, %1 : i32, !llvm.ptr
    cf.br ^bb52
  ^bb50:  // pred: ^bb52
    %c1_i32_76 = arith.constant 1 : i32
    llvm.store %c1_i32_76, %1 : i32, !llvm.ptr
    %296 = llvm.load %12 : !llvm.ptr -> i32
    %297 = llvm.load %4 : !llvm.ptr -> i32
    %298 = llvm.load %5 : !llvm.ptr -> i32
    %299 = llvm.load %10 : !llvm.ptr -> i32
    %c12_i64_77 = arith.constant 12 : i64
    %300 = arith.extui %299 : i32 to i64
    %301 = arith.addi %300, %c12_i64_77 : i64
    %302 = llvm.getelementptr %15[%301] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %303 = llvm.load %302 : !llvm.ptr -> i32
    %304 = arith.cmpi ult, %303, %29 : i32
    cf.cond_br %304, ^bb63, ^bb64
  ^bb51:  // pred: ^bb62
    %c1_i32_78 = arith.constant 1 : i32
    cf.br ^bb2(%c1_i32_78 : i32)
  ^bb52:  // 2 preds: ^bb49, ^bb60
    %305 = llvm.load %1 : !llvm.ptr -> i32
    %c-1_i32_79 = arith.constant -1 : i32
    %306 = arith.addi %305, %c-1_i32_79 : i32
    llvm.store %306, %1 : i32, !llvm.ptr
    %c0_i32_80 = arith.constant 0 : i32
    %307 = arith.cmpi eq, %306, %c0_i32_80 : i32
    %308 = arith.extui %307 : i1 to i32
    %c0_i32_81 = arith.constant 0 : i32
    %309 = arith.cmpi ne, %308, %c0_i32_81 : i32
    cf.cond_br %309, ^bb50, ^bb53
  ^bb53:  // pred: ^bb52
    %310 = llvm.load %12 : !llvm.ptr -> i32
    %c48_i32_82 = arith.constant 48 : i32
    %311 = llvm.load %10 : !llvm.ptr -> i32
    %c16_i64_83 = arith.constant 16 : i64
    %312 = arith.extui %311 : i32 to i64
    %313 = arith.addi %312, %c16_i64_83 : i64
    %314 = llvm.getelementptr %15[%313] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %315 = llvm.load %314 : !llvm.ptr -> i32
    %316 = arith.cmpi ult, %315, %27 : i32
    cf.cond_br %316, ^bb54, ^bb55
  ^bb54:  // 2 preds: ^bb53, ^bb55
    %317 = llvm.getelementptr %26[%315] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %318 = llvm.load %317 : !llvm.ptr -> !llvm.ptr
    %319 = llvm.load %318 : !llvm.ptr -> i32
    %c0_i32_84 = arith.constant 0 : i32
    %320 = arith.cmpi eq, %319, %c0_i32_84 : i32
    cf.cond_br %320, ^bb57, ^bb56
  ^bb55:  // pred: ^bb53
    %c3_i32_85 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_85) : (i32) -> ()
    cf.br ^bb54
  ^bb56:  // 2 preds: ^bb54, ^bb57
    %321 = llvm.getelementptr %318[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %322 = llvm.getelementptr %318[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %323 = llvm.getelementptr %318[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %324 = llvm.load %321 : !llvm.ptr -> !llvm.ptr
    %325 = llvm.load %323 : !llvm.ptr -> !llvm.ptr
    %326 = llvm.load %324 : !llvm.ptr -> i32
    %c0_i32_86 = arith.constant 0 : i32
    %327 = arith.cmpi eq, %326, %c0_i32_86 : i32
    cf.cond_br %327, ^bb59, ^bb58
  ^bb57:  // pred: ^bb54
    %c4_i32_87 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_87) : (i32) -> ()
    cf.br ^bb56
  ^bb58:  // 2 preds: ^bb56, ^bb59
    %328 = llvm.load %322 : !llvm.ptr -> i32
    %329 = arith.cmpi ne, %25, %328 : i32
    cf.cond_br %329, ^bb61, ^bb60
  ^bb59:  // pred: ^bb56
    %c3_i32_88 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_88) : (i32) -> ()
    cf.br ^bb58
  ^bb60:  // 2 preds: ^bb58, ^bb61
    %330 = llvm.call %324(%325, %310, %c48_i32_82) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> i32
    %c0_i32_89 = arith.constant 0 : i32
    %331 = arith.cmpi eq, %330, %c0_i32_89 : i32
    %332 = arith.extui %331 : i1 to i32
    %c0_i32_90 = arith.constant 0 : i32
    %333 = arith.cmpi ne, %332, %c0_i32_90 : i32
    cf.cond_br %333, ^bb52, ^bb62
  ^bb61:  // pred: ^bb58
    %c5_i32_91 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_91) : (i32) -> ()
    cf.br ^bb60
  ^bb62:  // pred: ^bb60
    cf.br ^bb51
  ^bb63:  // 2 preds: ^bb50, ^bb64
    %334 = llvm.getelementptr %28[%303] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %335 = llvm.load %334 : !llvm.ptr -> !llvm.ptr
    %336 = llvm.load %335 : !llvm.ptr -> i32
    %c0_i32_92 = arith.constant 0 : i32
    %337 = arith.cmpi eq, %336, %c0_i32_92 : i32
    cf.cond_br %337, ^bb66, ^bb65
  ^bb64:  // pred: ^bb50
    %c3_i32_93 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_93) : (i32) -> ()
    cf.br ^bb63
  ^bb65:  // 2 preds: ^bb63, ^bb66
    %338 = llvm.getelementptr %335[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %339 = llvm.getelementptr %335[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %340 = llvm.getelementptr %335[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %341 = llvm.load %338 : !llvm.ptr -> !llvm.ptr
    %342 = llvm.load %340 : !llvm.ptr -> !llvm.ptr
    %343 = llvm.load %341 : !llvm.ptr -> i32
    %c0_i32_94 = arith.constant 0 : i32
    %344 = arith.cmpi eq, %343, %c0_i32_94 : i32
    cf.cond_br %344, ^bb68, ^bb67
  ^bb66:  // pred: ^bb63
    %c4_i32_95 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_95) : (i32) -> ()
    cf.br ^bb65
  ^bb67:  // 2 preds: ^bb65, ^bb68
    %345 = llvm.load %339 : !llvm.ptr -> i32
    %346 = arith.cmpi ne, %17, %345 : i32
    cf.cond_br %346, ^bb70, ^bb69
  ^bb68:  // pred: ^bb65
    %c3_i32_96 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_96) : (i32) -> ()
    cf.br ^bb67
  ^bb69:  // 2 preds: ^bb67, ^bb70
    %347 = llvm.call %341(%342, %296, %297, %298) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    %c0_i32_97 = arith.constant 0 : i32
    %348 = arith.cmpi ne, %347, %c0_i32_97 : i32
    cf.cond_br %348, ^bb24, ^bb71
  ^bb70:  // pred: ^bb67
    %c5_i32_98 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_98) : (i32) -> ()
    cf.br ^bb69
  ^bb71:  // pred: ^bb69
    %349 = llvm.load %0 : !llvm.ptr -> i32
    %350 = llvm.load %7 : !llvm.ptr -> i32
    %c32_i64_99 = arith.constant 32 : i64
    %351 = arith.extui %349 : i32 to i64
    %352 = arith.addi %351, %c32_i64_99 : i64
    %353 = llvm.getelementptr %15[%352] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %354 = arith.trunci %350 : i32 to i8
    llvm.store %354, %353 : i8, !llvm.ptr
    %355 = llvm.load %0 : !llvm.ptr -> i32
    %356 = llvm.load %11 : !llvm.ptr -> i32
    %c16_i64_100 = arith.constant 16 : i64
    %357 = arith.extui %355 : i32 to i64
    %358 = arith.addi %357, %c16_i64_100 : i64
    %359 = llvm.getelementptr %15[%358] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %356, %359 : i32, !llvm.ptr
    %c0_i32_101 = arith.constant 0 : i32
    llvm.store %c0_i32_101, %1 : i32, !llvm.ptr
    cf.br ^bb24
  ^bb72:  // 4 preds: ^bb47, ^bb47, ^bb73, ^bb74
    %360 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32_102 = arith.constant 1 : i32
    %361 = arith.addi %360, %c1_i32_102 : i32
    llvm.store %361, %1 : i32, !llvm.ptr
    %362 = llvm.load %0 : !llvm.ptr -> i32
    %c16_i64_103 = arith.constant 16 : i64
    %363 = arith.extui %362 : i32 to i64
    %364 = arith.addi %363, %c16_i64_103 : i64
    %365 = llvm.getelementptr %15[%364] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %366 = llvm.load %365 : !llvm.ptr -> i32
    llvm.store %366, %9 : i32, !llvm.ptr
    %367 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64_104 = arith.constant 24 : i64
    %368 = arith.extui %367 : i32 to i64
    %369 = arith.addi %368, %c24_i64_104 : i64
    %370 = llvm.getelementptr %15[%369] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %371 = llvm.load %370 : !llvm.ptr -> i32
    llvm.store %371, %12 : i32, !llvm.ptr
    %372 = llvm.load %0 : !llvm.ptr -> i32
    %c20_i64_105 = arith.constant 20 : i64
    %373 = arith.extui %372 : i32 to i64
    %374 = arith.addi %373, %c20_i64_105 : i64
    %375 = llvm.getelementptr %15[%374] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %376 = llvm.load %375 : !llvm.ptr -> i32
    llvm.store %376, %10 : i32, !llvm.ptr
    cf.br ^bb77
  ^bb73:  // pred: ^bb47
    %377 = llvm.load %6 : !llvm.ptr -> i32
    %c1_i32_106 = arith.constant 1 : i32
    %c31_i32 = arith.constant 31 : i32
    %378 = arith.cmpi ule, %c1_i32_106, %c31_i32 : i32
    %379 = scf.if %378 -> (i32) {
      %488 = arith.shrui %377, %c1_i32_106 : i32
      scf.yield %488 : i32
    } else {
      %c0_i32_148 = arith.constant 0 : i32
      scf.yield %c0_i32_148 : i32
    }
    llvm.store %379, %1 : i32, !llvm.ptr
    %380 = llvm.load %6 : !llvm.ptr -> i32
    %c1_i32_107 = arith.constant 1 : i32
    %381 = arith.addi %380, %c1_i32_107 : i32
    %c1_i32_108 = arith.constant 1 : i32
    %c31_i32_109 = arith.constant 31 : i32
    %382 = arith.cmpi ule, %c1_i32_108, %c31_i32_109 : i32
    %383 = scf.if %382 -> (i32) {
      %488 = arith.shrui %381, %c1_i32_108 : i32
      scf.yield %488 : i32
    } else {
      %c0_i32_148 = arith.constant 0 : i32
      scf.yield %c0_i32_148 : i32
    }
    llvm.store %383, %6 : i32, !llvm.ptr
    cf.br ^bb72
  ^bb74:  // 2 preds: ^bb47, ^bb47
    %384 = llvm.load %6 : !llvm.ptr -> i32
    llvm.store %384, %1 : i32, !llvm.ptr
    %c0_i32_110 = arith.constant 0 : i32
    llvm.store %c0_i32_110, %6 : i32, !llvm.ptr
    cf.br ^bb72
  ^bb75:  // pred: ^bb77
    %c1_i32_111 = arith.constant 1 : i32
    llvm.store %c1_i32_111, %1 : i32, !llvm.ptr
    %385 = llvm.load %10 : !llvm.ptr -> i32
    %386 = llvm.load %12 : !llvm.ptr -> i32
    %387 = llvm.load %8 : !llvm.ptr -> i32
    %388 = llvm.load %2 : !llvm.ptr -> i32
    %389 = llvm.load %3 : !llvm.ptr -> i32
    %390 = call @f138(%arg0, %385, %386, %387, %388, %389) : (!llvm.ptr, i32, i32, i32, i32, i32) -> i32
    %c0_i32_112 = arith.constant 0 : i32
    %391 = arith.cmpi ne, %390, %c0_i32_112 : i32
    cf.cond_br %391, ^bb24, ^bb88
  ^bb76:  // pred: ^bb87
    %c1_i32_113 = arith.constant 1 : i32
    cf.br ^bb2(%c1_i32_113 : i32)
  ^bb77:  // 2 preds: ^bb72, ^bb85
    %392 = llvm.load %1 : !llvm.ptr -> i32
    %c-1_i32_114 = arith.constant -1 : i32
    %393 = arith.addi %392, %c-1_i32_114 : i32
    llvm.store %393, %1 : i32, !llvm.ptr
    %c0_i32_115 = arith.constant 0 : i32
    %394 = arith.cmpi eq, %393, %c0_i32_115 : i32
    %395 = arith.extui %394 : i1 to i32
    %c0_i32_116 = arith.constant 0 : i32
    %396 = arith.cmpi ne, %395, %c0_i32_116 : i32
    cf.cond_br %396, ^bb75, ^bb78
  ^bb78:  // pred: ^bb77
    %397 = llvm.load %10 : !llvm.ptr -> i32
    %398 = llvm.load %9 : !llvm.ptr -> i32
    %399 = llvm.load %12 : !llvm.ptr -> i32
    %c16_i64_117 = arith.constant 16 : i64
    %400 = arith.extui %399 : i32 to i64
    %401 = arith.addi %400, %c16_i64_117 : i64
    %402 = llvm.getelementptr %15[%401] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %403 = llvm.load %402 : !llvm.ptr -> i32
    %404 = arith.cmpi ult, %403, %31 : i32
    cf.cond_br %404, ^bb79, ^bb80
  ^bb79:  // 2 preds: ^bb78, ^bb80
    %405 = llvm.getelementptr %30[%403] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %406 = llvm.load %405 : !llvm.ptr -> !llvm.ptr
    %407 = llvm.load %406 : !llvm.ptr -> i32
    %c0_i32_118 = arith.constant 0 : i32
    %408 = arith.cmpi eq, %407, %c0_i32_118 : i32
    cf.cond_br %408, ^bb82, ^bb81
  ^bb80:  // pred: ^bb78
    %c3_i32_119 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_119) : (i32) -> ()
    cf.br ^bb79
  ^bb81:  // 2 preds: ^bb79, ^bb82
    %409 = llvm.getelementptr %406[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %410 = llvm.getelementptr %406[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %411 = llvm.getelementptr %406[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %412 = llvm.load %409 : !llvm.ptr -> !llvm.ptr
    %413 = llvm.load %411 : !llvm.ptr -> !llvm.ptr
    %414 = llvm.load %412 : !llvm.ptr -> i32
    %c0_i32_120 = arith.constant 0 : i32
    %415 = arith.cmpi eq, %414, %c0_i32_120 : i32
    cf.cond_br %415, ^bb84, ^bb83
  ^bb82:  // pred: ^bb79
    %c4_i32_121 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_121) : (i32) -> ()
    cf.br ^bb81
  ^bb83:  // 2 preds: ^bb81, ^bb84
    %416 = llvm.load %410 : !llvm.ptr -> i32
    %417 = arith.cmpi ne, %25, %416 : i32
    cf.cond_br %417, ^bb86, ^bb85
  ^bb84:  // pred: ^bb81
    %c3_i32_122 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_122) : (i32) -> ()
    cf.br ^bb83
  ^bb85:  // 2 preds: ^bb83, ^bb86
    %418 = llvm.call %412(%413, %397, %398) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> i32
    %c0_i32_123 = arith.constant 0 : i32
    %419 = arith.cmpi eq, %418, %c0_i32_123 : i32
    %420 = arith.extui %419 : i1 to i32
    %c0_i32_124 = arith.constant 0 : i32
    %421 = arith.cmpi ne, %420, %c0_i32_124 : i32
    cf.cond_br %421, ^bb77, ^bb87
  ^bb86:  // pred: ^bb83
    %c5_i32_125 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_125) : (i32) -> ()
    cf.br ^bb85
  ^bb87:  // pred: ^bb85
    cf.br ^bb76
  ^bb88:  // pred: ^bb75
    %422 = llvm.load %10 : !llvm.ptr -> i32
    %423 = llvm.load %4 : !llvm.ptr -> i32
    %424 = llvm.load %5 : !llvm.ptr -> i32
    %425 = llvm.load %12 : !llvm.ptr -> i32
    %c12_i64_126 = arith.constant 12 : i64
    %426 = arith.extui %425 : i32 to i64
    %427 = arith.addi %426, %c12_i64_126 : i64
    %428 = llvm.getelementptr %15[%427] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %429 = llvm.load %428 : !llvm.ptr -> i32
    %430 = arith.cmpi ult, %429, %33 : i32
    cf.cond_br %430, ^bb89, ^bb90
  ^bb89:  // 2 preds: ^bb88, ^bb90
    %431 = llvm.getelementptr %32[%429] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %432 = llvm.load %431 : !llvm.ptr -> !llvm.ptr
    %433 = llvm.load %432 : !llvm.ptr -> i32
    %c0_i32_127 = arith.constant 0 : i32
    %434 = arith.cmpi eq, %433, %c0_i32_127 : i32
    cf.cond_br %434, ^bb92, ^bb91
  ^bb90:  // pred: ^bb88
    %c3_i32_128 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_128) : (i32) -> ()
    cf.br ^bb89
  ^bb91:  // 2 preds: ^bb89, ^bb92
    %435 = llvm.getelementptr %432[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %436 = llvm.getelementptr %432[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %437 = llvm.getelementptr %432[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %438 = llvm.load %435 : !llvm.ptr -> !llvm.ptr
    %439 = llvm.load %437 : !llvm.ptr -> !llvm.ptr
    %440 = llvm.load %438 : !llvm.ptr -> i32
    %c0_i32_129 = arith.constant 0 : i32
    %441 = arith.cmpi eq, %440, %c0_i32_129 : i32
    cf.cond_br %441, ^bb94, ^bb93
  ^bb92:  // pred: ^bb89
    %c4_i32_130 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_130) : (i32) -> ()
    cf.br ^bb91
  ^bb93:  // 2 preds: ^bb91, ^bb94
    %442 = llvm.load %436 : !llvm.ptr -> i32
    %443 = arith.cmpi ne, %17, %442 : i32
    cf.cond_br %443, ^bb96, ^bb95
  ^bb94:  // pred: ^bb91
    %c3_i32_131 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_131) : (i32) -> ()
    cf.br ^bb93
  ^bb95:  // 2 preds: ^bb93, ^bb96
    %444 = llvm.call %438(%439, %422, %423, %424) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    %c0_i32_132 = arith.constant 0 : i32
    %445 = arith.cmpi ne, %444, %c0_i32_132 : i32
    cf.cond_br %445, ^bb24, ^bb97
  ^bb96:  // pred: ^bb93
    %c5_i32_133 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_133) : (i32) -> ()
    cf.br ^bb95
  ^bb97:  // pred: ^bb95
    %c0_i32_134 = arith.constant 0 : i32
    llvm.store %c0_i32_134, %1 : i32, !llvm.ptr
    cf.br ^bb99
  ^bb98:  // pred: ^bb110
    %446 = llvm.load %1 : !llvm.ptr -> i32
    %c-1_i32_135 = arith.constant -1 : i32
    %447 = arith.addi %446, %c-1_i32_135 : i32
    %448 = llvm.load %6 : !llvm.ptr -> i32
    %449 = arith.cmpi ult, %447, %448 : i32
    %450 = arith.extui %449 : i1 to i32
    cf.br ^bb2(%450 : i32)
  ^bb99:  // 2 preds: ^bb97, ^bb108
    %451 = llvm.load %6 : !llvm.ptr -> i32
    %452 = llvm.load %1 : !llvm.ptr -> i32
    %453 = arith.cmpi eq, %451, %452 : i32
    %454 = arith.extui %453 : i1 to i32
    %c-1_i32_136 = arith.constant -1 : i32
    %455 = arith.xori %454, %c-1_i32_136 : i32
    %c0_i32_137 = arith.constant 0 : i32
    %456 = arith.cmpi ne, %455, %c0_i32_137 : i32
    cf.cond_br %456, ^bb100, ^bb101
  ^bb100:  // pred: ^bb99
    %457 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32_138 = arith.constant 1 : i32
    %458 = arith.addi %457, %c1_i32_138 : i32
    llvm.store %458, %1 : i32, !llvm.ptr
    %459 = llvm.load %10 : !llvm.ptr -> i32
    %460 = llvm.load %9 : !llvm.ptr -> i32
    %461 = llvm.load %12 : !llvm.ptr -> i32
    %c16_i64_139 = arith.constant 16 : i64
    %462 = arith.extui %461 : i32 to i64
    %463 = arith.addi %462, %c16_i64_139 : i64
    %464 = llvm.getelementptr %15[%463] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %465 = llvm.load %464 : !llvm.ptr -> i32
    %466 = arith.cmpi ult, %465, %35 : i32
    cf.cond_br %466, ^bb102, ^bb103
  ^bb101:  // pred: ^bb99
    %467 = llvm.load %6 : !llvm.ptr -> i32
    %468 = llvm.load %6 : !llvm.ptr -> i32
    %469 = arith.cmpi ult, %467, %468 : i32
    %470 = arith.extui %469 : i1 to i32
    cf.br ^bb2(%470 : i32)
  ^bb102:  // 2 preds: ^bb100, ^bb103
    %471 = llvm.getelementptr %34[%465] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %472 = llvm.load %471 : !llvm.ptr -> !llvm.ptr
    %473 = llvm.load %472 : !llvm.ptr -> i32
    %c0_i32_140 = arith.constant 0 : i32
    %474 = arith.cmpi eq, %473, %c0_i32_140 : i32
    cf.cond_br %474, ^bb105, ^bb104
  ^bb103:  // pred: ^bb100
    %c3_i32_141 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_141) : (i32) -> ()
    cf.br ^bb102
  ^bb104:  // 2 preds: ^bb102, ^bb105
    %475 = llvm.getelementptr %472[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %476 = llvm.getelementptr %472[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %477 = llvm.getelementptr %472[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %478 = llvm.load %475 : !llvm.ptr -> !llvm.ptr
    %479 = llvm.load %477 : !llvm.ptr -> !llvm.ptr
    %480 = llvm.load %478 : !llvm.ptr -> i32
    %c0_i32_142 = arith.constant 0 : i32
    %481 = arith.cmpi eq, %480, %c0_i32_142 : i32
    cf.cond_br %481, ^bb107, ^bb106
  ^bb105:  // pred: ^bb102
    %c4_i32_143 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_143) : (i32) -> ()
    cf.br ^bb104
  ^bb106:  // 2 preds: ^bb104, ^bb107
    %482 = llvm.load %476 : !llvm.ptr -> i32
    %483 = arith.cmpi ne, %25, %482 : i32
    cf.cond_br %483, ^bb109, ^bb108
  ^bb107:  // pred: ^bb104
    %c3_i32_144 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_144) : (i32) -> ()
    cf.br ^bb106
  ^bb108:  // 2 preds: ^bb106, ^bb109
    %484 = llvm.call %478(%479, %459, %460) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> i32
    %c0_i32_145 = arith.constant 0 : i32
    %485 = arith.cmpi eq, %484, %c0_i32_145 : i32
    %486 = arith.extui %485 : i1 to i32
    %c0_i32_146 = arith.constant 0 : i32
    %487 = arith.cmpi ne, %486, %c0_i32_146 : i32
    cf.cond_br %487, ^bb99, ^bb110
  ^bb109:  // pred: ^bb106
    %c5_i32_147 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_147) : (i32) -> ()
    cf.br ^bb108
  ^bb110:  // pred: ^bb108
    cf.br ^bb98
  }
  func.func @f137(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %c1_i64_7 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_7 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %8 : i32, !llvm.ptr
    %c1_i64_8 = arith.constant 1 : i64
    %9 = llvm.alloca %c1_i64_8 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %9 : i32, !llvm.ptr
    %10 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %11 = llvm.getelementptr %10[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %13 = llvm.load %1 : !llvm.ptr -> i32
    %14 = llvm.load %0 : !llvm.ptr -> i32
    %c3_i32 = arith.constant 3 : i32
    %15 = arith.addi %14, %c3_i32 : i32
    %c-4_i32 = arith.constant -4 : i32
    %16 = arith.andi %15, %c-4_i32 : i32
    llvm.store %16, %2 : i32, !llvm.ptr
    %17 = llvm.load %0 : !llvm.ptr -> i32
    %18 = arith.subi %16, %17 : i32
    llvm.store %18, %3 : i32, !llvm.ptr
    %19 = arith.cmpi ult, %13, %18 : i32
    %20 = arith.extui %19 : i1 to i32
    %c0_i32_9 = arith.constant 0 : i32
    %21 = arith.cmpi ne, %20, %c0_i32_9 : i32
    cf.cond_br %21, ^bb4, ^bb5
  ^bb2(%22: i32):  // 3 preds: ^bb3, ^bb32, ^bb36
    return %22 : i32
  ^bb3:  // 3 preds: ^bb24, ^bb37, ^bb44
    %23 = llvm.load %8 : !llvm.ptr -> i32
    cf.br ^bb2(%23 : i32)
  ^bb4:  // 2 preds: ^bb1, ^bb5
    %24 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32_10 = arith.constant 0 : i32
    %25 = arith.cmpi ne, %24, %c0_i32_10 : i32
    cf.cond_br %25, ^bb35, ^bb36
  ^bb5:  // pred: ^bb1
    %26 = llvm.load %1 : !llvm.ptr -> i32
    %27 = llvm.load %3 : !llvm.ptr -> i32
    %28 = arith.subi %26, %27 : i32
    llvm.store %28, %4 : i32, !llvm.ptr
    %c4_i32 = arith.constant 4 : i32
    %29 = arith.cmpi ult, %28, %c4_i32 : i32
    %30 = arith.extui %29 : i1 to i32
    %c0_i32_11 = arith.constant 0 : i32
    %31 = arith.cmpi ne, %30, %c0_i32_11 : i32
    cf.cond_br %31, ^bb4, ^bb6
  ^bb6:  // pred: ^bb5
    %32 = llvm.load %4 : !llvm.ptr -> i32
    %c3_i32_12 = arith.constant 3 : i32
    %33 = arith.andi %32, %c3_i32_12 : i32
    llvm.store %33, %5 : i32, !llvm.ptr
    %c0_i32_13 = arith.constant 0 : i32
    llvm.store %c0_i32_13, %6 : i32, !llvm.ptr
    %c0_i32_14 = arith.constant 0 : i32
    llvm.store %c0_i32_14, %1 : i32, !llvm.ptr
    %34 = llvm.load %2 : !llvm.ptr -> i32
    %35 = llvm.load %0 : !llvm.ptr -> i32
    %36 = arith.cmpi eq, %34, %35 : i32
    %37 = arith.extui %36 : i1 to i32
    llvm.store %37, %7 : i32, !llvm.ptr
    %c0_i32_15 = arith.constant 0 : i32
    %38 = arith.cmpi ne, %37, %c0_i32_15 : i32
    cf.cond_br %38, ^bb7, ^bb8
  ^bb7:  // 3 preds: ^bb6, ^bb9, ^bb16
    %39 = llvm.load %0 : !llvm.ptr -> i32
    %40 = llvm.load %3 : !llvm.ptr -> i32
    %41 = arith.addi %39, %40 : i32
    llvm.store %41, %9 : i32, !llvm.ptr
    %42 = llvm.load %5 : !llvm.ptr -> i32
    %c0_i32_16 = arith.constant 0 : i32
    %43 = arith.cmpi eq, %42, %c0_i32_16 : i32
    %44 = arith.extui %43 : i1 to i32
    %c0_i32_17 = arith.constant 0 : i32
    %45 = arith.cmpi ne, %44, %c0_i32_17 : i32
    cf.cond_br %45, ^bb19, ^bb20
  ^bb8:  // pred: ^bb6
    %c0_i32_18 = arith.constant 0 : i32
    llvm.store %c0_i32_18, %1 : i32, !llvm.ptr
    %46 = llvm.load %0 : !llvm.ptr -> i32
    %47 = llvm.load %2 : !llvm.ptr -> i32
    %48 = arith.subi %46, %47 : i32
    llvm.store %48, %8 : i32, !llvm.ptr
    %c-4_i32_19 = arith.constant -4 : i32
    %49 = arith.cmpi ule, %48, %c-4_i32_19 : i32
    %50 = arith.extui %49 : i1 to i32
    %c0_i32_20 = arith.constant 0 : i32
    %51 = arith.cmpi ne, %50, %c0_i32_20 : i32
    cf.cond_br %51, ^bb10, ^bb11
  ^bb9:  // 2 preds: ^bb11, ^bb12
    %52 = llvm.load %7 : !llvm.ptr -> i32
    %c0_i32_21 = arith.constant 0 : i32
    %53 = arith.cmpi ne, %52, %c0_i32_21 : i32
    cf.cond_br %53, ^bb7, ^bb15
  ^bb10:  // pred: ^bb8
    %c0_i32_22 = arith.constant 0 : i32
    llvm.store %c0_i32_22, %9 : i32, !llvm.ptr
    cf.br ^bb13
  ^bb11:  // pred: ^bb8
    %c0_i32_23 = arith.constant 0 : i32
    llvm.store %c0_i32_23, %9 : i32, !llvm.ptr
    cf.br ^bb9
  ^bb12:  // pred: ^bb14
    cf.br ^bb9
  ^bb13:  // 2 preds: ^bb10, ^bb13
    %54 = llvm.load %1 : !llvm.ptr -> i32
    %55 = llvm.load %0 : !llvm.ptr -> i32
    %56 = llvm.load %9 : !llvm.ptr -> i32
    %57 = arith.addi %55, %56 : i32
    llvm.store %57, %2 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %58 = arith.extui %57 : i32 to i64
    %59 = arith.addi %58, %c0_i64 : i64
    %60 = llvm.getelementptr %12[%59] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %61 = llvm.load %60 : !llvm.ptr -> i8
    %62 = arith.extsi %61 : i8 to i32
    %c-65_i32 = arith.constant -65 : i32
    %63 = arith.cmpi sgt, %62, %c-65_i32 : i32
    %64 = arith.extui %63 : i1 to i32
    %65 = arith.addi %54, %64 : i32
    %66 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %67 = arith.addi %66, %c1_i32 : i32
    %c0_i64_24 = arith.constant 0 : i64
    %68 = arith.extui %67 : i32 to i64
    %69 = arith.addi %68, %c0_i64_24 : i64
    %70 = llvm.getelementptr %12[%69] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %71 = llvm.load %70 : !llvm.ptr -> i8
    %72 = arith.extsi %71 : i8 to i32
    %c-65_i32_25 = arith.constant -65 : i32
    %73 = arith.cmpi sgt, %72, %c-65_i32_25 : i32
    %74 = arith.extui %73 : i1 to i32
    %75 = arith.addi %65, %74 : i32
    %76 = llvm.load %2 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %77 = arith.addi %76, %c2_i32 : i32
    %c0_i64_26 = arith.constant 0 : i64
    %78 = arith.extui %77 : i32 to i64
    %79 = arith.addi %78, %c0_i64_26 : i64
    %80 = llvm.getelementptr %12[%79] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %81 = llvm.load %80 : !llvm.ptr -> i8
    %82 = arith.extsi %81 : i8 to i32
    %c-65_i32_27 = arith.constant -65 : i32
    %83 = arith.cmpi sgt, %82, %c-65_i32_27 : i32
    %84 = arith.extui %83 : i1 to i32
    %85 = arith.addi %75, %84 : i32
    %86 = llvm.load %2 : !llvm.ptr -> i32
    %c3_i32_28 = arith.constant 3 : i32
    %87 = arith.addi %86, %c3_i32_28 : i32
    %c0_i64_29 = arith.constant 0 : i64
    %88 = arith.extui %87 : i32 to i64
    %89 = arith.addi %88, %c0_i64_29 : i64
    %90 = llvm.getelementptr %12[%89] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %91 = llvm.load %90 : !llvm.ptr -> i8
    %92 = arith.extsi %91 : i8 to i32
    %c-65_i32_30 = arith.constant -65 : i32
    %93 = arith.cmpi sgt, %92, %c-65_i32_30 : i32
    %94 = arith.extui %93 : i1 to i32
    %95 = arith.addi %85, %94 : i32
    llvm.store %95, %1 : i32, !llvm.ptr
    %96 = llvm.load %9 : !llvm.ptr -> i32
    %c4_i32_31 = arith.constant 4 : i32
    %97 = arith.addi %96, %c4_i32_31 : i32
    llvm.store %97, %9 : i32, !llvm.ptr
    %c0_i32_32 = arith.constant 0 : i32
    %98 = arith.cmpi ne, %97, %c0_i32_32 : i32
    cf.cond_br %98, ^bb13, ^bb14
  ^bb14:  // pred: ^bb13
    cf.br ^bb12
  ^bb15:  // pred: ^bb9
    %99 = llvm.load %0 : !llvm.ptr -> i32
    %100 = llvm.load %9 : !llvm.ptr -> i32
    %101 = arith.addi %99, %100 : i32
    llvm.store %101, %2 : i32, !llvm.ptr
    cf.br ^bb17
  ^bb16:  // pred: ^bb18
    cf.br ^bb7
  ^bb17:  // 2 preds: ^bb15, ^bb17
    %102 = llvm.load %1 : !llvm.ptr -> i32
    %103 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i64_33 = arith.constant 0 : i64
    %104 = arith.extui %103 : i32 to i64
    %105 = arith.addi %104, %c0_i64_33 : i64
    %106 = llvm.getelementptr %12[%105] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %107 = llvm.load %106 : !llvm.ptr -> i8
    %108 = arith.extsi %107 : i8 to i32
    %c-65_i32_34 = arith.constant -65 : i32
    %109 = arith.cmpi sgt, %108, %c-65_i32_34 : i32
    %110 = arith.extui %109 : i1 to i32
    %111 = arith.addi %102, %110 : i32
    llvm.store %111, %1 : i32, !llvm.ptr
    %112 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i32_35 = arith.constant 1 : i32
    %113 = arith.addi %112, %c1_i32_35 : i32
    llvm.store %113, %2 : i32, !llvm.ptr
    %114 = llvm.load %8 : !llvm.ptr -> i32
    %c1_i32_36 = arith.constant 1 : i32
    %115 = arith.addi %114, %c1_i32_36 : i32
    llvm.store %115, %8 : i32, !llvm.ptr
    %c0_i32_37 = arith.constant 0 : i32
    %116 = arith.cmpi ne, %115, %c0_i32_37 : i32
    cf.cond_br %116, ^bb17, ^bb18
  ^bb18:  // pred: ^bb17
    cf.br ^bb16
  ^bb19:  // 4 preds: ^bb7, ^bb20, ^bb21, ^bb22
    %117 = llvm.load %4 : !llvm.ptr -> i32
    %c2_i32_38 = arith.constant 2 : i32
    %c31_i32 = arith.constant 31 : i32
    %118 = arith.cmpi ule, %c2_i32_38, %c31_i32 : i32
    %119 = scf.if %118 -> (i32) {
      %419 = arith.shrui %117, %c2_i32_38 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    llvm.store %119, %3 : i32, !llvm.ptr
    %120 = llvm.load %6 : !llvm.ptr -> i32
    %121 = llvm.load %1 : !llvm.ptr -> i32
    %122 = arith.addi %120, %121 : i32
    llvm.store %122, %8 : i32, !llvm.ptr
    cf.br ^bb24
  ^bb20:  // pred: ^bb7
    %123 = llvm.load %9 : !llvm.ptr -> i32
    %124 = llvm.load %4 : !llvm.ptr -> i32
    %c-4_i32_39 = arith.constant -4 : i32
    %125 = arith.andi %124, %c-4_i32_39 : i32
    %126 = arith.addi %123, %125 : i32
    llvm.store %126, %2 : i32, !llvm.ptr
    %c0_i64_40 = arith.constant 0 : i64
    %127 = arith.extui %126 : i32 to i64
    %128 = arith.addi %127, %c0_i64_40 : i64
    %129 = llvm.getelementptr %12[%128] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %130 = llvm.load %129 : !llvm.ptr -> i8
    %131 = arith.extsi %130 : i8 to i32
    %c-65_i32_41 = arith.constant -65 : i32
    %132 = arith.cmpi sgt, %131, %c-65_i32_41 : i32
    %133 = arith.extui %132 : i1 to i32
    llvm.store %133, %6 : i32, !llvm.ptr
    %134 = llvm.load %5 : !llvm.ptr -> i32
    %c1_i32_42 = arith.constant 1 : i32
    %135 = arith.cmpi eq, %134, %c1_i32_42 : i32
    %136 = arith.extui %135 : i1 to i32
    %c0_i32_43 = arith.constant 0 : i32
    %137 = arith.cmpi ne, %136, %c0_i32_43 : i32
    cf.cond_br %137, ^bb19, ^bb21
  ^bb21:  // pred: ^bb20
    %138 = llvm.load %6 : !llvm.ptr -> i32
    %139 = llvm.load %2 : !llvm.ptr -> i32
    %c1_i64_44 = arith.constant 1 : i64
    %140 = arith.extui %139 : i32 to i64
    %141 = arith.addi %140, %c1_i64_44 : i64
    %142 = llvm.getelementptr %12[%141] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %143 = llvm.load %142 : !llvm.ptr -> i8
    %144 = arith.extsi %143 : i8 to i32
    %c-65_i32_45 = arith.constant -65 : i32
    %145 = arith.cmpi sgt, %144, %c-65_i32_45 : i32
    %146 = arith.extui %145 : i1 to i32
    %147 = arith.addi %138, %146 : i32
    llvm.store %147, %6 : i32, !llvm.ptr
    %148 = llvm.load %5 : !llvm.ptr -> i32
    %c2_i32_46 = arith.constant 2 : i32
    %149 = arith.cmpi eq, %148, %c2_i32_46 : i32
    %150 = arith.extui %149 : i1 to i32
    %c0_i32_47 = arith.constant 0 : i32
    %151 = arith.cmpi ne, %150, %c0_i32_47 : i32
    cf.cond_br %151, ^bb19, ^bb22
  ^bb22:  // pred: ^bb21
    %152 = llvm.load %6 : !llvm.ptr -> i32
    %153 = llvm.load %2 : !llvm.ptr -> i32
    %c2_i64 = arith.constant 2 : i64
    %154 = arith.extui %153 : i32 to i64
    %155 = arith.addi %154, %c2_i64 : i64
    %156 = llvm.getelementptr %12[%155] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %157 = llvm.load %156 : !llvm.ptr -> i8
    %158 = arith.extsi %157 : i8 to i32
    %c-65_i32_48 = arith.constant -65 : i32
    %159 = arith.cmpi sgt, %158, %c-65_i32_48 : i32
    %160 = arith.extui %159 : i1 to i32
    %161 = arith.addi %152, %160 : i32
    llvm.store %161, %6 : i32, !llvm.ptr
    cf.br ^bb19
  ^bb23:  // pred: ^bb31
    %162 = llvm.load %4 : !llvm.ptr -> i32
    %163 = llvm.load %6 : !llvm.ptr -> i32
    %c252_i32 = arith.constant 252 : i32
    %164 = arith.andi %163, %c252_i32 : i32
    %c2_i32_49 = arith.constant 2 : i32
    %c31_i32_50 = arith.constant 31 : i32
    %165 = arith.cmpi ule, %c2_i32_49, %c31_i32_50 : i32
    %166 = scf.if %165 -> (i32) {
      %419 = arith.shli %164, %c2_i32_49 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %167 = arith.addi %162, %166 : i32
    llvm.store %167, %2 : i32, !llvm.ptr
    %c0_i64_51 = arith.constant 0 : i64
    %168 = arith.extui %167 : i32 to i64
    %169 = arith.addi %168, %c0_i64_51 : i64
    %170 = llvm.getelementptr %12[%169] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %171 = llvm.load %170 : !llvm.ptr -> i32
    llvm.store %171, %1 : i32, !llvm.ptr
    %c-1_i32 = arith.constant -1 : i32
    %172 = arith.xori %171, %c-1_i32 : i32
    %c7_i32 = arith.constant 7 : i32
    %c31_i32_52 = arith.constant 31 : i32
    %173 = arith.cmpi ule, %c7_i32, %c31_i32_52 : i32
    %174 = scf.if %173 -> (i32) {
      %419 = arith.shrui %172, %c7_i32 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %175 = llvm.load %1 : !llvm.ptr -> i32
    %c6_i32 = arith.constant 6 : i32
    %c31_i32_53 = arith.constant 31 : i32
    %176 = arith.cmpi ule, %c6_i32, %c31_i32_53 : i32
    %177 = scf.if %176 -> (i32) {
      %419 = arith.shrui %175, %c6_i32 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %178 = arith.ori %174, %177 : i32
    %c16843009_i32 = arith.constant 16843009 : i32
    %179 = arith.andi %178, %c16843009_i32 : i32
    llvm.store %179, %1 : i32, !llvm.ptr
    %180 = llvm.load %7 : !llvm.ptr -> i32
    %c1_i32_54 = arith.constant 1 : i32
    %181 = arith.cmpi eq, %180, %c1_i32_54 : i32
    %182 = arith.extui %181 : i1 to i32
    %c0_i32_55 = arith.constant 0 : i32
    %183 = arith.cmpi ne, %182, %c0_i32_55 : i32
    cf.cond_br %183, ^bb32, ^bb33
  ^bb24:  // 2 preds: ^bb19, ^bb26
    %184 = llvm.load %9 : !llvm.ptr -> i32
    llvm.store %184, %4 : i32, !llvm.ptr
    %185 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_56 = arith.constant 0 : i32
    %186 = arith.cmpi eq, %185, %c0_i32_56 : i32
    %187 = arith.extui %186 : i1 to i32
    %c0_i32_57 = arith.constant 0 : i32
    %188 = arith.cmpi ne, %187, %c0_i32_57 : i32
    cf.cond_br %188, ^bb3, ^bb25
  ^bb25:  // pred: ^bb24
    %189 = llvm.load %3 : !llvm.ptr -> i32
    %c192_i32 = arith.constant 192 : i32
    %190 = llvm.load %3 : !llvm.ptr -> i32
    %c192_i32_58 = arith.constant 192 : i32
    %191 = arith.cmpi ult, %190, %c192_i32_58 : i32
    %192 = arith.extui %191 : i1 to i32
    %c0_i32_59 = arith.constant 0 : i32
    %193 = arith.cmpi ne, %192, %c0_i32_59 : i32
    %194 = arith.select %193, %189, %c192_i32 : i32
    llvm.store %194, %6 : i32, !llvm.ptr
    %c3_i32_60 = arith.constant 3 : i32
    %195 = arith.andi %194, %c3_i32_60 : i32
    llvm.store %195, %7 : i32, !llvm.ptr
    %196 = llvm.load %6 : !llvm.ptr -> i32
    %c2_i32_61 = arith.constant 2 : i32
    %c31_i32_62 = arith.constant 31 : i32
    %197 = arith.cmpi ule, %c2_i32_61, %c31_i32_62 : i32
    %198 = scf.if %197 -> (i32) {
      %419 = arith.shli %196, %c2_i32_61 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    llvm.store %198, %5 : i32, !llvm.ptr
    %c0_i32_63 = arith.constant 0 : i32
    llvm.store %c0_i32_63, %2 : i32, !llvm.ptr
    %199 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i32_64 = arith.constant 4 : i32
    %200 = arith.cmpi ult, %199, %c4_i32_64 : i32
    %201 = arith.extui %200 : i1 to i32
    %c0_i32_65 = arith.constant 0 : i32
    %202 = arith.cmpi ne, %201, %c0_i32_65 : i32
    cf.cond_br %202, ^bb26, ^bb27
  ^bb26:  // 2 preds: ^bb25, ^bb28
    %203 = llvm.load %3 : !llvm.ptr -> i32
    %204 = llvm.load %6 : !llvm.ptr -> i32
    %205 = arith.subi %203, %204 : i32
    llvm.store %205, %3 : i32, !llvm.ptr
    %206 = llvm.load %4 : !llvm.ptr -> i32
    %207 = llvm.load %5 : !llvm.ptr -> i32
    %208 = arith.addi %206, %207 : i32
    llvm.store %208, %9 : i32, !llvm.ptr
    %209 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %c31_i32_66 = arith.constant 31 : i32
    %210 = arith.cmpi ule, %c8_i32, %c31_i32_66 : i32
    %211 = scf.if %210 -> (i32) {
      %419 = arith.shrui %209, %c8_i32 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %c16711935_i32 = arith.constant 16711935 : i32
    %212 = arith.andi %211, %c16711935_i32 : i32
    %213 = llvm.load %2 : !llvm.ptr -> i32
    %c16711935_i32_67 = arith.constant 16711935 : i32
    %214 = arith.andi %213, %c16711935_i32_67 : i32
    %215 = arith.addi %212, %214 : i32
    %c65537_i32 = arith.constant 65537 : i32
    %216 = arith.muli %215, %c65537_i32 : i32
    %c16_i32 = arith.constant 16 : i32
    %c31_i32_68 = arith.constant 31 : i32
    %217 = arith.cmpi ule, %c16_i32, %c31_i32_68 : i32
    %218 = scf.if %217 -> (i32) {
      %419 = arith.shrui %216, %c16_i32 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %219 = llvm.load %8 : !llvm.ptr -> i32
    %220 = arith.addi %218, %219 : i32
    llvm.store %220, %8 : i32, !llvm.ptr
    %221 = llvm.load %7 : !llvm.ptr -> i32
    %c0_i32_69 = arith.constant 0 : i32
    %222 = arith.cmpi eq, %221, %c0_i32_69 : i32
    %223 = arith.extui %222 : i1 to i32
    %c0_i32_70 = arith.constant 0 : i32
    %224 = arith.cmpi ne, %223, %c0_i32_70 : i32
    cf.cond_br %224, ^bb24, ^bb31
  ^bb27:  // pred: ^bb25
    %225 = llvm.load %4 : !llvm.ptr -> i32
    %226 = llvm.load %5 : !llvm.ptr -> i32
    %c1008_i32 = arith.constant 1008 : i32
    %227 = arith.andi %226, %c1008_i32 : i32
    %228 = arith.addi %225, %227 : i32
    llvm.store %228, %0 : i32, !llvm.ptr
    %c0_i32_71 = arith.constant 0 : i32
    llvm.store %c0_i32_71, %2 : i32, !llvm.ptr
    %229 = llvm.load %4 : !llvm.ptr -> i32
    llvm.store %229, %1 : i32, !llvm.ptr
    cf.br ^bb29
  ^bb28:  // pred: ^bb30
    cf.br ^bb26
  ^bb29:  // 2 preds: ^bb27, ^bb29
    %230 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %231 = arith.extui %230 : i32 to i64
    %232 = arith.addi %231, %c12_i64 : i64
    %233 = llvm.getelementptr %12[%232] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %234 = llvm.load %233 : !llvm.ptr -> i32
    llvm.store %234, %9 : i32, !llvm.ptr
    %c-1_i32_72 = arith.constant -1 : i32
    %235 = arith.xori %234, %c-1_i32_72 : i32
    %c7_i32_73 = arith.constant 7 : i32
    %c31_i32_74 = arith.constant 31 : i32
    %236 = arith.cmpi ule, %c7_i32_73, %c31_i32_74 : i32
    %237 = scf.if %236 -> (i32) {
      %419 = arith.shrui %235, %c7_i32_73 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %238 = llvm.load %9 : !llvm.ptr -> i32
    %c6_i32_75 = arith.constant 6 : i32
    %c31_i32_76 = arith.constant 31 : i32
    %239 = arith.cmpi ule, %c6_i32_75, %c31_i32_76 : i32
    %240 = scf.if %239 -> (i32) {
      %419 = arith.shrui %238, %c6_i32_75 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %241 = arith.ori %237, %240 : i32
    %c16843009_i32_77 = arith.constant 16843009 : i32
    %242 = arith.andi %241, %c16843009_i32_77 : i32
    %243 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i64 = arith.constant 8 : i64
    %244 = arith.extui %243 : i32 to i64
    %245 = arith.addi %244, %c8_i64 : i64
    %246 = llvm.getelementptr %12[%245] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %247 = llvm.load %246 : !llvm.ptr -> i32
    llvm.store %247, %9 : i32, !llvm.ptr
    %c-1_i32_78 = arith.constant -1 : i32
    %248 = arith.xori %247, %c-1_i32_78 : i32
    %c7_i32_79 = arith.constant 7 : i32
    %c31_i32_80 = arith.constant 31 : i32
    %249 = arith.cmpi ule, %c7_i32_79, %c31_i32_80 : i32
    %250 = scf.if %249 -> (i32) {
      %419 = arith.shrui %248, %c7_i32_79 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %251 = llvm.load %9 : !llvm.ptr -> i32
    %c6_i32_81 = arith.constant 6 : i32
    %c31_i32_82 = arith.constant 31 : i32
    %252 = arith.cmpi ule, %c6_i32_81, %c31_i32_82 : i32
    %253 = scf.if %252 -> (i32) {
      %419 = arith.shrui %251, %c6_i32_81 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %254 = arith.ori %250, %253 : i32
    %c16843009_i32_83 = arith.constant 16843009 : i32
    %255 = arith.andi %254, %c16843009_i32_83 : i32
    %256 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %257 = arith.extui %256 : i32 to i64
    %258 = arith.addi %257, %c4_i64 : i64
    %259 = llvm.getelementptr %12[%258] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %260 = llvm.load %259 : !llvm.ptr -> i32
    llvm.store %260, %9 : i32, !llvm.ptr
    %c-1_i32_84 = arith.constant -1 : i32
    %261 = arith.xori %260, %c-1_i32_84 : i32
    %c7_i32_85 = arith.constant 7 : i32
    %c31_i32_86 = arith.constant 31 : i32
    %262 = arith.cmpi ule, %c7_i32_85, %c31_i32_86 : i32
    %263 = scf.if %262 -> (i32) {
      %419 = arith.shrui %261, %c7_i32_85 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %264 = llvm.load %9 : !llvm.ptr -> i32
    %c6_i32_87 = arith.constant 6 : i32
    %c31_i32_88 = arith.constant 31 : i32
    %265 = arith.cmpi ule, %c6_i32_87, %c31_i32_88 : i32
    %266 = scf.if %265 -> (i32) {
      %419 = arith.shrui %264, %c6_i32_87 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %267 = arith.ori %263, %266 : i32
    %c16843009_i32_89 = arith.constant 16843009 : i32
    %268 = arith.andi %267, %c16843009_i32_89 : i32
    %269 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_90 = arith.constant 0 : i64
    %270 = arith.extui %269 : i32 to i64
    %271 = arith.addi %270, %c0_i64_90 : i64
    %272 = llvm.getelementptr %12[%271] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %273 = llvm.load %272 : !llvm.ptr -> i32
    llvm.store %273, %9 : i32, !llvm.ptr
    %c-1_i32_91 = arith.constant -1 : i32
    %274 = arith.xori %273, %c-1_i32_91 : i32
    %c7_i32_92 = arith.constant 7 : i32
    %c31_i32_93 = arith.constant 31 : i32
    %275 = arith.cmpi ule, %c7_i32_92, %c31_i32_93 : i32
    %276 = scf.if %275 -> (i32) {
      %419 = arith.shrui %274, %c7_i32_92 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %277 = llvm.load %9 : !llvm.ptr -> i32
    %c6_i32_94 = arith.constant 6 : i32
    %c31_i32_95 = arith.constant 31 : i32
    %278 = arith.cmpi ule, %c6_i32_94, %c31_i32_95 : i32
    %279 = scf.if %278 -> (i32) {
      %419 = arith.shrui %277, %c6_i32_94 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %280 = arith.ori %276, %279 : i32
    %c16843009_i32_96 = arith.constant 16843009 : i32
    %281 = arith.andi %280, %c16843009_i32_96 : i32
    %282 = llvm.load %2 : !llvm.ptr -> i32
    %283 = arith.addi %281, %282 : i32
    %284 = arith.addi %268, %283 : i32
    %285 = arith.addi %255, %284 : i32
    %286 = arith.addi %242, %285 : i32
    llvm.store %286, %2 : i32, !llvm.ptr
    %287 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i32_97 = arith.constant 16 : i32
    %288 = arith.addi %287, %c16_i32_97 : i32
    llvm.store %288, %1 : i32, !llvm.ptr
    %289 = llvm.load %0 : !llvm.ptr -> i32
    %290 = arith.cmpi eq, %288, %289 : i32
    %291 = arith.extui %290 : i1 to i32
    %c-1_i32_98 = arith.constant -1 : i32
    %292 = arith.xori %291, %c-1_i32_98 : i32
    %c0_i32_99 = arith.constant 0 : i32
    %293 = arith.cmpi ne, %292, %c0_i32_99 : i32
    cf.cond_br %293, ^bb29, ^bb30
  ^bb30:  // pred: ^bb29
    cf.br ^bb28
  ^bb31:  // pred: ^bb26
    cf.br ^bb23
  ^bb32:  // 3 preds: ^bb23, ^bb33, ^bb34
    %294 = llvm.load %1 : !llvm.ptr -> i32
    %c8_i32_100 = arith.constant 8 : i32
    %c31_i32_101 = arith.constant 31 : i32
    %295 = arith.cmpi ule, %c8_i32_100, %c31_i32_101 : i32
    %296 = scf.if %295 -> (i32) {
      %419 = arith.shrui %294, %c8_i32_100 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %c459007_i32 = arith.constant 459007 : i32
    %297 = arith.andi %296, %c459007_i32 : i32
    %298 = llvm.load %1 : !llvm.ptr -> i32
    %c16711935_i32_102 = arith.constant 16711935 : i32
    %299 = arith.andi %298, %c16711935_i32_102 : i32
    %300 = arith.addi %297, %299 : i32
    %c65537_i32_103 = arith.constant 65537 : i32
    %301 = arith.muli %300, %c65537_i32_103 : i32
    %c16_i32_104 = arith.constant 16 : i32
    %c31_i32_105 = arith.constant 31 : i32
    %302 = arith.cmpi ule, %c16_i32_104, %c31_i32_105 : i32
    %303 = scf.if %302 -> (i32) {
      %419 = arith.shrui %301, %c16_i32_104 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %304 = llvm.load %8 : !llvm.ptr -> i32
    %305 = arith.addi %303, %304 : i32
    cf.br ^bb2(%305 : i32)
  ^bb33:  // pred: ^bb23
    %306 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i64_106 = arith.constant 4 : i64
    %307 = arith.extui %306 : i32 to i64
    %308 = arith.addi %307, %c4_i64_106 : i64
    %309 = llvm.getelementptr %12[%308] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %310 = llvm.load %309 : !llvm.ptr -> i32
    llvm.store %310, %9 : i32, !llvm.ptr
    %c-1_i32_107 = arith.constant -1 : i32
    %311 = arith.xori %310, %c-1_i32_107 : i32
    %c7_i32_108 = arith.constant 7 : i32
    %c31_i32_109 = arith.constant 31 : i32
    %312 = arith.cmpi ule, %c7_i32_108, %c31_i32_109 : i32
    %313 = scf.if %312 -> (i32) {
      %419 = arith.shrui %311, %c7_i32_108 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %314 = llvm.load %9 : !llvm.ptr -> i32
    %c6_i32_110 = arith.constant 6 : i32
    %c31_i32_111 = arith.constant 31 : i32
    %315 = arith.cmpi ule, %c6_i32_110, %c31_i32_111 : i32
    %316 = scf.if %315 -> (i32) {
      %419 = arith.shrui %314, %c6_i32_110 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %317 = arith.ori %313, %316 : i32
    %c16843009_i32_112 = arith.constant 16843009 : i32
    %318 = arith.andi %317, %c16843009_i32_112 : i32
    %319 = llvm.load %1 : !llvm.ptr -> i32
    %320 = arith.addi %318, %319 : i32
    llvm.store %320, %1 : i32, !llvm.ptr
    %321 = llvm.load %7 : !llvm.ptr -> i32
    %c2_i32_113 = arith.constant 2 : i32
    %322 = arith.cmpi eq, %321, %c2_i32_113 : i32
    %323 = arith.extui %322 : i1 to i32
    %c0_i32_114 = arith.constant 0 : i32
    %324 = arith.cmpi ne, %323, %c0_i32_114 : i32
    cf.cond_br %324, ^bb32, ^bb34
  ^bb34:  // pred: ^bb33
    %325 = llvm.load %2 : !llvm.ptr -> i32
    %c8_i64_115 = arith.constant 8 : i64
    %326 = arith.extui %325 : i32 to i64
    %327 = arith.addi %326, %c8_i64_115 : i64
    %328 = llvm.getelementptr %12[%327] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %329 = llvm.load %328 : !llvm.ptr -> i32
    llvm.store %329, %2 : i32, !llvm.ptr
    %c-1_i32_116 = arith.constant -1 : i32
    %330 = arith.xori %329, %c-1_i32_116 : i32
    %c7_i32_117 = arith.constant 7 : i32
    %c31_i32_118 = arith.constant 31 : i32
    %331 = arith.cmpi ule, %c7_i32_117, %c31_i32_118 : i32
    %332 = scf.if %331 -> (i32) {
      %419 = arith.shrui %330, %c7_i32_117 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %333 = llvm.load %2 : !llvm.ptr -> i32
    %c6_i32_119 = arith.constant 6 : i32
    %c31_i32_120 = arith.constant 31 : i32
    %334 = arith.cmpi ule, %c6_i32_119, %c31_i32_120 : i32
    %335 = scf.if %334 -> (i32) {
      %419 = arith.shrui %333, %c6_i32_119 : i32
      scf.yield %419 : i32
    } else {
      %c0_i32_152 = arith.constant 0 : i32
      scf.yield %c0_i32_152 : i32
    }
    %336 = arith.ori %332, %335 : i32
    %c16843009_i32_121 = arith.constant 16843009 : i32
    %337 = arith.andi %336, %c16843009_i32_121 : i32
    %338 = llvm.load %1 : !llvm.ptr -> i32
    %339 = arith.addi %337, %338 : i32
    llvm.store %339, %1 : i32, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb4
    %340 = llvm.load %1 : !llvm.ptr -> i32
    %c3_i32_122 = arith.constant 3 : i32
    %341 = arith.andi %340, %c3_i32_122 : i32
    llvm.store %341, %9 : i32, !llvm.ptr
    %342 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i32_123 = arith.constant 4 : i32
    %343 = arith.cmpi uge, %342, %c4_i32_123 : i32
    %344 = arith.extui %343 : i1 to i32
    %c0_i32_124 = arith.constant 0 : i32
    %345 = arith.cmpi ne, %344, %c0_i32_124 : i32
    cf.cond_br %345, ^bb38, ^bb39
  ^bb36:  // pred: ^bb4
    %c0_i32_125 = arith.constant 0 : i32
    cf.br ^bb2(%c0_i32_125 : i32)
  ^bb37:  // 2 preds: ^bb39, ^bb40
    %346 = llvm.load %9 : !llvm.ptr -> i32
    %c0_i32_126 = arith.constant 0 : i32
    %347 = arith.cmpi eq, %346, %c0_i32_126 : i32
    %348 = arith.extui %347 : i1 to i32
    %c0_i32_127 = arith.constant 0 : i32
    %349 = arith.cmpi ne, %348, %c0_i32_127 : i32
    cf.cond_br %349, ^bb3, ^bb43
  ^bb38:  // pred: ^bb35
    %350 = llvm.load %1 : !llvm.ptr -> i32
    %c-4_i32_128 = arith.constant -4 : i32
    %351 = arith.andi %350, %c-4_i32_128 : i32
    llvm.store %351, %3 : i32, !llvm.ptr
    %c0_i32_129 = arith.constant 0 : i32
    llvm.store %c0_i32_129, %8 : i32, !llvm.ptr
    %c0_i32_130 = arith.constant 0 : i32
    llvm.store %c0_i32_130, %2 : i32, !llvm.ptr
    cf.br ^bb41
  ^bb39:  // pred: ^bb35
    %c0_i32_131 = arith.constant 0 : i32
    llvm.store %c0_i32_131, %8 : i32, !llvm.ptr
    %c0_i32_132 = arith.constant 0 : i32
    llvm.store %c0_i32_132, %2 : i32, !llvm.ptr
    cf.br ^bb37
  ^bb40:  // pred: ^bb42
    cf.br ^bb37
  ^bb41:  // 2 preds: ^bb38, ^bb41
    %352 = llvm.load %8 : !llvm.ptr -> i32
    %353 = llvm.load %0 : !llvm.ptr -> i32
    %354 = llvm.load %2 : !llvm.ptr -> i32
    %355 = arith.addi %353, %354 : i32
    llvm.store %355, %1 : i32, !llvm.ptr
    %c0_i64_133 = arith.constant 0 : i64
    %356 = arith.extui %355 : i32 to i64
    %357 = arith.addi %356, %c0_i64_133 : i64
    %358 = llvm.getelementptr %12[%357] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %359 = llvm.load %358 : !llvm.ptr -> i8
    %360 = arith.extsi %359 : i8 to i32
    %c-65_i32_134 = arith.constant -65 : i32
    %361 = arith.cmpi sgt, %360, %c-65_i32_134 : i32
    %362 = arith.extui %361 : i1 to i32
    %363 = arith.addi %352, %362 : i32
    %364 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32_135 = arith.constant 1 : i32
    %365 = arith.addi %364, %c1_i32_135 : i32
    %c0_i64_136 = arith.constant 0 : i64
    %366 = arith.extui %365 : i32 to i64
    %367 = arith.addi %366, %c0_i64_136 : i64
    %368 = llvm.getelementptr %12[%367] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %369 = llvm.load %368 : !llvm.ptr -> i8
    %370 = arith.extsi %369 : i8 to i32
    %c-65_i32_137 = arith.constant -65 : i32
    %371 = arith.cmpi sgt, %370, %c-65_i32_137 : i32
    %372 = arith.extui %371 : i1 to i32
    %373 = arith.addi %363, %372 : i32
    %374 = llvm.load %1 : !llvm.ptr -> i32
    %c2_i32_138 = arith.constant 2 : i32
    %375 = arith.addi %374, %c2_i32_138 : i32
    %c0_i64_139 = arith.constant 0 : i64
    %376 = arith.extui %375 : i32 to i64
    %377 = arith.addi %376, %c0_i64_139 : i64
    %378 = llvm.getelementptr %12[%377] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %379 = llvm.load %378 : !llvm.ptr -> i8
    %380 = arith.extsi %379 : i8 to i32
    %c-65_i32_140 = arith.constant -65 : i32
    %381 = arith.cmpi sgt, %380, %c-65_i32_140 : i32
    %382 = arith.extui %381 : i1 to i32
    %383 = arith.addi %373, %382 : i32
    %384 = llvm.load %1 : !llvm.ptr -> i32
    %c3_i32_141 = arith.constant 3 : i32
    %385 = arith.addi %384, %c3_i32_141 : i32
    %c0_i64_142 = arith.constant 0 : i64
    %386 = arith.extui %385 : i32 to i64
    %387 = arith.addi %386, %c0_i64_142 : i64
    %388 = llvm.getelementptr %12[%387] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %389 = llvm.load %388 : !llvm.ptr -> i8
    %390 = arith.extsi %389 : i8 to i32
    %c-65_i32_143 = arith.constant -65 : i32
    %391 = arith.cmpi sgt, %390, %c-65_i32_143 : i32
    %392 = arith.extui %391 : i1 to i32
    %393 = arith.addi %383, %392 : i32
    llvm.store %393, %8 : i32, !llvm.ptr
    %394 = llvm.load %3 : !llvm.ptr -> i32
    %395 = llvm.load %2 : !llvm.ptr -> i32
    %c4_i32_144 = arith.constant 4 : i32
    %396 = arith.addi %395, %c4_i32_144 : i32
    llvm.store %396, %2 : i32, !llvm.ptr
    %397 = arith.cmpi eq, %394, %396 : i32
    %398 = arith.extui %397 : i1 to i32
    %c-1_i32_145 = arith.constant -1 : i32
    %399 = arith.xori %398, %c-1_i32_145 : i32
    %c0_i32_146 = arith.constant 0 : i32
    %400 = arith.cmpi ne, %399, %c0_i32_146 : i32
    cf.cond_br %400, ^bb41, ^bb42
  ^bb42:  // pred: ^bb41
    cf.br ^bb40
  ^bb43:  // pred: ^bb37
    %401 = llvm.load %0 : !llvm.ptr -> i32
    %402 = llvm.load %2 : !llvm.ptr -> i32
    %403 = arith.addi %401, %402 : i32
    llvm.store %403, %1 : i32, !llvm.ptr
    cf.br ^bb45
  ^bb44:  // pred: ^bb46
    cf.br ^bb3
  ^bb45:  // 2 preds: ^bb43, ^bb45
    %404 = llvm.load %8 : !llvm.ptr -> i32
    %405 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_147 = arith.constant 0 : i64
    %406 = arith.extui %405 : i32 to i64
    %407 = arith.addi %406, %c0_i64_147 : i64
    %408 = llvm.getelementptr %12[%407] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %409 = llvm.load %408 : !llvm.ptr -> i8
    %410 = arith.extsi %409 : i8 to i32
    %c-65_i32_148 = arith.constant -65 : i32
    %411 = arith.cmpi sgt, %410, %c-65_i32_148 : i32
    %412 = arith.extui %411 : i1 to i32
    %413 = arith.addi %404, %412 : i32
    llvm.store %413, %8 : i32, !llvm.ptr
    %414 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32_149 = arith.constant 1 : i32
    %415 = arith.addi %414, %c1_i32_149 : i32
    llvm.store %415, %1 : i32, !llvm.ptr
    %416 = llvm.load %9 : !llvm.ptr -> i32
    %c-1_i32_150 = arith.constant -1 : i32
    %417 = arith.addi %416, %c-1_i32_150 : i32
    llvm.store %417, %9 : i32, !llvm.ptr
    %c0_i32_151 = arith.constant 0 : i32
    %418 = arith.cmpi ne, %417, %c0_i32_151 : i32
    cf.cond_br %418, ^bb45, ^bb46
  ^bb46:  // pred: ^bb45
    cf.br ^bb44
  }
  func.func @f138(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg4, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg5, %4 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    %9 = llvm.getelementptr %arg0[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> i32
    %11 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    %14 = llvm.load %12 : !llvm.ptr -> i32
    %15 = llvm.getelementptr %arg0[12] : (!llvm.ptr) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i32
    %17 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    %18 = llvm.load %12 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %19 = llvm.load %2 : !llvm.ptr -> i32
    %c1114112_i32 = arith.constant 1114112 : i32
    %20 = arith.cmpi eq, %19, %c1114112_i32 : i32
    %21 = arith.extui %20 : i1 to i32
    %c0_i32_5 = arith.constant 0 : i32
    %22 = arith.cmpi ne, %21, %c0_i32_5 : i32
    cf.cond_br %22, ^bb5, ^bb6
  ^bb2(%23: i32):  // 2 preds: ^bb4, ^bb23
    return %23 : i32
  ^bb3:  // pred: ^bb5
    %24 = llvm.load %0 : !llvm.ptr -> i32
    %25 = llvm.load %3 : !llvm.ptr -> i32
    %26 = llvm.load %4 : !llvm.ptr -> i32
    %27 = llvm.load %1 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %28 = arith.extui %27 : i32 to i64
    %29 = arith.addi %28, %c12_i64 : i64
    %30 = llvm.getelementptr %8[%29] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %31 = llvm.load %30 : !llvm.ptr -> i32
    %32 = arith.cmpi ult, %31, %18 : i32
    cf.cond_br %32, ^bb17, ^bb18
  ^bb4:  // 2 preds: ^bb13, ^bb16
    %33 = llvm.load %5 : !llvm.ptr -> i32
    cf.br ^bb2(%33 : i32)
  ^bb5:  // 2 preds: ^bb1, ^bb15
    %34 = llvm.load %3 : !llvm.ptr -> i32
    %c0_i32_6 = arith.constant 0 : i32
    %35 = arith.cmpi ne, %34, %c0_i32_6 : i32
    cf.cond_br %35, ^bb3, ^bb16
  ^bb6:  // pred: ^bb1
    %c1_i32 = arith.constant 1 : i32
    llvm.store %c1_i32, %5 : i32, !llvm.ptr
    %36 = llvm.load %0 : !llvm.ptr -> i32
    %37 = llvm.load %2 : !llvm.ptr -> i32
    %38 = llvm.load %1 : !llvm.ptr -> i32
    %c16_i64 = arith.constant 16 : i64
    %39 = arith.extui %38 : i32 to i64
    %40 = arith.addi %39, %c16_i64 : i64
    %41 = llvm.getelementptr %8[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %42 = llvm.load %41 : !llvm.ptr -> i32
    %43 = arith.cmpi ult, %42, %14 : i32
    cf.cond_br %43, ^bb7, ^bb8
  ^bb7:  // 2 preds: ^bb6, ^bb8
    %44 = llvm.getelementptr %13[%42] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.load %45 : !llvm.ptr -> i32
    %c0_i32_7 = arith.constant 0 : i32
    %47 = arith.cmpi eq, %46, %c0_i32_7 : i32
    cf.cond_br %47, ^bb10, ^bb9
  ^bb8:  // pred: ^bb6
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb7
  ^bb9:  // 2 preds: ^bb7, ^bb10
    %48 = llvm.getelementptr %45[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %49 = llvm.getelementptr %45[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %50 = llvm.getelementptr %45[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %51 = llvm.load %48 : !llvm.ptr -> !llvm.ptr
    %52 = llvm.load %50 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.load %51 : !llvm.ptr -> i32
    %c0_i32_8 = arith.constant 0 : i32
    %54 = arith.cmpi eq, %53, %c0_i32_8 : i32
    cf.cond_br %54, ^bb12, ^bb11
  ^bb10:  // pred: ^bb7
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb9
  ^bb11:  // 2 preds: ^bb9, ^bb12
    %55 = llvm.load %49 : !llvm.ptr -> i32
    %56 = arith.cmpi ne, %10, %55 : i32
    cf.cond_br %56, ^bb14, ^bb13
  ^bb12:  // pred: ^bb9
    %c3_i32_9 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_9) : (i32) -> ()
    cf.br ^bb11
  ^bb13:  // 2 preds: ^bb11, ^bb14
    %57 = llvm.call %51(%52, %36, %37) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32) -> i32
    %c0_i32_10 = arith.constant 0 : i32
    %58 = arith.cmpi ne, %57, %c0_i32_10 : i32
    cf.cond_br %58, ^bb4, ^bb15
  ^bb14:  // pred: ^bb11
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb13
  ^bb15:  // pred: ^bb13
    cf.br ^bb5
  ^bb16:  // pred: ^bb5
    %c0_i32_11 = arith.constant 0 : i32
    llvm.store %c0_i32_11, %5 : i32, !llvm.ptr
    cf.br ^bb4
  ^bb17:  // 2 preds: ^bb3, ^bb18
    %59 = llvm.getelementptr %17[%31] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %60 = llvm.load %59 : !llvm.ptr -> !llvm.ptr
    %61 = llvm.load %60 : !llvm.ptr -> i32
    %c0_i32_12 = arith.constant 0 : i32
    %62 = arith.cmpi eq, %61, %c0_i32_12 : i32
    cf.cond_br %62, ^bb20, ^bb19
  ^bb18:  // pred: ^bb3
    %c3_i32_13 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_13) : (i32) -> ()
    cf.br ^bb17
  ^bb19:  // 2 preds: ^bb17, ^bb20
    %63 = llvm.getelementptr %60[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %64 = llvm.getelementptr %60[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.getelementptr %60[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %66 = llvm.load %63 : !llvm.ptr -> !llvm.ptr
    %67 = llvm.load %65 : !llvm.ptr -> !llvm.ptr
    %68 = llvm.load %66 : !llvm.ptr -> i32
    %c0_i32_14 = arith.constant 0 : i32
    %69 = arith.cmpi eq, %68, %c0_i32_14 : i32
    cf.cond_br %69, ^bb22, ^bb21
  ^bb20:  // pred: ^bb17
    %c4_i32_15 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32_15) : (i32) -> ()
    cf.br ^bb19
  ^bb21:  // 2 preds: ^bb19, ^bb22
    %70 = llvm.load %64 : !llvm.ptr -> i32
    %71 = arith.cmpi ne, %16, %70 : i32
    cf.cond_br %71, ^bb24, ^bb23
  ^bb22:  // pred: ^bb19
    %c3_i32_16 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_16) : (i32) -> ()
    cf.br ^bb21
  ^bb23:  // 2 preds: ^bb21, ^bb24
    %72 = llvm.call %66(%67, %24, %25, %26) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%72 : i32)
  ^bb24:  // pred: ^bb21
    %c5_i32_17 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32_17) : (i32) -> ()
    cf.br ^bb23
  }
  func.func @f139(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %3 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %4 = llvm.getelementptr %3[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %5 = llvm.load %4 : !llvm.ptr -> !llvm.ptr
    %6 = llvm.getelementptr %arg0[12] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.load %6 : !llvm.ptr -> i32
    %8 = llvm.getelementptr %arg0[896] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.getelementptr %arg0[904] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.load %9 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %12 = llvm.load %0 : !llvm.ptr -> i32
    %c20_i64 = arith.constant 20 : i64
    %13 = arith.extui %12 : i32 to i64
    %14 = arith.addi %13, %c20_i64 : i64
    %15 = llvm.getelementptr %5[%14] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %16 = llvm.load %15 : !llvm.ptr -> i32
    %17 = llvm.load %1 : !llvm.ptr -> i32
    %18 = llvm.load %2 : !llvm.ptr -> i32
    %19 = llvm.load %0 : !llvm.ptr -> i32
    %c24_i64 = arith.constant 24 : i64
    %20 = arith.extui %19 : i32 to i64
    %21 = arith.addi %20, %c24_i64 : i64
    %22 = llvm.getelementptr %5[%21] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %23 = llvm.load %22 : !llvm.ptr -> i32
    %c12_i64 = arith.constant 12 : i64
    %24 = arith.extui %23 : i32 to i64
    %25 = arith.addi %24, %c12_i64 : i64
    %26 = llvm.getelementptr %5[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %27 = llvm.load %26 : !llvm.ptr -> i32
    %28 = arith.cmpi ult, %27, %11 : i32
    cf.cond_br %28, ^bb3, ^bb4
  ^bb2(%29: i32):  // pred: ^bb9
    return %29 : i32
  ^bb3:  // 2 preds: ^bb1, ^bb4
    %30 = llvm.getelementptr %10[%27] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %31 = llvm.load %30 : !llvm.ptr -> !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %33 = arith.cmpi eq, %32, %c0_i32 : i32
    cf.cond_br %33, ^bb6, ^bb5
  ^bb4:  // pred: ^bb1
    %c3_i32 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32) : (i32) -> ()
    cf.br ^bb3
  ^bb5:  // 2 preds: ^bb3, ^bb6
    %34 = llvm.getelementptr %31[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %35 = llvm.getelementptr %31[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %36 = llvm.getelementptr %31[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %37 = llvm.load %34 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %39 = llvm.load %37 : !llvm.ptr -> i32
    %c0_i32_2 = arith.constant 0 : i32
    %40 = arith.cmpi eq, %39, %c0_i32_2 : i32
    cf.cond_br %40, ^bb8, ^bb7
  ^bb6:  // pred: ^bb3
    %c4_i32 = arith.constant 4 : i32
    call @dora_fn_wasm_raise_trap(%c4_i32) : (i32) -> ()
    cf.br ^bb5
  ^bb7:  // 2 preds: ^bb5, ^bb8
    %41 = llvm.load %35 : !llvm.ptr -> i32
    %42 = arith.cmpi ne, %7, %41 : i32
    cf.cond_br %42, ^bb10, ^bb9
  ^bb8:  // pred: ^bb5
    %c3_i32_3 = arith.constant 3 : i32
    call @dora_fn_wasm_raise_trap(%c3_i32_3) : (i32) -> ()
    cf.br ^bb7
  ^bb9:  // 2 preds: ^bb7, ^bb10
    %43 = llvm.call %37(%38, %16, %17, %18) vararg(!llvm.func<i32 (...)>) : !llvm.ptr, (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%43 : i32)
  ^bb10:  // pred: ^bb7
    %c5_i32 = arith.constant 5 : i32
    call @dora_fn_wasm_raise_trap(%c5_i32) : (i32) -> ()
    cf.br ^bb9
  }
  func.func @f140(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %4 : i64, !llvm.ptr
    %5 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.load %5 : !llvm.ptr -> !llvm.ptr
    %7 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.getelementptr %7[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %9 = llvm.load %8 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %10 = llvm.load %6 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %11 = arith.subi %10, %c48_i32 : i32
    llvm.store %11, %3 : i32, !llvm.ptr
    llvm.store %11, %6 : i32, !llvm.ptr
    %12 = llvm.load %3 : !llvm.ptr -> i32
    %13 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i64 = arith.constant 4 : i64
    %14 = arith.extui %12 : i32 to i64
    %15 = arith.addi %14, %c4_i64 : i64
    %16 = llvm.getelementptr %9[%15] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %13, %16 : i32, !llvm.ptr
    %17 = llvm.load %3 : !llvm.ptr -> i32
    %18 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64_4 = arith.constant 0 : i64
    %19 = arith.extui %17 : i32 to i64
    %20 = arith.addi %19, %c0_i64_4 : i64
    %21 = llvm.getelementptr %9[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %18, %21 : i32, !llvm.ptr
    %22 = llvm.load %3 : !llvm.ptr -> i32
    %c3_i32 = arith.constant 3 : i32
    %c12_i64 = arith.constant 12 : i64
    %23 = arith.extui %22 : i32 to i64
    %24 = arith.addi %23, %c12_i64 : i64
    %25 = llvm.getelementptr %9[%24] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c3_i32, %25 : i32, !llvm.ptr
    %26 = llvm.load %3 : !llvm.ptr -> i32
    %c1050368_i32 = arith.constant 1050368 : i32
    %c8_i64 = arith.constant 8 : i64
    %27 = arith.extui %26 : i32 to i64
    %28 = arith.addi %27, %c8_i64 : i64
    %29 = llvm.getelementptr %9[%28] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c1050368_i32, %29 : i32, !llvm.ptr
    %30 = llvm.load %3 : !llvm.ptr -> i32
    %c2_i64 = arith.constant 2 : i64
    %c20_i64 = arith.constant 20 : i64
    %31 = arith.extui %30 : i32 to i64
    %32 = arith.addi %31, %c20_i64 : i64
    %33 = llvm.getelementptr %9[%32] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %c2_i64, %33 : i64, !llvm.ptr
    %34 = llvm.load %3 : !llvm.ptr -> i32
    %c42_i32 = arith.constant 42 : i32
    %35 = arith.extui %c42_i32 : i32 to i64
    %c32_i64 = arith.constant 32 : i64
    %c63_i64 = arith.constant 63 : i64
    %36 = arith.cmpi ule, %c32_i64, %c63_i64 : i64
    %37 = scf.if %36 -> (i64) {
      %62 = arith.shli %35, %c32_i64 : i64
      scf.yield %62 : i64
    } else {
      %c0_i64_6 = arith.constant 0 : i64
      scf.yield %c0_i64_6 : i64
    }
    llvm.store %37, %4 : i64, !llvm.ptr
    %38 = llvm.load %3 : !llvm.ptr -> i32
    %39 = arith.extui %38 : i32 to i64
    %40 = arith.ori %37, %39 : i64
    %c40_i64 = arith.constant 40 : i64
    %41 = arith.extui %34 : i32 to i64
    %42 = arith.addi %41, %c40_i64 : i64
    %43 = llvm.getelementptr %9[%42] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %40, %43 : i64, !llvm.ptr
    %44 = llvm.load %3 : !llvm.ptr -> i32
    %45 = llvm.load %4 : !llvm.ptr -> i64
    %46 = llvm.load %3 : !llvm.ptr -> i32
    %c4_i32 = arith.constant 4 : i32
    %47 = arith.addi %46, %c4_i32 : i32
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.ori %45, %48 : i64
    %c32_i64_5 = arith.constant 32 : i64
    %50 = arith.extui %44 : i32 to i64
    %51 = arith.addi %50, %c32_i64_5 : i64
    %52 = llvm.getelementptr %9[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %49, %52 : i64, !llvm.ptr
    %53 = llvm.load %3 : !llvm.ptr -> i32
    %54 = llvm.load %3 : !llvm.ptr -> i32
    %c32_i32 = arith.constant 32 : i32
    %55 = arith.addi %54, %c32_i32 : i32
    %c16_i64 = arith.constant 16 : i64
    %56 = arith.extui %53 : i32 to i64
    %57 = arith.addi %56, %c16_i64 : i64
    %58 = llvm.getelementptr %9[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %55, %58 : i32, !llvm.ptr
    %59 = llvm.load %3 : !llvm.ptr -> i32
    %c8_i32 = arith.constant 8 : i32
    %60 = arith.addi %59, %c8_i32 : i32
    %61 = llvm.load %2 : !llvm.ptr -> i32
    call @f128(%arg0, %60, %61) : (!llvm.ptr, i32, i32) -> ()
    llvm.unreachable
  ^bb2:  // no predecessors
    return
  }
  func.func @f141(%arg0: !llvm.ptr, %arg1: i64, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i64 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i64, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i64 : (i64) -> !llvm.ptr
    llvm.store %c0_i64, %5 : i64, !llvm.ptr
    %c0_i32_5 = arith.constant 0 : i32
    %c1_i64_6 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32_5, %6 : i32, !llvm.ptr
    %c1_i64_7 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_7 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32_5, %7 : i32, !llvm.ptr
    %c1_i64_8 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_8 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32_5, %8 : i32, !llvm.ptr
    %9 = llvm.getelementptr %arg0[928] : (!llvm.ptr) -> !llvm.ptr, i8
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    %11 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.getelementptr %11[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %14 = llvm.load %10 : !llvm.ptr -> i32
    %c48_i32 = arith.constant 48 : i32
    %15 = arith.subi %14, %c48_i32 : i32
    llvm.store %15, %3 : i32, !llvm.ptr
    llvm.store %15, %10 : i32, !llvm.ptr
    %c39_i32 = arith.constant 39 : i32
    llvm.store %c39_i32, %4 : i32, !llvm.ptr
    %16 = llvm.load %0 : !llvm.ptr -> i64
    %c10000_i64 = arith.constant 10000 : i64
    %17 = arith.cmpi uge, %16, %c10000_i64 : i64
    %18 = arith.extui %17 : i1 to i64
    %19 = arith.trunci %18 : i64 to i32
    %c0_i32_9 = arith.constant 0 : i32
    %20 = arith.cmpi ne, %19, %c0_i32_9 : i32
    cf.cond_br %20, ^bb4, ^bb5
  ^bb2(%21: i32):  // pred: ^bb11
    return %21 : i32
  ^bb3:  // 2 preds: ^bb5, ^bb6
    %22 = llvm.load %5 : !llvm.ptr -> i64
    %23 = arith.trunci %22 : i64 to i32
    llvm.store %23, %6 : i32, !llvm.ptr
    %c99_i32 = arith.constant 99 : i32
    %24 = arith.cmpi ule, %23, %c99_i32 : i32
    %25 = arith.extui %24 : i1 to i32
    %c0_i32_10 = arith.constant 0 : i32
    %26 = arith.cmpi ne, %25, %c0_i32_10 : i32
    cf.cond_br %26, ^bb9, ^bb10
  ^bb4:  // pred: ^bb1
    %c39_i32_11 = arith.constant 39 : i32
    llvm.store %c39_i32_11, %4 : i32, !llvm.ptr
    cf.br ^bb7
  ^bb5:  // pred: ^bb1
    %27 = llvm.load %0 : !llvm.ptr -> i64
    llvm.store %27, %5 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb6:  // pred: ^bb8
    cf.br ^bb3
  ^bb7:  // 2 preds: ^bb4, ^bb7
    %28 = llvm.load %3 : !llvm.ptr -> i32
    %c9_i32 = arith.constant 9 : i32
    %29 = arith.addi %28, %c9_i32 : i32
    %30 = llvm.load %4 : !llvm.ptr -> i32
    %31 = arith.addi %29, %30 : i32
    llvm.store %31, %6 : i32, !llvm.ptr
    %c-4_i32 = arith.constant -4 : i32
    %32 = arith.addi %31, %c-4_i32 : i32
    %33 = llvm.load %0 : !llvm.ptr -> i64
    %34 = llvm.load %0 : !llvm.ptr -> i64
    %c10000_i64_12 = arith.constant 10000 : i64
    %35 = arith.divui %34, %c10000_i64_12 : i64
    %c0_i64_13 = arith.constant 0 : i64
    %36 = arith.cmpi eq, %c10000_i64_12, %c0_i64_13 : i64
    %37 = arith.select %36, %c0_i64_13, %35 : i64
    llvm.store %37, %5 : i64, !llvm.ptr
    %c10000_i64_14 = arith.constant 10000 : i64
    %38 = arith.muli %37, %c10000_i64_14 : i64
    %39 = arith.subi %33, %38 : i64
    %40 = arith.trunci %39 : i64 to i32
    llvm.store %40, %7 : i32, !llvm.ptr
    %c65535_i32 = arith.constant 65535 : i32
    %41 = arith.andi %40, %c65535_i32 : i32
    %c100_i32 = arith.constant 100 : i32
    %42 = arith.divui %41, %c100_i32 : i32
    %c0_i32_15 = arith.constant 0 : i32
    %43 = arith.cmpi eq, %c100_i32, %c0_i32_15 : i32
    %44 = arith.select %43, %c0_i32_15, %42 : i32
    llvm.store %44, %8 : i32, !llvm.ptr
    %c1_i32 = arith.constant 1 : i32
    %c31_i32 = arith.constant 31 : i32
    %45 = arith.cmpi ule, %c1_i32, %c31_i32 : i32
    %46 = scf.if %45 -> (i32) {
      %157 = arith.shli %44, %c1_i32 : i32
      scf.yield %157 : i32
    } else {
      %c0_i32_55 = arith.constant 0 : i32
      scf.yield %c0_i32_55 : i32
    }
    %c1050004_i32 = arith.constant 1050004 : i32
    %47 = arith.addi %46, %c1050004_i32 : i32
    %c0_i64_16 = arith.constant 0 : i64
    %48 = arith.extui %47 : i32 to i64
    %49 = arith.addi %48, %c0_i64_16 : i64
    %50 = llvm.getelementptr %13[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i16
    %52 = arith.extui %51 : i16 to i32
    %c0_i64_17 = arith.constant 0 : i64
    %53 = arith.extui %32 : i32 to i64
    %54 = arith.addi %53, %c0_i64_17 : i64
    %55 = llvm.getelementptr %13[%54] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %56 = arith.trunci %52 : i32 to i16
    llvm.store %56, %55 : i16, !llvm.ptr
    %57 = llvm.load %6 : !llvm.ptr -> i32
    %c-2_i32 = arith.constant -2 : i32
    %58 = arith.addi %57, %c-2_i32 : i32
    %59 = llvm.load %7 : !llvm.ptr -> i32
    %60 = llvm.load %8 : !llvm.ptr -> i32
    %c100_i32_18 = arith.constant 100 : i32
    %61 = arith.muli %60, %c100_i32_18 : i32
    %62 = arith.subi %59, %61 : i32
    %c65535_i32_19 = arith.constant 65535 : i32
    %63 = arith.andi %62, %c65535_i32_19 : i32
    %c1_i32_20 = arith.constant 1 : i32
    %c31_i32_21 = arith.constant 31 : i32
    %64 = arith.cmpi ule, %c1_i32_20, %c31_i32_21 : i32
    %65 = scf.if %64 -> (i32) {
      %157 = arith.shli %63, %c1_i32_20 : i32
      scf.yield %157 : i32
    } else {
      %c0_i32_55 = arith.constant 0 : i32
      scf.yield %c0_i32_55 : i32
    }
    %c1050004_i32_22 = arith.constant 1050004 : i32
    %66 = arith.addi %65, %c1050004_i32_22 : i32
    %c0_i64_23 = arith.constant 0 : i64
    %67 = arith.extui %66 : i32 to i64
    %68 = arith.addi %67, %c0_i64_23 : i64
    %69 = llvm.getelementptr %13[%68] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %70 = llvm.load %69 : !llvm.ptr -> i16
    %71 = arith.extui %70 : i16 to i32
    %c0_i64_24 = arith.constant 0 : i64
    %72 = arith.extui %58 : i32 to i64
    %73 = arith.addi %72, %c0_i64_24 : i64
    %74 = llvm.getelementptr %13[%73] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %75 = arith.trunci %71 : i32 to i16
    llvm.store %75, %74 : i16, !llvm.ptr
    %76 = llvm.load %4 : !llvm.ptr -> i32
    %c-4_i32_25 = arith.constant -4 : i32
    %77 = arith.addi %76, %c-4_i32_25 : i32
    llvm.store %77, %4 : i32, !llvm.ptr
    %78 = llvm.load %0 : !llvm.ptr -> i64
    %c99999999_i64 = arith.constant 99999999 : i64
    %79 = arith.cmpi ugt, %78, %c99999999_i64 : i64
    %80 = arith.extui %79 : i1 to i64
    %81 = arith.trunci %80 : i64 to i32
    llvm.store %81, %6 : i32, !llvm.ptr
    %82 = llvm.load %5 : !llvm.ptr -> i64
    llvm.store %82, %0 : i64, !llvm.ptr
    %83 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i32_26 = arith.constant 0 : i32
    %84 = arith.cmpi ne, %83, %c0_i32_26 : i32
    cf.cond_br %84, ^bb7, ^bb8
  ^bb8:  // pred: ^bb7
    cf.br ^bb6
  ^bb9:  // 2 preds: ^bb3, ^bb10
    %85 = llvm.load %6 : !llvm.ptr -> i32
    %c10_i32 = arith.constant 10 : i32
    %86 = arith.cmpi ult, %85, %c10_i32 : i32
    %87 = arith.extui %86 : i1 to i32
    %c0_i32_27 = arith.constant 0 : i32
    %88 = arith.cmpi ne, %87, %c0_i32_27 : i32
    cf.cond_br %88, ^bb12, ^bb13
  ^bb10:  // pred: ^bb3
    %89 = llvm.load %3 : !llvm.ptr -> i32
    %c9_i32_28 = arith.constant 9 : i32
    %90 = arith.addi %89, %c9_i32_28 : i32
    %91 = llvm.load %4 : !llvm.ptr -> i32
    %c-2_i32_29 = arith.constant -2 : i32
    %92 = arith.addi %91, %c-2_i32_29 : i32
    llvm.store %92, %4 : i32, !llvm.ptr
    %93 = arith.addi %90, %92 : i32
    %94 = llvm.load %5 : !llvm.ptr -> i64
    %95 = arith.trunci %94 : i64 to i32
    llvm.store %95, %6 : i32, !llvm.ptr
    %96 = llvm.load %6 : !llvm.ptr -> i32
    %c65535_i32_30 = arith.constant 65535 : i32
    %97 = arith.andi %96, %c65535_i32_30 : i32
    %c100_i32_31 = arith.constant 100 : i32
    %98 = arith.divui %97, %c100_i32_31 : i32
    %c0_i32_32 = arith.constant 0 : i32
    %99 = arith.cmpi eq, %c100_i32_31, %c0_i32_32 : i32
    %100 = arith.select %99, %c0_i32_32, %98 : i32
    llvm.store %100, %6 : i32, !llvm.ptr
    %c100_i32_33 = arith.constant 100 : i32
    %101 = arith.muli %100, %c100_i32_33 : i32
    %102 = arith.subi %95, %101 : i32
    %c65535_i32_34 = arith.constant 65535 : i32
    %103 = arith.andi %102, %c65535_i32_34 : i32
    %c1_i32_35 = arith.constant 1 : i32
    %c31_i32_36 = arith.constant 31 : i32
    %104 = arith.cmpi ule, %c1_i32_35, %c31_i32_36 : i32
    %105 = scf.if %104 -> (i32) {
      %157 = arith.shli %103, %c1_i32_35 : i32
      scf.yield %157 : i32
    } else {
      %c0_i32_55 = arith.constant 0 : i32
      scf.yield %c0_i32_55 : i32
    }
    %c1050004_i32_37 = arith.constant 1050004 : i32
    %106 = arith.addi %105, %c1050004_i32_37 : i32
    %c0_i64_38 = arith.constant 0 : i64
    %107 = arith.extui %106 : i32 to i64
    %108 = arith.addi %107, %c0_i64_38 : i64
    %109 = llvm.getelementptr %13[%108] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %110 = llvm.load %109 : !llvm.ptr -> i16
    %111 = arith.extui %110 : i16 to i32
    %c0_i64_39 = arith.constant 0 : i64
    %112 = arith.extui %93 : i32 to i64
    %113 = arith.addi %112, %c0_i64_39 : i64
    %114 = llvm.getelementptr %13[%113] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %115 = arith.trunci %111 : i32 to i16
    llvm.store %115, %114 : i16, !llvm.ptr
    cf.br ^bb9
  ^bb11:  // 2 preds: ^bb12, ^bb13
    %116 = llvm.load %2 : !llvm.ptr -> i32
    %117 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32_40 = arith.constant 1 : i32
    %c0_i32_41 = arith.constant 0 : i32
    %118 = llvm.load %3 : !llvm.ptr -> i32
    %c9_i32_42 = arith.constant 9 : i32
    %119 = arith.addi %118, %c9_i32_42 : i32
    %120 = llvm.load %4 : !llvm.ptr -> i32
    %121 = arith.addi %119, %120 : i32
    %c39_i32_43 = arith.constant 39 : i32
    %122 = llvm.load %4 : !llvm.ptr -> i32
    %123 = arith.subi %c39_i32_43, %122 : i32
    %124 = call @f136(%arg0, %116, %117, %c1_i32_40, %c0_i32_41, %121, %123) : (!llvm.ptr, i32, i32, i32, i32, i32, i32) -> i32
    llvm.store %124, %4 : i32, !llvm.ptr
    %125 = llvm.load %3 : !llvm.ptr -> i32
    %c48_i32_44 = arith.constant 48 : i32
    %126 = arith.addi %125, %c48_i32_44 : i32
    llvm.store %126, %10 : i32, !llvm.ptr
    %127 = llvm.load %4 : !llvm.ptr -> i32
    cf.br ^bb2(%127 : i32)
  ^bb12:  // pred: ^bb9
    %128 = llvm.load %3 : !llvm.ptr -> i32
    %c9_i32_45 = arith.constant 9 : i32
    %129 = arith.addi %128, %c9_i32_45 : i32
    %130 = llvm.load %4 : !llvm.ptr -> i32
    %c-1_i32 = arith.constant -1 : i32
    %131 = arith.addi %130, %c-1_i32 : i32
    llvm.store %131, %4 : i32, !llvm.ptr
    %132 = arith.addi %129, %131 : i32
    %133 = llvm.load %6 : !llvm.ptr -> i32
    %c48_i32_46 = arith.constant 48 : i32
    %134 = arith.ori %133, %c48_i32_46 : i32
    %c0_i64_47 = arith.constant 0 : i64
    %135 = arith.extui %132 : i32 to i64
    %136 = arith.addi %135, %c0_i64_47 : i64
    %137 = llvm.getelementptr %13[%136] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %138 = arith.trunci %134 : i32 to i8
    llvm.store %138, %137 : i8, !llvm.ptr
    cf.br ^bb11
  ^bb13:  // pred: ^bb9
    %139 = llvm.load %3 : !llvm.ptr -> i32
    %c9_i32_48 = arith.constant 9 : i32
    %140 = arith.addi %139, %c9_i32_48 : i32
    %141 = llvm.load %4 : !llvm.ptr -> i32
    %c-2_i32_49 = arith.constant -2 : i32
    %142 = arith.addi %141, %c-2_i32_49 : i32
    llvm.store %142, %4 : i32, !llvm.ptr
    %143 = arith.addi %140, %142 : i32
    %144 = llvm.load %6 : !llvm.ptr -> i32
    %c1_i32_50 = arith.constant 1 : i32
    %c31_i32_51 = arith.constant 31 : i32
    %145 = arith.cmpi ule, %c1_i32_50, %c31_i32_51 : i32
    %146 = scf.if %145 -> (i32) {
      %157 = arith.shli %144, %c1_i32_50 : i32
      scf.yield %157 : i32
    } else {
      %c0_i32_55 = arith.constant 0 : i32
      scf.yield %c0_i32_55 : i32
    }
    %c1050004_i32_52 = arith.constant 1050004 : i32
    %147 = arith.addi %146, %c1050004_i32_52 : i32
    %c0_i64_53 = arith.constant 0 : i64
    %148 = arith.extui %147 : i32 to i64
    %149 = arith.addi %148, %c0_i64_53 : i64
    %150 = llvm.getelementptr %13[%149] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %151 = llvm.load %150 : !llvm.ptr -> i16
    %152 = arith.extui %151 : i16 to i32
    %c0_i64_54 = arith.constant 0 : i64
    %153 = arith.extui %143 : i32 to i64
    %154 = arith.addi %153, %c0_i64_54 : i64
    %155 = llvm.getelementptr %13[%154] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %156 = arith.trunci %152 : i32 to i16
    llvm.store %156, %155 : i16, !llvm.ptr
    cf.br ^bb11
  }
  func.func @f142(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %c1_i64_5 = arith.constant 1 : i64
    %6 = llvm.alloca %c1_i64_5 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %6 : i32, !llvm.ptr
    %c1_i64_6 = arith.constant 1 : i64
    %7 = llvm.alloca %c1_i64_6 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %7 : i32, !llvm.ptr
    %c1_i64_7 = arith.constant 1 : i64
    %8 = llvm.alloca %c1_i64_7 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %8 : i32, !llvm.ptr
    %c1_i64_8 = arith.constant 1 : i64
    %9 = llvm.alloca %c1_i64_8 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %9 : i32, !llvm.ptr
    %c1_i64_9 = arith.constant 1 : i64
    %10 = llvm.alloca %c1_i64_9 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %10 : i32, !llvm.ptr
    %11 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %12 = llvm.getelementptr %11[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %14 = llvm.load %2 : !llvm.ptr -> i32
    %c16_i32 = arith.constant 16 : i32
    %15 = arith.cmpi uge, %14, %c16_i32 : i32
    %16 = arith.extui %15 : i1 to i32
    %c0_i32_10 = arith.constant 0 : i32
    %17 = arith.cmpi ne, %16, %c0_i32_10 : i32
    cf.cond_br %17, ^bb4, ^bb5
  ^bb2(%18: i32):  // pred: ^bb22
    return %18 : i32
  ^bb3:  // 2 preds: ^bb5, ^bb11
    %19 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_11 = arith.constant 0 : i32
    %20 = arith.cmpi eq, %19, %c0_i32_11 : i32
    %21 = arith.extui %20 : i1 to i32
    %c0_i32_12 = arith.constant 0 : i32
    %22 = arith.cmpi ne, %21, %c0_i32_12 : i32
    cf.cond_br %22, ^bb22, ^bb23
  ^bb4:  // pred: ^bb1
    %23 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32_13 = arith.constant 0 : i32
    %24 = llvm.load %0 : !llvm.ptr -> i32
    %25 = arith.subi %c0_i32_13, %24 : i32
    %c3_i32 = arith.constant 3 : i32
    %26 = arith.andi %25, %c3_i32 : i32
    llvm.store %26, %4 : i32, !llvm.ptr
    %27 = arith.addi %23, %26 : i32
    llvm.store %27, %5 : i32, !llvm.ptr
    %28 = llvm.load %4 : !llvm.ptr -> i32
    %c0_i32_14 = arith.constant 0 : i32
    %29 = arith.cmpi eq, %28, %c0_i32_14 : i32
    %30 = arith.extui %29 : i1 to i32
    %c0_i32_15 = arith.constant 0 : i32
    %31 = arith.cmpi ne, %30, %c0_i32_15 : i32
    cf.cond_br %31, ^bb6, ^bb7
  ^bb5:  // pred: ^bb1
    %32 = llvm.load %0 : !llvm.ptr -> i32
    llvm.store %32, %3 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb6:  // 2 preds: ^bb4, ^bb8
    %33 = llvm.load %5 : !llvm.ptr -> i32
    %34 = llvm.load %2 : !llvm.ptr -> i32
    %35 = llvm.load %4 : !llvm.ptr -> i32
    %36 = arith.subi %34, %35 : i32
    llvm.store %36, %7 : i32, !llvm.ptr
    %c-4_i32 = arith.constant -4 : i32
    %37 = arith.andi %36, %c-4_i32 : i32
    llvm.store %37, %8 : i32, !llvm.ptr
    %38 = arith.addi %33, %37 : i32
    llvm.store %38, %3 : i32, !llvm.ptr
    %39 = llvm.load %1 : !llvm.ptr -> i32
    %40 = llvm.load %4 : !llvm.ptr -> i32
    %41 = arith.addi %39, %40 : i32
    llvm.store %41, %9 : i32, !llvm.ptr
    %c3_i32_16 = arith.constant 3 : i32
    %42 = arith.andi %41, %c3_i32_16 : i32
    %c0_i32_17 = arith.constant 0 : i32
    %43 = arith.cmpi eq, %42, %c0_i32_17 : i32
    %44 = arith.extui %43 : i1 to i32
    %c0_i32_18 = arith.constant 0 : i32
    %45 = arith.cmpi ne, %44, %c0_i32_18 : i32
    cf.cond_br %45, ^bb12, ^bb13
  ^bb7:  // pred: ^bb4
    %46 = llvm.load %0 : !llvm.ptr -> i32
    llvm.store %46, %3 : i32, !llvm.ptr
    %47 = llvm.load %1 : !llvm.ptr -> i32
    llvm.store %47, %6 : i32, !llvm.ptr
    cf.br ^bb9
  ^bb8:  // pred: ^bb10
    cf.br ^bb6
  ^bb9:  // 2 preds: ^bb7, ^bb9
    %48 = llvm.load %3 : !llvm.ptr -> i32
    %49 = llvm.load %6 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %50 = arith.extui %49 : i32 to i64
    %51 = arith.addi %50, %c0_i64 : i64
    %52 = llvm.getelementptr %13[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %53 = llvm.load %52 : !llvm.ptr -> i8
    %54 = arith.extui %53 : i8 to i32
    %c0_i64_19 = arith.constant 0 : i64
    %55 = arith.extui %48 : i32 to i64
    %56 = arith.addi %55, %c0_i64_19 : i64
    %57 = llvm.getelementptr %13[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %58 = arith.trunci %54 : i32 to i8
    llvm.store %58, %57 : i8, !llvm.ptr
    %59 = llvm.load %6 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %60 = arith.addi %59, %c1_i32 : i32
    llvm.store %60, %6 : i32, !llvm.ptr
    %61 = llvm.load %3 : !llvm.ptr -> i32
    %c1_i32_20 = arith.constant 1 : i32
    %62 = arith.addi %61, %c1_i32_20 : i32
    llvm.store %62, %3 : i32, !llvm.ptr
    %63 = llvm.load %5 : !llvm.ptr -> i32
    %64 = arith.cmpi ult, %62, %63 : i32
    %65 = arith.extui %64 : i1 to i32
    %c0_i32_21 = arith.constant 0 : i32
    %66 = arith.cmpi ne, %65, %c0_i32_21 : i32
    cf.cond_br %66, ^bb9, ^bb10
  ^bb10:  // pred: ^bb9
    cf.br ^bb8
  ^bb11:  // 4 preds: ^bb12, ^bb13, ^bb17, ^bb19
    %67 = llvm.load %7 : !llvm.ptr -> i32
    %c3_i32_22 = arith.constant 3 : i32
    %68 = arith.andi %67, %c3_i32_22 : i32
    llvm.store %68, %2 : i32, !llvm.ptr
    %69 = llvm.load %9 : !llvm.ptr -> i32
    %70 = llvm.load %8 : !llvm.ptr -> i32
    %71 = arith.addi %69, %70 : i32
    llvm.store %71, %1 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb12:  // 2 preds: ^bb6, ^bb15
    %72 = llvm.load %8 : !llvm.ptr -> i32
    %c1_i32_23 = arith.constant 1 : i32
    %73 = arith.cmpi slt, %72, %c1_i32_23 : i32
    %74 = arith.extui %73 : i1 to i32
    %c0_i32_24 = arith.constant 0 : i32
    %75 = arith.cmpi ne, %74, %c0_i32_24 : i32
    cf.cond_br %75, ^bb11, ^bb18
  ^bb13:  // pred: ^bb6
    %76 = llvm.load %8 : !llvm.ptr -> i32
    %c1_i32_25 = arith.constant 1 : i32
    %77 = arith.cmpi slt, %76, %c1_i32_25 : i32
    %78 = arith.extui %77 : i1 to i32
    %c0_i32_26 = arith.constant 0 : i32
    %79 = arith.cmpi ne, %78, %c0_i32_26 : i32
    cf.cond_br %79, ^bb11, ^bb14
  ^bb14:  // pred: ^bb13
    %80 = llvm.load %9 : !llvm.ptr -> i32
    %c3_i32_27 = arith.constant 3 : i32
    %c31_i32 = arith.constant 31 : i32
    %81 = arith.cmpi ule, %c3_i32_27, %c31_i32 : i32
    %82 = scf.if %81 -> (i32) {
      %161 = arith.shli %80, %c3_i32_27 : i32
      scf.yield %161 : i32
    } else {
      %c0_i32_49 = arith.constant 0 : i32
      scf.yield %c0_i32_49 : i32
    }
    llvm.store %82, %6 : i32, !llvm.ptr
    %c24_i32 = arith.constant 24 : i32
    %83 = arith.andi %82, %c24_i32 : i32
    llvm.store %83, %2 : i32, !llvm.ptr
    %84 = llvm.load %9 : !llvm.ptr -> i32
    %c-4_i32_28 = arith.constant -4 : i32
    %85 = arith.andi %84, %c-4_i32_28 : i32
    llvm.store %85, %10 : i32, !llvm.ptr
    %c4_i32 = arith.constant 4 : i32
    %86 = arith.addi %85, %c4_i32 : i32
    llvm.store %86, %1 : i32, !llvm.ptr
    %c0_i32_29 = arith.constant 0 : i32
    %87 = llvm.load %6 : !llvm.ptr -> i32
    %88 = arith.subi %c0_i32_29, %87 : i32
    %c24_i32_30 = arith.constant 24 : i32
    %89 = arith.andi %88, %c24_i32_30 : i32
    llvm.store %89, %4 : i32, !llvm.ptr
    %90 = llvm.load %10 : !llvm.ptr -> i32
    %c0_i64_31 = arith.constant 0 : i64
    %91 = arith.extui %90 : i32 to i64
    %92 = arith.addi %91, %c0_i64_31 : i64
    %93 = llvm.getelementptr %13[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %94 = llvm.load %93 : !llvm.ptr -> i32
    llvm.store %94, %6 : i32, !llvm.ptr
    cf.br ^bb16
  ^bb15:  // no predecessors
    cf.br ^bb12
  ^bb16:  // 2 preds: ^bb14, ^bb16
    %95 = llvm.load %5 : !llvm.ptr -> i32
    %96 = llvm.load %6 : !llvm.ptr -> i32
    %97 = llvm.load %2 : !llvm.ptr -> i32
    %c31_i32_32 = arith.constant 31 : i32
    %98 = arith.cmpi ule, %97, %c31_i32_32 : i32
    %99 = scf.if %98 -> (i32) {
      %161 = arith.shrui %96, %97 : i32
      scf.yield %161 : i32
    } else {
      %c0_i32_49 = arith.constant 0 : i32
      scf.yield %c0_i32_49 : i32
    }
    %100 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_33 = arith.constant 0 : i64
    %101 = arith.extui %100 : i32 to i64
    %102 = arith.addi %101, %c0_i64_33 : i64
    %103 = llvm.getelementptr %13[%102] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %104 = llvm.load %103 : !llvm.ptr -> i32
    llvm.store %104, %6 : i32, !llvm.ptr
    %105 = llvm.load %4 : !llvm.ptr -> i32
    %c31_i32_34 = arith.constant 31 : i32
    %106 = arith.cmpi ule, %105, %c31_i32_34 : i32
    %107 = scf.if %106 -> (i32) {
      %161 = arith.shli %104, %105 : i32
      scf.yield %161 : i32
    } else {
      %c0_i32_49 = arith.constant 0 : i32
      scf.yield %c0_i32_49 : i32
    }
    %108 = arith.ori %99, %107 : i32
    %c0_i64_35 = arith.constant 0 : i64
    %109 = arith.extui %95 : i32 to i64
    %110 = arith.addi %109, %c0_i64_35 : i64
    %111 = llvm.getelementptr %13[%110] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %108, %111 : i32, !llvm.ptr
    %112 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i32_36 = arith.constant 4 : i32
    %113 = arith.addi %112, %c4_i32_36 : i32
    llvm.store %113, %1 : i32, !llvm.ptr
    %114 = llvm.load %5 : !llvm.ptr -> i32
    %c4_i32_37 = arith.constant 4 : i32
    %115 = arith.addi %114, %c4_i32_37 : i32
    llvm.store %115, %5 : i32, !llvm.ptr
    %116 = llvm.load %3 : !llvm.ptr -> i32
    %117 = arith.cmpi ult, %115, %116 : i32
    %118 = arith.extui %117 : i1 to i32
    %c0_i32_38 = arith.constant 0 : i32
    %119 = arith.cmpi ne, %118, %c0_i32_38 : i32
    cf.cond_br %119, ^bb16, ^bb17
  ^bb17:  // pred: ^bb16
    cf.br ^bb11
  ^bb18:  // pred: ^bb12
    %120 = llvm.load %9 : !llvm.ptr -> i32
    llvm.store %120, %1 : i32, !llvm.ptr
    cf.br ^bb20
  ^bb19:  // pred: ^bb21
    cf.br ^bb11
  ^bb20:  // 2 preds: ^bb18, ^bb20
    %121 = llvm.load %5 : !llvm.ptr -> i32
    %122 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_39 = arith.constant 0 : i64
    %123 = arith.extui %122 : i32 to i64
    %124 = arith.addi %123, %c0_i64_39 : i64
    %125 = llvm.getelementptr %13[%124] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %126 = llvm.load %125 : !llvm.ptr -> i32
    %c0_i64_40 = arith.constant 0 : i64
    %127 = arith.extui %121 : i32 to i64
    %128 = arith.addi %127, %c0_i64_40 : i64
    %129 = llvm.getelementptr %13[%128] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    llvm.store %126, %129 : i32, !llvm.ptr
    %130 = llvm.load %1 : !llvm.ptr -> i32
    %c4_i32_41 = arith.constant 4 : i32
    %131 = arith.addi %130, %c4_i32_41 : i32
    llvm.store %131, %1 : i32, !llvm.ptr
    %132 = llvm.load %5 : !llvm.ptr -> i32
    %c4_i32_42 = arith.constant 4 : i32
    %133 = arith.addi %132, %c4_i32_42 : i32
    llvm.store %133, %5 : i32, !llvm.ptr
    %134 = llvm.load %3 : !llvm.ptr -> i32
    %135 = arith.cmpi ult, %133, %134 : i32
    %136 = arith.extui %135 : i1 to i32
    %c0_i32_43 = arith.constant 0 : i32
    %137 = arith.cmpi ne, %136, %c0_i32_43 : i32
    cf.cond_br %137, ^bb20, ^bb21
  ^bb21:  // pred: ^bb20
    cf.br ^bb19
  ^bb22:  // 2 preds: ^bb3, ^bb24
    %138 = llvm.load %0 : !llvm.ptr -> i32
    cf.br ^bb2(%138 : i32)
  ^bb23:  // pred: ^bb3
    %139 = llvm.load %3 : !llvm.ptr -> i32
    %140 = llvm.load %2 : !llvm.ptr -> i32
    %141 = arith.addi %139, %140 : i32
    llvm.store %141, %5 : i32, !llvm.ptr
    cf.br ^bb25
  ^bb24:  // pred: ^bb26
    cf.br ^bb22
  ^bb25:  // 2 preds: ^bb23, ^bb25
    %142 = llvm.load %3 : !llvm.ptr -> i32
    %143 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_44 = arith.constant 0 : i64
    %144 = arith.extui %143 : i32 to i64
    %145 = arith.addi %144, %c0_i64_44 : i64
    %146 = llvm.getelementptr %13[%145] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %147 = llvm.load %146 : !llvm.ptr -> i8
    %148 = arith.extui %147 : i8 to i32
    %c0_i64_45 = arith.constant 0 : i64
    %149 = arith.extui %142 : i32 to i64
    %150 = arith.addi %149, %c0_i64_45 : i64
    %151 = llvm.getelementptr %13[%150] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %152 = arith.trunci %148 : i32 to i8
    llvm.store %152, %151 : i8, !llvm.ptr
    %153 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32_46 = arith.constant 1 : i32
    %154 = arith.addi %153, %c1_i32_46 : i32
    llvm.store %154, %1 : i32, !llvm.ptr
    %155 = llvm.load %3 : !llvm.ptr -> i32
    %c1_i32_47 = arith.constant 1 : i32
    %156 = arith.addi %155, %c1_i32_47 : i32
    llvm.store %156, %3 : i32, !llvm.ptr
    %157 = llvm.load %5 : !llvm.ptr -> i32
    %158 = arith.cmpi ult, %156, %157 : i32
    %159 = arith.extui %158 : i1 to i32
    %c0_i32_48 = arith.constant 0 : i32
    %160 = arith.cmpi ne, %159, %c0_i32_48 : i32
    cf.cond_br %160, ^bb25, ^bb26
  ^bb26:  // pred: ^bb25
    cf.br ^bb24
  }
  func.func @f143(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %c1_i64_2 = arith.constant 1 : i64
    %3 = llvm.alloca %c1_i64_2 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %3 : i32, !llvm.ptr
    %c1_i64_3 = arith.constant 1 : i64
    %4 = llvm.alloca %c1_i64_3 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %4 : i32, !llvm.ptr
    %c1_i64_4 = arith.constant 1 : i64
    %5 = llvm.alloca %c1_i64_4 x i32 : (i64) -> !llvm.ptr
    llvm.store %c0_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %arg0[912] : (!llvm.ptr) -> !llvm.ptr, i8
    %7 = llvm.getelementptr %6[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %8 = llvm.load %7 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %c0_i32_5 = arith.constant 0 : i32
    llvm.store %c0_i32_5, %3 : i32, !llvm.ptr
    %9 = llvm.load %2 : !llvm.ptr -> i32
    %c0_i32_6 = arith.constant 0 : i32
    %10 = arith.cmpi eq, %9, %c0_i32_6 : i32
    %11 = arith.extui %10 : i1 to i32
    %c0_i32_7 = arith.constant 0 : i32
    %12 = arith.cmpi ne, %11, %c0_i32_7 : i32
    cf.cond_br %12, ^bb3, ^bb4
  ^bb2(%13: i32):  // pred: ^bb3
    return %13 : i32
  ^bb3:  // 3 preds: ^bb1, ^bb5, ^bb8
    %14 = llvm.load %3 : !llvm.ptr -> i32
    cf.br ^bb2(%14 : i32)
  ^bb4:  // pred: ^bb1
    cf.br ^bb7
  ^bb5:  // 2 preds: ^bb6, ^bb7
    %15 = llvm.load %4 : !llvm.ptr -> i32
    %16 = llvm.load %5 : !llvm.ptr -> i32
    %17 = arith.subi %15, %16 : i32
    llvm.store %17, %3 : i32, !llvm.ptr
    cf.br ^bb3
  ^bb6:  // no predecessors
    cf.br ^bb5
  ^bb7:  // 2 preds: ^bb4, ^bb9
    %18 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %19 = arith.extui %18 : i32 to i64
    %20 = arith.addi %19, %c0_i64 : i64
    %21 = llvm.getelementptr %8[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %22 = llvm.load %21 : !llvm.ptr -> i8
    %23 = arith.extui %22 : i8 to i32
    llvm.store %23, %4 : i32, !llvm.ptr
    %24 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64_8 = arith.constant 0 : i64
    %25 = arith.extui %24 : i32 to i64
    %26 = arith.addi %25, %c0_i64_8 : i64
    %27 = llvm.getelementptr %8[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %28 = llvm.load %27 : !llvm.ptr -> i8
    %29 = arith.extui %28 : i8 to i32
    llvm.store %29, %5 : i32, !llvm.ptr
    %30 = arith.cmpi eq, %23, %29 : i32
    %31 = arith.extui %30 : i1 to i32
    %c-1_i32 = arith.constant -1 : i32
    %32 = arith.xori %31, %c-1_i32 : i32
    %c0_i32_9 = arith.constant 0 : i32
    %33 = arith.cmpi ne, %32, %c0_i32_9 : i32
    cf.cond_br %33, ^bb5, ^bb8
  ^bb8:  // pred: ^bb7
    %34 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %35 = arith.addi %34, %c1_i32 : i32
    llvm.store %35, %0 : i32, !llvm.ptr
    %36 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32_10 = arith.constant 1 : i32
    %37 = arith.addi %36, %c1_i32_10 : i32
    llvm.store %37, %1 : i32, !llvm.ptr
    %38 = llvm.load %2 : !llvm.ptr -> i32
    %c-1_i32_11 = arith.constant -1 : i32
    %39 = arith.addi %38, %c-1_i32_11 : i32
    llvm.store %39, %2 : i32, !llvm.ptr
    %c0_i32_12 = arith.constant 0 : i32
    %40 = arith.cmpi eq, %39, %c0_i32_12 : i32
    %41 = arith.extui %40 : i1 to i32
    %c0_i32_13 = arith.constant 0 : i32
    %42 = arith.cmpi ne, %41, %c0_i32_13 : i32
    cf.cond_br %42, ^bb3, ^bb9
  ^bb9:  // pred: ^bb8
    cf.br ^bb7
  }
  func.func @f144(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %3 = llvm.load %0 : !llvm.ptr -> i32
    %4 = llvm.load %1 : !llvm.ptr -> i32
    %5 = llvm.load %2 : !llvm.ptr -> i32
    %6 = call @f143(%arg0, %3, %4, %5) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%6 : i32)
  ^bb2(%7: i32):  // pred: ^bb1
    return %7 : i32
  }
  func.func @f145(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32, %arg3: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %c1_i64_1 = arith.constant 1 : i64
    %2 = llvm.alloca %c1_i64_1 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg3, %2 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %3 = llvm.load %0 : !llvm.ptr -> i32
    %4 = llvm.load %1 : !llvm.ptr -> i32
    %5 = llvm.load %2 : !llvm.ptr -> i32
    %6 = call @f142(%arg0, %3, %4, %5) : (!llvm.ptr, i32, i32, i32) -> i32
    cf.br ^bb2(%6 : i32)
  ^bb2(%7: i32):  // pred: ^bb1
    return %7 : i32
  }
  func.func private @dora_fn_wasm_table_init(!llvm.ptr, i32, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_table_copy(!llvm.ptr, i32, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_table_fill(!llvm.ptr, i32, i32, !llvm.ptr, i32)
  func.func private @dora_fn_wasm_table_size(!llvm.ptr, i32) -> i32
  func.func private @dora_fn_wasm_table_get(!llvm.ptr, i32, i32) -> !llvm.ptr
  func.func private @dora_fn_wasm_table_set(!llvm.ptr, i32, i32, !llvm.ptr)
  func.func private @dora_fn_wasm_table_grow(!llvm.ptr, !llvm.ptr, i32, i32) -> i32
  func.func private @dora_fn_wasm_imported_table_size(!llvm.ptr, i32) -> i32
  func.func private @dora_fn_wasm_imported_table_get(!llvm.ptr, i32, i32) -> !llvm.ptr
  func.func private @dora_fn_wasm_imported_table_grow(!llvm.ptr, !llvm.ptr, i32, i32) -> i32
  func.func private @dora_fn_wasm_memory_init(!llvm.ptr, i32, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_memory_size(!llvm.ptr, i32) -> i32
  func.func private @dora_fn_wasm_memory_grow(!llvm.ptr, i32, i32) -> i32
  func.func private @dora_fn_wasm_memory_copy(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_memory_fill(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_memory_notify(!llvm.ptr, i32, i32, i32) -> i32
  func.func private @dora_fn_wasm_memory_wait32(!llvm.ptr, i32, i32, i32, i64) -> i32
  func.func private @dora_fn_wasm_memory_wait64(!llvm.ptr, i32, i32, i64, i64) -> i32
  func.func private @dora_fn_wasm_imported_memory_size(!llvm.ptr, i32) -> i32
  func.func private @dora_fn_wasm_imported_memory_grow(!llvm.ptr, i32, i32) -> i32
  func.func private @dora_fn_wasm_imported_memory_copy(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_imported_memory_fill(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_imported_memory_notify(!llvm.ptr, i32, i32, i32) -> i32
  func.func private @dora_fn_wasm_imported_memory_wait32(!llvm.ptr, i32, i32, i32, i64) -> i32
  func.func private @dora_fn_wasm_imported_memory_wait64(!llvm.ptr, i32, i32, i64, i64) -> i32
  func.func private @dora_fn_wasm_func_ref(!llvm.ptr, i32) -> !llvm.ptr
  func.func private @dora_fn_wasm_data_drop(!llvm.ptr, i32)
  func.func private @dora_fn_wasm_elem_drop(!llvm.ptr, i32)
  func.func private @dora_fn_wasm_raise_trap(i32)
}
