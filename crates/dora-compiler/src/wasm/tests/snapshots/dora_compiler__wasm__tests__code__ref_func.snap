---
source: crates/dora-compiler/src/wasm/tests/code.rs
expression: op
snapshot_kind: text
---
"builtin.module"() ({
  "func.func"() <{function_type = (!llvm.ptr, i32) -> i32, sym_name = "g"}> ({
  ^bb0(%arg10: !llvm.ptr, %arg11: i32):
    %31 = "arith.constant"() <{value = 1 : i64}> : () -> i64
    %32 = "llvm.alloca"(%31) <{elem_type = i32}> : (i64) -> !llvm.ptr
    "llvm.store"(%arg11, %32) <{ordering = 0 : i64}> : (i32, !llvm.ptr) -> ()
    %33 = "llvm.load"(%32) <{ordering = 0 : i64}> : (!llvm.ptr) -> i32
    %34 = "arith.constant"() <{value = 1 : i32}> : () -> i32
    %35 = "wasm.add"(%33, %34) : (i32, i32) -> i32
    "cf.br"(%35)[^bb1] : (i32) -> ()
  ^bb1(%36: i32):  // pred: ^bb0
    "func.return"(%36) : (i32) -> ()
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> (), sym_name = "f1"}> ({
  ^bb0(%arg9: !llvm.ptr):
    %27 = "arith.constant"() <{value = 5 : i32}> : () -> i32
    %28 = "func.call"(%arg9, %27) <{callee = @dora_fn_wasm_func_ref}> : (!llvm.ptr, i32) -> !llvm.ptr
    %29 = "arith.constant"() <{value = 6 : i32}> : () -> i32
    %30 = "func.call"(%arg9, %29) <{callee = @dora_fn_wasm_func_ref}> : (!llvm.ptr, i32) -> !llvm.ptr
    "cf.br"()[^bb1] : () -> ()
  ^bb1:  // pred: ^bb0
    "func.return"() : () -> ()
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> (), sym_name = "gf1"}> ({
  ^bb0(%arg8: !llvm.ptr):
    "cf.br"()[^bb1] : () -> ()
  ^bb1:  // pred: ^bb0
    "func.return"() : () -> ()
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> (), sym_name = "gf2"}> ({
  ^bb0(%arg7: !llvm.ptr):
    "cf.br"()[^bb1] : () -> ()
  ^bb1:  // pred: ^bb0
    "func.return"() : () -> ()
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> (), sym_name = "ff1"}> ({
  ^bb0(%arg6: !llvm.ptr):
    "cf.br"()[^bb1] : () -> ()
  ^bb1:  // pred: ^bb0
    "func.return"() : () -> ()
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> (), sym_name = "ff2"}> ({
  ^bb0(%arg5: !llvm.ptr):
    "cf.br"()[^bb1] : () -> ()
  ^bb1:  // pred: ^bb0
    "func.return"() : () -> ()
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> i32, sym_name = "f6"}> ({
  ^bb0(%arg4: !llvm.ptr):
    %21 = "arith.constant"() <{value = 0 : i32}> : () -> i32
    %22 = "func.call"(%arg4, %21) <{callee = @dora_fn_wasm_func_ref}> : (!llvm.ptr, i32) -> !llvm.ptr
    %23 = "llvm.load"(%22) <{ordering = 0 : i64}> : (!llvm.ptr) -> i32
    %24 = "arith.constant"() <{value = 0 : i32}> : () -> i32
    %25 = "arith.cmpi"(%23, %24) <{predicate = 0 : i64}> : (i32, i32) -> i1
    "cf.br"(%25)[^bb1] : (i1) -> ()
  ^bb1(%26: i32):  // pred: ^bb0
    "func.return"(%26) : (i32) -> ()
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> i32, sym_name = "f7"}> ({
  ^bb0(%arg3: !llvm.ptr):
    %15 = "arith.constant"() <{value = 1 : i32}> : () -> i32
    %16 = "func.call"(%arg3, %15) <{callee = @dora_fn_wasm_func_ref}> : (!llvm.ptr, i32) -> !llvm.ptr
    %17 = "llvm.load"(%16) <{ordering = 0 : i64}> : (!llvm.ptr) -> i32
    %18 = "arith.constant"() <{value = 0 : i32}> : () -> i32
    %19 = "arith.cmpi"(%17, %18) <{predicate = 0 : i64}> : (i32, i32) -> i1
    "cf.br"(%19)[^bb1] : (i1) -> ()
  ^bb1(%20: i32):  // pred: ^bb0
    "func.return"(%20) : (i32) -> ()
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> i32, sym_name = "f8"}> ({
  ^bb0(%arg2: !llvm.ptr):
    %8 = "llvm.getelementptr"(%arg2) <{elem_type = i8, rawConstantIndices = array<i32: 80>}> : (!llvm.ptr) -> !llvm.ptr
    %9 = "llvm.load"(%8) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    %10 = "llvm.load"(%9) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    %11 = "llvm.load"(%10) <{ordering = 0 : i64}> : (!llvm.ptr) -> i32
    %12 = "arith.constant"() <{value = 0 : i32}> : () -> i32
    %13 = "arith.cmpi"(%11, %12) <{predicate = 0 : i64}> : (i32, i32) -> i1
    "cf.br"(%13)[^bb1] : (i1) -> ()
  ^bb1(%14: i32):  // pred: ^bb0
    "func.return"(%14) : (i32) -> ()
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> (), sym_name = "f9"}> ({
  ^bb0(%arg1: !llvm.ptr):
    %4 = "arith.constant"() <{value = 0 : i32}> : () -> i32
    %5 = "func.call"(%arg1, %4) <{callee = @dora_fn_wasm_func_ref}> : (!llvm.ptr, i32) -> !llvm.ptr
    %6 = "llvm.getelementptr"(%arg1) <{elem_type = i8, rawConstantIndices = array<i32: 80>}> : (!llvm.ptr) -> !llvm.ptr
    %7 = "llvm.load"(%6) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    "llvm.store"(%5, %7) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    "cf.br"()[^bb1] : () -> ()
  ^bb1:  // pred: ^bb0
    "func.return"() : () -> ()
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> (), sym_name = "f10"}> ({
  ^bb0(%arg0: !llvm.ptr):
    %0 = "arith.constant"() <{value = 1 : i32}> : () -> i32
    %1 = "func.call"(%arg0, %0) <{callee = @dora_fn_wasm_func_ref}> : (!llvm.ptr, i32) -> !llvm.ptr
    %2 = "llvm.getelementptr"(%arg0) <{elem_type = i8, rawConstantIndices = array<i32: 80>}> : (!llvm.ptr) -> !llvm.ptr
    %3 = "llvm.load"(%2) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    "llvm.store"(%1, %3) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    "cf.br"()[^bb1] : () -> ()
  ^bb1:  // pred: ^bb0
    "func.return"() : () -> ()
  }) : () -> ()
}) : () -> ()
