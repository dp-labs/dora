---
source: crates/dora-compiler/src/wasm/tests/conversion.rs
expression: op
snapshot_kind: text
---
module {
  func.func public @even(%arg0: !llvm.ptr, %arg1: i32) -> i32 attributes {llvm.emit_c_interface} {
    %c1_i32 = arith.constant 1 : i32
    %0 = llvm.alloca %c1_i32 x i32 : (i32) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %1 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %2 = arith.cmpi eq, %1, %c0_i32 : i32
    %3 = arith.extui %2 : i1 to i32
    %c0_i32_0 = arith.constant 0 : i32
    %4 = arith.cmpi ne, %3, %c0_i32_0 : i32
    cf.cond_br %4, ^bb3, ^bb4
  ^bb2(%5: i32):  // pred: ^bb5
    return %5 : i32
  ^bb3:  // pred: ^bb1
    %c1_i32_1 = arith.constant 1 : i32
    cf.br ^bb5(%c1_i32_1 : i32)
  ^bb4:  // pred: ^bb1
    %6 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i32_2 = arith.constant 1 : i32
    %7 = arith.subi %6, %c1_i32_2 : i32
    %8 = call @odd(%arg0, %7) : (!llvm.ptr, i32) -> i32
    cf.br ^bb5(%8 : i32)
  ^bb5(%9: i32):  // 2 preds: ^bb3, ^bb4
    cf.br ^bb2(%9 : i32)
  }
  func.func public @odd(%arg0: !llvm.ptr, %arg1: i32) -> i32 attributes {llvm.emit_c_interface} {
    %c1_i32 = arith.constant 1 : i32
    %0 = llvm.alloca %c1_i32 x i32 : (i32) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %1 = llvm.load %0 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %2 = arith.cmpi eq, %1, %c0_i32 : i32
    %3 = arith.extui %2 : i1 to i32
    %c0_i32_0 = arith.constant 0 : i32
    %4 = arith.cmpi ne, %3, %c0_i32_0 : i32
    cf.cond_br %4, ^bb3, ^bb4
  ^bb2(%5: i32):  // pred: ^bb5
    return %5 : i32
  ^bb3:  // pred: ^bb1
    %c0_i32_1 = arith.constant 0 : i32
    cf.br ^bb5(%c0_i32_1 : i32)
  ^bb4:  // pred: ^bb1
    %6 = llvm.load %0 : !llvm.ptr -> i32
    %c1_i32_2 = arith.constant 1 : i32
    %7 = arith.subi %6, %c1_i32_2 : i32
    %8 = call @even(%arg0, %7) : (!llvm.ptr, i32) -> i32
    cf.br ^bb5(%8 : i32)
  ^bb5(%9: i32):  // 2 preds: ^bb3, ^bb4
    cf.br ^bb2(%9 : i32)
  }
  func.func private @dora_fn_wasm_table_init(!llvm.ptr, i32, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_table_copy(!llvm.ptr, i32, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_table_fill(!llvm.ptr, i32, i32, !llvm.ptr, i32)
  func.func private @dora_fn_wasm_table_size(!llvm.ptr, i32) -> i32
  func.func private @dora_fn_wasm_table_get(!llvm.ptr, i32, i32) -> !llvm.ptr
  func.func private @dora_fn_wasm_table_set(!llvm.ptr, i32, i32, !llvm.ptr)
  func.func private @dora_fn_wasm_table_grow(!llvm.ptr, !llvm.ptr, i32, i32) -> i32
  func.func private @dora_fn_wasm_imported_table_size(!llvm.ptr, i32) -> i32
  func.func private @dora_fn_wasm_imported_table_get(!llvm.ptr, i32, i32) -> !llvm.ptr
  func.func private @dora_fn_wasm_imported_table_grow(!llvm.ptr, !llvm.ptr, i32, i32) -> i32
  func.func private @dora_fn_wasm_memory_init(!llvm.ptr, i32, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_memory_size(!llvm.ptr, i32) -> i32
  func.func private @dora_fn_wasm_memory_grow(!llvm.ptr, i32, i32) -> i32
  func.func private @dora_fn_wasm_memory_copy(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_memory_fill(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_memory_notify(!llvm.ptr, i32, i32, i32) -> i32
  func.func private @dora_fn_wasm_memory_wait32(!llvm.ptr, i32, i32, i32, i64) -> i32
  func.func private @dora_fn_wasm_memory_wait64(!llvm.ptr, i32, i32, i64, i64) -> i32
  func.func private @dora_fn_wasm_imported_memory_size(!llvm.ptr, i32) -> i32
  func.func private @dora_fn_wasm_imported_memory_grow(!llvm.ptr, i32, i32) -> i32
  func.func private @dora_fn_wasm_imported_memory_copy(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_imported_memory_fill(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_imported_memory_notify(!llvm.ptr, i32, i32, i32) -> i32
  func.func private @dora_fn_wasm_imported_memory_wait32(!llvm.ptr, i32, i32, i32, i64) -> i32
  func.func private @dora_fn_wasm_imported_memory_wait64(!llvm.ptr, i32, i32, i64, i64) -> i32
  func.func private @dora_fn_wasm_func_ref(!llvm.ptr, i32) -> !llvm.ptr
  func.func private @dora_fn_wasm_data_drop(!llvm.ptr, i32)
  func.func private @dora_fn_wasm_elem_drop(!llvm.ptr, i32)
  func.func private @dora_fn_wasm_raise_trap(i32)
}
