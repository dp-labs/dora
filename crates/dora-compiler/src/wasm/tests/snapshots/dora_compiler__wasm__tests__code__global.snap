---
source: crates/dora-compiler/src/wasm/tests/code.rs
expression: op
snapshot_kind: text
---
module {
  func.func @f0(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[128] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb1(%2 : i32)
  ^bb1(%3: i32):  // pred: ^bb0
    return %3 : i32
  }
  func.func @f1(%arg0: !llvm.ptr) -> i64 {
    %0 = llvm.getelementptr %arg0[152] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i64
    cf.br ^bb1(%2 : i64)
  ^bb1(%3: i64):  // pred: ^bb0
    return %3 : i64
  }
  func.func @f2(%arg0: !llvm.ptr) -> !llvm.ptr {
    %0 = llvm.getelementptr %arg0[208] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1(%2 : !llvm.ptr)
  ^bb1(%3: !llvm.ptr):  // pred: ^bb0
    return %3 : !llvm.ptr
  }
  func.func @f3(%arg0: !llvm.ptr) -> !llvm.ptr {
    %0 = llvm.getelementptr %arg0[216] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    cf.br ^bb1(%2 : !llvm.ptr)
  ^bb1(%3: !llvm.ptr):  // pred: ^bb0
    return %3 : !llvm.ptr
  }
  func.func @f4(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb1(%2 : i32)
  ^bb1(%3: i32):  // pred: ^bb0
    return %3 : i32
  }
  func.func @f5(%arg0: !llvm.ptr) -> i64 {
    %0 = llvm.getelementptr %arg0[184] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i64
    cf.br ^bb1(%2 : i64)
  ^bb1(%3: i64):  // pred: ^bb0
    return %3 : i64
  }
  func.func @f6(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[192] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb1(%2 : i32)
  ^bb1(%3: i32):  // pred: ^bb0
    return %3 : i32
  }
  func.func @f7(%arg0: !llvm.ptr) -> i64 {
    %0 = llvm.getelementptr %arg0[200] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i64
    cf.br ^bb1(%2 : i64)
  ^bb1(%3: i64):  // pred: ^bb0
    return %3 : i64
  }
  func.func @f8(%arg0: !llvm.ptr, %arg1: i32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %1 = llvm.load %0 : !llvm.ptr -> i32
    %2 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    llvm.store %1, %3 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f9(%arg0: !llvm.ptr, %arg1: i64) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i64 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i64, !llvm.ptr
    %1 = llvm.load %0 : !llvm.ptr -> i64
    %2 = llvm.getelementptr %arg0[184] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    llvm.store %1, %3 : i64, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f10(%arg0: !llvm.ptr, %arg1: !llvm.ptr) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x !llvm.ptr : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : !llvm.ptr, !llvm.ptr
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.getelementptr %arg0[216] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    llvm.store %1, %3 : !llvm.ptr, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f11(%arg0: !llvm.ptr) -> f32 {
    %0 = llvm.getelementptr %arg0[136] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> f32
    cf.br ^bb1(%2 : f32)
  ^bb1(%3: f32):  // pred: ^bb0
    return %3 : f32
  }
  func.func @f12(%arg0: !llvm.ptr) -> f64 {
    %0 = llvm.getelementptr %arg0[144] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> f64
    cf.br ^bb1(%2 : f64)
  ^bb1(%3: f64):  // pred: ^bb0
    return %3 : f64
  }
  func.func @f13(%arg0: !llvm.ptr) -> f32 {
    %0 = llvm.getelementptr %arg0[168] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> f32
    cf.br ^bb1(%2 : f32)
  ^bb1(%3: f32):  // pred: ^bb0
    return %3 : f32
  }
  func.func @f14(%arg0: !llvm.ptr) -> f64 {
    %0 = llvm.getelementptr %arg0[176] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> f64
    cf.br ^bb1(%2 : f64)
  ^bb1(%3: f64):  // pred: ^bb0
    return %3 : f64
  }
  func.func @f15(%arg0: !llvm.ptr, %arg1: f32) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x f32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : f32, !llvm.ptr
    %1 = llvm.load %0 : !llvm.ptr -> f32
    %2 = llvm.getelementptr %arg0[168] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    llvm.store %1, %3 : f32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f16(%arg0: !llvm.ptr, %arg1: f64) {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x f64 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : f64, !llvm.ptr
    %1 = llvm.load %0 : !llvm.ptr -> f64
    %2 = llvm.getelementptr %arg0[176] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    llvm.store %1, %3 : f64, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @dummy(%arg0: !llvm.ptr) {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f18(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c3_i32 = arith.constant 3 : i32
    %3 = "wasm.select"(%2, %c2_i32, %c3_i32) : (i32, i32, i32) -> i32
    cf.br ^bb1(%3 : i32)
  ^bb1(%4: i32):  // pred: ^bb0
    return %4 : i32
  }
  func.func @f19(%arg0: !llvm.ptr) -> i32 {
    %c2_i32 = arith.constant 2 : i32
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c3_i32 = arith.constant 3 : i32
    %3 = "wasm.select"(%c2_i32, %2, %c3_i32) : (i32, i32, i32) -> i32
    cf.br ^bb1(%3 : i32)
  ^bb1(%4: i32):  // pred: ^bb0
    return %4 : i32
  }
  func.func @f20(%arg0: !llvm.ptr) -> i32 {
    %c2_i32 = arith.constant 2 : i32
    %c3_i32 = arith.constant 3 : i32
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %3 = "wasm.select"(%c2_i32, %c3_i32, %2) : (i32, i32, i32) -> i32
    cf.br ^bb1(%3 : i32)
  ^bb1(%4: i32):  // pred: ^bb0
    return %4 : i32
  }
  func.func @f21(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb3
  ^bb1(%0: i32):  // pred: ^bb2
    return %0 : i32
  ^bb2(%1: i32):  // pred: ^bb3
    cf.br ^bb1(%1 : i32)
  ^bb3:  // pred: ^bb0
    %2 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> i32
    call @dummy(%arg0) : (!llvm.ptr) -> ()
    call @dummy(%arg0) : (!llvm.ptr) -> ()
    cf.br ^bb2(%4 : i32)
  }
  func.func @f22(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb3
  ^bb1(%0: i32):  // pred: ^bb2
    return %0 : i32
  ^bb2(%1: i32):  // pred: ^bb3
    cf.br ^bb1(%1 : i32)
  ^bb3:  // pred: ^bb0
    call @dummy(%arg0) : (!llvm.ptr) -> ()
    %2 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> i32
    call @dummy(%arg0) : (!llvm.ptr) -> ()
    cf.br ^bb2(%4 : i32)
  }
  func.func @f23(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb3
  ^bb1(%0: i32):  // pred: ^bb2
    return %0 : i32
  ^bb2(%1: i32):  // pred: ^bb3
    cf.br ^bb1(%1 : i32)
  ^bb3:  // pred: ^bb0
    call @dummy(%arg0) : (!llvm.ptr) -> ()
    call @dummy(%arg0) : (!llvm.ptr) -> ()
    %2 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> i32
    cf.br ^bb2(%4 : i32)
  }
  func.func @f24(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %3 = arith.cmpi ne, %2, %c0_i32 : i32
    cf.cond_br %3, ^bb2, ^bb3
  ^bb1(%4: i32):  // pred: ^bb4
    return %4 : i32
  ^bb2:  // pred: ^bb0
    call @dummy(%arg0) : (!llvm.ptr) -> ()
    %c2_i32 = arith.constant 2 : i32
    cf.br ^bb4(%c2_i32 : i32)
  ^bb3:  // pred: ^bb0
    call @dummy(%arg0) : (!llvm.ptr) -> ()
    %c3_i32 = arith.constant 3 : i32
    cf.br ^bb4(%c3_i32 : i32)
  ^bb4(%5: i32):  // 2 preds: ^bb2, ^bb3
    cf.br ^bb1(%5 : i32)
  }
  func.func @f25(%arg0: !llvm.ptr) -> i32 {
    %c1_i32 = arith.constant 1 : i32
    %c0_i32 = arith.constant 0 : i32
    %0 = arith.cmpi ne, %c1_i32, %c0_i32 : i32
    cf.cond_br %0, ^bb2, ^bb3
  ^bb1(%1: i32):  // pred: ^bb4
    return %1 : i32
  ^bb2:  // pred: ^bb0
    %2 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> i32
    cf.br ^bb4(%4 : i32)
  ^bb3:  // pred: ^bb0
    %c2_i32 = arith.constant 2 : i32
    cf.br ^bb4(%c2_i32 : i32)
  ^bb4(%5: i32):  // 2 preds: ^bb2, ^bb3
    cf.br ^bb1(%5 : i32)
  }
  func.func @f26(%arg0: !llvm.ptr) -> i32 {
    %c0_i32 = arith.constant 0 : i32
    %c0_i32_0 = arith.constant 0 : i32
    %0 = arith.cmpi ne, %c0_i32, %c0_i32_0 : i32
    cf.cond_br %0, ^bb2, ^bb3
  ^bb1(%1: i32):  // pred: ^bb4
    return %1 : i32
  ^bb2:  // pred: ^bb0
    %c2_i32 = arith.constant 2 : i32
    cf.br ^bb4(%c2_i32 : i32)
  ^bb3:  // pred: ^bb0
    %2 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %3 = llvm.load %2 : !llvm.ptr -> !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> i32
    cf.br ^bb4(%4 : i32)
  ^bb4(%5: i32):  // 2 preds: ^bb2, ^bb3
    cf.br ^bb1(%5 : i32)
  }
  func.func @f27(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c0_i32 = arith.constant 0 : i32
    %3 = arith.cmpi ne, %c2_i32, %c0_i32 : i32
    cf.cond_br %3, ^bb2(%2 : i32), ^bb3(%2 : i32)
  ^bb1(%4: i32):  // 2 preds: ^bb2, ^bb3
    return %4 : i32
  ^bb2(%5: i32):  // pred: ^bb0
    cf.br ^bb1(%5 : i32)
  ^bb3(%6: i32):  // pred: ^bb0
    %c3_i32 = arith.constant 3 : i32
    cf.br ^bb1(%c3_i32 : i32)
  }
  func.func @f28(%arg0: !llvm.ptr) -> i32 {
    %c2_i32 = arith.constant 2 : i32
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %3 = arith.cmpi ne, %2, %c0_i32 : i32
    cf.cond_br %3, ^bb2(%c2_i32 : i32), ^bb3(%c2_i32 : i32)
  ^bb1(%4: i32):  // 2 preds: ^bb2, ^bb3
    return %4 : i32
  ^bb2(%5: i32):  // pred: ^bb0
    cf.br ^bb1(%5 : i32)
  ^bb3(%6: i32):  // pred: ^bb0
    %c3_i32 = arith.constant 3 : i32
    cf.br ^bb1(%c3_i32 : i32)
  }
  func.func @f29(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c2_i32 = arith.constant 2 : i32
    %c0_i64 = arith.constant 0 : i64
    cf.switch %c2_i32 : i32, [
      default: ^bb2(%2 : i32),
      0: ^bb2(%2 : i32)
    ]
  ^bb1(%3: i32):  // pred: ^bb2
    return %3 : i32
  ^bb2(%4: i32):  // 2 preds: ^bb0, ^bb0
    cf.br ^bb1(%4 : i32)
  }
  func.func @f30(%arg0: !llvm.ptr) -> i32 {
    %c2_i32 = arith.constant 2 : i32
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    cf.switch %2 : i32, [
      default: ^bb2(%c2_i32 : i32),
      0: ^bb2(%c2_i32 : i32)
    ]
  ^bb1(%3: i32):  // pred: ^bb2
    return %3 : i32
  ^bb2(%4: i32):  // 2 preds: ^bb0, ^bb0
    cf.br ^bb1(%4 : i32)
  }
  func.func @func(%arg0: !llvm.ptr, %arg1: i32, %arg2: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg2, %1 : i32, !llvm.ptr
    %2 = llvm.load %0 : !llvm.ptr -> i32
    cf.br ^bb1(%2 : i32)
  ^bb1(%3: i32):  // pred: ^bb0
    return %3 : i32
  }
  func.func @f32(%arg0: !llvm.ptr) {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %c0_i64 = arith.constant 0 : i64
    %3 = arith.extui %2 : i32 to i64
    %4 = arith.addi %3, %c0_i64 : i64
    %5 = llvm.getelementptr %arg0[104] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %7[%4] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    llvm.store %c1_i32, %8 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f33(%arg0: !llvm.ptr) {
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %3 = arith.extui %c0_i32 : i32 to i64
    %4 = arith.addi %3, %c0_i64 : i64
    %5 = llvm.getelementptr %arg0[104] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %7[%4] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    llvm.store %2, %8 : i32, !llvm.ptr
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f34(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i64 = arith.constant 0 : i64
    %3 = arith.extui %2 : i32 to i64
    %4 = arith.addi %3, %c0_i64 : i64
    %5 = llvm.getelementptr %arg0[104] : (!llvm.ptr) -> !llvm.ptr, i8
    %6 = llvm.getelementptr %5[0] : (!llvm.ptr) -> !llvm.ptr, !llvm.ptr
    %7 = llvm.load %6 : !llvm.ptr -> !llvm.ptr
    %8 = llvm.getelementptr %7[%4] : (!llvm.ptr, i64) -> !llvm.ptr, !llvm.ptr
    %9 = llvm.load %8 : !llvm.ptr -> i32
    cf.br ^bb1(%9 : i32)
  ^bb1(%10: i32):  // pred: ^bb0
    return %10 : i32
  }
  func.func @f35(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c0_i32 = arith.constant 0 : i32
    %3 = "wasm.mem_grow"(%2, %c0_i32) : (i32, i32) -> i32
    cf.br ^bb1(%3 : i32)
  ^bb1(%4: i32):  // pred: ^bb0
    return %4 : i32
  }
  func.func @f(%arg0: !llvm.ptr, %arg1: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %1 = llvm.load %0 : !llvm.ptr -> i32
    cf.br ^bb1(%1 : i32)
  ^bb1(%2: i32):  // pred: ^bb0
    return %2 : i32
  }
  func.func @f37(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %3 = call @f(%arg0, %2) : (!llvm.ptr, i32) -> i32
    cf.br ^bb1(%3 : i32)
  ^bb1(%4: i32):  // pred: ^bb0
    return %4 : i32
  }
  func.func @f38(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb1(%2 : i32)
  ^bb1(%3: i32):  // pred: ^bb0
    return %3 : i32
  }
  func.func @f39(%arg0: !llvm.ptr) {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    return
  }
  func.func @f40(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb2(%2 : i32)
  ^bb1(%3: i32):  // pred: ^bb2
    return %3 : i32
  ^bb2(%4: i32):  // pred: ^bb0
    cf.br ^bb1(%4 : i32)
  }
  func.func @f41(%arg0: !llvm.ptr, %arg1: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %1 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    %3 = llvm.load %2 : !llvm.ptr -> i32
    llvm.store %3, %0 : i32, !llvm.ptr
    %4 = llvm.load %0 : !llvm.ptr -> i32
    cf.br ^bb1(%4 : i32)
  ^bb1(%5: i32):  // pred: ^bb0
    return %5 : i32
  }
  func.func @f42(%arg0: !llvm.ptr, %arg1: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %0 : i32, !llvm.ptr
    %1 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %2 = llvm.load %1 : !llvm.ptr -> !llvm.ptr
    %3 = llvm.load %2 : !llvm.ptr -> i32
    llvm.store %3, %0 : i32, !llvm.ptr
    cf.br ^bb1(%3 : i32)
  ^bb1(%4: i32):  // pred: ^bb0
    return %4 : i32
  }
  func.func @f43(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    llvm.store %2, %1 : i32, !llvm.ptr
    %3 = llvm.load %1 : !llvm.ptr -> i32
    cf.br ^bb1(%3 : i32)
  ^bb1(%4: i32):  // pred: ^bb0
    return %4 : i32
  }
  func.func @f44(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %3 = "wasm.eqz"(%2) : (i32) -> i32
    cf.br ^bb1(%3 : i32)
  ^bb1(%4: i32):  // pred: ^bb0
    return %4 : i32
  }
  func.func @f45(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[160] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %3 = llvm.load %1 : !llvm.ptr -> i32
    %4 = "wasm.mul"(%2, %3) : (i32, i32) -> i32
    cf.br ^bb1(%4 : i32)
  ^bb1(%5: i32):  // pred: ^bb0
    return %5 : i32
  }
  func.func @f46(%arg0: !llvm.ptr) -> i32 {
    %0 = llvm.getelementptr %arg0[56] : (!llvm.ptr) -> !llvm.ptr, i8
    %1 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %2 = llvm.load %1 : !llvm.ptr -> i32
    %c1_i32 = arith.constant 1 : i32
    %3 = "wasm.gtu"(%2, %c1_i32) : (i32, i32) -> i32
    cf.br ^bb1(%3 : i32)
  ^bb1(%4: i32):  // pred: ^bb0
    return %4 : i32
  }
}
