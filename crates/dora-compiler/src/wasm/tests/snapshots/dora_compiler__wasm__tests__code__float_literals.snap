---
source: crates/dora-compiler/src/wasm/tests/code.rs
expression: op
snapshot_kind: text
---
module {
  func.func @f0(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.14328934E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f1(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.14328934E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f2(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.29077299E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f3(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.14328934E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f4(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.14119219E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f5(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.2949673E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f6(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.13916966E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f7(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.14225728E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f8(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.28937958E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f9(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.13909504E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f10(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.13909504E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f11(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.28657869E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f12(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0.000000e+00 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f13(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0.000000e+00 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f14(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.14748365E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f15(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.08691866E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f16(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.000000e+00 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f17(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0x4B000000 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f18(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.13909504E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f19(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0x4AFFFFFE : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f20(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.1492393E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f21(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.20072666E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f22(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.73644186E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f23(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 3.47288371E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f24(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 3.74131917E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f25(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0.000000e+00 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f26(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0.000000e+00 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f27(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.14748365E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f28(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.08691866E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f29(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.000000e+00 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f30(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0x4B000000 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f31(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0x4AFFFFFE : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f32(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.13909504E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f33(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.3435543E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f34(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.17865779E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f35(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.62198144E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f36(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 3.47288371E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f37(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 3.74131917E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f38(%arg0: !llvm.ptr) -> i32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.06535322E+9 : f32
    %0 = "wasm.i32_reinterpret_f32"(%cst) : (f32) -> i32
    cf.br ^bb2(%0 : i32)
  ^bb2(%1: i32):  // pred: ^bb1
    return %1 : i32
  }
  func.func @f39(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2211202370410906E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f40(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2211202370410906E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f41(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.8444492273895866E+19 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f42(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2211202370410906E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f43(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2199943371342479E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f44(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.8446744073709552E+19 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f45(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2188884532257495E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f46(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.219717281780009E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f47(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.8442992325002076E+19 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f48(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2188684372274053E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f49(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2188684372274053E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f50(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.8442240474082181E+19 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f51(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0.000000e+00 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f52(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0.000000e+00 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f53(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2233720368547758E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f54(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.6187602561794161E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f55(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.000000e+00 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f56(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0x4330000000000000 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f57(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0x432FFFFFFFFFFFFE : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f58(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2188684372274053E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f59(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 5.057542381537067E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f60(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.6798604809933947E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f61(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.9674703889896571E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f62(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.3970166044103279E+19 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f63(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.4114281232179134E+19 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f64(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0.000000e+00 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f65(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0.000000e+00 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f66(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2233720368547758E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f67(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.6187602561794161E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f68(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.000000e+00 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f69(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0x4330000000000000 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f70(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 0x432FFFFFFFFFFFFE : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f71(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 9.2188684372274053E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f72(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 6.1030214530491197E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f73(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.6680123498509107E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f74(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.9060199102040996E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f75(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.3970166044103279E+19 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f76(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.4114281232179134E+19 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f77(%arg0: !llvm.ptr) -> i64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.6071824193359457E+18 : f64
    %0 = "wasm.i64_reinterpret_f64"(%cst) : (f64) -> i64
    cf.br ^bb2(%0 : i64)
  ^bb2(%1: i64):  // pred: ^bb1
    return %1 : i64
  }
  func.func @f78(%arg0: !llvm.ptr) -> f32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.23234816E+9 : f32
    cf.br ^bb2(%cst : f32)
  ^bb2(%0: f32):  // pred: ^bb1
    return %0 : f32
  }
  func.func @f79(%arg0: !llvm.ptr) -> f32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.14884608E+9 : f32
    cf.br ^bb2(%cst : f32)
  ^bb2(%0: f32):  // pred: ^bb1
    return %0 : f32
  }
  func.func @f80(%arg0: !llvm.ptr) -> f32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.14889754E+9 : f32
    cf.br ^bb2(%cst : f32)
  ^bb2(%0: f32):  // pred: ^bb1
    return %0 : f32
  }
  func.func @f81(%arg0: !llvm.ptr) -> f32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.48275853E+9 : f32
    cf.br ^bb2(%cst : f32)
  ^bb2(%0: f32):  // pred: ^bb1
    return %0 : f32
  }
  func.func @f82(%arg0: !llvm.ptr) -> f32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.84743898E+9 : f32
    cf.br ^bb2(%cst : f32)
  ^bb2(%0: f32):  // pred: ^bb1
    return %0 : f32
  }
  func.func @f83(%arg0: !llvm.ptr) -> f32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.29400422E+9 : f32
    cf.br ^bb2(%cst : f32)
  ^bb2(%0: f32):  // pred: ^bb1
    return %0 : f32
  }
  func.func @f84(%arg0: !llvm.ptr) -> f32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.20514342E+9 : f32
    cf.br ^bb2(%cst : f32)
  ^bb2(%0: f32):  // pred: ^bb1
    return %0 : f32
  }
  func.func @f85(%arg0: !llvm.ptr) -> f32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.19334502E+9 : f32
    cf.br ^bb2(%cst : f32)
  ^bb2(%0: f32):  // pred: ^bb1
    return %0 : f32
  }
  func.func @f86(%arg0: !llvm.ptr) -> f32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.24046541E+9 : f32
    cf.br ^bb2(%cst : f32)
  ^bb2(%0: f32):  // pred: ^bb1
    return %0 : f32
  }
  func.func @f87(%arg0: !llvm.ptr) -> f32 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 1.43731917E+9 : f32
    cf.br ^bb2(%cst : f32)
  ^bb2(%0: f32):  // pred: ^bb1
    return %0 : f32
  }
  func.func @f88(%arg0: !llvm.ptr) -> f64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.6968371466846863E+18 : f64
    cf.br ^bb2(%cst : f64)
  ^bb2(%0: f64):  // pred: ^bb1
    return %0 : f64
  }
  func.func @f89(%arg0: !llvm.ptr) -> f64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.6520073088411894E+18 : f64
    cf.br ^bb2(%cst : f64)
  ^bb2(%0: f64):  // pred: ^bb1
    return %0 : f64
  }
  func.func @f90(%arg0: !llvm.ptr) -> f64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.6520349425766595E+18 : f64
    cf.br ^bb2(%cst : f64)
  ^bb2(%0: f64):  // pred: ^bb1
    return %0 : f64
  }
  func.func @f91(%arg0: !llvm.ptr) -> f64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 2.7968370191268444E+18 : f64
    cf.br ^bb2(%cst : f64)
  ^bb2(%0: f64):  // pred: ^bb1
    return %0 : f64
  }
  func.func @f92(%arg0: !llvm.ptr) -> f64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 5.0270615073621197E+18 : f64
    cf.br ^bb2(%cst : f64)
  ^bb2(%0: f64):  // pred: ^bb1
    return %0 : f64
  }
  func.func @f93(%arg0: !llvm.ptr) -> f64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.8385197941331855E+18 : f64
    cf.br ^bb2(%cst : f64)
  ^bb2(%0: f64):  // pred: ^bb1
    return %0 : f64
  }
  func.func @f94(%arg0: !llvm.ptr) -> f64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.6822317152576471E+18 : f64
    cf.br ^bb2(%cst : f64)
  ^bb2(%0: f64):  // pred: ^bb1
    return %0 : f64
  }
  func.func @f95(%arg0: !llvm.ptr) -> f64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.6758974895741143E+18 : f64
    cf.br ^bb2(%cst : f64)
  ^bb2(%0: f64):  // pred: ^bb1
    return %0 : f64
  }
  func.func @f96(%arg0: !llvm.ptr) -> f64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.7011950610213765E+18 : f64
    cf.br ^bb2(%cst : f64)
  ^bb2(%0: f64):  // pred: ^bb1
    return %0 : f64
  }
  func.func @f97(%arg0: !llvm.ptr) -> f64 {
    cf.br ^bb1
  ^bb1:  // pred: ^bb0
    %cst = arith.constant 4.8068801404201492E+18 : f64
    cf.br ^bb2(%cst : f64)
  ^bb2(%0: f64):  // pred: ^bb1
    return %0 : f64
  }
  func.func private @dora_fn_wasm_table_init(!llvm.ptr, i32, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_table_fill(!llvm.ptr, i32, i32, !llvm.ptr, i32)
  func.func private @dora_fn_wasm_table_size(!llvm.ptr, i32) -> i32
  func.func private @dora_fn_wasm_table_get(!llvm.ptr, i32, i32) -> !llvm.ptr
  func.func private @dora_fn_wasm_table_set(!llvm.ptr, i32, i32, !llvm.ptr)
  func.func private @dora_fn_wasm_imported_table_size(!llvm.ptr, i32) -> i32
  func.func private @dora_fn_wasm_imported_table_get(!llvm.ptr, i32, i32) -> !llvm.ptr
  func.func private @dora_fn_wasm_imported_table_grow(!llvm.ptr, !llvm.ptr, i32, i32) -> i32
  func.func private @dora_fn_wasm_memory_init(!llvm.ptr, i32, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_memory_fill(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_memory_notify(!llvm.ptr, i32, i32, i32) -> i32
  func.func private @dora_fn_wasm_memory_wait32(!llvm.ptr, i32, i32, i32, i64) -> i32
  func.func private @dora_fn_wasm_memory_wait64(!llvm.ptr, i32, i32, i64, i64) -> i32
  func.func private @dora_fn_wasm_imported_memory_copy(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_imported_memory_fill(!llvm.ptr, i32, i32, i32, i32)
  func.func private @dora_fn_wasm_imported_memory_notify(!llvm.ptr, i32, i32, i32) -> i32
  func.func private @dora_fn_wasm_imported_memory_wait32(!llvm.ptr, i32, i32, i32, i64) -> i32
  func.func private @dora_fn_wasm_imported_memory_wait64(!llvm.ptr, i32, i32, i64, i64) -> i32
  func.func private @dora_fn_wasm_func_ref(!llvm.ptr, i32) -> !llvm.ptr
  func.func private @dora_fn_wasm_data_drop(!llvm.ptr, i32)
  func.func private @dora_fn_wasm_elem_drop(!llvm.ptr, i32)
  func.func private @dora_fn_wasm_raise_trap(!llvm.ptr, i32)
}
