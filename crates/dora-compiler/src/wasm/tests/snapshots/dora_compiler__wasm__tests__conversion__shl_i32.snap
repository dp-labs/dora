---
source: crates/dora-compiler/src/wasm/tests/conversion.rs
expression: op
---
module {
  func.func @f0(%arg0: i32, %arg1: i32) -> i32 {
    %c1_i64 = arith.constant 1 : i64
    %0 = llvm.alloca %c1_i64 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg0, %0 : i32, !llvm.ptr
    %c1_i64_0 = arith.constant 1 : i64
    %1 = llvm.alloca %c1_i64_0 x i32 : (i64) -> !llvm.ptr
    llvm.store %arg1, %1 : i32, !llvm.ptr
    %2 = llvm.load %0 : !llvm.ptr -> i32
    %3 = llvm.load %1 : !llvm.ptr -> i32
    %c255_i32 = arith.constant 255 : i32
    %4 = arith.cmpi ule, %2, %c255_i32 : i32
    %5 = scf.if %4 -> (i32) {
      %7 = arith.shli %3, %2 : i32
      scf.yield %7 : i32
    } else {
      %c0_i32 = arith.constant 0 : i32
      scf.yield %c0_i32 : i32
    }
    cf.br ^bb1(%5 : i32)
  ^bb1(%6: i32):  // pred: ^bb0
    return %6 : i32
  }
}
