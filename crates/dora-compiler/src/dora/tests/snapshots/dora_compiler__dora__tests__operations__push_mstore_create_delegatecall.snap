---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 49 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36, ^bb37, ^bb38, ^bb39, ^bb40, ^bb41, ^bb42, ^bb43, ^bb44, ^bb45, ^bb46, ^bb47, ^bb48, ^bb49
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c0_i64_4 = arith.constant 0 : i64
    %37 = arith.cmpi slt, %36, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %37, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c32_i64 = arith.constant 32 : i64
    %38 = arith.addi %36, %c32_i64 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %39 = arith.cmpi slt, %38, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %39, ^bb1(%c84_i8_6 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_7 = arith.constant 32 : i64
    %40 = arith.addi %38, %c31_i64 : i64
    %41 = arith.divui %40, %c32_i64_7 : i64
    %42 = arith.muli %41, %c32_i64_7 : i64
    %43 = call @dora_fn_extend_memory(%arg0, %42) : (!llvm.ptr, i64) -> !llvm.ptr
    %44 = llvm.getelementptr %43[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %43[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %48 = arith.cmpi ne, %47, %c0_i8 : i8
    cf.cond_br %48, ^bb1(%47 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %49 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %45, %49 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %42, %50 : i64, !llvm.ptr
    %51 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %54, %53 {alignment = 1 : i64} : i256, !llvm.ptr
    %55 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_8 : i64
    llvm.store %56, %9 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64, %56 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c17_i256 = arith.constant 17 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    %61 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_10 : i64
    llvm.store %62, %9 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64, %62 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_11 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c15_i256 = arith.constant 15 : i256
    %64 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %65 : i256, !llvm.ptr
    %66 = llvm.getelementptr %65[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %66, %64 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_12 = arith.constant 1 : i64
    %68 = arith.addi %67, %c1_i64_12 : i64
    llvm.store %68, %9 : i64, !llvm.ptr
    %69 = arith.cmpi ult, %c1024_i64, %68 : i64
    %c92_i8_13 = arith.constant 92 : i8
    cf.cond_br %69, ^bb1(%c92_i8_13 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %c0_i256_14 = arith.constant 0 : i256
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_14, %71 : i256, !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    %73 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_15 = arith.constant -2 : i64
    %74 = arith.addi %73, %c-2_i64_15 : i64
    llvm.store %74, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %75 = arith.cmpi ult, %73, %c3_i64 : i64
    %c91_i8_16 = arith.constant 91 : i8
    cf.cond_br %75, ^bb1(%c91_i8_16 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %76 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %77 = llvm.load %76 : !llvm.ptr -> !llvm.ptr
    %78 = llvm.getelementptr %77[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %79 = llvm.load %78 : !llvm.ptr -> i256
    llvm.store %78, %76 : !llvm.ptr, !llvm.ptr
    %80 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    %82 = llvm.getelementptr %81[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %83 = llvm.load %82 : !llvm.ptr -> i256
    llvm.store %82, %80 : !llvm.ptr, !llvm.ptr
    %84 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> !llvm.ptr
    %86 = llvm.getelementptr %85[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %87 = llvm.load %86 : !llvm.ptr -> i256
    llvm.store %86, %84 : !llvm.ptr, !llvm.ptr
    %88 = arith.trunci %83 : i256 to i64
    %c0_i64_17 = arith.constant 0 : i64
    %89 = arith.cmpi slt, %88, %c0_i64_17 : i64
    %c84_i8_18 = arith.constant 84 : i8
    cf.cond_br %89, ^bb1(%c84_i8_18 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %90 = arith.trunci %87 : i256 to i64
    %c0_i64_19 = arith.constant 0 : i64
    %91 = arith.cmpi slt, %90, %c0_i64_19 : i64
    %c84_i8_20 = arith.constant 84 : i8
    cf.cond_br %91, ^bb1(%c84_i8_20 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %92 = arith.addi %88, %90 : i64
    %c0_i64_21 = arith.constant 0 : i64
    %93 = arith.cmpi slt, %92, %c0_i64_21 : i64
    %c84_i8_22 = arith.constant 84 : i8
    cf.cond_br %93, ^bb1(%c84_i8_22 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %c31_i64_23 = arith.constant 31 : i64
    %c32_i64_24 = arith.constant 32 : i64
    %94 = arith.addi %92, %c31_i64_23 : i64
    %95 = arith.divui %94, %c32_i64_24 : i64
    %96 = arith.muli %95, %c32_i64_24 : i64
    %97 = call @dora_fn_extend_memory(%arg0, %96) : (!llvm.ptr, i64) -> !llvm.ptr
    %98 = llvm.getelementptr %97[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %99 = llvm.load %98 : !llvm.ptr -> !llvm.ptr
    %100 = llvm.getelementptr %97[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i8
    %c0_i8_25 = arith.constant 0 : i8
    %102 = arith.cmpi ne, %101, %c0_i8_25 : i8
    cf.cond_br %102, ^bb1(%101 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %103 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %99, %103 : !llvm.ptr, !llvm.ptr
    %104 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %96, %104 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %105 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %79, %105 {alignment = 1 : i64} : i256, !llvm.ptr
    %106 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %c1_i64_26 = arith.constant 1 : i64
    %108 = llvm.alloca %c1_i64_26 x i64 : (i64) -> !llvm.ptr
    llvm.store %107, %108 {alignment = 1 : i64} : i64, !llvm.ptr
    %109 = call @dora_fn_create(%arg0, %90, %88, %105, %108) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %110 = llvm.getelementptr %109[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %111 = llvm.load %110 : !llvm.ptr -> i8
    %112 = llvm.getelementptr %109[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %113 = llvm.load %112 : !llvm.ptr -> i8
    %c0_i8_27 = arith.constant 0 : i8
    %114 = arith.cmpi ne, %113, %c0_i8_27 : i8
    cf.cond_br %114, ^bb1(%113 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %c0_i8_28 = arith.constant 0 : i8
    %115 = arith.cmpi ne, %c0_i8_28, %111 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %115, ^bb1(%c94_i8 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %116 = llvm.load %105 : !llvm.ptr -> i256
    %117 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %118 = llvm.load %117 : !llvm.ptr -> !llvm.ptr
    llvm.store %116, %118 : i256, !llvm.ptr
    %119 = llvm.getelementptr %118[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %119, %117 : !llvm.ptr, !llvm.ptr
    %120 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_29 = arith.constant 1 : i64
    %121 = arith.addi %120, %c1_i64_29 : i64
    llvm.store %121, %9 : i64, !llvm.ptr
    %122 = arith.cmpi ult, %c1024_i64, %121 : i64
    %c92_i8_30 = arith.constant 92 : i8
    cf.cond_br %122, ^bb1(%c92_i8_30 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i256_31 = arith.constant 0 : i256
    %123 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %124 = llvm.load %123 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_31, %124 : i256, !llvm.ptr
    %125 = llvm.getelementptr %124[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %125, %123 : !llvm.ptr, !llvm.ptr
    %126 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_32 = arith.constant 1 : i64
    %127 = arith.addi %126, %c1_i64_32 : i64
    llvm.store %127, %9 : i64, !llvm.ptr
    %128 = arith.cmpi ult, %c1024_i64, %127 : i64
    %c92_i8_33 = arith.constant 92 : i8
    cf.cond_br %128, ^bb1(%c92_i8_33 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %c0_i256_34 = arith.constant 0 : i256
    %129 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %130 = llvm.load %129 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_34, %130 : i256, !llvm.ptr
    %131 = llvm.getelementptr %130[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %131, %129 : !llvm.ptr, !llvm.ptr
    %132 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_35 = arith.constant 1 : i64
    %133 = arith.addi %132, %c1_i64_35 : i64
    llvm.store %133, %9 : i64, !llvm.ptr
    %134 = arith.cmpi ult, %c1024_i64, %133 : i64
    %c92_i8_36 = arith.constant 92 : i8
    cf.cond_br %134, ^bb1(%c92_i8_36 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %c0_i256_37 = arith.constant 0 : i256
    %135 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_37, %136 : i256, !llvm.ptr
    %137 = llvm.getelementptr %136[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %137, %135 : !llvm.ptr, !llvm.ptr
    %138 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_38 = arith.constant 1 : i64
    %139 = arith.addi %138, %c1_i64_38 : i64
    llvm.store %139, %9 : i64, !llvm.ptr
    %140 = arith.cmpi ult, %c1024_i64, %139 : i64
    %c92_i8_39 = arith.constant 92 : i8
    cf.cond_br %140, ^bb1(%c92_i8_39 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_40 = arith.constant 0 : i256
    %141 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %142 = llvm.load %141 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_40, %142 : i256, !llvm.ptr
    %143 = llvm.getelementptr %142[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %143, %141 : !llvm.ptr, !llvm.ptr
    %144 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_41 = arith.constant 1 : i64
    %145 = arith.addi %144, %c1_i64_41 : i64
    llvm.store %145, %9 : i64, !llvm.ptr
    %146 = arith.cmpi ult, %c1024_i64, %145 : i64
    %c92_i8_42 = arith.constant 92 : i8
    cf.cond_br %146, ^bb1(%c92_i8_42 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i256_43 = arith.constant 0 : i256
    %147 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %148 = llvm.load %147 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_43, %148 : i256, !llvm.ptr
    %149 = llvm.getelementptr %148[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %149, %147 : !llvm.ptr, !llvm.ptr
    %150 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_44 = arith.constant 1 : i64
    %151 = arith.addi %150, %c1_i64_44 : i64
    llvm.store %151, %9 : i64, !llvm.ptr
    %152 = arith.cmpi ult, %c1024_i64, %151 : i64
    %c92_i8_45 = arith.constant 92 : i8
    cf.cond_br %152, ^bb1(%c92_i8_45 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %153 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %154 = llvm.load %153 : !llvm.ptr -> !llvm.ptr
    %155 = llvm.getelementptr %154[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %156 = llvm.load %155 : !llvm.ptr -> i256
    %157 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %158 = llvm.load %157 : !llvm.ptr -> !llvm.ptr
    llvm.store %156, %158 : i256, !llvm.ptr
    %159 = llvm.getelementptr %158[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %159, %157 : !llvm.ptr, !llvm.ptr
    %160 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %161 = arith.addi %160, %c1_i64_46 : i64
    llvm.store %161, %9 : i64, !llvm.ptr
    %162 = arith.cmpi ult, %c1024_i64, %161 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %162, ^bb1(%c92_i8_47 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %c65535_i256 = arith.constant 65535 : i256
    %163 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %164 : i256, !llvm.ptr
    %165 = llvm.getelementptr %164[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %165, %163 : !llvm.ptr, !llvm.ptr
    %166 = llvm.load %9 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %167 = arith.addi %166, %c-5_i64 : i64
    llvm.store %167, %9 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %168 = arith.cmpi ult, %166, %c6_i64 : i64
    %c91_i8_48 = arith.constant 91 : i8
    cf.cond_br %168, ^bb1(%c91_i8_48 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %169 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %170 = llvm.load %169 : !llvm.ptr -> !llvm.ptr
    %171 = llvm.getelementptr %170[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %172 = llvm.load %171 : !llvm.ptr -> i256
    llvm.store %171, %169 : !llvm.ptr, !llvm.ptr
    %173 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %174 = llvm.load %173 : !llvm.ptr -> !llvm.ptr
    %175 = llvm.getelementptr %174[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %176 = llvm.load %175 : !llvm.ptr -> i256
    llvm.store %175, %173 : !llvm.ptr, !llvm.ptr
    %177 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> !llvm.ptr
    %179 = llvm.getelementptr %178[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %180 = llvm.load %179 : !llvm.ptr -> i256
    llvm.store %179, %177 : !llvm.ptr, !llvm.ptr
    %181 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %182 = llvm.load %181 : !llvm.ptr -> !llvm.ptr
    %183 = llvm.getelementptr %182[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %184 = llvm.load %183 : !llvm.ptr -> i256
    llvm.store %183, %181 : !llvm.ptr, !llvm.ptr
    %185 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> !llvm.ptr
    %187 = llvm.getelementptr %186[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %188 = llvm.load %187 : !llvm.ptr -> i256
    llvm.store %187, %185 : !llvm.ptr, !llvm.ptr
    %189 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> !llvm.ptr
    %191 = llvm.getelementptr %190[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %192 = llvm.load %191 : !llvm.ptr -> i256
    llvm.store %191, %189 : !llvm.ptr, !llvm.ptr
    %c0_i256_49 = arith.constant 0 : i256
    %193 = arith.trunci %172 : i256 to i64
    %194 = arith.trunci %180 : i256 to i64
    %c0_i64_50 = arith.constant 0 : i64
    %195 = arith.cmpi slt, %194, %c0_i64_50 : i64
    %c84_i8_51 = arith.constant 84 : i8
    cf.cond_br %195, ^bb1(%c84_i8_51 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %196 = arith.trunci %184 : i256 to i64
    %c0_i64_52 = arith.constant 0 : i64
    %197 = arith.cmpi slt, %196, %c0_i64_52 : i64
    %c84_i8_53 = arith.constant 84 : i8
    cf.cond_br %197, ^bb1(%c84_i8_53 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %198 = arith.trunci %188 : i256 to i64
    %c0_i64_54 = arith.constant 0 : i64
    %199 = arith.cmpi slt, %198, %c0_i64_54 : i64
    %c84_i8_55 = arith.constant 84 : i8
    cf.cond_br %199, ^bb1(%c84_i8_55 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %200 = arith.trunci %192 : i256 to i64
    %c0_i64_56 = arith.constant 0 : i64
    %201 = arith.cmpi slt, %200, %c0_i64_56 : i64
    %c84_i8_57 = arith.constant 84 : i8
    cf.cond_br %201, ^bb1(%c84_i8_57 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %202 = arith.addi %194, %196 : i64
    %203 = arith.addi %198, %200 : i64
    %204 = arith.maxui %202, %203 : i64
    %c0_i64_58 = arith.constant 0 : i64
    %205 = arith.cmpi slt, %204, %c0_i64_58 : i64
    %c84_i8_59 = arith.constant 84 : i8
    cf.cond_br %205, ^bb1(%c84_i8_59 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c31_i64_60 = arith.constant 31 : i64
    %c32_i64_61 = arith.constant 32 : i64
    %206 = arith.addi %204, %c31_i64_60 : i64
    %207 = arith.divui %206, %c32_i64_61 : i64
    %208 = arith.muli %207, %c32_i64_61 : i64
    %209 = call @dora_fn_extend_memory(%arg0, %208) : (!llvm.ptr, i64) -> !llvm.ptr
    %210 = llvm.getelementptr %209[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %211 = llvm.load %210 : !llvm.ptr -> !llvm.ptr
    %212 = llvm.getelementptr %209[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %213 = llvm.load %212 : !llvm.ptr -> i8
    %c0_i8_62 = arith.constant 0 : i8
    %214 = arith.cmpi ne, %213, %c0_i8_62 : i8
    cf.cond_br %214, ^bb1(%213 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %215 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %211, %215 : !llvm.ptr, !llvm.ptr
    %216 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %208, %216 : i64, !llvm.ptr
    %217 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %218 = llvm.load %217 : !llvm.ptr -> i64
    %c1_i256_63 = arith.constant 1 : i256
    %219 = llvm.alloca %c1_i256_63 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_49, %219 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_64 = arith.constant 1 : i256
    %220 = llvm.alloca %c1_i256_64 x i256 : (i256) -> !llvm.ptr
    llvm.store %176, %220 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_65 = arith.constant 1 : i64
    %221 = llvm.alloca %c1_i64_65 x i64 : (i64) -> !llvm.ptr
    %c0_i8_66 = arith.constant 0 : i8
    %222 = call @dora_fn_call(%arg0, %193, %220, %219, %194, %196, %198, %200, %218, %221, %c0_i8_66) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %223 = llvm.getelementptr %222[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %224 = llvm.load %223 : !llvm.ptr -> i8
    %225 = llvm.getelementptr %222[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %226 = llvm.load %225 : !llvm.ptr -> i8
    %c0_i8_67 = arith.constant 0 : i8
    %227 = arith.cmpi ne, %226, %c0_i8_67 : i8
    cf.cond_br %227, ^bb1(%226 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %228 = llvm.load %221 : !llvm.ptr -> i64
    %229 = arith.extui %224 : i8 to i256
    %230 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %231 = llvm.load %230 : !llvm.ptr -> !llvm.ptr
    llvm.store %229, %231 : i256, !llvm.ptr
    %232 = llvm.getelementptr %231[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %232, %230 : !llvm.ptr, !llvm.ptr
    %233 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_68 = arith.constant 1 : i64
    %234 = arith.addi %233, %c1_i64_68 : i64
    llvm.store %234, %9 : i64, !llvm.ptr
    %235 = arith.cmpi ult, %c1024_i64, %234 : i64
    %c92_i8_69 = arith.constant 92 : i8
    cf.cond_br %235, ^bb1(%c92_i8_69 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c1_i256_70 = arith.constant 1 : i256
    %236 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %237 = llvm.load %236 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_70, %237 : i256, !llvm.ptr
    %238 = llvm.getelementptr %237[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %238, %236 : !llvm.ptr, !llvm.ptr
    %239 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_71 = arith.constant 1 : i64
    %240 = arith.addi %239, %c1_i64_71 : i64
    llvm.store %240, %9 : i64, !llvm.ptr
    %241 = arith.cmpi ult, %c1024_i64, %240 : i64
    %c92_i8_72 = arith.constant 92 : i8
    cf.cond_br %241, ^bb1(%c92_i8_72 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %c0_i256_73 = arith.constant 0 : i256
    %242 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %243 = llvm.load %242 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_73, %243 : i256, !llvm.ptr
    %244 = llvm.getelementptr %243[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %244, %242 : !llvm.ptr, !llvm.ptr
    %245 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_74 = arith.constant -2 : i64
    %246 = arith.addi %245, %c-2_i64_74 : i64
    llvm.store %246, %9 : i64, !llvm.ptr
    %c2_i64_75 = arith.constant 2 : i64
    %247 = arith.cmpi ult, %245, %c2_i64_75 : i64
    %c91_i8_76 = arith.constant 91 : i8
    cf.cond_br %247, ^bb1(%c91_i8_76 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %248 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %249 = llvm.load %248 : !llvm.ptr -> !llvm.ptr
    %250 = llvm.getelementptr %249[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %251 = llvm.load %250 : !llvm.ptr -> i256
    llvm.store %250, %248 : !llvm.ptr, !llvm.ptr
    %252 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> !llvm.ptr
    %254 = llvm.getelementptr %253[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %255 = llvm.load %254 : !llvm.ptr -> i256
    llvm.store %254, %252 : !llvm.ptr, !llvm.ptr
    %c1_i256_77 = arith.constant 1 : i256
    %256 = llvm.alloca %c1_i256_77 x i256 : (i256) -> !llvm.ptr
    llvm.store %251, %256 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_78 = arith.constant 1 : i256
    %257 = llvm.alloca %c1_i256_78 x i256 : (i256) -> !llvm.ptr
    llvm.store %255, %257 {alignment = 1 : i64} : i256, !llvm.ptr
    %258 = call @dora_fn_sstore(%arg0, %256, %257) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %259 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_79 = arith.constant 1 : i64
    %260 = arith.addi %259, %c1_i64_79 : i64
    llvm.store %260, %9 : i64, !llvm.ptr
    %261 = arith.cmpi ult, %c1024_i64, %260 : i64
    %c92_i8_80 = arith.constant 92 : i8
    cf.cond_br %261, ^bb1(%c92_i8_80 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %c0_i256_81 = arith.constant 0 : i256
    %262 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %263 = llvm.load %262 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_81, %263 : i256, !llvm.ptr
    %264 = llvm.getelementptr %263[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %264, %262 : !llvm.ptr, !llvm.ptr
    %265 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_82 = arith.constant 1 : i64
    %266 = arith.addi %265, %c1_i64_82 : i64
    llvm.store %266, %9 : i64, !llvm.ptr
    %267 = arith.cmpi ult, %c1024_i64, %266 : i64
    %c92_i8_83 = arith.constant 92 : i8
    cf.cond_br %267, ^bb1(%c92_i8_83 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %c0_i256_84 = arith.constant 0 : i256
    %268 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %269 = llvm.load %268 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_84, %269 : i256, !llvm.ptr
    %270 = llvm.getelementptr %269[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %270, %268 : !llvm.ptr, !llvm.ptr
    %271 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_85 = arith.constant 1 : i64
    %272 = arith.addi %271, %c1_i64_85 : i64
    llvm.store %272, %9 : i64, !llvm.ptr
    %273 = arith.cmpi ult, %c1024_i64, %272 : i64
    %c92_i8_86 = arith.constant 92 : i8
    cf.cond_br %273, ^bb1(%c92_i8_86 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %c32_i256 = arith.constant 32 : i256
    %274 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %275 = llvm.load %274 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %275 : i256, !llvm.ptr
    %276 = llvm.getelementptr %275[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %276, %274 : !llvm.ptr, !llvm.ptr
    %277 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_87 = arith.constant 1 : i64
    %278 = arith.addi %277, %c1_i64_87 : i64
    llvm.store %278, %9 : i64, !llvm.ptr
    %279 = arith.cmpi ult, %c1024_i64, %278 : i64
    %c92_i8_88 = arith.constant 92 : i8
    cf.cond_br %279, ^bb1(%c92_i8_88 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %c0_i256_89 = arith.constant 0 : i256
    %280 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %281 = llvm.load %280 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_89, %281 : i256, !llvm.ptr
    %282 = llvm.getelementptr %281[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %282, %280 : !llvm.ptr, !llvm.ptr
    %283 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_90 = arith.constant 1 : i64
    %284 = arith.addi %283, %c1_i64_90 : i64
    llvm.store %284, %9 : i64, !llvm.ptr
    %285 = arith.cmpi ult, %c1024_i64, %284 : i64
    %c92_i8_91 = arith.constant 92 : i8
    cf.cond_br %285, ^bb1(%c92_i8_91 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %286 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %287 = llvm.load %286 : !llvm.ptr -> !llvm.ptr
    %288 = llvm.getelementptr %287[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %289 = llvm.load %288 : !llvm.ptr -> i256
    %290 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %291 = llvm.load %290 : !llvm.ptr -> !llvm.ptr
    llvm.store %289, %291 : i256, !llvm.ptr
    %292 = llvm.getelementptr %291[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %292, %290 : !llvm.ptr, !llvm.ptr
    %293 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_92 = arith.constant 1 : i64
    %294 = arith.addi %293, %c1_i64_92 : i64
    llvm.store %294, %9 : i64, !llvm.ptr
    %295 = arith.cmpi ult, %c1024_i64, %294 : i64
    %c92_i8_93 = arith.constant 92 : i8
    cf.cond_br %295, ^bb1(%c92_i8_93 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c65535_i256_94 = arith.constant 65535 : i256
    %296 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %297 = llvm.load %296 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_94, %297 : i256, !llvm.ptr
    %298 = llvm.getelementptr %297[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %298, %296 : !llvm.ptr, !llvm.ptr
    %299 = llvm.load %9 : !llvm.ptr -> i64
    %c-5_i64_95 = arith.constant -5 : i64
    %300 = arith.addi %299, %c-5_i64_95 : i64
    llvm.store %300, %9 : i64, !llvm.ptr
    %c6_i64_96 = arith.constant 6 : i64
    %301 = arith.cmpi ult, %299, %c6_i64_96 : i64
    %c91_i8_97 = arith.constant 91 : i8
    cf.cond_br %301, ^bb1(%c91_i8_97 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %302 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %303 = llvm.load %302 : !llvm.ptr -> !llvm.ptr
    %304 = llvm.getelementptr %303[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %305 = llvm.load %304 : !llvm.ptr -> i256
    llvm.store %304, %302 : !llvm.ptr, !llvm.ptr
    %306 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %307 = llvm.load %306 : !llvm.ptr -> !llvm.ptr
    %308 = llvm.getelementptr %307[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %309 = llvm.load %308 : !llvm.ptr -> i256
    llvm.store %308, %306 : !llvm.ptr, !llvm.ptr
    %310 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %311 = llvm.load %310 : !llvm.ptr -> !llvm.ptr
    %312 = llvm.getelementptr %311[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %313 = llvm.load %312 : !llvm.ptr -> i256
    llvm.store %312, %310 : !llvm.ptr, !llvm.ptr
    %314 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %315 = llvm.load %314 : !llvm.ptr -> !llvm.ptr
    %316 = llvm.getelementptr %315[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %317 = llvm.load %316 : !llvm.ptr -> i256
    llvm.store %316, %314 : !llvm.ptr, !llvm.ptr
    %318 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %319 = llvm.load %318 : !llvm.ptr -> !llvm.ptr
    %320 = llvm.getelementptr %319[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %321 = llvm.load %320 : !llvm.ptr -> i256
    llvm.store %320, %318 : !llvm.ptr, !llvm.ptr
    %322 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %323 = llvm.load %322 : !llvm.ptr -> !llvm.ptr
    %324 = llvm.getelementptr %323[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %325 = llvm.load %324 : !llvm.ptr -> i256
    llvm.store %324, %322 : !llvm.ptr, !llvm.ptr
    %c0_i256_98 = arith.constant 0 : i256
    %326 = arith.trunci %305 : i256 to i64
    %327 = arith.trunci %313 : i256 to i64
    %c0_i64_99 = arith.constant 0 : i64
    %328 = arith.cmpi slt, %327, %c0_i64_99 : i64
    %c84_i8_100 = arith.constant 84 : i8
    cf.cond_br %328, ^bb1(%c84_i8_100 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %329 = arith.trunci %317 : i256 to i64
    %c0_i64_101 = arith.constant 0 : i64
    %330 = arith.cmpi slt, %329, %c0_i64_101 : i64
    %c84_i8_102 = arith.constant 84 : i8
    cf.cond_br %330, ^bb1(%c84_i8_102 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %331 = arith.trunci %321 : i256 to i64
    %c0_i64_103 = arith.constant 0 : i64
    %332 = arith.cmpi slt, %331, %c0_i64_103 : i64
    %c84_i8_104 = arith.constant 84 : i8
    cf.cond_br %332, ^bb1(%c84_i8_104 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %333 = arith.trunci %325 : i256 to i64
    %c0_i64_105 = arith.constant 0 : i64
    %334 = arith.cmpi slt, %333, %c0_i64_105 : i64
    %c84_i8_106 = arith.constant 84 : i8
    cf.cond_br %334, ^bb1(%c84_i8_106 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %335 = arith.addi %327, %329 : i64
    %336 = arith.addi %331, %333 : i64
    %337 = arith.maxui %335, %336 : i64
    %c0_i64_107 = arith.constant 0 : i64
    %338 = arith.cmpi slt, %337, %c0_i64_107 : i64
    %c84_i8_108 = arith.constant 84 : i8
    cf.cond_br %338, ^bb1(%c84_i8_108 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %c31_i64_109 = arith.constant 31 : i64
    %c32_i64_110 = arith.constant 32 : i64
    %339 = arith.addi %337, %c31_i64_109 : i64
    %340 = arith.divui %339, %c32_i64_110 : i64
    %341 = arith.muli %340, %c32_i64_110 : i64
    %342 = call @dora_fn_extend_memory(%arg0, %341) : (!llvm.ptr, i64) -> !llvm.ptr
    %343 = llvm.getelementptr %342[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %344 = llvm.load %343 : !llvm.ptr -> !llvm.ptr
    %345 = llvm.getelementptr %342[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %346 = llvm.load %345 : !llvm.ptr -> i8
    %c0_i8_111 = arith.constant 0 : i8
    %347 = arith.cmpi ne, %346, %c0_i8_111 : i8
    cf.cond_br %347, ^bb1(%346 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %348 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %344, %348 : !llvm.ptr, !llvm.ptr
    %349 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %341, %349 : i64, !llvm.ptr
    %350 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %351 = llvm.load %350 : !llvm.ptr -> i64
    %c1_i256_112 = arith.constant 1 : i256
    %352 = llvm.alloca %c1_i256_112 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_98, %352 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_113 = arith.constant 1 : i256
    %353 = llvm.alloca %c1_i256_113 x i256 : (i256) -> !llvm.ptr
    llvm.store %309, %353 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_114 = arith.constant 1 : i64
    %354 = llvm.alloca %c1_i64_114 x i64 : (i64) -> !llvm.ptr
    %c0_i8_115 = arith.constant 0 : i8
    %355 = call @dora_fn_call(%arg0, %326, %353, %352, %327, %329, %331, %333, %351, %354, %c0_i8_115) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %356 = llvm.getelementptr %355[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %357 = llvm.load %356 : !llvm.ptr -> i8
    %358 = llvm.getelementptr %355[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %359 = llvm.load %358 : !llvm.ptr -> i8
    %c0_i8_116 = arith.constant 0 : i8
    %360 = arith.cmpi ne, %359, %c0_i8_116 : i8
    cf.cond_br %360, ^bb1(%359 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %361 = llvm.load %354 : !llvm.ptr -> i64
    %362 = arith.extui %357 : i8 to i256
    %363 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %364 = llvm.load %363 : !llvm.ptr -> !llvm.ptr
    llvm.store %362, %364 : i256, !llvm.ptr
    %365 = llvm.getelementptr %364[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %365, %363 : !llvm.ptr, !llvm.ptr
    cf.br ^bb51
  ^bb51:  // pred: ^bb50
    %c0_i64_117 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %366 = call @dora_fn_write_result(%arg0, %c0_i64_117, %c0_i64_117, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
