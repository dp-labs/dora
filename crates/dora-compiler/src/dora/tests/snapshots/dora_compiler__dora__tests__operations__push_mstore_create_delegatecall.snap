---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
---
module {
  llvm.mlir.global internal @dora_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_memory_size() {addr_space = 0 : i32} : i32
  llvm.mlir.global internal @dora_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_calldata_size() {addr_space = 0 : i32} : i32
  llvm.mlir.global internal @dora_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_debug_print(i32)
  func.func private @dora_write_result(!llvm.ptr, i32, i32, i64, i8)
  func.func private @dora_keccak256_hasher(!llvm.ptr, i32, i32, !llvm.ptr)
  func.func private @dora_get_calldata_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_get_calldata_size(!llvm.ptr) -> i32
  func.func private @dora_get_chainid(!llvm.ptr) -> i64
  func.func private @dora_store_in_callvalue_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_caller_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_gaslimit(!llvm.ptr) -> i64
  func.func private @dora_extend_memory(!llvm.ptr, i32) -> !llvm.ptr
  func.func private @dora_copy_code_to_memory(!llvm.ptr, i32, i32, i32)
  func.func private @dora_read_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_write_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> i64
  func.func private @dora_append_log(!llvm.ptr, i32, i32)
  func.func private @dora_append_log_with_one_topic(!llvm.ptr, i32, i32, !llvm.ptr)
  func.func private @dora_append_log_with_two_topics(!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr)
  func.func private @dora_append_log_with_three_topics(!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_append_log_with_four_topics(!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_get_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_coinbase_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_get_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_codesize_from_address(!llvm.ptr, !llvm.ptr) -> i64
  func.func private @dora_get_address_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_get_prevrandao(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i32, i32, i32, i32, i64, !llvm.ptr, i8) -> i8
  func.func private @dora_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_copy_ext_code_to_memory(!llvm.ptr, !llvm.ptr, i32, i32, i32)
  func.func private @dora_get_blob_hash_at_index(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_get_block_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_code_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_create(!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr) -> i8
  func.func private @dora_create2(!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> i8
  func.func private @dora_get_return_data_size(!llvm.ptr) -> i32
  func.func private @dora_copy_return_data_into_memory(!llvm.ptr, i32, i32, i32)
  func.func private @dora_selfdestruct(!llvm.ptr, !llvm.ptr) -> i64
  func.func private @dora_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i32 = arith.constant 0 : i32
    %2 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    llvm.store %c0_i32, %2 : i32, !llvm.ptr
    %3 = call @dora_get_calldata_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %4 = llvm.mlir.addressof @dora_calldata_ptr : !llvm.ptr
    llvm.store %3, %4 : !llvm.ptr, !llvm.ptr
    %5 = call @dora_get_calldata_size(%arg0) : (!llvm.ptr) -> i32
    %6 = llvm.mlir.addressof @dora_calldata_size : !llvm.ptr
    llvm.store %5, %6 : i32, !llvm.ptr
    %7 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    llvm.store %arg1, %7 : i64, !llvm.ptr
    cf.br ^bb3
  ^bb1:  // 2 preds: ^bb2, ^bb9
    %c0_i32_0 = arith.constant 0 : i32
    %c0_i64 = arith.constant 0 : i64
    %c3_i8 = arith.constant 3 : i8
    call @dora_write_result(%arg0, %c0_i32_0, %c0_i32_0, %c0_i64, %c3_i8) : (!llvm.ptr, i32, i32, i64, i8) -> ()
    return %c3_i8 : i8
  ^bb2(%8: i256):  // no predecessors
    cf.switch %8 : i256, [
      default: ^bb1
    ]
  ^bb3:  // pred: ^bb0
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %9 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %10 = llvm.load %9 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %10 : i256, !llvm.ptr
    %11 = llvm.getelementptr %10[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %11, %9 : !llvm.ptr, !llvm.ptr
    cf.br ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %12 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %13 : i256, !llvm.ptr
    %14 = llvm.getelementptr %13[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %14, %12 : !llvm.ptr, !llvm.ptr
    cf.br ^bb5
  ^bb5:  // pred: ^bb4
    %15 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %16 = llvm.load %15 : !llvm.ptr -> !llvm.ptr
    %17 = llvm.getelementptr %16[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %18 = llvm.load %17 : !llvm.ptr -> i256
    llvm.store %17, %15 : !llvm.ptr, !llvm.ptr
    %19 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %20 = llvm.load %19 : !llvm.ptr -> !llvm.ptr
    %21 = llvm.getelementptr %20[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %22 = llvm.load %21 : !llvm.ptr -> i256
    llvm.store %21, %19 : !llvm.ptr, !llvm.ptr
    %23 = arith.trunci %18 : i256 to i32
    %c32_i32 = arith.constant 32 : i32
    %24 = arith.addi %23, %c32_i32 : i32
    %25 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> i32
    %c31_i32 = arith.constant 31 : i32
    %c32_i32_1 = arith.constant 32 : i32
    %27 = arith.addi %24, %c31_i32 : i32
    %28 = arith.divui %27, %c32_i32_1 : i32
    %29 = arith.muli %28, %c32_i32_1 : i32
    %30 = arith.cmpi ult, %26, %29 : i32
    scf.if %30 {
      %237 = func.call @dora_extend_memory(%arg0, %29) : (!llvm.ptr, i32) -> !llvm.ptr
      llvm.store %29, %25 : i32, !llvm.ptr
      %238 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %237, %238 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %31 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> !llvm.ptr
    %33 = llvm.getelementptr %32[%23] : (!llvm.ptr, i32) -> !llvm.ptr, i8
    %34 = llvm.intr.bswap(%22)  : (i256) -> i256
    llvm.store %34, %33 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb6
  ^bb6:  // pred: ^bb5
    %c17_i256 = arith.constant 17 : i256
    %35 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %36 : i256, !llvm.ptr
    %37 = llvm.getelementptr %36[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    cf.br ^bb7
  ^bb7:  // pred: ^bb6
    %c15_i256 = arith.constant 15 : i256
    %38 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %39 = llvm.load %38 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %39 : i256, !llvm.ptr
    %40 = llvm.getelementptr %39[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %40, %38 : !llvm.ptr, !llvm.ptr
    cf.br ^bb8
  ^bb8:  // pred: ^bb7
    %c0_i256_2 = arith.constant 0 : i256
    %41 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %42 = llvm.load %41 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_2, %42 : i256, !llvm.ptr
    %43 = llvm.getelementptr %42[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %43, %41 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb9:  // pred: ^bb8
    %44 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %45[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %47 = llvm.load %46 : !llvm.ptr -> i256
    llvm.store %46, %44 : !llvm.ptr, !llvm.ptr
    %48 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %49 = llvm.load %48 : !llvm.ptr -> !llvm.ptr
    %50 = llvm.getelementptr %49[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %51 = llvm.load %50 : !llvm.ptr -> i256
    llvm.store %50, %48 : !llvm.ptr, !llvm.ptr
    %52 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %53 = llvm.load %52 : !llvm.ptr -> !llvm.ptr
    %54 = llvm.getelementptr %53[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %55 = llvm.load %54 : !llvm.ptr -> i256
    llvm.store %54, %52 : !llvm.ptr, !llvm.ptr
    %56 = arith.trunci %51 : i256 to i32
    %57 = arith.trunci %55 : i256 to i32
    %58 = arith.addi %56, %57 : i32
    %59 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %60 = llvm.load %59 : !llvm.ptr -> i32
    %c31_i32_3 = arith.constant 31 : i32
    %c32_i32_4 = arith.constant 32 : i32
    %61 = arith.addi %58, %c31_i32_3 : i32
    %62 = arith.divui %61, %c32_i32_4 : i32
    %63 = arith.muli %62, %c32_i32_4 : i32
    %64 = arith.cmpi ult, %60, %63 : i32
    scf.if %64 {
      %237 = func.call @dora_extend_memory(%arg0, %63) : (!llvm.ptr, i32) -> !llvm.ptr
      llvm.store %63, %59 : i32, !llvm.ptr
      %238 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %237, %238 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %c1_i256 = arith.constant 1 : i256
    %65 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %47, %65 {alignment = 1 : i64} : i256, !llvm.ptr
    %66 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    %67 = llvm.load %66 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %68 = llvm.alloca %c1_i64 x i64 : (i64) -> !llvm.ptr
    llvm.store %67, %68 {alignment = 1 : i64} : i64, !llvm.ptr
    %69 = call @dora_create(%arg0, %57, %56, %65, %68) : (!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %70 = arith.cmpi eq, %c0_i8, %69 : i8
    %71 = llvm.load %65 : !llvm.ptr -> i256
    cf.cond_br %70, ^bb10, ^bb1
  ^bb10:  // pred: ^bb9
    %72 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %73 = llvm.load %72 : !llvm.ptr -> !llvm.ptr
    llvm.store %71, %73 : i256, !llvm.ptr
    %74 = llvm.getelementptr %73[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %74, %72 : !llvm.ptr, !llvm.ptr
    cf.br ^bb11
  ^bb11:  // pred: ^bb10
    %c0_i256_5 = arith.constant 0 : i256
    %75 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_5, %76 : i256, !llvm.ptr
    %77 = llvm.getelementptr %76[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %77, %75 : !llvm.ptr, !llvm.ptr
    cf.br ^bb12
  ^bb12:  // pred: ^bb11
    %c0_i256_6 = arith.constant 0 : i256
    %78 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %79 = llvm.load %78 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_6, %79 : i256, !llvm.ptr
    %80 = llvm.getelementptr %79[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %80, %78 : !llvm.ptr, !llvm.ptr
    cf.br ^bb13
  ^bb13:  // pred: ^bb12
    %c0_i256_7 = arith.constant 0 : i256
    %81 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_7, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb14:  // pred: ^bb13
    %c0_i256_8 = arith.constant 0 : i256
    %84 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_8, %85 : i256, !llvm.ptr
    %86 = llvm.getelementptr %85[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %86, %84 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb15:  // pred: ^bb14
    %c0_i256_9 = arith.constant 0 : i256
    %87 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_9, %88 : i256, !llvm.ptr
    %89 = llvm.getelementptr %88[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %89, %87 : !llvm.ptr, !llvm.ptr
    cf.br ^bb16
  ^bb16:  // pred: ^bb15
    %90 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %91 = llvm.load %90 : !llvm.ptr -> !llvm.ptr
    %92 = llvm.getelementptr %91[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %93 = llvm.load %92 : !llvm.ptr -> i256
    %94 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %95 = llvm.load %94 : !llvm.ptr -> !llvm.ptr
    llvm.store %93, %95 : i256, !llvm.ptr
    %96 = llvm.getelementptr %95[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %96, %94 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb17:  // pred: ^bb16
    %c65535_i256 = arith.constant 65535 : i256
    %97 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %98 = llvm.load %97 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %98 : i256, !llvm.ptr
    %99 = llvm.getelementptr %98[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %99, %97 : !llvm.ptr, !llvm.ptr
    cf.br ^bb18
  ^bb18:  // pred: ^bb17
    %100 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    %102 = llvm.getelementptr %101[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %103 = llvm.load %102 : !llvm.ptr -> i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    %104 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> !llvm.ptr
    %106 = llvm.getelementptr %105[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %107 = llvm.load %106 : !llvm.ptr -> i256
    llvm.store %106, %104 : !llvm.ptr, !llvm.ptr
    %108 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> !llvm.ptr
    %110 = llvm.getelementptr %109[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %111 = llvm.load %110 : !llvm.ptr -> i256
    llvm.store %110, %108 : !llvm.ptr, !llvm.ptr
    %112 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> !llvm.ptr
    %114 = llvm.getelementptr %113[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %115 = llvm.load %114 : !llvm.ptr -> i256
    llvm.store %114, %112 : !llvm.ptr, !llvm.ptr
    %116 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %117 = llvm.load %116 : !llvm.ptr -> !llvm.ptr
    %118 = llvm.getelementptr %117[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %119 = llvm.load %118 : !llvm.ptr -> i256
    llvm.store %118, %116 : !llvm.ptr, !llvm.ptr
    %120 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %121 = llvm.load %120 : !llvm.ptr -> !llvm.ptr
    %122 = llvm.getelementptr %121[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %123 = llvm.load %122 : !llvm.ptr -> i256
    llvm.store %122, %120 : !llvm.ptr, !llvm.ptr
    %c0_i256_10 = arith.constant 0 : i256
    %124 = arith.trunci %103 : i256 to i64
    %125 = arith.trunci %111 : i256 to i32
    %126 = arith.trunci %115 : i256 to i32
    %127 = arith.trunci %119 : i256 to i32
    %128 = arith.trunci %123 : i256 to i32
    %129 = arith.addi %125, %126 : i32
    %130 = arith.addi %127, %128 : i32
    %131 = arith.maxui %129, %130 : i32
    %132 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> i32
    %c31_i32_11 = arith.constant 31 : i32
    %c32_i32_12 = arith.constant 32 : i32
    %134 = arith.addi %131, %c31_i32_11 : i32
    %135 = arith.divui %134, %c32_i32_12 : i32
    %136 = arith.muli %135, %c32_i32_12 : i32
    %137 = arith.cmpi ult, %133, %136 : i32
    scf.if %137 {
      %237 = func.call @dora_extend_memory(%arg0, %136) : (!llvm.ptr, i32) -> !llvm.ptr
      llvm.store %136, %132 : i32, !llvm.ptr
      %238 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %237, %238 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %138 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    %139 = llvm.load %138 : !llvm.ptr -> i64
    %c1_i256_13 = arith.constant 1 : i256
    %140 = llvm.alloca %c1_i256_13 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_10, %140 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_14 = arith.constant 1 : i256
    %141 = llvm.alloca %c1_i256_14 x i256 : (i256) -> !llvm.ptr
    llvm.store %107, %141 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_15 = arith.constant 1 : i64
    %142 = llvm.alloca %c1_i64_15 x i64 : (i64) -> !llvm.ptr
    %c0_i8_16 = arith.constant 0 : i8
    %143 = call @dora_call(%arg0, %124, %141, %140, %125, %126, %127, %128, %139, %142, %c0_i8_16) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i32, i32, i32, i32, i64, !llvm.ptr, i8) -> i8
    %144 = llvm.load %142 : !llvm.ptr -> i64
    %145 = arith.extui %143 : i8 to i256
    %146 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> !llvm.ptr
    llvm.store %145, %147 : i256, !llvm.ptr
    %148 = llvm.getelementptr %147[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %148, %146 : !llvm.ptr, !llvm.ptr
    cf.br ^bb19
  ^bb19:  // pred: ^bb18
    %c1_i256_17 = arith.constant 1 : i256
    %149 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_17, %150 : i256, !llvm.ptr
    %151 = llvm.getelementptr %150[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %151, %149 : !llvm.ptr, !llvm.ptr
    cf.br ^bb20
  ^bb20:  // pred: ^bb19
    %c0_i256_18 = arith.constant 0 : i256
    %152 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %153 = llvm.load %152 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_18, %153 : i256, !llvm.ptr
    %154 = llvm.getelementptr %153[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %154, %152 : !llvm.ptr, !llvm.ptr
    cf.br ^bb21
  ^bb21:  // pred: ^bb20
    %155 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %156 = llvm.load %155 : !llvm.ptr -> !llvm.ptr
    %157 = llvm.getelementptr %156[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %158 = llvm.load %157 : !llvm.ptr -> i256
    llvm.store %157, %155 : !llvm.ptr, !llvm.ptr
    %159 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> !llvm.ptr
    %161 = llvm.getelementptr %160[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %162 = llvm.load %161 : !llvm.ptr -> i256
    llvm.store %161, %159 : !llvm.ptr, !llvm.ptr
    %c1_i256_19 = arith.constant 1 : i256
    %163 = llvm.alloca %c1_i256_19 x i256 : (i256) -> !llvm.ptr
    llvm.store %158, %163 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_20 = arith.constant 1 : i256
    %164 = llvm.alloca %c1_i256_20 x i256 : (i256) -> !llvm.ptr
    llvm.store %162, %164 {alignment = 1 : i64} : i256, !llvm.ptr
    %165 = call @dora_write_storage(%arg0, %163, %164) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> i64
    cf.br ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_21 = arith.constant 0 : i256
    %166 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_21, %167 : i256, !llvm.ptr
    %168 = llvm.getelementptr %167[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %168, %166 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i256_22 = arith.constant 0 : i256
    %169 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %170 = llvm.load %169 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_22, %170 : i256, !llvm.ptr
    %171 = llvm.getelementptr %170[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %171, %169 : !llvm.ptr, !llvm.ptr
    cf.br ^bb24
  ^bb24:  // pred: ^bb23
    %c32_i256 = arith.constant 32 : i256
    %172 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %173 = llvm.load %172 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %173 : i256, !llvm.ptr
    %174 = llvm.getelementptr %173[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %174, %172 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb25:  // pred: ^bb24
    %c0_i256_23 = arith.constant 0 : i256
    %175 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %176 = llvm.load %175 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_23, %176 : i256, !llvm.ptr
    %177 = llvm.getelementptr %176[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %177, %175 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb26:  // pred: ^bb25
    %178 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %179 = llvm.load %178 : !llvm.ptr -> !llvm.ptr
    %180 = llvm.getelementptr %179[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %181 = llvm.load %180 : !llvm.ptr -> i256
    %182 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %183 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    llvm.store %181, %183 : i256, !llvm.ptr
    %184 = llvm.getelementptr %183[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %184, %182 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb27:  // pred: ^bb26
    %c65535_i256_24 = arith.constant 65535 : i256
    %185 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_24, %186 : i256, !llvm.ptr
    %187 = llvm.getelementptr %186[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %187, %185 : !llvm.ptr, !llvm.ptr
    cf.br ^bb28
  ^bb28:  // pred: ^bb27
    %188 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %189 = llvm.load %188 : !llvm.ptr -> !llvm.ptr
    %190 = llvm.getelementptr %189[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %191 = llvm.load %190 : !llvm.ptr -> i256
    llvm.store %190, %188 : !llvm.ptr, !llvm.ptr
    %192 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> !llvm.ptr
    %194 = llvm.getelementptr %193[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %195 = llvm.load %194 : !llvm.ptr -> i256
    llvm.store %194, %192 : !llvm.ptr, !llvm.ptr
    %196 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %197 = llvm.load %196 : !llvm.ptr -> !llvm.ptr
    %198 = llvm.getelementptr %197[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %199 = llvm.load %198 : !llvm.ptr -> i256
    llvm.store %198, %196 : !llvm.ptr, !llvm.ptr
    %200 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %201 = llvm.load %200 : !llvm.ptr -> !llvm.ptr
    %202 = llvm.getelementptr %201[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %203 = llvm.load %202 : !llvm.ptr -> i256
    llvm.store %202, %200 : !llvm.ptr, !llvm.ptr
    %204 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> !llvm.ptr
    %206 = llvm.getelementptr %205[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %207 = llvm.load %206 : !llvm.ptr -> i256
    llvm.store %206, %204 : !llvm.ptr, !llvm.ptr
    %208 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %209 = llvm.load %208 : !llvm.ptr -> !llvm.ptr
    %210 = llvm.getelementptr %209[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %211 = llvm.load %210 : !llvm.ptr -> i256
    llvm.store %210, %208 : !llvm.ptr, !llvm.ptr
    %c0_i256_25 = arith.constant 0 : i256
    %212 = arith.trunci %191 : i256 to i64
    %213 = arith.trunci %199 : i256 to i32
    %214 = arith.trunci %203 : i256 to i32
    %215 = arith.trunci %207 : i256 to i32
    %216 = arith.trunci %211 : i256 to i32
    %217 = arith.addi %213, %214 : i32
    %218 = arith.addi %215, %216 : i32
    %219 = arith.maxui %217, %218 : i32
    %220 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %221 = llvm.load %220 : !llvm.ptr -> i32
    %c31_i32_26 = arith.constant 31 : i32
    %c32_i32_27 = arith.constant 32 : i32
    %222 = arith.addi %219, %c31_i32_26 : i32
    %223 = arith.divui %222, %c32_i32_27 : i32
    %224 = arith.muli %223, %c32_i32_27 : i32
    %225 = arith.cmpi ult, %221, %224 : i32
    scf.if %225 {
      %237 = func.call @dora_extend_memory(%arg0, %224) : (!llvm.ptr, i32) -> !llvm.ptr
      llvm.store %224, %220 : i32, !llvm.ptr
      %238 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %237, %238 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %226 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    %227 = llvm.load %226 : !llvm.ptr -> i64
    %c1_i256_28 = arith.constant 1 : i256
    %228 = llvm.alloca %c1_i256_28 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_25, %228 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_29 = arith.constant 1 : i256
    %229 = llvm.alloca %c1_i256_29 x i256 : (i256) -> !llvm.ptr
    llvm.store %195, %229 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_30 = arith.constant 1 : i64
    %230 = llvm.alloca %c1_i64_30 x i64 : (i64) -> !llvm.ptr
    %c0_i8_31 = arith.constant 0 : i8
    %231 = call @dora_call(%arg0, %212, %229, %228, %213, %214, %215, %216, %227, %230, %c0_i8_31) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i32, i32, i32, i32, i64, !llvm.ptr, i8) -> i8
    %232 = llvm.load %230 : !llvm.ptr -> i64
    %233 = arith.extui %231 : i8 to i256
    %234 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %235 = llvm.load %234 : !llvm.ptr -> !llvm.ptr
    llvm.store %233, %235 : i256, !llvm.ptr
    %236 = llvm.getelementptr %235[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %236, %234 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb29:  // pred: ^bb28
    %c0_i32_32 = arith.constant 0 : i32
    %c1_i8 = arith.constant 1 : i8
    call @dora_write_result(%arg0, %c0_i32_32, %c0_i32_32, %arg1, %c1_i8) : (!llvm.ptr, i32, i32, i64, i8) -> ()
    return %c1_i8 : i8
  }
}
