---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 91 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb13, ^bb14, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb28, ^bb29, ^bb31, ^bb32, ^bb33, ^bb35, ^bb36, ^bb38, ^bb39, ^bb42, ^bb43, ^bb46, ^bb47, ^bb50, ^bb51, ^bb54, ^bb55, ^bb58, ^bb59, ^bb62, ^bb63, ^bb66, ^bb67, ^bb69, ^bb70, ^bb71, ^bb72, ^bb73, ^bb74, ^bb75, ^bb76, ^bb77, ^bb78, ^bb79, ^bb80, ^bb82, ^bb83, ^bb86, ^bb87, ^bb90, ^bb91, ^bb93, ^bb94, ^bb96, ^bb97, ^bb100, ^bb101, ^bb104, ^bb105, ^bb108, ^bb109, ^bb112, ^bb113, ^bb116, ^bb117, ^bb120, ^bb121, ^bb123, ^bb124, ^bb125, ^bb126, ^bb127, ^bb128, ^bb129, ^bb130, ^bb131, ^bb132, ^bb133, ^bb134, ^bb136, ^bb137, ^bb140, ^bb141, ^bb142, ^bb143, ^bb144
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb16
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %46 = arith.addi %44, %c32_i64 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %47 = arith.cmpi slt, %46, %c0_i64_8 : i64
    %c84_i8_9 = arith.constant 84 : i8
    cf.cond_br %47, ^bb1(%c84_i8_9 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_10 = arith.constant 32 : i64
    %48 = arith.addi %46, %c31_i64 : i64
    %49 = arith.divui %48, %c32_i64_10 : i64
    %c32_i64_11 = arith.constant 32 : i64
    %50 = arith.muli %49, %c32_i64_11 : i64
    %51 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c31_i64_12 = arith.constant 31 : i64
    %c32_i64_13 = arith.constant 32 : i64
    %53 = arith.addi %52, %c31_i64_12 : i64
    %54 = arith.divui %53, %c32_i64_13 : i64
    %55 = arith.muli %54, %c32_i64_11 : i64
    %56 = arith.cmpi ult, %55, %50 : i64
    %57 = scf.if %56 -> (i64) {
      %c3_i64_236 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %596 = arith.muli %54, %54 : i64
      %597 = arith.divui %596, %c512_i64 : i64
      %598 = arith.muli %54, %c3_i64_236 : i64
      %599 = arith.addi %597, %598 : i64
      %c3_i64_237 = arith.constant 3 : i64
      %c512_i64_238 = arith.constant 512 : i64
      %600 = arith.muli %49, %49 : i64
      %601 = arith.divui %600, %c512_i64_238 : i64
      %602 = arith.muli %49, %c3_i64_237 : i64
      %603 = arith.addi %601, %602 : i64
      %604 = arith.subi %603, %599 : i64
      scf.yield %604 : i64
    } else {
      %c0_i64_236 = arith.constant 0 : i64
      scf.yield %c0_i64_236 : i64
    }
    %58 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %60 = arith.cmpi ult, %59, %57 : i64
    scf.if %60 {
    } else {
      %596 = arith.subi %59, %57 : i64
      llvm.store %596, %58 : i64, !llvm.ptr
    }
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %60, ^bb1(%c80_i8_14 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %61 = call @dora_fn_extend_memory(%arg0, %50) : (!llvm.ptr, i64) -> !llvm.ptr
    %62 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %63 = llvm.load %62 : !llvm.ptr -> !llvm.ptr
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %66 = arith.cmpi ne, %65, %c0_i8 : i8
    cf.cond_br %66, ^bb1(%65 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %67 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %63, %67 : !llvm.ptr, !llvm.ptr
    %68 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %50, %68 : i64, !llvm.ptr
    %69 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.getelementptr %70[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %72, %71 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_15 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %75 = arith.addi %74, %c-2_i64 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %76 = arith.cmpi ult, %74, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %76, ^bb1(%c91_i8 : i8), ^bb11
  ^bb17:  // pred: ^bb7
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %79, ^bb18, ^bb1(%c80_i8_17 : i8)
  ^bb18:  // pred: ^bb17
    %80 = arith.subi %78, %c3_i64_16 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c17_i256 = arith.constant 17 : i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %86 = arith.addi %85, %c1_i64_19 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %c1024_i64_18, %86 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %87, ^bb1(%c92_i8_20 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_21 = arith.constant 3 : i64
    %90 = arith.cmpi uge, %89, %c3_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %90, ^bb22, ^bb1(%c80_i8_22 : i8)
  ^bb22:  // pred: ^bb21
    %91 = arith.subi %89, %c3_i64_21 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c15_i256 = arith.constant 15 : i256
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %93 : i256, !llvm.ptr
    %94 = llvm.getelementptr %93[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb24:  // pred: ^bb26
    %95 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %97 = arith.addi %96, %c1_i64_24 : i64
    llvm.store %97, %95 : i64, !llvm.ptr
    %98 = arith.cmpi ult, %c1024_i64_23, %97 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %98, ^bb1(%c92_i8_25 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    %101 = arith.cmpi uge, %100, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %101, ^bb26, ^bb1(%c80_i8_27 : i8)
  ^bb26:  // pred: ^bb25
    %102 = arith.subi %100, %c3_i64_26 : i64
    llvm.store %102, %99 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb28
    %c0_i256_28 = arith.constant 0 : i256
    %103 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_28, %104 : i256, !llvm.ptr
    %105 = llvm.getelementptr %104[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %105, %103 : !llvm.ptr, !llvm.ptr
    cf.br ^bb39
  ^bb28:  // pred: ^bb30
    %106 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_29 = arith.constant 1024 : i64
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %c1_i64_30 = arith.constant 1 : i64
    %108 = arith.addi %107, %c1_i64_30 : i64
    llvm.store %108, %106 : i64, !llvm.ptr
    %109 = arith.cmpi ult, %c1024_i64_29, %108 : i64
    %c92_i8_31 = arith.constant 92 : i8
    cf.cond_br %109, ^bb1(%c92_i8_31 : i8), ^bb27
  ^bb29:  // pred: ^bb23
    %110 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> i64
    %c3_i64_32 = arith.constant 3 : i64
    %112 = arith.cmpi uge, %111, %c3_i64_32 : i64
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %112, ^bb30, ^bb1(%c80_i8_33 : i8)
  ^bb30:  // pred: ^bb29
    %113 = arith.subi %111, %c3_i64_32 : i64
    llvm.store %113, %110 : i64, !llvm.ptr
    cf.br ^bb28
  ^bb31:  // pred: ^bb38
    %114 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> !llvm.ptr
    %116 = llvm.getelementptr %115[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %117 = llvm.load %116 : !llvm.ptr -> i256
    llvm.store %116, %114 : !llvm.ptr, !llvm.ptr
    %118 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> !llvm.ptr
    %120 = llvm.getelementptr %119[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %121 = llvm.load %120 : !llvm.ptr -> i256
    llvm.store %120, %118 : !llvm.ptr, !llvm.ptr
    %122 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> !llvm.ptr
    %124 = llvm.getelementptr %123[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %125 = llvm.load %124 : !llvm.ptr -> i256
    llvm.store %124, %122 : !llvm.ptr, !llvm.ptr
    %126 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %127, ^bb1(%c87_i8 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %128 = arith.trunci %121 : i256 to i64
    %c0_i64_34 = arith.constant 0 : i64
    %129 = arith.cmpi slt, %128, %c0_i64_34 : i64
    %c84_i8_35 = arith.constant 84 : i8
    cf.cond_br %129, ^bb1(%c84_i8_35 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %130 = arith.trunci %125 : i256 to i64
    %c0_i64_36 = arith.constant 0 : i64
    %131 = arith.cmpi slt, %130, %c0_i64_36 : i64
    %c84_i8_37 = arith.constant 84 : i8
    cf.cond_br %131, ^bb1(%c84_i8_37 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c0_i64_38 = arith.constant 0 : i64
    %132 = arith.cmpi ne, %130, %c0_i64_38 : i64
    cf.cond_br %132, ^bb140, ^bb35
  ^bb35:  // 2 preds: ^bb34, ^bb145
    %c32000_i64 = arith.constant 32000 : i64
    %133 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %134 = llvm.load %133 : !llvm.ptr -> i64
    %135 = arith.cmpi ult, %134, %c32000_i64 : i64
    scf.if %135 {
    } else {
      %596 = arith.subi %134, %c32000_i64 : i64
      llvm.store %596, %133 : i64, !llvm.ptr
    }
    %c80_i8_39 = arith.constant 80 : i8
    cf.cond_br %135, ^bb1(%c80_i8_39 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %c1_i256 = arith.constant 1 : i256
    %136 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %117, %136 {alignment = 1 : i64} : i256, !llvm.ptr
    %137 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %138 = llvm.load %137 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %139 = llvm.alloca %c1_i64_40 x i64 : (i64) -> !llvm.ptr
    llvm.store %138, %139 {alignment = 1 : i64} : i64, !llvm.ptr
    %140 = call @dora_fn_create(%arg0, %130, %128, %136, %139) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %141 = llvm.getelementptr %140[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %142 = llvm.load %141 : !llvm.ptr -> i8
    %c0_i8_41 = arith.constant 0 : i8
    %143 = arith.cmpi ne, %142, %c0_i8_41 : i8
    cf.cond_br %143, ^bb1(%142 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %144 = llvm.load %136 : !llvm.ptr -> i256
    %145 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> !llvm.ptr
    llvm.store %144, %146 : i256, !llvm.ptr
    %147 = llvm.getelementptr %146[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %147, %145 : !llvm.ptr, !llvm.ptr
    cf.br ^bb43
  ^bb38:  // pred: ^bb40
    %148 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %149 = llvm.load %148 : !llvm.ptr -> i64
    %c-2_i64_43 = arith.constant -2 : i64
    %150 = arith.addi %149, %c-2_i64_43 : i64
    llvm.store %150, %148 : i64, !llvm.ptr
    %c3_i64_44 = arith.constant 3 : i64
    %151 = arith.cmpi ult, %149, %c3_i64_44 : i64
    %c91_i8_45 = arith.constant 91 : i8
    cf.cond_br %151, ^bb1(%c91_i8_45 : i8), ^bb31
  ^bb39:  // pred: ^bb27
    %152 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %c0_i64_46 = arith.constant 0 : i64
    %154 = arith.cmpi uge, %153, %c0_i64_46 : i64
    %c80_i8_47 = arith.constant 80 : i8
    cf.cond_br %154, ^bb40, ^bb1(%c80_i8_47 : i8)
  ^bb40:  // pred: ^bb39
    %155 = arith.subi %153, %c0_i64_46 : i64
    llvm.store %155, %152 : i64, !llvm.ptr
    cf.br ^bb38
  ^bb41:  // pred: ^bb42
    %c0_i256_48 = arith.constant 0 : i256
    %156 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_48, %157 : i256, !llvm.ptr
    %158 = llvm.getelementptr %157[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %158, %156 : !llvm.ptr, !llvm.ptr
    cf.br ^bb47
  ^bb42:  // pred: ^bb44
    %159 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_49 = arith.constant 1024 : i64
    %160 = llvm.load %159 : !llvm.ptr -> i64
    %c1_i64_50 = arith.constant 1 : i64
    %161 = arith.addi %160, %c1_i64_50 : i64
    llvm.store %161, %159 : i64, !llvm.ptr
    %162 = arith.cmpi ult, %c1024_i64_49, %161 : i64
    %c92_i8_51 = arith.constant 92 : i8
    cf.cond_br %162, ^bb1(%c92_i8_51 : i8), ^bb41
  ^bb43:  // pred: ^bb37
    %163 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> i64
    %c3_i64_52 = arith.constant 3 : i64
    %165 = arith.cmpi uge, %164, %c3_i64_52 : i64
    %c80_i8_53 = arith.constant 80 : i8
    cf.cond_br %165, ^bb44, ^bb1(%c80_i8_53 : i8)
  ^bb44:  // pred: ^bb43
    %166 = arith.subi %164, %c3_i64_52 : i64
    llvm.store %166, %163 : i64, !llvm.ptr
    cf.br ^bb42
  ^bb45:  // pred: ^bb46
    %c0_i256_54 = arith.constant 0 : i256
    %167 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %168 = llvm.load %167 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_54, %168 : i256, !llvm.ptr
    %169 = llvm.getelementptr %168[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %169, %167 : !llvm.ptr, !llvm.ptr
    cf.br ^bb51
  ^bb46:  // pred: ^bb48
    %170 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_55 = arith.constant 1024 : i64
    %171 = llvm.load %170 : !llvm.ptr -> i64
    %c1_i64_56 = arith.constant 1 : i64
    %172 = arith.addi %171, %c1_i64_56 : i64
    llvm.store %172, %170 : i64, !llvm.ptr
    %173 = arith.cmpi ult, %c1024_i64_55, %172 : i64
    %c92_i8_57 = arith.constant 92 : i8
    cf.cond_br %173, ^bb1(%c92_i8_57 : i8), ^bb45
  ^bb47:  // pred: ^bb41
    %174 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %175 = llvm.load %174 : !llvm.ptr -> i64
    %c3_i64_58 = arith.constant 3 : i64
    %176 = arith.cmpi uge, %175, %c3_i64_58 : i64
    %c80_i8_59 = arith.constant 80 : i8
    cf.cond_br %176, ^bb48, ^bb1(%c80_i8_59 : i8)
  ^bb48:  // pred: ^bb47
    %177 = arith.subi %175, %c3_i64_58 : i64
    llvm.store %177, %174 : i64, !llvm.ptr
    cf.br ^bb46
  ^bb49:  // pred: ^bb50
    %c0_i256_60 = arith.constant 0 : i256
    %178 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %179 = llvm.load %178 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_60, %179 : i256, !llvm.ptr
    %180 = llvm.getelementptr %179[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %180, %178 : !llvm.ptr, !llvm.ptr
    cf.br ^bb55
  ^bb50:  // pred: ^bb52
    %181 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_61 = arith.constant 1024 : i64
    %182 = llvm.load %181 : !llvm.ptr -> i64
    %c1_i64_62 = arith.constant 1 : i64
    %183 = arith.addi %182, %c1_i64_62 : i64
    llvm.store %183, %181 : i64, !llvm.ptr
    %184 = arith.cmpi ult, %c1024_i64_61, %183 : i64
    %c92_i8_63 = arith.constant 92 : i8
    cf.cond_br %184, ^bb1(%c92_i8_63 : i8), ^bb49
  ^bb51:  // pred: ^bb45
    %185 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> i64
    %c3_i64_64 = arith.constant 3 : i64
    %187 = arith.cmpi uge, %186, %c3_i64_64 : i64
    %c80_i8_65 = arith.constant 80 : i8
    cf.cond_br %187, ^bb52, ^bb1(%c80_i8_65 : i8)
  ^bb52:  // pred: ^bb51
    %188 = arith.subi %186, %c3_i64_64 : i64
    llvm.store %188, %185 : i64, !llvm.ptr
    cf.br ^bb50
  ^bb53:  // pred: ^bb54
    %c0_i256_66 = arith.constant 0 : i256
    %189 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_66, %190 : i256, !llvm.ptr
    %191 = llvm.getelementptr %190[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %191, %189 : !llvm.ptr, !llvm.ptr
    cf.br ^bb59
  ^bb54:  // pred: ^bb56
    %192 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_67 = arith.constant 1024 : i64
    %193 = llvm.load %192 : !llvm.ptr -> i64
    %c1_i64_68 = arith.constant 1 : i64
    %194 = arith.addi %193, %c1_i64_68 : i64
    llvm.store %194, %192 : i64, !llvm.ptr
    %195 = arith.cmpi ult, %c1024_i64_67, %194 : i64
    %c92_i8_69 = arith.constant 92 : i8
    cf.cond_br %195, ^bb1(%c92_i8_69 : i8), ^bb53
  ^bb55:  // pred: ^bb49
    %196 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %197 = llvm.load %196 : !llvm.ptr -> i64
    %c3_i64_70 = arith.constant 3 : i64
    %198 = arith.cmpi uge, %197, %c3_i64_70 : i64
    %c80_i8_71 = arith.constant 80 : i8
    cf.cond_br %198, ^bb56, ^bb1(%c80_i8_71 : i8)
  ^bb56:  // pred: ^bb55
    %199 = arith.subi %197, %c3_i64_70 : i64
    llvm.store %199, %196 : i64, !llvm.ptr
    cf.br ^bb54
  ^bb57:  // pred: ^bb58
    %c0_i256_72 = arith.constant 0 : i256
    %200 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %201 = llvm.load %200 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_72, %201 : i256, !llvm.ptr
    %202 = llvm.getelementptr %201[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %202, %200 : !llvm.ptr, !llvm.ptr
    cf.br ^bb63
  ^bb58:  // pred: ^bb60
    %203 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_73 = arith.constant 1024 : i64
    %204 = llvm.load %203 : !llvm.ptr -> i64
    %c1_i64_74 = arith.constant 1 : i64
    %205 = arith.addi %204, %c1_i64_74 : i64
    llvm.store %205, %203 : i64, !llvm.ptr
    %206 = arith.cmpi ult, %c1024_i64_73, %205 : i64
    %c92_i8_75 = arith.constant 92 : i8
    cf.cond_br %206, ^bb1(%c92_i8_75 : i8), ^bb57
  ^bb59:  // pred: ^bb53
    %207 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %208 = llvm.load %207 : !llvm.ptr -> i64
    %c3_i64_76 = arith.constant 3 : i64
    %209 = arith.cmpi uge, %208, %c3_i64_76 : i64
    %c80_i8_77 = arith.constant 80 : i8
    cf.cond_br %209, ^bb60, ^bb1(%c80_i8_77 : i8)
  ^bb60:  // pred: ^bb59
    %210 = arith.subi %208, %c3_i64_76 : i64
    llvm.store %210, %207 : i64, !llvm.ptr
    cf.br ^bb58
  ^bb61:  // pred: ^bb62
    %211 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %212 = llvm.load %211 : !llvm.ptr -> !llvm.ptr
    %213 = llvm.getelementptr %212[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %214 = llvm.load %213 : !llvm.ptr -> i256
    %215 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %216 = llvm.load %215 : !llvm.ptr -> !llvm.ptr
    llvm.store %214, %216 : i256, !llvm.ptr
    %217 = llvm.getelementptr %216[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %217, %215 : !llvm.ptr, !llvm.ptr
    cf.br ^bb67
  ^bb62:  // pred: ^bb64
    %218 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_78 = arith.constant 1024 : i64
    %219 = llvm.load %218 : !llvm.ptr -> i64
    %c1_i64_79 = arith.constant 1 : i64
    %220 = arith.addi %219, %c1_i64_79 : i64
    llvm.store %220, %218 : i64, !llvm.ptr
    %221 = arith.cmpi ult, %c1024_i64_78, %220 : i64
    %c92_i8_80 = arith.constant 92 : i8
    cf.cond_br %221, ^bb1(%c92_i8_80 : i8), ^bb61
  ^bb63:  // pred: ^bb57
    %222 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> i64
    %c3_i64_81 = arith.constant 3 : i64
    %224 = arith.cmpi uge, %223, %c3_i64_81 : i64
    %c80_i8_82 = arith.constant 80 : i8
    cf.cond_br %224, ^bb64, ^bb1(%c80_i8_82 : i8)
  ^bb64:  // pred: ^bb63
    %225 = arith.subi %223, %c3_i64_81 : i64
    llvm.store %225, %222 : i64, !llvm.ptr
    cf.br ^bb62
  ^bb65:  // pred: ^bb66
    %c65535_i256 = arith.constant 65535 : i256
    %226 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %227 = llvm.load %226 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %227 : i256, !llvm.ptr
    %228 = llvm.getelementptr %227[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %228, %226 : !llvm.ptr, !llvm.ptr
    cf.br ^bb83
  ^bb66:  // pred: ^bb68
    %229 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_83 = arith.constant 1024 : i64
    %230 = llvm.load %229 : !llvm.ptr -> i64
    %c1_i64_84 = arith.constant 1 : i64
    %231 = arith.addi %230, %c1_i64_84 : i64
    llvm.store %231, %229 : i64, !llvm.ptr
    %232 = arith.cmpi ult, %c1024_i64_83, %231 : i64
    %c92_i8_85 = arith.constant 92 : i8
    cf.cond_br %232, ^bb1(%c92_i8_85 : i8), ^bb65
  ^bb67:  // pred: ^bb61
    %233 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %234 = llvm.load %233 : !llvm.ptr -> i64
    %c3_i64_86 = arith.constant 3 : i64
    %235 = arith.cmpi uge, %234, %c3_i64_86 : i64
    %c80_i8_87 = arith.constant 80 : i8
    cf.cond_br %235, ^bb68, ^bb1(%c80_i8_87 : i8)
  ^bb68:  // pred: ^bb67
    %236 = arith.subi %234, %c3_i64_86 : i64
    llvm.store %236, %233 : i64, !llvm.ptr
    cf.br ^bb66
  ^bb69:  // pred: ^bb82
    %237 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> !llvm.ptr
    %239 = llvm.getelementptr %238[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %240 = llvm.load %239 : !llvm.ptr -> i256
    llvm.store %239, %237 : !llvm.ptr, !llvm.ptr
    %241 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %242 = llvm.load %241 : !llvm.ptr -> !llvm.ptr
    %243 = llvm.getelementptr %242[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %244 = llvm.load %243 : !llvm.ptr -> i256
    llvm.store %243, %241 : !llvm.ptr, !llvm.ptr
    %245 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %246 = llvm.load %245 : !llvm.ptr -> !llvm.ptr
    %247 = llvm.getelementptr %246[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %248 = llvm.load %247 : !llvm.ptr -> i256
    llvm.store %247, %245 : !llvm.ptr, !llvm.ptr
    %249 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> !llvm.ptr
    %251 = llvm.getelementptr %250[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %252 = llvm.load %251 : !llvm.ptr -> i256
    llvm.store %251, %249 : !llvm.ptr, !llvm.ptr
    %253 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %254 = llvm.load %253 : !llvm.ptr -> !llvm.ptr
    %255 = llvm.getelementptr %254[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %256 = llvm.load %255 : !llvm.ptr -> i256
    llvm.store %255, %253 : !llvm.ptr, !llvm.ptr
    %257 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %258 = llvm.load %257 : !llvm.ptr -> !llvm.ptr
    %259 = llvm.getelementptr %258[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %260 = llvm.load %259 : !llvm.ptr -> i256
    llvm.store %259, %257 : !llvm.ptr, !llvm.ptr
    %c0_i256_88 = arith.constant 0 : i256
    %261 = arith.trunci %240 : i256 to i64
    %c0_i64_89 = arith.constant 0 : i64
    %262 = arith.cmpi slt, %261, %c0_i64_89 : i64
    %c84_i8_90 = arith.constant 84 : i8
    cf.cond_br %262, ^bb1(%c84_i8_90 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %263 = arith.trunci %248 : i256 to i64
    %c0_i64_91 = arith.constant 0 : i64
    %264 = arith.cmpi slt, %263, %c0_i64_91 : i64
    %c84_i8_92 = arith.constant 84 : i8
    cf.cond_br %264, ^bb1(%c84_i8_92 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %265 = arith.trunci %252 : i256 to i64
    %c0_i64_93 = arith.constant 0 : i64
    %266 = arith.cmpi slt, %265, %c0_i64_93 : i64
    %c84_i8_94 = arith.constant 84 : i8
    cf.cond_br %266, ^bb1(%c84_i8_94 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %267 = arith.trunci %256 : i256 to i64
    %c0_i64_95 = arith.constant 0 : i64
    %268 = arith.cmpi slt, %267, %c0_i64_95 : i64
    %c84_i8_96 = arith.constant 84 : i8
    cf.cond_br %268, ^bb1(%c84_i8_96 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %269 = arith.trunci %260 : i256 to i64
    %c0_i64_97 = arith.constant 0 : i64
    %270 = arith.cmpi slt, %269, %c0_i64_97 : i64
    %c84_i8_98 = arith.constant 84 : i8
    cf.cond_br %270, ^bb1(%c84_i8_98 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %271 = arith.addi %263, %265 : i64
    %c0_i64_99 = arith.constant 0 : i64
    %272 = arith.cmpi slt, %271, %c0_i64_99 : i64
    %c84_i8_100 = arith.constant 84 : i8
    cf.cond_br %272, ^bb1(%c84_i8_100 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %c31_i64_101 = arith.constant 31 : i64
    %c32_i64_102 = arith.constant 32 : i64
    %273 = arith.addi %271, %c31_i64_101 : i64
    %274 = arith.divui %273, %c32_i64_102 : i64
    %c32_i64_103 = arith.constant 32 : i64
    %275 = arith.muli %274, %c32_i64_103 : i64
    %276 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %277 = llvm.load %276 : !llvm.ptr -> i64
    %c31_i64_104 = arith.constant 31 : i64
    %c32_i64_105 = arith.constant 32 : i64
    %278 = arith.addi %277, %c31_i64_104 : i64
    %279 = arith.divui %278, %c32_i64_105 : i64
    %280 = arith.muli %279, %c32_i64_103 : i64
    %281 = arith.cmpi ult, %280, %275 : i64
    %282 = scf.if %281 -> (i64) {
      %c3_i64_236 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %596 = arith.muli %279, %279 : i64
      %597 = arith.divui %596, %c512_i64 : i64
      %598 = arith.muli %279, %c3_i64_236 : i64
      %599 = arith.addi %597, %598 : i64
      %c3_i64_237 = arith.constant 3 : i64
      %c512_i64_238 = arith.constant 512 : i64
      %600 = arith.muli %274, %274 : i64
      %601 = arith.divui %600, %c512_i64_238 : i64
      %602 = arith.muli %274, %c3_i64_237 : i64
      %603 = arith.addi %601, %602 : i64
      %604 = arith.subi %603, %599 : i64
      scf.yield %604 : i64
    } else {
      %c0_i64_236 = arith.constant 0 : i64
      scf.yield %c0_i64_236 : i64
    }
    %283 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %284 = llvm.load %283 : !llvm.ptr -> i64
    %285 = arith.cmpi ult, %284, %282 : i64
    scf.if %285 {
    } else {
      %596 = arith.subi %284, %282 : i64
      llvm.store %596, %283 : i64, !llvm.ptr
    }
    %c80_i8_106 = arith.constant 80 : i8
    cf.cond_br %285, ^bb1(%c80_i8_106 : i8), ^bb76
  ^bb76:  // pred: ^bb75
    %286 = call @dora_fn_extend_memory(%arg0, %275) : (!llvm.ptr, i64) -> !llvm.ptr
    %287 = llvm.getelementptr %286[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %288 = llvm.load %287 : !llvm.ptr -> !llvm.ptr
    %289 = llvm.getelementptr %286[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %290 = llvm.load %289 : !llvm.ptr -> i8
    %c0_i8_107 = arith.constant 0 : i8
    %291 = arith.cmpi ne, %290, %c0_i8_107 : i8
    cf.cond_br %291, ^bb1(%290 : i8), ^bb77
  ^bb77:  // pred: ^bb76
    %292 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %288, %292 : !llvm.ptr, !llvm.ptr
    %293 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %275, %293 : i64, !llvm.ptr
    %294 = arith.addi %267, %269 : i64
    %c0_i64_108 = arith.constant 0 : i64
    %295 = arith.cmpi slt, %294, %c0_i64_108 : i64
    %c84_i8_109 = arith.constant 84 : i8
    cf.cond_br %295, ^bb1(%c84_i8_109 : i8), ^bb78
  ^bb78:  // pred: ^bb77
    %c31_i64_110 = arith.constant 31 : i64
    %c32_i64_111 = arith.constant 32 : i64
    %296 = arith.addi %294, %c31_i64_110 : i64
    %297 = arith.divui %296, %c32_i64_111 : i64
    %c32_i64_112 = arith.constant 32 : i64
    %298 = arith.muli %297, %c32_i64_112 : i64
    %299 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %300 = llvm.load %299 : !llvm.ptr -> i64
    %c31_i64_113 = arith.constant 31 : i64
    %c32_i64_114 = arith.constant 32 : i64
    %301 = arith.addi %300, %c31_i64_113 : i64
    %302 = arith.divui %301, %c32_i64_114 : i64
    %303 = arith.muli %302, %c32_i64_112 : i64
    %304 = arith.cmpi ult, %303, %298 : i64
    %305 = scf.if %304 -> (i64) {
      %c3_i64_236 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %596 = arith.muli %302, %302 : i64
      %597 = arith.divui %596, %c512_i64 : i64
      %598 = arith.muli %302, %c3_i64_236 : i64
      %599 = arith.addi %597, %598 : i64
      %c3_i64_237 = arith.constant 3 : i64
      %c512_i64_238 = arith.constant 512 : i64
      %600 = arith.muli %297, %297 : i64
      %601 = arith.divui %600, %c512_i64_238 : i64
      %602 = arith.muli %297, %c3_i64_237 : i64
      %603 = arith.addi %601, %602 : i64
      %604 = arith.subi %603, %599 : i64
      scf.yield %604 : i64
    } else {
      %c0_i64_236 = arith.constant 0 : i64
      scf.yield %c0_i64_236 : i64
    }
    %306 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %307 = llvm.load %306 : !llvm.ptr -> i64
    %308 = arith.cmpi ult, %307, %305 : i64
    scf.if %308 {
    } else {
      %596 = arith.subi %307, %305 : i64
      llvm.store %596, %306 : i64, !llvm.ptr
    }
    %c80_i8_115 = arith.constant 80 : i8
    cf.cond_br %308, ^bb1(%c80_i8_115 : i8), ^bb79
  ^bb79:  // pred: ^bb78
    %309 = call @dora_fn_extend_memory(%arg0, %298) : (!llvm.ptr, i64) -> !llvm.ptr
    %310 = llvm.getelementptr %309[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %311 = llvm.load %310 : !llvm.ptr -> !llvm.ptr
    %312 = llvm.getelementptr %309[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %313 = llvm.load %312 : !llvm.ptr -> i8
    %c0_i8_116 = arith.constant 0 : i8
    %314 = arith.cmpi ne, %313, %c0_i8_116 : i8
    cf.cond_br %314, ^bb1(%313 : i8), ^bb80
  ^bb80:  // pred: ^bb79
    %315 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %311, %315 : !llvm.ptr, !llvm.ptr
    %316 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %298, %316 : i64, !llvm.ptr
    %317 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %318 = llvm.load %317 : !llvm.ptr -> i64
    %c1_i256_117 = arith.constant 1 : i256
    %319 = llvm.alloca %c1_i256_117 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_88, %319 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_118 = arith.constant 1 : i256
    %320 = llvm.alloca %c1_i256_118 x i256 : (i256) -> !llvm.ptr
    llvm.store %244, %320 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_119 = arith.constant 1 : i64
    %321 = llvm.alloca %c1_i64_119 x i64 : (i64) -> !llvm.ptr
    %c0_i8_120 = arith.constant 0 : i8
    %322 = call @dora_fn_call(%arg0, %261, %320, %319, %263, %265, %267, %269, %318, %321, %c0_i8_120) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %323 = llvm.getelementptr %322[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %324 = llvm.load %323 : !llvm.ptr -> i8
    %325 = llvm.getelementptr %322[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %326 = llvm.load %325 : !llvm.ptr -> i8
    %c0_i8_121 = arith.constant 0 : i8
    %327 = arith.cmpi ne, %326, %c0_i8_121 : i8
    cf.cond_br %327, ^bb1(%326 : i8), ^bb81
  ^bb81:  // pred: ^bb80
    %328 = llvm.load %321 : !llvm.ptr -> i64
    %329 = arith.extui %324 : i8 to i256
    %330 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %331 = llvm.load %330 : !llvm.ptr -> !llvm.ptr
    llvm.store %329, %331 : i256, !llvm.ptr
    %332 = llvm.getelementptr %331[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %332, %330 : !llvm.ptr, !llvm.ptr
    cf.br ^bb87
  ^bb82:  // pred: ^bb84
    %333 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_122 = arith.constant 1024 : i64
    %334 = llvm.load %333 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %335 = arith.addi %334, %c-5_i64 : i64
    llvm.store %335, %333 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %336 = arith.cmpi ult, %334, %c6_i64 : i64
    %c91_i8_123 = arith.constant 91 : i8
    cf.cond_br %336, ^bb1(%c91_i8_123 : i8), ^bb69
  ^bb83:  // pred: ^bb65
    %337 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %338 = llvm.load %337 : !llvm.ptr -> i64
    %c0_i64_124 = arith.constant 0 : i64
    %339 = arith.cmpi uge, %338, %c0_i64_124 : i64
    %c80_i8_125 = arith.constant 80 : i8
    cf.cond_br %339, ^bb84, ^bb1(%c80_i8_125 : i8)
  ^bb84:  // pred: ^bb83
    %340 = arith.subi %338, %c0_i64_124 : i64
    llvm.store %340, %337 : i64, !llvm.ptr
    cf.br ^bb82
  ^bb85:  // pred: ^bb86
    %c1_i256_126 = arith.constant 1 : i256
    %341 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %342 = llvm.load %341 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_126, %342 : i256, !llvm.ptr
    %343 = llvm.getelementptr %342[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %343, %341 : !llvm.ptr, !llvm.ptr
    cf.br ^bb91
  ^bb86:  // pred: ^bb88
    %344 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_127 = arith.constant 1024 : i64
    %345 = llvm.load %344 : !llvm.ptr -> i64
    %c1_i64_128 = arith.constant 1 : i64
    %346 = arith.addi %345, %c1_i64_128 : i64
    llvm.store %346, %344 : i64, !llvm.ptr
    %347 = arith.cmpi ult, %c1024_i64_127, %346 : i64
    %c92_i8_129 = arith.constant 92 : i8
    cf.cond_br %347, ^bb1(%c92_i8_129 : i8), ^bb85
  ^bb87:  // pred: ^bb81
    %348 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %349 = llvm.load %348 : !llvm.ptr -> i64
    %c3_i64_130 = arith.constant 3 : i64
    %350 = arith.cmpi uge, %349, %c3_i64_130 : i64
    %c80_i8_131 = arith.constant 80 : i8
    cf.cond_br %350, ^bb88, ^bb1(%c80_i8_131 : i8)
  ^bb88:  // pred: ^bb87
    %351 = arith.subi %349, %c3_i64_130 : i64
    llvm.store %351, %348 : i64, !llvm.ptr
    cf.br ^bb86
  ^bb89:  // pred: ^bb90
    %c0_i256_132 = arith.constant 0 : i256
    %352 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %353 = llvm.load %352 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_132, %353 : i256, !llvm.ptr
    %354 = llvm.getelementptr %353[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %354, %352 : !llvm.ptr, !llvm.ptr
    cf.br ^bb97
  ^bb90:  // pred: ^bb92
    %355 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_133 = arith.constant 1024 : i64
    %356 = llvm.load %355 : !llvm.ptr -> i64
    %c1_i64_134 = arith.constant 1 : i64
    %357 = arith.addi %356, %c1_i64_134 : i64
    llvm.store %357, %355 : i64, !llvm.ptr
    %358 = arith.cmpi ult, %c1024_i64_133, %357 : i64
    %c92_i8_135 = arith.constant 92 : i8
    cf.cond_br %358, ^bb1(%c92_i8_135 : i8), ^bb89
  ^bb91:  // pred: ^bb85
    %359 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %360 = llvm.load %359 : !llvm.ptr -> i64
    %c3_i64_136 = arith.constant 3 : i64
    %361 = arith.cmpi uge, %360, %c3_i64_136 : i64
    %c80_i8_137 = arith.constant 80 : i8
    cf.cond_br %361, ^bb92, ^bb1(%c80_i8_137 : i8)
  ^bb92:  // pred: ^bb91
    %362 = arith.subi %360, %c3_i64_136 : i64
    llvm.store %362, %359 : i64, !llvm.ptr
    cf.br ^bb90
  ^bb93:  // pred: ^bb96
    %363 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %364 = llvm.load %363 : !llvm.ptr -> !llvm.ptr
    %365 = llvm.getelementptr %364[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %366 = llvm.load %365 : !llvm.ptr -> i256
    llvm.store %365, %363 : !llvm.ptr, !llvm.ptr
    %367 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %368 = llvm.load %367 : !llvm.ptr -> !llvm.ptr
    %369 = llvm.getelementptr %368[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %370 = llvm.load %369 : !llvm.ptr -> i256
    llvm.store %369, %367 : !llvm.ptr, !llvm.ptr
    %371 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %372 = llvm.load %371 : !llvm.ptr -> i1
    %c87_i8_138 = arith.constant 87 : i8
    cf.cond_br %372, ^bb1(%c87_i8_138 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %c1_i256_139 = arith.constant 1 : i256
    %373 = llvm.alloca %c1_i256_139 x i256 : (i256) -> !llvm.ptr
    llvm.store %366, %373 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_140 = arith.constant 1 : i256
    %374 = llvm.alloca %c1_i256_140 x i256 : (i256) -> !llvm.ptr
    llvm.store %370, %374 {alignment = 1 : i64} : i256, !llvm.ptr
    %375 = call @dora_fn_sstore(%arg0, %373, %374) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %376 = llvm.getelementptr %375[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %377 = llvm.load %376 : !llvm.ptr -> i64
    %378 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %379 = llvm.load %378 : !llvm.ptr -> i64
    %380 = arith.cmpi ult, %379, %377 : i64
    scf.if %380 {
    } else {
      %596 = arith.subi %379, %377 : i64
      llvm.store %596, %378 : i64, !llvm.ptr
    }
    %c80_i8_141 = arith.constant 80 : i8
    cf.cond_br %380, ^bb1(%c80_i8_141 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    cf.br ^bb101
  ^bb96:  // pred: ^bb98
    %381 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_142 = arith.constant 1024 : i64
    %382 = llvm.load %381 : !llvm.ptr -> i64
    %c-2_i64_143 = arith.constant -2 : i64
    %383 = arith.addi %382, %c-2_i64_143 : i64
    llvm.store %383, %381 : i64, !llvm.ptr
    %c2_i64_144 = arith.constant 2 : i64
    %384 = arith.cmpi ult, %382, %c2_i64_144 : i64
    %c91_i8_145 = arith.constant 91 : i8
    cf.cond_br %384, ^bb1(%c91_i8_145 : i8), ^bb93
  ^bb97:  // pred: ^bb89
    %385 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %386 = llvm.load %385 : !llvm.ptr -> i64
    %c0_i64_146 = arith.constant 0 : i64
    %387 = arith.cmpi uge, %386, %c0_i64_146 : i64
    %c80_i8_147 = arith.constant 80 : i8
    cf.cond_br %387, ^bb98, ^bb1(%c80_i8_147 : i8)
  ^bb98:  // pred: ^bb97
    %388 = arith.subi %386, %c0_i64_146 : i64
    llvm.store %388, %385 : i64, !llvm.ptr
    cf.br ^bb96
  ^bb99:  // pred: ^bb100
    %c0_i256_148 = arith.constant 0 : i256
    %389 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %390 = llvm.load %389 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_148, %390 : i256, !llvm.ptr
    %391 = llvm.getelementptr %390[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %391, %389 : !llvm.ptr, !llvm.ptr
    cf.br ^bb105
  ^bb100:  // pred: ^bb102
    %392 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_149 = arith.constant 1024 : i64
    %393 = llvm.load %392 : !llvm.ptr -> i64
    %c1_i64_150 = arith.constant 1 : i64
    %394 = arith.addi %393, %c1_i64_150 : i64
    llvm.store %394, %392 : i64, !llvm.ptr
    %395 = arith.cmpi ult, %c1024_i64_149, %394 : i64
    %c92_i8_151 = arith.constant 92 : i8
    cf.cond_br %395, ^bb1(%c92_i8_151 : i8), ^bb99
  ^bb101:  // pred: ^bb95
    %396 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %397 = llvm.load %396 : !llvm.ptr -> i64
    %c3_i64_152 = arith.constant 3 : i64
    %398 = arith.cmpi uge, %397, %c3_i64_152 : i64
    %c80_i8_153 = arith.constant 80 : i8
    cf.cond_br %398, ^bb102, ^bb1(%c80_i8_153 : i8)
  ^bb102:  // pred: ^bb101
    %399 = arith.subi %397, %c3_i64_152 : i64
    llvm.store %399, %396 : i64, !llvm.ptr
    cf.br ^bb100
  ^bb103:  // pred: ^bb104
    %c0_i256_154 = arith.constant 0 : i256
    %400 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %401 = llvm.load %400 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_154, %401 : i256, !llvm.ptr
    %402 = llvm.getelementptr %401[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %402, %400 : !llvm.ptr, !llvm.ptr
    cf.br ^bb109
  ^bb104:  // pred: ^bb106
    %403 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_155 = arith.constant 1024 : i64
    %404 = llvm.load %403 : !llvm.ptr -> i64
    %c1_i64_156 = arith.constant 1 : i64
    %405 = arith.addi %404, %c1_i64_156 : i64
    llvm.store %405, %403 : i64, !llvm.ptr
    %406 = arith.cmpi ult, %c1024_i64_155, %405 : i64
    %c92_i8_157 = arith.constant 92 : i8
    cf.cond_br %406, ^bb1(%c92_i8_157 : i8), ^bb103
  ^bb105:  // pred: ^bb99
    %407 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %408 = llvm.load %407 : !llvm.ptr -> i64
    %c3_i64_158 = arith.constant 3 : i64
    %409 = arith.cmpi uge, %408, %c3_i64_158 : i64
    %c80_i8_159 = arith.constant 80 : i8
    cf.cond_br %409, ^bb106, ^bb1(%c80_i8_159 : i8)
  ^bb106:  // pred: ^bb105
    %410 = arith.subi %408, %c3_i64_158 : i64
    llvm.store %410, %407 : i64, !llvm.ptr
    cf.br ^bb104
  ^bb107:  // pred: ^bb108
    %c32_i256 = arith.constant 32 : i256
    %411 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %412 = llvm.load %411 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %412 : i256, !llvm.ptr
    %413 = llvm.getelementptr %412[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %413, %411 : !llvm.ptr, !llvm.ptr
    cf.br ^bb113
  ^bb108:  // pred: ^bb110
    %414 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_160 = arith.constant 1024 : i64
    %415 = llvm.load %414 : !llvm.ptr -> i64
    %c1_i64_161 = arith.constant 1 : i64
    %416 = arith.addi %415, %c1_i64_161 : i64
    llvm.store %416, %414 : i64, !llvm.ptr
    %417 = arith.cmpi ult, %c1024_i64_160, %416 : i64
    %c92_i8_162 = arith.constant 92 : i8
    cf.cond_br %417, ^bb1(%c92_i8_162 : i8), ^bb107
  ^bb109:  // pred: ^bb103
    %418 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %419 = llvm.load %418 : !llvm.ptr -> i64
    %c3_i64_163 = arith.constant 3 : i64
    %420 = arith.cmpi uge, %419, %c3_i64_163 : i64
    %c80_i8_164 = arith.constant 80 : i8
    cf.cond_br %420, ^bb110, ^bb1(%c80_i8_164 : i8)
  ^bb110:  // pred: ^bb109
    %421 = arith.subi %419, %c3_i64_163 : i64
    llvm.store %421, %418 : i64, !llvm.ptr
    cf.br ^bb108
  ^bb111:  // pred: ^bb112
    %c0_i256_165 = arith.constant 0 : i256
    %422 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %423 = llvm.load %422 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_165, %423 : i256, !llvm.ptr
    %424 = llvm.getelementptr %423[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %424, %422 : !llvm.ptr, !llvm.ptr
    cf.br ^bb117
  ^bb112:  // pred: ^bb114
    %425 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_166 = arith.constant 1024 : i64
    %426 = llvm.load %425 : !llvm.ptr -> i64
    %c1_i64_167 = arith.constant 1 : i64
    %427 = arith.addi %426, %c1_i64_167 : i64
    llvm.store %427, %425 : i64, !llvm.ptr
    %428 = arith.cmpi ult, %c1024_i64_166, %427 : i64
    %c92_i8_168 = arith.constant 92 : i8
    cf.cond_br %428, ^bb1(%c92_i8_168 : i8), ^bb111
  ^bb113:  // pred: ^bb107
    %429 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %430 = llvm.load %429 : !llvm.ptr -> i64
    %c3_i64_169 = arith.constant 3 : i64
    %431 = arith.cmpi uge, %430, %c3_i64_169 : i64
    %c80_i8_170 = arith.constant 80 : i8
    cf.cond_br %431, ^bb114, ^bb1(%c80_i8_170 : i8)
  ^bb114:  // pred: ^bb113
    %432 = arith.subi %430, %c3_i64_169 : i64
    llvm.store %432, %429 : i64, !llvm.ptr
    cf.br ^bb112
  ^bb115:  // pred: ^bb116
    %433 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %434 = llvm.load %433 : !llvm.ptr -> !llvm.ptr
    %435 = llvm.getelementptr %434[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %436 = llvm.load %435 : !llvm.ptr -> i256
    %437 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %438 = llvm.load %437 : !llvm.ptr -> !llvm.ptr
    llvm.store %436, %438 : i256, !llvm.ptr
    %439 = llvm.getelementptr %438[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %439, %437 : !llvm.ptr, !llvm.ptr
    cf.br ^bb121
  ^bb116:  // pred: ^bb118
    %440 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_171 = arith.constant 1024 : i64
    %441 = llvm.load %440 : !llvm.ptr -> i64
    %c1_i64_172 = arith.constant 1 : i64
    %442 = arith.addi %441, %c1_i64_172 : i64
    llvm.store %442, %440 : i64, !llvm.ptr
    %443 = arith.cmpi ult, %c1024_i64_171, %442 : i64
    %c92_i8_173 = arith.constant 92 : i8
    cf.cond_br %443, ^bb1(%c92_i8_173 : i8), ^bb115
  ^bb117:  // pred: ^bb111
    %444 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %445 = llvm.load %444 : !llvm.ptr -> i64
    %c3_i64_174 = arith.constant 3 : i64
    %446 = arith.cmpi uge, %445, %c3_i64_174 : i64
    %c80_i8_175 = arith.constant 80 : i8
    cf.cond_br %446, ^bb118, ^bb1(%c80_i8_175 : i8)
  ^bb118:  // pred: ^bb117
    %447 = arith.subi %445, %c3_i64_174 : i64
    llvm.store %447, %444 : i64, !llvm.ptr
    cf.br ^bb116
  ^bb119:  // pred: ^bb120
    %c65535_i256_176 = arith.constant 65535 : i256
    %448 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %449 = llvm.load %448 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_176, %449 : i256, !llvm.ptr
    %450 = llvm.getelementptr %449[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %450, %448 : !llvm.ptr, !llvm.ptr
    cf.br ^bb137
  ^bb120:  // pred: ^bb122
    %451 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_177 = arith.constant 1024 : i64
    %452 = llvm.load %451 : !llvm.ptr -> i64
    %c1_i64_178 = arith.constant 1 : i64
    %453 = arith.addi %452, %c1_i64_178 : i64
    llvm.store %453, %451 : i64, !llvm.ptr
    %454 = arith.cmpi ult, %c1024_i64_177, %453 : i64
    %c92_i8_179 = arith.constant 92 : i8
    cf.cond_br %454, ^bb1(%c92_i8_179 : i8), ^bb119
  ^bb121:  // pred: ^bb115
    %455 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %456 = llvm.load %455 : !llvm.ptr -> i64
    %c3_i64_180 = arith.constant 3 : i64
    %457 = arith.cmpi uge, %456, %c3_i64_180 : i64
    %c80_i8_181 = arith.constant 80 : i8
    cf.cond_br %457, ^bb122, ^bb1(%c80_i8_181 : i8)
  ^bb122:  // pred: ^bb121
    %458 = arith.subi %456, %c3_i64_180 : i64
    llvm.store %458, %455 : i64, !llvm.ptr
    cf.br ^bb120
  ^bb123:  // pred: ^bb136
    %459 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %460 = llvm.load %459 : !llvm.ptr -> !llvm.ptr
    %461 = llvm.getelementptr %460[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %462 = llvm.load %461 : !llvm.ptr -> i256
    llvm.store %461, %459 : !llvm.ptr, !llvm.ptr
    %463 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %464 = llvm.load %463 : !llvm.ptr -> !llvm.ptr
    %465 = llvm.getelementptr %464[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %466 = llvm.load %465 : !llvm.ptr -> i256
    llvm.store %465, %463 : !llvm.ptr, !llvm.ptr
    %467 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %468 = llvm.load %467 : !llvm.ptr -> !llvm.ptr
    %469 = llvm.getelementptr %468[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %470 = llvm.load %469 : !llvm.ptr -> i256
    llvm.store %469, %467 : !llvm.ptr, !llvm.ptr
    %471 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %472 = llvm.load %471 : !llvm.ptr -> !llvm.ptr
    %473 = llvm.getelementptr %472[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %474 = llvm.load %473 : !llvm.ptr -> i256
    llvm.store %473, %471 : !llvm.ptr, !llvm.ptr
    %475 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %476 = llvm.load %475 : !llvm.ptr -> !llvm.ptr
    %477 = llvm.getelementptr %476[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %478 = llvm.load %477 : !llvm.ptr -> i256
    llvm.store %477, %475 : !llvm.ptr, !llvm.ptr
    %479 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %480 = llvm.load %479 : !llvm.ptr -> !llvm.ptr
    %481 = llvm.getelementptr %480[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %482 = llvm.load %481 : !llvm.ptr -> i256
    llvm.store %481, %479 : !llvm.ptr, !llvm.ptr
    %c0_i256_182 = arith.constant 0 : i256
    %483 = arith.trunci %462 : i256 to i64
    %c0_i64_183 = arith.constant 0 : i64
    %484 = arith.cmpi slt, %483, %c0_i64_183 : i64
    %c84_i8_184 = arith.constant 84 : i8
    cf.cond_br %484, ^bb1(%c84_i8_184 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %485 = arith.trunci %470 : i256 to i64
    %c0_i64_185 = arith.constant 0 : i64
    %486 = arith.cmpi slt, %485, %c0_i64_185 : i64
    %c84_i8_186 = arith.constant 84 : i8
    cf.cond_br %486, ^bb1(%c84_i8_186 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %487 = arith.trunci %474 : i256 to i64
    %c0_i64_187 = arith.constant 0 : i64
    %488 = arith.cmpi slt, %487, %c0_i64_187 : i64
    %c84_i8_188 = arith.constant 84 : i8
    cf.cond_br %488, ^bb1(%c84_i8_188 : i8), ^bb126
  ^bb126:  // pred: ^bb125
    %489 = arith.trunci %478 : i256 to i64
    %c0_i64_189 = arith.constant 0 : i64
    %490 = arith.cmpi slt, %489, %c0_i64_189 : i64
    %c84_i8_190 = arith.constant 84 : i8
    cf.cond_br %490, ^bb1(%c84_i8_190 : i8), ^bb127
  ^bb127:  // pred: ^bb126
    %491 = arith.trunci %482 : i256 to i64
    %c0_i64_191 = arith.constant 0 : i64
    %492 = arith.cmpi slt, %491, %c0_i64_191 : i64
    %c84_i8_192 = arith.constant 84 : i8
    cf.cond_br %492, ^bb1(%c84_i8_192 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %493 = arith.addi %485, %487 : i64
    %c0_i64_193 = arith.constant 0 : i64
    %494 = arith.cmpi slt, %493, %c0_i64_193 : i64
    %c84_i8_194 = arith.constant 84 : i8
    cf.cond_br %494, ^bb1(%c84_i8_194 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    %c31_i64_195 = arith.constant 31 : i64
    %c32_i64_196 = arith.constant 32 : i64
    %495 = arith.addi %493, %c31_i64_195 : i64
    %496 = arith.divui %495, %c32_i64_196 : i64
    %c32_i64_197 = arith.constant 32 : i64
    %497 = arith.muli %496, %c32_i64_197 : i64
    %498 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %499 = llvm.load %498 : !llvm.ptr -> i64
    %c31_i64_198 = arith.constant 31 : i64
    %c32_i64_199 = arith.constant 32 : i64
    %500 = arith.addi %499, %c31_i64_198 : i64
    %501 = arith.divui %500, %c32_i64_199 : i64
    %502 = arith.muli %501, %c32_i64_197 : i64
    %503 = arith.cmpi ult, %502, %497 : i64
    %504 = scf.if %503 -> (i64) {
      %c3_i64_236 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %596 = arith.muli %501, %501 : i64
      %597 = arith.divui %596, %c512_i64 : i64
      %598 = arith.muli %501, %c3_i64_236 : i64
      %599 = arith.addi %597, %598 : i64
      %c3_i64_237 = arith.constant 3 : i64
      %c512_i64_238 = arith.constant 512 : i64
      %600 = arith.muli %496, %496 : i64
      %601 = arith.divui %600, %c512_i64_238 : i64
      %602 = arith.muli %496, %c3_i64_237 : i64
      %603 = arith.addi %601, %602 : i64
      %604 = arith.subi %603, %599 : i64
      scf.yield %604 : i64
    } else {
      %c0_i64_236 = arith.constant 0 : i64
      scf.yield %c0_i64_236 : i64
    }
    %505 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %506 = llvm.load %505 : !llvm.ptr -> i64
    %507 = arith.cmpi ult, %506, %504 : i64
    scf.if %507 {
    } else {
      %596 = arith.subi %506, %504 : i64
      llvm.store %596, %505 : i64, !llvm.ptr
    }
    %c80_i8_200 = arith.constant 80 : i8
    cf.cond_br %507, ^bb1(%c80_i8_200 : i8), ^bb130
  ^bb130:  // pred: ^bb129
    %508 = call @dora_fn_extend_memory(%arg0, %497) : (!llvm.ptr, i64) -> !llvm.ptr
    %509 = llvm.getelementptr %508[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %510 = llvm.load %509 : !llvm.ptr -> !llvm.ptr
    %511 = llvm.getelementptr %508[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %512 = llvm.load %511 : !llvm.ptr -> i8
    %c0_i8_201 = arith.constant 0 : i8
    %513 = arith.cmpi ne, %512, %c0_i8_201 : i8
    cf.cond_br %513, ^bb1(%512 : i8), ^bb131
  ^bb131:  // pred: ^bb130
    %514 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %510, %514 : !llvm.ptr, !llvm.ptr
    %515 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %497, %515 : i64, !llvm.ptr
    %516 = arith.addi %489, %491 : i64
    %c0_i64_202 = arith.constant 0 : i64
    %517 = arith.cmpi slt, %516, %c0_i64_202 : i64
    %c84_i8_203 = arith.constant 84 : i8
    cf.cond_br %517, ^bb1(%c84_i8_203 : i8), ^bb132
  ^bb132:  // pred: ^bb131
    %c31_i64_204 = arith.constant 31 : i64
    %c32_i64_205 = arith.constant 32 : i64
    %518 = arith.addi %516, %c31_i64_204 : i64
    %519 = arith.divui %518, %c32_i64_205 : i64
    %c32_i64_206 = arith.constant 32 : i64
    %520 = arith.muli %519, %c32_i64_206 : i64
    %521 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %522 = llvm.load %521 : !llvm.ptr -> i64
    %c31_i64_207 = arith.constant 31 : i64
    %c32_i64_208 = arith.constant 32 : i64
    %523 = arith.addi %522, %c31_i64_207 : i64
    %524 = arith.divui %523, %c32_i64_208 : i64
    %525 = arith.muli %524, %c32_i64_206 : i64
    %526 = arith.cmpi ult, %525, %520 : i64
    %527 = scf.if %526 -> (i64) {
      %c3_i64_236 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %596 = arith.muli %524, %524 : i64
      %597 = arith.divui %596, %c512_i64 : i64
      %598 = arith.muli %524, %c3_i64_236 : i64
      %599 = arith.addi %597, %598 : i64
      %c3_i64_237 = arith.constant 3 : i64
      %c512_i64_238 = arith.constant 512 : i64
      %600 = arith.muli %519, %519 : i64
      %601 = arith.divui %600, %c512_i64_238 : i64
      %602 = arith.muli %519, %c3_i64_237 : i64
      %603 = arith.addi %601, %602 : i64
      %604 = arith.subi %603, %599 : i64
      scf.yield %604 : i64
    } else {
      %c0_i64_236 = arith.constant 0 : i64
      scf.yield %c0_i64_236 : i64
    }
    %528 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %529 = llvm.load %528 : !llvm.ptr -> i64
    %530 = arith.cmpi ult, %529, %527 : i64
    scf.if %530 {
    } else {
      %596 = arith.subi %529, %527 : i64
      llvm.store %596, %528 : i64, !llvm.ptr
    }
    %c80_i8_209 = arith.constant 80 : i8
    cf.cond_br %530, ^bb1(%c80_i8_209 : i8), ^bb133
  ^bb133:  // pred: ^bb132
    %531 = call @dora_fn_extend_memory(%arg0, %520) : (!llvm.ptr, i64) -> !llvm.ptr
    %532 = llvm.getelementptr %531[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %533 = llvm.load %532 : !llvm.ptr -> !llvm.ptr
    %534 = llvm.getelementptr %531[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %535 = llvm.load %534 : !llvm.ptr -> i8
    %c0_i8_210 = arith.constant 0 : i8
    %536 = arith.cmpi ne, %535, %c0_i8_210 : i8
    cf.cond_br %536, ^bb1(%535 : i8), ^bb134
  ^bb134:  // pred: ^bb133
    %537 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %533, %537 : !llvm.ptr, !llvm.ptr
    %538 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %520, %538 : i64, !llvm.ptr
    %539 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %540 = llvm.load %539 : !llvm.ptr -> i64
    %c1_i256_211 = arith.constant 1 : i256
    %541 = llvm.alloca %c1_i256_211 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_182, %541 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_212 = arith.constant 1 : i256
    %542 = llvm.alloca %c1_i256_212 x i256 : (i256) -> !llvm.ptr
    llvm.store %466, %542 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_213 = arith.constant 1 : i64
    %543 = llvm.alloca %c1_i64_213 x i64 : (i64) -> !llvm.ptr
    %c0_i8_214 = arith.constant 0 : i8
    %544 = call @dora_fn_call(%arg0, %483, %542, %541, %485, %487, %489, %491, %540, %543, %c0_i8_214) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %545 = llvm.getelementptr %544[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %546 = llvm.load %545 : !llvm.ptr -> i8
    %547 = llvm.getelementptr %544[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %548 = llvm.load %547 : !llvm.ptr -> i8
    %c0_i8_215 = arith.constant 0 : i8
    %549 = arith.cmpi ne, %548, %c0_i8_215 : i8
    cf.cond_br %549, ^bb1(%548 : i8), ^bb135
  ^bb135:  // pred: ^bb134
    %550 = llvm.load %543 : !llvm.ptr -> i64
    %551 = arith.extui %546 : i8 to i256
    %552 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %553 = llvm.load %552 : !llvm.ptr -> !llvm.ptr
    llvm.store %551, %553 : i256, !llvm.ptr
    %554 = llvm.getelementptr %553[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %554, %552 : !llvm.ptr, !llvm.ptr
    cf.br ^bb139
  ^bb136:  // pred: ^bb138
    %555 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_216 = arith.constant 1024 : i64
    %556 = llvm.load %555 : !llvm.ptr -> i64
    %c-5_i64_217 = arith.constant -5 : i64
    %557 = arith.addi %556, %c-5_i64_217 : i64
    llvm.store %557, %555 : i64, !llvm.ptr
    %c6_i64_218 = arith.constant 6 : i64
    %558 = arith.cmpi ult, %556, %c6_i64_218 : i64
    %c91_i8_219 = arith.constant 91 : i8
    cf.cond_br %558, ^bb1(%c91_i8_219 : i8), ^bb123
  ^bb137:  // pred: ^bb119
    %559 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %560 = llvm.load %559 : !llvm.ptr -> i64
    %c0_i64_220 = arith.constant 0 : i64
    %561 = arith.cmpi uge, %560, %c0_i64_220 : i64
    %c80_i8_221 = arith.constant 80 : i8
    cf.cond_br %561, ^bb138, ^bb1(%c80_i8_221 : i8)
  ^bb138:  // pred: ^bb137
    %562 = arith.subi %560, %c0_i64_220 : i64
    llvm.store %562, %559 : i64, !llvm.ptr
    cf.br ^bb136
  ^bb139:  // pred: ^bb135
    %c0_i64_222 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %563 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %564 = llvm.load %563 : !llvm.ptr -> i64
    %565 = call @dora_fn_write_result(%arg0, %c0_i64_222, %c0_i64_222, %564, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb140:  // pred: ^bb34
    %c49152_i64 = arith.constant 49152 : i64
    %566 = arith.cmpi ugt, %130, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %566, ^bb1(%c100_i8 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    %c31_i64_223 = arith.constant 31 : i64
    %c32_i64_224 = arith.constant 32 : i64
    %567 = arith.addi %130, %c31_i64_223 : i64
    %568 = arith.divui %567, %c32_i64_224 : i64
    %c2_i64_225 = arith.constant 2 : i64
    %569 = arith.muli %568, %c2_i64_225 : i64
    %570 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %571 = llvm.load %570 : !llvm.ptr -> i64
    %572 = arith.cmpi ult, %571, %569 : i64
    scf.if %572 {
    } else {
      %596 = arith.subi %571, %569 : i64
      llvm.store %596, %570 : i64, !llvm.ptr
    }
    %c80_i8_226 = arith.constant 80 : i8
    cf.cond_br %572, ^bb1(%c80_i8_226 : i8), ^bb142
  ^bb142:  // pred: ^bb141
    %573 = arith.addi %128, %130 : i64
    %c0_i64_227 = arith.constant 0 : i64
    %574 = arith.cmpi slt, %573, %c0_i64_227 : i64
    %c84_i8_228 = arith.constant 84 : i8
    cf.cond_br %574, ^bb1(%c84_i8_228 : i8), ^bb143
  ^bb143:  // pred: ^bb142
    %c31_i64_229 = arith.constant 31 : i64
    %c32_i64_230 = arith.constant 32 : i64
    %575 = arith.addi %573, %c31_i64_229 : i64
    %576 = arith.divui %575, %c32_i64_230 : i64
    %c32_i64_231 = arith.constant 32 : i64
    %577 = arith.muli %576, %c32_i64_231 : i64
    %578 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %579 = llvm.load %578 : !llvm.ptr -> i64
    %c31_i64_232 = arith.constant 31 : i64
    %c32_i64_233 = arith.constant 32 : i64
    %580 = arith.addi %579, %c31_i64_232 : i64
    %581 = arith.divui %580, %c32_i64_233 : i64
    %582 = arith.muli %581, %c32_i64_231 : i64
    %583 = arith.cmpi ult, %582, %577 : i64
    %584 = scf.if %583 -> (i64) {
      %c3_i64_236 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %596 = arith.muli %581, %581 : i64
      %597 = arith.divui %596, %c512_i64 : i64
      %598 = arith.muli %581, %c3_i64_236 : i64
      %599 = arith.addi %597, %598 : i64
      %c3_i64_237 = arith.constant 3 : i64
      %c512_i64_238 = arith.constant 512 : i64
      %600 = arith.muli %576, %576 : i64
      %601 = arith.divui %600, %c512_i64_238 : i64
      %602 = arith.muli %576, %c3_i64_237 : i64
      %603 = arith.addi %601, %602 : i64
      %604 = arith.subi %603, %599 : i64
      scf.yield %604 : i64
    } else {
      %c0_i64_236 = arith.constant 0 : i64
      scf.yield %c0_i64_236 : i64
    }
    %585 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %586 = llvm.load %585 : !llvm.ptr -> i64
    %587 = arith.cmpi ult, %586, %584 : i64
    scf.if %587 {
    } else {
      %596 = arith.subi %586, %584 : i64
      llvm.store %596, %585 : i64, !llvm.ptr
    }
    %c80_i8_234 = arith.constant 80 : i8
    cf.cond_br %587, ^bb1(%c80_i8_234 : i8), ^bb144
  ^bb144:  // pred: ^bb143
    %588 = call @dora_fn_extend_memory(%arg0, %577) : (!llvm.ptr, i64) -> !llvm.ptr
    %589 = llvm.getelementptr %588[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %590 = llvm.load %589 : !llvm.ptr -> !llvm.ptr
    %591 = llvm.getelementptr %588[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %592 = llvm.load %591 : !llvm.ptr -> i8
    %c0_i8_235 = arith.constant 0 : i8
    %593 = arith.cmpi ne, %592, %c0_i8_235 : i8
    cf.cond_br %593, ^bb1(%592 : i8), ^bb145
  ^bb145:  // pred: ^bb144
    %594 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %590, %594 : !llvm.ptr, !llvm.ptr
    %595 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %577, %595 : i64, !llvm.ptr
    cf.br ^bb35
  }
}
