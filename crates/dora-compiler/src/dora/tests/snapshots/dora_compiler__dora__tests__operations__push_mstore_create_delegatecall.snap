---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    %1 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %2 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %1, %2 : !llvm.ptr, !llvm.ptr
    %3 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %4 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %3, %4 : i64, !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %5 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%6: i8):  // 103 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb34, ^bb36, ^bb37, ^bb40, ^bb41, ^bb44, ^bb45, ^bb48, ^bb49, ^bb52, ^bb53, ^bb56, ^bb57, ^bb60, ^bb61, ^bb64, ^bb65, ^bb67, ^bb68, ^bb70, ^bb71, ^bb73, ^bb74, ^bb76, ^bb77, ^bb80, ^bb81, ^bb84, ^bb85, ^bb87, ^bb88, ^bb90, ^bb91, ^bb94, ^bb95, ^bb98, ^bb99, ^bb102, ^bb103, ^bb106, ^bb107, ^bb110, ^bb111, ^bb114, ^bb115, ^bb117, ^bb118, ^bb120, ^bb121, ^bb123, ^bb124, ^bb126, ^bb127, ^bb130, ^bb131, ^bb132, ^bb135, ^bb136, ^bb138, ^bb139, ^bb140, ^bb141, ^bb142, ^bb145, ^bb146, ^bb148, ^bb149, ^bb150, ^bb153, ^bb154, ^bb156, ^bb157, ^bb158, ^bb161, ^bb162, ^bb164, ^bb165, ^bb166, ^bb169, ^bb170, ^bb172, ^bb173, ^bb174, ^bb177, ^bb178
    %c0_i64_0 = arith.constant 0 : i64
    %7 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %8 = llvm.load %7 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %8, %6) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %6 : i8
  ^bb2(%9: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %9 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %10 = llvm.load %arg3 : !llvm.ptr -> i64
    %11 = llvm.getelementptr %arg2[%10] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %12 = arith.addi %10, %c1_i64 : i64
    llvm.store %12, %arg3 : i64, !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %11 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %13 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %14 = arith.addi %13, %c1_i64_1 : i64
    %15 = arith.cmpi ult, %c1024_i64, %14 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %15, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %16 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %18 = arith.cmpi uge, %17, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %18, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %19 = arith.subi %17, %c3_i64 : i64
    llvm.store %19, %16 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %20 = llvm.load %arg3 : !llvm.ptr -> i64
    %21 = llvm.getelementptr %arg2[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %22 = arith.addi %20, %c1_i64_2 : i64
    llvm.store %22, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %21 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %23 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %24 = arith.addi %23, %c1_i64_4 : i64
    %25 = arith.cmpi ult, %c1024_i64_3, %24 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %25, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %26 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %27 = llvm.load %26 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %28 = arith.cmpi uge, %27, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %28, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %29 = arith.subi %27, %c3_i64_6 : i64
    llvm.store %29, %26 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %30 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %31 = arith.subi %30, %c1_i64_8 : i64
    %32 = llvm.getelementptr %arg2[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %31, %arg3 : i64, !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i256
    %34 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_9 = arith.constant 1 : i64
    %35 = arith.subi %34, %c1_i64_9 : i64
    %36 = llvm.getelementptr %arg2[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %35, %arg3 : i64, !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %38 = arith.cmpi ne, %c32_i64, %c0_i64_10 : i64
    cf.cond_br %38, ^bb130, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb134
    %39 = arith.trunci %33 : i256 to i64
    %40 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %43 = llvm.intr.bswap(%37)  : (i256) -> i256
    llvm.store %43, %42 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_11 = arith.constant 1024 : i64
    %44 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %45 = arith.addi %44, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %46 = arith.cmpi ult, %44, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %46, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %47 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %49 = arith.cmpi uge, %48, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %49, ^bb15, ^bb1(%c80_i8_13 : i8)
  ^bb15:  // pred: ^bb14
    %50 = arith.subi %48, %c3_i64_12 : i64
    llvm.store %50, %47 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c17_i256 = arith.constant 17 : i256
    %51 = llvm.load %arg3 : !llvm.ptr -> i64
    %52 = llvm.getelementptr %arg2[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_14 = arith.constant 1 : i64
    %53 = arith.addi %51, %c1_i64_14 : i64
    llvm.store %53, %arg3 : i64, !llvm.ptr
    llvm.store %c17_i256, %52 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_15 = arith.constant 1024 : i64
    %54 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_16 = arith.constant 1 : i64
    %55 = arith.addi %54, %c1_i64_16 : i64
    %56 = arith.cmpi ult, %c1024_i64_15, %55 : i64
    %c92_i8_17 = arith.constant 92 : i8
    cf.cond_br %56, ^bb1(%c92_i8_17 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %57 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> i64
    %c3_i64_18 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %59 = arith.cmpi uge, %58, %c3_i64_18 : i64
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %59, ^bb19, ^bb1(%c80_i8_19 : i8)
  ^bb19:  // pred: ^bb18
    %60 = arith.subi %58, %c3_i64_18 : i64
    llvm.store %60, %57 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c15_i256 = arith.constant 15 : i256
    %61 = llvm.load %arg3 : !llvm.ptr -> i64
    %62 = llvm.getelementptr %arg2[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_20 = arith.constant 1 : i64
    %63 = arith.addi %61, %c1_i64_20 : i64
    llvm.store %63, %arg3 : i64, !llvm.ptr
    llvm.store %c15_i256, %62 : i256, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %c1024_i64_21 = arith.constant 1024 : i64
    %64 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_22 = arith.constant 1 : i64
    %65 = arith.addi %64, %c1_i64_22 : i64
    %66 = arith.cmpi ult, %c1024_i64_21, %65 : i64
    %c92_i8_23 = arith.constant 92 : i8
    cf.cond_br %66, ^bb1(%c92_i8_23 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %67 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> i64
    %c3_i64_24 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %69 = arith.cmpi uge, %68, %c3_i64_24 : i64
    %c80_i8_25 = arith.constant 80 : i8
    cf.cond_br %69, ^bb23, ^bb1(%c80_i8_25 : i8)
  ^bb23:  // pred: ^bb22
    %70 = arith.subi %68, %c3_i64_24 : i64
    llvm.store %70, %67 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_26 = arith.constant 0 : i256
    %71 = llvm.load %arg3 : !llvm.ptr -> i64
    %72 = llvm.getelementptr %arg2[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_27 = arith.constant 1 : i64
    %73 = arith.addi %71, %c1_i64_27 : i64
    llvm.store %73, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_26, %72 : i256, !llvm.ptr
    cf.br ^bb37
  ^bb25:  // pred: ^bb27
    %c1024_i64_28 = arith.constant 1024 : i64
    %74 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_29 = arith.constant 1 : i64
    %75 = arith.addi %74, %c1_i64_29 : i64
    %76 = arith.cmpi ult, %c1024_i64_28, %75 : i64
    %c92_i8_30 = arith.constant 92 : i8
    cf.cond_br %76, ^bb1(%c92_i8_30 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_31 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %79 = arith.cmpi uge, %78, %c3_i64_31 : i64
    %c80_i8_32 = arith.constant 80 : i8
    cf.cond_br %79, ^bb27, ^bb1(%c80_i8_32 : i8)
  ^bb27:  // pred: ^bb26
    %80 = arith.subi %78, %c3_i64_31 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb36
    %81 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_33 = arith.constant 1 : i64
    %82 = arith.subi %81, %c1_i64_33 : i64
    %83 = llvm.getelementptr %arg2[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %82, %arg3 : i64, !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> i256
    %85 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %86 = arith.subi %85, %c1_i64_34 : i64
    %87 = llvm.getelementptr %arg2[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %86, %arg3 : i64, !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> i256
    %89 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_35 = arith.constant 1 : i64
    %90 = arith.subi %89, %c1_i64_35 : i64
    %91 = llvm.getelementptr %arg2[%90] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %90, %arg3 : i64, !llvm.ptr
    %92 = llvm.load %91 : !llvm.ptr -> i256
    %93 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %94 = arith.cmpi ne, %93, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %94, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %95 = arith.cmpi sgt, %92, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %95, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %96 = arith.trunci %92 : i256 to i64
    %c0_i64_36 = arith.constant 0 : i64
    %97 = arith.cmpi slt, %96, %c0_i64_36 : i64
    %c84_i8_37 = arith.constant 84 : i8
    cf.cond_br %97, ^bb1(%c84_i8_37 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i64_38 = arith.constant 0 : i64
    %98 = arith.cmpi ne, %96, %c0_i64_38 : i64
    cf.cond_br %98, ^bb138, ^bb32
  ^bb32:  // 2 preds: ^bb31, ^bb144
    %c32000_i64 = arith.constant 32000 : i64
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %101 = arith.cmpi ult, %100, %c32000_i64 : i64
    scf.if %101 {
    } else {
      %651 = arith.subi %100, %c32000_i64 : i64
      llvm.store %651, %99 : i64, !llvm.ptr
    }
    %c80_i8_39 = arith.constant 80 : i8
    cf.cond_br %101, ^bb1(%c80_i8_39 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c1_i256 = arith.constant 1 : i256
    %102 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %84, %102 {alignment = 1 : i64} : i256, !llvm.ptr
    %103 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> i64
    %105 = arith.trunci %88 : i256 to i64
    %106 = call @dora_fn_create(%arg0, %96, %105, %102, %104) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %107 = llvm.getelementptr %106[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %108 = llvm.load %107 : !llvm.ptr -> i8
    %c0_i8_40 = arith.constant 0 : i8
    %109 = arith.cmpi ne, %108, %c0_i8_40 : i8
    cf.cond_br %109, ^bb1(%108 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %110 = llvm.getelementptr %106[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %111 = llvm.load %110 : !llvm.ptr -> i64
    %112 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> i64
    %114 = arith.cmpi ult, %113, %111 : i64
    scf.if %114 {
    } else {
      %651 = arith.subi %113, %111 : i64
      llvm.store %651, %112 : i64, !llvm.ptr
    }
    %c80_i8_41 = arith.constant 80 : i8
    cf.cond_br %114, ^bb1(%c80_i8_41 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %115 = llvm.load %102 : !llvm.ptr -> i256
    %116 = llvm.load %arg3 : !llvm.ptr -> i64
    %117 = llvm.getelementptr %arg2[%116] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_42 = arith.constant 1 : i64
    %118 = arith.addi %116, %c1_i64_42 : i64
    llvm.store %118, %arg3 : i64, !llvm.ptr
    llvm.store %115, %117 : i256, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %c1024_i64_43 = arith.constant 1024 : i64
    %119 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_44 = arith.constant -2 : i64
    %120 = arith.addi %119, %c-2_i64_44 : i64
    %c3_i64_45 = arith.constant 3 : i64
    %121 = arith.cmpi ult, %119, %c3_i64_45 : i64
    %c91_i8_46 = arith.constant 91 : i8
    cf.cond_br %121, ^bb1(%c91_i8_46 : i8), ^bb28
  ^bb37:  // pred: ^bb24
    %122 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %c0_i64_47 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %124 = arith.cmpi uge, %123, %c0_i64_47 : i64
    %c80_i8_48 = arith.constant 80 : i8
    cf.cond_br %124, ^bb38, ^bb1(%c80_i8_48 : i8)
  ^bb38:  // pred: ^bb37
    %125 = arith.subi %123, %c0_i64_47 : i64
    llvm.store %125, %122 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_49 = arith.constant 0 : i256
    %126 = llvm.load %arg3 : !llvm.ptr -> i64
    %127 = llvm.getelementptr %arg2[%126] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_50 = arith.constant 1 : i64
    %128 = arith.addi %126, %c1_i64_50 : i64
    llvm.store %128, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_49, %127 : i256, !llvm.ptr
    cf.br ^bb45
  ^bb40:  // pred: ^bb42
    %c1024_i64_51 = arith.constant 1024 : i64
    %129 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %130 = arith.addi %129, %c1_i64_52 : i64
    %131 = arith.cmpi ult, %c1024_i64_51, %130 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %131, ^bb1(%c92_i8_53 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %132 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> i64
    %c3_i64_54 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %134 = arith.cmpi uge, %133, %c3_i64_54 : i64
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %134, ^bb42, ^bb1(%c80_i8_55 : i8)
  ^bb42:  // pred: ^bb41
    %135 = arith.subi %133, %c3_i64_54 : i64
    llvm.store %135, %132 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb44
    %c0_i256_56 = arith.constant 0 : i256
    %136 = llvm.load %arg3 : !llvm.ptr -> i64
    %137 = llvm.getelementptr %arg2[%136] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_57 = arith.constant 1 : i64
    %138 = arith.addi %136, %c1_i64_57 : i64
    llvm.store %138, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_56, %137 : i256, !llvm.ptr
    cf.br ^bb49
  ^bb44:  // pred: ^bb46
    %c1024_i64_58 = arith.constant 1024 : i64
    %139 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %140 = arith.addi %139, %c1_i64_59 : i64
    %141 = arith.cmpi ult, %c1024_i64_58, %140 : i64
    %c92_i8_60 = arith.constant 92 : i8
    cf.cond_br %141, ^bb1(%c92_i8_60 : i8), ^bb43
  ^bb45:  // pred: ^bb39
    %142 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> i64
    %c3_i64_61 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %144 = arith.cmpi uge, %143, %c3_i64_61 : i64
    %c80_i8_62 = arith.constant 80 : i8
    cf.cond_br %144, ^bb46, ^bb1(%c80_i8_62 : i8)
  ^bb46:  // pred: ^bb45
    %145 = arith.subi %143, %c3_i64_61 : i64
    llvm.store %145, %142 : i64, !llvm.ptr
    cf.br ^bb44
  ^bb47:  // pred: ^bb48
    %c0_i256_63 = arith.constant 0 : i256
    %146 = llvm.load %arg3 : !llvm.ptr -> i64
    %147 = llvm.getelementptr %arg2[%146] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_64 = arith.constant 1 : i64
    %148 = arith.addi %146, %c1_i64_64 : i64
    llvm.store %148, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_63, %147 : i256, !llvm.ptr
    cf.br ^bb53
  ^bb48:  // pred: ^bb50
    %c1024_i64_65 = arith.constant 1024 : i64
    %149 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_66 = arith.constant 1 : i64
    %150 = arith.addi %149, %c1_i64_66 : i64
    %151 = arith.cmpi ult, %c1024_i64_65, %150 : i64
    %c92_i8_67 = arith.constant 92 : i8
    cf.cond_br %151, ^bb1(%c92_i8_67 : i8), ^bb47
  ^bb49:  // pred: ^bb43
    %152 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %c3_i64_68 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %154 = arith.cmpi uge, %153, %c3_i64_68 : i64
    %c80_i8_69 = arith.constant 80 : i8
    cf.cond_br %154, ^bb50, ^bb1(%c80_i8_69 : i8)
  ^bb50:  // pred: ^bb49
    %155 = arith.subi %153, %c3_i64_68 : i64
    llvm.store %155, %152 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // pred: ^bb52
    %c0_i256_70 = arith.constant 0 : i256
    %156 = llvm.load %arg3 : !llvm.ptr -> i64
    %157 = llvm.getelementptr %arg2[%156] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_71 = arith.constant 1 : i64
    %158 = arith.addi %156, %c1_i64_71 : i64
    llvm.store %158, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_70, %157 : i256, !llvm.ptr
    cf.br ^bb57
  ^bb52:  // pred: ^bb54
    %c1024_i64_72 = arith.constant 1024 : i64
    %159 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %160 = arith.addi %159, %c1_i64_73 : i64
    %161 = arith.cmpi ult, %c1024_i64_72, %160 : i64
    %c92_i8_74 = arith.constant 92 : i8
    cf.cond_br %161, ^bb1(%c92_i8_74 : i8), ^bb51
  ^bb53:  // pred: ^bb47
    %162 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %163 = llvm.load %162 : !llvm.ptr -> i64
    %c3_i64_75 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %164 = arith.cmpi uge, %163, %c3_i64_75 : i64
    %c80_i8_76 = arith.constant 80 : i8
    cf.cond_br %164, ^bb54, ^bb1(%c80_i8_76 : i8)
  ^bb54:  // pred: ^bb53
    %165 = arith.subi %163, %c3_i64_75 : i64
    llvm.store %165, %162 : i64, !llvm.ptr
    cf.br ^bb52
  ^bb55:  // pred: ^bb56
    %c0_i256_77 = arith.constant 0 : i256
    %166 = llvm.load %arg3 : !llvm.ptr -> i64
    %167 = llvm.getelementptr %arg2[%166] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_78 = arith.constant 1 : i64
    %168 = arith.addi %166, %c1_i64_78 : i64
    llvm.store %168, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_77, %167 : i256, !llvm.ptr
    cf.br ^bb61
  ^bb56:  // pred: ^bb58
    %c1024_i64_79 = arith.constant 1024 : i64
    %169 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_80 = arith.constant 1 : i64
    %170 = arith.addi %169, %c1_i64_80 : i64
    %171 = arith.cmpi ult, %c1024_i64_79, %170 : i64
    %c92_i8_81 = arith.constant 92 : i8
    cf.cond_br %171, ^bb1(%c92_i8_81 : i8), ^bb55
  ^bb57:  // pred: ^bb51
    %172 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %173 = llvm.load %172 : !llvm.ptr -> i64
    %c3_i64_82 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %174 = arith.cmpi uge, %173, %c3_i64_82 : i64
    %c80_i8_83 = arith.constant 80 : i8
    cf.cond_br %174, ^bb58, ^bb1(%c80_i8_83 : i8)
  ^bb58:  // pred: ^bb57
    %175 = arith.subi %173, %c3_i64_82 : i64
    llvm.store %175, %172 : i64, !llvm.ptr
    cf.br ^bb56
  ^bb59:  // pred: ^bb60
    %176 = llvm.load %arg3 : !llvm.ptr -> i64
    %177 = llvm.getelementptr %arg2[%176] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %178 = llvm.getelementptr %177[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %179 = llvm.load %178 : !llvm.ptr -> i256
    %180 = llvm.load %arg3 : !llvm.ptr -> i64
    %181 = llvm.getelementptr %arg2[%180] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_84 = arith.constant 1 : i64
    %182 = arith.addi %180, %c1_i64_84 : i64
    llvm.store %182, %arg3 : i64, !llvm.ptr
    llvm.store %179, %181 : i256, !llvm.ptr
    cf.br ^bb65
  ^bb60:  // pred: ^bb62
    %c1024_i64_85 = arith.constant 1024 : i64
    %183 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_86 = arith.constant 1 : i64
    %184 = arith.addi %183, %c1_i64_86 : i64
    %c5_i64 = arith.constant 5 : i64
    %185 = arith.cmpi ult, %183, %c5_i64 : i64
    %186 = arith.cmpi ult, %c1024_i64_85, %184 : i64
    %187 = arith.xori %185, %186 : i1
    %c92_i8_87 = arith.constant 92 : i8
    cf.cond_br %187, ^bb1(%c92_i8_87 : i8), ^bb59
  ^bb61:  // pred: ^bb55
    %188 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %189 = llvm.load %188 : !llvm.ptr -> i64
    %c3_i64_88 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %190 = arith.cmpi uge, %189, %c3_i64_88 : i64
    %c80_i8_89 = arith.constant 80 : i8
    cf.cond_br %190, ^bb62, ^bb1(%c80_i8_89 : i8)
  ^bb62:  // pred: ^bb61
    %191 = arith.subi %189, %c3_i64_88 : i64
    llvm.store %191, %188 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb63:  // pred: ^bb64
    %c65535_i256 = arith.constant 65535 : i256
    %192 = llvm.load %arg3 : !llvm.ptr -> i64
    %193 = llvm.getelementptr %arg2[%192] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_90 = arith.constant 1 : i64
    %194 = arith.addi %192, %c1_i64_90 : i64
    llvm.store %194, %arg3 : i64, !llvm.ptr
    llvm.store %c65535_i256, %193 : i256, !llvm.ptr
    cf.br ^bb77
  ^bb64:  // pred: ^bb66
    %c1024_i64_91 = arith.constant 1024 : i64
    %195 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_92 = arith.constant 1 : i64
    %196 = arith.addi %195, %c1_i64_92 : i64
    %197 = arith.cmpi ult, %c1024_i64_91, %196 : i64
    %c92_i8_93 = arith.constant 92 : i8
    cf.cond_br %197, ^bb1(%c92_i8_93 : i8), ^bb63
  ^bb65:  // pred: ^bb59
    %198 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %199 = llvm.load %198 : !llvm.ptr -> i64
    %c3_i64_94 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %200 = arith.cmpi uge, %199, %c3_i64_94 : i64
    %c80_i8_95 = arith.constant 80 : i8
    cf.cond_br %200, ^bb66, ^bb1(%c80_i8_95 : i8)
  ^bb66:  // pred: ^bb65
    %201 = arith.subi %199, %c3_i64_94 : i64
    llvm.store %201, %198 : i64, !llvm.ptr
    cf.br ^bb64
  ^bb67:  // pred: ^bb76
    %202 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_96 = arith.constant 1 : i64
    %203 = arith.subi %202, %c1_i64_96 : i64
    %204 = llvm.getelementptr %arg2[%203] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %203, %arg3 : i64, !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> i256
    %206 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_97 = arith.constant 1 : i64
    %207 = arith.subi %206, %c1_i64_97 : i64
    %208 = llvm.getelementptr %arg2[%207] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %207, %arg3 : i64, !llvm.ptr
    %209 = llvm.load %208 : !llvm.ptr -> i256
    %210 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_98 = arith.constant 1 : i64
    %211 = arith.subi %210, %c1_i64_98 : i64
    %212 = llvm.getelementptr %arg2[%211] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %211, %arg3 : i64, !llvm.ptr
    %213 = llvm.load %212 : !llvm.ptr -> i256
    %214 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_99 = arith.constant 1 : i64
    %215 = arith.subi %214, %c1_i64_99 : i64
    %216 = llvm.getelementptr %arg2[%215] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %215, %arg3 : i64, !llvm.ptr
    %217 = llvm.load %216 : !llvm.ptr -> i256
    %218 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_100 = arith.constant 1 : i64
    %219 = arith.subi %218, %c1_i64_100 : i64
    %220 = llvm.getelementptr %arg2[%219] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %219, %arg3 : i64, !llvm.ptr
    %221 = llvm.load %220 : !llvm.ptr -> i256
    %222 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_101 = arith.constant 1 : i64
    %223 = arith.subi %222, %c1_i64_101 : i64
    %224 = llvm.getelementptr %arg2[%223] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %223, %arg3 : i64, !llvm.ptr
    %225 = llvm.load %224 : !llvm.ptr -> i256
    %c0_i256_102 = arith.constant 0 : i256
    %c18446744073709551615_i256_103 = arith.constant 18446744073709551615 : i256
    %226 = arith.cmpi sgt, %217, %c18446744073709551615_i256_103 : i256
    %c84_i8_104 = arith.constant 84 : i8
    cf.cond_br %226, ^bb1(%c84_i8_104 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %227 = arith.trunci %217 : i256 to i64
    %c0_i64_105 = arith.constant 0 : i64
    %228 = arith.cmpi slt, %227, %c0_i64_105 : i64
    %c84_i8_106 = arith.constant 84 : i8
    cf.cond_br %228, ^bb1(%c84_i8_106 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %c0_i64_107 = arith.constant 0 : i64
    %229 = arith.cmpi ne, %227, %c0_i64_107 : i64
    cf.cond_br %229, ^bb148, ^bb70
  ^bb70:  // 2 preds: ^bb69, ^bb152
    %c18446744073709551615_i256_108 = arith.constant 18446744073709551615 : i256
    %230 = arith.cmpi sgt, %225, %c18446744073709551615_i256_108 : i256
    %c84_i8_109 = arith.constant 84 : i8
    cf.cond_br %230, ^bb1(%c84_i8_109 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %231 = arith.trunci %225 : i256 to i64
    %c0_i64_110 = arith.constant 0 : i64
    %232 = arith.cmpi slt, %231, %c0_i64_110 : i64
    %c84_i8_111 = arith.constant 84 : i8
    cf.cond_br %232, ^bb1(%c84_i8_111 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %c0_i64_112 = arith.constant 0 : i64
    %233 = arith.cmpi ne, %231, %c0_i64_112 : i64
    cf.cond_br %233, ^bb156, ^bb73
  ^bb73:  // 2 preds: ^bb72, ^bb160
    %234 = arith.trunci %213 : i256 to i64
    %235 = arith.trunci %221 : i256 to i64
    %236 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %237 = llvm.load %236 : !llvm.ptr -> i64
    %c1_i256_113 = arith.constant 1 : i256
    %238 = llvm.alloca %c1_i256_113 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_102, %238 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_114 = arith.constant 1 : i256
    %239 = llvm.alloca %c1_i256_114 x i256 : (i256) -> !llvm.ptr
    llvm.store %205, %239 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_115 = arith.constant 1 : i256
    %240 = llvm.alloca %c1_i256_115 x i256 : (i256) -> !llvm.ptr
    llvm.store %209, %240 {alignment = 1 : i64} : i256, !llvm.ptr
    %c2_i8 = arith.constant 2 : i8
    %241 = call @dora_fn_call(%arg0, %239, %240, %238, %234, %227, %235, %231, %237, %c2_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %242 = llvm.getelementptr %241[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %243 = llvm.load %242 : !llvm.ptr -> i8
    %244 = llvm.getelementptr %241[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %245 = llvm.load %244 : !llvm.ptr -> i8
    %c0_i8_116 = arith.constant 0 : i8
    %246 = arith.cmpi ne, %245, %c0_i8_116 : i8
    cf.cond_br %246, ^bb1(%245 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %247 = llvm.getelementptr %241[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %248 = llvm.load %247 : !llvm.ptr -> i64
    %249 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> i64
    %251 = arith.cmpi ult, %250, %248 : i64
    scf.if %251 {
    } else {
      %651 = arith.subi %250, %248 : i64
      llvm.store %651, %249 : i64, !llvm.ptr
    }
    %c80_i8_117 = arith.constant 80 : i8
    cf.cond_br %251, ^bb1(%c80_i8_117 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %252 = arith.extui %243 : i8 to i256
    %253 = llvm.load %arg3 : !llvm.ptr -> i64
    %254 = llvm.getelementptr %arg2[%253] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_118 = arith.constant 1 : i64
    %255 = arith.addi %253, %c1_i64_118 : i64
    llvm.store %255, %arg3 : i64, !llvm.ptr
    llvm.store %252, %254 : i256, !llvm.ptr
    cf.br ^bb81
  ^bb76:  // pred: ^bb78
    %c1024_i64_119 = arith.constant 1024 : i64
    %256 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %257 = arith.addi %256, %c-5_i64 : i64
    %c6_i64 = arith.constant 6 : i64
    %258 = arith.cmpi ult, %256, %c6_i64 : i64
    %c91_i8_120 = arith.constant 91 : i8
    cf.cond_br %258, ^bb1(%c91_i8_120 : i8), ^bb67
  ^bb77:  // pred: ^bb63
    %259 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %260 = llvm.load %259 : !llvm.ptr -> i64
    %c0_i64_121 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %261 = arith.cmpi uge, %260, %c0_i64_121 : i64
    %c80_i8_122 = arith.constant 80 : i8
    cf.cond_br %261, ^bb78, ^bb1(%c80_i8_122 : i8)
  ^bb78:  // pred: ^bb77
    %262 = arith.subi %260, %c0_i64_121 : i64
    llvm.store %262, %259 : i64, !llvm.ptr
    cf.br ^bb76
  ^bb79:  // pred: ^bb80
    %c1_i256_123 = arith.constant 1 : i256
    %263 = llvm.load %arg3 : !llvm.ptr -> i64
    %264 = llvm.getelementptr %arg2[%263] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_124 = arith.constant 1 : i64
    %265 = arith.addi %263, %c1_i64_124 : i64
    llvm.store %265, %arg3 : i64, !llvm.ptr
    llvm.store %c1_i256_123, %264 : i256, !llvm.ptr
    cf.br ^bb85
  ^bb80:  // pred: ^bb82
    %c1024_i64_125 = arith.constant 1024 : i64
    %266 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_126 = arith.constant 1 : i64
    %267 = arith.addi %266, %c1_i64_126 : i64
    %268 = arith.cmpi ult, %c1024_i64_125, %267 : i64
    %c92_i8_127 = arith.constant 92 : i8
    cf.cond_br %268, ^bb1(%c92_i8_127 : i8), ^bb79
  ^bb81:  // pred: ^bb75
    %269 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %270 = llvm.load %269 : !llvm.ptr -> i64
    %c3_i64_128 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %271 = arith.cmpi uge, %270, %c3_i64_128 : i64
    %c80_i8_129 = arith.constant 80 : i8
    cf.cond_br %271, ^bb82, ^bb1(%c80_i8_129 : i8)
  ^bb82:  // pred: ^bb81
    %272 = arith.subi %270, %c3_i64_128 : i64
    llvm.store %272, %269 : i64, !llvm.ptr
    cf.br ^bb80
  ^bb83:  // pred: ^bb84
    %c0_i256_130 = arith.constant 0 : i256
    %273 = llvm.load %arg3 : !llvm.ptr -> i64
    %274 = llvm.getelementptr %arg2[%273] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_131 = arith.constant 1 : i64
    %275 = arith.addi %273, %c1_i64_131 : i64
    llvm.store %275, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_130, %274 : i256, !llvm.ptr
    cf.br ^bb91
  ^bb84:  // pred: ^bb86
    %c1024_i64_132 = arith.constant 1024 : i64
    %276 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_133 = arith.constant 1 : i64
    %277 = arith.addi %276, %c1_i64_133 : i64
    %278 = arith.cmpi ult, %c1024_i64_132, %277 : i64
    %c92_i8_134 = arith.constant 92 : i8
    cf.cond_br %278, ^bb1(%c92_i8_134 : i8), ^bb83
  ^bb85:  // pred: ^bb79
    %279 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %280 = llvm.load %279 : !llvm.ptr -> i64
    %c3_i64_135 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %281 = arith.cmpi uge, %280, %c3_i64_135 : i64
    %c80_i8_136 = arith.constant 80 : i8
    cf.cond_br %281, ^bb86, ^bb1(%c80_i8_136 : i8)
  ^bb86:  // pred: ^bb85
    %282 = arith.subi %280, %c3_i64_135 : i64
    llvm.store %282, %279 : i64, !llvm.ptr
    cf.br ^bb84
  ^bb87:  // pred: ^bb90
    %283 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_137 = arith.constant 1 : i64
    %284 = arith.subi %283, %c1_i64_137 : i64
    %285 = llvm.getelementptr %arg2[%284] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %284, %arg3 : i64, !llvm.ptr
    %286 = llvm.load %285 : !llvm.ptr -> i256
    %287 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_138 = arith.constant 1 : i64
    %288 = arith.subi %287, %c1_i64_138 : i64
    %289 = llvm.getelementptr %arg2[%288] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %288, %arg3 : i64, !llvm.ptr
    %290 = llvm.load %289 : !llvm.ptr -> i256
    %c1_i256_139 = arith.constant 1 : i256
    %291 = llvm.alloca %c1_i256_139 x i256 : (i256) -> !llvm.ptr
    llvm.store %286, %291 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_140 = arith.constant 1 : i256
    %292 = llvm.alloca %c1_i256_140 x i256 : (i256) -> !llvm.ptr
    llvm.store %290, %292 {alignment = 1 : i64} : i256, !llvm.ptr
    %293 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %294 = llvm.load %293 : !llvm.ptr -> i64
    %295 = call @dora_fn_sstore(%arg0, %291, %292, %294) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
    %296 = llvm.getelementptr %295[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %297 = llvm.load %296 : !llvm.ptr -> i8
    %c0_i8_141 = arith.constant 0 : i8
    %298 = arith.cmpi ne, %297, %c0_i8_141 : i8
    cf.cond_br %298, ^bb1(%297 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %299 = llvm.getelementptr %295[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %300 = llvm.load %299 : !llvm.ptr -> i64
    %301 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %302 = llvm.load %301 : !llvm.ptr -> i64
    %303 = arith.cmpi ult, %302, %300 : i64
    scf.if %303 {
    } else {
      %651 = arith.subi %302, %300 : i64
      llvm.store %651, %301 : i64, !llvm.ptr
    }
    %c80_i8_142 = arith.constant 80 : i8
    cf.cond_br %303, ^bb1(%c80_i8_142 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    cf.br ^bb95
  ^bb90:  // pred: ^bb92
    %c1024_i64_143 = arith.constant 1024 : i64
    %304 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_144 = arith.constant -2 : i64
    %305 = arith.addi %304, %c-2_i64_144 : i64
    %c2_i64_145 = arith.constant 2 : i64
    %306 = arith.cmpi ult, %304, %c2_i64_145 : i64
    %c91_i8_146 = arith.constant 91 : i8
    cf.cond_br %306, ^bb1(%c91_i8_146 : i8), ^bb87
  ^bb91:  // pred: ^bb83
    %307 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %308 = llvm.load %307 : !llvm.ptr -> i64
    %c0_i64_147 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %309 = arith.cmpi uge, %308, %c0_i64_147 : i64
    %c80_i8_148 = arith.constant 80 : i8
    cf.cond_br %309, ^bb92, ^bb1(%c80_i8_148 : i8)
  ^bb92:  // pred: ^bb91
    %310 = arith.subi %308, %c0_i64_147 : i64
    llvm.store %310, %307 : i64, !llvm.ptr
    cf.br ^bb90
  ^bb93:  // pred: ^bb94
    %c0_i256_149 = arith.constant 0 : i256
    %311 = llvm.load %arg3 : !llvm.ptr -> i64
    %312 = llvm.getelementptr %arg2[%311] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_150 = arith.constant 1 : i64
    %313 = arith.addi %311, %c1_i64_150 : i64
    llvm.store %313, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_149, %312 : i256, !llvm.ptr
    cf.br ^bb99
  ^bb94:  // pred: ^bb96
    %c1024_i64_151 = arith.constant 1024 : i64
    %314 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_152 = arith.constant 1 : i64
    %315 = arith.addi %314, %c1_i64_152 : i64
    %316 = arith.cmpi ult, %c1024_i64_151, %315 : i64
    %c92_i8_153 = arith.constant 92 : i8
    cf.cond_br %316, ^bb1(%c92_i8_153 : i8), ^bb93
  ^bb95:  // pred: ^bb89
    %317 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %318 = llvm.load %317 : !llvm.ptr -> i64
    %c3_i64_154 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %319 = arith.cmpi uge, %318, %c3_i64_154 : i64
    %c80_i8_155 = arith.constant 80 : i8
    cf.cond_br %319, ^bb96, ^bb1(%c80_i8_155 : i8)
  ^bb96:  // pred: ^bb95
    %320 = arith.subi %318, %c3_i64_154 : i64
    llvm.store %320, %317 : i64, !llvm.ptr
    cf.br ^bb94
  ^bb97:  // pred: ^bb98
    %c0_i256_156 = arith.constant 0 : i256
    %321 = llvm.load %arg3 : !llvm.ptr -> i64
    %322 = llvm.getelementptr %arg2[%321] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_157 = arith.constant 1 : i64
    %323 = arith.addi %321, %c1_i64_157 : i64
    llvm.store %323, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_156, %322 : i256, !llvm.ptr
    cf.br ^bb103
  ^bb98:  // pred: ^bb100
    %c1024_i64_158 = arith.constant 1024 : i64
    %324 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_159 = arith.constant 1 : i64
    %325 = arith.addi %324, %c1_i64_159 : i64
    %326 = arith.cmpi ult, %c1024_i64_158, %325 : i64
    %c92_i8_160 = arith.constant 92 : i8
    cf.cond_br %326, ^bb1(%c92_i8_160 : i8), ^bb97
  ^bb99:  // pred: ^bb93
    %327 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %328 = llvm.load %327 : !llvm.ptr -> i64
    %c3_i64_161 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %329 = arith.cmpi uge, %328, %c3_i64_161 : i64
    %c80_i8_162 = arith.constant 80 : i8
    cf.cond_br %329, ^bb100, ^bb1(%c80_i8_162 : i8)
  ^bb100:  // pred: ^bb99
    %330 = arith.subi %328, %c3_i64_161 : i64
    llvm.store %330, %327 : i64, !llvm.ptr
    cf.br ^bb98
  ^bb101:  // pred: ^bb102
    %c32_i256 = arith.constant 32 : i256
    %331 = llvm.load %arg3 : !llvm.ptr -> i64
    %332 = llvm.getelementptr %arg2[%331] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_163 = arith.constant 1 : i64
    %333 = arith.addi %331, %c1_i64_163 : i64
    llvm.store %333, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256, %332 : i256, !llvm.ptr
    cf.br ^bb107
  ^bb102:  // pred: ^bb104
    %c1024_i64_164 = arith.constant 1024 : i64
    %334 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_165 = arith.constant 1 : i64
    %335 = arith.addi %334, %c1_i64_165 : i64
    %336 = arith.cmpi ult, %c1024_i64_164, %335 : i64
    %c92_i8_166 = arith.constant 92 : i8
    cf.cond_br %336, ^bb1(%c92_i8_166 : i8), ^bb101
  ^bb103:  // pred: ^bb97
    %337 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %338 = llvm.load %337 : !llvm.ptr -> i64
    %c3_i64_167 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %339 = arith.cmpi uge, %338, %c3_i64_167 : i64
    %c80_i8_168 = arith.constant 80 : i8
    cf.cond_br %339, ^bb104, ^bb1(%c80_i8_168 : i8)
  ^bb104:  // pred: ^bb103
    %340 = arith.subi %338, %c3_i64_167 : i64
    llvm.store %340, %337 : i64, !llvm.ptr
    cf.br ^bb102
  ^bb105:  // pred: ^bb106
    %c0_i256_169 = arith.constant 0 : i256
    %341 = llvm.load %arg3 : !llvm.ptr -> i64
    %342 = llvm.getelementptr %arg2[%341] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_170 = arith.constant 1 : i64
    %343 = arith.addi %341, %c1_i64_170 : i64
    llvm.store %343, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_169, %342 : i256, !llvm.ptr
    cf.br ^bb111
  ^bb106:  // pred: ^bb108
    %c1024_i64_171 = arith.constant 1024 : i64
    %344 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_172 = arith.constant 1 : i64
    %345 = arith.addi %344, %c1_i64_172 : i64
    %346 = arith.cmpi ult, %c1024_i64_171, %345 : i64
    %c92_i8_173 = arith.constant 92 : i8
    cf.cond_br %346, ^bb1(%c92_i8_173 : i8), ^bb105
  ^bb107:  // pred: ^bb101
    %347 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %348 = llvm.load %347 : !llvm.ptr -> i64
    %c3_i64_174 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %349 = arith.cmpi uge, %348, %c3_i64_174 : i64
    %c80_i8_175 = arith.constant 80 : i8
    cf.cond_br %349, ^bb108, ^bb1(%c80_i8_175 : i8)
  ^bb108:  // pred: ^bb107
    %350 = arith.subi %348, %c3_i64_174 : i64
    llvm.store %350, %347 : i64, !llvm.ptr
    cf.br ^bb106
  ^bb109:  // pred: ^bb110
    %351 = llvm.load %arg3 : !llvm.ptr -> i64
    %352 = llvm.getelementptr %arg2[%351] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %353 = llvm.getelementptr %352[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %354 = llvm.load %353 : !llvm.ptr -> i256
    %355 = llvm.load %arg3 : !llvm.ptr -> i64
    %356 = llvm.getelementptr %arg2[%355] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_176 = arith.constant 1 : i64
    %357 = arith.addi %355, %c1_i64_176 : i64
    llvm.store %357, %arg3 : i64, !llvm.ptr
    llvm.store %354, %356 : i256, !llvm.ptr
    cf.br ^bb115
  ^bb110:  // pred: ^bb112
    %c1024_i64_177 = arith.constant 1024 : i64
    %358 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_178 = arith.constant 1 : i64
    %359 = arith.addi %358, %c1_i64_178 : i64
    %c6_i64_179 = arith.constant 6 : i64
    %360 = arith.cmpi ult, %358, %c6_i64_179 : i64
    %361 = arith.cmpi ult, %c1024_i64_177, %359 : i64
    %362 = arith.xori %360, %361 : i1
    %c92_i8_180 = arith.constant 92 : i8
    cf.cond_br %362, ^bb1(%c92_i8_180 : i8), ^bb109
  ^bb111:  // pred: ^bb105
    %363 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %364 = llvm.load %363 : !llvm.ptr -> i64
    %c3_i64_181 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %365 = arith.cmpi uge, %364, %c3_i64_181 : i64
    %c80_i8_182 = arith.constant 80 : i8
    cf.cond_br %365, ^bb112, ^bb1(%c80_i8_182 : i8)
  ^bb112:  // pred: ^bb111
    %366 = arith.subi %364, %c3_i64_181 : i64
    llvm.store %366, %363 : i64, !llvm.ptr
    cf.br ^bb110
  ^bb113:  // pred: ^bb114
    %c65535_i256_183 = arith.constant 65535 : i256
    %367 = llvm.load %arg3 : !llvm.ptr -> i64
    %368 = llvm.getelementptr %arg2[%367] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_184 = arith.constant 1 : i64
    %369 = arith.addi %367, %c1_i64_184 : i64
    llvm.store %369, %arg3 : i64, !llvm.ptr
    llvm.store %c65535_i256_183, %368 : i256, !llvm.ptr
    cf.br ^bb127
  ^bb114:  // pred: ^bb116
    %c1024_i64_185 = arith.constant 1024 : i64
    %370 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_186 = arith.constant 1 : i64
    %371 = arith.addi %370, %c1_i64_186 : i64
    %372 = arith.cmpi ult, %c1024_i64_185, %371 : i64
    %c92_i8_187 = arith.constant 92 : i8
    cf.cond_br %372, ^bb1(%c92_i8_187 : i8), ^bb113
  ^bb115:  // pred: ^bb109
    %373 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %374 = llvm.load %373 : !llvm.ptr -> i64
    %c3_i64_188 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %375 = arith.cmpi uge, %374, %c3_i64_188 : i64
    %c80_i8_189 = arith.constant 80 : i8
    cf.cond_br %375, ^bb116, ^bb1(%c80_i8_189 : i8)
  ^bb116:  // pred: ^bb115
    %376 = arith.subi %374, %c3_i64_188 : i64
    llvm.store %376, %373 : i64, !llvm.ptr
    cf.br ^bb114
  ^bb117:  // pred: ^bb126
    %377 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_190 = arith.constant 1 : i64
    %378 = arith.subi %377, %c1_i64_190 : i64
    %379 = llvm.getelementptr %arg2[%378] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %378, %arg3 : i64, !llvm.ptr
    %380 = llvm.load %379 : !llvm.ptr -> i256
    %381 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_191 = arith.constant 1 : i64
    %382 = arith.subi %381, %c1_i64_191 : i64
    %383 = llvm.getelementptr %arg2[%382] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %382, %arg3 : i64, !llvm.ptr
    %384 = llvm.load %383 : !llvm.ptr -> i256
    %385 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_192 = arith.constant 1 : i64
    %386 = arith.subi %385, %c1_i64_192 : i64
    %387 = llvm.getelementptr %arg2[%386] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %386, %arg3 : i64, !llvm.ptr
    %388 = llvm.load %387 : !llvm.ptr -> i256
    %389 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_193 = arith.constant 1 : i64
    %390 = arith.subi %389, %c1_i64_193 : i64
    %391 = llvm.getelementptr %arg2[%390] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %390, %arg3 : i64, !llvm.ptr
    %392 = llvm.load %391 : !llvm.ptr -> i256
    %393 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_194 = arith.constant 1 : i64
    %394 = arith.subi %393, %c1_i64_194 : i64
    %395 = llvm.getelementptr %arg2[%394] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %394, %arg3 : i64, !llvm.ptr
    %396 = llvm.load %395 : !llvm.ptr -> i256
    %397 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_195 = arith.constant 1 : i64
    %398 = arith.subi %397, %c1_i64_195 : i64
    %399 = llvm.getelementptr %arg2[%398] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %398, %arg3 : i64, !llvm.ptr
    %400 = llvm.load %399 : !llvm.ptr -> i256
    %c0_i256_196 = arith.constant 0 : i256
    %c18446744073709551615_i256_197 = arith.constant 18446744073709551615 : i256
    %401 = arith.cmpi sgt, %392, %c18446744073709551615_i256_197 : i256
    %c84_i8_198 = arith.constant 84 : i8
    cf.cond_br %401, ^bb1(%c84_i8_198 : i8), ^bb118
  ^bb118:  // pred: ^bb117
    %402 = arith.trunci %392 : i256 to i64
    %c0_i64_199 = arith.constant 0 : i64
    %403 = arith.cmpi slt, %402, %c0_i64_199 : i64
    %c84_i8_200 = arith.constant 84 : i8
    cf.cond_br %403, ^bb1(%c84_i8_200 : i8), ^bb119
  ^bb119:  // pred: ^bb118
    %c0_i64_201 = arith.constant 0 : i64
    %404 = arith.cmpi ne, %402, %c0_i64_201 : i64
    cf.cond_br %404, ^bb164, ^bb120
  ^bb120:  // 2 preds: ^bb119, ^bb168
    %c18446744073709551615_i256_202 = arith.constant 18446744073709551615 : i256
    %405 = arith.cmpi sgt, %400, %c18446744073709551615_i256_202 : i256
    %c84_i8_203 = arith.constant 84 : i8
    cf.cond_br %405, ^bb1(%c84_i8_203 : i8), ^bb121
  ^bb121:  // pred: ^bb120
    %406 = arith.trunci %400 : i256 to i64
    %c0_i64_204 = arith.constant 0 : i64
    %407 = arith.cmpi slt, %406, %c0_i64_204 : i64
    %c84_i8_205 = arith.constant 84 : i8
    cf.cond_br %407, ^bb1(%c84_i8_205 : i8), ^bb122
  ^bb122:  // pred: ^bb121
    %c0_i64_206 = arith.constant 0 : i64
    %408 = arith.cmpi ne, %406, %c0_i64_206 : i64
    cf.cond_br %408, ^bb172, ^bb123
  ^bb123:  // 2 preds: ^bb122, ^bb176
    %409 = arith.trunci %388 : i256 to i64
    %410 = arith.trunci %396 : i256 to i64
    %411 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %412 = llvm.load %411 : !llvm.ptr -> i64
    %c1_i256_207 = arith.constant 1 : i256
    %413 = llvm.alloca %c1_i256_207 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_196, %413 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_208 = arith.constant 1 : i256
    %414 = llvm.alloca %c1_i256_208 x i256 : (i256) -> !llvm.ptr
    llvm.store %380, %414 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_209 = arith.constant 1 : i256
    %415 = llvm.alloca %c1_i256_209 x i256 : (i256) -> !llvm.ptr
    llvm.store %384, %415 {alignment = 1 : i64} : i256, !llvm.ptr
    %c2_i8_210 = arith.constant 2 : i8
    %416 = call @dora_fn_call(%arg0, %414, %415, %413, %409, %402, %410, %406, %412, %c2_i8_210) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %417 = llvm.getelementptr %416[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %418 = llvm.load %417 : !llvm.ptr -> i8
    %419 = llvm.getelementptr %416[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %420 = llvm.load %419 : !llvm.ptr -> i8
    %c0_i8_211 = arith.constant 0 : i8
    %421 = arith.cmpi ne, %420, %c0_i8_211 : i8
    cf.cond_br %421, ^bb1(%420 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %422 = llvm.getelementptr %416[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %423 = llvm.load %422 : !llvm.ptr -> i64
    %424 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %425 = llvm.load %424 : !llvm.ptr -> i64
    %426 = arith.cmpi ult, %425, %423 : i64
    scf.if %426 {
    } else {
      %651 = arith.subi %425, %423 : i64
      llvm.store %651, %424 : i64, !llvm.ptr
    }
    %c80_i8_212 = arith.constant 80 : i8
    cf.cond_br %426, ^bb1(%c80_i8_212 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %427 = arith.extui %418 : i8 to i256
    %428 = llvm.load %arg3 : !llvm.ptr -> i64
    %429 = llvm.getelementptr %arg2[%428] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_213 = arith.constant 1 : i64
    %430 = arith.addi %428, %c1_i64_213 : i64
    llvm.store %430, %arg3 : i64, !llvm.ptr
    llvm.store %427, %429 : i256, !llvm.ptr
    cf.br ^bb129
  ^bb126:  // pred: ^bb128
    %c1024_i64_214 = arith.constant 1024 : i64
    %431 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-5_i64_215 = arith.constant -5 : i64
    %432 = arith.addi %431, %c-5_i64_215 : i64
    %c6_i64_216 = arith.constant 6 : i64
    %433 = arith.cmpi ult, %431, %c6_i64_216 : i64
    %c91_i8_217 = arith.constant 91 : i8
    cf.cond_br %433, ^bb1(%c91_i8_217 : i8), ^bb117
  ^bb127:  // pred: ^bb113
    %434 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %435 = llvm.load %434 : !llvm.ptr -> i64
    %c0_i64_218 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %436 = arith.cmpi uge, %435, %c0_i64_218 : i64
    %c80_i8_219 = arith.constant 80 : i8
    cf.cond_br %436, ^bb128, ^bb1(%c80_i8_219 : i8)
  ^bb128:  // pred: ^bb127
    %437 = arith.subi %435, %c0_i64_218 : i64
    llvm.store %437, %434 : i64, !llvm.ptr
    cf.br ^bb126
  ^bb129:  // pred: ^bb125
    %c0_i64_220 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %438 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %439 = llvm.load %438 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_220, %c0_i64_220, %439, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb130:  // pred: ^bb11
    %c18446744073709551615_i256_221 = arith.constant 18446744073709551615 : i256
    %440 = arith.cmpi sgt, %33, %c18446744073709551615_i256_221 : i256
    %c84_i8_222 = arith.constant 84 : i8
    cf.cond_br %440, ^bb1(%c84_i8_222 : i8), ^bb131
  ^bb131:  // pred: ^bb130
    %441 = arith.trunci %33 : i256 to i64
    %c0_i64_223 = arith.constant 0 : i64
    %442 = arith.cmpi slt, %441, %c0_i64_223 : i64
    %c84_i8_224 = arith.constant 84 : i8
    cf.cond_br %442, ^bb1(%c84_i8_224 : i8), ^bb132
  ^bb132:  // pred: ^bb131
    %443 = arith.addi %441, %c32_i64 : i64
    %c0_i64_225 = arith.constant 0 : i64
    %444 = arith.cmpi slt, %443, %c0_i64_225 : i64
    %c84_i8_226 = arith.constant 84 : i8
    cf.cond_br %444, ^bb1(%c84_i8_226 : i8), ^bb133
  ^bb133:  // pred: ^bb132
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_227 = arith.constant 32 : i64
    %445 = arith.addi %443, %c31_i64 : i64
    %446 = arith.divui %445, %c32_i64_227 : i64
    %c32_i64_228 = arith.constant 32 : i64
    %447 = arith.muli %446, %c32_i64_228 : i64
    %448 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %449 = llvm.load %448 : !llvm.ptr -> i64
    %c31_i64_229 = arith.constant 31 : i64
    %c32_i64_230 = arith.constant 32 : i64
    %450 = arith.addi %449, %c31_i64_229 : i64
    %451 = arith.divui %450, %c32_i64_230 : i64
    %452 = arith.muli %451, %c32_i64_228 : i64
    %453 = arith.cmpi ult, %452, %447 : i64
    cf.cond_br %453, ^bb135, ^bb134
  ^bb134:  // 2 preds: ^bb133, ^bb137
    cf.br ^bb12
  ^bb135:  // pred: ^bb133
    %c3_i64_231 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %454 = arith.muli %451, %451 : i64
    %455 = arith.divui %454, %c512_i64 : i64
    %456 = arith.muli %451, %c3_i64_231 : i64
    %457 = arith.addi %455, %456 : i64
    %c3_i64_232 = arith.constant 3 : i64
    %c512_i64_233 = arith.constant 512 : i64
    %458 = arith.muli %446, %446 : i64
    %459 = arith.divui %458, %c512_i64_233 : i64
    %460 = arith.muli %446, %c3_i64_232 : i64
    %461 = arith.addi %459, %460 : i64
    %462 = arith.subi %461, %457 : i64
    %463 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %464 = llvm.load %463 : !llvm.ptr -> i64
    %465 = arith.cmpi ult, %464, %462 : i64
    scf.if %465 {
    } else {
      %651 = arith.subi %464, %462 : i64
      llvm.store %651, %463 : i64, !llvm.ptr
    }
    %c80_i8_234 = arith.constant 80 : i8
    cf.cond_br %465, ^bb1(%c80_i8_234 : i8), ^bb136
  ^bb136:  // pred: ^bb135
    %466 = call @dora_fn_extend_memory(%arg0, %447) : (!llvm.ptr, i64) -> !llvm.ptr
    %467 = llvm.getelementptr %466[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %468 = llvm.load %467 : !llvm.ptr -> !llvm.ptr
    %469 = llvm.getelementptr %466[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %470 = llvm.load %469 : !llvm.ptr -> i8
    %c0_i8_235 = arith.constant 0 : i8
    %471 = arith.cmpi ne, %470, %c0_i8_235 : i8
    cf.cond_br %471, ^bb1(%470 : i8), ^bb137
  ^bb137:  // pred: ^bb136
    %472 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %468, %472 : !llvm.ptr, !llvm.ptr
    %473 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %447, %473 : i64, !llvm.ptr
    cf.br ^bb134
  ^bb138:  // pred: ^bb31
    %c49152_i64 = arith.constant 49152 : i64
    %474 = arith.cmpi ugt, %96, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %474, ^bb1(%c100_i8 : i8), ^bb139
  ^bb139:  // pred: ^bb138
    %c31_i64_236 = arith.constant 31 : i64
    %c32_i64_237 = arith.constant 32 : i64
    %475 = arith.addi %96, %c31_i64_236 : i64
    %476 = arith.divui %475, %c32_i64_237 : i64
    %c2_i64_238 = arith.constant 2 : i64
    %477 = arith.muli %476, %c2_i64_238 : i64
    %478 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %479 = llvm.load %478 : !llvm.ptr -> i64
    %480 = arith.cmpi ult, %479, %477 : i64
    scf.if %480 {
    } else {
      %651 = arith.subi %479, %477 : i64
      llvm.store %651, %478 : i64, !llvm.ptr
    }
    %c80_i8_239 = arith.constant 80 : i8
    cf.cond_br %480, ^bb1(%c80_i8_239 : i8), ^bb140
  ^bb140:  // pred: ^bb139
    %c18446744073709551615_i256_240 = arith.constant 18446744073709551615 : i256
    %481 = arith.cmpi sgt, %88, %c18446744073709551615_i256_240 : i256
    %c84_i8_241 = arith.constant 84 : i8
    cf.cond_br %481, ^bb1(%c84_i8_241 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    %482 = arith.trunci %88 : i256 to i64
    %c0_i64_242 = arith.constant 0 : i64
    %483 = arith.cmpi slt, %482, %c0_i64_242 : i64
    %c84_i8_243 = arith.constant 84 : i8
    cf.cond_br %483, ^bb1(%c84_i8_243 : i8), ^bb142
  ^bb142:  // pred: ^bb141
    %484 = arith.addi %482, %96 : i64
    %c0_i64_244 = arith.constant 0 : i64
    %485 = arith.cmpi slt, %484, %c0_i64_244 : i64
    %c84_i8_245 = arith.constant 84 : i8
    cf.cond_br %485, ^bb1(%c84_i8_245 : i8), ^bb143
  ^bb143:  // pred: ^bb142
    %c31_i64_246 = arith.constant 31 : i64
    %c32_i64_247 = arith.constant 32 : i64
    %486 = arith.addi %484, %c31_i64_246 : i64
    %487 = arith.divui %486, %c32_i64_247 : i64
    %c32_i64_248 = arith.constant 32 : i64
    %488 = arith.muli %487, %c32_i64_248 : i64
    %489 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %490 = llvm.load %489 : !llvm.ptr -> i64
    %c31_i64_249 = arith.constant 31 : i64
    %c32_i64_250 = arith.constant 32 : i64
    %491 = arith.addi %490, %c31_i64_249 : i64
    %492 = arith.divui %491, %c32_i64_250 : i64
    %493 = arith.muli %492, %c32_i64_248 : i64
    %494 = arith.cmpi ult, %493, %488 : i64
    cf.cond_br %494, ^bb145, ^bb144
  ^bb144:  // 2 preds: ^bb143, ^bb147
    cf.br ^bb32
  ^bb145:  // pred: ^bb143
    %c3_i64_251 = arith.constant 3 : i64
    %c512_i64_252 = arith.constant 512 : i64
    %495 = arith.muli %492, %492 : i64
    %496 = arith.divui %495, %c512_i64_252 : i64
    %497 = arith.muli %492, %c3_i64_251 : i64
    %498 = arith.addi %496, %497 : i64
    %c3_i64_253 = arith.constant 3 : i64
    %c512_i64_254 = arith.constant 512 : i64
    %499 = arith.muli %487, %487 : i64
    %500 = arith.divui %499, %c512_i64_254 : i64
    %501 = arith.muli %487, %c3_i64_253 : i64
    %502 = arith.addi %500, %501 : i64
    %503 = arith.subi %502, %498 : i64
    %504 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %505 = llvm.load %504 : !llvm.ptr -> i64
    %506 = arith.cmpi ult, %505, %503 : i64
    scf.if %506 {
    } else {
      %651 = arith.subi %505, %503 : i64
      llvm.store %651, %504 : i64, !llvm.ptr
    }
    %c80_i8_255 = arith.constant 80 : i8
    cf.cond_br %506, ^bb1(%c80_i8_255 : i8), ^bb146
  ^bb146:  // pred: ^bb145
    %507 = call @dora_fn_extend_memory(%arg0, %488) : (!llvm.ptr, i64) -> !llvm.ptr
    %508 = llvm.getelementptr %507[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %509 = llvm.load %508 : !llvm.ptr -> !llvm.ptr
    %510 = llvm.getelementptr %507[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %511 = llvm.load %510 : !llvm.ptr -> i8
    %c0_i8_256 = arith.constant 0 : i8
    %512 = arith.cmpi ne, %511, %c0_i8_256 : i8
    cf.cond_br %512, ^bb1(%511 : i8), ^bb147
  ^bb147:  // pred: ^bb146
    %513 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %509, %513 : !llvm.ptr, !llvm.ptr
    %514 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %488, %514 : i64, !llvm.ptr
    cf.br ^bb144
  ^bb148:  // pred: ^bb69
    %c18446744073709551615_i256_257 = arith.constant 18446744073709551615 : i256
    %515 = arith.cmpi sgt, %213, %c18446744073709551615_i256_257 : i256
    %c84_i8_258 = arith.constant 84 : i8
    cf.cond_br %515, ^bb1(%c84_i8_258 : i8), ^bb149
  ^bb149:  // pred: ^bb148
    %516 = arith.trunci %213 : i256 to i64
    %c0_i64_259 = arith.constant 0 : i64
    %517 = arith.cmpi slt, %516, %c0_i64_259 : i64
    %c84_i8_260 = arith.constant 84 : i8
    cf.cond_br %517, ^bb1(%c84_i8_260 : i8), ^bb150
  ^bb150:  // pred: ^bb149
    %518 = arith.addi %516, %227 : i64
    %c0_i64_261 = arith.constant 0 : i64
    %519 = arith.cmpi slt, %518, %c0_i64_261 : i64
    %c84_i8_262 = arith.constant 84 : i8
    cf.cond_br %519, ^bb1(%c84_i8_262 : i8), ^bb151
  ^bb151:  // pred: ^bb150
    %c31_i64_263 = arith.constant 31 : i64
    %c32_i64_264 = arith.constant 32 : i64
    %520 = arith.addi %518, %c31_i64_263 : i64
    %521 = arith.divui %520, %c32_i64_264 : i64
    %c32_i64_265 = arith.constant 32 : i64
    %522 = arith.muli %521, %c32_i64_265 : i64
    %523 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %524 = llvm.load %523 : !llvm.ptr -> i64
    %c31_i64_266 = arith.constant 31 : i64
    %c32_i64_267 = arith.constant 32 : i64
    %525 = arith.addi %524, %c31_i64_266 : i64
    %526 = arith.divui %525, %c32_i64_267 : i64
    %527 = arith.muli %526, %c32_i64_265 : i64
    %528 = arith.cmpi ult, %527, %522 : i64
    cf.cond_br %528, ^bb153, ^bb152
  ^bb152:  // 2 preds: ^bb151, ^bb155
    cf.br ^bb70
  ^bb153:  // pred: ^bb151
    %c3_i64_268 = arith.constant 3 : i64
    %c512_i64_269 = arith.constant 512 : i64
    %529 = arith.muli %526, %526 : i64
    %530 = arith.divui %529, %c512_i64_269 : i64
    %531 = arith.muli %526, %c3_i64_268 : i64
    %532 = arith.addi %530, %531 : i64
    %c3_i64_270 = arith.constant 3 : i64
    %c512_i64_271 = arith.constant 512 : i64
    %533 = arith.muli %521, %521 : i64
    %534 = arith.divui %533, %c512_i64_271 : i64
    %535 = arith.muli %521, %c3_i64_270 : i64
    %536 = arith.addi %534, %535 : i64
    %537 = arith.subi %536, %532 : i64
    %538 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %539 = llvm.load %538 : !llvm.ptr -> i64
    %540 = arith.cmpi ult, %539, %537 : i64
    scf.if %540 {
    } else {
      %651 = arith.subi %539, %537 : i64
      llvm.store %651, %538 : i64, !llvm.ptr
    }
    %c80_i8_272 = arith.constant 80 : i8
    cf.cond_br %540, ^bb1(%c80_i8_272 : i8), ^bb154
  ^bb154:  // pred: ^bb153
    %541 = call @dora_fn_extend_memory(%arg0, %522) : (!llvm.ptr, i64) -> !llvm.ptr
    %542 = llvm.getelementptr %541[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %543 = llvm.load %542 : !llvm.ptr -> !llvm.ptr
    %544 = llvm.getelementptr %541[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %545 = llvm.load %544 : !llvm.ptr -> i8
    %c0_i8_273 = arith.constant 0 : i8
    %546 = arith.cmpi ne, %545, %c0_i8_273 : i8
    cf.cond_br %546, ^bb1(%545 : i8), ^bb155
  ^bb155:  // pred: ^bb154
    %547 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %543, %547 : !llvm.ptr, !llvm.ptr
    %548 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %522, %548 : i64, !llvm.ptr
    cf.br ^bb152
  ^bb156:  // pred: ^bb72
    %c18446744073709551615_i256_274 = arith.constant 18446744073709551615 : i256
    %549 = arith.cmpi sgt, %221, %c18446744073709551615_i256_274 : i256
    %c84_i8_275 = arith.constant 84 : i8
    cf.cond_br %549, ^bb1(%c84_i8_275 : i8), ^bb157
  ^bb157:  // pred: ^bb156
    %550 = arith.trunci %221 : i256 to i64
    %c0_i64_276 = arith.constant 0 : i64
    %551 = arith.cmpi slt, %550, %c0_i64_276 : i64
    %c84_i8_277 = arith.constant 84 : i8
    cf.cond_br %551, ^bb1(%c84_i8_277 : i8), ^bb158
  ^bb158:  // pred: ^bb157
    %552 = arith.addi %550, %231 : i64
    %c0_i64_278 = arith.constant 0 : i64
    %553 = arith.cmpi slt, %552, %c0_i64_278 : i64
    %c84_i8_279 = arith.constant 84 : i8
    cf.cond_br %553, ^bb1(%c84_i8_279 : i8), ^bb159
  ^bb159:  // pred: ^bb158
    %c31_i64_280 = arith.constant 31 : i64
    %c32_i64_281 = arith.constant 32 : i64
    %554 = arith.addi %552, %c31_i64_280 : i64
    %555 = arith.divui %554, %c32_i64_281 : i64
    %c32_i64_282 = arith.constant 32 : i64
    %556 = arith.muli %555, %c32_i64_282 : i64
    %557 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %558 = llvm.load %557 : !llvm.ptr -> i64
    %c31_i64_283 = arith.constant 31 : i64
    %c32_i64_284 = arith.constant 32 : i64
    %559 = arith.addi %558, %c31_i64_283 : i64
    %560 = arith.divui %559, %c32_i64_284 : i64
    %561 = arith.muli %560, %c32_i64_282 : i64
    %562 = arith.cmpi ult, %561, %556 : i64
    cf.cond_br %562, ^bb161, ^bb160
  ^bb160:  // 2 preds: ^bb159, ^bb163
    cf.br ^bb73
  ^bb161:  // pred: ^bb159
    %c3_i64_285 = arith.constant 3 : i64
    %c512_i64_286 = arith.constant 512 : i64
    %563 = arith.muli %560, %560 : i64
    %564 = arith.divui %563, %c512_i64_286 : i64
    %565 = arith.muli %560, %c3_i64_285 : i64
    %566 = arith.addi %564, %565 : i64
    %c3_i64_287 = arith.constant 3 : i64
    %c512_i64_288 = arith.constant 512 : i64
    %567 = arith.muli %555, %555 : i64
    %568 = arith.divui %567, %c512_i64_288 : i64
    %569 = arith.muli %555, %c3_i64_287 : i64
    %570 = arith.addi %568, %569 : i64
    %571 = arith.subi %570, %566 : i64
    %572 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %573 = llvm.load %572 : !llvm.ptr -> i64
    %574 = arith.cmpi ult, %573, %571 : i64
    scf.if %574 {
    } else {
      %651 = arith.subi %573, %571 : i64
      llvm.store %651, %572 : i64, !llvm.ptr
    }
    %c80_i8_289 = arith.constant 80 : i8
    cf.cond_br %574, ^bb1(%c80_i8_289 : i8), ^bb162
  ^bb162:  // pred: ^bb161
    %575 = call @dora_fn_extend_memory(%arg0, %556) : (!llvm.ptr, i64) -> !llvm.ptr
    %576 = llvm.getelementptr %575[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %577 = llvm.load %576 : !llvm.ptr -> !llvm.ptr
    %578 = llvm.getelementptr %575[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %579 = llvm.load %578 : !llvm.ptr -> i8
    %c0_i8_290 = arith.constant 0 : i8
    %580 = arith.cmpi ne, %579, %c0_i8_290 : i8
    cf.cond_br %580, ^bb1(%579 : i8), ^bb163
  ^bb163:  // pred: ^bb162
    %581 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %577, %581 : !llvm.ptr, !llvm.ptr
    %582 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %556, %582 : i64, !llvm.ptr
    cf.br ^bb160
  ^bb164:  // pred: ^bb119
    %c18446744073709551615_i256_291 = arith.constant 18446744073709551615 : i256
    %583 = arith.cmpi sgt, %388, %c18446744073709551615_i256_291 : i256
    %c84_i8_292 = arith.constant 84 : i8
    cf.cond_br %583, ^bb1(%c84_i8_292 : i8), ^bb165
  ^bb165:  // pred: ^bb164
    %584 = arith.trunci %388 : i256 to i64
    %c0_i64_293 = arith.constant 0 : i64
    %585 = arith.cmpi slt, %584, %c0_i64_293 : i64
    %c84_i8_294 = arith.constant 84 : i8
    cf.cond_br %585, ^bb1(%c84_i8_294 : i8), ^bb166
  ^bb166:  // pred: ^bb165
    %586 = arith.addi %584, %402 : i64
    %c0_i64_295 = arith.constant 0 : i64
    %587 = arith.cmpi slt, %586, %c0_i64_295 : i64
    %c84_i8_296 = arith.constant 84 : i8
    cf.cond_br %587, ^bb1(%c84_i8_296 : i8), ^bb167
  ^bb167:  // pred: ^bb166
    %c31_i64_297 = arith.constant 31 : i64
    %c32_i64_298 = arith.constant 32 : i64
    %588 = arith.addi %586, %c31_i64_297 : i64
    %589 = arith.divui %588, %c32_i64_298 : i64
    %c32_i64_299 = arith.constant 32 : i64
    %590 = arith.muli %589, %c32_i64_299 : i64
    %591 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %592 = llvm.load %591 : !llvm.ptr -> i64
    %c31_i64_300 = arith.constant 31 : i64
    %c32_i64_301 = arith.constant 32 : i64
    %593 = arith.addi %592, %c31_i64_300 : i64
    %594 = arith.divui %593, %c32_i64_301 : i64
    %595 = arith.muli %594, %c32_i64_299 : i64
    %596 = arith.cmpi ult, %595, %590 : i64
    cf.cond_br %596, ^bb169, ^bb168
  ^bb168:  // 2 preds: ^bb167, ^bb171
    cf.br ^bb120
  ^bb169:  // pred: ^bb167
    %c3_i64_302 = arith.constant 3 : i64
    %c512_i64_303 = arith.constant 512 : i64
    %597 = arith.muli %594, %594 : i64
    %598 = arith.divui %597, %c512_i64_303 : i64
    %599 = arith.muli %594, %c3_i64_302 : i64
    %600 = arith.addi %598, %599 : i64
    %c3_i64_304 = arith.constant 3 : i64
    %c512_i64_305 = arith.constant 512 : i64
    %601 = arith.muli %589, %589 : i64
    %602 = arith.divui %601, %c512_i64_305 : i64
    %603 = arith.muli %589, %c3_i64_304 : i64
    %604 = arith.addi %602, %603 : i64
    %605 = arith.subi %604, %600 : i64
    %606 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %607 = llvm.load %606 : !llvm.ptr -> i64
    %608 = arith.cmpi ult, %607, %605 : i64
    scf.if %608 {
    } else {
      %651 = arith.subi %607, %605 : i64
      llvm.store %651, %606 : i64, !llvm.ptr
    }
    %c80_i8_306 = arith.constant 80 : i8
    cf.cond_br %608, ^bb1(%c80_i8_306 : i8), ^bb170
  ^bb170:  // pred: ^bb169
    %609 = call @dora_fn_extend_memory(%arg0, %590) : (!llvm.ptr, i64) -> !llvm.ptr
    %610 = llvm.getelementptr %609[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %611 = llvm.load %610 : !llvm.ptr -> !llvm.ptr
    %612 = llvm.getelementptr %609[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %613 = llvm.load %612 : !llvm.ptr -> i8
    %c0_i8_307 = arith.constant 0 : i8
    %614 = arith.cmpi ne, %613, %c0_i8_307 : i8
    cf.cond_br %614, ^bb1(%613 : i8), ^bb171
  ^bb171:  // pred: ^bb170
    %615 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %611, %615 : !llvm.ptr, !llvm.ptr
    %616 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %590, %616 : i64, !llvm.ptr
    cf.br ^bb168
  ^bb172:  // pred: ^bb122
    %c18446744073709551615_i256_308 = arith.constant 18446744073709551615 : i256
    %617 = arith.cmpi sgt, %396, %c18446744073709551615_i256_308 : i256
    %c84_i8_309 = arith.constant 84 : i8
    cf.cond_br %617, ^bb1(%c84_i8_309 : i8), ^bb173
  ^bb173:  // pred: ^bb172
    %618 = arith.trunci %396 : i256 to i64
    %c0_i64_310 = arith.constant 0 : i64
    %619 = arith.cmpi slt, %618, %c0_i64_310 : i64
    %c84_i8_311 = arith.constant 84 : i8
    cf.cond_br %619, ^bb1(%c84_i8_311 : i8), ^bb174
  ^bb174:  // pred: ^bb173
    %620 = arith.addi %618, %406 : i64
    %c0_i64_312 = arith.constant 0 : i64
    %621 = arith.cmpi slt, %620, %c0_i64_312 : i64
    %c84_i8_313 = arith.constant 84 : i8
    cf.cond_br %621, ^bb1(%c84_i8_313 : i8), ^bb175
  ^bb175:  // pred: ^bb174
    %c31_i64_314 = arith.constant 31 : i64
    %c32_i64_315 = arith.constant 32 : i64
    %622 = arith.addi %620, %c31_i64_314 : i64
    %623 = arith.divui %622, %c32_i64_315 : i64
    %c32_i64_316 = arith.constant 32 : i64
    %624 = arith.muli %623, %c32_i64_316 : i64
    %625 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %626 = llvm.load %625 : !llvm.ptr -> i64
    %c31_i64_317 = arith.constant 31 : i64
    %c32_i64_318 = arith.constant 32 : i64
    %627 = arith.addi %626, %c31_i64_317 : i64
    %628 = arith.divui %627, %c32_i64_318 : i64
    %629 = arith.muli %628, %c32_i64_316 : i64
    %630 = arith.cmpi ult, %629, %624 : i64
    cf.cond_br %630, ^bb177, ^bb176
  ^bb176:  // 2 preds: ^bb175, ^bb179
    cf.br ^bb123
  ^bb177:  // pred: ^bb175
    %c3_i64_319 = arith.constant 3 : i64
    %c512_i64_320 = arith.constant 512 : i64
    %631 = arith.muli %628, %628 : i64
    %632 = arith.divui %631, %c512_i64_320 : i64
    %633 = arith.muli %628, %c3_i64_319 : i64
    %634 = arith.addi %632, %633 : i64
    %c3_i64_321 = arith.constant 3 : i64
    %c512_i64_322 = arith.constant 512 : i64
    %635 = arith.muli %623, %623 : i64
    %636 = arith.divui %635, %c512_i64_322 : i64
    %637 = arith.muli %623, %c3_i64_321 : i64
    %638 = arith.addi %636, %637 : i64
    %639 = arith.subi %638, %634 : i64
    %640 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %641 = llvm.load %640 : !llvm.ptr -> i64
    %642 = arith.cmpi ult, %641, %639 : i64
    scf.if %642 {
    } else {
      %651 = arith.subi %641, %639 : i64
      llvm.store %651, %640 : i64, !llvm.ptr
    }
    %c80_i8_323 = arith.constant 80 : i8
    cf.cond_br %642, ^bb1(%c80_i8_323 : i8), ^bb178
  ^bb178:  // pred: ^bb177
    %643 = call @dora_fn_extend_memory(%arg0, %624) : (!llvm.ptr, i64) -> !llvm.ptr
    %644 = llvm.getelementptr %643[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %645 = llvm.load %644 : !llvm.ptr -> !llvm.ptr
    %646 = llvm.getelementptr %643[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %647 = llvm.load %646 : !llvm.ptr -> i8
    %c0_i8_324 = arith.constant 0 : i8
    %648 = arith.cmpi ne, %647, %c0_i8_324 : i8
    cf.cond_br %648, ^bb1(%647 : i8), ^bb179
  ^bb179:  // pred: ^bb178
    %649 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %645, %649 : !llvm.ptr, !llvm.ptr
    %650 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %624, %650 : i64, !llvm.ptr
    cf.br ^bb176
  }
}
