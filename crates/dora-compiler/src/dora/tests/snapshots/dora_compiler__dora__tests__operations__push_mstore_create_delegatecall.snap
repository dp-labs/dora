---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_debug_print(i32)
  func.func private @dora_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_get_calldata_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_get_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_get_chainid(!llvm.ptr) -> i64
  func.func private @dora_store_in_callvalue_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_caller_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_gaslimit(!llvm.ptr) -> i64
  func.func private @dora_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_copy_code_to_memory(!llvm.ptr, i64, i64, i64)
  func.func private @dora_read_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_write_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> i64
  func.func private @dora_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_get_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_coinbase_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_get_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_codesize_from_address(!llvm.ptr, !llvm.ptr) -> i64
  func.func private @dora_get_address_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_get_prevrandao(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> i8
  func.func private @dora_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_copy_ext_code_to_memory(!llvm.ptr, !llvm.ptr, i64, i64, i64)
  func.func private @dora_get_blob_hash_at_index(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_get_block_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_code_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> i8
  func.func private @dora_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> i8
  func.func private @dora_get_return_data_size(!llvm.ptr) -> i64
  func.func private @dora_copy_return_data_into_memory(!llvm.ptr, i64, i64, i64)
  func.func private @dora_selfdestruct(!llvm.ptr, !llvm.ptr) -> i64
  func.func private @dora_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_get_calldata_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_get_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    cf.br ^bb3
  ^bb1:  // 2 preds: ^bb2, ^bb9
    %c0_i64_1 = arith.constant 0 : i64
    %c3_i8 = arith.constant 3 : i8
    call @dora_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %c3_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c3_i8 : i8
  ^bb2(%10: i256):  // no predecessors
    cf.switch %10 : i256, [
      default: ^bb1
    ]
  ^bb3:  // pred: ^bb0
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %11 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %12 = llvm.load %11 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %12 : i256, !llvm.ptr
    %13 = llvm.getelementptr %12[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %13, %11 : !llvm.ptr, !llvm.ptr
    cf.br ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %14 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb5
  ^bb5:  // pred: ^bb4
    %17 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %18 = llvm.load %17 : !llvm.ptr -> !llvm.ptr
    %19 = llvm.getelementptr %18[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %20 = llvm.load %19 : !llvm.ptr -> i256
    llvm.store %19, %17 : !llvm.ptr, !llvm.ptr
    %21 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> !llvm.ptr
    %23 = llvm.getelementptr %22[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %24 = llvm.load %23 : !llvm.ptr -> i256
    llvm.store %23, %21 : !llvm.ptr, !llvm.ptr
    %25 = arith.trunci %20 : i256 to i64
    %c32_i64 = arith.constant 32 : i64
    %26 = arith.addi %25, %c32_i64 : i64
    %27 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_2 = arith.constant 32 : i64
    %29 = arith.addi %26, %c31_i64 : i64
    %30 = arith.divui %29, %c32_i64_2 : i64
    %31 = arith.muli %30, %c32_i64_2 : i64
    %32 = arith.cmpi ult, %28, %31 : i64
    scf.if %32 {
      %239 = func.call @dora_extend_memory(%arg0, %31) : (!llvm.ptr, i64) -> !llvm.ptr
      llvm.store %31, %27 : i64, !llvm.ptr
      %240 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %239, %240 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %33 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
    %34 = llvm.load %33 : !llvm.ptr -> !llvm.ptr
    %35 = llvm.getelementptr %34[%25] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %36 = llvm.intr.bswap(%24)  : (i256) -> i256
    llvm.store %36, %35 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb6
  ^bb6:  // pred: ^bb5
    %c17_i256 = arith.constant 17 : i256
    %37 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %38 = llvm.load %37 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %38 : i256, !llvm.ptr
    %39 = llvm.getelementptr %38[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %39, %37 : !llvm.ptr, !llvm.ptr
    cf.br ^bb7
  ^bb7:  // pred: ^bb6
    %c15_i256 = arith.constant 15 : i256
    %40 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %41 : i256, !llvm.ptr
    %42 = llvm.getelementptr %41[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    cf.br ^bb8
  ^bb8:  // pred: ^bb7
    %c0_i256_3 = arith.constant 0 : i256
    %43 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %44 = llvm.load %43 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_3, %44 : i256, !llvm.ptr
    %45 = llvm.getelementptr %44[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %45, %43 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb9:  // pred: ^bb8
    %46 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %47 = llvm.load %46 : !llvm.ptr -> !llvm.ptr
    %48 = llvm.getelementptr %47[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %49 = llvm.load %48 : !llvm.ptr -> i256
    llvm.store %48, %46 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %51 = llvm.load %50 : !llvm.ptr -> !llvm.ptr
    %52 = llvm.getelementptr %51[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %53 = llvm.load %52 : !llvm.ptr -> i256
    llvm.store %52, %50 : !llvm.ptr, !llvm.ptr
    %54 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %55 = llvm.load %54 : !llvm.ptr -> !llvm.ptr
    %56 = llvm.getelementptr %55[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %57 = llvm.load %56 : !llvm.ptr -> i256
    llvm.store %56, %54 : !llvm.ptr, !llvm.ptr
    %58 = arith.trunci %53 : i256 to i64
    %59 = arith.trunci %57 : i256 to i64
    %60 = arith.addi %58, %59 : i64
    %61 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %62 = llvm.load %61 : !llvm.ptr -> i64
    %c31_i64_4 = arith.constant 31 : i64
    %c32_i64_5 = arith.constant 32 : i64
    %63 = arith.addi %60, %c31_i64_4 : i64
    %64 = arith.divui %63, %c32_i64_5 : i64
    %65 = arith.muli %64, %c32_i64_5 : i64
    %66 = arith.cmpi ult, %62, %65 : i64
    scf.if %66 {
      %239 = func.call @dora_extend_memory(%arg0, %65) : (!llvm.ptr, i64) -> !llvm.ptr
      llvm.store %65, %61 : i64, !llvm.ptr
      %240 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %239, %240 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %c1_i256 = arith.constant 1 : i256
    %67 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %49, %67 {alignment = 1 : i64} : i256, !llvm.ptr
    %68 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    %69 = llvm.load %68 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %70 = llvm.alloca %c1_i64 x i64 : (i64) -> !llvm.ptr
    llvm.store %69, %70 {alignment = 1 : i64} : i64, !llvm.ptr
    %71 = call @dora_create(%arg0, %59, %58, %67, %70) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %72 = arith.cmpi ne, %c0_i8, %71 : i8
    %73 = llvm.load %67 : !llvm.ptr -> i256
    cf.cond_br %72, ^bb1, ^bb10
  ^bb10:  // pred: ^bb9
    %74 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> !llvm.ptr
    llvm.store %73, %75 : i256, !llvm.ptr
    %76 = llvm.getelementptr %75[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %76, %74 : !llvm.ptr, !llvm.ptr
    cf.br ^bb11
  ^bb11:  // pred: ^bb10
    %c0_i256_6 = arith.constant 0 : i256
    %77 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_6, %78 : i256, !llvm.ptr
    %79 = llvm.getelementptr %78[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %79, %77 : !llvm.ptr, !llvm.ptr
    cf.br ^bb12
  ^bb12:  // pred: ^bb11
    %c0_i256_7 = arith.constant 0 : i256
    %80 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_7, %81 : i256, !llvm.ptr
    %82 = llvm.getelementptr %81[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %82, %80 : !llvm.ptr, !llvm.ptr
    cf.br ^bb13
  ^bb13:  // pred: ^bb12
    %c0_i256_8 = arith.constant 0 : i256
    %83 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_8, %84 : i256, !llvm.ptr
    %85 = llvm.getelementptr %84[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %85, %83 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb14:  // pred: ^bb13
    %c0_i256_9 = arith.constant 0 : i256
    %86 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %87 = llvm.load %86 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_9, %87 : i256, !llvm.ptr
    %88 = llvm.getelementptr %87[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %88, %86 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb15:  // pred: ^bb14
    %c0_i256_10 = arith.constant 0 : i256
    %89 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %90 = llvm.load %89 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_10, %90 : i256, !llvm.ptr
    %91 = llvm.getelementptr %90[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %91, %89 : !llvm.ptr, !llvm.ptr
    cf.br ^bb16
  ^bb16:  // pred: ^bb15
    %92 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    %94 = llvm.getelementptr %93[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %95 = llvm.load %94 : !llvm.ptr -> i256
    %96 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %97 = llvm.load %96 : !llvm.ptr -> !llvm.ptr
    llvm.store %95, %97 : i256, !llvm.ptr
    %98 = llvm.getelementptr %97[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %98, %96 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb17:  // pred: ^bb16
    %c65535_i256 = arith.constant 65535 : i256
    %99 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %100 : i256, !llvm.ptr
    %101 = llvm.getelementptr %100[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %101, %99 : !llvm.ptr, !llvm.ptr
    cf.br ^bb18
  ^bb18:  // pred: ^bb17
    %102 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %103 = llvm.load %102 : !llvm.ptr -> !llvm.ptr
    %104 = llvm.getelementptr %103[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %105 = llvm.load %104 : !llvm.ptr -> i256
    llvm.store %104, %102 : !llvm.ptr, !llvm.ptr
    %106 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> !llvm.ptr
    %108 = llvm.getelementptr %107[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %109 = llvm.load %108 : !llvm.ptr -> i256
    llvm.store %108, %106 : !llvm.ptr, !llvm.ptr
    %110 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> !llvm.ptr
    %112 = llvm.getelementptr %111[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %113 = llvm.load %112 : !llvm.ptr -> i256
    llvm.store %112, %110 : !llvm.ptr, !llvm.ptr
    %114 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> !llvm.ptr
    %116 = llvm.getelementptr %115[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %117 = llvm.load %116 : !llvm.ptr -> i256
    llvm.store %116, %114 : !llvm.ptr, !llvm.ptr
    %118 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> !llvm.ptr
    %120 = llvm.getelementptr %119[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %121 = llvm.load %120 : !llvm.ptr -> i256
    llvm.store %120, %118 : !llvm.ptr, !llvm.ptr
    %122 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> !llvm.ptr
    %124 = llvm.getelementptr %123[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %125 = llvm.load %124 : !llvm.ptr -> i256
    llvm.store %124, %122 : !llvm.ptr, !llvm.ptr
    %c0_i256_11 = arith.constant 0 : i256
    %126 = arith.trunci %105 : i256 to i64
    %127 = arith.trunci %113 : i256 to i64
    %128 = arith.trunci %117 : i256 to i64
    %129 = arith.trunci %121 : i256 to i64
    %130 = arith.trunci %125 : i256 to i64
    %131 = arith.addi %127, %128 : i64
    %132 = arith.addi %129, %130 : i64
    %133 = arith.maxui %131, %132 : i64
    %134 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> i64
    %c31_i64_12 = arith.constant 31 : i64
    %c32_i64_13 = arith.constant 32 : i64
    %136 = arith.addi %133, %c31_i64_12 : i64
    %137 = arith.divui %136, %c32_i64_13 : i64
    %138 = arith.muli %137, %c32_i64_13 : i64
    %139 = arith.cmpi ult, %135, %138 : i64
    scf.if %139 {
      %239 = func.call @dora_extend_memory(%arg0, %138) : (!llvm.ptr, i64) -> !llvm.ptr
      llvm.store %138, %134 : i64, !llvm.ptr
      %240 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %239, %240 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %140 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %c1_i256_14 = arith.constant 1 : i256
    %142 = llvm.alloca %c1_i256_14 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_11, %142 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_15 = arith.constant 1 : i256
    %143 = llvm.alloca %c1_i256_15 x i256 : (i256) -> !llvm.ptr
    llvm.store %109, %143 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_16 = arith.constant 1 : i64
    %144 = llvm.alloca %c1_i64_16 x i64 : (i64) -> !llvm.ptr
    %c0_i8_17 = arith.constant 0 : i8
    %145 = call @dora_call(%arg0, %126, %143, %142, %127, %128, %129, %130, %141, %144, %c0_i8_17) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> i8
    %146 = llvm.load %144 : !llvm.ptr -> i64
    %147 = arith.extui %145 : i8 to i256
    %148 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %147, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    cf.br ^bb19
  ^bb19:  // pred: ^bb18
    %c1_i256_18 = arith.constant 1 : i256
    %151 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %152 = llvm.load %151 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_18, %152 : i256, !llvm.ptr
    %153 = llvm.getelementptr %152[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %153, %151 : !llvm.ptr, !llvm.ptr
    cf.br ^bb20
  ^bb20:  // pred: ^bb19
    %c0_i256_19 = arith.constant 0 : i256
    %154 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_19, %155 : i256, !llvm.ptr
    %156 = llvm.getelementptr %155[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %156, %154 : !llvm.ptr, !llvm.ptr
    cf.br ^bb21
  ^bb21:  // pred: ^bb20
    %157 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %158 = llvm.load %157 : !llvm.ptr -> !llvm.ptr
    %159 = llvm.getelementptr %158[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %160 = llvm.load %159 : !llvm.ptr -> i256
    llvm.store %159, %157 : !llvm.ptr, !llvm.ptr
    %161 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %162 = llvm.load %161 : !llvm.ptr -> !llvm.ptr
    %163 = llvm.getelementptr %162[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %164 = llvm.load %163 : !llvm.ptr -> i256
    llvm.store %163, %161 : !llvm.ptr, !llvm.ptr
    %c1_i256_20 = arith.constant 1 : i256
    %165 = llvm.alloca %c1_i256_20 x i256 : (i256) -> !llvm.ptr
    llvm.store %160, %165 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_21 = arith.constant 1 : i256
    %166 = llvm.alloca %c1_i256_21 x i256 : (i256) -> !llvm.ptr
    llvm.store %164, %166 {alignment = 1 : i64} : i256, !llvm.ptr
    %167 = call @dora_write_storage(%arg0, %165, %166) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> i64
    cf.br ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_22 = arith.constant 0 : i256
    %168 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_22, %169 : i256, !llvm.ptr
    %170 = llvm.getelementptr %169[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %170, %168 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i256_23 = arith.constant 0 : i256
    %171 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %172 = llvm.load %171 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_23, %172 : i256, !llvm.ptr
    %173 = llvm.getelementptr %172[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %173, %171 : !llvm.ptr, !llvm.ptr
    cf.br ^bb24
  ^bb24:  // pred: ^bb23
    %c32_i256 = arith.constant 32 : i256
    %174 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %175 = llvm.load %174 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %175 : i256, !llvm.ptr
    %176 = llvm.getelementptr %175[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %176, %174 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb25:  // pred: ^bb24
    %c0_i256_24 = arith.constant 0 : i256
    %177 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_24, %178 : i256, !llvm.ptr
    %179 = llvm.getelementptr %178[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %179, %177 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb26:  // pred: ^bb25
    %180 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %181 = llvm.load %180 : !llvm.ptr -> !llvm.ptr
    %182 = llvm.getelementptr %181[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %183 = llvm.load %182 : !llvm.ptr -> i256
    %184 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %185 = llvm.load %184 : !llvm.ptr -> !llvm.ptr
    llvm.store %183, %185 : i256, !llvm.ptr
    %186 = llvm.getelementptr %185[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %186, %184 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb27:  // pred: ^bb26
    %c65535_i256_25 = arith.constant 65535 : i256
    %187 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %188 = llvm.load %187 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_25, %188 : i256, !llvm.ptr
    %189 = llvm.getelementptr %188[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %189, %187 : !llvm.ptr, !llvm.ptr
    cf.br ^bb28
  ^bb28:  // pred: ^bb27
    %190 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %191 = llvm.load %190 : !llvm.ptr -> !llvm.ptr
    %192 = llvm.getelementptr %191[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %193 = llvm.load %192 : !llvm.ptr -> i256
    llvm.store %192, %190 : !llvm.ptr, !llvm.ptr
    %194 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %195 = llvm.load %194 : !llvm.ptr -> !llvm.ptr
    %196 = llvm.getelementptr %195[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %197 = llvm.load %196 : !llvm.ptr -> i256
    llvm.store %196, %194 : !llvm.ptr, !llvm.ptr
    %198 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %199 = llvm.load %198 : !llvm.ptr -> !llvm.ptr
    %200 = llvm.getelementptr %199[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %201 = llvm.load %200 : !llvm.ptr -> i256
    llvm.store %200, %198 : !llvm.ptr, !llvm.ptr
    %202 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %203 = llvm.load %202 : !llvm.ptr -> !llvm.ptr
    %204 = llvm.getelementptr %203[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %205 = llvm.load %204 : !llvm.ptr -> i256
    llvm.store %204, %202 : !llvm.ptr, !llvm.ptr
    %206 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %207 = llvm.load %206 : !llvm.ptr -> !llvm.ptr
    %208 = llvm.getelementptr %207[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %209 = llvm.load %208 : !llvm.ptr -> i256
    llvm.store %208, %206 : !llvm.ptr, !llvm.ptr
    %210 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %211 = llvm.load %210 : !llvm.ptr -> !llvm.ptr
    %212 = llvm.getelementptr %211[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %213 = llvm.load %212 : !llvm.ptr -> i256
    llvm.store %212, %210 : !llvm.ptr, !llvm.ptr
    %c0_i256_26 = arith.constant 0 : i256
    %214 = arith.trunci %193 : i256 to i64
    %215 = arith.trunci %201 : i256 to i64
    %216 = arith.trunci %205 : i256 to i64
    %217 = arith.trunci %209 : i256 to i64
    %218 = arith.trunci %213 : i256 to i64
    %219 = arith.addi %215, %216 : i64
    %220 = arith.addi %217, %218 : i64
    %221 = arith.maxui %219, %220 : i64
    %222 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> i64
    %c31_i64_27 = arith.constant 31 : i64
    %c32_i64_28 = arith.constant 32 : i64
    %224 = arith.addi %221, %c31_i64_27 : i64
    %225 = arith.divui %224, %c32_i64_28 : i64
    %226 = arith.muli %225, %c32_i64_28 : i64
    %227 = arith.cmpi ult, %223, %226 : i64
    scf.if %227 {
      %239 = func.call @dora_extend_memory(%arg0, %226) : (!llvm.ptr, i64) -> !llvm.ptr
      llvm.store %226, %222 : i64, !llvm.ptr
      %240 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %239, %240 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %228 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    %229 = llvm.load %228 : !llvm.ptr -> i64
    %c1_i256_29 = arith.constant 1 : i256
    %230 = llvm.alloca %c1_i256_29 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_26, %230 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_30 = arith.constant 1 : i256
    %231 = llvm.alloca %c1_i256_30 x i256 : (i256) -> !llvm.ptr
    llvm.store %197, %231 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_31 = arith.constant 1 : i64
    %232 = llvm.alloca %c1_i64_31 x i64 : (i64) -> !llvm.ptr
    %c0_i8_32 = arith.constant 0 : i8
    %233 = call @dora_call(%arg0, %214, %231, %230, %215, %216, %217, %218, %229, %232, %c0_i8_32) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> i8
    %234 = llvm.load %232 : !llvm.ptr -> i64
    %235 = arith.extui %233 : i8 to i256
    %236 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %237 = llvm.load %236 : !llvm.ptr -> !llvm.ptr
    llvm.store %235, %237 : i256, !llvm.ptr
    %238 = llvm.getelementptr %237[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %238, %236 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb29:  // pred: ^bb28
    %c0_i64_33 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    call @dora_write_result(%arg0, %c0_i64_33, %c0_i64_33, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  }
}
