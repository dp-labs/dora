---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 19 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb13, ^bb15, ^bb16, ^bb19, ^bb20, ^bb23, ^bb24, ^bb26, ^bb27, ^bb28, ^bb30, ^bb31
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c0_i256 = arith.constant 0 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c200_i256 = arith.constant 200 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c200_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb16
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb15
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %43 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %44 = llvm.load %43 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %44, ^bb1(%c87_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c1_i256 = arith.constant 1 : i256
    %45 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %38, %45 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_7 = arith.constant 1 : i256
    %46 = llvm.alloca %c1_i256_7 x i256 : (i256) -> !llvm.ptr
    llvm.store %42, %46 {alignment = 1 : i64} : i256, !llvm.ptr
    %47 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> i64
    %49 = call @dora_fn_sstore(%arg0, %45, %46, %48) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
    %50 = llvm.getelementptr %49[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %51 = llvm.load %50 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %52 = arith.cmpi ne, %51, %c0_i8 : i8
    cf.cond_br %52, ^bb1(%51 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %53 = llvm.getelementptr %49[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %55 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %56 = llvm.load %55 : !llvm.ptr -> i64
    %57 = arith.cmpi ult, %56, %54 : i64
    scf.if %57 {
    } else {
      %121 = arith.subi %56, %54 : i64
      llvm.store %121, %55 : i64, !llvm.ptr
    }
    %c80_i8_8 = arith.constant 80 : i8
    cf.cond_br %57, ^bb1(%c80_i8_8 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    cf.br ^bb20
  ^bb15:  // pred: ^bb17
    %58 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_9 = arith.constant 1024 : i64
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %60 = arith.addi %59, %c-2_i64 : i64
    llvm.store %60, %58 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %61 = arith.cmpi ult, %59, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %61, ^bb1(%c91_i8 : i8), ^bb11
  ^bb16:  // pred: ^bb7
    %62 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %63 = llvm.load %62 : !llvm.ptr -> i64
    %c0_i64_10 = arith.constant 0 : i64
    %64 = arith.cmpi uge, %63, %c0_i64_10 : i64
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %64, ^bb17, ^bb1(%c80_i8_11 : i8)
  ^bb17:  // pred: ^bb16
    %65 = arith.subi %63, %c0_i64_10 : i64
    llvm.store %65, %62 : i64, !llvm.ptr
    cf.br ^bb15
  ^bb18:  // pred: ^bb19
    %c0_i256_12 = arith.constant 0 : i256
    %66 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %67 = llvm.load %66 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_12, %67 : i256, !llvm.ptr
    %68 = llvm.getelementptr %67[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %68, %66 : !llvm.ptr, !llvm.ptr
    cf.br ^bb24
  ^bb19:  // pred: ^bb21
    %69 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_13 = arith.constant 1024 : i64
    %70 = llvm.load %69 : !llvm.ptr -> i64
    %c1_i64_14 = arith.constant 1 : i64
    %71 = arith.addi %70, %c1_i64_14 : i64
    llvm.store %71, %69 : i64, !llvm.ptr
    %72 = arith.cmpi ult, %c1024_i64_13, %71 : i64
    %c92_i8_15 = arith.constant 92 : i8
    cf.cond_br %72, ^bb1(%c92_i8_15 : i8), ^bb18
  ^bb20:  // pred: ^bb14
    %73 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    %75 = arith.cmpi uge, %74, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %75, ^bb21, ^bb1(%c80_i8_17 : i8)
  ^bb21:  // pred: ^bb20
    %76 = arith.subi %74, %c3_i64_16 : i64
    llvm.store %76, %73 : i64, !llvm.ptr
    cf.br ^bb19
  ^bb22:  // pred: ^bb23
    %c300_i256 = arith.constant 300 : i256
    %77 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> !llvm.ptr
    llvm.store %c300_i256, %78 : i256, !llvm.ptr
    %79 = llvm.getelementptr %78[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %79, %77 : !llvm.ptr, !llvm.ptr
    cf.br ^bb31
  ^bb23:  // pred: ^bb25
    %80 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %81 = llvm.load %80 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %82 = arith.addi %81, %c1_i64_19 : i64
    llvm.store %82, %80 : i64, !llvm.ptr
    %83 = arith.cmpi ult, %c1024_i64_18, %82 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %83, ^bb1(%c92_i8_20 : i8), ^bb22
  ^bb24:  // pred: ^bb18
    %84 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c3_i64_21 = arith.constant 3 : i64
    %86 = arith.cmpi uge, %85, %c3_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %86, ^bb25, ^bb1(%c80_i8_22 : i8)
  ^bb25:  // pred: ^bb24
    %87 = arith.subi %85, %c3_i64_21 : i64
    llvm.store %87, %84 : i64, !llvm.ptr
    cf.br ^bb23
  ^bb26:  // pred: ^bb30
    %88 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> !llvm.ptr
    %90 = llvm.getelementptr %89[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %91 = llvm.load %90 : !llvm.ptr -> i256
    llvm.store %90, %88 : !llvm.ptr, !llvm.ptr
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    %94 = llvm.getelementptr %93[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %95 = llvm.load %94 : !llvm.ptr -> i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    %96 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %97 = llvm.load %96 : !llvm.ptr -> i1
    %c87_i8_23 = arith.constant 87 : i8
    cf.cond_br %97, ^bb1(%c87_i8_23 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %c1_i256_24 = arith.constant 1 : i256
    %98 = llvm.alloca %c1_i256_24 x i256 : (i256) -> !llvm.ptr
    llvm.store %91, %98 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_25 = arith.constant 1 : i256
    %99 = llvm.alloca %c1_i256_25 x i256 : (i256) -> !llvm.ptr
    llvm.store %95, %99 {alignment = 1 : i64} : i256, !llvm.ptr
    %100 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> i64
    %102 = call @dora_fn_sstore(%arg0, %98, %99, %101) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
    %103 = llvm.getelementptr %102[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %104 = llvm.load %103 : !llvm.ptr -> i8
    %c0_i8_26 = arith.constant 0 : i8
    %105 = arith.cmpi ne, %104, %c0_i8_26 : i8
    cf.cond_br %105, ^bb1(%104 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %106 = llvm.getelementptr %102[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %108 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> i64
    %110 = arith.cmpi ult, %109, %107 : i64
    scf.if %110 {
    } else {
      %121 = arith.subi %109, %107 : i64
      llvm.store %121, %108 : i64, !llvm.ptr
    }
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %110, ^bb1(%c80_i8_27 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    cf.br ^bb33
  ^bb30:  // pred: ^bb32
    %111 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_28 = arith.constant 1024 : i64
    %112 = llvm.load %111 : !llvm.ptr -> i64
    %c-2_i64_29 = arith.constant -2 : i64
    %113 = arith.addi %112, %c-2_i64_29 : i64
    llvm.store %113, %111 : i64, !llvm.ptr
    %c2_i64_30 = arith.constant 2 : i64
    %114 = arith.cmpi ult, %112, %c2_i64_30 : i64
    %c91_i8_31 = arith.constant 91 : i8
    cf.cond_br %114, ^bb1(%c91_i8_31 : i8), ^bb26
  ^bb31:  // pred: ^bb22
    %115 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %116 = llvm.load %115 : !llvm.ptr -> i64
    %c0_i64_32 = arith.constant 0 : i64
    %117 = arith.cmpi uge, %116, %c0_i64_32 : i64
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %117, ^bb32, ^bb1(%c80_i8_33 : i8)
  ^bb32:  // pred: ^bb31
    %118 = arith.subi %116, %c0_i64_32 : i64
    llvm.store %118, %115 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb29
    %c0_i64_34 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %119 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %120 = llvm.load %119 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_34, %c0_i64_34, %120, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  }
}
