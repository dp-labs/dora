---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> i64
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 28 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb12, ^bb13, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb34, ^bb35, ^bb37, ^bb38, ^bb41, ^bb44, ^bb45, ^bb47, ^bb50, ^bb51
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c7000_i256 = arith.constant 7000 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c7000_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c12288_i256 = arith.constant 12288 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c12288_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb13
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb12
    %c32_i256 = arith.constant 32 : i256
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %36 : i256, !llvm.ptr
    %37 = llvm.getelementptr %36[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb12:  // pred: ^bb14
    %38 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_7 = arith.constant 1024 : i64
    %39 = llvm.load %38 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %40 = arith.addi %39, %c1_i64_8 : i64
    llvm.store %40, %38 : i64, !llvm.ptr
    %41 = arith.cmpi ult, %c1024_i64_7, %40 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %41, ^bb1(%c92_i8_9 : i8), ^bb11
  ^bb13:  // pred: ^bb7
    %42 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %43 = llvm.load %42 : !llvm.ptr -> i64
    %c3_i64_10 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %44 = arith.cmpi uge, %43, %c3_i64_10 : i64
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %44, ^bb14, ^bb1(%c80_i8_11 : i8)
  ^bb14:  // pred: ^bb13
    %45 = arith.subi %43, %c3_i64_10 : i64
    llvm.store %45, %42 : i64, !llvm.ptr
    cf.br ^bb12
  ^bb15:  // pred: ^bb16
    %c32_i256_12 = arith.constant 32 : i256
    %46 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %47 = llvm.load %46 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_12, %47 : i256, !llvm.ptr
    %48 = llvm.getelementptr %47[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %48, %46 : !llvm.ptr, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %49 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_13 = arith.constant 1024 : i64
    %50 = llvm.load %49 : !llvm.ptr -> i64
    %c1_i64_14 = arith.constant 1 : i64
    %51 = arith.addi %50, %c1_i64_14 : i64
    llvm.store %51, %49 : i64, !llvm.ptr
    %52 = arith.cmpi ult, %c1024_i64_13, %51 : i64
    %c92_i8_15 = arith.constant 92 : i8
    cf.cond_br %52, ^bb1(%c92_i8_15 : i8), ^bb15
  ^bb17:  // pred: ^bb11
    %53 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %55 = arith.cmpi uge, %54, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %55, ^bb18, ^bb1(%c80_i8_17 : i8)
  ^bb18:  // pred: ^bb17
    %56 = arith.subi %54, %c3_i64_16 : i64
    llvm.store %56, %53 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c64_i256 = arith.constant 64 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %60 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %61 = llvm.load %60 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_19 : i64
    llvm.store %62, %60 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64_18, %62 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_20 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %64 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %c3_i64_21 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %66 = arith.cmpi uge, %65, %c3_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %66, ^bb22, ^bb1(%c80_i8_22 : i8)
  ^bb22:  // pred: ^bb21
    %67 = arith.subi %65, %c3_i64_21 : i64
    llvm.store %67, %64 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c64_i256_23 = arith.constant 64 : i256
    %68 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %69 = llvm.load %68 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256_23, %69 : i256, !llvm.ptr
    %70 = llvm.getelementptr %69[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %70, %68 : !llvm.ptr, !llvm.ptr
    cf.br ^bb38
  ^bb24:  // pred: ^bb26
    %71 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_24 = arith.constant 1024 : i64
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %73 = arith.addi %72, %c1_i64_25 : i64
    llvm.store %73, %71 : i64, !llvm.ptr
    %74 = arith.cmpi ult, %c1024_i64_24, %73 : i64
    %c92_i8_26 = arith.constant 92 : i8
    cf.cond_br %74, ^bb1(%c92_i8_26 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %75 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> i64
    %c3_i64_27 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %77 = arith.cmpi uge, %76, %c3_i64_27 : i64
    %c80_i8_28 = arith.constant 80 : i8
    cf.cond_br %77, ^bb26, ^bb1(%c80_i8_28 : i8)
  ^bb26:  // pred: ^bb25
    %78 = arith.subi %76, %c3_i64_27 : i64
    llvm.store %78, %75 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb37
    %79 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> !llvm.ptr
    %81 = llvm.getelementptr %80[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %82 = llvm.load %81 : !llvm.ptr -> i256
    llvm.store %81, %79 : !llvm.ptr, !llvm.ptr
    %83 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> !llvm.ptr
    %85 = llvm.getelementptr %84[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %86 = llvm.load %85 : !llvm.ptr -> i256
    llvm.store %85, %83 : !llvm.ptr, !llvm.ptr
    %87 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> !llvm.ptr
    %89 = llvm.getelementptr %88[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %90 = llvm.load %89 : !llvm.ptr -> i256
    llvm.store %89, %87 : !llvm.ptr, !llvm.ptr
    %91 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %92 = llvm.load %91 : !llvm.ptr -> !llvm.ptr
    %93 = llvm.getelementptr %92[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %94 = llvm.load %93 : !llvm.ptr -> i256
    llvm.store %93, %91 : !llvm.ptr, !llvm.ptr
    %95 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %96 = llvm.load %95 : !llvm.ptr -> !llvm.ptr
    %97 = llvm.getelementptr %96[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %98 = llvm.load %97 : !llvm.ptr -> i256
    llvm.store %97, %95 : !llvm.ptr, !llvm.ptr
    %99 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> !llvm.ptr
    %101 = llvm.getelementptr %100[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %102 = llvm.load %101 : !llvm.ptr -> i256
    llvm.store %101, %99 : !llvm.ptr, !llvm.ptr
    %c0_i256 = arith.constant 0 : i256
    %103 = arith.trunci %82 : i256 to i64
    %c0_i64_29 = arith.constant 0 : i64
    %104 = arith.cmpi slt, %103, %c0_i64_29 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %104, ^bb1(%c84_i8 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %105 = arith.trunci %90 : i256 to i64
    %c0_i64_30 = arith.constant 0 : i64
    %106 = arith.cmpi slt, %105, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %106, ^bb1(%c84_i8_31 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %107 = arith.trunci %94 : i256 to i64
    %c0_i64_32 = arith.constant 0 : i64
    %108 = arith.cmpi slt, %107, %c0_i64_32 : i64
    %c84_i8_33 = arith.constant 84 : i8
    cf.cond_br %108, ^bb1(%c84_i8_33 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %109 = arith.trunci %98 : i256 to i64
    %c0_i64_34 = arith.constant 0 : i64
    %110 = arith.cmpi slt, %109, %c0_i64_34 : i64
    %c84_i8_35 = arith.constant 84 : i8
    cf.cond_br %110, ^bb1(%c84_i8_35 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %111 = arith.trunci %102 : i256 to i64
    %c0_i64_36 = arith.constant 0 : i64
    %112 = arith.cmpi slt, %111, %c0_i64_36 : i64
    %c84_i8_37 = arith.constant 84 : i8
    cf.cond_br %112, ^bb1(%c84_i8_37 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i64_38 = arith.constant 0 : i64
    %113 = arith.cmpi ne, %107, %c0_i64_38 : i64
    cf.cond_br %113, ^bb41, ^bb33
  ^bb33:  // 2 preds: ^bb32, ^bb43
    %c0_i64_39 = arith.constant 0 : i64
    %114 = arith.cmpi ne, %111, %c0_i64_39 : i64
    cf.cond_br %114, ^bb47, ^bb34
  ^bb34:  // 2 preds: ^bb33, ^bb49
    %115 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %116 = llvm.load %115 : !llvm.ptr -> i64
    %c1_i256 = arith.constant 1 : i256
    %117 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256, %117 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_40 = arith.constant 1 : i256
    %118 = llvm.alloca %c1_i256_40 x i256 : (i256) -> !llvm.ptr
    llvm.store %86, %118 {alignment = 1 : i64} : i256, !llvm.ptr
    %c2_i8 = arith.constant 2 : i8
    %119 = call @dora_fn_call(%arg0, %103, %118, %117, %105, %107, %109, %111, %116, %c2_i8) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %120 = llvm.getelementptr %119[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %121 = llvm.load %120 : !llvm.ptr -> i8
    %122 = llvm.getelementptr %119[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %123 = llvm.load %122 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %124 = arith.cmpi ne, %123, %c0_i8 : i8
    cf.cond_br %124, ^bb1(%123 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %125 = llvm.getelementptr %119[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %126 = llvm.load %125 : !llvm.ptr -> i64
    %127 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %128 = llvm.load %127 : !llvm.ptr -> i64
    %129 = arith.cmpi ult, %128, %126 : i64
    scf.if %129 {
    } else {
      %206 = arith.subi %128, %126 : i64
      llvm.store %206, %127 : i64, !llvm.ptr
    }
    %c80_i8_41 = arith.constant 80 : i8
    cf.cond_br %129, ^bb1(%c80_i8_41 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %130 = arith.extui %121 : i8 to i256
    %131 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %132 = llvm.load %131 : !llvm.ptr -> !llvm.ptr
    llvm.store %130, %132 : i256, !llvm.ptr
    %133 = llvm.getelementptr %132[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %133, %131 : !llvm.ptr, !llvm.ptr
    cf.br ^bb40
  ^bb37:  // pred: ^bb39
    %134 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %135 = llvm.load %134 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %136 = arith.addi %135, %c-5_i64 : i64
    llvm.store %136, %134 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %137 = arith.cmpi ult, %135, %c6_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %137, ^bb1(%c91_i8 : i8), ^bb27
  ^bb38:  // pred: ^bb23
    %138 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %139 = llvm.load %138 : !llvm.ptr -> i64
    %c0_i64_43 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %140 = arith.cmpi uge, %139, %c0_i64_43 : i64
    %c80_i8_44 = arith.constant 80 : i8
    cf.cond_br %140, ^bb39, ^bb1(%c80_i8_44 : i8)
  ^bb39:  // pred: ^bb38
    %141 = arith.subi %139, %c0_i64_43 : i64
    llvm.store %141, %138 : i64, !llvm.ptr
    cf.br ^bb37
  ^bb40:  // pred: ^bb36
    %c0_i64_45 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %142 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_45, %c0_i64_45, %143, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb41:  // pred: ^bb32
    %144 = arith.addi %105, %107 : i64
    %c0_i64_46 = arith.constant 0 : i64
    %145 = arith.cmpi slt, %144, %c0_i64_46 : i64
    %c84_i8_47 = arith.constant 84 : i8
    cf.cond_br %145, ^bb1(%c84_i8_47 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c31_i64 = arith.constant 31 : i64
    %c32_i64 = arith.constant 32 : i64
    %146 = arith.addi %144, %c31_i64 : i64
    %147 = arith.divui %146, %c32_i64 : i64
    %c32_i64_48 = arith.constant 32 : i64
    %148 = arith.muli %147, %c32_i64_48 : i64
    %149 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> i64
    %c31_i64_49 = arith.constant 31 : i64
    %c32_i64_50 = arith.constant 32 : i64
    %151 = arith.addi %150, %c31_i64_49 : i64
    %152 = arith.divui %151, %c32_i64_50 : i64
    %153 = arith.muli %152, %c32_i64_48 : i64
    %154 = arith.cmpi ult, %153, %148 : i64
    cf.cond_br %154, ^bb44, ^bb43
  ^bb43:  // 2 preds: ^bb42, ^bb46
    cf.br ^bb33
  ^bb44:  // pred: ^bb42
    %c3_i64_51 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %155 = arith.muli %152, %152 : i64
    %156 = arith.divui %155, %c512_i64 : i64
    %157 = arith.muli %152, %c3_i64_51 : i64
    %158 = arith.addi %156, %157 : i64
    %c3_i64_52 = arith.constant 3 : i64
    %c512_i64_53 = arith.constant 512 : i64
    %159 = arith.muli %147, %147 : i64
    %160 = arith.divui %159, %c512_i64_53 : i64
    %161 = arith.muli %147, %c3_i64_52 : i64
    %162 = arith.addi %160, %161 : i64
    %163 = arith.subi %162, %158 : i64
    %164 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %165 = llvm.load %164 : !llvm.ptr -> i64
    %166 = arith.cmpi ult, %165, %163 : i64
    scf.if %166 {
    } else {
      %206 = arith.subi %165, %163 : i64
      llvm.store %206, %164 : i64, !llvm.ptr
    }
    %c80_i8_54 = arith.constant 80 : i8
    cf.cond_br %166, ^bb1(%c80_i8_54 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %167 = call @dora_fn_extend_memory(%arg0, %148) : (!llvm.ptr, i64) -> !llvm.ptr
    %168 = llvm.getelementptr %167[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %169 = llvm.load %168 : !llvm.ptr -> !llvm.ptr
    %170 = llvm.getelementptr %167[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %171 = llvm.load %170 : !llvm.ptr -> i8
    %c0_i8_55 = arith.constant 0 : i8
    %172 = arith.cmpi ne, %171, %c0_i8_55 : i8
    cf.cond_br %172, ^bb1(%171 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %173 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %169, %173 : !llvm.ptr, !llvm.ptr
    %174 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %148, %174 : i64, !llvm.ptr
    cf.br ^bb43
  ^bb47:  // pred: ^bb33
    %175 = arith.addi %109, %111 : i64
    %c0_i64_56 = arith.constant 0 : i64
    %176 = arith.cmpi slt, %175, %c0_i64_56 : i64
    %c84_i8_57 = arith.constant 84 : i8
    cf.cond_br %176, ^bb1(%c84_i8_57 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %c31_i64_58 = arith.constant 31 : i64
    %c32_i64_59 = arith.constant 32 : i64
    %177 = arith.addi %175, %c31_i64_58 : i64
    %178 = arith.divui %177, %c32_i64_59 : i64
    %c32_i64_60 = arith.constant 32 : i64
    %179 = arith.muli %178, %c32_i64_60 : i64
    %180 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %181 = llvm.load %180 : !llvm.ptr -> i64
    %c31_i64_61 = arith.constant 31 : i64
    %c32_i64_62 = arith.constant 32 : i64
    %182 = arith.addi %181, %c31_i64_61 : i64
    %183 = arith.divui %182, %c32_i64_62 : i64
    %184 = arith.muli %183, %c32_i64_60 : i64
    %185 = arith.cmpi ult, %184, %179 : i64
    cf.cond_br %185, ^bb50, ^bb49
  ^bb49:  // 2 preds: ^bb48, ^bb52
    cf.br ^bb34
  ^bb50:  // pred: ^bb48
    %c3_i64_63 = arith.constant 3 : i64
    %c512_i64_64 = arith.constant 512 : i64
    %186 = arith.muli %183, %183 : i64
    %187 = arith.divui %186, %c512_i64_64 : i64
    %188 = arith.muli %183, %c3_i64_63 : i64
    %189 = arith.addi %187, %188 : i64
    %c3_i64_65 = arith.constant 3 : i64
    %c512_i64_66 = arith.constant 512 : i64
    %190 = arith.muli %178, %178 : i64
    %191 = arith.divui %190, %c512_i64_66 : i64
    %192 = arith.muli %178, %c3_i64_65 : i64
    %193 = arith.addi %191, %192 : i64
    %194 = arith.subi %193, %189 : i64
    %195 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %196 = llvm.load %195 : !llvm.ptr -> i64
    %197 = arith.cmpi ult, %196, %194 : i64
    scf.if %197 {
    } else {
      %206 = arith.subi %196, %194 : i64
      llvm.store %206, %195 : i64, !llvm.ptr
    }
    %c80_i8_67 = arith.constant 80 : i8
    cf.cond_br %197, ^bb1(%c80_i8_67 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %198 = call @dora_fn_extend_memory(%arg0, %179) : (!llvm.ptr, i64) -> !llvm.ptr
    %199 = llvm.getelementptr %198[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %200 = llvm.load %199 : !llvm.ptr -> !llvm.ptr
    %201 = llvm.getelementptr %198[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %202 = llvm.load %201 : !llvm.ptr -> i8
    %c0_i8_68 = arith.constant 0 : i8
    %203 = arith.cmpi ne, %202, %c0_i8_68 : i8
    cf.cond_br %203, ^bb1(%202 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %204 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %200, %204 : !llvm.ptr, !llvm.ptr
    %205 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %179, %205 : i64, !llvm.ptr
    cf.br ^bb49
  }
}
