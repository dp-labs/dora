---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    %1 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %2 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %1, %2 : !llvm.ptr, !llvm.ptr
    %3 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %4 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %3, %4 : i64, !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %5 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%6: i8):  // 33 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb12, ^bb13, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb28, ^bb29, ^bb31, ^bb32, ^bb34, ^bb35, ^bb37, ^bb38, ^bb40, ^bb41, ^bb44, ^bb45, ^bb46, ^bb49, ^bb50, ^bb52, ^bb53, ^bb54, ^bb57, ^bb58
    %c0_i64_0 = arith.constant 0 : i64
    %7 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %8 = llvm.load %7 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %8, %6) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %6 : i8
  ^bb2(%9: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %9 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c5000_i256 = arith.constant 5000 : i256
    %10 = llvm.load %arg3 : !llvm.ptr -> i64
    %11 = llvm.getelementptr %arg2[%10] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %12 = arith.addi %10, %c1_i64 : i64
    llvm.store %12, %arg3 : i64, !llvm.ptr
    llvm.store %c5000_i256, %11 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %13 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %14 = arith.addi %13, %c1_i64_1 : i64
    %15 = arith.cmpi ult, %c1024_i64, %14 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %15, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %16 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %18 = arith.cmpi uge, %17, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %18, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %19 = arith.subi %17, %c3_i64 : i64
    llvm.store %19, %16 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c8192_i256 = arith.constant 8192 : i256
    %20 = llvm.load %arg3 : !llvm.ptr -> i64
    %21 = llvm.getelementptr %arg2[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %22 = arith.addi %20, %c1_i64_2 : i64
    llvm.store %22, %arg3 : i64, !llvm.ptr
    llvm.store %c8192_i256, %21 : i256, !llvm.ptr
    cf.br ^bb13
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %23 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %24 = arith.addi %23, %c1_i64_4 : i64
    %25 = arith.cmpi ult, %c1024_i64_3, %24 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %25, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %26 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %27 = llvm.load %26 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %28 = arith.cmpi uge, %27, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %28, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %29 = arith.subi %27, %c3_i64_6 : i64
    llvm.store %29, %26 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb12
    %c0_i256 = arith.constant 0 : i256
    %30 = llvm.load %arg3 : !llvm.ptr -> i64
    %31 = llvm.getelementptr %arg2[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_8 = arith.constant 1 : i64
    %32 = arith.addi %30, %c1_i64_8 : i64
    llvm.store %32, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %31 : i256, !llvm.ptr
    cf.br ^bb17
  ^bb12:  // pred: ^bb14
    %c1024_i64_9 = arith.constant 1024 : i64
    %33 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %34 = arith.addi %33, %c1_i64_10 : i64
    %35 = arith.cmpi ult, %c1024_i64_9, %34 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %35, ^bb1(%c92_i8_11 : i8), ^bb11
  ^bb13:  // pred: ^bb7
    %36 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %38 = arith.cmpi uge, %37, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %38, ^bb14, ^bb1(%c80_i8_13 : i8)
  ^bb14:  // pred: ^bb13
    %39 = arith.subi %37, %c3_i64_12 : i64
    llvm.store %39, %36 : i64, !llvm.ptr
    cf.br ^bb12
  ^bb15:  // pred: ^bb16
    %c32_i256 = arith.constant 32 : i256
    %40 = llvm.load %arg3 : !llvm.ptr -> i64
    %41 = llvm.getelementptr %arg2[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_14 = arith.constant 1 : i64
    %42 = arith.addi %40, %c1_i64_14 : i64
    llvm.store %42, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256, %41 : i256, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %c1024_i64_15 = arith.constant 1024 : i64
    %43 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_16 = arith.constant 1 : i64
    %44 = arith.addi %43, %c1_i64_16 : i64
    %45 = arith.cmpi ult, %c1024_i64_15, %44 : i64
    %c92_i8_17 = arith.constant 92 : i8
    cf.cond_br %45, ^bb1(%c92_i8_17 : i8), ^bb15
  ^bb17:  // pred: ^bb11
    %46 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %47 = llvm.load %46 : !llvm.ptr -> i64
    %c3_i64_18 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %48 = arith.cmpi uge, %47, %c3_i64_18 : i64
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %48, ^bb18, ^bb1(%c80_i8_19 : i8)
  ^bb18:  // pred: ^bb17
    %49 = arith.subi %47, %c3_i64_18 : i64
    llvm.store %49, %46 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c32_i256_20 = arith.constant 32 : i256
    %50 = llvm.load %arg3 : !llvm.ptr -> i64
    %51 = llvm.getelementptr %arg2[%50] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_21 = arith.constant 1 : i64
    %52 = arith.addi %50, %c1_i64_21 : i64
    llvm.store %52, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256_20, %51 : i256, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %c1024_i64_22 = arith.constant 1024 : i64
    %53 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %54 = arith.addi %53, %c1_i64_23 : i64
    %55 = arith.cmpi ult, %c1024_i64_22, %54 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %55, ^bb1(%c92_i8_24 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %56 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %57 = llvm.load %56 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %58 = arith.cmpi uge, %57, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %58, ^bb22, ^bb1(%c80_i8_26 : i8)
  ^bb22:  // pred: ^bb21
    %59 = arith.subi %57, %c3_i64_25 : i64
    llvm.store %59, %56 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c64_i256 = arith.constant 64 : i256
    %60 = llvm.load %arg3 : !llvm.ptr -> i64
    %61 = llvm.getelementptr %arg2[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_27 = arith.constant 1 : i64
    %62 = arith.addi %60, %c1_i64_27 : i64
    llvm.store %62, %arg3 : i64, !llvm.ptr
    llvm.store %c64_i256, %61 : i256, !llvm.ptr
    cf.br ^bb29
  ^bb24:  // pred: ^bb26
    %c1024_i64_28 = arith.constant 1024 : i64
    %63 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_29 = arith.constant 1 : i64
    %64 = arith.addi %63, %c1_i64_29 : i64
    %65 = arith.cmpi ult, %c1024_i64_28, %64 : i64
    %c92_i8_30 = arith.constant 92 : i8
    cf.cond_br %65, ^bb1(%c92_i8_30 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %66 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %67 = llvm.load %66 : !llvm.ptr -> i64
    %c3_i64_31 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %68 = arith.cmpi uge, %67, %c3_i64_31 : i64
    %c80_i8_32 = arith.constant 80 : i8
    cf.cond_br %68, ^bb26, ^bb1(%c80_i8_32 : i8)
  ^bb26:  // pred: ^bb25
    %69 = arith.subi %67, %c3_i64_31 : i64
    llvm.store %69, %66 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb28
    %c64_i256_33 = arith.constant 64 : i256
    %70 = llvm.load %arg3 : !llvm.ptr -> i64
    %71 = llvm.getelementptr %arg2[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_34 = arith.constant 1 : i64
    %72 = arith.addi %70, %c1_i64_34 : i64
    llvm.store %72, %arg3 : i64, !llvm.ptr
    llvm.store %c64_i256_33, %71 : i256, !llvm.ptr
    cf.br ^bb41
  ^bb28:  // pred: ^bb30
    %c1024_i64_35 = arith.constant 1024 : i64
    %73 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_36 = arith.constant 1 : i64
    %74 = arith.addi %73, %c1_i64_36 : i64
    %75 = arith.cmpi ult, %c1024_i64_35, %74 : i64
    %c92_i8_37 = arith.constant 92 : i8
    cf.cond_br %75, ^bb1(%c92_i8_37 : i8), ^bb27
  ^bb29:  // pred: ^bb23
    %76 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %77 = llvm.load %76 : !llvm.ptr -> i64
    %c3_i64_38 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %78 = arith.cmpi uge, %77, %c3_i64_38 : i64
    %c80_i8_39 = arith.constant 80 : i8
    cf.cond_br %78, ^bb30, ^bb1(%c80_i8_39 : i8)
  ^bb30:  // pred: ^bb29
    %79 = arith.subi %77, %c3_i64_38 : i64
    llvm.store %79, %76 : i64, !llvm.ptr
    cf.br ^bb28
  ^bb31:  // pred: ^bb40
    %80 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %81 = arith.subi %80, %c1_i64_40 : i64
    %82 = llvm.getelementptr %arg2[%81] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %81, %arg3 : i64, !llvm.ptr
    %83 = llvm.load %82 : !llvm.ptr -> i256
    %84 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_41 = arith.constant 1 : i64
    %85 = arith.subi %84, %c1_i64_41 : i64
    %86 = llvm.getelementptr %arg2[%85] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %85, %arg3 : i64, !llvm.ptr
    %87 = llvm.load %86 : !llvm.ptr -> i256
    %88 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_42 = arith.constant 1 : i64
    %89 = arith.subi %88, %c1_i64_42 : i64
    %90 = llvm.getelementptr %arg2[%89] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %89, %arg3 : i64, !llvm.ptr
    %91 = llvm.load %90 : !llvm.ptr -> i256
    %92 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %93 = arith.subi %92, %c1_i64_43 : i64
    %94 = llvm.getelementptr %arg2[%93] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %93, %arg3 : i64, !llvm.ptr
    %95 = llvm.load %94 : !llvm.ptr -> i256
    %96 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_44 = arith.constant 1 : i64
    %97 = arith.subi %96, %c1_i64_44 : i64
    %98 = llvm.getelementptr %arg2[%97] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %97, %arg3 : i64, !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> i256
    %100 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_45 = arith.constant 1 : i64
    %101 = arith.subi %100, %c1_i64_45 : i64
    %102 = llvm.getelementptr %arg2[%101] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %101, %arg3 : i64, !llvm.ptr
    %103 = llvm.load %102 : !llvm.ptr -> i256
    %104 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %105 = arith.subi %104, %c1_i64_46 : i64
    %106 = llvm.getelementptr %arg2[%105] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %105, %arg3 : i64, !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> i256
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %108 = arith.cmpi sgt, %99, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %108, ^bb1(%c84_i8 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %109 = arith.trunci %99 : i256 to i64
    %c0_i64_47 = arith.constant 0 : i64
    %110 = arith.cmpi slt, %109, %c0_i64_47 : i64
    %c84_i8_48 = arith.constant 84 : i8
    cf.cond_br %110, ^bb1(%c84_i8_48 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c0_i64_49 = arith.constant 0 : i64
    %111 = arith.cmpi ne, %109, %c0_i64_49 : i64
    cf.cond_br %111, ^bb44, ^bb34
  ^bb34:  // 2 preds: ^bb33, ^bb48
    %c18446744073709551615_i256_50 = arith.constant 18446744073709551615 : i256
    %112 = arith.cmpi sgt, %107, %c18446744073709551615_i256_50 : i256
    %c84_i8_51 = arith.constant 84 : i8
    cf.cond_br %112, ^bb1(%c84_i8_51 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %113 = arith.trunci %107 : i256 to i64
    %c0_i64_52 = arith.constant 0 : i64
    %114 = arith.cmpi slt, %113, %c0_i64_52 : i64
    %c84_i8_53 = arith.constant 84 : i8
    cf.cond_br %114, ^bb1(%c84_i8_53 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %c0_i64_54 = arith.constant 0 : i64
    %115 = arith.cmpi ne, %113, %c0_i64_54 : i64
    cf.cond_br %115, ^bb52, ^bb37
  ^bb37:  // 2 preds: ^bb36, ^bb56
    %116 = arith.trunci %95 : i256 to i64
    %117 = arith.trunci %103 : i256 to i64
    %118 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c1_i256 = arith.constant 1 : i256
    %120 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %91, %120 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_55 = arith.constant 1 : i256
    %121 = llvm.alloca %c1_i256_55 x i256 : (i256) -> !llvm.ptr
    llvm.store %83, %121 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_56 = arith.constant 1 : i256
    %122 = llvm.alloca %c1_i256_56 x i256 : (i256) -> !llvm.ptr
    llvm.store %87, %122 {alignment = 1 : i64} : i256, !llvm.ptr
    %c3_i8 = arith.constant 3 : i8
    %123 = call @dora_fn_call(%arg0, %121, %122, %120, %116, %109, %117, %113, %119, %c3_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %124 = llvm.getelementptr %123[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %125 = llvm.load %124 : !llvm.ptr -> i8
    %126 = llvm.getelementptr %123[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %127 = llvm.load %126 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %128 = arith.cmpi ne, %127, %c0_i8 : i8
    cf.cond_br %128, ^bb1(%127 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %129 = llvm.getelementptr %123[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %130 = llvm.load %129 : !llvm.ptr -> i64
    %131 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %132 = llvm.load %131 : !llvm.ptr -> i64
    %133 = arith.cmpi ult, %132, %130 : i64
    scf.if %133 {
    } else {
      %215 = arith.subi %132, %130 : i64
      llvm.store %215, %131 : i64, !llvm.ptr
    }
    %c80_i8_57 = arith.constant 80 : i8
    cf.cond_br %133, ^bb1(%c80_i8_57 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %134 = arith.extui %125 : i8 to i256
    %135 = llvm.load %arg3 : !llvm.ptr -> i64
    %136 = llvm.getelementptr %arg2[%135] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_58 = arith.constant 1 : i64
    %137 = arith.addi %135, %c1_i64_58 : i64
    llvm.store %137, %arg3 : i64, !llvm.ptr
    llvm.store %134, %136 : i256, !llvm.ptr
    cf.br ^bb43
  ^bb40:  // pred: ^bb42
    %c1024_i64_59 = arith.constant 1024 : i64
    %138 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %139 = arith.addi %138, %c-6_i64 : i64
    %c7_i64 = arith.constant 7 : i64
    %140 = arith.cmpi ult, %138, %c7_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %140, ^bb1(%c91_i8 : i8), ^bb31
  ^bb41:  // pred: ^bb27
    %141 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %142 = llvm.load %141 : !llvm.ptr -> i64
    %c0_i64_60 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %143 = arith.cmpi uge, %142, %c0_i64_60 : i64
    %c80_i8_61 = arith.constant 80 : i8
    cf.cond_br %143, ^bb42, ^bb1(%c80_i8_61 : i8)
  ^bb42:  // pred: ^bb41
    %144 = arith.subi %142, %c0_i64_60 : i64
    llvm.store %144, %141 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb39
    %c0_i64_62 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %145 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_62, %c0_i64_62, %146, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb44:  // pred: ^bb33
    %c18446744073709551615_i256_63 = arith.constant 18446744073709551615 : i256
    %147 = arith.cmpi sgt, %95, %c18446744073709551615_i256_63 : i256
    %c84_i8_64 = arith.constant 84 : i8
    cf.cond_br %147, ^bb1(%c84_i8_64 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %148 = arith.trunci %95 : i256 to i64
    %c0_i64_65 = arith.constant 0 : i64
    %149 = arith.cmpi slt, %148, %c0_i64_65 : i64
    %c84_i8_66 = arith.constant 84 : i8
    cf.cond_br %149, ^bb1(%c84_i8_66 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %150 = arith.addi %148, %109 : i64
    %c0_i64_67 = arith.constant 0 : i64
    %151 = arith.cmpi slt, %150, %c0_i64_67 : i64
    %c84_i8_68 = arith.constant 84 : i8
    cf.cond_br %151, ^bb1(%c84_i8_68 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %c31_i64 = arith.constant 31 : i64
    %c32_i64 = arith.constant 32 : i64
    %152 = arith.addi %150, %c31_i64 : i64
    %153 = arith.divui %152, %c32_i64 : i64
    %c32_i64_69 = arith.constant 32 : i64
    %154 = arith.muli %153, %c32_i64_69 : i64
    %155 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %156 = llvm.load %155 : !llvm.ptr -> i64
    %c31_i64_70 = arith.constant 31 : i64
    %c32_i64_71 = arith.constant 32 : i64
    %157 = arith.addi %156, %c31_i64_70 : i64
    %158 = arith.divui %157, %c32_i64_71 : i64
    %159 = arith.muli %158, %c32_i64_69 : i64
    %160 = arith.cmpi ult, %159, %154 : i64
    cf.cond_br %160, ^bb49, ^bb48
  ^bb48:  // 2 preds: ^bb47, ^bb51
    cf.br ^bb34
  ^bb49:  // pred: ^bb47
    %c3_i64_72 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %161 = arith.muli %158, %158 : i64
    %162 = arith.divui %161, %c512_i64 : i64
    %163 = arith.muli %158, %c3_i64_72 : i64
    %164 = arith.addi %162, %163 : i64
    %c3_i64_73 = arith.constant 3 : i64
    %c512_i64_74 = arith.constant 512 : i64
    %165 = arith.muli %153, %153 : i64
    %166 = arith.divui %165, %c512_i64_74 : i64
    %167 = arith.muli %153, %c3_i64_73 : i64
    %168 = arith.addi %166, %167 : i64
    %169 = arith.subi %168, %164 : i64
    %170 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> i64
    %172 = arith.cmpi ult, %171, %169 : i64
    scf.if %172 {
    } else {
      %215 = arith.subi %171, %169 : i64
      llvm.store %215, %170 : i64, !llvm.ptr
    }
    %c80_i8_75 = arith.constant 80 : i8
    cf.cond_br %172, ^bb1(%c80_i8_75 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %173 = call @dora_fn_extend_memory(%arg0, %154) : (!llvm.ptr, i64) -> !llvm.ptr
    %174 = llvm.getelementptr %173[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %175 = llvm.load %174 : !llvm.ptr -> !llvm.ptr
    %176 = llvm.getelementptr %173[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %177 = llvm.load %176 : !llvm.ptr -> i8
    %c0_i8_76 = arith.constant 0 : i8
    %178 = arith.cmpi ne, %177, %c0_i8_76 : i8
    cf.cond_br %178, ^bb1(%177 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %179 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %175, %179 : !llvm.ptr, !llvm.ptr
    %180 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %154, %180 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb52:  // pred: ^bb36
    %c18446744073709551615_i256_77 = arith.constant 18446744073709551615 : i256
    %181 = arith.cmpi sgt, %103, %c18446744073709551615_i256_77 : i256
    %c84_i8_78 = arith.constant 84 : i8
    cf.cond_br %181, ^bb1(%c84_i8_78 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %182 = arith.trunci %103 : i256 to i64
    %c0_i64_79 = arith.constant 0 : i64
    %183 = arith.cmpi slt, %182, %c0_i64_79 : i64
    %c84_i8_80 = arith.constant 84 : i8
    cf.cond_br %183, ^bb1(%c84_i8_80 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %184 = arith.addi %182, %113 : i64
    %c0_i64_81 = arith.constant 0 : i64
    %185 = arith.cmpi slt, %184, %c0_i64_81 : i64
    %c84_i8_82 = arith.constant 84 : i8
    cf.cond_br %185, ^bb1(%c84_i8_82 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %c31_i64_83 = arith.constant 31 : i64
    %c32_i64_84 = arith.constant 32 : i64
    %186 = arith.addi %184, %c31_i64_83 : i64
    %187 = arith.divui %186, %c32_i64_84 : i64
    %c32_i64_85 = arith.constant 32 : i64
    %188 = arith.muli %187, %c32_i64_85 : i64
    %189 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> i64
    %c31_i64_86 = arith.constant 31 : i64
    %c32_i64_87 = arith.constant 32 : i64
    %191 = arith.addi %190, %c31_i64_86 : i64
    %192 = arith.divui %191, %c32_i64_87 : i64
    %193 = arith.muli %192, %c32_i64_85 : i64
    %194 = arith.cmpi ult, %193, %188 : i64
    cf.cond_br %194, ^bb57, ^bb56
  ^bb56:  // 2 preds: ^bb55, ^bb59
    cf.br ^bb37
  ^bb57:  // pred: ^bb55
    %c3_i64_88 = arith.constant 3 : i64
    %c512_i64_89 = arith.constant 512 : i64
    %195 = arith.muli %192, %192 : i64
    %196 = arith.divui %195, %c512_i64_89 : i64
    %197 = arith.muli %192, %c3_i64_88 : i64
    %198 = arith.addi %196, %197 : i64
    %c3_i64_90 = arith.constant 3 : i64
    %c512_i64_91 = arith.constant 512 : i64
    %199 = arith.muli %187, %187 : i64
    %200 = arith.divui %199, %c512_i64_91 : i64
    %201 = arith.muli %187, %c3_i64_90 : i64
    %202 = arith.addi %200, %201 : i64
    %203 = arith.subi %202, %198 : i64
    %204 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> i64
    %206 = arith.cmpi ult, %205, %203 : i64
    scf.if %206 {
    } else {
      %215 = arith.subi %205, %203 : i64
      llvm.store %215, %204 : i64, !llvm.ptr
    }
    %c80_i8_92 = arith.constant 80 : i8
    cf.cond_br %206, ^bb1(%c80_i8_92 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %207 = call @dora_fn_extend_memory(%arg0, %188) : (!llvm.ptr, i64) -> !llvm.ptr
    %208 = llvm.getelementptr %207[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %209 = llvm.load %208 : !llvm.ptr -> !llvm.ptr
    %210 = llvm.getelementptr %207[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %211 = llvm.load %210 : !llvm.ptr -> i8
    %c0_i8_93 = arith.constant 0 : i8
    %212 = arith.cmpi ne, %211, %c0_i8_93 : i8
    cf.cond_br %212, ^bb1(%211 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %213 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %209, %213 : !llvm.ptr, !llvm.ptr
    %214 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %188, %214 : i64, !llvm.ptr
    cf.br ^bb56
  }
}
