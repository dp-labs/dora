---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 22 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb12, ^bb13, ^bb15, ^bb16, ^bb17, ^bb19, ^bb20, ^bb21, ^bb23, ^bb24, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb34, ^bb35
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c0_i256 = arith.constant 0 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256_2 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_2, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb13
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_3 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_4 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_3, %29 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_6 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb12
    %c0_i256_8 = arith.constant 0 : i256
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_8, %36 : i256, !llvm.ptr
    %37 = llvm.getelementptr %36[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    cf.br ^bb24
  ^bb12:  // pred: ^bb14
    %38 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_9 = arith.constant 1024 : i64
    %39 = llvm.load %38 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %40 = arith.addi %39, %c1_i64_10 : i64
    llvm.store %40, %38 : i64, !llvm.ptr
    %41 = arith.cmpi ult, %c1024_i64_9, %40 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %41, ^bb1(%c92_i8_11 : i8), ^bb11
  ^bb13:  // pred: ^bb7
    %42 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %43 = llvm.load %42 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %44 = arith.cmpi uge, %43, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %44, ^bb14, ^bb1(%c80_i8_13 : i8)
  ^bb14:  // pred: ^bb13
    %45 = arith.subi %43, %c3_i64_12 : i64
    llvm.store %45, %42 : i64, !llvm.ptr
    cf.br ^bb12
  ^bb15:  // pred: ^bb23
    %46 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %47 = llvm.load %46 : !llvm.ptr -> !llvm.ptr
    %48 = llvm.getelementptr %47[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %49 = llvm.load %48 : !llvm.ptr -> i256
    llvm.store %48, %46 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %51 = llvm.load %50 : !llvm.ptr -> !llvm.ptr
    %52 = llvm.getelementptr %51[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %53 = llvm.load %52 : !llvm.ptr -> i256
    llvm.store %52, %50 : !llvm.ptr, !llvm.ptr
    %54 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %55 = llvm.load %54 : !llvm.ptr -> !llvm.ptr
    %56 = llvm.getelementptr %55[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %57 = llvm.load %56 : !llvm.ptr -> i256
    llvm.store %56, %54 : !llvm.ptr, !llvm.ptr
    %58 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %59 = arith.cmpi ne, %58, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %59, ^bb1(%c87_i8 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %60 = arith.cmpi sgt, %57, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %60, ^bb1(%c84_i8 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %61 = arith.trunci %57 : i256 to i64
    %c0_i64_14 = arith.constant 0 : i64
    %62 = arith.cmpi slt, %61, %c0_i64_14 : i64
    %c84_i8_15 = arith.constant 84 : i8
    cf.cond_br %62, ^bb1(%c84_i8_15 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %c0_i64_16 = arith.constant 0 : i64
    %63 = arith.cmpi ne, %61, %c0_i64_16 : i64
    cf.cond_br %63, ^bb27, ^bb19
  ^bb19:  // 2 preds: ^bb18, ^bb33
    %c32000_i64 = arith.constant 32000 : i64
    %64 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %66 = arith.cmpi ult, %65, %c32000_i64 : i64
    scf.if %66 {
    } else {
      %135 = arith.subi %65, %c32000_i64 : i64
      llvm.store %135, %64 : i64, !llvm.ptr
    }
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %66, ^bb1(%c80_i8_17 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %c1_i256 = arith.constant 1 : i256
    %67 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %49, %67 {alignment = 1 : i64} : i256, !llvm.ptr
    %68 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %69 = llvm.load %68 : !llvm.ptr -> i64
    %70 = arith.trunci %53 : i256 to i64
    %71 = call @dora_fn_create(%arg0, %61, %70, %67, %69) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %72 = llvm.getelementptr %71[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %73 = llvm.load %72 : !llvm.ptr -> i8
    %c0_i8_18 = arith.constant 0 : i8
    %74 = arith.cmpi ne, %73, %c0_i8_18 : i8
    cf.cond_br %74, ^bb1(%73 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %75 = llvm.getelementptr %71[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %76 = llvm.load %75 : !llvm.ptr -> i64
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %79 = arith.cmpi ult, %78, %76 : i64
    scf.if %79 {
    } else {
      %135 = arith.subi %78, %76 : i64
      llvm.store %135, %77 : i64, !llvm.ptr
    }
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %79, ^bb1(%c80_i8_19 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %80 = llvm.load %67 : !llvm.ptr -> i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %80, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb23:  // pred: ^bb25
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_20 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %86 = arith.addi %85, %c-2_i64 : i64
    %c3_i64_21 = arith.constant 3 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %85, %c3_i64_21 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %87, ^bb1(%c91_i8 : i8), ^bb15
  ^bb24:  // pred: ^bb11
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c0_i64_22 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %90 = arith.cmpi uge, %89, %c0_i64_22 : i64
    %c80_i8_23 = arith.constant 80 : i8
    cf.cond_br %90, ^bb25, ^bb1(%c80_i8_23 : i8)
  ^bb25:  // pred: ^bb24
    %91 = arith.subi %89, %c0_i64_22 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb23
  ^bb26:  // pred: ^bb22
    %c0_i64_24 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %92 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_24, %c0_i64_24, %93, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb27:  // pred: ^bb18
    %c49152_i64 = arith.constant 49152 : i64
    %94 = arith.cmpi ugt, %61, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %94, ^bb1(%c100_i8 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c31_i64 = arith.constant 31 : i64
    %c32_i64 = arith.constant 32 : i64
    %95 = arith.addi %61, %c31_i64 : i64
    %96 = arith.divui %95, %c32_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %97 = arith.muli %96, %c2_i64 : i64
    %98 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> i64
    %100 = arith.cmpi ult, %99, %97 : i64
    scf.if %100 {
    } else {
      %135 = arith.subi %99, %97 : i64
      llvm.store %135, %98 : i64, !llvm.ptr
    }
    %c80_i8_25 = arith.constant 80 : i8
    cf.cond_br %100, ^bb1(%c80_i8_25 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c18446744073709551615_i256_26 = arith.constant 18446744073709551615 : i256
    %101 = arith.cmpi sgt, %53, %c18446744073709551615_i256_26 : i256
    %c84_i8_27 = arith.constant 84 : i8
    cf.cond_br %101, ^bb1(%c84_i8_27 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %102 = arith.trunci %53 : i256 to i64
    %c0_i64_28 = arith.constant 0 : i64
    %103 = arith.cmpi slt, %102, %c0_i64_28 : i64
    %c84_i8_29 = arith.constant 84 : i8
    cf.cond_br %103, ^bb1(%c84_i8_29 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %104 = arith.addi %102, %61 : i64
    %c0_i64_30 = arith.constant 0 : i64
    %105 = arith.cmpi slt, %104, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %105, ^bb1(%c84_i8_31 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c31_i64_32 = arith.constant 31 : i64
    %c32_i64_33 = arith.constant 32 : i64
    %106 = arith.addi %104, %c31_i64_32 : i64
    %107 = arith.divui %106, %c32_i64_33 : i64
    %c32_i64_34 = arith.constant 32 : i64
    %108 = arith.muli %107, %c32_i64_34 : i64
    %109 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %110 = llvm.load %109 : !llvm.ptr -> i64
    %c31_i64_35 = arith.constant 31 : i64
    %c32_i64_36 = arith.constant 32 : i64
    %111 = arith.addi %110, %c31_i64_35 : i64
    %112 = arith.divui %111, %c32_i64_36 : i64
    %113 = arith.muli %112, %c32_i64_34 : i64
    %114 = arith.cmpi ult, %113, %108 : i64
    cf.cond_br %114, ^bb34, ^bb33
  ^bb33:  // 2 preds: ^bb32, ^bb36
    cf.br ^bb19
  ^bb34:  // pred: ^bb32
    %c3_i64_37 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %115 = arith.muli %112, %112 : i64
    %116 = arith.divui %115, %c512_i64 : i64
    %117 = arith.muli %112, %c3_i64_37 : i64
    %118 = arith.addi %116, %117 : i64
    %c3_i64_38 = arith.constant 3 : i64
    %c512_i64_39 = arith.constant 512 : i64
    %119 = arith.muli %107, %107 : i64
    %120 = arith.divui %119, %c512_i64_39 : i64
    %121 = arith.muli %107, %c3_i64_38 : i64
    %122 = arith.addi %120, %121 : i64
    %123 = arith.subi %122, %118 : i64
    %124 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %125 = llvm.load %124 : !llvm.ptr -> i64
    %126 = arith.cmpi ult, %125, %123 : i64
    scf.if %126 {
    } else {
      %135 = arith.subi %125, %123 : i64
      llvm.store %135, %124 : i64, !llvm.ptr
    }
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %126, ^bb1(%c80_i8_40 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %127 = call @dora_fn_extend_memory(%arg0, %108) : (!llvm.ptr, i64) -> !llvm.ptr
    %128 = llvm.getelementptr %127[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %129 = llvm.load %128 : !llvm.ptr -> !llvm.ptr
    %130 = llvm.getelementptr %127[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %131 = llvm.load %130 : !llvm.ptr -> i8
    %c0_i8_41 = arith.constant 0 : i8
    %132 = arith.cmpi ne, %131, %c0_i8_41 : i8
    cf.cond_br %132, ^bb1(%131 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %133 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %129, %133 : !llvm.ptr, !llvm.ptr
    %134 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %108, %134 : i64, !llvm.ptr
    cf.br ^bb33
  }
}
