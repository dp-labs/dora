---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 11 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb12, ^bb13, ^bb16, ^bb17, ^bb20, ^bb21
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %13 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> i64
    %15 = arith.extui %14 : i64 to i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %15, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %19 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %20 = llvm.load %19 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %21 = arith.addi %20, %c1_i64 : i64
    llvm.store %21, %19 : i64, !llvm.ptr
    %22 = arith.cmpi ult, %c1024_i64, %21 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %22, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %23 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %24 = llvm.load %23 : !llvm.ptr -> i64
    %c2_i64 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %25 = arith.cmpi uge, %24, %c2_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %25, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %26 = arith.subi %24, %c2_i64 : i64
    llvm.store %26, %23 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c21000_i256 = arith.constant 21000 : i256
    %27 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %28 = llvm.load %27 : !llvm.ptr -> !llvm.ptr
    llvm.store %c21000_i256, %28 : i256, !llvm.ptr
    %29 = llvm.getelementptr %28[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %29, %27 : !llvm.ptr, !llvm.ptr
    cf.br ^bb13
  ^bb8:  // pred: ^bb10
    %30 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %31 = llvm.load %30 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %32 = arith.addi %31, %c1_i64_3 : i64
    llvm.store %32, %30 : i64, !llvm.ptr
    %33 = arith.cmpi ult, %c1024_i64_2, %32 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %33, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %34 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %35 = llvm.load %34 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %36 = arith.cmpi uge, %35, %c3_i64 : i64
    %c80_i8_5 = arith.constant 80 : i8
    cf.cond_br %36, ^bb10, ^bb1(%c80_i8_5 : i8)
  ^bb10:  // pred: ^bb9
    %37 = arith.subi %35, %c3_i64 : i64
    llvm.store %37, %34 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb12
    %c1_i256 = arith.constant 1 : i256
    %38 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    call @dora_fn_store_in_gaslimit_ptr(%arg0, %38) : (!llvm.ptr, !llvm.ptr) -> ()
    %39 = llvm.load %38 : !llvm.ptr -> i256
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    llvm.store %39, %41 : i256, !llvm.ptr
    %42 = llvm.getelementptr %41[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb12:  // pred: ^bb14
    %43 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_6 = arith.constant 1024 : i64
    %44 = llvm.load %43 : !llvm.ptr -> i64
    %c1_i64_7 = arith.constant 1 : i64
    %45 = arith.addi %44, %c1_i64_7 : i64
    llvm.store %45, %43 : i64, !llvm.ptr
    %46 = arith.cmpi ult, %c1024_i64_6, %45 : i64
    %c92_i8_8 = arith.constant 92 : i8
    cf.cond_br %46, ^bb1(%c92_i8_8 : i8), ^bb11
  ^bb13:  // pred: ^bb7
    %47 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> i64
    %c2_i64_9 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %49 = arith.cmpi uge, %48, %c2_i64_9 : i64
    %c80_i8_10 = arith.constant 80 : i8
    cf.cond_br %49, ^bb14, ^bb1(%c80_i8_10 : i8)
  ^bb14:  // pred: ^bb13
    %50 = arith.subi %48, %c2_i64_9 : i64
    llvm.store %50, %47 : i64, !llvm.ptr
    cf.br ^bb12
  ^bb15:  // pred: ^bb16
    %51 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %54 = llvm.load %53 : !llvm.ptr -> i256
    llvm.store %53, %51 : !llvm.ptr, !llvm.ptr
    %55 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %56 = llvm.load %55 : !llvm.ptr -> !llvm.ptr
    %57 = llvm.getelementptr %56[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %58 = llvm.load %57 : !llvm.ptr -> i256
    llvm.store %57, %55 : !llvm.ptr, !llvm.ptr
    %59 = arith.subi %54, %58 : i256
    %60 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %61 = llvm.load %60 : !llvm.ptr -> !llvm.ptr
    llvm.store %59, %61 : i256, !llvm.ptr
    %62 = llvm.getelementptr %61[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %62, %60 : !llvm.ptr, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %63 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_11 = arith.constant 1024 : i64
    %64 = llvm.load %63 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %65 = arith.addi %64, %c-1_i64 : i64
    llvm.store %65, %63 : i64, !llvm.ptr
    %c2_i64_12 = arith.constant 2 : i64
    %66 = arith.cmpi ult, %64, %c2_i64_12 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %66, ^bb1(%c91_i8 : i8), ^bb15
  ^bb17:  // pred: ^bb11
    %67 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> i64
    %c3_i64_13 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %69 = arith.cmpi uge, %68, %c3_i64_13 : i64
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %69, ^bb18, ^bb1(%c80_i8_14 : i8)
  ^bb18:  // pred: ^bb17
    %70 = arith.subi %68, %c3_i64_13 : i64
    llvm.store %70, %67 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %71 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %72 = llvm.load %71 : !llvm.ptr -> !llvm.ptr
    %73 = llvm.getelementptr %72[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %74 = llvm.load %73 : !llvm.ptr -> i256
    llvm.store %73, %71 : !llvm.ptr, !llvm.ptr
    %75 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> !llvm.ptr
    %77 = llvm.getelementptr %76[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %78 = llvm.load %77 : !llvm.ptr -> i256
    llvm.store %77, %75 : !llvm.ptr, !llvm.ptr
    %79 = arith.subi %74, %78 : i256
    %80 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    llvm.store %79, %81 : i256, !llvm.ptr
    %82 = llvm.getelementptr %81[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %82, %80 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb20:  // pred: ^bb22
    %83 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_15 = arith.constant 1024 : i64
    %84 = llvm.load %83 : !llvm.ptr -> i64
    %c-1_i64_16 = arith.constant -1 : i64
    %85 = arith.addi %84, %c-1_i64_16 : i64
    llvm.store %85, %83 : i64, !llvm.ptr
    %c2_i64_17 = arith.constant 2 : i64
    %86 = arith.cmpi ult, %84, %c2_i64_17 : i64
    %c91_i8_18 = arith.constant 91 : i8
    cf.cond_br %86, ^bb1(%c91_i8_18 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %87 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> i64
    %c3_i64_19 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %89 = arith.cmpi uge, %88, %c3_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %89, ^bb22, ^bb1(%c80_i8_20 : i8)
  ^bb22:  // pred: ^bb21
    %90 = arith.subi %88, %c3_i64_19 : i64
    llvm.store %90, %87 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb19
    %c0_i64_21 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %91 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %92 = llvm.load %91 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_21, %c0_i64_21, %92, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  }
}
