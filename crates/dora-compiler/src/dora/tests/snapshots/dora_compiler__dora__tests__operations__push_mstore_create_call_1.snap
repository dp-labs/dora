---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_memory_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_memory_size(!llvm.ptr) -> i64
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: !llvm.ptr, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.alloca %c0_i64 x !llvm.ptr : (i64) -> !llvm.ptr
    llvm.store %arg2, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb5
  ^bb1(%1: i8):  // 99 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb34, ^bb36, ^bb37, ^bb40, ^bb41, ^bb44, ^bb45, ^bb48, ^bb49, ^bb52, ^bb53, ^bb56, ^bb57, ^bb60, ^bb61, ^bb64, ^bb65, ^bb67, ^bb68, ^bb69, ^bb71, ^bb72, ^bb74, ^bb75, ^bb77, ^bb78, ^bb81, ^bb82, ^bb85, ^bb86, ^bb89, ^bb90, ^bb93, ^bb94, ^bb97, ^bb98, ^bb101, ^bb102, ^bb105, ^bb106, ^bb108, ^bb109, ^bb110, ^bb112, ^bb113, ^bb115, ^bb116, ^bb118, ^bb119, ^bb122, ^bb123, ^bb124, ^bb127, ^bb128, ^bb130, ^bb131, ^bb132, ^bb133, ^bb134, ^bb137, ^bb138, ^bb140, ^bb141, ^bb142, ^bb145, ^bb146, ^bb148, ^bb149, ^bb150, ^bb153, ^bb154, ^bb156, ^bb157, ^bb158, ^bb161, ^bb162, ^bb164, ^bb165, ^bb166, ^bb169, ^bb170
    %c0_i64_0 = arith.constant 0 : i64
    %2 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %2, %1) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %1 : i8
  ^bb2(%3: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %3 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %4 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %4 : i256, !llvm.ptr
    %5 = llvm.getelementptr %4[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %5, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %6 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %7 = arith.addi %6, %c1_i64 : i64
    llvm.store %7, %arg3 : i64, !llvm.ptr
    %8 = arith.cmpi ult, %c1024_i64, %7 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %8, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %9 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %10 = arith.cmpi uge, %9, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %10, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %11 = arith.subi %9, %c3_i64 : i64
    llvm.store %11, %arg1 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %12 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %12 : i256, !llvm.ptr
    %13 = llvm.getelementptr %12[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %13, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_1 = arith.constant 1024 : i64
    %14 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %15 = arith.addi %14, %c1_i64_2 : i64
    llvm.store %15, %arg3 : i64, !llvm.ptr
    %16 = arith.cmpi ult, %c1024_i64_1, %15 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %16, ^bb1(%c92_i8_3 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %17 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_4 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %18 = arith.cmpi uge, %17, %c3_i64_4 : i64
    %c80_i8_5 = arith.constant 80 : i8
    cf.cond_br %18, ^bb10, ^bb1(%c80_i8_5 : i8)
  ^bb10:  // pred: ^bb9
    %19 = arith.subi %17, %c3_i64_4 : i64
    llvm.store %19, %arg1 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %20 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %21 = llvm.getelementptr %20[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %22 = llvm.load %21 : !llvm.ptr -> i256
    llvm.store %21, %0 : !llvm.ptr, !llvm.ptr
    %23 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %24 = llvm.getelementptr %23[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %25 = llvm.load %24 : !llvm.ptr -> i256
    llvm.store %24, %0 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_6 = arith.constant 0 : i64
    %26 = arith.cmpi ne, %c32_i64, %c0_i64_6 : i64
    cf.cond_br %26, ^bb122, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb126
    %27 = arith.trunci %22 : i256 to i64
    %28 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %29 = llvm.getelementptr %28[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %30 = llvm.intr.bswap(%25)  : (i256) -> i256
    llvm.store %30, %29 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_7 = arith.constant 1024 : i64
    %31 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %32 = arith.addi %31, %c-2_i64 : i64
    llvm.store %32, %arg3 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %33 = arith.cmpi ult, %31, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %33, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %34 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_8 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %35 = arith.cmpi uge, %34, %c3_i64_8 : i64
    %c80_i8_9 = arith.constant 80 : i8
    cf.cond_br %35, ^bb15, ^bb1(%c80_i8_9 : i8)
  ^bb15:  // pred: ^bb14
    %36 = arith.subi %34, %c3_i64_8 : i64
    llvm.store %36, %arg1 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c17_i256 = arith.constant 17 : i256
    %37 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %37 : i256, !llvm.ptr
    %38 = llvm.getelementptr %37[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %38, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_10 = arith.constant 1024 : i64
    %39 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_11 = arith.constant 1 : i64
    %40 = arith.addi %39, %c1_i64_11 : i64
    llvm.store %40, %arg3 : i64, !llvm.ptr
    %41 = arith.cmpi ult, %c1024_i64_10, %40 : i64
    %c92_i8_12 = arith.constant 92 : i8
    cf.cond_br %41, ^bb1(%c92_i8_12 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %42 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_13 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %43 = arith.cmpi uge, %42, %c3_i64_13 : i64
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %43, ^bb19, ^bb1(%c80_i8_14 : i8)
  ^bb19:  // pred: ^bb18
    %44 = arith.subi %42, %c3_i64_13 : i64
    llvm.store %44, %arg1 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c15_i256 = arith.constant 15 : i256
    %45 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %45 : i256, !llvm.ptr
    %46 = llvm.getelementptr %45[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %46, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %c1024_i64_15 = arith.constant 1024 : i64
    %47 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_16 = arith.constant 1 : i64
    %48 = arith.addi %47, %c1_i64_16 : i64
    llvm.store %48, %arg3 : i64, !llvm.ptr
    %49 = arith.cmpi ult, %c1024_i64_15, %48 : i64
    %c92_i8_17 = arith.constant 92 : i8
    cf.cond_br %49, ^bb1(%c92_i8_17 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %50 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_18 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %51 = arith.cmpi uge, %50, %c3_i64_18 : i64
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %51, ^bb23, ^bb1(%c80_i8_19 : i8)
  ^bb23:  // pred: ^bb22
    %52 = arith.subi %50, %c3_i64_18 : i64
    llvm.store %52, %arg1 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_20 = arith.constant 0 : i256
    %53 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_20, %53 : i256, !llvm.ptr
    %54 = llvm.getelementptr %53[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %54, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb37
  ^bb25:  // pred: ^bb27
    %c1024_i64_21 = arith.constant 1024 : i64
    %55 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_22 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_22 : i64
    llvm.store %56, %arg3 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64_21, %56 : i64
    %c92_i8_23 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_23 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %58 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_24 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %59 = arith.cmpi uge, %58, %c3_i64_24 : i64
    %c80_i8_25 = arith.constant 80 : i8
    cf.cond_br %59, ^bb27, ^bb1(%c80_i8_25 : i8)
  ^bb27:  // pred: ^bb26
    %60 = arith.subi %58, %c3_i64_24 : i64
    llvm.store %60, %arg1 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb36
    %61 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %62 = llvm.getelementptr %61[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %63 = llvm.load %62 : !llvm.ptr -> i256
    llvm.store %62, %0 : !llvm.ptr, !llvm.ptr
    %64 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %65 = llvm.getelementptr %64[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %66 = llvm.load %65 : !llvm.ptr -> i256
    llvm.store %65, %0 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %68 = llvm.getelementptr %67[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %69 = llvm.load %68 : !llvm.ptr -> i256
    llvm.store %68, %0 : !llvm.ptr, !llvm.ptr
    %70 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %71 = arith.cmpi ne, %70, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %71, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %72 = arith.cmpi sgt, %69, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %72, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %73 = arith.trunci %69 : i256 to i64
    %c0_i64_26 = arith.constant 0 : i64
    %74 = arith.cmpi slt, %73, %c0_i64_26 : i64
    %c84_i8_27 = arith.constant 84 : i8
    cf.cond_br %74, ^bb1(%c84_i8_27 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i64_28 = arith.constant 0 : i64
    %75 = arith.cmpi ne, %73, %c0_i64_28 : i64
    cf.cond_br %75, ^bb130, ^bb32
  ^bb32:  // 2 preds: ^bb31, ^bb136
    %c32000_i64 = arith.constant 32000 : i64
    %76 = llvm.load %arg1 : !llvm.ptr -> i64
    %77 = arith.cmpi ult, %76, %c32000_i64 : i64
    scf.if %77 {
    } else {
      %511 = arith.subi %76, %c32000_i64 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_29 = arith.constant 80 : i8
    cf.cond_br %77, ^bb1(%c80_i8_29 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c1_i256 = arith.constant 1 : i256
    %78 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %63, %78 {alignment = 1 : i64} : i256, !llvm.ptr
    %79 = llvm.load %arg1 : !llvm.ptr -> i64
    %80 = arith.trunci %66 : i256 to i64
    %81 = call @dora_fn_create(%arg0, %73, %80, %78, %79) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %82 = llvm.getelementptr %81[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %83 = llvm.load %82 : !llvm.ptr -> i8
    %c0_i8_30 = arith.constant 0 : i8
    %84 = arith.cmpi ne, %83, %c0_i8_30 : i8
    cf.cond_br %84, ^bb1(%83 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %85 = llvm.getelementptr %81[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %86 = llvm.load %85 : !llvm.ptr -> i64
    %87 = llvm.load %arg1 : !llvm.ptr -> i64
    %88 = arith.cmpi ult, %87, %86 : i64
    scf.if %88 {
    } else {
      %511 = arith.subi %87, %86 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_31 = arith.constant 80 : i8
    cf.cond_br %88, ^bb1(%c80_i8_31 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %89 = llvm.load %78 : !llvm.ptr -> i256
    %90 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %89, %90 : i256, !llvm.ptr
    %91 = llvm.getelementptr %90[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %91, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %c1024_i64_32 = arith.constant 1024 : i64
    %92 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_33 = arith.constant -2 : i64
    %93 = arith.addi %92, %c-2_i64_33 : i64
    llvm.store %93, %arg3 : i64, !llvm.ptr
    %c3_i64_34 = arith.constant 3 : i64
    %94 = arith.cmpi ult, %92, %c3_i64_34 : i64
    %c91_i8_35 = arith.constant 91 : i8
    cf.cond_br %94, ^bb1(%c91_i8_35 : i8), ^bb28
  ^bb37:  // pred: ^bb24
    %95 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_36 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %96 = arith.cmpi uge, %95, %c0_i64_36 : i64
    %c80_i8_37 = arith.constant 80 : i8
    cf.cond_br %96, ^bb38, ^bb1(%c80_i8_37 : i8)
  ^bb38:  // pred: ^bb37
    %97 = arith.subi %95, %c0_i64_36 : i64
    llvm.store %97, %arg1 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_38 = arith.constant 0 : i256
    %98 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_38, %98 : i256, !llvm.ptr
    %99 = llvm.getelementptr %98[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %99, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb45
  ^bb40:  // pred: ^bb42
    %c1024_i64_39 = arith.constant 1024 : i64
    %100 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %101 = arith.addi %100, %c1_i64_40 : i64
    llvm.store %101, %arg3 : i64, !llvm.ptr
    %102 = arith.cmpi ult, %c1024_i64_39, %101 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %102, ^bb1(%c92_i8_41 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %103 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_42 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %104 = arith.cmpi uge, %103, %c3_i64_42 : i64
    %c80_i8_43 = arith.constant 80 : i8
    cf.cond_br %104, ^bb42, ^bb1(%c80_i8_43 : i8)
  ^bb42:  // pred: ^bb41
    %105 = arith.subi %103, %c3_i64_42 : i64
    llvm.store %105, %arg1 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb44
    %c0_i256_44 = arith.constant 0 : i256
    %106 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_44, %106 : i256, !llvm.ptr
    %107 = llvm.getelementptr %106[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %107, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb49
  ^bb44:  // pred: ^bb46
    %c1024_i64_45 = arith.constant 1024 : i64
    %108 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %109 = arith.addi %108, %c1_i64_46 : i64
    llvm.store %109, %arg3 : i64, !llvm.ptr
    %110 = arith.cmpi ult, %c1024_i64_45, %109 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %110, ^bb1(%c92_i8_47 : i8), ^bb43
  ^bb45:  // pred: ^bb39
    %111 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_48 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %112 = arith.cmpi uge, %111, %c3_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %112, ^bb46, ^bb1(%c80_i8_49 : i8)
  ^bb46:  // pred: ^bb45
    %113 = arith.subi %111, %c3_i64_48 : i64
    llvm.store %113, %arg1 : i64, !llvm.ptr
    cf.br ^bb44
  ^bb47:  // pred: ^bb48
    %c0_i256_50 = arith.constant 0 : i256
    %114 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_50, %114 : i256, !llvm.ptr
    %115 = llvm.getelementptr %114[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %115, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb53
  ^bb48:  // pred: ^bb50
    %c1024_i64_51 = arith.constant 1024 : i64
    %116 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %117 = arith.addi %116, %c1_i64_52 : i64
    llvm.store %117, %arg3 : i64, !llvm.ptr
    %118 = arith.cmpi ult, %c1024_i64_51, %117 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %118, ^bb1(%c92_i8_53 : i8), ^bb47
  ^bb49:  // pred: ^bb43
    %119 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_54 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %120 = arith.cmpi uge, %119, %c3_i64_54 : i64
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %120, ^bb50, ^bb1(%c80_i8_55 : i8)
  ^bb50:  // pred: ^bb49
    %121 = arith.subi %119, %c3_i64_54 : i64
    llvm.store %121, %arg1 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // pred: ^bb52
    %c0_i256_56 = arith.constant 0 : i256
    %122 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_56, %122 : i256, !llvm.ptr
    %123 = llvm.getelementptr %122[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %123, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb57
  ^bb52:  // pred: ^bb54
    %c1024_i64_57 = arith.constant 1024 : i64
    %124 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %125 = arith.addi %124, %c1_i64_58 : i64
    llvm.store %125, %arg3 : i64, !llvm.ptr
    %126 = arith.cmpi ult, %c1024_i64_57, %125 : i64
    %c92_i8_59 = arith.constant 92 : i8
    cf.cond_br %126, ^bb1(%c92_i8_59 : i8), ^bb51
  ^bb53:  // pred: ^bb47
    %127 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_60 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %128 = arith.cmpi uge, %127, %c3_i64_60 : i64
    %c80_i8_61 = arith.constant 80 : i8
    cf.cond_br %128, ^bb54, ^bb1(%c80_i8_61 : i8)
  ^bb54:  // pred: ^bb53
    %129 = arith.subi %127, %c3_i64_60 : i64
    llvm.store %129, %arg1 : i64, !llvm.ptr
    cf.br ^bb52
  ^bb55:  // pred: ^bb56
    %c0_i256_62 = arith.constant 0 : i256
    %130 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_62, %130 : i256, !llvm.ptr
    %131 = llvm.getelementptr %130[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %131, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb61
  ^bb56:  // pred: ^bb58
    %c1024_i64_63 = arith.constant 1024 : i64
    %132 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_64 = arith.constant 1 : i64
    %133 = arith.addi %132, %c1_i64_64 : i64
    llvm.store %133, %arg3 : i64, !llvm.ptr
    %134 = arith.cmpi ult, %c1024_i64_63, %133 : i64
    %c92_i8_65 = arith.constant 92 : i8
    cf.cond_br %134, ^bb1(%c92_i8_65 : i8), ^bb55
  ^bb57:  // pred: ^bb51
    %135 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_66 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %136 = arith.cmpi uge, %135, %c3_i64_66 : i64
    %c80_i8_67 = arith.constant 80 : i8
    cf.cond_br %136, ^bb58, ^bb1(%c80_i8_67 : i8)
  ^bb58:  // pred: ^bb57
    %137 = arith.subi %135, %c3_i64_66 : i64
    llvm.store %137, %arg1 : i64, !llvm.ptr
    cf.br ^bb56
  ^bb59:  // pred: ^bb60
    %138 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %139 = llvm.getelementptr %138[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %140 = llvm.load %139 : !llvm.ptr -> i256
    %141 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %140, %141 : i256, !llvm.ptr
    %142 = llvm.getelementptr %141[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %142, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb65
  ^bb60:  // pred: ^bb62
    %c1024_i64_68 = arith.constant 1024 : i64
    %143 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_69 = arith.constant 1 : i64
    %144 = arith.addi %143, %c1_i64_69 : i64
    llvm.store %144, %arg3 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %145 = arith.cmpi ult, %143, %c6_i64 : i64
    %146 = arith.cmpi ult, %c1024_i64_68, %144 : i64
    %147 = arith.xori %145, %146 : i1
    %c92_i8_70 = arith.constant 92 : i8
    cf.cond_br %147, ^bb1(%c92_i8_70 : i8), ^bb59
  ^bb61:  // pred: ^bb55
    %148 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_71 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %149 = arith.cmpi uge, %148, %c3_i64_71 : i64
    %c80_i8_72 = arith.constant 80 : i8
    cf.cond_br %149, ^bb62, ^bb1(%c80_i8_72 : i8)
  ^bb62:  // pred: ^bb61
    %150 = arith.subi %148, %c3_i64_71 : i64
    llvm.store %150, %arg1 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb63:  // pred: ^bb64
    %c65535_i256 = arith.constant 65535 : i256
    %151 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %151 : i256, !llvm.ptr
    %152 = llvm.getelementptr %151[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %152, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb78
  ^bb64:  // pred: ^bb66
    %c1024_i64_73 = arith.constant 1024 : i64
    %153 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_74 = arith.constant 1 : i64
    %154 = arith.addi %153, %c1_i64_74 : i64
    llvm.store %154, %arg3 : i64, !llvm.ptr
    %155 = arith.cmpi ult, %c1024_i64_73, %154 : i64
    %c92_i8_75 = arith.constant 92 : i8
    cf.cond_br %155, ^bb1(%c92_i8_75 : i8), ^bb63
  ^bb65:  // pred: ^bb59
    %156 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_76 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %157 = arith.cmpi uge, %156, %c3_i64_76 : i64
    %c80_i8_77 = arith.constant 80 : i8
    cf.cond_br %157, ^bb66, ^bb1(%c80_i8_77 : i8)
  ^bb66:  // pred: ^bb65
    %158 = arith.subi %156, %c3_i64_76 : i64
    llvm.store %158, %arg1 : i64, !llvm.ptr
    cf.br ^bb64
  ^bb67:  // pred: ^bb77
    %159 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %160 = llvm.getelementptr %159[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %161 = llvm.load %160 : !llvm.ptr -> i256
    llvm.store %160, %0 : !llvm.ptr, !llvm.ptr
    %162 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %163 = llvm.getelementptr %162[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %164 = llvm.load %163 : !llvm.ptr -> i256
    llvm.store %163, %0 : !llvm.ptr, !llvm.ptr
    %165 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %166 = llvm.getelementptr %165[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %167 = llvm.load %166 : !llvm.ptr -> i256
    llvm.store %166, %0 : !llvm.ptr, !llvm.ptr
    %168 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %169 = llvm.getelementptr %168[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %170 = llvm.load %169 : !llvm.ptr -> i256
    llvm.store %169, %0 : !llvm.ptr, !llvm.ptr
    %171 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %172 = llvm.getelementptr %171[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %173 = llvm.load %172 : !llvm.ptr -> i256
    llvm.store %172, %0 : !llvm.ptr, !llvm.ptr
    %174 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %175 = llvm.getelementptr %174[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %176 = llvm.load %175 : !llvm.ptr -> i256
    llvm.store %175, %0 : !llvm.ptr, !llvm.ptr
    %177 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %178 = llvm.getelementptr %177[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %179 = llvm.load %178 : !llvm.ptr -> i256
    llvm.store %178, %0 : !llvm.ptr, !llvm.ptr
    %180 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8_78 = arith.constant 0 : i8
    %181 = arith.cmpi ne, %180, %c0_i8_78 : i8
    %c0_i256_79 = arith.constant 0 : i256
    %182 = arith.cmpi ne, %167, %c0_i256_79 : i256
    %183 = arith.andi %181, %182 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %183, ^bb1(%c86_i8 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %c18446744073709551615_i256_80 = arith.constant 18446744073709551615 : i256
    %184 = arith.cmpi sgt, %173, %c18446744073709551615_i256_80 : i256
    %c84_i8_81 = arith.constant 84 : i8
    cf.cond_br %184, ^bb1(%c84_i8_81 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %185 = arith.trunci %173 : i256 to i64
    %c0_i64_82 = arith.constant 0 : i64
    %186 = arith.cmpi slt, %185, %c0_i64_82 : i64
    %c84_i8_83 = arith.constant 84 : i8
    cf.cond_br %186, ^bb1(%c84_i8_83 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %c0_i64_84 = arith.constant 0 : i64
    %187 = arith.cmpi ne, %185, %c0_i64_84 : i64
    cf.cond_br %187, ^bb140, ^bb71
  ^bb71:  // 2 preds: ^bb70, ^bb144
    %c18446744073709551615_i256_85 = arith.constant 18446744073709551615 : i256
    %188 = arith.cmpi sgt, %179, %c18446744073709551615_i256_85 : i256
    %c84_i8_86 = arith.constant 84 : i8
    cf.cond_br %188, ^bb1(%c84_i8_86 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %189 = arith.trunci %179 : i256 to i64
    %c0_i64_87 = arith.constant 0 : i64
    %190 = arith.cmpi slt, %189, %c0_i64_87 : i64
    %c84_i8_88 = arith.constant 84 : i8
    cf.cond_br %190, ^bb1(%c84_i8_88 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %c0_i64_89 = arith.constant 0 : i64
    %191 = arith.cmpi ne, %189, %c0_i64_89 : i64
    cf.cond_br %191, ^bb148, ^bb74
  ^bb74:  // 2 preds: ^bb73, ^bb152
    %192 = arith.trunci %170 : i256 to i64
    %193 = arith.trunci %176 : i256 to i64
    %194 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_90 = arith.constant 1 : i256
    %195 = llvm.alloca %c1_i256_90 x i256 : (i256) -> !llvm.ptr
    llvm.store %167, %195 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_91 = arith.constant 1 : i256
    %196 = llvm.alloca %c1_i256_91 x i256 : (i256) -> !llvm.ptr
    llvm.store %161, %196 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_92 = arith.constant 1 : i256
    %197 = llvm.alloca %c1_i256_92 x i256 : (i256) -> !llvm.ptr
    llvm.store %164, %197 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i8_93 = arith.constant 0 : i8
    %198 = call @dora_fn_call(%arg0, %196, %197, %195, %192, %185, %193, %189, %194, %c0_i8_93) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %199 = llvm.getelementptr %198[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %200 = llvm.load %199 : !llvm.ptr -> i8
    %201 = llvm.getelementptr %198[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %202 = llvm.load %201 : !llvm.ptr -> i8
    %c0_i8_94 = arith.constant 0 : i8
    %203 = arith.cmpi ne, %202, %c0_i8_94 : i8
    cf.cond_br %203, ^bb1(%202 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %204 = llvm.getelementptr %198[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %205 = llvm.load %204 : !llvm.ptr -> i64
    %206 = llvm.load %arg1 : !llvm.ptr -> i64
    %207 = arith.cmpi ult, %206, %205 : i64
    scf.if %207 {
    } else {
      %511 = arith.subi %206, %205 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_95 = arith.constant 80 : i8
    cf.cond_br %207, ^bb1(%c80_i8_95 : i8), ^bb76
  ^bb76:  // pred: ^bb75
    %208 = arith.extui %200 : i8 to i256
    %209 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %208, %209 : i256, !llvm.ptr
    %210 = llvm.getelementptr %209[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %210, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb82
  ^bb77:  // pred: ^bb79
    %c1024_i64_96 = arith.constant 1024 : i64
    %211 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %212 = arith.addi %211, %c-6_i64 : i64
    llvm.store %212, %arg3 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %213 = arith.cmpi ult, %211, %c7_i64 : i64
    %c91_i8_97 = arith.constant 91 : i8
    cf.cond_br %213, ^bb1(%c91_i8_97 : i8), ^bb67
  ^bb78:  // pred: ^bb63
    %214 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_98 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %215 = arith.cmpi uge, %214, %c0_i64_98 : i64
    %c80_i8_99 = arith.constant 80 : i8
    cf.cond_br %215, ^bb79, ^bb1(%c80_i8_99 : i8)
  ^bb79:  // pred: ^bb78
    %216 = arith.subi %214, %c0_i64_98 : i64
    llvm.store %216, %arg1 : i64, !llvm.ptr
    cf.br ^bb77
  ^bb80:  // pred: ^bb81
    %c0_i256_100 = arith.constant 0 : i256
    %217 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_100, %217 : i256, !llvm.ptr
    %218 = llvm.getelementptr %217[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %218, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb86
  ^bb81:  // pred: ^bb83
    %c1024_i64_101 = arith.constant 1024 : i64
    %219 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_102 = arith.constant 1 : i64
    %220 = arith.addi %219, %c1_i64_102 : i64
    llvm.store %220, %arg3 : i64, !llvm.ptr
    %221 = arith.cmpi ult, %c1024_i64_101, %220 : i64
    %c92_i8_103 = arith.constant 92 : i8
    cf.cond_br %221, ^bb1(%c92_i8_103 : i8), ^bb80
  ^bb82:  // pred: ^bb76
    %222 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_104 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %223 = arith.cmpi uge, %222, %c3_i64_104 : i64
    %c80_i8_105 = arith.constant 80 : i8
    cf.cond_br %223, ^bb83, ^bb1(%c80_i8_105 : i8)
  ^bb83:  // pred: ^bb82
    %224 = arith.subi %222, %c3_i64_104 : i64
    llvm.store %224, %arg1 : i64, !llvm.ptr
    cf.br ^bb81
  ^bb84:  // pred: ^bb85
    %c0_i256_106 = arith.constant 0 : i256
    %225 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_106, %225 : i256, !llvm.ptr
    %226 = llvm.getelementptr %225[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %226, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb90
  ^bb85:  // pred: ^bb87
    %c1024_i64_107 = arith.constant 1024 : i64
    %227 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_108 = arith.constant 1 : i64
    %228 = arith.addi %227, %c1_i64_108 : i64
    llvm.store %228, %arg3 : i64, !llvm.ptr
    %229 = arith.cmpi ult, %c1024_i64_107, %228 : i64
    %c92_i8_109 = arith.constant 92 : i8
    cf.cond_br %229, ^bb1(%c92_i8_109 : i8), ^bb84
  ^bb86:  // pred: ^bb80
    %230 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_110 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %231 = arith.cmpi uge, %230, %c3_i64_110 : i64
    %c80_i8_111 = arith.constant 80 : i8
    cf.cond_br %231, ^bb87, ^bb1(%c80_i8_111 : i8)
  ^bb87:  // pred: ^bb86
    %232 = arith.subi %230, %c3_i64_110 : i64
    llvm.store %232, %arg1 : i64, !llvm.ptr
    cf.br ^bb85
  ^bb88:  // pred: ^bb89
    %c32_i256 = arith.constant 32 : i256
    %233 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %233 : i256, !llvm.ptr
    %234 = llvm.getelementptr %233[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %234, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb94
  ^bb89:  // pred: ^bb91
    %c1024_i64_112 = arith.constant 1024 : i64
    %235 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_113 = arith.constant 1 : i64
    %236 = arith.addi %235, %c1_i64_113 : i64
    llvm.store %236, %arg3 : i64, !llvm.ptr
    %237 = arith.cmpi ult, %c1024_i64_112, %236 : i64
    %c92_i8_114 = arith.constant 92 : i8
    cf.cond_br %237, ^bb1(%c92_i8_114 : i8), ^bb88
  ^bb90:  // pred: ^bb84
    %238 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_115 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %239 = arith.cmpi uge, %238, %c3_i64_115 : i64
    %c80_i8_116 = arith.constant 80 : i8
    cf.cond_br %239, ^bb91, ^bb1(%c80_i8_116 : i8)
  ^bb91:  // pred: ^bb90
    %240 = arith.subi %238, %c3_i64_115 : i64
    llvm.store %240, %arg1 : i64, !llvm.ptr
    cf.br ^bb89
  ^bb92:  // pred: ^bb93
    %c0_i256_117 = arith.constant 0 : i256
    %241 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_117, %241 : i256, !llvm.ptr
    %242 = llvm.getelementptr %241[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %242, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb98
  ^bb93:  // pred: ^bb95
    %c1024_i64_118 = arith.constant 1024 : i64
    %243 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_119 = arith.constant 1 : i64
    %244 = arith.addi %243, %c1_i64_119 : i64
    llvm.store %244, %arg3 : i64, !llvm.ptr
    %245 = arith.cmpi ult, %c1024_i64_118, %244 : i64
    %c92_i8_120 = arith.constant 92 : i8
    cf.cond_br %245, ^bb1(%c92_i8_120 : i8), ^bb92
  ^bb94:  // pred: ^bb88
    %246 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_121 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %247 = arith.cmpi uge, %246, %c3_i64_121 : i64
    %c80_i8_122 = arith.constant 80 : i8
    cf.cond_br %247, ^bb95, ^bb1(%c80_i8_122 : i8)
  ^bb95:  // pred: ^bb94
    %248 = arith.subi %246, %c3_i64_121 : i64
    llvm.store %248, %arg1 : i64, !llvm.ptr
    cf.br ^bb93
  ^bb96:  // pred: ^bb97
    %c0_i256_123 = arith.constant 0 : i256
    %249 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_123, %249 : i256, !llvm.ptr
    %250 = llvm.getelementptr %249[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %250, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb102
  ^bb97:  // pred: ^bb99
    %c1024_i64_124 = arith.constant 1024 : i64
    %251 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_125 = arith.constant 1 : i64
    %252 = arith.addi %251, %c1_i64_125 : i64
    llvm.store %252, %arg3 : i64, !llvm.ptr
    %253 = arith.cmpi ult, %c1024_i64_124, %252 : i64
    %c92_i8_126 = arith.constant 92 : i8
    cf.cond_br %253, ^bb1(%c92_i8_126 : i8), ^bb96
  ^bb98:  // pred: ^bb92
    %254 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_127 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %255 = arith.cmpi uge, %254, %c3_i64_127 : i64
    %c80_i8_128 = arith.constant 80 : i8
    cf.cond_br %255, ^bb99, ^bb1(%c80_i8_128 : i8)
  ^bb99:  // pred: ^bb98
    %256 = arith.subi %254, %c3_i64_127 : i64
    llvm.store %256, %arg1 : i64, !llvm.ptr
    cf.br ^bb97
  ^bb100:  // pred: ^bb101
    %257 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %258 = llvm.getelementptr %257[-7] : (!llvm.ptr) -> !llvm.ptr, i256
    %259 = llvm.load %258 : !llvm.ptr -> i256
    %260 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %259, %260 : i256, !llvm.ptr
    %261 = llvm.getelementptr %260[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %261, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb106
  ^bb101:  // pred: ^bb103
    %c1024_i64_129 = arith.constant 1024 : i64
    %262 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_130 = arith.constant 1 : i64
    %263 = arith.addi %262, %c1_i64_130 : i64
    llvm.store %263, %arg3 : i64, !llvm.ptr
    %c7_i64_131 = arith.constant 7 : i64
    %264 = arith.cmpi ult, %262, %c7_i64_131 : i64
    %265 = arith.cmpi ult, %c1024_i64_129, %263 : i64
    %266 = arith.xori %264, %265 : i1
    %c92_i8_132 = arith.constant 92 : i8
    cf.cond_br %266, ^bb1(%c92_i8_132 : i8), ^bb100
  ^bb102:  // pred: ^bb96
    %267 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_133 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %268 = arith.cmpi uge, %267, %c3_i64_133 : i64
    %c80_i8_134 = arith.constant 80 : i8
    cf.cond_br %268, ^bb103, ^bb1(%c80_i8_134 : i8)
  ^bb103:  // pred: ^bb102
    %269 = arith.subi %267, %c3_i64_133 : i64
    llvm.store %269, %arg1 : i64, !llvm.ptr
    cf.br ^bb101
  ^bb104:  // pred: ^bb105
    %c65535_i256_135 = arith.constant 65535 : i256
    %270 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_135, %270 : i256, !llvm.ptr
    %271 = llvm.getelementptr %270[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %271, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb119
  ^bb105:  // pred: ^bb107
    %c1024_i64_136 = arith.constant 1024 : i64
    %272 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_137 = arith.constant 1 : i64
    %273 = arith.addi %272, %c1_i64_137 : i64
    llvm.store %273, %arg3 : i64, !llvm.ptr
    %274 = arith.cmpi ult, %c1024_i64_136, %273 : i64
    %c92_i8_138 = arith.constant 92 : i8
    cf.cond_br %274, ^bb1(%c92_i8_138 : i8), ^bb104
  ^bb106:  // pred: ^bb100
    %275 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_139 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %276 = arith.cmpi uge, %275, %c3_i64_139 : i64
    %c80_i8_140 = arith.constant 80 : i8
    cf.cond_br %276, ^bb107, ^bb1(%c80_i8_140 : i8)
  ^bb107:  // pred: ^bb106
    %277 = arith.subi %275, %c3_i64_139 : i64
    llvm.store %277, %arg1 : i64, !llvm.ptr
    cf.br ^bb105
  ^bb108:  // pred: ^bb118
    %278 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %279 = llvm.getelementptr %278[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %280 = llvm.load %279 : !llvm.ptr -> i256
    llvm.store %279, %0 : !llvm.ptr, !llvm.ptr
    %281 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %282 = llvm.getelementptr %281[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %283 = llvm.load %282 : !llvm.ptr -> i256
    llvm.store %282, %0 : !llvm.ptr, !llvm.ptr
    %284 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %285 = llvm.getelementptr %284[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %286 = llvm.load %285 : !llvm.ptr -> i256
    llvm.store %285, %0 : !llvm.ptr, !llvm.ptr
    %287 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %288 = llvm.getelementptr %287[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %289 = llvm.load %288 : !llvm.ptr -> i256
    llvm.store %288, %0 : !llvm.ptr, !llvm.ptr
    %290 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %291 = llvm.getelementptr %290[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %292 = llvm.load %291 : !llvm.ptr -> i256
    llvm.store %291, %0 : !llvm.ptr, !llvm.ptr
    %293 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %294 = llvm.getelementptr %293[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %295 = llvm.load %294 : !llvm.ptr -> i256
    llvm.store %294, %0 : !llvm.ptr, !llvm.ptr
    %296 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %297 = llvm.getelementptr %296[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %298 = llvm.load %297 : !llvm.ptr -> i256
    llvm.store %297, %0 : !llvm.ptr, !llvm.ptr
    %299 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8_141 = arith.constant 0 : i8
    %300 = arith.cmpi ne, %299, %c0_i8_141 : i8
    %c0_i256_142 = arith.constant 0 : i256
    %301 = arith.cmpi ne, %286, %c0_i256_142 : i256
    %302 = arith.andi %300, %301 : i1
    %c86_i8_143 = arith.constant 86 : i8
    cf.cond_br %302, ^bb1(%c86_i8_143 : i8), ^bb109
  ^bb109:  // pred: ^bb108
    %c18446744073709551615_i256_144 = arith.constant 18446744073709551615 : i256
    %303 = arith.cmpi sgt, %292, %c18446744073709551615_i256_144 : i256
    %c84_i8_145 = arith.constant 84 : i8
    cf.cond_br %303, ^bb1(%c84_i8_145 : i8), ^bb110
  ^bb110:  // pred: ^bb109
    %304 = arith.trunci %292 : i256 to i64
    %c0_i64_146 = arith.constant 0 : i64
    %305 = arith.cmpi slt, %304, %c0_i64_146 : i64
    %c84_i8_147 = arith.constant 84 : i8
    cf.cond_br %305, ^bb1(%c84_i8_147 : i8), ^bb111
  ^bb111:  // pred: ^bb110
    %c0_i64_148 = arith.constant 0 : i64
    %306 = arith.cmpi ne, %304, %c0_i64_148 : i64
    cf.cond_br %306, ^bb156, ^bb112
  ^bb112:  // 2 preds: ^bb111, ^bb160
    %c18446744073709551615_i256_149 = arith.constant 18446744073709551615 : i256
    %307 = arith.cmpi sgt, %298, %c18446744073709551615_i256_149 : i256
    %c84_i8_150 = arith.constant 84 : i8
    cf.cond_br %307, ^bb1(%c84_i8_150 : i8), ^bb113
  ^bb113:  // pred: ^bb112
    %308 = arith.trunci %298 : i256 to i64
    %c0_i64_151 = arith.constant 0 : i64
    %309 = arith.cmpi slt, %308, %c0_i64_151 : i64
    %c84_i8_152 = arith.constant 84 : i8
    cf.cond_br %309, ^bb1(%c84_i8_152 : i8), ^bb114
  ^bb114:  // pred: ^bb113
    %c0_i64_153 = arith.constant 0 : i64
    %310 = arith.cmpi ne, %308, %c0_i64_153 : i64
    cf.cond_br %310, ^bb164, ^bb115
  ^bb115:  // 2 preds: ^bb114, ^bb168
    %311 = arith.trunci %289 : i256 to i64
    %312 = arith.trunci %295 : i256 to i64
    %313 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_154 = arith.constant 1 : i256
    %314 = llvm.alloca %c1_i256_154 x i256 : (i256) -> !llvm.ptr
    llvm.store %286, %314 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_155 = arith.constant 1 : i256
    %315 = llvm.alloca %c1_i256_155 x i256 : (i256) -> !llvm.ptr
    llvm.store %280, %315 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_156 = arith.constant 1 : i256
    %316 = llvm.alloca %c1_i256_156 x i256 : (i256) -> !llvm.ptr
    llvm.store %283, %316 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i8_157 = arith.constant 0 : i8
    %317 = call @dora_fn_call(%arg0, %315, %316, %314, %311, %304, %312, %308, %313, %c0_i8_157) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %318 = llvm.getelementptr %317[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %319 = llvm.load %318 : !llvm.ptr -> i8
    %320 = llvm.getelementptr %317[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %321 = llvm.load %320 : !llvm.ptr -> i8
    %c0_i8_158 = arith.constant 0 : i8
    %322 = arith.cmpi ne, %321, %c0_i8_158 : i8
    cf.cond_br %322, ^bb1(%321 : i8), ^bb116
  ^bb116:  // pred: ^bb115
    %323 = llvm.getelementptr %317[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %324 = llvm.load %323 : !llvm.ptr -> i64
    %325 = llvm.load %arg1 : !llvm.ptr -> i64
    %326 = arith.cmpi ult, %325, %324 : i64
    scf.if %326 {
    } else {
      %511 = arith.subi %325, %324 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_159 = arith.constant 80 : i8
    cf.cond_br %326, ^bb1(%c80_i8_159 : i8), ^bb117
  ^bb117:  // pred: ^bb116
    %327 = arith.extui %319 : i8 to i256
    %328 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %327, %328 : i256, !llvm.ptr
    %329 = llvm.getelementptr %328[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %329, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb121
  ^bb118:  // pred: ^bb120
    %c1024_i64_160 = arith.constant 1024 : i64
    %330 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-6_i64_161 = arith.constant -6 : i64
    %331 = arith.addi %330, %c-6_i64_161 : i64
    llvm.store %331, %arg3 : i64, !llvm.ptr
    %c7_i64_162 = arith.constant 7 : i64
    %332 = arith.cmpi ult, %330, %c7_i64_162 : i64
    %c91_i8_163 = arith.constant 91 : i8
    cf.cond_br %332, ^bb1(%c91_i8_163 : i8), ^bb108
  ^bb119:  // pred: ^bb104
    %333 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_164 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %334 = arith.cmpi uge, %333, %c0_i64_164 : i64
    %c80_i8_165 = arith.constant 80 : i8
    cf.cond_br %334, ^bb120, ^bb1(%c80_i8_165 : i8)
  ^bb120:  // pred: ^bb119
    %335 = arith.subi %333, %c0_i64_164 : i64
    llvm.store %335, %arg1 : i64, !llvm.ptr
    cf.br ^bb118
  ^bb121:  // pred: ^bb117
    %c0_i64_166 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %336 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_166, %c0_i64_166, %336, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb122:  // pred: ^bb11
    %c18446744073709551615_i256_167 = arith.constant 18446744073709551615 : i256
    %337 = arith.cmpi sgt, %22, %c18446744073709551615_i256_167 : i256
    %c84_i8_168 = arith.constant 84 : i8
    cf.cond_br %337, ^bb1(%c84_i8_168 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %338 = arith.trunci %22 : i256 to i64
    %c0_i64_169 = arith.constant 0 : i64
    %339 = arith.cmpi slt, %338, %c0_i64_169 : i64
    %c84_i8_170 = arith.constant 84 : i8
    cf.cond_br %339, ^bb1(%c84_i8_170 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %340 = arith.addi %338, %c32_i64 : i64
    %c0_i64_171 = arith.constant 0 : i64
    %341 = arith.cmpi slt, %340, %c0_i64_171 : i64
    %c84_i8_172 = arith.constant 84 : i8
    cf.cond_br %341, ^bb1(%c84_i8_172 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_173 = arith.constant 32 : i64
    %342 = arith.addi %340, %c31_i64 : i64
    %343 = arith.divui %342, %c32_i64_173 : i64
    %c32_i64_174 = arith.constant 32 : i64
    %344 = arith.muli %343, %c32_i64_174 : i64
    %345 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_175 = arith.constant 31 : i64
    %c32_i64_176 = arith.constant 32 : i64
    %346 = arith.addi %345, %c31_i64_175 : i64
    %347 = arith.divui %346, %c32_i64_176 : i64
    %348 = arith.muli %347, %c32_i64_174 : i64
    %349 = arith.cmpi ult, %348, %344 : i64
    cf.cond_br %349, ^bb127, ^bb126
  ^bb126:  // 2 preds: ^bb125, ^bb129
    cf.br ^bb12
  ^bb127:  // pred: ^bb125
    %c3_i64_177 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %350 = arith.muli %347, %347 : i64
    %351 = arith.divui %350, %c512_i64 : i64
    %352 = arith.muli %347, %c3_i64_177 : i64
    %353 = arith.addi %351, %352 : i64
    %c3_i64_178 = arith.constant 3 : i64
    %c512_i64_179 = arith.constant 512 : i64
    %354 = arith.muli %343, %343 : i64
    %355 = arith.divui %354, %c512_i64_179 : i64
    %356 = arith.muli %343, %c3_i64_178 : i64
    %357 = arith.addi %355, %356 : i64
    %358 = arith.subi %357, %353 : i64
    %359 = llvm.load %arg1 : !llvm.ptr -> i64
    %360 = arith.cmpi ult, %359, %358 : i64
    scf.if %360 {
    } else {
      %511 = arith.subi %359, %358 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_180 = arith.constant 80 : i8
    cf.cond_br %360, ^bb1(%c80_i8_180 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %361 = call @dora_fn_extend_memory(%arg0, %344) : (!llvm.ptr, i64) -> !llvm.ptr
    %362 = llvm.getelementptr %361[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %363 = llvm.load %362 : !llvm.ptr -> i8
    %c0_i8_181 = arith.constant 0 : i8
    %364 = arith.cmpi ne, %363, %c0_i8_181 : i8
    cf.cond_br %364, ^bb1(%363 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    cf.br ^bb126
  ^bb130:  // pred: ^bb31
    %c49152_i64 = arith.constant 49152 : i64
    %365 = arith.cmpi ugt, %73, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %365, ^bb1(%c100_i8 : i8), ^bb131
  ^bb131:  // pred: ^bb130
    %c31_i64_182 = arith.constant 31 : i64
    %c32_i64_183 = arith.constant 32 : i64
    %366 = arith.addi %73, %c31_i64_182 : i64
    %367 = arith.divui %366, %c32_i64_183 : i64
    %c2_i64_184 = arith.constant 2 : i64
    %368 = arith.muli %367, %c2_i64_184 : i64
    %369 = llvm.load %arg1 : !llvm.ptr -> i64
    %370 = arith.cmpi ult, %369, %368 : i64
    scf.if %370 {
    } else {
      %511 = arith.subi %369, %368 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_185 = arith.constant 80 : i8
    cf.cond_br %370, ^bb1(%c80_i8_185 : i8), ^bb132
  ^bb132:  // pred: ^bb131
    %c18446744073709551615_i256_186 = arith.constant 18446744073709551615 : i256
    %371 = arith.cmpi sgt, %66, %c18446744073709551615_i256_186 : i256
    %c84_i8_187 = arith.constant 84 : i8
    cf.cond_br %371, ^bb1(%c84_i8_187 : i8), ^bb133
  ^bb133:  // pred: ^bb132
    %372 = arith.trunci %66 : i256 to i64
    %c0_i64_188 = arith.constant 0 : i64
    %373 = arith.cmpi slt, %372, %c0_i64_188 : i64
    %c84_i8_189 = arith.constant 84 : i8
    cf.cond_br %373, ^bb1(%c84_i8_189 : i8), ^bb134
  ^bb134:  // pred: ^bb133
    %374 = arith.addi %372, %73 : i64
    %c0_i64_190 = arith.constant 0 : i64
    %375 = arith.cmpi slt, %374, %c0_i64_190 : i64
    %c84_i8_191 = arith.constant 84 : i8
    cf.cond_br %375, ^bb1(%c84_i8_191 : i8), ^bb135
  ^bb135:  // pred: ^bb134
    %c31_i64_192 = arith.constant 31 : i64
    %c32_i64_193 = arith.constant 32 : i64
    %376 = arith.addi %374, %c31_i64_192 : i64
    %377 = arith.divui %376, %c32_i64_193 : i64
    %c32_i64_194 = arith.constant 32 : i64
    %378 = arith.muli %377, %c32_i64_194 : i64
    %379 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_195 = arith.constant 31 : i64
    %c32_i64_196 = arith.constant 32 : i64
    %380 = arith.addi %379, %c31_i64_195 : i64
    %381 = arith.divui %380, %c32_i64_196 : i64
    %382 = arith.muli %381, %c32_i64_194 : i64
    %383 = arith.cmpi ult, %382, %378 : i64
    cf.cond_br %383, ^bb137, ^bb136
  ^bb136:  // 2 preds: ^bb135, ^bb139
    cf.br ^bb32
  ^bb137:  // pred: ^bb135
    %c3_i64_197 = arith.constant 3 : i64
    %c512_i64_198 = arith.constant 512 : i64
    %384 = arith.muli %381, %381 : i64
    %385 = arith.divui %384, %c512_i64_198 : i64
    %386 = arith.muli %381, %c3_i64_197 : i64
    %387 = arith.addi %385, %386 : i64
    %c3_i64_199 = arith.constant 3 : i64
    %c512_i64_200 = arith.constant 512 : i64
    %388 = arith.muli %377, %377 : i64
    %389 = arith.divui %388, %c512_i64_200 : i64
    %390 = arith.muli %377, %c3_i64_199 : i64
    %391 = arith.addi %389, %390 : i64
    %392 = arith.subi %391, %387 : i64
    %393 = llvm.load %arg1 : !llvm.ptr -> i64
    %394 = arith.cmpi ult, %393, %392 : i64
    scf.if %394 {
    } else {
      %511 = arith.subi %393, %392 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_201 = arith.constant 80 : i8
    cf.cond_br %394, ^bb1(%c80_i8_201 : i8), ^bb138
  ^bb138:  // pred: ^bb137
    %395 = call @dora_fn_extend_memory(%arg0, %378) : (!llvm.ptr, i64) -> !llvm.ptr
    %396 = llvm.getelementptr %395[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %397 = llvm.load %396 : !llvm.ptr -> i8
    %c0_i8_202 = arith.constant 0 : i8
    %398 = arith.cmpi ne, %397, %c0_i8_202 : i8
    cf.cond_br %398, ^bb1(%397 : i8), ^bb139
  ^bb139:  // pred: ^bb138
    cf.br ^bb136
  ^bb140:  // pred: ^bb70
    %c18446744073709551615_i256_203 = arith.constant 18446744073709551615 : i256
    %399 = arith.cmpi sgt, %170, %c18446744073709551615_i256_203 : i256
    %c84_i8_204 = arith.constant 84 : i8
    cf.cond_br %399, ^bb1(%c84_i8_204 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    %400 = arith.trunci %170 : i256 to i64
    %c0_i64_205 = arith.constant 0 : i64
    %401 = arith.cmpi slt, %400, %c0_i64_205 : i64
    %c84_i8_206 = arith.constant 84 : i8
    cf.cond_br %401, ^bb1(%c84_i8_206 : i8), ^bb142
  ^bb142:  // pred: ^bb141
    %402 = arith.addi %400, %185 : i64
    %c0_i64_207 = arith.constant 0 : i64
    %403 = arith.cmpi slt, %402, %c0_i64_207 : i64
    %c84_i8_208 = arith.constant 84 : i8
    cf.cond_br %403, ^bb1(%c84_i8_208 : i8), ^bb143
  ^bb143:  // pred: ^bb142
    %c31_i64_209 = arith.constant 31 : i64
    %c32_i64_210 = arith.constant 32 : i64
    %404 = arith.addi %402, %c31_i64_209 : i64
    %405 = arith.divui %404, %c32_i64_210 : i64
    %c32_i64_211 = arith.constant 32 : i64
    %406 = arith.muli %405, %c32_i64_211 : i64
    %407 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_212 = arith.constant 31 : i64
    %c32_i64_213 = arith.constant 32 : i64
    %408 = arith.addi %407, %c31_i64_212 : i64
    %409 = arith.divui %408, %c32_i64_213 : i64
    %410 = arith.muli %409, %c32_i64_211 : i64
    %411 = arith.cmpi ult, %410, %406 : i64
    cf.cond_br %411, ^bb145, ^bb144
  ^bb144:  // 2 preds: ^bb143, ^bb147
    cf.br ^bb71
  ^bb145:  // pred: ^bb143
    %c3_i64_214 = arith.constant 3 : i64
    %c512_i64_215 = arith.constant 512 : i64
    %412 = arith.muli %409, %409 : i64
    %413 = arith.divui %412, %c512_i64_215 : i64
    %414 = arith.muli %409, %c3_i64_214 : i64
    %415 = arith.addi %413, %414 : i64
    %c3_i64_216 = arith.constant 3 : i64
    %c512_i64_217 = arith.constant 512 : i64
    %416 = arith.muli %405, %405 : i64
    %417 = arith.divui %416, %c512_i64_217 : i64
    %418 = arith.muli %405, %c3_i64_216 : i64
    %419 = arith.addi %417, %418 : i64
    %420 = arith.subi %419, %415 : i64
    %421 = llvm.load %arg1 : !llvm.ptr -> i64
    %422 = arith.cmpi ult, %421, %420 : i64
    scf.if %422 {
    } else {
      %511 = arith.subi %421, %420 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_218 = arith.constant 80 : i8
    cf.cond_br %422, ^bb1(%c80_i8_218 : i8), ^bb146
  ^bb146:  // pred: ^bb145
    %423 = call @dora_fn_extend_memory(%arg0, %406) : (!llvm.ptr, i64) -> !llvm.ptr
    %424 = llvm.getelementptr %423[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %425 = llvm.load %424 : !llvm.ptr -> i8
    %c0_i8_219 = arith.constant 0 : i8
    %426 = arith.cmpi ne, %425, %c0_i8_219 : i8
    cf.cond_br %426, ^bb1(%425 : i8), ^bb147
  ^bb147:  // pred: ^bb146
    cf.br ^bb144
  ^bb148:  // pred: ^bb73
    %c18446744073709551615_i256_220 = arith.constant 18446744073709551615 : i256
    %427 = arith.cmpi sgt, %176, %c18446744073709551615_i256_220 : i256
    %c84_i8_221 = arith.constant 84 : i8
    cf.cond_br %427, ^bb1(%c84_i8_221 : i8), ^bb149
  ^bb149:  // pred: ^bb148
    %428 = arith.trunci %176 : i256 to i64
    %c0_i64_222 = arith.constant 0 : i64
    %429 = arith.cmpi slt, %428, %c0_i64_222 : i64
    %c84_i8_223 = arith.constant 84 : i8
    cf.cond_br %429, ^bb1(%c84_i8_223 : i8), ^bb150
  ^bb150:  // pred: ^bb149
    %430 = arith.addi %428, %189 : i64
    %c0_i64_224 = arith.constant 0 : i64
    %431 = arith.cmpi slt, %430, %c0_i64_224 : i64
    %c84_i8_225 = arith.constant 84 : i8
    cf.cond_br %431, ^bb1(%c84_i8_225 : i8), ^bb151
  ^bb151:  // pred: ^bb150
    %c31_i64_226 = arith.constant 31 : i64
    %c32_i64_227 = arith.constant 32 : i64
    %432 = arith.addi %430, %c31_i64_226 : i64
    %433 = arith.divui %432, %c32_i64_227 : i64
    %c32_i64_228 = arith.constant 32 : i64
    %434 = arith.muli %433, %c32_i64_228 : i64
    %435 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_229 = arith.constant 31 : i64
    %c32_i64_230 = arith.constant 32 : i64
    %436 = arith.addi %435, %c31_i64_229 : i64
    %437 = arith.divui %436, %c32_i64_230 : i64
    %438 = arith.muli %437, %c32_i64_228 : i64
    %439 = arith.cmpi ult, %438, %434 : i64
    cf.cond_br %439, ^bb153, ^bb152
  ^bb152:  // 2 preds: ^bb151, ^bb155
    cf.br ^bb74
  ^bb153:  // pred: ^bb151
    %c3_i64_231 = arith.constant 3 : i64
    %c512_i64_232 = arith.constant 512 : i64
    %440 = arith.muli %437, %437 : i64
    %441 = arith.divui %440, %c512_i64_232 : i64
    %442 = arith.muli %437, %c3_i64_231 : i64
    %443 = arith.addi %441, %442 : i64
    %c3_i64_233 = arith.constant 3 : i64
    %c512_i64_234 = arith.constant 512 : i64
    %444 = arith.muli %433, %433 : i64
    %445 = arith.divui %444, %c512_i64_234 : i64
    %446 = arith.muli %433, %c3_i64_233 : i64
    %447 = arith.addi %445, %446 : i64
    %448 = arith.subi %447, %443 : i64
    %449 = llvm.load %arg1 : !llvm.ptr -> i64
    %450 = arith.cmpi ult, %449, %448 : i64
    scf.if %450 {
    } else {
      %511 = arith.subi %449, %448 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_235 = arith.constant 80 : i8
    cf.cond_br %450, ^bb1(%c80_i8_235 : i8), ^bb154
  ^bb154:  // pred: ^bb153
    %451 = call @dora_fn_extend_memory(%arg0, %434) : (!llvm.ptr, i64) -> !llvm.ptr
    %452 = llvm.getelementptr %451[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %453 = llvm.load %452 : !llvm.ptr -> i8
    %c0_i8_236 = arith.constant 0 : i8
    %454 = arith.cmpi ne, %453, %c0_i8_236 : i8
    cf.cond_br %454, ^bb1(%453 : i8), ^bb155
  ^bb155:  // pred: ^bb154
    cf.br ^bb152
  ^bb156:  // pred: ^bb111
    %c18446744073709551615_i256_237 = arith.constant 18446744073709551615 : i256
    %455 = arith.cmpi sgt, %289, %c18446744073709551615_i256_237 : i256
    %c84_i8_238 = arith.constant 84 : i8
    cf.cond_br %455, ^bb1(%c84_i8_238 : i8), ^bb157
  ^bb157:  // pred: ^bb156
    %456 = arith.trunci %289 : i256 to i64
    %c0_i64_239 = arith.constant 0 : i64
    %457 = arith.cmpi slt, %456, %c0_i64_239 : i64
    %c84_i8_240 = arith.constant 84 : i8
    cf.cond_br %457, ^bb1(%c84_i8_240 : i8), ^bb158
  ^bb158:  // pred: ^bb157
    %458 = arith.addi %456, %304 : i64
    %c0_i64_241 = arith.constant 0 : i64
    %459 = arith.cmpi slt, %458, %c0_i64_241 : i64
    %c84_i8_242 = arith.constant 84 : i8
    cf.cond_br %459, ^bb1(%c84_i8_242 : i8), ^bb159
  ^bb159:  // pred: ^bb158
    %c31_i64_243 = arith.constant 31 : i64
    %c32_i64_244 = arith.constant 32 : i64
    %460 = arith.addi %458, %c31_i64_243 : i64
    %461 = arith.divui %460, %c32_i64_244 : i64
    %c32_i64_245 = arith.constant 32 : i64
    %462 = arith.muli %461, %c32_i64_245 : i64
    %463 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_246 = arith.constant 31 : i64
    %c32_i64_247 = arith.constant 32 : i64
    %464 = arith.addi %463, %c31_i64_246 : i64
    %465 = arith.divui %464, %c32_i64_247 : i64
    %466 = arith.muli %465, %c32_i64_245 : i64
    %467 = arith.cmpi ult, %466, %462 : i64
    cf.cond_br %467, ^bb161, ^bb160
  ^bb160:  // 2 preds: ^bb159, ^bb163
    cf.br ^bb112
  ^bb161:  // pred: ^bb159
    %c3_i64_248 = arith.constant 3 : i64
    %c512_i64_249 = arith.constant 512 : i64
    %468 = arith.muli %465, %465 : i64
    %469 = arith.divui %468, %c512_i64_249 : i64
    %470 = arith.muli %465, %c3_i64_248 : i64
    %471 = arith.addi %469, %470 : i64
    %c3_i64_250 = arith.constant 3 : i64
    %c512_i64_251 = arith.constant 512 : i64
    %472 = arith.muli %461, %461 : i64
    %473 = arith.divui %472, %c512_i64_251 : i64
    %474 = arith.muli %461, %c3_i64_250 : i64
    %475 = arith.addi %473, %474 : i64
    %476 = arith.subi %475, %471 : i64
    %477 = llvm.load %arg1 : !llvm.ptr -> i64
    %478 = arith.cmpi ult, %477, %476 : i64
    scf.if %478 {
    } else {
      %511 = arith.subi %477, %476 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_252 = arith.constant 80 : i8
    cf.cond_br %478, ^bb1(%c80_i8_252 : i8), ^bb162
  ^bb162:  // pred: ^bb161
    %479 = call @dora_fn_extend_memory(%arg0, %462) : (!llvm.ptr, i64) -> !llvm.ptr
    %480 = llvm.getelementptr %479[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %481 = llvm.load %480 : !llvm.ptr -> i8
    %c0_i8_253 = arith.constant 0 : i8
    %482 = arith.cmpi ne, %481, %c0_i8_253 : i8
    cf.cond_br %482, ^bb1(%481 : i8), ^bb163
  ^bb163:  // pred: ^bb162
    cf.br ^bb160
  ^bb164:  // pred: ^bb114
    %c18446744073709551615_i256_254 = arith.constant 18446744073709551615 : i256
    %483 = arith.cmpi sgt, %295, %c18446744073709551615_i256_254 : i256
    %c84_i8_255 = arith.constant 84 : i8
    cf.cond_br %483, ^bb1(%c84_i8_255 : i8), ^bb165
  ^bb165:  // pred: ^bb164
    %484 = arith.trunci %295 : i256 to i64
    %c0_i64_256 = arith.constant 0 : i64
    %485 = arith.cmpi slt, %484, %c0_i64_256 : i64
    %c84_i8_257 = arith.constant 84 : i8
    cf.cond_br %485, ^bb1(%c84_i8_257 : i8), ^bb166
  ^bb166:  // pred: ^bb165
    %486 = arith.addi %484, %308 : i64
    %c0_i64_258 = arith.constant 0 : i64
    %487 = arith.cmpi slt, %486, %c0_i64_258 : i64
    %c84_i8_259 = arith.constant 84 : i8
    cf.cond_br %487, ^bb1(%c84_i8_259 : i8), ^bb167
  ^bb167:  // pred: ^bb166
    %c31_i64_260 = arith.constant 31 : i64
    %c32_i64_261 = arith.constant 32 : i64
    %488 = arith.addi %486, %c31_i64_260 : i64
    %489 = arith.divui %488, %c32_i64_261 : i64
    %c32_i64_262 = arith.constant 32 : i64
    %490 = arith.muli %489, %c32_i64_262 : i64
    %491 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_263 = arith.constant 31 : i64
    %c32_i64_264 = arith.constant 32 : i64
    %492 = arith.addi %491, %c31_i64_263 : i64
    %493 = arith.divui %492, %c32_i64_264 : i64
    %494 = arith.muli %493, %c32_i64_262 : i64
    %495 = arith.cmpi ult, %494, %490 : i64
    cf.cond_br %495, ^bb169, ^bb168
  ^bb168:  // 2 preds: ^bb167, ^bb171
    cf.br ^bb115
  ^bb169:  // pred: ^bb167
    %c3_i64_265 = arith.constant 3 : i64
    %c512_i64_266 = arith.constant 512 : i64
    %496 = arith.muli %493, %493 : i64
    %497 = arith.divui %496, %c512_i64_266 : i64
    %498 = arith.muli %493, %c3_i64_265 : i64
    %499 = arith.addi %497, %498 : i64
    %c3_i64_267 = arith.constant 3 : i64
    %c512_i64_268 = arith.constant 512 : i64
    %500 = arith.muli %489, %489 : i64
    %501 = arith.divui %500, %c512_i64_268 : i64
    %502 = arith.muli %489, %c3_i64_267 : i64
    %503 = arith.addi %501, %502 : i64
    %504 = arith.subi %503, %499 : i64
    %505 = llvm.load %arg1 : !llvm.ptr -> i64
    %506 = arith.cmpi ult, %505, %504 : i64
    scf.if %506 {
    } else {
      %511 = arith.subi %505, %504 : i64
      llvm.store %511, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_269 = arith.constant 80 : i8
    cf.cond_br %506, ^bb1(%c80_i8_269 : i8), ^bb170
  ^bb170:  // pred: ^bb169
    %507 = call @dora_fn_extend_memory(%arg0, %490) : (!llvm.ptr, i64) -> !llvm.ptr
    %508 = llvm.getelementptr %507[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %509 = llvm.load %508 : !llvm.ptr -> i8
    %c0_i8_270 = arith.constant 0 : i8
    %510 = arith.cmpi ne, %509, %c0_i8_270 : i8
    cf.cond_br %510, ^bb1(%509 : i8), ^bb171
  ^bb171:  // pred: ^bb170
    cf.br ^bb168
  }
}
