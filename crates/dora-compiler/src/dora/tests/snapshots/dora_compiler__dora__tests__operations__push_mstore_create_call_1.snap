---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_read_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_write_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 35 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c32_i64 = arith.constant 32 : i64
    %37 = arith.addi %36, %c32_i64 : i64
    %c0_i64_4 = arith.constant 0 : i64
    %38 = arith.cmpi slt, %37, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %38, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_5 = arith.constant 32 : i64
    %39 = arith.addi %37, %c31_i64 : i64
    %40 = arith.divui %39, %c32_i64_5 : i64
    %41 = arith.muli %40, %c32_i64_5 : i64
    %42 = call @dora_fn_extend_memory(%arg0, %41) : (!llvm.ptr, i64) -> !llvm.ptr
    %43 = llvm.getelementptr %42[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %44 = llvm.load %43 : !llvm.ptr -> !llvm.ptr
    %45 = llvm.getelementptr %42[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %46 = llvm.load %45 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %47 = arith.cmpi ne, %46, %c0_i8 : i8
    cf.cond_br %47, ^bb1(%46 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %48 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %44, %48 : !llvm.ptr, !llvm.ptr
    %49 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %41, %49 : i64, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %51 = llvm.load %50 : !llvm.ptr -> !llvm.ptr
    %52 = llvm.getelementptr %51[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %53 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %53, %52 {alignment = 1 : i64} : i256, !llvm.ptr
    %54 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_6 = arith.constant 1 : i64
    %55 = arith.addi %54, %c1_i64_6 : i64
    llvm.store %55, %9 : i64, !llvm.ptr
    %56 = arith.cmpi ult, %c1024_i64, %55 : i64
    %c92_i8_7 = arith.constant 92 : i8
    cf.cond_br %56, ^bb1(%c92_i8_7 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %c17_i256 = arith.constant 17 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    %60 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_8 : i64
    llvm.store %61, %9 : i64, !llvm.ptr
    %62 = arith.cmpi ult, %c1024_i64, %61 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c15_i256 = arith.constant 15 : i256
    %63 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %64 : i256, !llvm.ptr
    %65 = llvm.getelementptr %64[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %65, %63 : !llvm.ptr, !llvm.ptr
    %66 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %67 = arith.addi %66, %c1_i64_10 : i64
    llvm.store %67, %9 : i64, !llvm.ptr
    %68 = arith.cmpi ult, %c1024_i64, %67 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %68, ^bb1(%c92_i8_11 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c0_i256_12 = arith.constant 0 : i256
    %69 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_12, %70 : i256, !llvm.ptr
    %71 = llvm.getelementptr %70[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %71, %69 : !llvm.ptr, !llvm.ptr
    %72 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_13 = arith.constant -2 : i64
    %73 = arith.addi %72, %c-2_i64_13 : i64
    llvm.store %73, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %74 = arith.cmpi ult, %72, %c3_i64 : i64
    %c91_i8_14 = arith.constant 91 : i8
    cf.cond_br %74, ^bb1(%c91_i8_14 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %75 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> !llvm.ptr
    %77 = llvm.getelementptr %76[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %78 = llvm.load %77 : !llvm.ptr -> i256
    llvm.store %77, %75 : !llvm.ptr, !llvm.ptr
    %79 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> !llvm.ptr
    %81 = llvm.getelementptr %80[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %82 = llvm.load %81 : !llvm.ptr -> i256
    llvm.store %81, %79 : !llvm.ptr, !llvm.ptr
    %83 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> !llvm.ptr
    %85 = llvm.getelementptr %84[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %86 = llvm.load %85 : !llvm.ptr -> i256
    llvm.store %85, %83 : !llvm.ptr, !llvm.ptr
    %87 = arith.trunci %82 : i256 to i64
    %88 = arith.trunci %86 : i256 to i64
    %89 = arith.addi %87, %88 : i64
    %c0_i64_15 = arith.constant 0 : i64
    %90 = arith.cmpi slt, %89, %c0_i64_15 : i64
    %c84_i8_16 = arith.constant 84 : i8
    cf.cond_br %90, ^bb1(%c84_i8_16 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c31_i64_17 = arith.constant 31 : i64
    %c32_i64_18 = arith.constant 32 : i64
    %91 = arith.addi %89, %c31_i64_17 : i64
    %92 = arith.divui %91, %c32_i64_18 : i64
    %93 = arith.muli %92, %c32_i64_18 : i64
    %94 = call @dora_fn_extend_memory(%arg0, %93) : (!llvm.ptr, i64) -> !llvm.ptr
    %95 = llvm.getelementptr %94[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %96 = llvm.load %95 : !llvm.ptr -> !llvm.ptr
    %97 = llvm.getelementptr %94[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %98 = llvm.load %97 : !llvm.ptr -> i8
    %c0_i8_19 = arith.constant 0 : i8
    %99 = arith.cmpi ne, %98, %c0_i8_19 : i8
    cf.cond_br %99, ^bb1(%98 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %100 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %96, %100 : !llvm.ptr, !llvm.ptr
    %101 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %93, %101 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %102 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %78, %102 {alignment = 1 : i64} : i256, !llvm.ptr
    %103 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> i64
    %c1_i64_20 = arith.constant 1 : i64
    %105 = llvm.alloca %c1_i64_20 x i64 : (i64) -> !llvm.ptr
    llvm.store %104, %105 {alignment = 1 : i64} : i64, !llvm.ptr
    %106 = call @dora_fn_create(%arg0, %88, %87, %102, %105) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %107 = llvm.getelementptr %106[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %108 = llvm.load %107 : !llvm.ptr -> i8
    %c0_i8_21 = arith.constant 0 : i8
    %109 = arith.cmpi ne, %c0_i8_21, %108 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %109, ^bb1(%c94_i8 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %110 = llvm.load %102 : !llvm.ptr -> i256
    %111 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> !llvm.ptr
    llvm.store %110, %112 : i256, !llvm.ptr
    %113 = llvm.getelementptr %112[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %113, %111 : !llvm.ptr, !llvm.ptr
    %114 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_22 = arith.constant 1 : i64
    %115 = arith.addi %114, %c1_i64_22 : i64
    llvm.store %115, %9 : i64, !llvm.ptr
    %116 = arith.cmpi ult, %c1024_i64, %115 : i64
    %c92_i8_23 = arith.constant 92 : i8
    cf.cond_br %116, ^bb1(%c92_i8_23 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %c0_i256_24 = arith.constant 0 : i256
    %117 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %118 = llvm.load %117 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_24, %118 : i256, !llvm.ptr
    %119 = llvm.getelementptr %118[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %119, %117 : !llvm.ptr, !llvm.ptr
    %120 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %121 = arith.addi %120, %c1_i64_25 : i64
    llvm.store %121, %9 : i64, !llvm.ptr
    %122 = arith.cmpi ult, %c1024_i64, %121 : i64
    %c92_i8_26 = arith.constant 92 : i8
    cf.cond_br %122, ^bb1(%c92_i8_26 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c0_i256_27 = arith.constant 0 : i256
    %123 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %124 = llvm.load %123 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_27, %124 : i256, !llvm.ptr
    %125 = llvm.getelementptr %124[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %125, %123 : !llvm.ptr, !llvm.ptr
    %126 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_28 = arith.constant 1 : i64
    %127 = arith.addi %126, %c1_i64_28 : i64
    llvm.store %127, %9 : i64, !llvm.ptr
    %128 = arith.cmpi ult, %c1024_i64, %127 : i64
    %c92_i8_29 = arith.constant 92 : i8
    cf.cond_br %128, ^bb1(%c92_i8_29 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %c0_i256_30 = arith.constant 0 : i256
    %129 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %130 = llvm.load %129 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_30, %130 : i256, !llvm.ptr
    %131 = llvm.getelementptr %130[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %131, %129 : !llvm.ptr, !llvm.ptr
    %132 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_31 = arith.constant 1 : i64
    %133 = arith.addi %132, %c1_i64_31 : i64
    llvm.store %133, %9 : i64, !llvm.ptr
    %134 = arith.cmpi ult, %c1024_i64, %133 : i64
    %c92_i8_32 = arith.constant 92 : i8
    cf.cond_br %134, ^bb1(%c92_i8_32 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %c0_i256_33 = arith.constant 0 : i256
    %135 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_33, %136 : i256, !llvm.ptr
    %137 = llvm.getelementptr %136[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %137, %135 : !llvm.ptr, !llvm.ptr
    %138 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %139 = arith.addi %138, %c1_i64_34 : i64
    llvm.store %139, %9 : i64, !llvm.ptr
    %140 = arith.cmpi ult, %c1024_i64, %139 : i64
    %c92_i8_35 = arith.constant 92 : i8
    cf.cond_br %140, ^bb1(%c92_i8_35 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i256_36 = arith.constant 0 : i256
    %141 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %142 = llvm.load %141 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_36, %142 : i256, !llvm.ptr
    %143 = llvm.getelementptr %142[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %143, %141 : !llvm.ptr, !llvm.ptr
    %144 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %145 = arith.addi %144, %c1_i64_37 : i64
    llvm.store %145, %9 : i64, !llvm.ptr
    %146 = arith.cmpi ult, %c1024_i64, %145 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %146, ^bb1(%c92_i8_38 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %147 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %148 = llvm.load %147 : !llvm.ptr -> !llvm.ptr
    %149 = llvm.getelementptr %148[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %150 = llvm.load %149 : !llvm.ptr -> i256
    %151 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %152 = llvm.load %151 : !llvm.ptr -> !llvm.ptr
    llvm.store %150, %152 : i256, !llvm.ptr
    %153 = llvm.getelementptr %152[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %153, %151 : !llvm.ptr, !llvm.ptr
    %154 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_39 = arith.constant 1 : i64
    %155 = arith.addi %154, %c1_i64_39 : i64
    llvm.store %155, %9 : i64, !llvm.ptr
    %156 = arith.cmpi ult, %c1024_i64, %155 : i64
    %c92_i8_40 = arith.constant 92 : i8
    cf.cond_br %156, ^bb1(%c92_i8_40 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %c65535_i256 = arith.constant 65535 : i256
    %157 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %158 = llvm.load %157 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %158 : i256, !llvm.ptr
    %159 = llvm.getelementptr %158[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %159, %157 : !llvm.ptr, !llvm.ptr
    %160 = llvm.load %9 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %161 = arith.addi %160, %c-6_i64 : i64
    llvm.store %161, %9 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %162 = arith.cmpi ult, %160, %c7_i64 : i64
    %c91_i8_41 = arith.constant 91 : i8
    cf.cond_br %162, ^bb1(%c91_i8_41 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %163 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> !llvm.ptr
    %165 = llvm.getelementptr %164[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %166 = llvm.load %165 : !llvm.ptr -> i256
    llvm.store %165, %163 : !llvm.ptr, !llvm.ptr
    %167 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %168 = llvm.load %167 : !llvm.ptr -> !llvm.ptr
    %169 = llvm.getelementptr %168[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %170 = llvm.load %169 : !llvm.ptr -> i256
    llvm.store %169, %167 : !llvm.ptr, !llvm.ptr
    %171 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %172 = llvm.load %171 : !llvm.ptr -> !llvm.ptr
    %173 = llvm.getelementptr %172[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %174 = llvm.load %173 : !llvm.ptr -> i256
    llvm.store %173, %171 : !llvm.ptr, !llvm.ptr
    %175 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %176 = llvm.load %175 : !llvm.ptr -> !llvm.ptr
    %177 = llvm.getelementptr %176[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %178 = llvm.load %177 : !llvm.ptr -> i256
    llvm.store %177, %175 : !llvm.ptr, !llvm.ptr
    %179 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %180 = llvm.load %179 : !llvm.ptr -> !llvm.ptr
    %181 = llvm.getelementptr %180[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %182 = llvm.load %181 : !llvm.ptr -> i256
    llvm.store %181, %179 : !llvm.ptr, !llvm.ptr
    %183 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> !llvm.ptr
    %185 = llvm.getelementptr %184[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %186 = llvm.load %185 : !llvm.ptr -> i256
    llvm.store %185, %183 : !llvm.ptr, !llvm.ptr
    %187 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %188 = llvm.load %187 : !llvm.ptr -> !llvm.ptr
    %189 = llvm.getelementptr %188[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %190 = llvm.load %189 : !llvm.ptr -> i256
    llvm.store %189, %187 : !llvm.ptr, !llvm.ptr
    %191 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %192 = llvm.load %191 : !llvm.ptr -> i1
    %c0_i256_42 = arith.constant 0 : i256
    %193 = arith.cmpi ne, %174, %c0_i256_42 : i256
    %194 = arith.andi %192, %193 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %194, ^bb1(%c86_i8 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %195 = arith.trunci %166 : i256 to i64
    %196 = arith.trunci %178 : i256 to i64
    %197 = arith.trunci %182 : i256 to i64
    %198 = arith.trunci %186 : i256 to i64
    %199 = arith.trunci %190 : i256 to i64
    %200 = arith.addi %196, %197 : i64
    %201 = arith.addi %198, %199 : i64
    %202 = arith.maxui %200, %201 : i64
    %c0_i64_43 = arith.constant 0 : i64
    %203 = arith.cmpi slt, %202, %c0_i64_43 : i64
    %c84_i8_44 = arith.constant 84 : i8
    cf.cond_br %203, ^bb1(%c84_i8_44 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %c31_i64_45 = arith.constant 31 : i64
    %c32_i64_46 = arith.constant 32 : i64
    %204 = arith.addi %202, %c31_i64_45 : i64
    %205 = arith.divui %204, %c32_i64_46 : i64
    %206 = arith.muli %205, %c32_i64_46 : i64
    %207 = call @dora_fn_extend_memory(%arg0, %206) : (!llvm.ptr, i64) -> !llvm.ptr
    %208 = llvm.getelementptr %207[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %209 = llvm.load %208 : !llvm.ptr -> !llvm.ptr
    %210 = llvm.getelementptr %207[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %211 = llvm.load %210 : !llvm.ptr -> i8
    %c0_i8_47 = arith.constant 0 : i8
    %212 = arith.cmpi ne, %211, %c0_i8_47 : i8
    cf.cond_br %212, ^bb1(%211 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %213 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %209, %213 : !llvm.ptr, !llvm.ptr
    %214 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %206, %214 : i64, !llvm.ptr
    %215 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %216 = llvm.load %215 : !llvm.ptr -> i64
    %c1_i256_48 = arith.constant 1 : i256
    %217 = llvm.alloca %c1_i256_48 x i256 : (i256) -> !llvm.ptr
    llvm.store %174, %217 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_49 = arith.constant 1 : i256
    %218 = llvm.alloca %c1_i256_49 x i256 : (i256) -> !llvm.ptr
    llvm.store %170, %218 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_50 = arith.constant 1 : i64
    %219 = llvm.alloca %c1_i64_50 x i64 : (i64) -> !llvm.ptr
    %c0_i8_51 = arith.constant 0 : i8
    %220 = call @dora_fn_call(%arg0, %195, %218, %217, %196, %197, %198, %199, %216, %219, %c0_i8_51) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %221 = llvm.getelementptr %220[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %222 = llvm.load %221 : !llvm.ptr -> i8
    %223 = llvm.load %219 : !llvm.ptr -> i64
    %224 = arith.extui %222 : i8 to i256
    %225 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %226 = llvm.load %225 : !llvm.ptr -> !llvm.ptr
    llvm.store %224, %226 : i256, !llvm.ptr
    %227 = llvm.getelementptr %226[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %227, %225 : !llvm.ptr, !llvm.ptr
    %228 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %229 = arith.addi %228, %c1_i64_52 : i64
    llvm.store %229, %9 : i64, !llvm.ptr
    %230 = arith.cmpi ult, %c1024_i64, %229 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %230, ^bb1(%c92_i8_53 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %c0_i256_54 = arith.constant 0 : i256
    %231 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %232 = llvm.load %231 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_54, %232 : i256, !llvm.ptr
    %233 = llvm.getelementptr %232[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %233, %231 : !llvm.ptr, !llvm.ptr
    %234 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_55 = arith.constant 1 : i64
    %235 = arith.addi %234, %c1_i64_55 : i64
    llvm.store %235, %9 : i64, !llvm.ptr
    %236 = arith.cmpi ult, %c1024_i64, %235 : i64
    %c92_i8_56 = arith.constant 92 : i8
    cf.cond_br %236, ^bb1(%c92_i8_56 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %c0_i256_57 = arith.constant 0 : i256
    %237 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_57, %238 : i256, !llvm.ptr
    %239 = llvm.getelementptr %238[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %239, %237 : !llvm.ptr, !llvm.ptr
    %240 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %241 = arith.addi %240, %c1_i64_58 : i64
    llvm.store %241, %9 : i64, !llvm.ptr
    %242 = arith.cmpi ult, %c1024_i64, %241 : i64
    %c92_i8_59 = arith.constant 92 : i8
    cf.cond_br %242, ^bb1(%c92_i8_59 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c32_i256 = arith.constant 32 : i256
    %243 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %244 = llvm.load %243 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %244 : i256, !llvm.ptr
    %245 = llvm.getelementptr %244[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %245, %243 : !llvm.ptr, !llvm.ptr
    %246 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_60 = arith.constant 1 : i64
    %247 = arith.addi %246, %c1_i64_60 : i64
    llvm.store %247, %9 : i64, !llvm.ptr
    %248 = arith.cmpi ult, %c1024_i64, %247 : i64
    %c92_i8_61 = arith.constant 92 : i8
    cf.cond_br %248, ^bb1(%c92_i8_61 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c0_i256_62 = arith.constant 0 : i256
    %249 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_62, %250 : i256, !llvm.ptr
    %251 = llvm.getelementptr %250[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %251, %249 : !llvm.ptr, !llvm.ptr
    %252 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_63 = arith.constant 1 : i64
    %253 = arith.addi %252, %c1_i64_63 : i64
    llvm.store %253, %9 : i64, !llvm.ptr
    %254 = arith.cmpi ult, %c1024_i64, %253 : i64
    %c92_i8_64 = arith.constant 92 : i8
    cf.cond_br %254, ^bb1(%c92_i8_64 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %c0_i256_65 = arith.constant 0 : i256
    %255 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %256 = llvm.load %255 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_65, %256 : i256, !llvm.ptr
    %257 = llvm.getelementptr %256[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %257, %255 : !llvm.ptr, !llvm.ptr
    %258 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_66 = arith.constant 1 : i64
    %259 = arith.addi %258, %c1_i64_66 : i64
    llvm.store %259, %9 : i64, !llvm.ptr
    %260 = arith.cmpi ult, %c1024_i64, %259 : i64
    %c92_i8_67 = arith.constant 92 : i8
    cf.cond_br %260, ^bb1(%c92_i8_67 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %261 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %262 = llvm.load %261 : !llvm.ptr -> !llvm.ptr
    %263 = llvm.getelementptr %262[-7] : (!llvm.ptr) -> !llvm.ptr, i256
    %264 = llvm.load %263 : !llvm.ptr -> i256
    %265 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %266 = llvm.load %265 : !llvm.ptr -> !llvm.ptr
    llvm.store %264, %266 : i256, !llvm.ptr
    %267 = llvm.getelementptr %266[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %267, %265 : !llvm.ptr, !llvm.ptr
    %268 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_68 = arith.constant 1 : i64
    %269 = arith.addi %268, %c1_i64_68 : i64
    llvm.store %269, %9 : i64, !llvm.ptr
    %270 = arith.cmpi ult, %c1024_i64, %269 : i64
    %c92_i8_69 = arith.constant 92 : i8
    cf.cond_br %270, ^bb1(%c92_i8_69 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c65535_i256_70 = arith.constant 65535 : i256
    %271 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %272 = llvm.load %271 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_70, %272 : i256, !llvm.ptr
    %273 = llvm.getelementptr %272[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %273, %271 : !llvm.ptr, !llvm.ptr
    %274 = llvm.load %9 : !llvm.ptr -> i64
    %c-6_i64_71 = arith.constant -6 : i64
    %275 = arith.addi %274, %c-6_i64_71 : i64
    llvm.store %275, %9 : i64, !llvm.ptr
    %c7_i64_72 = arith.constant 7 : i64
    %276 = arith.cmpi ult, %274, %c7_i64_72 : i64
    %c91_i8_73 = arith.constant 91 : i8
    cf.cond_br %276, ^bb1(%c91_i8_73 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %277 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %278 = llvm.load %277 : !llvm.ptr -> !llvm.ptr
    %279 = llvm.getelementptr %278[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %280 = llvm.load %279 : !llvm.ptr -> i256
    llvm.store %279, %277 : !llvm.ptr, !llvm.ptr
    %281 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %282 = llvm.load %281 : !llvm.ptr -> !llvm.ptr
    %283 = llvm.getelementptr %282[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %284 = llvm.load %283 : !llvm.ptr -> i256
    llvm.store %283, %281 : !llvm.ptr, !llvm.ptr
    %285 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %286 = llvm.load %285 : !llvm.ptr -> !llvm.ptr
    %287 = llvm.getelementptr %286[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %288 = llvm.load %287 : !llvm.ptr -> i256
    llvm.store %287, %285 : !llvm.ptr, !llvm.ptr
    %289 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %290 = llvm.load %289 : !llvm.ptr -> !llvm.ptr
    %291 = llvm.getelementptr %290[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %292 = llvm.load %291 : !llvm.ptr -> i256
    llvm.store %291, %289 : !llvm.ptr, !llvm.ptr
    %293 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %294 = llvm.load %293 : !llvm.ptr -> !llvm.ptr
    %295 = llvm.getelementptr %294[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %296 = llvm.load %295 : !llvm.ptr -> i256
    llvm.store %295, %293 : !llvm.ptr, !llvm.ptr
    %297 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %298 = llvm.load %297 : !llvm.ptr -> !llvm.ptr
    %299 = llvm.getelementptr %298[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %300 = llvm.load %299 : !llvm.ptr -> i256
    llvm.store %299, %297 : !llvm.ptr, !llvm.ptr
    %301 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %302 = llvm.load %301 : !llvm.ptr -> !llvm.ptr
    %303 = llvm.getelementptr %302[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %304 = llvm.load %303 : !llvm.ptr -> i256
    llvm.store %303, %301 : !llvm.ptr, !llvm.ptr
    %305 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %306 = llvm.load %305 : !llvm.ptr -> i1
    %c0_i256_74 = arith.constant 0 : i256
    %307 = arith.cmpi ne, %288, %c0_i256_74 : i256
    %308 = arith.andi %306, %307 : i1
    %c86_i8_75 = arith.constant 86 : i8
    cf.cond_br %308, ^bb1(%c86_i8_75 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %309 = arith.trunci %280 : i256 to i64
    %310 = arith.trunci %292 : i256 to i64
    %311 = arith.trunci %296 : i256 to i64
    %312 = arith.trunci %300 : i256 to i64
    %313 = arith.trunci %304 : i256 to i64
    %314 = arith.addi %310, %311 : i64
    %315 = arith.addi %312, %313 : i64
    %316 = arith.maxui %314, %315 : i64
    %c0_i64_76 = arith.constant 0 : i64
    %317 = arith.cmpi slt, %316, %c0_i64_76 : i64
    %c84_i8_77 = arith.constant 84 : i8
    cf.cond_br %317, ^bb1(%c84_i8_77 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %c31_i64_78 = arith.constant 31 : i64
    %c32_i64_79 = arith.constant 32 : i64
    %318 = arith.addi %316, %c31_i64_78 : i64
    %319 = arith.divui %318, %c32_i64_79 : i64
    %320 = arith.muli %319, %c32_i64_79 : i64
    %321 = call @dora_fn_extend_memory(%arg0, %320) : (!llvm.ptr, i64) -> !llvm.ptr
    %322 = llvm.getelementptr %321[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %323 = llvm.load %322 : !llvm.ptr -> !llvm.ptr
    %324 = llvm.getelementptr %321[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %325 = llvm.load %324 : !llvm.ptr -> i8
    %c0_i8_80 = arith.constant 0 : i8
    %326 = arith.cmpi ne, %325, %c0_i8_80 : i8
    cf.cond_br %326, ^bb1(%325 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %327 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %323, %327 : !llvm.ptr, !llvm.ptr
    %328 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %320, %328 : i64, !llvm.ptr
    %329 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %330 = llvm.load %329 : !llvm.ptr -> i64
    %c1_i256_81 = arith.constant 1 : i256
    %331 = llvm.alloca %c1_i256_81 x i256 : (i256) -> !llvm.ptr
    llvm.store %288, %331 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_82 = arith.constant 1 : i256
    %332 = llvm.alloca %c1_i256_82 x i256 : (i256) -> !llvm.ptr
    llvm.store %284, %332 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_83 = arith.constant 1 : i64
    %333 = llvm.alloca %c1_i64_83 x i64 : (i64) -> !llvm.ptr
    %c0_i8_84 = arith.constant 0 : i8
    %334 = call @dora_fn_call(%arg0, %309, %332, %331, %310, %311, %312, %313, %330, %333, %c0_i8_84) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %335 = llvm.getelementptr %334[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %336 = llvm.load %335 : !llvm.ptr -> i8
    %337 = llvm.load %333 : !llvm.ptr -> i64
    %338 = arith.extui %336 : i8 to i256
    %339 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %340 = llvm.load %339 : !llvm.ptr -> !llvm.ptr
    llvm.store %338, %340 : i256, !llvm.ptr
    %341 = llvm.getelementptr %340[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %341, %339 : !llvm.ptr, !llvm.ptr
    cf.br ^bb37
  ^bb37:  // pred: ^bb36
    %c0_i64_85 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %342 = call @dora_fn_write_result(%arg0, %c0_i64_85, %c0_i64_85, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
