---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 30 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb12, ^bb13, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb28, ^bb29, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb38, ^bb39, ^bb41, ^bb42, ^bb45, ^bb48, ^bb49, ^bb51, ^bb54, ^bb55
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c10000_i256 = arith.constant 10000 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10000_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c4096_i256 = arith.constant 4096 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4096_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb13
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb12
    %c1_i256 = arith.constant 1 : i256
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256, %36 : i256, !llvm.ptr
    %37 = llvm.getelementptr %36[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb12:  // pred: ^bb14
    %38 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_7 = arith.constant 1024 : i64
    %39 = llvm.load %38 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %40 = arith.addi %39, %c1_i64_8 : i64
    llvm.store %40, %38 : i64, !llvm.ptr
    %41 = arith.cmpi ult, %c1024_i64_7, %40 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %41, ^bb1(%c92_i8_9 : i8), ^bb11
  ^bb13:  // pred: ^bb7
    %42 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %43 = llvm.load %42 : !llvm.ptr -> i64
    %c3_i64_10 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %44 = arith.cmpi uge, %43, %c3_i64_10 : i64
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %44, ^bb14, ^bb1(%c80_i8_11 : i8)
  ^bb14:  // pred: ^bb13
    %45 = arith.subi %43, %c3_i64_10 : i64
    llvm.store %45, %42 : i64, !llvm.ptr
    cf.br ^bb12
  ^bb15:  // pred: ^bb16
    %c32_i256 = arith.constant 32 : i256
    %46 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %47 = llvm.load %46 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %47 : i256, !llvm.ptr
    %48 = llvm.getelementptr %47[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %48, %46 : !llvm.ptr, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %49 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_12 = arith.constant 1024 : i64
    %50 = llvm.load %49 : !llvm.ptr -> i64
    %c1_i64_13 = arith.constant 1 : i64
    %51 = arith.addi %50, %c1_i64_13 : i64
    llvm.store %51, %49 : i64, !llvm.ptr
    %52 = arith.cmpi ult, %c1024_i64_12, %51 : i64
    %c92_i8_14 = arith.constant 92 : i8
    cf.cond_br %52, ^bb1(%c92_i8_14 : i8), ^bb15
  ^bb17:  // pred: ^bb11
    %53 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %c3_i64_15 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %55 = arith.cmpi uge, %54, %c3_i64_15 : i64
    %c80_i8_16 = arith.constant 80 : i8
    cf.cond_br %55, ^bb18, ^bb1(%c80_i8_16 : i8)
  ^bb18:  // pred: ^bb17
    %56 = arith.subi %54, %c3_i64_15 : i64
    llvm.store %56, %53 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c32_i256_17 = arith.constant 32 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_17, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %60 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %61 = llvm.load %60 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_19 : i64
    llvm.store %62, %60 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64_18, %62 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_20 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %64 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %c3_i64_21 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %66 = arith.cmpi uge, %65, %c3_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %66, ^bb22, ^bb1(%c80_i8_22 : i8)
  ^bb22:  // pred: ^bb21
    %67 = arith.subi %65, %c3_i64_21 : i64
    llvm.store %67, %64 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c64_i256 = arith.constant 64 : i256
    %68 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %69 = llvm.load %68 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %69 : i256, !llvm.ptr
    %70 = llvm.getelementptr %69[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %70, %68 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb24:  // pred: ^bb26
    %71 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %73 = arith.addi %72, %c1_i64_24 : i64
    llvm.store %73, %71 : i64, !llvm.ptr
    %74 = arith.cmpi ult, %c1024_i64_23, %73 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %74, ^bb1(%c92_i8_25 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %75 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %77 = arith.cmpi uge, %76, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %77, ^bb26, ^bb1(%c80_i8_27 : i8)
  ^bb26:  // pred: ^bb25
    %78 = arith.subi %76, %c3_i64_26 : i64
    llvm.store %78, %75 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb28
    %c64_i256_28 = arith.constant 64 : i256
    %79 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256_28, %80 : i256, !llvm.ptr
    %81 = llvm.getelementptr %80[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %81, %79 : !llvm.ptr, !llvm.ptr
    cf.br ^bb42
  ^bb28:  // pred: ^bb30
    %82 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_29 = arith.constant 1024 : i64
    %83 = llvm.load %82 : !llvm.ptr -> i64
    %c1_i64_30 = arith.constant 1 : i64
    %84 = arith.addi %83, %c1_i64_30 : i64
    llvm.store %84, %82 : i64, !llvm.ptr
    %85 = arith.cmpi ult, %c1024_i64_29, %84 : i64
    %c92_i8_31 = arith.constant 92 : i8
    cf.cond_br %85, ^bb1(%c92_i8_31 : i8), ^bb27
  ^bb29:  // pred: ^bb23
    %86 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %87 = llvm.load %86 : !llvm.ptr -> i64
    %c3_i64_32 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %88 = arith.cmpi uge, %87, %c3_i64_32 : i64
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %88, ^bb30, ^bb1(%c80_i8_33 : i8)
  ^bb30:  // pred: ^bb29
    %89 = arith.subi %87, %c3_i64_32 : i64
    llvm.store %89, %86 : i64, !llvm.ptr
    cf.br ^bb28
  ^bb31:  // pred: ^bb41
    %90 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %91 = llvm.load %90 : !llvm.ptr -> !llvm.ptr
    %92 = llvm.getelementptr %91[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %93 = llvm.load %92 : !llvm.ptr -> i256
    llvm.store %92, %90 : !llvm.ptr, !llvm.ptr
    %94 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %95 = llvm.load %94 : !llvm.ptr -> !llvm.ptr
    %96 = llvm.getelementptr %95[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %97 = llvm.load %96 : !llvm.ptr -> i256
    llvm.store %96, %94 : !llvm.ptr, !llvm.ptr
    %98 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> !llvm.ptr
    %100 = llvm.getelementptr %99[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %101 = llvm.load %100 : !llvm.ptr -> i256
    llvm.store %100, %98 : !llvm.ptr, !llvm.ptr
    %102 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %103 = llvm.load %102 : !llvm.ptr -> !llvm.ptr
    %104 = llvm.getelementptr %103[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %105 = llvm.load %104 : !llvm.ptr -> i256
    llvm.store %104, %102 : !llvm.ptr, !llvm.ptr
    %106 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> !llvm.ptr
    %108 = llvm.getelementptr %107[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %109 = llvm.load %108 : !llvm.ptr -> i256
    llvm.store %108, %106 : !llvm.ptr, !llvm.ptr
    %110 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> !llvm.ptr
    %112 = llvm.getelementptr %111[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %113 = llvm.load %112 : !llvm.ptr -> i256
    llvm.store %112, %110 : !llvm.ptr, !llvm.ptr
    %114 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> !llvm.ptr
    %116 = llvm.getelementptr %115[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %117 = llvm.load %116 : !llvm.ptr -> i256
    llvm.store %116, %114 : !llvm.ptr, !llvm.ptr
    %118 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i1
    %c0_i256 = arith.constant 0 : i256
    %120 = arith.cmpi ne, %101, %c0_i256 : i256
    %121 = arith.andi %119, %120 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %121, ^bb1(%c86_i8 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %122 = arith.trunci %105 : i256 to i64
    %c0_i64_34 = arith.constant 0 : i64
    %123 = arith.cmpi slt, %122, %c0_i64_34 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %123, ^bb1(%c84_i8 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %124 = arith.trunci %109 : i256 to i64
    %c0_i64_35 = arith.constant 0 : i64
    %125 = arith.cmpi slt, %124, %c0_i64_35 : i64
    %c84_i8_36 = arith.constant 84 : i8
    cf.cond_br %125, ^bb1(%c84_i8_36 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %126 = arith.trunci %113 : i256 to i64
    %c0_i64_37 = arith.constant 0 : i64
    %127 = arith.cmpi slt, %126, %c0_i64_37 : i64
    %c84_i8_38 = arith.constant 84 : i8
    cf.cond_br %127, ^bb1(%c84_i8_38 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %128 = arith.trunci %117 : i256 to i64
    %c0_i64_39 = arith.constant 0 : i64
    %129 = arith.cmpi slt, %128, %c0_i64_39 : i64
    %c84_i8_40 = arith.constant 84 : i8
    cf.cond_br %129, ^bb1(%c84_i8_40 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %c0_i64_41 = arith.constant 0 : i64
    %130 = arith.cmpi ne, %124, %c0_i64_41 : i64
    cf.cond_br %130, ^bb45, ^bb37
  ^bb37:  // 2 preds: ^bb36, ^bb47
    %c0_i64_42 = arith.constant 0 : i64
    %131 = arith.cmpi ne, %128, %c0_i64_42 : i64
    cf.cond_br %131, ^bb51, ^bb38
  ^bb38:  // 2 preds: ^bb37, ^bb53
    %132 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> i64
    %c1_i256_43 = arith.constant 1 : i256
    %134 = llvm.alloca %c1_i256_43 x i256 : (i256) -> !llvm.ptr
    llvm.store %101, %134 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_44 = arith.constant 1 : i256
    %135 = llvm.alloca %c1_i256_44 x i256 : (i256) -> !llvm.ptr
    llvm.store %93, %135 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_45 = arith.constant 1 : i256
    %136 = llvm.alloca %c1_i256_45 x i256 : (i256) -> !llvm.ptr
    llvm.store %97, %136 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i8 = arith.constant 0 : i8
    %137 = call @dora_fn_call(%arg0, %135, %136, %134, %122, %124, %126, %128, %133, %c0_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %138 = llvm.getelementptr %137[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %139 = llvm.load %138 : !llvm.ptr -> i8
    %140 = llvm.getelementptr %137[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %141 = llvm.load %140 : !llvm.ptr -> i8
    %c0_i8_46 = arith.constant 0 : i8
    %142 = arith.cmpi ne, %141, %c0_i8_46 : i8
    cf.cond_br %142, ^bb1(%141 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %143 = llvm.getelementptr %137[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %144 = llvm.load %143 : !llvm.ptr -> i64
    %145 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> i64
    %147 = arith.cmpi ult, %146, %144 : i64
    scf.if %147 {
    } else {
      %224 = arith.subi %146, %144 : i64
      llvm.store %224, %145 : i64, !llvm.ptr
    }
    %c80_i8_47 = arith.constant 80 : i8
    cf.cond_br %147, ^bb1(%c80_i8_47 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %148 = arith.extui %139 : i8 to i256
    %149 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> !llvm.ptr
    llvm.store %148, %150 : i256, !llvm.ptr
    %151 = llvm.getelementptr %150[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %151, %149 : !llvm.ptr, !llvm.ptr
    cf.br ^bb44
  ^bb41:  // pred: ^bb43
    %152 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_48 = arith.constant 1024 : i64
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %154 = arith.addi %153, %c-6_i64 : i64
    llvm.store %154, %152 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %155 = arith.cmpi ult, %153, %c7_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %155, ^bb1(%c91_i8 : i8), ^bb31
  ^bb42:  // pred: ^bb27
    %156 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> i64
    %c0_i64_49 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %158 = arith.cmpi uge, %157, %c0_i64_49 : i64
    %c80_i8_50 = arith.constant 80 : i8
    cf.cond_br %158, ^bb43, ^bb1(%c80_i8_50 : i8)
  ^bb43:  // pred: ^bb42
    %159 = arith.subi %157, %c0_i64_49 : i64
    llvm.store %159, %156 : i64, !llvm.ptr
    cf.br ^bb41
  ^bb44:  // pred: ^bb40
    %c0_i64_51 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %160 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_51, %c0_i64_51, %161, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb45:  // pred: ^bb36
    %162 = arith.addi %122, %124 : i64
    %c0_i64_52 = arith.constant 0 : i64
    %163 = arith.cmpi slt, %162, %c0_i64_52 : i64
    %c84_i8_53 = arith.constant 84 : i8
    cf.cond_br %163, ^bb1(%c84_i8_53 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c31_i64 = arith.constant 31 : i64
    %c32_i64 = arith.constant 32 : i64
    %164 = arith.addi %162, %c31_i64 : i64
    %165 = arith.divui %164, %c32_i64 : i64
    %c32_i64_54 = arith.constant 32 : i64
    %166 = arith.muli %165, %c32_i64_54 : i64
    %167 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %168 = llvm.load %167 : !llvm.ptr -> i64
    %c31_i64_55 = arith.constant 31 : i64
    %c32_i64_56 = arith.constant 32 : i64
    %169 = arith.addi %168, %c31_i64_55 : i64
    %170 = arith.divui %169, %c32_i64_56 : i64
    %171 = arith.muli %170, %c32_i64_54 : i64
    %172 = arith.cmpi ult, %171, %166 : i64
    cf.cond_br %172, ^bb48, ^bb47
  ^bb47:  // 2 preds: ^bb46, ^bb50
    cf.br ^bb37
  ^bb48:  // pred: ^bb46
    %c3_i64_57 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %173 = arith.muli %170, %170 : i64
    %174 = arith.divui %173, %c512_i64 : i64
    %175 = arith.muli %170, %c3_i64_57 : i64
    %176 = arith.addi %174, %175 : i64
    %c3_i64_58 = arith.constant 3 : i64
    %c512_i64_59 = arith.constant 512 : i64
    %177 = arith.muli %165, %165 : i64
    %178 = arith.divui %177, %c512_i64_59 : i64
    %179 = arith.muli %165, %c3_i64_58 : i64
    %180 = arith.addi %178, %179 : i64
    %181 = arith.subi %180, %176 : i64
    %182 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %183 = llvm.load %182 : !llvm.ptr -> i64
    %184 = arith.cmpi ult, %183, %181 : i64
    scf.if %184 {
    } else {
      %224 = arith.subi %183, %181 : i64
      llvm.store %224, %182 : i64, !llvm.ptr
    }
    %c80_i8_60 = arith.constant 80 : i8
    cf.cond_br %184, ^bb1(%c80_i8_60 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %185 = call @dora_fn_extend_memory(%arg0, %166) : (!llvm.ptr, i64) -> !llvm.ptr
    %186 = llvm.getelementptr %185[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %187 = llvm.load %186 : !llvm.ptr -> !llvm.ptr
    %188 = llvm.getelementptr %185[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %189 = llvm.load %188 : !llvm.ptr -> i8
    %c0_i8_61 = arith.constant 0 : i8
    %190 = arith.cmpi ne, %189, %c0_i8_61 : i8
    cf.cond_br %190, ^bb1(%189 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %191 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %187, %191 : !llvm.ptr, !llvm.ptr
    %192 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %166, %192 : i64, !llvm.ptr
    cf.br ^bb47
  ^bb51:  // pred: ^bb37
    %193 = arith.addi %126, %128 : i64
    %c0_i64_62 = arith.constant 0 : i64
    %194 = arith.cmpi slt, %193, %c0_i64_62 : i64
    %c84_i8_63 = arith.constant 84 : i8
    cf.cond_br %194, ^bb1(%c84_i8_63 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %c31_i64_64 = arith.constant 31 : i64
    %c32_i64_65 = arith.constant 32 : i64
    %195 = arith.addi %193, %c31_i64_64 : i64
    %196 = arith.divui %195, %c32_i64_65 : i64
    %c32_i64_66 = arith.constant 32 : i64
    %197 = arith.muli %196, %c32_i64_66 : i64
    %198 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %199 = llvm.load %198 : !llvm.ptr -> i64
    %c31_i64_67 = arith.constant 31 : i64
    %c32_i64_68 = arith.constant 32 : i64
    %200 = arith.addi %199, %c31_i64_67 : i64
    %201 = arith.divui %200, %c32_i64_68 : i64
    %202 = arith.muli %201, %c32_i64_66 : i64
    %203 = arith.cmpi ult, %202, %197 : i64
    cf.cond_br %203, ^bb54, ^bb53
  ^bb53:  // 2 preds: ^bb52, ^bb56
    cf.br ^bb38
  ^bb54:  // pred: ^bb52
    %c3_i64_69 = arith.constant 3 : i64
    %c512_i64_70 = arith.constant 512 : i64
    %204 = arith.muli %201, %201 : i64
    %205 = arith.divui %204, %c512_i64_70 : i64
    %206 = arith.muli %201, %c3_i64_69 : i64
    %207 = arith.addi %205, %206 : i64
    %c3_i64_71 = arith.constant 3 : i64
    %c512_i64_72 = arith.constant 512 : i64
    %208 = arith.muli %196, %196 : i64
    %209 = arith.divui %208, %c512_i64_72 : i64
    %210 = arith.muli %196, %c3_i64_71 : i64
    %211 = arith.addi %209, %210 : i64
    %212 = arith.subi %211, %207 : i64
    %213 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %214 = llvm.load %213 : !llvm.ptr -> i64
    %215 = arith.cmpi ult, %214, %212 : i64
    scf.if %215 {
    } else {
      %224 = arith.subi %214, %212 : i64
      llvm.store %224, %213 : i64, !llvm.ptr
    }
    %c80_i8_73 = arith.constant 80 : i8
    cf.cond_br %215, ^bb1(%c80_i8_73 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %216 = call @dora_fn_extend_memory(%arg0, %197) : (!llvm.ptr, i64) -> !llvm.ptr
    %217 = llvm.getelementptr %216[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %218 = llvm.load %217 : !llvm.ptr -> !llvm.ptr
    %219 = llvm.getelementptr %216[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %220 = llvm.load %219 : !llvm.ptr -> i8
    %c0_i8_74 = arith.constant 0 : i8
    %221 = arith.cmpi ne, %220, %c0_i8_74 : i8
    cf.cond_br %221, ^bb1(%220 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %222 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %218, %222 : !llvm.ptr, !llvm.ptr
    %223 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %197, %223 : i64, !llvm.ptr
    cf.br ^bb53
  }
}
