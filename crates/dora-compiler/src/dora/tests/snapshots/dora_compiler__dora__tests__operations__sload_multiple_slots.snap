---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 27 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb14, ^bb15, ^bb18, ^bb19, ^bb22, ^bb23, ^bb25, ^bb26, ^bb28, ^bb29, ^bb32, ^bb33, ^bb35, ^bb37, ^bb38, ^bb41, ^bb42, ^bb44, ^bb46, ^bb47
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c0_i256 = arith.constant 0 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c100_i256 = arith.constant 100 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c100_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb14
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %43 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %38, %43 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_7 = arith.constant 1 : i256
    %44 = llvm.alloca %c1_i256_7 x i256 : (i256) -> !llvm.ptr
    llvm.store %42, %44 {alignment = 1 : i64} : i256, !llvm.ptr
    %45 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %46 = llvm.load %45 : !llvm.ptr -> i64
    %47 = call @dora_fn_sstore(%arg0, %43, %44, %46) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
    %48 = llvm.getelementptr %47[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %49 = llvm.load %48 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %50 = arith.cmpi ne, %49, %c0_i8 : i8
    cf.cond_br %50, ^bb1(%49 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %51 = llvm.getelementptr %47[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %53 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %55 = arith.cmpi ult, %54, %52 : i64
    scf.if %55 {
    } else {
      %187 = arith.subi %54, %52 : i64
      llvm.store %187, %53 : i64, !llvm.ptr
    }
    %c80_i8_8 = arith.constant 80 : i8
    cf.cond_br %55, ^bb1(%c80_i8_8 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    cf.br ^bb19
  ^bb14:  // pred: ^bb16
    %56 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_9 = arith.constant 1024 : i64
    %57 = llvm.load %56 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %58 = arith.addi %57, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    llvm.store %58, %56 : i64, !llvm.ptr
    %59 = arith.cmpi ult, %57, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %59, ^bb1(%c91_i8 : i8), ^bb11
  ^bb15:  // pred: ^bb7
    %60 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %61 = llvm.load %60 : !llvm.ptr -> i64
    %c0_i64_10 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %62 = arith.cmpi uge, %61, %c0_i64_10 : i64
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %62, ^bb16, ^bb1(%c80_i8_11 : i8)
  ^bb16:  // pred: ^bb15
    %63 = arith.subi %61, %c0_i64_10 : i64
    llvm.store %63, %60 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb17:  // pred: ^bb18
    %c1_i256_12 = arith.constant 1 : i256
    %64 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_12, %65 : i256, !llvm.ptr
    %66 = llvm.getelementptr %65[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %66, %64 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb18:  // pred: ^bb20
    %67 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_13 = arith.constant 1024 : i64
    %68 = llvm.load %67 : !llvm.ptr -> i64
    %c1_i64_14 = arith.constant 1 : i64
    %69 = arith.addi %68, %c1_i64_14 : i64
    llvm.store %69, %67 : i64, !llvm.ptr
    %70 = arith.cmpi ult, %c1024_i64_13, %69 : i64
    %c92_i8_15 = arith.constant 92 : i8
    cf.cond_br %70, ^bb1(%c92_i8_15 : i8), ^bb17
  ^bb19:  // pred: ^bb13
    %71 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %73 = arith.cmpi uge, %72, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %73, ^bb20, ^bb1(%c80_i8_17 : i8)
  ^bb20:  // pred: ^bb19
    %74 = arith.subi %72, %c3_i64_16 : i64
    llvm.store %74, %71 : i64, !llvm.ptr
    cf.br ^bb18
  ^bb21:  // pred: ^bb22
    %c200_i256 = arith.constant 200 : i256
    %75 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> !llvm.ptr
    llvm.store %c200_i256, %76 : i256, !llvm.ptr
    %77 = llvm.getelementptr %76[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %77, %75 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb22:  // pred: ^bb24
    %78 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %79 = llvm.load %78 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %80 = arith.addi %79, %c1_i64_19 : i64
    llvm.store %80, %78 : i64, !llvm.ptr
    %81 = arith.cmpi ult, %c1024_i64_18, %80 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %81, ^bb1(%c92_i8_20 : i8), ^bb21
  ^bb23:  // pred: ^bb17
    %82 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %83 = llvm.load %82 : !llvm.ptr -> i64
    %c3_i64_21 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %84 = arith.cmpi uge, %83, %c3_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %84, ^bb24, ^bb1(%c80_i8_22 : i8)
  ^bb24:  // pred: ^bb23
    %85 = arith.subi %83, %c3_i64_21 : i64
    llvm.store %85, %82 : i64, !llvm.ptr
    cf.br ^bb22
  ^bb25:  // pred: ^bb28
    %86 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %87 = llvm.load %86 : !llvm.ptr -> !llvm.ptr
    %88 = llvm.getelementptr %87[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %89 = llvm.load %88 : !llvm.ptr -> i256
    llvm.store %88, %86 : !llvm.ptr, !llvm.ptr
    %90 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %91 = llvm.load %90 : !llvm.ptr -> !llvm.ptr
    %92 = llvm.getelementptr %91[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %93 = llvm.load %92 : !llvm.ptr -> i256
    llvm.store %92, %90 : !llvm.ptr, !llvm.ptr
    %c1_i256_23 = arith.constant 1 : i256
    %94 = llvm.alloca %c1_i256_23 x i256 : (i256) -> !llvm.ptr
    llvm.store %89, %94 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_24 = arith.constant 1 : i256
    %95 = llvm.alloca %c1_i256_24 x i256 : (i256) -> !llvm.ptr
    llvm.store %93, %95 {alignment = 1 : i64} : i256, !llvm.ptr
    %96 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %97 = llvm.load %96 : !llvm.ptr -> i64
    %98 = call @dora_fn_sstore(%arg0, %94, %95, %97) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
    %99 = llvm.getelementptr %98[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %100 = llvm.load %99 : !llvm.ptr -> i8
    %c0_i8_25 = arith.constant 0 : i8
    %101 = arith.cmpi ne, %100, %c0_i8_25 : i8
    cf.cond_br %101, ^bb1(%100 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %102 = llvm.getelementptr %98[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %103 = llvm.load %102 : !llvm.ptr -> i64
    %104 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> i64
    %106 = arith.cmpi ult, %105, %103 : i64
    scf.if %106 {
    } else {
      %187 = arith.subi %105, %103 : i64
      llvm.store %187, %104 : i64, !llvm.ptr
    }
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %106, ^bb1(%c80_i8_26 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    cf.br ^bb33
  ^bb28:  // pred: ^bb30
    %107 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_27 = arith.constant 1024 : i64
    %108 = llvm.load %107 : !llvm.ptr -> i64
    %c-2_i64_28 = arith.constant -2 : i64
    %109 = arith.addi %108, %c-2_i64_28 : i64
    %c2_i64_29 = arith.constant 2 : i64
    llvm.store %109, %107 : i64, !llvm.ptr
    %110 = arith.cmpi ult, %108, %c2_i64_29 : i64
    %c91_i8_30 = arith.constant 91 : i8
    cf.cond_br %110, ^bb1(%c91_i8_30 : i8), ^bb25
  ^bb29:  // pred: ^bb21
    %111 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> i64
    %c0_i64_31 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %113 = arith.cmpi uge, %112, %c0_i64_31 : i64
    %c80_i8_32 = arith.constant 80 : i8
    cf.cond_br %113, ^bb30, ^bb1(%c80_i8_32 : i8)
  ^bb30:  // pred: ^bb29
    %114 = arith.subi %112, %c0_i64_31 : i64
    llvm.store %114, %111 : i64, !llvm.ptr
    cf.br ^bb28
  ^bb31:  // pred: ^bb32
    %c0_i256_33 = arith.constant 0 : i256
    %115 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %116 = llvm.load %115 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_33, %116 : i256, !llvm.ptr
    %117 = llvm.getelementptr %116[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %117, %115 : !llvm.ptr, !llvm.ptr
    cf.br ^bb38
  ^bb32:  // pred: ^bb34
    %118 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_34 = arith.constant 1024 : i64
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c1_i64_35 = arith.constant 1 : i64
    %120 = arith.addi %119, %c1_i64_35 : i64
    llvm.store %120, %118 : i64, !llvm.ptr
    %121 = arith.cmpi ult, %c1024_i64_34, %120 : i64
    %c92_i8_36 = arith.constant 92 : i8
    cf.cond_br %121, ^bb1(%c92_i8_36 : i8), ^bb31
  ^bb33:  // pred: ^bb27
    %122 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %c3_i64_37 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %124 = arith.cmpi uge, %123, %c3_i64_37 : i64
    %c80_i8_38 = arith.constant 80 : i8
    cf.cond_br %124, ^bb34, ^bb1(%c80_i8_38 : i8)
  ^bb34:  // pred: ^bb33
    %125 = arith.subi %123, %c3_i64_37 : i64
    llvm.store %125, %122 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb37
    %126 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> !llvm.ptr
    %128 = llvm.getelementptr %127[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %129 = llvm.load %128 : !llvm.ptr -> i256
    llvm.store %128, %126 : !llvm.ptr, !llvm.ptr
    %c1_i256_39 = arith.constant 1 : i256
    %130 = llvm.alloca %c1_i256_39 x i256 : (i256) -> !llvm.ptr
    llvm.store %129, %130 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_40 = arith.constant 1 : i256
    %131 = llvm.alloca %c1_i256_40 x i256 : (i256) -> !llvm.ptr
    %132 = call @dora_fn_sload(%arg0, %130, %131) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %133 = llvm.getelementptr %132[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %134 = llvm.load %133 : !llvm.ptr -> i64
    %135 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> i64
    %137 = arith.cmpi ult, %136, %134 : i64
    scf.if %137 {
    } else {
      %187 = arith.subi %136, %134 : i64
      llvm.store %187, %135 : i64, !llvm.ptr
    }
    %c80_i8_41 = arith.constant 80 : i8
    cf.cond_br %137, ^bb1(%c80_i8_41 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %138 = llvm.load %131 : !llvm.ptr -> i256
    %139 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %140 = llvm.load %139 : !llvm.ptr -> !llvm.ptr
    llvm.store %138, %140 : i256, !llvm.ptr
    %141 = llvm.getelementptr %140[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %141, %139 : !llvm.ptr, !llvm.ptr
    cf.br ^bb42
  ^bb37:  // pred: ^bb39
    %142 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %143 = llvm.load %142 : !llvm.ptr -> i64
    %c0_i64_43 = arith.constant 0 : i64
    %144 = arith.addi %143, %c0_i64_43 : i64
    %c1_i64_44 = arith.constant 1 : i64
    llvm.store %144, %142 : i64, !llvm.ptr
    %145 = arith.cmpi ult, %143, %c1_i64_44 : i64
    %c91_i8_45 = arith.constant 91 : i8
    cf.cond_br %145, ^bb1(%c91_i8_45 : i8), ^bb35
  ^bb38:  // pred: ^bb31
    %146 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> i64
    %c0_i64_46 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %148 = arith.cmpi uge, %147, %c0_i64_46 : i64
    %c80_i8_47 = arith.constant 80 : i8
    cf.cond_br %148, ^bb39, ^bb1(%c80_i8_47 : i8)
  ^bb39:  // pred: ^bb38
    %149 = arith.subi %147, %c0_i64_46 : i64
    llvm.store %149, %146 : i64, !llvm.ptr
    cf.br ^bb37
  ^bb40:  // pred: ^bb41
    %c1_i256_48 = arith.constant 1 : i256
    %150 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %151 = llvm.load %150 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_48, %151 : i256, !llvm.ptr
    %152 = llvm.getelementptr %151[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %152, %150 : !llvm.ptr, !llvm.ptr
    cf.br ^bb47
  ^bb41:  // pred: ^bb43
    %153 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_49 = arith.constant 1024 : i64
    %154 = llvm.load %153 : !llvm.ptr -> i64
    %c1_i64_50 = arith.constant 1 : i64
    %155 = arith.addi %154, %c1_i64_50 : i64
    llvm.store %155, %153 : i64, !llvm.ptr
    %156 = arith.cmpi ult, %c1024_i64_49, %155 : i64
    %c92_i8_51 = arith.constant 92 : i8
    cf.cond_br %156, ^bb1(%c92_i8_51 : i8), ^bb40
  ^bb42:  // pred: ^bb36
    %157 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %158 = llvm.load %157 : !llvm.ptr -> i64
    %c3_i64_52 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %159 = arith.cmpi uge, %158, %c3_i64_52 : i64
    %c80_i8_53 = arith.constant 80 : i8
    cf.cond_br %159, ^bb43, ^bb1(%c80_i8_53 : i8)
  ^bb43:  // pred: ^bb42
    %160 = arith.subi %158, %c3_i64_52 : i64
    llvm.store %160, %157 : i64, !llvm.ptr
    cf.br ^bb41
  ^bb44:  // pred: ^bb46
    %161 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %162 = llvm.load %161 : !llvm.ptr -> !llvm.ptr
    %163 = llvm.getelementptr %162[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %164 = llvm.load %163 : !llvm.ptr -> i256
    llvm.store %163, %161 : !llvm.ptr, !llvm.ptr
    %c1_i256_54 = arith.constant 1 : i256
    %165 = llvm.alloca %c1_i256_54 x i256 : (i256) -> !llvm.ptr
    llvm.store %164, %165 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_55 = arith.constant 1 : i256
    %166 = llvm.alloca %c1_i256_55 x i256 : (i256) -> !llvm.ptr
    %167 = call @dora_fn_sload(%arg0, %165, %166) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %168 = llvm.getelementptr %167[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %169 = llvm.load %168 : !llvm.ptr -> i64
    %170 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> i64
    %172 = arith.cmpi ult, %171, %169 : i64
    scf.if %172 {
    } else {
      %187 = arith.subi %171, %169 : i64
      llvm.store %187, %170 : i64, !llvm.ptr
    }
    %c80_i8_56 = arith.constant 80 : i8
    cf.cond_br %172, ^bb1(%c80_i8_56 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %173 = llvm.load %166 : !llvm.ptr -> i256
    %174 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %175 = llvm.load %174 : !llvm.ptr -> !llvm.ptr
    llvm.store %173, %175 : i256, !llvm.ptr
    %176 = llvm.getelementptr %175[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %176, %174 : !llvm.ptr, !llvm.ptr
    cf.br ^bb49
  ^bb46:  // pred: ^bb48
    %177 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_57 = arith.constant 1024 : i64
    %178 = llvm.load %177 : !llvm.ptr -> i64
    %c0_i64_58 = arith.constant 0 : i64
    %179 = arith.addi %178, %c0_i64_58 : i64
    %c1_i64_59 = arith.constant 1 : i64
    llvm.store %179, %177 : i64, !llvm.ptr
    %180 = arith.cmpi ult, %178, %c1_i64_59 : i64
    %c91_i8_60 = arith.constant 91 : i8
    cf.cond_br %180, ^bb1(%c91_i8_60 : i8), ^bb44
  ^bb47:  // pred: ^bb40
    %181 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %182 = llvm.load %181 : !llvm.ptr -> i64
    %c0_i64_61 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %183 = arith.cmpi uge, %182, %c0_i64_61 : i64
    %c80_i8_62 = arith.constant 80 : i8
    cf.cond_br %183, ^bb48, ^bb1(%c80_i8_62 : i8)
  ^bb48:  // pred: ^bb47
    %184 = arith.subi %182, %c0_i64_61 : i64
    llvm.store %184, %181 : i64, !llvm.ptr
    cf.br ^bb46
  ^bb49:  // pred: ^bb45
    %c0_i64_63 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %185 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_63, %c0_i64_63, %186, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  }
}
