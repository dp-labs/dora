---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 23 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb24, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb38, ^bb39, ^bb42, ^bb43
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c0_i256 = arith.constant 0 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c100_i256 = arith.constant 100 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c100_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %45 = llvm.load %44 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %45, ^bb1(%c87_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c1_i256 = arith.constant 1 : i256
    %46 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %39, %46 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_7 = arith.constant 1 : i256
    %47 = llvm.alloca %c1_i256_7 x i256 : (i256) -> !llvm.ptr
    llvm.store %43, %47 {alignment = 1 : i64} : i256, !llvm.ptr
    %48 = call @dora_fn_sstore(%arg0, %46, %47) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %49 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_8 = arith.constant 1024 : i64
    %50 = llvm.load %49 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %51 = arith.addi %50, %c-2_i64 : i64
    llvm.store %51, %49 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %52 = arith.cmpi ult, %50, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %52, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %53 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %c0_i64_9 = arith.constant 0 : i64
    %55 = arith.cmpi uge, %54, %c0_i64_9 : i64
    %c80_i8_10 = arith.constant 80 : i8
    cf.cond_br %55, ^bb15, ^bb1(%c80_i8_10 : i8)
  ^bb15:  // pred: ^bb14
    %56 = arith.subi %54, %c0_i64_9 : i64
    llvm.store %56, %53 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c1_i256_11 = arith.constant 1 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_11, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %60 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_12 = arith.constant 1024 : i64
    %61 = llvm.load %60 : !llvm.ptr -> i64
    %c1_i64_13 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_13 : i64
    llvm.store %62, %60 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64_12, %62 : i64
    %c92_i8_14 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_14 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %64 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %c3_i64_15 = arith.constant 3 : i64
    %66 = arith.cmpi uge, %65, %c3_i64_15 : i64
    %c80_i8_16 = arith.constant 80 : i8
    cf.cond_br %66, ^bb19, ^bb1(%c80_i8_16 : i8)
  ^bb19:  // pred: ^bb18
    %67 = arith.subi %65, %c3_i64_15 : i64
    llvm.store %67, %64 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c200_i256 = arith.constant 200 : i256
    %68 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %69 = llvm.load %68 : !llvm.ptr -> !llvm.ptr
    llvm.store %c200_i256, %69 : i256, !llvm.ptr
    %70 = llvm.getelementptr %69[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %70, %68 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %71 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_17 = arith.constant 1024 : i64
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c1_i64_18 = arith.constant 1 : i64
    %73 = arith.addi %72, %c1_i64_18 : i64
    llvm.store %73, %71 : i64, !llvm.ptr
    %74 = arith.cmpi ult, %c1024_i64_17, %73 : i64
    %c92_i8_19 = arith.constant 92 : i8
    cf.cond_br %74, ^bb1(%c92_i8_19 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %75 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> i64
    %c3_i64_20 = arith.constant 3 : i64
    %77 = arith.cmpi uge, %76, %c3_i64_20 : i64
    %c80_i8_21 = arith.constant 80 : i8
    cf.cond_br %77, ^bb23, ^bb1(%c80_i8_21 : i8)
  ^bb23:  // pred: ^bb22
    %78 = arith.subi %76, %c3_i64_20 : i64
    llvm.store %78, %75 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %79 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> !llvm.ptr
    %81 = llvm.getelementptr %80[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %82 = llvm.load %81 : !llvm.ptr -> i256
    llvm.store %81, %79 : !llvm.ptr, !llvm.ptr
    %83 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> !llvm.ptr
    %85 = llvm.getelementptr %84[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %86 = llvm.load %85 : !llvm.ptr -> i256
    llvm.store %85, %83 : !llvm.ptr, !llvm.ptr
    %87 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> i1
    %c87_i8_22 = arith.constant 87 : i8
    cf.cond_br %88, ^bb1(%c87_i8_22 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %c1_i256_23 = arith.constant 1 : i256
    %89 = llvm.alloca %c1_i256_23 x i256 : (i256) -> !llvm.ptr
    llvm.store %82, %89 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_24 = arith.constant 1 : i256
    %90 = llvm.alloca %c1_i256_24 x i256 : (i256) -> !llvm.ptr
    llvm.store %86, %90 {alignment = 1 : i64} : i256, !llvm.ptr
    %91 = call @dora_fn_sstore(%arg0, %89, %90) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %92 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_25 = arith.constant 1024 : i64
    %93 = llvm.load %92 : !llvm.ptr -> i64
    %c-2_i64_26 = arith.constant -2 : i64
    %94 = arith.addi %93, %c-2_i64_26 : i64
    llvm.store %94, %92 : i64, !llvm.ptr
    %c2_i64_27 = arith.constant 2 : i64
    %95 = arith.cmpi ult, %93, %c2_i64_27 : i64
    %c91_i8_28 = arith.constant 91 : i8
    cf.cond_br %95, ^bb1(%c91_i8_28 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %96 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %97 = llvm.load %96 : !llvm.ptr -> i64
    %c0_i64_29 = arith.constant 0 : i64
    %98 = arith.cmpi uge, %97, %c0_i64_29 : i64
    %c80_i8_30 = arith.constant 80 : i8
    cf.cond_br %98, ^bb28, ^bb1(%c80_i8_30 : i8)
  ^bb28:  // pred: ^bb27
    %99 = arith.subi %97, %c0_i64_29 : i64
    llvm.store %99, %96 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c0_i256_31 = arith.constant 0 : i256
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_31, %101 : i256, !llvm.ptr
    %102 = llvm.getelementptr %101[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %103 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_32 = arith.constant 1024 : i64
    %104 = llvm.load %103 : !llvm.ptr -> i64
    %c1_i64_33 = arith.constant 1 : i64
    %105 = arith.addi %104, %c1_i64_33 : i64
    llvm.store %105, %103 : i64, !llvm.ptr
    %106 = arith.cmpi ult, %c1024_i64_32, %105 : i64
    %c92_i8_34 = arith.constant 92 : i8
    cf.cond_br %106, ^bb1(%c92_i8_34 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %107 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> i64
    %c3_i64_35 = arith.constant 3 : i64
    %109 = arith.cmpi uge, %108, %c3_i64_35 : i64
    %c80_i8_36 = arith.constant 80 : i8
    cf.cond_br %109, ^bb32, ^bb1(%c80_i8_36 : i8)
  ^bb32:  // pred: ^bb31
    %110 = arith.subi %108, %c3_i64_35 : i64
    llvm.store %110, %107 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %111 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> !llvm.ptr
    %113 = llvm.getelementptr %112[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %114 = llvm.load %113 : !llvm.ptr -> i256
    llvm.store %113, %111 : !llvm.ptr, !llvm.ptr
    %c1_i256_37 = arith.constant 1 : i256
    %115 = llvm.alloca %c1_i256_37 x i256 : (i256) -> !llvm.ptr
    llvm.store %114, %115 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_38 = arith.constant 1 : i256
    %116 = llvm.alloca %c1_i256_38 x i256 : (i256) -> !llvm.ptr
    %117 = call @dora_fn_sload(%arg0, %115, %116) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %118 = llvm.load %116 : !llvm.ptr -> i256
    %119 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %120 = llvm.load %119 : !llvm.ptr -> !llvm.ptr
    llvm.store %118, %120 : i256, !llvm.ptr
    %121 = llvm.getelementptr %120[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %121, %119 : !llvm.ptr, !llvm.ptr
    cf.br ^bb39
  ^bb34:  // pred: ^bb36
    %122 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_39 = arith.constant 1024 : i64
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %c0_i64_40 = arith.constant 0 : i64
    %124 = arith.addi %123, %c0_i64_40 : i64
    llvm.store %124, %122 : i64, !llvm.ptr
    %c1_i64_41 = arith.constant 1 : i64
    %125 = arith.cmpi ult, %123, %c1_i64_41 : i64
    %c91_i8_42 = arith.constant 91 : i8
    cf.cond_br %125, ^bb1(%c91_i8_42 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %126 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> i64
    %c0_i64_43 = arith.constant 0 : i64
    %128 = arith.cmpi uge, %127, %c0_i64_43 : i64
    %c80_i8_44 = arith.constant 80 : i8
    cf.cond_br %128, ^bb36, ^bb1(%c80_i8_44 : i8)
  ^bb36:  // pred: ^bb35
    %129 = arith.subi %127, %c0_i64_43 : i64
    llvm.store %129, %126 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb38
    %c1_i256_45 = arith.constant 1 : i256
    %130 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %131 = llvm.load %130 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_45, %131 : i256, !llvm.ptr
    %132 = llvm.getelementptr %131[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %132, %130 : !llvm.ptr, !llvm.ptr
    cf.br ^bb43
  ^bb38:  // pred: ^bb40
    %133 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_46 = arith.constant 1024 : i64
    %134 = llvm.load %133 : !llvm.ptr -> i64
    %c1_i64_47 = arith.constant 1 : i64
    %135 = arith.addi %134, %c1_i64_47 : i64
    llvm.store %135, %133 : i64, !llvm.ptr
    %136 = arith.cmpi ult, %c1024_i64_46, %135 : i64
    %c92_i8_48 = arith.constant 92 : i8
    cf.cond_br %136, ^bb1(%c92_i8_48 : i8), ^bb37
  ^bb39:  // pred: ^bb33
    %137 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %138 = llvm.load %137 : !llvm.ptr -> i64
    %c3_i64_49 = arith.constant 3 : i64
    %139 = arith.cmpi uge, %138, %c3_i64_49 : i64
    %c80_i8_50 = arith.constant 80 : i8
    cf.cond_br %139, ^bb40, ^bb1(%c80_i8_50 : i8)
  ^bb40:  // pred: ^bb39
    %140 = arith.subi %138, %c3_i64_49 : i64
    llvm.store %140, %137 : i64, !llvm.ptr
    cf.br ^bb38
  ^bb41:  // pred: ^bb42
    %141 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %142 = llvm.load %141 : !llvm.ptr -> !llvm.ptr
    %143 = llvm.getelementptr %142[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %144 = llvm.load %143 : !llvm.ptr -> i256
    llvm.store %143, %141 : !llvm.ptr, !llvm.ptr
    %c1_i256_51 = arith.constant 1 : i256
    %145 = llvm.alloca %c1_i256_51 x i256 : (i256) -> !llvm.ptr
    llvm.store %144, %145 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_52 = arith.constant 1 : i256
    %146 = llvm.alloca %c1_i256_52 x i256 : (i256) -> !llvm.ptr
    %147 = call @dora_fn_sload(%arg0, %145, %146) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %148 = llvm.load %146 : !llvm.ptr -> i256
    %149 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> !llvm.ptr
    llvm.store %148, %150 : i256, !llvm.ptr
    %151 = llvm.getelementptr %150[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %151, %149 : !llvm.ptr, !llvm.ptr
    cf.br ^bb45
  ^bb42:  // pred: ^bb44
    %152 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_53 = arith.constant 1024 : i64
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %c0_i64_54 = arith.constant 0 : i64
    %154 = arith.addi %153, %c0_i64_54 : i64
    llvm.store %154, %152 : i64, !llvm.ptr
    %c1_i64_55 = arith.constant 1 : i64
    %155 = arith.cmpi ult, %153, %c1_i64_55 : i64
    %c91_i8_56 = arith.constant 91 : i8
    cf.cond_br %155, ^bb1(%c91_i8_56 : i8), ^bb41
  ^bb43:  // pred: ^bb37
    %156 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> i64
    %c0_i64_57 = arith.constant 0 : i64
    %158 = arith.cmpi uge, %157, %c0_i64_57 : i64
    %c80_i8_58 = arith.constant 80 : i8
    cf.cond_br %158, ^bb44, ^bb1(%c80_i8_58 : i8)
  ^bb44:  // pred: ^bb43
    %159 = arith.subi %157, %c0_i64_57 : i64
    llvm.store %159, %156 : i64, !llvm.ptr
    cf.br ^bb42
  ^bb45:  // pred: ^bb41
    %c0_i64_59 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %160 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> i64
    %162 = call @dora_fn_write_result(%arg0, %c0_i64_59, %c0_i64_59, %161, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
