---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    %1 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %2 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %1, %2 : !llvm.ptr, !llvm.ptr
    %3 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %4 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %3, %4 : i64, !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %5 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%6: i8):  // 27 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb14, ^bb15, ^bb18, ^bb19, ^bb22, ^bb23, ^bb25, ^bb26, ^bb28, ^bb29, ^bb32, ^bb33, ^bb35, ^bb37, ^bb38, ^bb41, ^bb42, ^bb44, ^bb46, ^bb47
    %c0_i64_0 = arith.constant 0 : i64
    %7 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %8 = llvm.load %7 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %8, %6) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %6 : i8
  ^bb2(%9: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %9 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c0_i256 = arith.constant 0 : i256
    %10 = llvm.load %arg3 : !llvm.ptr -> i64
    %11 = llvm.getelementptr %arg2[%10] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %12 = arith.addi %10, %c1_i64 : i64
    llvm.store %12, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %11 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %13 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %14 = arith.addi %13, %c1_i64_1 : i64
    %15 = arith.cmpi ult, %c1024_i64, %14 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %15, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %16 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %18 = arith.cmpi uge, %17, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %18, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %19 = arith.subi %17, %c3_i64 : i64
    llvm.store %19, %16 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c100_i256 = arith.constant 100 : i256
    %20 = llvm.load %arg3 : !llvm.ptr -> i64
    %21 = llvm.getelementptr %arg2[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %22 = arith.addi %20, %c1_i64_2 : i64
    llvm.store %22, %arg3 : i64, !llvm.ptr
    llvm.store %c100_i256, %21 : i256, !llvm.ptr
    cf.br ^bb15
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %23 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %24 = arith.addi %23, %c1_i64_4 : i64
    %25 = arith.cmpi ult, %c1024_i64_3, %24 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %25, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %26 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %27 = llvm.load %26 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %28 = arith.cmpi uge, %27, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %28, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %29 = arith.subi %27, %c3_i64_6 : i64
    llvm.store %29, %26 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb14
    %30 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %31 = arith.subi %30, %c1_i64_8 : i64
    %32 = llvm.getelementptr %arg2[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %31, %arg3 : i64, !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i256
    %34 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_9 = arith.constant 1 : i64
    %35 = arith.subi %34, %c1_i64_9 : i64
    %36 = llvm.getelementptr %arg2[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %35, %arg3 : i64, !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> i256
    %c1_i256 = arith.constant 1 : i256
    %38 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %33, %38 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_10 = arith.constant 1 : i256
    %39 = llvm.alloca %c1_i256_10 x i256 : (i256) -> !llvm.ptr
    llvm.store %37, %39 {alignment = 1 : i64} : i256, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> i64
    %42 = call @dora_fn_sstore(%arg0, %38, %39, %41) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
    %43 = llvm.getelementptr %42[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %44 = llvm.load %43 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %45 = arith.cmpi ne, %44, %c0_i8 : i8
    cf.cond_br %45, ^bb1(%44 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %46 = llvm.getelementptr %42[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i64
    %48 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %50 = arith.cmpi ult, %49, %47 : i64
    scf.if %50 {
    } else {
      %174 = arith.subi %49, %47 : i64
      llvm.store %174, %48 : i64, !llvm.ptr
    }
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %50, ^bb1(%c80_i8_11 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    cf.br ^bb19
  ^bb14:  // pred: ^bb16
    %c1024_i64_12 = arith.constant 1024 : i64
    %51 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %52 = arith.addi %51, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %53 = arith.cmpi ult, %51, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %53, ^bb1(%c91_i8 : i8), ^bb11
  ^bb15:  // pred: ^bb7
    %54 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %55 = llvm.load %54 : !llvm.ptr -> i64
    %c0_i64_13 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %56 = arith.cmpi uge, %55, %c0_i64_13 : i64
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %56, ^bb16, ^bb1(%c80_i8_14 : i8)
  ^bb16:  // pred: ^bb15
    %57 = arith.subi %55, %c0_i64_13 : i64
    llvm.store %57, %54 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb17:  // pred: ^bb18
    %c1_i256_15 = arith.constant 1 : i256
    %58 = llvm.load %arg3 : !llvm.ptr -> i64
    %59 = llvm.getelementptr %arg2[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_16 = arith.constant 1 : i64
    %60 = arith.addi %58, %c1_i64_16 : i64
    llvm.store %60, %arg3 : i64, !llvm.ptr
    llvm.store %c1_i256_15, %59 : i256, !llvm.ptr
    cf.br ^bb23
  ^bb18:  // pred: ^bb20
    %c1024_i64_17 = arith.constant 1024 : i64
    %61 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_18 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_18 : i64
    %63 = arith.cmpi ult, %c1024_i64_17, %62 : i64
    %c92_i8_19 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_19 : i8), ^bb17
  ^bb19:  // pred: ^bb13
    %64 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %c3_i64_20 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %66 = arith.cmpi uge, %65, %c3_i64_20 : i64
    %c80_i8_21 = arith.constant 80 : i8
    cf.cond_br %66, ^bb20, ^bb1(%c80_i8_21 : i8)
  ^bb20:  // pred: ^bb19
    %67 = arith.subi %65, %c3_i64_20 : i64
    llvm.store %67, %64 : i64, !llvm.ptr
    cf.br ^bb18
  ^bb21:  // pred: ^bb22
    %c200_i256 = arith.constant 200 : i256
    %68 = llvm.load %arg3 : !llvm.ptr -> i64
    %69 = llvm.getelementptr %arg2[%68] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_22 = arith.constant 1 : i64
    %70 = arith.addi %68, %c1_i64_22 : i64
    llvm.store %70, %arg3 : i64, !llvm.ptr
    llvm.store %c200_i256, %69 : i256, !llvm.ptr
    cf.br ^bb29
  ^bb22:  // pred: ^bb24
    %c1024_i64_23 = arith.constant 1024 : i64
    %71 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %72 = arith.addi %71, %c1_i64_24 : i64
    %73 = arith.cmpi ult, %c1024_i64_23, %72 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %73, ^bb1(%c92_i8_25 : i8), ^bb21
  ^bb23:  // pred: ^bb17
    %74 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %76 = arith.cmpi uge, %75, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %76, ^bb24, ^bb1(%c80_i8_27 : i8)
  ^bb24:  // pred: ^bb23
    %77 = arith.subi %75, %c3_i64_26 : i64
    llvm.store %77, %74 : i64, !llvm.ptr
    cf.br ^bb22
  ^bb25:  // pred: ^bb28
    %78 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_28 = arith.constant 1 : i64
    %79 = arith.subi %78, %c1_i64_28 : i64
    %80 = llvm.getelementptr %arg2[%79] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %79, %arg3 : i64, !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> i256
    %82 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_29 = arith.constant 1 : i64
    %83 = arith.subi %82, %c1_i64_29 : i64
    %84 = llvm.getelementptr %arg2[%83] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %83, %arg3 : i64, !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> i256
    %c1_i256_30 = arith.constant 1 : i256
    %86 = llvm.alloca %c1_i256_30 x i256 : (i256) -> !llvm.ptr
    llvm.store %81, %86 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_31 = arith.constant 1 : i256
    %87 = llvm.alloca %c1_i256_31 x i256 : (i256) -> !llvm.ptr
    llvm.store %85, %87 {alignment = 1 : i64} : i256, !llvm.ptr
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %90 = call @dora_fn_sstore(%arg0, %86, %87, %89) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
    %91 = llvm.getelementptr %90[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %92 = llvm.load %91 : !llvm.ptr -> i8
    %c0_i8_32 = arith.constant 0 : i8
    %93 = arith.cmpi ne, %92, %c0_i8_32 : i8
    cf.cond_br %93, ^bb1(%92 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %94 = llvm.getelementptr %90[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %95 = llvm.load %94 : !llvm.ptr -> i64
    %96 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %97 = llvm.load %96 : !llvm.ptr -> i64
    %98 = arith.cmpi ult, %97, %95 : i64
    scf.if %98 {
    } else {
      %174 = arith.subi %97, %95 : i64
      llvm.store %174, %96 : i64, !llvm.ptr
    }
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %98, ^bb1(%c80_i8_33 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    cf.br ^bb33
  ^bb28:  // pred: ^bb30
    %c1024_i64_34 = arith.constant 1024 : i64
    %99 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_35 = arith.constant -2 : i64
    %100 = arith.addi %99, %c-2_i64_35 : i64
    %c2_i64_36 = arith.constant 2 : i64
    %101 = arith.cmpi ult, %99, %c2_i64_36 : i64
    %c91_i8_37 = arith.constant 91 : i8
    cf.cond_br %101, ^bb1(%c91_i8_37 : i8), ^bb25
  ^bb29:  // pred: ^bb21
    %102 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %103 = llvm.load %102 : !llvm.ptr -> i64
    %c0_i64_38 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %104 = arith.cmpi uge, %103, %c0_i64_38 : i64
    %c80_i8_39 = arith.constant 80 : i8
    cf.cond_br %104, ^bb30, ^bb1(%c80_i8_39 : i8)
  ^bb30:  // pred: ^bb29
    %105 = arith.subi %103, %c0_i64_38 : i64
    llvm.store %105, %102 : i64, !llvm.ptr
    cf.br ^bb28
  ^bb31:  // pred: ^bb32
    %c0_i256_40 = arith.constant 0 : i256
    %106 = llvm.load %arg3 : !llvm.ptr -> i64
    %107 = llvm.getelementptr %arg2[%106] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_41 = arith.constant 1 : i64
    %108 = arith.addi %106, %c1_i64_41 : i64
    llvm.store %108, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_40, %107 : i256, !llvm.ptr
    cf.br ^bb38
  ^bb32:  // pred: ^bb34
    %c1024_i64_42 = arith.constant 1024 : i64
    %109 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %110 = arith.addi %109, %c1_i64_43 : i64
    %111 = arith.cmpi ult, %c1024_i64_42, %110 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %111, ^bb1(%c92_i8_44 : i8), ^bb31
  ^bb33:  // pred: ^bb27
    %112 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %114 = arith.cmpi uge, %113, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %114, ^bb34, ^bb1(%c80_i8_46 : i8)
  ^bb34:  // pred: ^bb33
    %115 = arith.subi %113, %c3_i64_45 : i64
    llvm.store %115, %112 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb37
    %116 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_47 = arith.constant 1 : i64
    %117 = arith.subi %116, %c1_i64_47 : i64
    %118 = llvm.getelementptr %arg2[%117] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %117, %arg3 : i64, !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i256
    %c1_i256_48 = arith.constant 1 : i256
    %120 = llvm.alloca %c1_i256_48 x i256 : (i256) -> !llvm.ptr
    llvm.store %119, %120 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_49 = arith.constant 1 : i256
    %121 = llvm.alloca %c1_i256_49 x i256 : (i256) -> !llvm.ptr
    %122 = call @dora_fn_sload(%arg0, %120, %121) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %123 = llvm.getelementptr %122[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %124 = llvm.load %123 : !llvm.ptr -> i64
    %125 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> i64
    %127 = arith.cmpi ult, %126, %124 : i64
    scf.if %127 {
    } else {
      %174 = arith.subi %126, %124 : i64
      llvm.store %174, %125 : i64, !llvm.ptr
    }
    %c80_i8_50 = arith.constant 80 : i8
    cf.cond_br %127, ^bb1(%c80_i8_50 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %128 = llvm.load %121 : !llvm.ptr -> i256
    %129 = llvm.load %arg3 : !llvm.ptr -> i64
    %130 = llvm.getelementptr %arg2[%129] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_51 = arith.constant 1 : i64
    %131 = arith.addi %129, %c1_i64_51 : i64
    llvm.store %131, %arg3 : i64, !llvm.ptr
    llvm.store %128, %130 : i256, !llvm.ptr
    cf.br ^bb42
  ^bb37:  // pred: ^bb39
    %c1024_i64_52 = arith.constant 1024 : i64
    %132 = llvm.load %arg3 : !llvm.ptr -> i64
    %c0_i64_53 = arith.constant 0 : i64
    %133 = arith.addi %132, %c0_i64_53 : i64
    %c1_i64_54 = arith.constant 1 : i64
    %134 = arith.cmpi ult, %132, %c1_i64_54 : i64
    %c91_i8_55 = arith.constant 91 : i8
    cf.cond_br %134, ^bb1(%c91_i8_55 : i8), ^bb35
  ^bb38:  // pred: ^bb31
    %135 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> i64
    %c0_i64_56 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %137 = arith.cmpi uge, %136, %c0_i64_56 : i64
    %c80_i8_57 = arith.constant 80 : i8
    cf.cond_br %137, ^bb39, ^bb1(%c80_i8_57 : i8)
  ^bb39:  // pred: ^bb38
    %138 = arith.subi %136, %c0_i64_56 : i64
    llvm.store %138, %135 : i64, !llvm.ptr
    cf.br ^bb37
  ^bb40:  // pred: ^bb41
    %c1_i256_58 = arith.constant 1 : i256
    %139 = llvm.load %arg3 : !llvm.ptr -> i64
    %140 = llvm.getelementptr %arg2[%139] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_59 = arith.constant 1 : i64
    %141 = arith.addi %139, %c1_i64_59 : i64
    llvm.store %141, %arg3 : i64, !llvm.ptr
    llvm.store %c1_i256_58, %140 : i256, !llvm.ptr
    cf.br ^bb47
  ^bb41:  // pred: ^bb43
    %c1024_i64_60 = arith.constant 1024 : i64
    %142 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_61 = arith.constant 1 : i64
    %143 = arith.addi %142, %c1_i64_61 : i64
    %144 = arith.cmpi ult, %c1024_i64_60, %143 : i64
    %c92_i8_62 = arith.constant 92 : i8
    cf.cond_br %144, ^bb1(%c92_i8_62 : i8), ^bb40
  ^bb42:  // pred: ^bb36
    %145 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> i64
    %c3_i64_63 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %147 = arith.cmpi uge, %146, %c3_i64_63 : i64
    %c80_i8_64 = arith.constant 80 : i8
    cf.cond_br %147, ^bb43, ^bb1(%c80_i8_64 : i8)
  ^bb43:  // pred: ^bb42
    %148 = arith.subi %146, %c3_i64_63 : i64
    llvm.store %148, %145 : i64, !llvm.ptr
    cf.br ^bb41
  ^bb44:  // pred: ^bb46
    %149 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_65 = arith.constant 1 : i64
    %150 = arith.subi %149, %c1_i64_65 : i64
    %151 = llvm.getelementptr %arg2[%150] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %150, %arg3 : i64, !llvm.ptr
    %152 = llvm.load %151 : !llvm.ptr -> i256
    %c1_i256_66 = arith.constant 1 : i256
    %153 = llvm.alloca %c1_i256_66 x i256 : (i256) -> !llvm.ptr
    llvm.store %152, %153 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_67 = arith.constant 1 : i256
    %154 = llvm.alloca %c1_i256_67 x i256 : (i256) -> !llvm.ptr
    %155 = call @dora_fn_sload(%arg0, %153, %154) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %156 = llvm.getelementptr %155[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %157 = llvm.load %156 : !llvm.ptr -> i64
    %158 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %159 = llvm.load %158 : !llvm.ptr -> i64
    %160 = arith.cmpi ult, %159, %157 : i64
    scf.if %160 {
    } else {
      %174 = arith.subi %159, %157 : i64
      llvm.store %174, %158 : i64, !llvm.ptr
    }
    %c80_i8_68 = arith.constant 80 : i8
    cf.cond_br %160, ^bb1(%c80_i8_68 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %161 = llvm.load %154 : !llvm.ptr -> i256
    %162 = llvm.load %arg3 : !llvm.ptr -> i64
    %163 = llvm.getelementptr %arg2[%162] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_69 = arith.constant 1 : i64
    %164 = arith.addi %162, %c1_i64_69 : i64
    llvm.store %164, %arg3 : i64, !llvm.ptr
    llvm.store %161, %163 : i256, !llvm.ptr
    cf.br ^bb49
  ^bb46:  // pred: ^bb48
    %c1024_i64_70 = arith.constant 1024 : i64
    %165 = llvm.load %arg3 : !llvm.ptr -> i64
    %c0_i64_71 = arith.constant 0 : i64
    %166 = arith.addi %165, %c0_i64_71 : i64
    %c1_i64_72 = arith.constant 1 : i64
    %167 = arith.cmpi ult, %165, %c1_i64_72 : i64
    %c91_i8_73 = arith.constant 91 : i8
    cf.cond_br %167, ^bb1(%c91_i8_73 : i8), ^bb44
  ^bb47:  // pred: ^bb40
    %168 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> i64
    %c0_i64_74 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %170 = arith.cmpi uge, %169, %c0_i64_74 : i64
    %c80_i8_75 = arith.constant 80 : i8
    cf.cond_br %170, ^bb48, ^bb1(%c80_i8_75 : i8)
  ^bb48:  // pred: ^bb47
    %171 = arith.subi %169, %c0_i64_74 : i64
    llvm.store %171, %168 : i64, !llvm.ptr
    cf.br ^bb46
  ^bb49:  // pred: ^bb45
    %c0_i64_76 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %172 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %173 = llvm.load %172 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_76, %c0_i64_76, %173, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  }
}
