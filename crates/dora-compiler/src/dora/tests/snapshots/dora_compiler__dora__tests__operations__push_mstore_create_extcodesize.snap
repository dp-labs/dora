---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    %1 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %2 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %1, %2 : !llvm.ptr, !llvm.ptr
    %3 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %4 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %3, %4 : i64, !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %5 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%6: i8):  // 47 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb38, ^bb39, ^bb41, ^bb42, ^bb43, ^bb45, ^bb46, ^bb47, ^bb49, ^bb50, ^bb52, ^bb54, ^bb55, ^bb58, ^bb59, ^bb60, ^bb63, ^bb64, ^bb66, ^bb67, ^bb68, ^bb71, ^bb72, ^bb74, ^bb75, ^bb76, ^bb77, ^bb78, ^bb81, ^bb82
    %c0_i64_0 = arith.constant 0 : i64
    %7 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %8 = llvm.load %7 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %8, %6) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %6 : i8
  ^bb2(%9: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %9 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %10 = llvm.load %arg3 : !llvm.ptr -> i64
    %11 = llvm.getelementptr %arg2[%10] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %12 = arith.addi %10, %c1_i64 : i64
    llvm.store %12, %arg3 : i64, !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %11 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %13 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %14 = arith.addi %13, %c1_i64_1 : i64
    %15 = arith.cmpi ult, %c1024_i64, %14 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %15, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %16 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %18 = arith.cmpi uge, %17, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %18, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %19 = arith.subi %17, %c3_i64 : i64
    llvm.store %19, %16 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %20 = llvm.load %arg3 : !llvm.ptr -> i64
    %21 = llvm.getelementptr %arg2[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %22 = arith.addi %20, %c1_i64_2 : i64
    llvm.store %22, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %21 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %23 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %24 = arith.addi %23, %c1_i64_4 : i64
    %25 = arith.cmpi ult, %c1024_i64_3, %24 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %25, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %26 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %27 = llvm.load %26 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %28 = arith.cmpi uge, %27, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %28, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %29 = arith.subi %27, %c3_i64_6 : i64
    llvm.store %29, %26 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %30 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %31 = arith.subi %30, %c1_i64_8 : i64
    %32 = llvm.getelementptr %arg2[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %31, %arg3 : i64, !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i256
    %34 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_9 = arith.constant 1 : i64
    %35 = arith.subi %34, %c1_i64_9 : i64
    %36 = llvm.getelementptr %arg2[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %35, %arg3 : i64, !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %38 = arith.cmpi ne, %c32_i64, %c0_i64_10 : i64
    cf.cond_br %38, ^bb58, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb62
    %39 = arith.trunci %33 : i256 to i64
    %40 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %43 = llvm.intr.bswap(%37)  : (i256) -> i256
    llvm.store %43, %42 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_11 = arith.constant 1024 : i64
    %44 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %45 = arith.addi %44, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %46 = arith.cmpi ult, %44, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %46, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %47 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %49 = arith.cmpi uge, %48, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %49, ^bb15, ^bb1(%c80_i8_13 : i8)
  ^bb15:  // pred: ^bb14
    %50 = arith.subi %48, %c3_i64_12 : i64
    llvm.store %50, %47 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c170141183460469231731687303715884105727_i256_14 = arith.constant 170141183460469231731687303715884105727 : i256
    %51 = llvm.load %arg3 : !llvm.ptr -> i64
    %52 = llvm.getelementptr %arg2[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_15 = arith.constant 1 : i64
    %53 = arith.addi %51, %c1_i64_15 : i64
    llvm.store %53, %arg3 : i64, !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_14, %52 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_16 = arith.constant 1024 : i64
    %54 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_17 = arith.constant 1 : i64
    %55 = arith.addi %54, %c1_i64_17 : i64
    %56 = arith.cmpi ult, %c1024_i64_16, %55 : i64
    %c92_i8_18 = arith.constant 92 : i8
    cf.cond_br %56, ^bb1(%c92_i8_18 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %57 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> i64
    %c3_i64_19 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %59 = arith.cmpi uge, %58, %c3_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %59, ^bb19, ^bb1(%c80_i8_20 : i8)
  ^bb19:  // pred: ^bb18
    %60 = arith.subi %58, %c3_i64_19 : i64
    llvm.store %60, %57 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c32_i256 = arith.constant 32 : i256
    %61 = llvm.load %arg3 : !llvm.ptr -> i64
    %62 = llvm.getelementptr %arg2[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_21 = arith.constant 1 : i64
    %63 = arith.addi %61, %c1_i64_21 : i64
    llvm.store %63, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256, %62 : i256, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %c1024_i64_22 = arith.constant 1024 : i64
    %64 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %65 = arith.addi %64, %c1_i64_23 : i64
    %66 = arith.cmpi ult, %c1024_i64_22, %65 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %66, ^bb1(%c92_i8_24 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %67 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %69 = arith.cmpi uge, %68, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %69, ^bb23, ^bb1(%c80_i8_26 : i8)
  ^bb23:  // pred: ^bb22
    %70 = arith.subi %68, %c3_i64_25 : i64
    llvm.store %70, %67 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %71 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_27 = arith.constant 1 : i64
    %72 = arith.subi %71, %c1_i64_27 : i64
    %73 = llvm.getelementptr %arg2[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %72, %arg3 : i64, !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> i256
    %75 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_28 = arith.constant 1 : i64
    %76 = arith.subi %75, %c1_i64_28 : i64
    %77 = llvm.getelementptr %arg2[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %76, %arg3 : i64, !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i256
    %c32_i64_29 = arith.constant 32 : i64
    %c0_i64_30 = arith.constant 0 : i64
    %79 = arith.cmpi ne, %c32_i64_29, %c0_i64_30 : i64
    cf.cond_br %79, ^bb66, ^bb25
  ^bb25:  // 2 preds: ^bb24, ^bb70
    %80 = arith.trunci %74 : i256 to i64
    %81 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    %83 = llvm.getelementptr %82[%80] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %84 = llvm.intr.bswap(%78)  : (i256) -> i256
    llvm.store %84, %83 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %c1024_i64_31 = arith.constant 1024 : i64
    %85 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_32 = arith.constant -2 : i64
    %86 = arith.addi %85, %c-2_i64_32 : i64
    %c2_i64_33 = arith.constant 2 : i64
    %87 = arith.cmpi ult, %85, %c2_i64_33 : i64
    %c91_i8_34 = arith.constant 91 : i8
    cf.cond_br %87, ^bb1(%c91_i8_34 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_35 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %90 = arith.cmpi uge, %89, %c3_i64_35 : i64
    %c80_i8_36 = arith.constant 80 : i8
    cf.cond_br %90, ^bb28, ^bb1(%c80_i8_36 : i8)
  ^bb28:  // pred: ^bb27
    %91 = arith.subi %89, %c3_i64_35 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c41_i256 = arith.constant 41 : i256
    %92 = llvm.load %arg3 : !llvm.ptr -> i64
    %93 = llvm.getelementptr %arg2[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_37 = arith.constant 1 : i64
    %94 = arith.addi %92, %c1_i64_37 : i64
    llvm.store %94, %arg3 : i64, !llvm.ptr
    llvm.store %c41_i256, %93 : i256, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %c1024_i64_38 = arith.constant 1024 : i64
    %95 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_39 = arith.constant 1 : i64
    %96 = arith.addi %95, %c1_i64_39 : i64
    %97 = arith.cmpi ult, %c1024_i64_38, %96 : i64
    %c92_i8_40 = arith.constant 92 : i8
    cf.cond_br %97, ^bb1(%c92_i8_40 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %98 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> i64
    %c3_i64_41 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %100 = arith.cmpi uge, %99, %c3_i64_41 : i64
    %c80_i8_42 = arith.constant 80 : i8
    cf.cond_br %100, ^bb32, ^bb1(%c80_i8_42 : i8)
  ^bb32:  // pred: ^bb31
    %101 = arith.subi %99, %c3_i64_41 : i64
    llvm.store %101, %98 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %c0_i256_43 = arith.constant 0 : i256
    %102 = llvm.load %arg3 : !llvm.ptr -> i64
    %103 = llvm.getelementptr %arg2[%102] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_44 = arith.constant 1 : i64
    %104 = arith.addi %102, %c1_i64_44 : i64
    llvm.store %104, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_43, %103 : i256, !llvm.ptr
    cf.br ^bb39
  ^bb34:  // pred: ^bb36
    %c1024_i64_45 = arith.constant 1024 : i64
    %105 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %106 = arith.addi %105, %c1_i64_46 : i64
    %107 = arith.cmpi ult, %c1024_i64_45, %106 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %107, ^bb1(%c92_i8_47 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %108 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> i64
    %c3_i64_48 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %110 = arith.cmpi uge, %109, %c3_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %110, ^bb36, ^bb1(%c80_i8_49 : i8)
  ^bb36:  // pred: ^bb35
    %111 = arith.subi %109, %c3_i64_48 : i64
    llvm.store %111, %108 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb38
    %c0_i256_50 = arith.constant 0 : i256
    %112 = llvm.load %arg3 : !llvm.ptr -> i64
    %113 = llvm.getelementptr %arg2[%112] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_51 = arith.constant 1 : i64
    %114 = arith.addi %112, %c1_i64_51 : i64
    llvm.store %114, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_50, %113 : i256, !llvm.ptr
    cf.br ^bb50
  ^bb38:  // pred: ^bb40
    %c1024_i64_52 = arith.constant 1024 : i64
    %115 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_53 = arith.constant 1 : i64
    %116 = arith.addi %115, %c1_i64_53 : i64
    %117 = arith.cmpi ult, %c1024_i64_52, %116 : i64
    %c92_i8_54 = arith.constant 92 : i8
    cf.cond_br %117, ^bb1(%c92_i8_54 : i8), ^bb37
  ^bb39:  // pred: ^bb33
    %118 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c3_i64_55 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %120 = arith.cmpi uge, %119, %c3_i64_55 : i64
    %c80_i8_56 = arith.constant 80 : i8
    cf.cond_br %120, ^bb40, ^bb1(%c80_i8_56 : i8)
  ^bb40:  // pred: ^bb39
    %121 = arith.subi %119, %c3_i64_55 : i64
    llvm.store %121, %118 : i64, !llvm.ptr
    cf.br ^bb38
  ^bb41:  // pred: ^bb49
    %122 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_57 = arith.constant 1 : i64
    %123 = arith.subi %122, %c1_i64_57 : i64
    %124 = llvm.getelementptr %arg2[%123] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %123, %arg3 : i64, !llvm.ptr
    %125 = llvm.load %124 : !llvm.ptr -> i256
    %126 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %127 = arith.subi %126, %c1_i64_58 : i64
    %128 = llvm.getelementptr %arg2[%127] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %127, %arg3 : i64, !llvm.ptr
    %129 = llvm.load %128 : !llvm.ptr -> i256
    %130 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %131 = arith.subi %130, %c1_i64_59 : i64
    %132 = llvm.getelementptr %arg2[%131] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %131, %arg3 : i64, !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> i256
    %134 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %135 = arith.cmpi ne, %134, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %135, ^bb1(%c87_i8 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %136 = arith.cmpi sgt, %133, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %136, ^bb1(%c84_i8 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %137 = arith.trunci %133 : i256 to i64
    %c0_i64_60 = arith.constant 0 : i64
    %138 = arith.cmpi slt, %137, %c0_i64_60 : i64
    %c84_i8_61 = arith.constant 84 : i8
    cf.cond_br %138, ^bb1(%c84_i8_61 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c0_i64_62 = arith.constant 0 : i64
    %139 = arith.cmpi ne, %137, %c0_i64_62 : i64
    cf.cond_br %139, ^bb74, ^bb45
  ^bb45:  // 2 preds: ^bb44, ^bb80
    %c32000_i64 = arith.constant 32000 : i64
    %140 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %142 = arith.cmpi ult, %141, %c32000_i64 : i64
    scf.if %142 {
    } else {
      %302 = arith.subi %141, %c32000_i64 : i64
      llvm.store %302, %140 : i64, !llvm.ptr
    }
    %c80_i8_63 = arith.constant 80 : i8
    cf.cond_br %142, ^bb1(%c80_i8_63 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c1_i256 = arith.constant 1 : i256
    %143 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %125, %143 {alignment = 1 : i64} : i256, !llvm.ptr
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %146 = arith.trunci %129 : i256 to i64
    %147 = call @dora_fn_create(%arg0, %137, %146, %143, %145) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %148 = llvm.getelementptr %147[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %149 = llvm.load %148 : !llvm.ptr -> i8
    %c0_i8_64 = arith.constant 0 : i8
    %150 = arith.cmpi ne, %149, %c0_i8_64 : i8
    cf.cond_br %150, ^bb1(%149 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %151 = llvm.getelementptr %147[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %152 = llvm.load %151 : !llvm.ptr -> i64
    %153 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %154 = llvm.load %153 : !llvm.ptr -> i64
    %155 = arith.cmpi ult, %154, %152 : i64
    scf.if %155 {
    } else {
      %302 = arith.subi %154, %152 : i64
      llvm.store %302, %153 : i64, !llvm.ptr
    }
    %c80_i8_65 = arith.constant 80 : i8
    cf.cond_br %155, ^bb1(%c80_i8_65 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %156 = llvm.load %143 : !llvm.ptr -> i256
    %157 = llvm.load %arg3 : !llvm.ptr -> i64
    %158 = llvm.getelementptr %arg2[%157] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_66 = arith.constant 1 : i64
    %159 = arith.addi %157, %c1_i64_66 : i64
    llvm.store %159, %arg3 : i64, !llvm.ptr
    llvm.store %156, %158 : i256, !llvm.ptr
    cf.br ^bb55
  ^bb49:  // pred: ^bb51
    %c1024_i64_67 = arith.constant 1024 : i64
    %160 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_68 = arith.constant -2 : i64
    %161 = arith.addi %160, %c-2_i64_68 : i64
    %c3_i64_69 = arith.constant 3 : i64
    %162 = arith.cmpi ult, %160, %c3_i64_69 : i64
    %c91_i8_70 = arith.constant 91 : i8
    cf.cond_br %162, ^bb1(%c91_i8_70 : i8), ^bb41
  ^bb50:  // pred: ^bb37
    %163 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> i64
    %c0_i64_71 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %165 = arith.cmpi uge, %164, %c0_i64_71 : i64
    %c80_i8_72 = arith.constant 80 : i8
    cf.cond_br %165, ^bb51, ^bb1(%c80_i8_72 : i8)
  ^bb51:  // pred: ^bb50
    %166 = arith.subi %164, %c0_i64_71 : i64
    llvm.store %166, %163 : i64, !llvm.ptr
    cf.br ^bb49
  ^bb52:  // pred: ^bb54
    %167 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %168 = arith.subi %167, %c1_i64_73 : i64
    %169 = llvm.getelementptr %arg2[%168] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %168, %arg3 : i64, !llvm.ptr
    %170 = llvm.load %169 : !llvm.ptr -> i256
    %c1_i256_74 = arith.constant 1 : i256
    %171 = llvm.alloca %c1_i256_74 x i256 : (i256) -> !llvm.ptr
    llvm.store %170, %171 {alignment = 1 : i64} : i256, !llvm.ptr
    %172 = call @dora_fn_extcodesize(%arg0, %171) : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %173 = llvm.getelementptr %172[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %175 = llvm.getelementptr %172[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %176 = llvm.load %175 : !llvm.ptr -> i64
    %177 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> i64
    %179 = arith.cmpi ult, %178, %176 : i64
    scf.if %179 {
    } else {
      %302 = arith.subi %178, %176 : i64
      llvm.store %302, %177 : i64, !llvm.ptr
    }
    %c80_i8_75 = arith.constant 80 : i8
    cf.cond_br %179, ^bb1(%c80_i8_75 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %180 = arith.extui %174 : i64 to i256
    %181 = llvm.load %arg3 : !llvm.ptr -> i64
    %182 = llvm.getelementptr %arg2[%181] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_76 = arith.constant 1 : i64
    %183 = arith.addi %181, %c1_i64_76 : i64
    llvm.store %183, %arg3 : i64, !llvm.ptr
    llvm.store %180, %182 : i256, !llvm.ptr
    cf.br ^bb57
  ^bb54:  // pred: ^bb56
    %c1024_i64_77 = arith.constant 1024 : i64
    %184 = llvm.load %arg3 : !llvm.ptr -> i64
    %c0_i64_78 = arith.constant 0 : i64
    %185 = arith.addi %184, %c0_i64_78 : i64
    %c1_i64_79 = arith.constant 1 : i64
    %186 = arith.cmpi ult, %184, %c1_i64_79 : i64
    %c91_i8_80 = arith.constant 91 : i8
    cf.cond_br %186, ^bb1(%c91_i8_80 : i8), ^bb52
  ^bb55:  // pred: ^bb48
    %187 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %188 = llvm.load %187 : !llvm.ptr -> i64
    %c0_i64_81 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %189 = arith.cmpi uge, %188, %c0_i64_81 : i64
    %c80_i8_82 = arith.constant 80 : i8
    cf.cond_br %189, ^bb56, ^bb1(%c80_i8_82 : i8)
  ^bb56:  // pred: ^bb55
    %190 = arith.subi %188, %c0_i64_81 : i64
    llvm.store %190, %187 : i64, !llvm.ptr
    cf.br ^bb54
  ^bb57:  // pred: ^bb53
    %c0_i64_83 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %191 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %192 = llvm.load %191 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_83, %c0_i64_83, %192, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb58:  // pred: ^bb11
    %c18446744073709551615_i256_84 = arith.constant 18446744073709551615 : i256
    %193 = arith.cmpi sgt, %33, %c18446744073709551615_i256_84 : i256
    %c84_i8_85 = arith.constant 84 : i8
    cf.cond_br %193, ^bb1(%c84_i8_85 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %194 = arith.trunci %33 : i256 to i64
    %c0_i64_86 = arith.constant 0 : i64
    %195 = arith.cmpi slt, %194, %c0_i64_86 : i64
    %c84_i8_87 = arith.constant 84 : i8
    cf.cond_br %195, ^bb1(%c84_i8_87 : i8), ^bb60
  ^bb60:  // pred: ^bb59
    %196 = arith.addi %194, %c32_i64 : i64
    %c0_i64_88 = arith.constant 0 : i64
    %197 = arith.cmpi slt, %196, %c0_i64_88 : i64
    %c84_i8_89 = arith.constant 84 : i8
    cf.cond_br %197, ^bb1(%c84_i8_89 : i8), ^bb61
  ^bb61:  // pred: ^bb60
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_90 = arith.constant 32 : i64
    %198 = arith.addi %196, %c31_i64 : i64
    %199 = arith.divui %198, %c32_i64_90 : i64
    %c32_i64_91 = arith.constant 32 : i64
    %200 = arith.muli %199, %c32_i64_91 : i64
    %201 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %202 = llvm.load %201 : !llvm.ptr -> i64
    %c31_i64_92 = arith.constant 31 : i64
    %c32_i64_93 = arith.constant 32 : i64
    %203 = arith.addi %202, %c31_i64_92 : i64
    %204 = arith.divui %203, %c32_i64_93 : i64
    %205 = arith.muli %204, %c32_i64_91 : i64
    %206 = arith.cmpi ult, %205, %200 : i64
    cf.cond_br %206, ^bb63, ^bb62
  ^bb62:  // 2 preds: ^bb61, ^bb65
    cf.br ^bb12
  ^bb63:  // pred: ^bb61
    %c3_i64_94 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %207 = arith.muli %204, %204 : i64
    %208 = arith.divui %207, %c512_i64 : i64
    %209 = arith.muli %204, %c3_i64_94 : i64
    %210 = arith.addi %208, %209 : i64
    %c3_i64_95 = arith.constant 3 : i64
    %c512_i64_96 = arith.constant 512 : i64
    %211 = arith.muli %199, %199 : i64
    %212 = arith.divui %211, %c512_i64_96 : i64
    %213 = arith.muli %199, %c3_i64_95 : i64
    %214 = arith.addi %212, %213 : i64
    %215 = arith.subi %214, %210 : i64
    %216 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %217 = llvm.load %216 : !llvm.ptr -> i64
    %218 = arith.cmpi ult, %217, %215 : i64
    scf.if %218 {
    } else {
      %302 = arith.subi %217, %215 : i64
      llvm.store %302, %216 : i64, !llvm.ptr
    }
    %c80_i8_97 = arith.constant 80 : i8
    cf.cond_br %218, ^bb1(%c80_i8_97 : i8), ^bb64
  ^bb64:  // pred: ^bb63
    %219 = call @dora_fn_extend_memory(%arg0, %200) : (!llvm.ptr, i64) -> !llvm.ptr
    %220 = llvm.getelementptr %219[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %221 = llvm.load %220 : !llvm.ptr -> !llvm.ptr
    %222 = llvm.getelementptr %219[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %223 = llvm.load %222 : !llvm.ptr -> i8
    %c0_i8_98 = arith.constant 0 : i8
    %224 = arith.cmpi ne, %223, %c0_i8_98 : i8
    cf.cond_br %224, ^bb1(%223 : i8), ^bb65
  ^bb65:  // pred: ^bb64
    %225 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %221, %225 : !llvm.ptr, !llvm.ptr
    %226 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %200, %226 : i64, !llvm.ptr
    cf.br ^bb62
  ^bb66:  // pred: ^bb24
    %c18446744073709551615_i256_99 = arith.constant 18446744073709551615 : i256
    %227 = arith.cmpi sgt, %74, %c18446744073709551615_i256_99 : i256
    %c84_i8_100 = arith.constant 84 : i8
    cf.cond_br %227, ^bb1(%c84_i8_100 : i8), ^bb67
  ^bb67:  // pred: ^bb66
    %228 = arith.trunci %74 : i256 to i64
    %c0_i64_101 = arith.constant 0 : i64
    %229 = arith.cmpi slt, %228, %c0_i64_101 : i64
    %c84_i8_102 = arith.constant 84 : i8
    cf.cond_br %229, ^bb1(%c84_i8_102 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %230 = arith.addi %228, %c32_i64_29 : i64
    %c0_i64_103 = arith.constant 0 : i64
    %231 = arith.cmpi slt, %230, %c0_i64_103 : i64
    %c84_i8_104 = arith.constant 84 : i8
    cf.cond_br %231, ^bb1(%c84_i8_104 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %c31_i64_105 = arith.constant 31 : i64
    %c32_i64_106 = arith.constant 32 : i64
    %232 = arith.addi %230, %c31_i64_105 : i64
    %233 = arith.divui %232, %c32_i64_106 : i64
    %c32_i64_107 = arith.constant 32 : i64
    %234 = arith.muli %233, %c32_i64_107 : i64
    %235 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %236 = llvm.load %235 : !llvm.ptr -> i64
    %c31_i64_108 = arith.constant 31 : i64
    %c32_i64_109 = arith.constant 32 : i64
    %237 = arith.addi %236, %c31_i64_108 : i64
    %238 = arith.divui %237, %c32_i64_109 : i64
    %239 = arith.muli %238, %c32_i64_107 : i64
    %240 = arith.cmpi ult, %239, %234 : i64
    cf.cond_br %240, ^bb71, ^bb70
  ^bb70:  // 2 preds: ^bb69, ^bb73
    cf.br ^bb25
  ^bb71:  // pred: ^bb69
    %c3_i64_110 = arith.constant 3 : i64
    %c512_i64_111 = arith.constant 512 : i64
    %241 = arith.muli %238, %238 : i64
    %242 = arith.divui %241, %c512_i64_111 : i64
    %243 = arith.muli %238, %c3_i64_110 : i64
    %244 = arith.addi %242, %243 : i64
    %c3_i64_112 = arith.constant 3 : i64
    %c512_i64_113 = arith.constant 512 : i64
    %245 = arith.muli %233, %233 : i64
    %246 = arith.divui %245, %c512_i64_113 : i64
    %247 = arith.muli %233, %c3_i64_112 : i64
    %248 = arith.addi %246, %247 : i64
    %249 = arith.subi %248, %244 : i64
    %250 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %251 = llvm.load %250 : !llvm.ptr -> i64
    %252 = arith.cmpi ult, %251, %249 : i64
    scf.if %252 {
    } else {
      %302 = arith.subi %251, %249 : i64
      llvm.store %302, %250 : i64, !llvm.ptr
    }
    %c80_i8_114 = arith.constant 80 : i8
    cf.cond_br %252, ^bb1(%c80_i8_114 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %253 = call @dora_fn_extend_memory(%arg0, %234) : (!llvm.ptr, i64) -> !llvm.ptr
    %254 = llvm.getelementptr %253[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %255 = llvm.load %254 : !llvm.ptr -> !llvm.ptr
    %256 = llvm.getelementptr %253[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %257 = llvm.load %256 : !llvm.ptr -> i8
    %c0_i8_115 = arith.constant 0 : i8
    %258 = arith.cmpi ne, %257, %c0_i8_115 : i8
    cf.cond_br %258, ^bb1(%257 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %259 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %255, %259 : !llvm.ptr, !llvm.ptr
    %260 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %234, %260 : i64, !llvm.ptr
    cf.br ^bb70
  ^bb74:  // pred: ^bb44
    %c49152_i64 = arith.constant 49152 : i64
    %261 = arith.cmpi ugt, %137, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %261, ^bb1(%c100_i8 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %c31_i64_116 = arith.constant 31 : i64
    %c32_i64_117 = arith.constant 32 : i64
    %262 = arith.addi %137, %c31_i64_116 : i64
    %263 = arith.divui %262, %c32_i64_117 : i64
    %c2_i64_118 = arith.constant 2 : i64
    %264 = arith.muli %263, %c2_i64_118 : i64
    %265 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %266 = llvm.load %265 : !llvm.ptr -> i64
    %267 = arith.cmpi ult, %266, %264 : i64
    scf.if %267 {
    } else {
      %302 = arith.subi %266, %264 : i64
      llvm.store %302, %265 : i64, !llvm.ptr
    }
    %c80_i8_119 = arith.constant 80 : i8
    cf.cond_br %267, ^bb1(%c80_i8_119 : i8), ^bb76
  ^bb76:  // pred: ^bb75
    %c18446744073709551615_i256_120 = arith.constant 18446744073709551615 : i256
    %268 = arith.cmpi sgt, %129, %c18446744073709551615_i256_120 : i256
    %c84_i8_121 = arith.constant 84 : i8
    cf.cond_br %268, ^bb1(%c84_i8_121 : i8), ^bb77
  ^bb77:  // pred: ^bb76
    %269 = arith.trunci %129 : i256 to i64
    %c0_i64_122 = arith.constant 0 : i64
    %270 = arith.cmpi slt, %269, %c0_i64_122 : i64
    %c84_i8_123 = arith.constant 84 : i8
    cf.cond_br %270, ^bb1(%c84_i8_123 : i8), ^bb78
  ^bb78:  // pred: ^bb77
    %271 = arith.addi %269, %137 : i64
    %c0_i64_124 = arith.constant 0 : i64
    %272 = arith.cmpi slt, %271, %c0_i64_124 : i64
    %c84_i8_125 = arith.constant 84 : i8
    cf.cond_br %272, ^bb1(%c84_i8_125 : i8), ^bb79
  ^bb79:  // pred: ^bb78
    %c31_i64_126 = arith.constant 31 : i64
    %c32_i64_127 = arith.constant 32 : i64
    %273 = arith.addi %271, %c31_i64_126 : i64
    %274 = arith.divui %273, %c32_i64_127 : i64
    %c32_i64_128 = arith.constant 32 : i64
    %275 = arith.muli %274, %c32_i64_128 : i64
    %276 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %277 = llvm.load %276 : !llvm.ptr -> i64
    %c31_i64_129 = arith.constant 31 : i64
    %c32_i64_130 = arith.constant 32 : i64
    %278 = arith.addi %277, %c31_i64_129 : i64
    %279 = arith.divui %278, %c32_i64_130 : i64
    %280 = arith.muli %279, %c32_i64_128 : i64
    %281 = arith.cmpi ult, %280, %275 : i64
    cf.cond_br %281, ^bb81, ^bb80
  ^bb80:  // 2 preds: ^bb79, ^bb83
    cf.br ^bb45
  ^bb81:  // pred: ^bb79
    %c3_i64_131 = arith.constant 3 : i64
    %c512_i64_132 = arith.constant 512 : i64
    %282 = arith.muli %279, %279 : i64
    %283 = arith.divui %282, %c512_i64_132 : i64
    %284 = arith.muli %279, %c3_i64_131 : i64
    %285 = arith.addi %283, %284 : i64
    %c3_i64_133 = arith.constant 3 : i64
    %c512_i64_134 = arith.constant 512 : i64
    %286 = arith.muli %274, %274 : i64
    %287 = arith.divui %286, %c512_i64_134 : i64
    %288 = arith.muli %274, %c3_i64_133 : i64
    %289 = arith.addi %287, %288 : i64
    %290 = arith.subi %289, %285 : i64
    %291 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %292 = llvm.load %291 : !llvm.ptr -> i64
    %293 = arith.cmpi ult, %292, %290 : i64
    scf.if %293 {
    } else {
      %302 = arith.subi %292, %290 : i64
      llvm.store %302, %291 : i64, !llvm.ptr
    }
    %c80_i8_135 = arith.constant 80 : i8
    cf.cond_br %293, ^bb1(%c80_i8_135 : i8), ^bb82
  ^bb82:  // pred: ^bb81
    %294 = call @dora_fn_extend_memory(%arg0, %275) : (!llvm.ptr, i64) -> !llvm.ptr
    %295 = llvm.getelementptr %294[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %296 = llvm.load %295 : !llvm.ptr -> !llvm.ptr
    %297 = llvm.getelementptr %294[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %298 = llvm.load %297 : !llvm.ptr -> i8
    %c0_i8_136 = arith.constant 0 : i8
    %299 = arith.cmpi ne, %298, %c0_i8_136 : i8
    cf.cond_br %299, ^bb1(%298 : i8), ^bb83
  ^bb83:  // pred: ^bb82
    %300 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %296, %300 : !llvm.ptr, !llvm.ptr
    %301 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %275, %301 : i64, !llvm.ptr
    cf.br ^bb80
  }
}
