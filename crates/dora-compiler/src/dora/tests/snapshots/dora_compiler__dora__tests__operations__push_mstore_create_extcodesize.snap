---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 43 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb38, ^bb39, ^bb41, ^bb42, ^bb44, ^bb45, ^bb46, ^bb48, ^bb49, ^bb51, ^bb53, ^bb54, ^bb57, ^bb58, ^bb61, ^bb62, ^bb64, ^bb65, ^bb68, ^bb69, ^bb71, ^bb72, ^bb73, ^bb74, ^bb77, ^bb78
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %43 = arith.cmpi ne, %c32_i64, %c0_i64_7 : i64
    cf.cond_br %43, ^bb57, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb60
    %44 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %45[%38] : (!llvm.ptr, i256) -> !llvm.ptr, i8
    %47 = llvm.intr.bswap(%42)  : (i256) -> i256
    llvm.store %47, %46 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %48 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_8 = arith.constant 1024 : i64
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %50 = arith.addi %49, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    llvm.store %50, %48 : i64, !llvm.ptr
    %51 = arith.cmpi ult, %49, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %51, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %52 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %53 = llvm.load %52 : !llvm.ptr -> i64
    %c3_i64_9 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %54 = arith.cmpi uge, %53, %c3_i64_9 : i64
    %c80_i8_10 = arith.constant 80 : i8
    cf.cond_br %54, ^bb15, ^bb1(%c80_i8_10 : i8)
  ^bb15:  // pred: ^bb14
    %55 = arith.subi %53, %c3_i64_9 : i64
    llvm.store %55, %52 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c170141183460469231731687303715884105727_i256_11 = arith.constant 170141183460469231731687303715884105727 : i256
    %56 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %57 = llvm.load %56 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_11, %57 : i256, !llvm.ptr
    %58 = llvm.getelementptr %57[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %58, %56 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %59 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_12 = arith.constant 1024 : i64
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c1_i64_13 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_13 : i64
    llvm.store %61, %59 : i64, !llvm.ptr
    %62 = arith.cmpi ult, %c1024_i64_12, %61 : i64
    %c92_i8_14 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_14 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %63 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> i64
    %c3_i64_15 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %65 = arith.cmpi uge, %64, %c3_i64_15 : i64
    %c80_i8_16 = arith.constant 80 : i8
    cf.cond_br %65, ^bb19, ^bb1(%c80_i8_16 : i8)
  ^bb19:  // pred: ^bb18
    %66 = arith.subi %64, %c3_i64_15 : i64
    llvm.store %66, %63 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c32_i256 = arith.constant 32 : i256
    %67 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %68 : i256, !llvm.ptr
    %69 = llvm.getelementptr %68[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %69, %67 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %70 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_17 = arith.constant 1024 : i64
    %71 = llvm.load %70 : !llvm.ptr -> i64
    %c1_i64_18 = arith.constant 1 : i64
    %72 = arith.addi %71, %c1_i64_18 : i64
    llvm.store %72, %70 : i64, !llvm.ptr
    %73 = arith.cmpi ult, %c1024_i64_17, %72 : i64
    %c92_i8_19 = arith.constant 92 : i8
    cf.cond_br %73, ^bb1(%c92_i8_19 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %74 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> i64
    %c3_i64_20 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %76 = arith.cmpi uge, %75, %c3_i64_20 : i64
    %c80_i8_21 = arith.constant 80 : i8
    cf.cond_br %76, ^bb23, ^bb1(%c80_i8_21 : i8)
  ^bb23:  // pred: ^bb22
    %77 = arith.subi %75, %c3_i64_20 : i64
    llvm.store %77, %74 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %78 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %79 = llvm.load %78 : !llvm.ptr -> !llvm.ptr
    %80 = llvm.getelementptr %79[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %81 = llvm.load %80 : !llvm.ptr -> i256
    llvm.store %80, %78 : !llvm.ptr, !llvm.ptr
    %82 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %83 = llvm.load %82 : !llvm.ptr -> !llvm.ptr
    %84 = llvm.getelementptr %83[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %85 = llvm.load %84 : !llvm.ptr -> i256
    llvm.store %84, %82 : !llvm.ptr, !llvm.ptr
    %c32_i64_22 = arith.constant 32 : i64
    %c0_i64_23 = arith.constant 0 : i64
    %86 = arith.cmpi ne, %c32_i64_22, %c0_i64_23 : i64
    cf.cond_br %86, ^bb64, ^bb25
  ^bb25:  // 2 preds: ^bb24, ^bb67
    %87 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> !llvm.ptr
    %89 = llvm.getelementptr %88[%81] : (!llvm.ptr, i256) -> !llvm.ptr, i8
    %90 = llvm.intr.bswap(%85)  : (i256) -> i256
    llvm.store %90, %89 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %91 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_24 = arith.constant 1024 : i64
    %92 = llvm.load %91 : !llvm.ptr -> i64
    %c-2_i64_25 = arith.constant -2 : i64
    %93 = arith.addi %92, %c-2_i64_25 : i64
    %c2_i64_26 = arith.constant 2 : i64
    llvm.store %93, %91 : i64, !llvm.ptr
    %94 = arith.cmpi ult, %92, %c2_i64_26 : i64
    %c91_i8_27 = arith.constant 91 : i8
    cf.cond_br %94, ^bb1(%c91_i8_27 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %95 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c3_i64_28 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %97 = arith.cmpi uge, %96, %c3_i64_28 : i64
    %c80_i8_29 = arith.constant 80 : i8
    cf.cond_br %97, ^bb28, ^bb1(%c80_i8_29 : i8)
  ^bb28:  // pred: ^bb27
    %98 = arith.subi %96, %c3_i64_28 : i64
    llvm.store %98, %95 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c41_i256 = arith.constant 41 : i256
    %99 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> !llvm.ptr
    llvm.store %c41_i256, %100 : i256, !llvm.ptr
    %101 = llvm.getelementptr %100[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %101, %99 : !llvm.ptr, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %102 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_30 = arith.constant 1024 : i64
    %103 = llvm.load %102 : !llvm.ptr -> i64
    %c1_i64_31 = arith.constant 1 : i64
    %104 = arith.addi %103, %c1_i64_31 : i64
    llvm.store %104, %102 : i64, !llvm.ptr
    %105 = arith.cmpi ult, %c1024_i64_30, %104 : i64
    %c92_i8_32 = arith.constant 92 : i8
    cf.cond_br %105, ^bb1(%c92_i8_32 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %106 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %c3_i64_33 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %108 = arith.cmpi uge, %107, %c3_i64_33 : i64
    %c80_i8_34 = arith.constant 80 : i8
    cf.cond_br %108, ^bb32, ^bb1(%c80_i8_34 : i8)
  ^bb32:  // pred: ^bb31
    %109 = arith.subi %107, %c3_i64_33 : i64
    llvm.store %109, %106 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %c0_i256_35 = arith.constant 0 : i256
    %110 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_35, %111 : i256, !llvm.ptr
    %112 = llvm.getelementptr %111[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %112, %110 : !llvm.ptr, !llvm.ptr
    cf.br ^bb39
  ^bb34:  // pred: ^bb36
    %113 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_36 = arith.constant 1024 : i64
    %114 = llvm.load %113 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %115 = arith.addi %114, %c1_i64_37 : i64
    llvm.store %115, %113 : i64, !llvm.ptr
    %116 = arith.cmpi ult, %c1024_i64_36, %115 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %116, ^bb1(%c92_i8_38 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %117 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %118 = llvm.load %117 : !llvm.ptr -> i64
    %c3_i64_39 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %119 = arith.cmpi uge, %118, %c3_i64_39 : i64
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %119, ^bb36, ^bb1(%c80_i8_40 : i8)
  ^bb36:  // pred: ^bb35
    %120 = arith.subi %118, %c3_i64_39 : i64
    llvm.store %120, %117 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb38
    %c0_i256_41 = arith.constant 0 : i256
    %121 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %122 = llvm.load %121 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_41, %122 : i256, !llvm.ptr
    %123 = llvm.getelementptr %122[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %123, %121 : !llvm.ptr, !llvm.ptr
    cf.br ^bb49
  ^bb38:  // pred: ^bb40
    %124 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %125 = llvm.load %124 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %126 = arith.addi %125, %c1_i64_43 : i64
    llvm.store %126, %124 : i64, !llvm.ptr
    %127 = arith.cmpi ult, %c1024_i64_42, %126 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %127, ^bb1(%c92_i8_44 : i8), ^bb37
  ^bb39:  // pred: ^bb33
    %128 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %129 = llvm.load %128 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %130 = arith.cmpi uge, %129, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %130, ^bb40, ^bb1(%c80_i8_46 : i8)
  ^bb40:  // pred: ^bb39
    %131 = arith.subi %129, %c3_i64_45 : i64
    llvm.store %131, %128 : i64, !llvm.ptr
    cf.br ^bb38
  ^bb41:  // pred: ^bb48
    %132 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> !llvm.ptr
    %134 = llvm.getelementptr %133[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %135 = llvm.load %134 : !llvm.ptr -> i256
    llvm.store %134, %132 : !llvm.ptr, !llvm.ptr
    %136 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %137[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %139 = llvm.load %138 : !llvm.ptr -> i256
    llvm.store %138, %136 : !llvm.ptr, !llvm.ptr
    %140 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> !llvm.ptr
    %142 = llvm.getelementptr %141[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %143 = llvm.load %142 : !llvm.ptr -> i256
    llvm.store %142, %140 : !llvm.ptr, !llvm.ptr
    %144 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %145 = arith.cmpi ne, %144, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %145, ^bb1(%c87_i8 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %146 = arith.trunci %143 : i256 to i64
    %c0_i64_47 = arith.constant 0 : i64
    %147 = arith.cmpi slt, %146, %c0_i64_47 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %147, ^bb1(%c84_i8 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %c0_i64_48 = arith.constant 0 : i64
    %148 = arith.cmpi ne, %146, %c0_i64_48 : i64
    cf.cond_br %148, ^bb71, ^bb44
  ^bb44:  // 2 preds: ^bb43, ^bb76
    %c32000_i64 = arith.constant 32000 : i64
    %149 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> i64
    %151 = arith.cmpi ult, %150, %c32000_i64 : i64
    scf.if %151 {
    } else {
      %310 = arith.subi %150, %c32000_i64 : i64
      llvm.store %310, %149 : i64, !llvm.ptr
    }
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %151, ^bb1(%c80_i8_49 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %c1_i256 = arith.constant 1 : i256
    %152 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %135, %152 {alignment = 1 : i64} : i256, !llvm.ptr
    %153 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %154 = llvm.load %153 : !llvm.ptr -> i64
    %155 = arith.trunci %139 : i256 to i64
    %156 = call @dora_fn_create(%arg0, %146, %155, %152, %154) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %157 = llvm.getelementptr %156[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %158 = llvm.load %157 : !llvm.ptr -> i8
    %c0_i8_50 = arith.constant 0 : i8
    %159 = arith.cmpi ne, %158, %c0_i8_50 : i8
    cf.cond_br %159, ^bb1(%158 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %160 = llvm.getelementptr %156[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %161 = llvm.load %160 : !llvm.ptr -> i64
    %162 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %163 = llvm.load %162 : !llvm.ptr -> i64
    %164 = arith.cmpi ult, %163, %161 : i64
    scf.if %164 {
    } else {
      %310 = arith.subi %163, %161 : i64
      llvm.store %310, %162 : i64, !llvm.ptr
    }
    %c80_i8_51 = arith.constant 80 : i8
    cf.cond_br %164, ^bb1(%c80_i8_51 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %165 = llvm.load %152 : !llvm.ptr -> i256
    %166 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> !llvm.ptr
    llvm.store %165, %167 : i256, !llvm.ptr
    %168 = llvm.getelementptr %167[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %168, %166 : !llvm.ptr, !llvm.ptr
    cf.br ^bb54
  ^bb48:  // pred: ^bb50
    %169 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_52 = arith.constant 1024 : i64
    %170 = llvm.load %169 : !llvm.ptr -> i64
    %c-2_i64_53 = arith.constant -2 : i64
    %171 = arith.addi %170, %c-2_i64_53 : i64
    %c3_i64_54 = arith.constant 3 : i64
    llvm.store %171, %169 : i64, !llvm.ptr
    %172 = arith.cmpi ult, %170, %c3_i64_54 : i64
    %c91_i8_55 = arith.constant 91 : i8
    cf.cond_br %172, ^bb1(%c91_i8_55 : i8), ^bb41
  ^bb49:  // pred: ^bb37
    %173 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %c0_i64_56 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %175 = arith.cmpi uge, %174, %c0_i64_56 : i64
    %c80_i8_57 = arith.constant 80 : i8
    cf.cond_br %175, ^bb50, ^bb1(%c80_i8_57 : i8)
  ^bb50:  // pred: ^bb49
    %176 = arith.subi %174, %c0_i64_56 : i64
    llvm.store %176, %173 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // pred: ^bb53
    %177 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> !llvm.ptr
    %179 = llvm.getelementptr %178[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %180 = llvm.load %179 : !llvm.ptr -> i256
    llvm.store %179, %177 : !llvm.ptr, !llvm.ptr
    %c1_i256_58 = arith.constant 1 : i256
    %181 = llvm.alloca %c1_i256_58 x i256 : (i256) -> !llvm.ptr
    llvm.store %180, %181 {alignment = 1 : i64} : i256, !llvm.ptr
    %182 = call @dora_fn_extcodesize(%arg0, %181) : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %183 = llvm.getelementptr %182[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %184 = llvm.load %183 : !llvm.ptr -> i64
    %185 = llvm.getelementptr %182[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %186 = llvm.load %185 : !llvm.ptr -> i64
    %187 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %188 = llvm.load %187 : !llvm.ptr -> i64
    %189 = arith.cmpi ult, %188, %186 : i64
    scf.if %189 {
    } else {
      %310 = arith.subi %188, %186 : i64
      llvm.store %310, %187 : i64, !llvm.ptr
    }
    %c80_i8_59 = arith.constant 80 : i8
    cf.cond_br %189, ^bb1(%c80_i8_59 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %190 = arith.extui %184 : i64 to i256
    %191 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %192 = llvm.load %191 : !llvm.ptr -> !llvm.ptr
    llvm.store %190, %192 : i256, !llvm.ptr
    %193 = llvm.getelementptr %192[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %193, %191 : !llvm.ptr, !llvm.ptr
    cf.br ^bb56
  ^bb53:  // pred: ^bb55
    %194 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_60 = arith.constant 1024 : i64
    %195 = llvm.load %194 : !llvm.ptr -> i64
    %c0_i64_61 = arith.constant 0 : i64
    %196 = arith.addi %195, %c0_i64_61 : i64
    %c1_i64_62 = arith.constant 1 : i64
    llvm.store %196, %194 : i64, !llvm.ptr
    %197 = arith.cmpi ult, %195, %c1_i64_62 : i64
    %c91_i8_63 = arith.constant 91 : i8
    cf.cond_br %197, ^bb1(%c91_i8_63 : i8), ^bb51
  ^bb54:  // pred: ^bb47
    %198 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %199 = llvm.load %198 : !llvm.ptr -> i64
    %c0_i64_64 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %200 = arith.cmpi uge, %199, %c0_i64_64 : i64
    %c80_i8_65 = arith.constant 80 : i8
    cf.cond_br %200, ^bb55, ^bb1(%c80_i8_65 : i8)
  ^bb55:  // pred: ^bb54
    %201 = arith.subi %199, %c0_i64_64 : i64
    llvm.store %201, %198 : i64, !llvm.ptr
    cf.br ^bb53
  ^bb56:  // pred: ^bb52
    %c0_i64_66 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %202 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %203 = llvm.load %202 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_66, %c0_i64_66, %203, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb57:  // pred: ^bb11
    %204 = arith.trunci %38 : i256 to i64
    %c0_i64_67 = arith.constant 0 : i64
    %205 = arith.cmpi slt, %204, %c0_i64_67 : i64
    %c84_i8_68 = arith.constant 84 : i8
    cf.cond_br %205, ^bb1(%c84_i8_68 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %206 = arith.addi %204, %c32_i64 : i64
    %c0_i64_69 = arith.constant 0 : i64
    %207 = arith.cmpi slt, %206, %c0_i64_69 : i64
    %c84_i8_70 = arith.constant 84 : i8
    cf.cond_br %207, ^bb1(%c84_i8_70 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_71 = arith.constant 32 : i64
    %208 = arith.addi %206, %c31_i64 : i64
    %209 = arith.divui %208, %c32_i64_71 : i64
    %c32_i64_72 = arith.constant 32 : i64
    %210 = arith.muli %209, %c32_i64_72 : i64
    %211 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %212 = llvm.load %211 : !llvm.ptr -> i64
    %c31_i64_73 = arith.constant 31 : i64
    %c32_i64_74 = arith.constant 32 : i64
    %213 = arith.addi %212, %c31_i64_73 : i64
    %214 = arith.divui %213, %c32_i64_74 : i64
    %215 = arith.muli %214, %c32_i64_72 : i64
    %216 = arith.cmpi ult, %215, %210 : i64
    cf.cond_br %216, ^bb61, ^bb60
  ^bb60:  // 2 preds: ^bb59, ^bb63
    cf.br ^bb12
  ^bb61:  // pred: ^bb59
    %c3_i64_75 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %217 = arith.muli %214, %214 : i64
    %218 = arith.divui %217, %c512_i64 : i64
    %219 = arith.muli %214, %c3_i64_75 : i64
    %220 = arith.addi %218, %219 : i64
    %c3_i64_76 = arith.constant 3 : i64
    %c512_i64_77 = arith.constant 512 : i64
    %221 = arith.muli %209, %209 : i64
    %222 = arith.divui %221, %c512_i64_77 : i64
    %223 = arith.muli %209, %c3_i64_76 : i64
    %224 = arith.addi %222, %223 : i64
    %225 = arith.subi %224, %220 : i64
    %226 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %227 = llvm.load %226 : !llvm.ptr -> i64
    %228 = arith.cmpi ult, %227, %225 : i64
    scf.if %228 {
    } else {
      %310 = arith.subi %227, %225 : i64
      llvm.store %310, %226 : i64, !llvm.ptr
    }
    %c80_i8_78 = arith.constant 80 : i8
    cf.cond_br %228, ^bb1(%c80_i8_78 : i8), ^bb62
  ^bb62:  // pred: ^bb61
    %229 = call @dora_fn_extend_memory(%arg0, %210) : (!llvm.ptr, i64) -> !llvm.ptr
    %230 = llvm.getelementptr %229[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %231 = llvm.load %230 : !llvm.ptr -> !llvm.ptr
    %232 = llvm.getelementptr %229[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %233 = llvm.load %232 : !llvm.ptr -> i8
    %c0_i8_79 = arith.constant 0 : i8
    %234 = arith.cmpi ne, %233, %c0_i8_79 : i8
    cf.cond_br %234, ^bb1(%233 : i8), ^bb63
  ^bb63:  // pred: ^bb62
    %235 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %231, %235 : !llvm.ptr, !llvm.ptr
    %236 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %210, %236 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb64:  // pred: ^bb24
    %237 = arith.trunci %81 : i256 to i64
    %c0_i64_80 = arith.constant 0 : i64
    %238 = arith.cmpi slt, %237, %c0_i64_80 : i64
    %c84_i8_81 = arith.constant 84 : i8
    cf.cond_br %238, ^bb1(%c84_i8_81 : i8), ^bb65
  ^bb65:  // pred: ^bb64
    %239 = arith.addi %237, %c32_i64_22 : i64
    %c0_i64_82 = arith.constant 0 : i64
    %240 = arith.cmpi slt, %239, %c0_i64_82 : i64
    %c84_i8_83 = arith.constant 84 : i8
    cf.cond_br %240, ^bb1(%c84_i8_83 : i8), ^bb66
  ^bb66:  // pred: ^bb65
    %c31_i64_84 = arith.constant 31 : i64
    %c32_i64_85 = arith.constant 32 : i64
    %241 = arith.addi %239, %c31_i64_84 : i64
    %242 = arith.divui %241, %c32_i64_85 : i64
    %c32_i64_86 = arith.constant 32 : i64
    %243 = arith.muli %242, %c32_i64_86 : i64
    %244 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %245 = llvm.load %244 : !llvm.ptr -> i64
    %c31_i64_87 = arith.constant 31 : i64
    %c32_i64_88 = arith.constant 32 : i64
    %246 = arith.addi %245, %c31_i64_87 : i64
    %247 = arith.divui %246, %c32_i64_88 : i64
    %248 = arith.muli %247, %c32_i64_86 : i64
    %249 = arith.cmpi ult, %248, %243 : i64
    cf.cond_br %249, ^bb68, ^bb67
  ^bb67:  // 2 preds: ^bb66, ^bb70
    cf.br ^bb25
  ^bb68:  // pred: ^bb66
    %c3_i64_89 = arith.constant 3 : i64
    %c512_i64_90 = arith.constant 512 : i64
    %250 = arith.muli %247, %247 : i64
    %251 = arith.divui %250, %c512_i64_90 : i64
    %252 = arith.muli %247, %c3_i64_89 : i64
    %253 = arith.addi %251, %252 : i64
    %c3_i64_91 = arith.constant 3 : i64
    %c512_i64_92 = arith.constant 512 : i64
    %254 = arith.muli %242, %242 : i64
    %255 = arith.divui %254, %c512_i64_92 : i64
    %256 = arith.muli %242, %c3_i64_91 : i64
    %257 = arith.addi %255, %256 : i64
    %258 = arith.subi %257, %253 : i64
    %259 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %260 = llvm.load %259 : !llvm.ptr -> i64
    %261 = arith.cmpi ult, %260, %258 : i64
    scf.if %261 {
    } else {
      %310 = arith.subi %260, %258 : i64
      llvm.store %310, %259 : i64, !llvm.ptr
    }
    %c80_i8_93 = arith.constant 80 : i8
    cf.cond_br %261, ^bb1(%c80_i8_93 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %262 = call @dora_fn_extend_memory(%arg0, %243) : (!llvm.ptr, i64) -> !llvm.ptr
    %263 = llvm.getelementptr %262[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %264 = llvm.load %263 : !llvm.ptr -> !llvm.ptr
    %265 = llvm.getelementptr %262[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %266 = llvm.load %265 : !llvm.ptr -> i8
    %c0_i8_94 = arith.constant 0 : i8
    %267 = arith.cmpi ne, %266, %c0_i8_94 : i8
    cf.cond_br %267, ^bb1(%266 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %268 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %264, %268 : !llvm.ptr, !llvm.ptr
    %269 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %243, %269 : i64, !llvm.ptr
    cf.br ^bb67
  ^bb71:  // pred: ^bb43
    %c49152_i64 = arith.constant 49152 : i64
    %270 = arith.cmpi ugt, %146, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %270, ^bb1(%c100_i8 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %c31_i64_95 = arith.constant 31 : i64
    %c32_i64_96 = arith.constant 32 : i64
    %271 = arith.addi %146, %c31_i64_95 : i64
    %272 = arith.divui %271, %c32_i64_96 : i64
    %c2_i64_97 = arith.constant 2 : i64
    %273 = arith.muli %272, %c2_i64_97 : i64
    %274 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %275 = llvm.load %274 : !llvm.ptr -> i64
    %276 = arith.cmpi ult, %275, %273 : i64
    scf.if %276 {
    } else {
      %310 = arith.subi %275, %273 : i64
      llvm.store %310, %274 : i64, !llvm.ptr
    }
    %c80_i8_98 = arith.constant 80 : i8
    cf.cond_br %276, ^bb1(%c80_i8_98 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %277 = arith.trunci %139 : i256 to i64
    %c0_i64_99 = arith.constant 0 : i64
    %278 = arith.cmpi slt, %277, %c0_i64_99 : i64
    %c84_i8_100 = arith.constant 84 : i8
    cf.cond_br %278, ^bb1(%c84_i8_100 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %279 = arith.addi %277, %146 : i64
    %c0_i64_101 = arith.constant 0 : i64
    %280 = arith.cmpi slt, %279, %c0_i64_101 : i64
    %c84_i8_102 = arith.constant 84 : i8
    cf.cond_br %280, ^bb1(%c84_i8_102 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %c31_i64_103 = arith.constant 31 : i64
    %c32_i64_104 = arith.constant 32 : i64
    %281 = arith.addi %279, %c31_i64_103 : i64
    %282 = arith.divui %281, %c32_i64_104 : i64
    %c32_i64_105 = arith.constant 32 : i64
    %283 = arith.muli %282, %c32_i64_105 : i64
    %284 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %285 = llvm.load %284 : !llvm.ptr -> i64
    %c31_i64_106 = arith.constant 31 : i64
    %c32_i64_107 = arith.constant 32 : i64
    %286 = arith.addi %285, %c31_i64_106 : i64
    %287 = arith.divui %286, %c32_i64_107 : i64
    %288 = arith.muli %287, %c32_i64_105 : i64
    %289 = arith.cmpi ult, %288, %283 : i64
    cf.cond_br %289, ^bb77, ^bb76
  ^bb76:  // 2 preds: ^bb75, ^bb79
    cf.br ^bb44
  ^bb77:  // pred: ^bb75
    %c3_i64_108 = arith.constant 3 : i64
    %c512_i64_109 = arith.constant 512 : i64
    %290 = arith.muli %287, %287 : i64
    %291 = arith.divui %290, %c512_i64_109 : i64
    %292 = arith.muli %287, %c3_i64_108 : i64
    %293 = arith.addi %291, %292 : i64
    %c3_i64_110 = arith.constant 3 : i64
    %c512_i64_111 = arith.constant 512 : i64
    %294 = arith.muli %282, %282 : i64
    %295 = arith.divui %294, %c512_i64_111 : i64
    %296 = arith.muli %282, %c3_i64_110 : i64
    %297 = arith.addi %295, %296 : i64
    %298 = arith.subi %297, %293 : i64
    %299 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %300 = llvm.load %299 : !llvm.ptr -> i64
    %301 = arith.cmpi ult, %300, %298 : i64
    scf.if %301 {
    } else {
      %310 = arith.subi %300, %298 : i64
      llvm.store %310, %299 : i64, !llvm.ptr
    }
    %c80_i8_112 = arith.constant 80 : i8
    cf.cond_br %301, ^bb1(%c80_i8_112 : i8), ^bb78
  ^bb78:  // pred: ^bb77
    %302 = call @dora_fn_extend_memory(%arg0, %283) : (!llvm.ptr, i64) -> !llvm.ptr
    %303 = llvm.getelementptr %302[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %304 = llvm.load %303 : !llvm.ptr -> !llvm.ptr
    %305 = llvm.getelementptr %302[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %306 = llvm.load %305 : !llvm.ptr -> i8
    %c0_i8_113 = arith.constant 0 : i8
    %307 = arith.cmpi ne, %306, %c0_i8_113 : i8
    cf.cond_br %307, ^bb1(%306 : i8), ^bb79
  ^bb79:  // pred: ^bb78
    %308 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %304, %308 : !llvm.ptr, !llvm.ptr
    %309 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %283, %309 : i64, !llvm.ptr
    cf.br ^bb76
  }
}
