---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 42 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb13, ^bb14, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb27, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb36, ^bb37, ^bb40, ^bb41, ^bb44, ^bb45, ^bb47, ^bb48, ^bb49, ^bb51, ^bb52, ^bb54, ^bb55, ^bb57, ^bb59, ^bb60, ^bb63, ^bb64, ^bb65, ^bb66, ^bb67
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb16
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %46 = arith.addi %44, %c32_i64 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %47 = arith.cmpi slt, %46, %c0_i64_8 : i64
    %c84_i8_9 = arith.constant 84 : i8
    cf.cond_br %47, ^bb1(%c84_i8_9 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_10 = arith.constant 32 : i64
    %48 = arith.addi %46, %c31_i64 : i64
    %49 = arith.divui %48, %c32_i64_10 : i64
    %c32_i64_11 = arith.constant 32 : i64
    %50 = arith.muli %49, %c32_i64_11 : i64
    %51 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c31_i64_12 = arith.constant 31 : i64
    %c32_i64_13 = arith.constant 32 : i64
    %53 = arith.addi %52, %c31_i64_12 : i64
    %54 = arith.divui %53, %c32_i64_13 : i64
    %55 = arith.muli %54, %c32_i64_11 : i64
    %56 = arith.cmpi ult, %55, %50 : i64
    %57 = scf.if %56 -> (i64) {
      %c3_i64_100 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %281 = arith.muli %54, %54 : i64
      %282 = arith.divui %281, %c512_i64 : i64
      %283 = arith.muli %54, %c3_i64_100 : i64
      %284 = arith.addi %282, %283 : i64
      %c3_i64_101 = arith.constant 3 : i64
      %c512_i64_102 = arith.constant 512 : i64
      %285 = arith.muli %49, %49 : i64
      %286 = arith.divui %285, %c512_i64_102 : i64
      %287 = arith.muli %49, %c3_i64_101 : i64
      %288 = arith.addi %286, %287 : i64
      %289 = arith.subi %288, %284 : i64
      scf.yield %289 : i64
    } else {
      %c0_i64_100 = arith.constant 0 : i64
      scf.yield %c0_i64_100 : i64
    }
    %58 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %60 = arith.cmpi ult, %59, %57 : i64
    scf.if %60 {
    } else {
      %281 = arith.subi %59, %57 : i64
      llvm.store %281, %58 : i64, !llvm.ptr
    }
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %60, ^bb1(%c80_i8_14 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %61 = call @dora_fn_extend_memory(%arg0, %50) : (!llvm.ptr, i64) -> !llvm.ptr
    %62 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %63 = llvm.load %62 : !llvm.ptr -> !llvm.ptr
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %66 = arith.cmpi ne, %65, %c0_i8 : i8
    cf.cond_br %66, ^bb1(%65 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %67 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %63, %67 : !llvm.ptr, !llvm.ptr
    %68 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %50, %68 : i64, !llvm.ptr
    %69 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.getelementptr %70[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %72, %71 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_15 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %75 = arith.addi %74, %c-2_i64 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %76 = arith.cmpi ult, %74, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %76, ^bb1(%c91_i8 : i8), ^bb11
  ^bb17:  // pred: ^bb7
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %79, ^bb18, ^bb1(%c80_i8_17 : i8)
  ^bb18:  // pred: ^bb17
    %80 = arith.subi %78, %c3_i64_16 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c170141183460469231731687303715884105727_i256_18 = arith.constant 170141183460469231731687303715884105727 : i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_18, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_19 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c1_i64_20 = arith.constant 1 : i64
    %86 = arith.addi %85, %c1_i64_20 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %c1024_i64_19, %86 : i64
    %c92_i8_21 = arith.constant 92 : i8
    cf.cond_br %87, ^bb1(%c92_i8_21 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_22 = arith.constant 3 : i64
    %90 = arith.cmpi uge, %89, %c3_i64_22 : i64
    %c80_i8_23 = arith.constant 80 : i8
    cf.cond_br %90, ^bb22, ^bb1(%c80_i8_23 : i8)
  ^bb22:  // pred: ^bb21
    %91 = arith.subi %89, %c3_i64_22 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c32_i256 = arith.constant 32 : i256
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %93 : i256, !llvm.ptr
    %94 = llvm.getelementptr %93[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    cf.br ^bb33
  ^bb24:  // pred: ^bb26
    %95 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_24 = arith.constant 1024 : i64
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %97 = arith.addi %96, %c1_i64_25 : i64
    llvm.store %97, %95 : i64, !llvm.ptr
    %98 = arith.cmpi ult, %c1024_i64_24, %97 : i64
    %c92_i8_26 = arith.constant 92 : i8
    cf.cond_br %98, ^bb1(%c92_i8_26 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %c3_i64_27 = arith.constant 3 : i64
    %101 = arith.cmpi uge, %100, %c3_i64_27 : i64
    %c80_i8_28 = arith.constant 80 : i8
    cf.cond_br %101, ^bb26, ^bb1(%c80_i8_28 : i8)
  ^bb26:  // pred: ^bb25
    %102 = arith.subi %100, %c3_i64_27 : i64
    llvm.store %102, %99 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb32
    %103 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> !llvm.ptr
    %105 = llvm.getelementptr %104[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %106 = llvm.load %105 : !llvm.ptr -> i256
    llvm.store %105, %103 : !llvm.ptr, !llvm.ptr
    %107 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> !llvm.ptr
    %109 = llvm.getelementptr %108[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %110 = llvm.load %109 : !llvm.ptr -> i256
    llvm.store %109, %107 : !llvm.ptr, !llvm.ptr
    %111 = arith.trunci %106 : i256 to i64
    %c0_i64_29 = arith.constant 0 : i64
    %112 = arith.cmpi slt, %111, %c0_i64_29 : i64
    %c84_i8_30 = arith.constant 84 : i8
    cf.cond_br %112, ^bb1(%c84_i8_30 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c32_i64_31 = arith.constant 32 : i64
    %113 = arith.addi %111, %c32_i64_31 : i64
    %c0_i64_32 = arith.constant 0 : i64
    %114 = arith.cmpi slt, %113, %c0_i64_32 : i64
    %c84_i8_33 = arith.constant 84 : i8
    cf.cond_br %114, ^bb1(%c84_i8_33 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c31_i64_34 = arith.constant 31 : i64
    %c32_i64_35 = arith.constant 32 : i64
    %115 = arith.addi %113, %c31_i64_34 : i64
    %116 = arith.divui %115, %c32_i64_35 : i64
    %c32_i64_36 = arith.constant 32 : i64
    %117 = arith.muli %116, %c32_i64_36 : i64
    %118 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c31_i64_37 = arith.constant 31 : i64
    %c32_i64_38 = arith.constant 32 : i64
    %120 = arith.addi %119, %c31_i64_37 : i64
    %121 = arith.divui %120, %c32_i64_38 : i64
    %122 = arith.muli %121, %c32_i64_36 : i64
    %123 = arith.cmpi ult, %122, %117 : i64
    %124 = scf.if %123 -> (i64) {
      %c3_i64_100 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %281 = arith.muli %121, %121 : i64
      %282 = arith.divui %281, %c512_i64 : i64
      %283 = arith.muli %121, %c3_i64_100 : i64
      %284 = arith.addi %282, %283 : i64
      %c3_i64_101 = arith.constant 3 : i64
      %c512_i64_102 = arith.constant 512 : i64
      %285 = arith.muli %116, %116 : i64
      %286 = arith.divui %285, %c512_i64_102 : i64
      %287 = arith.muli %116, %c3_i64_101 : i64
      %288 = arith.addi %286, %287 : i64
      %289 = arith.subi %288, %284 : i64
      scf.yield %289 : i64
    } else {
      %c0_i64_100 = arith.constant 0 : i64
      scf.yield %c0_i64_100 : i64
    }
    %125 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> i64
    %127 = arith.cmpi ult, %126, %124 : i64
    scf.if %127 {
    } else {
      %281 = arith.subi %126, %124 : i64
      llvm.store %281, %125 : i64, !llvm.ptr
    }
    %c80_i8_39 = arith.constant 80 : i8
    cf.cond_br %127, ^bb1(%c80_i8_39 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %128 = call @dora_fn_extend_memory(%arg0, %117) : (!llvm.ptr, i64) -> !llvm.ptr
    %129 = llvm.getelementptr %128[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %130 = llvm.load %129 : !llvm.ptr -> !llvm.ptr
    %131 = llvm.getelementptr %128[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %132 = llvm.load %131 : !llvm.ptr -> i8
    %c0_i8_40 = arith.constant 0 : i8
    %133 = arith.cmpi ne, %132, %c0_i8_40 : i8
    cf.cond_br %133, ^bb1(%132 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %134 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %130, %134 : !llvm.ptr, !llvm.ptr
    %135 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %117, %135 : i64, !llvm.ptr
    %136 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %137[%111] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %139 = llvm.intr.bswap(%110)  : (i256) -> i256
    llvm.store %139, %138 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb37
  ^bb32:  // pred: ^bb34
    %140 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_41 = arith.constant 1024 : i64
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %c-2_i64_42 = arith.constant -2 : i64
    %142 = arith.addi %141, %c-2_i64_42 : i64
    llvm.store %142, %140 : i64, !llvm.ptr
    %c2_i64_43 = arith.constant 2 : i64
    %143 = arith.cmpi ult, %141, %c2_i64_43 : i64
    %c91_i8_44 = arith.constant 91 : i8
    cf.cond_br %143, ^bb1(%c91_i8_44 : i8), ^bb27
  ^bb33:  // pred: ^bb23
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    %146 = arith.cmpi uge, %145, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %146, ^bb34, ^bb1(%c80_i8_46 : i8)
  ^bb34:  // pred: ^bb33
    %147 = arith.subi %145, %c3_i64_45 : i64
    llvm.store %147, %144 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb36
    %c41_i256 = arith.constant 41 : i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %c41_i256, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %151 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_47 = arith.constant 1024 : i64
    %152 = llvm.load %151 : !llvm.ptr -> i64
    %c1_i64_48 = arith.constant 1 : i64
    %153 = arith.addi %152, %c1_i64_48 : i64
    llvm.store %153, %151 : i64, !llvm.ptr
    %154 = arith.cmpi ult, %c1024_i64_47, %153 : i64
    %c92_i8_49 = arith.constant 92 : i8
    cf.cond_br %154, ^bb1(%c92_i8_49 : i8), ^bb35
  ^bb37:  // pred: ^bb31
    %155 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %156 = llvm.load %155 : !llvm.ptr -> i64
    %c3_i64_50 = arith.constant 3 : i64
    %157 = arith.cmpi uge, %156, %c3_i64_50 : i64
    %c80_i8_51 = arith.constant 80 : i8
    cf.cond_br %157, ^bb38, ^bb1(%c80_i8_51 : i8)
  ^bb38:  // pred: ^bb37
    %158 = arith.subi %156, %c3_i64_50 : i64
    llvm.store %158, %155 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_52 = arith.constant 0 : i256
    %159 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_52, %160 : i256, !llvm.ptr
    %161 = llvm.getelementptr %160[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %161, %159 : !llvm.ptr, !llvm.ptr
    cf.br ^bb45
  ^bb40:  // pred: ^bb42
    %162 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_53 = arith.constant 1024 : i64
    %163 = llvm.load %162 : !llvm.ptr -> i64
    %c1_i64_54 = arith.constant 1 : i64
    %164 = arith.addi %163, %c1_i64_54 : i64
    llvm.store %164, %162 : i64, !llvm.ptr
    %165 = arith.cmpi ult, %c1024_i64_53, %164 : i64
    %c92_i8_55 = arith.constant 92 : i8
    cf.cond_br %165, ^bb1(%c92_i8_55 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %166 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> i64
    %c3_i64_56 = arith.constant 3 : i64
    %168 = arith.cmpi uge, %167, %c3_i64_56 : i64
    %c80_i8_57 = arith.constant 80 : i8
    cf.cond_br %168, ^bb42, ^bb1(%c80_i8_57 : i8)
  ^bb42:  // pred: ^bb41
    %169 = arith.subi %167, %c3_i64_56 : i64
    llvm.store %169, %166 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb44
    %c0_i256_58 = arith.constant 0 : i256
    %170 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_58, %171 : i256, !llvm.ptr
    %172 = llvm.getelementptr %171[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %172, %170 : !llvm.ptr, !llvm.ptr
    cf.br ^bb55
  ^bb44:  // pred: ^bb46
    %173 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_59 = arith.constant 1024 : i64
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %c1_i64_60 = arith.constant 1 : i64
    %175 = arith.addi %174, %c1_i64_60 : i64
    llvm.store %175, %173 : i64, !llvm.ptr
    %176 = arith.cmpi ult, %c1024_i64_59, %175 : i64
    %c92_i8_61 = arith.constant 92 : i8
    cf.cond_br %176, ^bb1(%c92_i8_61 : i8), ^bb43
  ^bb45:  // pred: ^bb39
    %177 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> i64
    %c3_i64_62 = arith.constant 3 : i64
    %179 = arith.cmpi uge, %178, %c3_i64_62 : i64
    %c80_i8_63 = arith.constant 80 : i8
    cf.cond_br %179, ^bb46, ^bb1(%c80_i8_63 : i8)
  ^bb46:  // pred: ^bb45
    %180 = arith.subi %178, %c3_i64_62 : i64
    llvm.store %180, %177 : i64, !llvm.ptr
    cf.br ^bb44
  ^bb47:  // pred: ^bb54
    %181 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %182 = llvm.load %181 : !llvm.ptr -> !llvm.ptr
    %183 = llvm.getelementptr %182[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %184 = llvm.load %183 : !llvm.ptr -> i256
    llvm.store %183, %181 : !llvm.ptr, !llvm.ptr
    %185 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> !llvm.ptr
    %187 = llvm.getelementptr %186[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %188 = llvm.load %187 : !llvm.ptr -> i256
    llvm.store %187, %185 : !llvm.ptr, !llvm.ptr
    %189 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> !llvm.ptr
    %191 = llvm.getelementptr %190[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %192 = llvm.load %191 : !llvm.ptr -> i256
    llvm.store %191, %189 : !llvm.ptr, !llvm.ptr
    %193 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %194, ^bb1(%c87_i8 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %195 = arith.trunci %188 : i256 to i64
    %c0_i64_64 = arith.constant 0 : i64
    %196 = arith.cmpi slt, %195, %c0_i64_64 : i64
    %c84_i8_65 = arith.constant 84 : i8
    cf.cond_br %196, ^bb1(%c84_i8_65 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %197 = arith.trunci %192 : i256 to i64
    %c0_i64_66 = arith.constant 0 : i64
    %198 = arith.cmpi slt, %197, %c0_i64_66 : i64
    %c84_i8_67 = arith.constant 84 : i8
    cf.cond_br %198, ^bb1(%c84_i8_67 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %c0_i64_68 = arith.constant 0 : i64
    %199 = arith.cmpi ne, %197, %c0_i64_68 : i64
    cf.cond_br %199, ^bb63, ^bb51
  ^bb51:  // 2 preds: ^bb50, ^bb68
    %c32000_i64 = arith.constant 32000 : i64
    %200 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %201 = llvm.load %200 : !llvm.ptr -> i64
    %202 = arith.cmpi ult, %201, %c32000_i64 : i64
    scf.if %202 {
    } else {
      %281 = arith.subi %201, %c32000_i64 : i64
      llvm.store %281, %200 : i64, !llvm.ptr
    }
    %c80_i8_69 = arith.constant 80 : i8
    cf.cond_br %202, ^bb1(%c80_i8_69 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %c1_i256 = arith.constant 1 : i256
    %203 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %184, %203 {alignment = 1 : i64} : i256, !llvm.ptr
    %204 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> i64
    %c1_i64_70 = arith.constant 1 : i64
    %206 = llvm.alloca %c1_i64_70 x i64 : (i64) -> !llvm.ptr
    llvm.store %205, %206 {alignment = 1 : i64} : i64, !llvm.ptr
    %207 = call @dora_fn_create(%arg0, %197, %195, %203, %206) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %208 = llvm.getelementptr %207[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %209 = llvm.load %208 : !llvm.ptr -> i8
    %c0_i8_71 = arith.constant 0 : i8
    %210 = arith.cmpi ne, %209, %c0_i8_71 : i8
    cf.cond_br %210, ^bb1(%209 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %211 = llvm.load %203 : !llvm.ptr -> i256
    %212 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %213 = llvm.load %212 : !llvm.ptr -> !llvm.ptr
    llvm.store %211, %213 : i256, !llvm.ptr
    %214 = llvm.getelementptr %213[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %214, %212 : !llvm.ptr, !llvm.ptr
    cf.br ^bb60
  ^bb54:  // pred: ^bb56
    %215 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_72 = arith.constant 1024 : i64
    %216 = llvm.load %215 : !llvm.ptr -> i64
    %c-2_i64_73 = arith.constant -2 : i64
    %217 = arith.addi %216, %c-2_i64_73 : i64
    llvm.store %217, %215 : i64, !llvm.ptr
    %c3_i64_74 = arith.constant 3 : i64
    %218 = arith.cmpi ult, %216, %c3_i64_74 : i64
    %c91_i8_75 = arith.constant 91 : i8
    cf.cond_br %218, ^bb1(%c91_i8_75 : i8), ^bb47
  ^bb55:  // pred: ^bb43
    %219 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %220 = llvm.load %219 : !llvm.ptr -> i64
    %c0_i64_76 = arith.constant 0 : i64
    %221 = arith.cmpi uge, %220, %c0_i64_76 : i64
    %c80_i8_77 = arith.constant 80 : i8
    cf.cond_br %221, ^bb56, ^bb1(%c80_i8_77 : i8)
  ^bb56:  // pred: ^bb55
    %222 = arith.subi %220, %c0_i64_76 : i64
    llvm.store %222, %219 : i64, !llvm.ptr
    cf.br ^bb54
  ^bb57:  // pred: ^bb59
    %223 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %224 = llvm.load %223 : !llvm.ptr -> !llvm.ptr
    %225 = llvm.getelementptr %224[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %226 = llvm.load %225 : !llvm.ptr -> i256
    llvm.store %225, %223 : !llvm.ptr, !llvm.ptr
    %c1_i256_78 = arith.constant 1 : i256
    %227 = llvm.alloca %c1_i256_78 x i256 : (i256) -> !llvm.ptr
    llvm.store %226, %227 {alignment = 1 : i64} : i256, !llvm.ptr
    %228 = call @dora_fn_extcodesize(%arg0, %227) : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %229 = llvm.getelementptr %228[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %230 = llvm.load %229 : !llvm.ptr -> i64
    %231 = llvm.getelementptr %228[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %232 = llvm.load %231 : !llvm.ptr -> i64
    %233 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %234 = llvm.load %233 : !llvm.ptr -> i64
    %235 = arith.cmpi ult, %234, %232 : i64
    scf.if %235 {
    } else {
      %281 = arith.subi %234, %232 : i64
      llvm.store %281, %233 : i64, !llvm.ptr
    }
    %c80_i8_79 = arith.constant 80 : i8
    cf.cond_br %235, ^bb1(%c80_i8_79 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %236 = arith.extui %230 : i64 to i256
    %237 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> !llvm.ptr
    llvm.store %236, %238 : i256, !llvm.ptr
    %239 = llvm.getelementptr %238[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %239, %237 : !llvm.ptr, !llvm.ptr
    cf.br ^bb62
  ^bb59:  // pred: ^bb61
    %240 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_80 = arith.constant 1024 : i64
    %241 = llvm.load %240 : !llvm.ptr -> i64
    %c0_i64_81 = arith.constant 0 : i64
    %242 = arith.addi %241, %c0_i64_81 : i64
    llvm.store %242, %240 : i64, !llvm.ptr
    %c1_i64_82 = arith.constant 1 : i64
    %243 = arith.cmpi ult, %241, %c1_i64_82 : i64
    %c91_i8_83 = arith.constant 91 : i8
    cf.cond_br %243, ^bb1(%c91_i8_83 : i8), ^bb57
  ^bb60:  // pred: ^bb53
    %244 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %245 = llvm.load %244 : !llvm.ptr -> i64
    %c0_i64_84 = arith.constant 0 : i64
    %246 = arith.cmpi uge, %245, %c0_i64_84 : i64
    %c80_i8_85 = arith.constant 80 : i8
    cf.cond_br %246, ^bb61, ^bb1(%c80_i8_85 : i8)
  ^bb61:  // pred: ^bb60
    %247 = arith.subi %245, %c0_i64_84 : i64
    llvm.store %247, %244 : i64, !llvm.ptr
    cf.br ^bb59
  ^bb62:  // pred: ^bb58
    %c0_i64_86 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %248 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %249 = llvm.load %248 : !llvm.ptr -> i64
    %250 = call @dora_fn_write_result(%arg0, %c0_i64_86, %c0_i64_86, %249, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb63:  // pred: ^bb50
    %c49152_i64 = arith.constant 49152 : i64
    %251 = arith.cmpi ugt, %197, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %251, ^bb1(%c100_i8 : i8), ^bb64
  ^bb64:  // pred: ^bb63
    %c31_i64_87 = arith.constant 31 : i64
    %c32_i64_88 = arith.constant 32 : i64
    %252 = arith.addi %197, %c31_i64_87 : i64
    %253 = arith.divui %252, %c32_i64_88 : i64
    %c2_i64_89 = arith.constant 2 : i64
    %254 = arith.muli %253, %c2_i64_89 : i64
    %255 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %256 = llvm.load %255 : !llvm.ptr -> i64
    %257 = arith.cmpi ult, %256, %254 : i64
    scf.if %257 {
    } else {
      %281 = arith.subi %256, %254 : i64
      llvm.store %281, %255 : i64, !llvm.ptr
    }
    %c80_i8_90 = arith.constant 80 : i8
    cf.cond_br %257, ^bb1(%c80_i8_90 : i8), ^bb65
  ^bb65:  // pred: ^bb64
    %258 = arith.addi %195, %197 : i64
    %c0_i64_91 = arith.constant 0 : i64
    %259 = arith.cmpi slt, %258, %c0_i64_91 : i64
    %c84_i8_92 = arith.constant 84 : i8
    cf.cond_br %259, ^bb1(%c84_i8_92 : i8), ^bb66
  ^bb66:  // pred: ^bb65
    %c31_i64_93 = arith.constant 31 : i64
    %c32_i64_94 = arith.constant 32 : i64
    %260 = arith.addi %258, %c31_i64_93 : i64
    %261 = arith.divui %260, %c32_i64_94 : i64
    %c32_i64_95 = arith.constant 32 : i64
    %262 = arith.muli %261, %c32_i64_95 : i64
    %263 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %264 = llvm.load %263 : !llvm.ptr -> i64
    %c31_i64_96 = arith.constant 31 : i64
    %c32_i64_97 = arith.constant 32 : i64
    %265 = arith.addi %264, %c31_i64_96 : i64
    %266 = arith.divui %265, %c32_i64_97 : i64
    %267 = arith.muli %266, %c32_i64_95 : i64
    %268 = arith.cmpi ult, %267, %262 : i64
    %269 = scf.if %268 -> (i64) {
      %c3_i64_100 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %281 = arith.muli %266, %266 : i64
      %282 = arith.divui %281, %c512_i64 : i64
      %283 = arith.muli %266, %c3_i64_100 : i64
      %284 = arith.addi %282, %283 : i64
      %c3_i64_101 = arith.constant 3 : i64
      %c512_i64_102 = arith.constant 512 : i64
      %285 = arith.muli %261, %261 : i64
      %286 = arith.divui %285, %c512_i64_102 : i64
      %287 = arith.muli %261, %c3_i64_101 : i64
      %288 = arith.addi %286, %287 : i64
      %289 = arith.subi %288, %284 : i64
      scf.yield %289 : i64
    } else {
      %c0_i64_100 = arith.constant 0 : i64
      scf.yield %c0_i64_100 : i64
    }
    %270 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %271 = llvm.load %270 : !llvm.ptr -> i64
    %272 = arith.cmpi ult, %271, %269 : i64
    scf.if %272 {
    } else {
      %281 = arith.subi %271, %269 : i64
      llvm.store %281, %270 : i64, !llvm.ptr
    }
    %c80_i8_98 = arith.constant 80 : i8
    cf.cond_br %272, ^bb1(%c80_i8_98 : i8), ^bb67
  ^bb67:  // pred: ^bb66
    %273 = call @dora_fn_extend_memory(%arg0, %262) : (!llvm.ptr, i64) -> !llvm.ptr
    %274 = llvm.getelementptr %273[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %275 = llvm.load %274 : !llvm.ptr -> !llvm.ptr
    %276 = llvm.getelementptr %273[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %277 = llvm.load %276 : !llvm.ptr -> i8
    %c0_i8_99 = arith.constant 0 : i8
    %278 = arith.cmpi ne, %277, %c0_i8_99 : i8
    cf.cond_br %278, ^bb1(%277 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %279 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %275, %279 : !llvm.ptr, !llvm.ptr
    %280 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %262, %280 : i64, !llvm.ptr
    cf.br ^bb51
  }
}
