---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 78 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb13, ^bb14, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb27, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb36, ^bb37, ^bb40, ^bb41, ^bb44, ^bb45, ^bb47, ^bb48, ^bb49, ^bb51, ^bb52, ^bb53, ^bb55, ^bb56, ^bb59, ^bb60, ^bb63, ^bb64, ^bb66, ^bb67, ^bb68, ^bb69, ^bb71, ^bb72, ^bb75, ^bb76, ^bb79, ^bb80, ^bb82, ^bb83, ^bb84, ^bb85, ^bb87, ^bb88, ^bb91, ^bb92, ^bb95, ^bb96, ^bb99, ^bb100, ^bb103, ^bb104, ^bb106, ^bb107, ^bb108, ^bb109, ^bb110, ^bb111, ^bb112, ^bb113, ^bb115, ^bb116, ^bb119, ^bb120, ^bb121, ^bb122, ^bb123
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb16
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %46 = arith.addi %44, %c32_i64 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %47 = arith.cmpi slt, %46, %c0_i64_8 : i64
    %c84_i8_9 = arith.constant 84 : i8
    cf.cond_br %47, ^bb1(%c84_i8_9 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_10 = arith.constant 32 : i64
    %48 = arith.addi %46, %c31_i64 : i64
    %49 = arith.divui %48, %c32_i64_10 : i64
    %c32_i64_11 = arith.constant 32 : i64
    %50 = arith.muli %49, %c32_i64_11 : i64
    %51 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c31_i64_12 = arith.constant 31 : i64
    %c32_i64_13 = arith.constant 32 : i64
    %53 = arith.addi %52, %c31_i64_12 : i64
    %54 = arith.divui %53, %c32_i64_13 : i64
    %55 = arith.muli %54, %c32_i64_11 : i64
    %56 = arith.cmpi ult, %55, %50 : i64
    %57 = scf.if %56 -> (i64) {
      %c3_i64_200 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %508 = arith.muli %54, %54 : i64
      %509 = arith.divui %508, %c512_i64 : i64
      %510 = arith.muli %54, %c3_i64_200 : i64
      %511 = arith.addi %509, %510 : i64
      %c3_i64_201 = arith.constant 3 : i64
      %c512_i64_202 = arith.constant 512 : i64
      %512 = arith.muli %49, %49 : i64
      %513 = arith.divui %512, %c512_i64_202 : i64
      %514 = arith.muli %49, %c3_i64_201 : i64
      %515 = arith.addi %513, %514 : i64
      %516 = arith.subi %515, %511 : i64
      scf.yield %516 : i64
    } else {
      %c0_i64_200 = arith.constant 0 : i64
      scf.yield %c0_i64_200 : i64
    }
    %58 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %60 = arith.cmpi ult, %59, %57 : i64
    scf.if %60 {
    } else {
      %508 = arith.subi %59, %57 : i64
      llvm.store %508, %58 : i64, !llvm.ptr
    }
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %60, ^bb1(%c80_i8_14 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %61 = call @dora_fn_extend_memory(%arg0, %50) : (!llvm.ptr, i64) -> !llvm.ptr
    %62 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %63 = llvm.load %62 : !llvm.ptr -> !llvm.ptr
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %66 = arith.cmpi ne, %65, %c0_i8 : i8
    cf.cond_br %66, ^bb1(%65 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %67 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %63, %67 : !llvm.ptr, !llvm.ptr
    %68 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %50, %68 : i64, !llvm.ptr
    %69 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.getelementptr %70[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %72, %71 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_15 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %75 = arith.addi %74, %c-2_i64 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %76 = arith.cmpi ult, %74, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %76, ^bb1(%c91_i8 : i8), ^bb11
  ^bb17:  // pred: ^bb7
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %79, ^bb18, ^bb1(%c80_i8_17 : i8)
  ^bb18:  // pred: ^bb17
    %80 = arith.subi %78, %c3_i64_16 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c170141183460469231731687303715884105727_i256_18 = arith.constant 170141183460469231731687303715884105727 : i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_18, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_19 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c1_i64_20 = arith.constant 1 : i64
    %86 = arith.addi %85, %c1_i64_20 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %c1024_i64_19, %86 : i64
    %c92_i8_21 = arith.constant 92 : i8
    cf.cond_br %87, ^bb1(%c92_i8_21 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_22 = arith.constant 3 : i64
    %90 = arith.cmpi uge, %89, %c3_i64_22 : i64
    %c80_i8_23 = arith.constant 80 : i8
    cf.cond_br %90, ^bb22, ^bb1(%c80_i8_23 : i8)
  ^bb22:  // pred: ^bb21
    %91 = arith.subi %89, %c3_i64_22 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c32_i256 = arith.constant 32 : i256
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %93 : i256, !llvm.ptr
    %94 = llvm.getelementptr %93[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    cf.br ^bb33
  ^bb24:  // pred: ^bb26
    %95 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_24 = arith.constant 1024 : i64
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %97 = arith.addi %96, %c1_i64_25 : i64
    llvm.store %97, %95 : i64, !llvm.ptr
    %98 = arith.cmpi ult, %c1024_i64_24, %97 : i64
    %c92_i8_26 = arith.constant 92 : i8
    cf.cond_br %98, ^bb1(%c92_i8_26 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %c3_i64_27 = arith.constant 3 : i64
    %101 = arith.cmpi uge, %100, %c3_i64_27 : i64
    %c80_i8_28 = arith.constant 80 : i8
    cf.cond_br %101, ^bb26, ^bb1(%c80_i8_28 : i8)
  ^bb26:  // pred: ^bb25
    %102 = arith.subi %100, %c3_i64_27 : i64
    llvm.store %102, %99 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb32
    %103 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> !llvm.ptr
    %105 = llvm.getelementptr %104[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %106 = llvm.load %105 : !llvm.ptr -> i256
    llvm.store %105, %103 : !llvm.ptr, !llvm.ptr
    %107 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> !llvm.ptr
    %109 = llvm.getelementptr %108[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %110 = llvm.load %109 : !llvm.ptr -> i256
    llvm.store %109, %107 : !llvm.ptr, !llvm.ptr
    %111 = arith.trunci %106 : i256 to i64
    %c0_i64_29 = arith.constant 0 : i64
    %112 = arith.cmpi slt, %111, %c0_i64_29 : i64
    %c84_i8_30 = arith.constant 84 : i8
    cf.cond_br %112, ^bb1(%c84_i8_30 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c32_i64_31 = arith.constant 32 : i64
    %113 = arith.addi %111, %c32_i64_31 : i64
    %c0_i64_32 = arith.constant 0 : i64
    %114 = arith.cmpi slt, %113, %c0_i64_32 : i64
    %c84_i8_33 = arith.constant 84 : i8
    cf.cond_br %114, ^bb1(%c84_i8_33 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c31_i64_34 = arith.constant 31 : i64
    %c32_i64_35 = arith.constant 32 : i64
    %115 = arith.addi %113, %c31_i64_34 : i64
    %116 = arith.divui %115, %c32_i64_35 : i64
    %c32_i64_36 = arith.constant 32 : i64
    %117 = arith.muli %116, %c32_i64_36 : i64
    %118 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c31_i64_37 = arith.constant 31 : i64
    %c32_i64_38 = arith.constant 32 : i64
    %120 = arith.addi %119, %c31_i64_37 : i64
    %121 = arith.divui %120, %c32_i64_38 : i64
    %122 = arith.muli %121, %c32_i64_36 : i64
    %123 = arith.cmpi ult, %122, %117 : i64
    %124 = scf.if %123 -> (i64) {
      %c3_i64_200 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %508 = arith.muli %121, %121 : i64
      %509 = arith.divui %508, %c512_i64 : i64
      %510 = arith.muli %121, %c3_i64_200 : i64
      %511 = arith.addi %509, %510 : i64
      %c3_i64_201 = arith.constant 3 : i64
      %c512_i64_202 = arith.constant 512 : i64
      %512 = arith.muli %116, %116 : i64
      %513 = arith.divui %512, %c512_i64_202 : i64
      %514 = arith.muli %116, %c3_i64_201 : i64
      %515 = arith.addi %513, %514 : i64
      %516 = arith.subi %515, %511 : i64
      scf.yield %516 : i64
    } else {
      %c0_i64_200 = arith.constant 0 : i64
      scf.yield %c0_i64_200 : i64
    }
    %125 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> i64
    %127 = arith.cmpi ult, %126, %124 : i64
    scf.if %127 {
    } else {
      %508 = arith.subi %126, %124 : i64
      llvm.store %508, %125 : i64, !llvm.ptr
    }
    %c80_i8_39 = arith.constant 80 : i8
    cf.cond_br %127, ^bb1(%c80_i8_39 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %128 = call @dora_fn_extend_memory(%arg0, %117) : (!llvm.ptr, i64) -> !llvm.ptr
    %129 = llvm.getelementptr %128[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %130 = llvm.load %129 : !llvm.ptr -> !llvm.ptr
    %131 = llvm.getelementptr %128[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %132 = llvm.load %131 : !llvm.ptr -> i8
    %c0_i8_40 = arith.constant 0 : i8
    %133 = arith.cmpi ne, %132, %c0_i8_40 : i8
    cf.cond_br %133, ^bb1(%132 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %134 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %130, %134 : !llvm.ptr, !llvm.ptr
    %135 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %117, %135 : i64, !llvm.ptr
    %136 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %137[%111] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %139 = llvm.intr.bswap(%110)  : (i256) -> i256
    llvm.store %139, %138 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb37
  ^bb32:  // pred: ^bb34
    %140 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_41 = arith.constant 1024 : i64
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %c-2_i64_42 = arith.constant -2 : i64
    %142 = arith.addi %141, %c-2_i64_42 : i64
    llvm.store %142, %140 : i64, !llvm.ptr
    %c2_i64_43 = arith.constant 2 : i64
    %143 = arith.cmpi ult, %141, %c2_i64_43 : i64
    %c91_i8_44 = arith.constant 91 : i8
    cf.cond_br %143, ^bb1(%c91_i8_44 : i8), ^bb27
  ^bb33:  // pred: ^bb23
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    %146 = arith.cmpi uge, %145, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %146, ^bb34, ^bb1(%c80_i8_46 : i8)
  ^bb34:  // pred: ^bb33
    %147 = arith.subi %145, %c3_i64_45 : i64
    llvm.store %147, %144 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb36
    %c41_i256 = arith.constant 41 : i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %c41_i256, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %151 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_47 = arith.constant 1024 : i64
    %152 = llvm.load %151 : !llvm.ptr -> i64
    %c1_i64_48 = arith.constant 1 : i64
    %153 = arith.addi %152, %c1_i64_48 : i64
    llvm.store %153, %151 : i64, !llvm.ptr
    %154 = arith.cmpi ult, %c1024_i64_47, %153 : i64
    %c92_i8_49 = arith.constant 92 : i8
    cf.cond_br %154, ^bb1(%c92_i8_49 : i8), ^bb35
  ^bb37:  // pred: ^bb31
    %155 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %156 = llvm.load %155 : !llvm.ptr -> i64
    %c3_i64_50 = arith.constant 3 : i64
    %157 = arith.cmpi uge, %156, %c3_i64_50 : i64
    %c80_i8_51 = arith.constant 80 : i8
    cf.cond_br %157, ^bb38, ^bb1(%c80_i8_51 : i8)
  ^bb38:  // pred: ^bb37
    %158 = arith.subi %156, %c3_i64_50 : i64
    llvm.store %158, %155 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_52 = arith.constant 0 : i256
    %159 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_52, %160 : i256, !llvm.ptr
    %161 = llvm.getelementptr %160[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %161, %159 : !llvm.ptr, !llvm.ptr
    cf.br ^bb45
  ^bb40:  // pred: ^bb42
    %162 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_53 = arith.constant 1024 : i64
    %163 = llvm.load %162 : !llvm.ptr -> i64
    %c1_i64_54 = arith.constant 1 : i64
    %164 = arith.addi %163, %c1_i64_54 : i64
    llvm.store %164, %162 : i64, !llvm.ptr
    %165 = arith.cmpi ult, %c1024_i64_53, %164 : i64
    %c92_i8_55 = arith.constant 92 : i8
    cf.cond_br %165, ^bb1(%c92_i8_55 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %166 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> i64
    %c3_i64_56 = arith.constant 3 : i64
    %168 = arith.cmpi uge, %167, %c3_i64_56 : i64
    %c80_i8_57 = arith.constant 80 : i8
    cf.cond_br %168, ^bb42, ^bb1(%c80_i8_57 : i8)
  ^bb42:  // pred: ^bb41
    %169 = arith.subi %167, %c3_i64_56 : i64
    llvm.store %169, %166 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb44
    %c0_i256_58 = arith.constant 0 : i256
    %170 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_58, %171 : i256, !llvm.ptr
    %172 = llvm.getelementptr %171[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %172, %170 : !llvm.ptr, !llvm.ptr
    cf.br ^bb56
  ^bb44:  // pred: ^bb46
    %173 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_59 = arith.constant 1024 : i64
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %c1_i64_60 = arith.constant 1 : i64
    %175 = arith.addi %174, %c1_i64_60 : i64
    llvm.store %175, %173 : i64, !llvm.ptr
    %176 = arith.cmpi ult, %c1024_i64_59, %175 : i64
    %c92_i8_61 = arith.constant 92 : i8
    cf.cond_br %176, ^bb1(%c92_i8_61 : i8), ^bb43
  ^bb45:  // pred: ^bb39
    %177 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> i64
    %c3_i64_62 = arith.constant 3 : i64
    %179 = arith.cmpi uge, %178, %c3_i64_62 : i64
    %c80_i8_63 = arith.constant 80 : i8
    cf.cond_br %179, ^bb46, ^bb1(%c80_i8_63 : i8)
  ^bb46:  // pred: ^bb45
    %180 = arith.subi %178, %c3_i64_62 : i64
    llvm.store %180, %177 : i64, !llvm.ptr
    cf.br ^bb44
  ^bb47:  // pred: ^bb55
    %181 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %182 = llvm.load %181 : !llvm.ptr -> !llvm.ptr
    %183 = llvm.getelementptr %182[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %184 = llvm.load %183 : !llvm.ptr -> i256
    llvm.store %183, %181 : !llvm.ptr, !llvm.ptr
    %185 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> !llvm.ptr
    %187 = llvm.getelementptr %186[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %188 = llvm.load %187 : !llvm.ptr -> i256
    llvm.store %187, %185 : !llvm.ptr, !llvm.ptr
    %189 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> !llvm.ptr
    %191 = llvm.getelementptr %190[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %192 = llvm.load %191 : !llvm.ptr -> i256
    llvm.store %191, %189 : !llvm.ptr, !llvm.ptr
    %193 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %194, ^bb1(%c87_i8 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %195 = arith.trunci %188 : i256 to i64
    %c0_i64_64 = arith.constant 0 : i64
    %196 = arith.cmpi slt, %195, %c0_i64_64 : i64
    %c84_i8_65 = arith.constant 84 : i8
    cf.cond_br %196, ^bb1(%c84_i8_65 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %197 = arith.trunci %192 : i256 to i64
    %c0_i64_66 = arith.constant 0 : i64
    %198 = arith.cmpi slt, %197, %c0_i64_66 : i64
    %c84_i8_67 = arith.constant 84 : i8
    cf.cond_br %198, ^bb1(%c84_i8_67 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %c0_i64_68 = arith.constant 0 : i64
    %199 = arith.cmpi ne, %197, %c0_i64_68 : i64
    cf.cond_br %199, ^bb119, ^bb51
  ^bb51:  // 2 preds: ^bb50, ^bb124
    %c32000_i64 = arith.constant 32000 : i64
    %200 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %201 = llvm.load %200 : !llvm.ptr -> i64
    %202 = arith.cmpi ult, %201, %c32000_i64 : i64
    scf.if %202 {
    } else {
      %508 = arith.subi %201, %c32000_i64 : i64
      llvm.store %508, %200 : i64, !llvm.ptr
    }
    %c80_i8_69 = arith.constant 80 : i8
    cf.cond_br %202, ^bb1(%c80_i8_69 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %c1_i256 = arith.constant 1 : i256
    %203 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %184, %203 {alignment = 1 : i64} : i256, !llvm.ptr
    %204 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> i64
    %206 = call @dora_fn_create(%arg0, %197, %195, %203, %205) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %207 = llvm.getelementptr %206[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %208 = llvm.load %207 : !llvm.ptr -> i8
    %c0_i8_70 = arith.constant 0 : i8
    %209 = arith.cmpi ne, %208, %c0_i8_70 : i8
    cf.cond_br %209, ^bb1(%208 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %210 = llvm.getelementptr %206[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %211 = llvm.load %210 : !llvm.ptr -> i64
    %212 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %213 = llvm.load %212 : !llvm.ptr -> i64
    %214 = arith.cmpi ult, %213, %211 : i64
    scf.if %214 {
    } else {
      %508 = arith.subi %213, %211 : i64
      llvm.store %508, %212 : i64, !llvm.ptr
    }
    %c80_i8_71 = arith.constant 80 : i8
    cf.cond_br %214, ^bb1(%c80_i8_71 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %215 = llvm.load %203 : !llvm.ptr -> i256
    %216 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %217 = llvm.load %216 : !llvm.ptr -> !llvm.ptr
    llvm.store %215, %217 : i256, !llvm.ptr
    %218 = llvm.getelementptr %217[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %218, %216 : !llvm.ptr, !llvm.ptr
    cf.br ^bb60
  ^bb55:  // pred: ^bb57
    %219 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_72 = arith.constant 1024 : i64
    %220 = llvm.load %219 : !llvm.ptr -> i64
    %c-2_i64_73 = arith.constant -2 : i64
    %221 = arith.addi %220, %c-2_i64_73 : i64
    llvm.store %221, %219 : i64, !llvm.ptr
    %c3_i64_74 = arith.constant 3 : i64
    %222 = arith.cmpi ult, %220, %c3_i64_74 : i64
    %c91_i8_75 = arith.constant 91 : i8
    cf.cond_br %222, ^bb1(%c91_i8_75 : i8), ^bb47
  ^bb56:  // pred: ^bb43
    %223 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %224 = llvm.load %223 : !llvm.ptr -> i64
    %c0_i64_76 = arith.constant 0 : i64
    %225 = arith.cmpi uge, %224, %c0_i64_76 : i64
    %c80_i8_77 = arith.constant 80 : i8
    cf.cond_br %225, ^bb57, ^bb1(%c80_i8_77 : i8)
  ^bb57:  // pred: ^bb56
    %226 = arith.subi %224, %c0_i64_76 : i64
    llvm.store %226, %223 : i64, !llvm.ptr
    cf.br ^bb55
  ^bb58:  // pred: ^bb59
    %c0_i256_78 = arith.constant 0 : i256
    %227 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %228 = llvm.load %227 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_78, %228 : i256, !llvm.ptr
    %229 = llvm.getelementptr %228[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %229, %227 : !llvm.ptr, !llvm.ptr
    cf.br ^bb64
  ^bb59:  // pred: ^bb61
    %230 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_79 = arith.constant 1024 : i64
    %231 = llvm.load %230 : !llvm.ptr -> i64
    %c1_i64_80 = arith.constant 1 : i64
    %232 = arith.addi %231, %c1_i64_80 : i64
    llvm.store %232, %230 : i64, !llvm.ptr
    %233 = arith.cmpi ult, %c1024_i64_79, %232 : i64
    %c92_i8_81 = arith.constant 92 : i8
    cf.cond_br %233, ^bb1(%c92_i8_81 : i8), ^bb58
  ^bb60:  // pred: ^bb54
    %234 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %235 = llvm.load %234 : !llvm.ptr -> i64
    %c3_i64_82 = arith.constant 3 : i64
    %236 = arith.cmpi uge, %235, %c3_i64_82 : i64
    %c80_i8_83 = arith.constant 80 : i8
    cf.cond_br %236, ^bb61, ^bb1(%c80_i8_83 : i8)
  ^bb61:  // pred: ^bb60
    %237 = arith.subi %235, %c3_i64_82 : i64
    llvm.store %237, %234 : i64, !llvm.ptr
    cf.br ^bb59
  ^bb62:  // pred: ^bb63
    %c0_i256_84 = arith.constant 0 : i256
    %238 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %239 = llvm.load %238 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_84, %239 : i256, !llvm.ptr
    %240 = llvm.getelementptr %239[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %240, %238 : !llvm.ptr, !llvm.ptr
    cf.br ^bb72
  ^bb63:  // pred: ^bb65
    %241 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_85 = arith.constant 1024 : i64
    %242 = llvm.load %241 : !llvm.ptr -> i64
    %c1_i64_86 = arith.constant 1 : i64
    %243 = arith.addi %242, %c1_i64_86 : i64
    llvm.store %243, %241 : i64, !llvm.ptr
    %244 = arith.cmpi ult, %c1024_i64_85, %243 : i64
    %c92_i8_87 = arith.constant 92 : i8
    cf.cond_br %244, ^bb1(%c92_i8_87 : i8), ^bb62
  ^bb64:  // pred: ^bb58
    %245 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %246 = llvm.load %245 : !llvm.ptr -> i64
    %c3_i64_88 = arith.constant 3 : i64
    %247 = arith.cmpi uge, %246, %c3_i64_88 : i64
    %c80_i8_89 = arith.constant 80 : i8
    cf.cond_br %247, ^bb65, ^bb1(%c80_i8_89 : i8)
  ^bb65:  // pred: ^bb64
    %248 = arith.subi %246, %c3_i64_88 : i64
    llvm.store %248, %245 : i64, !llvm.ptr
    cf.br ^bb63
  ^bb66:  // pred: ^bb71
    %249 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> !llvm.ptr
    %251 = llvm.getelementptr %250[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %252 = llvm.load %251 : !llvm.ptr -> i256
    llvm.store %251, %249 : !llvm.ptr, !llvm.ptr
    %253 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %254 = llvm.load %253 : !llvm.ptr -> !llvm.ptr
    %255 = llvm.getelementptr %254[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %256 = llvm.load %255 : !llvm.ptr -> i256
    llvm.store %255, %253 : !llvm.ptr, !llvm.ptr
    %257 = arith.trunci %252 : i256 to i64
    %c0_i64_90 = arith.constant 0 : i64
    %258 = arith.cmpi slt, %257, %c0_i64_90 : i64
    %c84_i8_91 = arith.constant 84 : i8
    cf.cond_br %258, ^bb1(%c84_i8_91 : i8), ^bb67
  ^bb67:  // pred: ^bb66
    %c32_i64_92 = arith.constant 32 : i64
    %259 = arith.addi %257, %c32_i64_92 : i64
    %c0_i64_93 = arith.constant 0 : i64
    %260 = arith.cmpi slt, %259, %c0_i64_93 : i64
    %c84_i8_94 = arith.constant 84 : i8
    cf.cond_br %260, ^bb1(%c84_i8_94 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %c31_i64_95 = arith.constant 31 : i64
    %c32_i64_96 = arith.constant 32 : i64
    %261 = arith.addi %259, %c31_i64_95 : i64
    %262 = arith.divui %261, %c32_i64_96 : i64
    %c32_i64_97 = arith.constant 32 : i64
    %263 = arith.muli %262, %c32_i64_97 : i64
    %264 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %265 = llvm.load %264 : !llvm.ptr -> i64
    %c31_i64_98 = arith.constant 31 : i64
    %c32_i64_99 = arith.constant 32 : i64
    %266 = arith.addi %265, %c31_i64_98 : i64
    %267 = arith.divui %266, %c32_i64_99 : i64
    %268 = arith.muli %267, %c32_i64_97 : i64
    %269 = arith.cmpi ult, %268, %263 : i64
    %270 = scf.if %269 -> (i64) {
      %c3_i64_200 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %508 = arith.muli %267, %267 : i64
      %509 = arith.divui %508, %c512_i64 : i64
      %510 = arith.muli %267, %c3_i64_200 : i64
      %511 = arith.addi %509, %510 : i64
      %c3_i64_201 = arith.constant 3 : i64
      %c512_i64_202 = arith.constant 512 : i64
      %512 = arith.muli %262, %262 : i64
      %513 = arith.divui %512, %c512_i64_202 : i64
      %514 = arith.muli %262, %c3_i64_201 : i64
      %515 = arith.addi %513, %514 : i64
      %516 = arith.subi %515, %511 : i64
      scf.yield %516 : i64
    } else {
      %c0_i64_200 = arith.constant 0 : i64
      scf.yield %c0_i64_200 : i64
    }
    %271 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %272 = llvm.load %271 : !llvm.ptr -> i64
    %273 = arith.cmpi ult, %272, %270 : i64
    scf.if %273 {
    } else {
      %508 = arith.subi %272, %270 : i64
      llvm.store %508, %271 : i64, !llvm.ptr
    }
    %c80_i8_100 = arith.constant 80 : i8
    cf.cond_br %273, ^bb1(%c80_i8_100 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %274 = call @dora_fn_extend_memory(%arg0, %263) : (!llvm.ptr, i64) -> !llvm.ptr
    %275 = llvm.getelementptr %274[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %276 = llvm.load %275 : !llvm.ptr -> !llvm.ptr
    %277 = llvm.getelementptr %274[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %278 = llvm.load %277 : !llvm.ptr -> i8
    %c0_i8_101 = arith.constant 0 : i8
    %279 = arith.cmpi ne, %278, %c0_i8_101 : i8
    cf.cond_br %279, ^bb1(%278 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %280 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %276, %280 : !llvm.ptr, !llvm.ptr
    %281 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %263, %281 : i64, !llvm.ptr
    %282 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %283 = llvm.load %282 : !llvm.ptr -> !llvm.ptr
    %284 = llvm.getelementptr %283[%257] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %285 = llvm.intr.bswap(%256)  : (i256) -> i256
    llvm.store %285, %284 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb76
  ^bb71:  // pred: ^bb73
    %286 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_102 = arith.constant 1024 : i64
    %287 = llvm.load %286 : !llvm.ptr -> i64
    %c-2_i64_103 = arith.constant -2 : i64
    %288 = arith.addi %287, %c-2_i64_103 : i64
    llvm.store %288, %286 : i64, !llvm.ptr
    %c2_i64_104 = arith.constant 2 : i64
    %289 = arith.cmpi ult, %287, %c2_i64_104 : i64
    %c91_i8_105 = arith.constant 91 : i8
    cf.cond_br %289, ^bb1(%c91_i8_105 : i8), ^bb66
  ^bb72:  // pred: ^bb62
    %290 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %291 = llvm.load %290 : !llvm.ptr -> i64
    %c3_i64_106 = arith.constant 3 : i64
    %292 = arith.cmpi uge, %291, %c3_i64_106 : i64
    %c80_i8_107 = arith.constant 80 : i8
    cf.cond_br %292, ^bb73, ^bb1(%c80_i8_107 : i8)
  ^bb73:  // pred: ^bb72
    %293 = arith.subi %291, %c3_i64_106 : i64
    llvm.store %293, %290 : i64, !llvm.ptr
    cf.br ^bb71
  ^bb74:  // pred: ^bb75
    %c0_i256_108 = arith.constant 0 : i256
    %294 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %295 = llvm.load %294 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_108, %295 : i256, !llvm.ptr
    %296 = llvm.getelementptr %295[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %296, %294 : !llvm.ptr, !llvm.ptr
    cf.br ^bb80
  ^bb75:  // pred: ^bb77
    %297 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_109 = arith.constant 1024 : i64
    %298 = llvm.load %297 : !llvm.ptr -> i64
    %c1_i64_110 = arith.constant 1 : i64
    %299 = arith.addi %298, %c1_i64_110 : i64
    llvm.store %299, %297 : i64, !llvm.ptr
    %300 = arith.cmpi ult, %c1024_i64_109, %299 : i64
    %c92_i8_111 = arith.constant 92 : i8
    cf.cond_br %300, ^bb1(%c92_i8_111 : i8), ^bb74
  ^bb76:  // pred: ^bb70
    %301 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %302 = llvm.load %301 : !llvm.ptr -> i64
    %c3_i64_112 = arith.constant 3 : i64
    %303 = arith.cmpi uge, %302, %c3_i64_112 : i64
    %c80_i8_113 = arith.constant 80 : i8
    cf.cond_br %303, ^bb77, ^bb1(%c80_i8_113 : i8)
  ^bb77:  // pred: ^bb76
    %304 = arith.subi %302, %c3_i64_112 : i64
    llvm.store %304, %301 : i64, !llvm.ptr
    cf.br ^bb75
  ^bb78:  // pred: ^bb79
    %c32_i256_114 = arith.constant 32 : i256
    %305 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %306 = llvm.load %305 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_114, %306 : i256, !llvm.ptr
    %307 = llvm.getelementptr %306[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %307, %305 : !llvm.ptr, !llvm.ptr
    cf.br ^bb88
  ^bb79:  // pred: ^bb81
    %308 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_115 = arith.constant 1024 : i64
    %309 = llvm.load %308 : !llvm.ptr -> i64
    %c1_i64_116 = arith.constant 1 : i64
    %310 = arith.addi %309, %c1_i64_116 : i64
    llvm.store %310, %308 : i64, !llvm.ptr
    %311 = arith.cmpi ult, %c1024_i64_115, %310 : i64
    %c92_i8_117 = arith.constant 92 : i8
    cf.cond_br %311, ^bb1(%c92_i8_117 : i8), ^bb78
  ^bb80:  // pred: ^bb74
    %312 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %313 = llvm.load %312 : !llvm.ptr -> i64
    %c3_i64_118 = arith.constant 3 : i64
    %314 = arith.cmpi uge, %313, %c3_i64_118 : i64
    %c80_i8_119 = arith.constant 80 : i8
    cf.cond_br %314, ^bb81, ^bb1(%c80_i8_119 : i8)
  ^bb81:  // pred: ^bb80
    %315 = arith.subi %313, %c3_i64_118 : i64
    llvm.store %315, %312 : i64, !llvm.ptr
    cf.br ^bb79
  ^bb82:  // pred: ^bb87
    %316 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %317 = llvm.load %316 : !llvm.ptr -> !llvm.ptr
    %318 = llvm.getelementptr %317[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %319 = llvm.load %318 : !llvm.ptr -> i256
    llvm.store %318, %316 : !llvm.ptr, !llvm.ptr
    %320 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %321 = llvm.load %320 : !llvm.ptr -> !llvm.ptr
    %322 = llvm.getelementptr %321[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %323 = llvm.load %322 : !llvm.ptr -> i256
    llvm.store %322, %320 : !llvm.ptr, !llvm.ptr
    %324 = arith.trunci %319 : i256 to i64
    %c0_i64_120 = arith.constant 0 : i64
    %325 = arith.cmpi slt, %324, %c0_i64_120 : i64
    %c84_i8_121 = arith.constant 84 : i8
    cf.cond_br %325, ^bb1(%c84_i8_121 : i8), ^bb83
  ^bb83:  // pred: ^bb82
    %c32_i64_122 = arith.constant 32 : i64
    %326 = arith.addi %324, %c32_i64_122 : i64
    %c0_i64_123 = arith.constant 0 : i64
    %327 = arith.cmpi slt, %326, %c0_i64_123 : i64
    %c84_i8_124 = arith.constant 84 : i8
    cf.cond_br %327, ^bb1(%c84_i8_124 : i8), ^bb84
  ^bb84:  // pred: ^bb83
    %c31_i64_125 = arith.constant 31 : i64
    %c32_i64_126 = arith.constant 32 : i64
    %328 = arith.addi %326, %c31_i64_125 : i64
    %329 = arith.divui %328, %c32_i64_126 : i64
    %c32_i64_127 = arith.constant 32 : i64
    %330 = arith.muli %329, %c32_i64_127 : i64
    %331 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %332 = llvm.load %331 : !llvm.ptr -> i64
    %c31_i64_128 = arith.constant 31 : i64
    %c32_i64_129 = arith.constant 32 : i64
    %333 = arith.addi %332, %c31_i64_128 : i64
    %334 = arith.divui %333, %c32_i64_129 : i64
    %335 = arith.muli %334, %c32_i64_127 : i64
    %336 = arith.cmpi ult, %335, %330 : i64
    %337 = scf.if %336 -> (i64) {
      %c3_i64_200 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %508 = arith.muli %334, %334 : i64
      %509 = arith.divui %508, %c512_i64 : i64
      %510 = arith.muli %334, %c3_i64_200 : i64
      %511 = arith.addi %509, %510 : i64
      %c3_i64_201 = arith.constant 3 : i64
      %c512_i64_202 = arith.constant 512 : i64
      %512 = arith.muli %329, %329 : i64
      %513 = arith.divui %512, %c512_i64_202 : i64
      %514 = arith.muli %329, %c3_i64_201 : i64
      %515 = arith.addi %513, %514 : i64
      %516 = arith.subi %515, %511 : i64
      scf.yield %516 : i64
    } else {
      %c0_i64_200 = arith.constant 0 : i64
      scf.yield %c0_i64_200 : i64
    }
    %338 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %339 = llvm.load %338 : !llvm.ptr -> i64
    %340 = arith.cmpi ult, %339, %337 : i64
    scf.if %340 {
    } else {
      %508 = arith.subi %339, %337 : i64
      llvm.store %508, %338 : i64, !llvm.ptr
    }
    %c80_i8_130 = arith.constant 80 : i8
    cf.cond_br %340, ^bb1(%c80_i8_130 : i8), ^bb85
  ^bb85:  // pred: ^bb84
    %341 = call @dora_fn_extend_memory(%arg0, %330) : (!llvm.ptr, i64) -> !llvm.ptr
    %342 = llvm.getelementptr %341[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %343 = llvm.load %342 : !llvm.ptr -> !llvm.ptr
    %344 = llvm.getelementptr %341[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %345 = llvm.load %344 : !llvm.ptr -> i8
    %c0_i8_131 = arith.constant 0 : i8
    %346 = arith.cmpi ne, %345, %c0_i8_131 : i8
    cf.cond_br %346, ^bb1(%345 : i8), ^bb86
  ^bb86:  // pred: ^bb85
    %347 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %343, %347 : !llvm.ptr, !llvm.ptr
    %348 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %330, %348 : i64, !llvm.ptr
    %349 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %350 = llvm.load %349 : !llvm.ptr -> !llvm.ptr
    %351 = llvm.getelementptr %350[%324] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %352 = llvm.intr.bswap(%323)  : (i256) -> i256
    llvm.store %352, %351 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb92
  ^bb87:  // pred: ^bb89
    %353 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_132 = arith.constant 1024 : i64
    %354 = llvm.load %353 : !llvm.ptr -> i64
    %c-2_i64_133 = arith.constant -2 : i64
    %355 = arith.addi %354, %c-2_i64_133 : i64
    llvm.store %355, %353 : i64, !llvm.ptr
    %c2_i64_134 = arith.constant 2 : i64
    %356 = arith.cmpi ult, %354, %c2_i64_134 : i64
    %c91_i8_135 = arith.constant 91 : i8
    cf.cond_br %356, ^bb1(%c91_i8_135 : i8), ^bb82
  ^bb88:  // pred: ^bb78
    %357 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %358 = llvm.load %357 : !llvm.ptr -> i64
    %c3_i64_136 = arith.constant 3 : i64
    %359 = arith.cmpi uge, %358, %c3_i64_136 : i64
    %c80_i8_137 = arith.constant 80 : i8
    cf.cond_br %359, ^bb89, ^bb1(%c80_i8_137 : i8)
  ^bb89:  // pred: ^bb88
    %360 = arith.subi %358, %c3_i64_136 : i64
    llvm.store %360, %357 : i64, !llvm.ptr
    cf.br ^bb87
  ^bb90:  // pred: ^bb91
    %c32_i256_138 = arith.constant 32 : i256
    %361 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %362 = llvm.load %361 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_138, %362 : i256, !llvm.ptr
    %363 = llvm.getelementptr %362[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %363, %361 : !llvm.ptr, !llvm.ptr
    cf.br ^bb96
  ^bb91:  // pred: ^bb93
    %364 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_139 = arith.constant 1024 : i64
    %365 = llvm.load %364 : !llvm.ptr -> i64
    %c1_i64_140 = arith.constant 1 : i64
    %366 = arith.addi %365, %c1_i64_140 : i64
    llvm.store %366, %364 : i64, !llvm.ptr
    %367 = arith.cmpi ult, %c1024_i64_139, %366 : i64
    %c92_i8_141 = arith.constant 92 : i8
    cf.cond_br %367, ^bb1(%c92_i8_141 : i8), ^bb90
  ^bb92:  // pred: ^bb86
    %368 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %369 = llvm.load %368 : !llvm.ptr -> i64
    %c3_i64_142 = arith.constant 3 : i64
    %370 = arith.cmpi uge, %369, %c3_i64_142 : i64
    %c80_i8_143 = arith.constant 80 : i8
    cf.cond_br %370, ^bb93, ^bb1(%c80_i8_143 : i8)
  ^bb93:  // pred: ^bb92
    %371 = arith.subi %369, %c3_i64_142 : i64
    llvm.store %371, %368 : i64, !llvm.ptr
    cf.br ^bb91
  ^bb94:  // pred: ^bb95
    %c0_i256_144 = arith.constant 0 : i256
    %372 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %373 = llvm.load %372 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_144, %373 : i256, !llvm.ptr
    %374 = llvm.getelementptr %373[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %374, %372 : !llvm.ptr, !llvm.ptr
    cf.br ^bb100
  ^bb95:  // pred: ^bb97
    %375 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_145 = arith.constant 1024 : i64
    %376 = llvm.load %375 : !llvm.ptr -> i64
    %c1_i64_146 = arith.constant 1 : i64
    %377 = arith.addi %376, %c1_i64_146 : i64
    llvm.store %377, %375 : i64, !llvm.ptr
    %378 = arith.cmpi ult, %c1024_i64_145, %377 : i64
    %c92_i8_147 = arith.constant 92 : i8
    cf.cond_br %378, ^bb1(%c92_i8_147 : i8), ^bb94
  ^bb96:  // pred: ^bb90
    %379 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %380 = llvm.load %379 : !llvm.ptr -> i64
    %c3_i64_148 = arith.constant 3 : i64
    %381 = arith.cmpi uge, %380, %c3_i64_148 : i64
    %c80_i8_149 = arith.constant 80 : i8
    cf.cond_br %381, ^bb97, ^bb1(%c80_i8_149 : i8)
  ^bb97:  // pred: ^bb96
    %382 = arith.subi %380, %c3_i64_148 : i64
    llvm.store %382, %379 : i64, !llvm.ptr
    cf.br ^bb95
  ^bb98:  // pred: ^bb99
    %c0_i256_150 = arith.constant 0 : i256
    %383 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %384 = llvm.load %383 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_150, %384 : i256, !llvm.ptr
    %385 = llvm.getelementptr %384[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %385, %383 : !llvm.ptr, !llvm.ptr
    cf.br ^bb104
  ^bb99:  // pred: ^bb101
    %386 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_151 = arith.constant 1024 : i64
    %387 = llvm.load %386 : !llvm.ptr -> i64
    %c1_i64_152 = arith.constant 1 : i64
    %388 = arith.addi %387, %c1_i64_152 : i64
    llvm.store %388, %386 : i64, !llvm.ptr
    %389 = arith.cmpi ult, %c1024_i64_151, %388 : i64
    %c92_i8_153 = arith.constant 92 : i8
    cf.cond_br %389, ^bb1(%c92_i8_153 : i8), ^bb98
  ^bb100:  // pred: ^bb94
    %390 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %391 = llvm.load %390 : !llvm.ptr -> i64
    %c3_i64_154 = arith.constant 3 : i64
    %392 = arith.cmpi uge, %391, %c3_i64_154 : i64
    %c80_i8_155 = arith.constant 80 : i8
    cf.cond_br %392, ^bb101, ^bb1(%c80_i8_155 : i8)
  ^bb101:  // pred: ^bb100
    %393 = arith.subi %391, %c3_i64_154 : i64
    llvm.store %393, %390 : i64, !llvm.ptr
    cf.br ^bb99
  ^bb102:  // pred: ^bb103
    %394 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %395 = llvm.load %394 : !llvm.ptr -> !llvm.ptr
    %396 = llvm.getelementptr %395[-4] : (!llvm.ptr) -> !llvm.ptr, i256
    %397 = llvm.load %396 : !llvm.ptr -> i256
    %398 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %399 = llvm.load %398 : !llvm.ptr -> !llvm.ptr
    llvm.store %397, %399 : i256, !llvm.ptr
    %400 = llvm.getelementptr %399[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %400, %398 : !llvm.ptr, !llvm.ptr
    cf.br ^bb116
  ^bb103:  // pred: ^bb105
    %401 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_156 = arith.constant 1024 : i64
    %402 = llvm.load %401 : !llvm.ptr -> i64
    %c1_i64_157 = arith.constant 1 : i64
    %403 = arith.addi %402, %c1_i64_157 : i64
    llvm.store %403, %401 : i64, !llvm.ptr
    %404 = arith.cmpi ult, %c1024_i64_156, %403 : i64
    %c92_i8_158 = arith.constant 92 : i8
    cf.cond_br %404, ^bb1(%c92_i8_158 : i8), ^bb102
  ^bb104:  // pred: ^bb98
    %405 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %406 = llvm.load %405 : !llvm.ptr -> i64
    %c3_i64_159 = arith.constant 3 : i64
    %407 = arith.cmpi uge, %406, %c3_i64_159 : i64
    %c80_i8_160 = arith.constant 80 : i8
    cf.cond_br %407, ^bb105, ^bb1(%c80_i8_160 : i8)
  ^bb105:  // pred: ^bb104
    %408 = arith.subi %406, %c3_i64_159 : i64
    llvm.store %408, %405 : i64, !llvm.ptr
    cf.br ^bb103
  ^bb106:  // pred: ^bb115
    %409 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %410 = llvm.load %409 : !llvm.ptr -> !llvm.ptr
    %411 = llvm.getelementptr %410[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %412 = llvm.load %411 : !llvm.ptr -> i256
    llvm.store %411, %409 : !llvm.ptr, !llvm.ptr
    %413 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %414 = llvm.load %413 : !llvm.ptr -> !llvm.ptr
    %415 = llvm.getelementptr %414[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %416 = llvm.load %415 : !llvm.ptr -> i256
    llvm.store %415, %413 : !llvm.ptr, !llvm.ptr
    %417 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %418 = llvm.load %417 : !llvm.ptr -> !llvm.ptr
    %419 = llvm.getelementptr %418[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %420 = llvm.load %419 : !llvm.ptr -> i256
    llvm.store %419, %417 : !llvm.ptr, !llvm.ptr
    %421 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %422 = llvm.load %421 : !llvm.ptr -> !llvm.ptr
    %423 = llvm.getelementptr %422[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %424 = llvm.load %423 : !llvm.ptr -> i256
    llvm.store %423, %421 : !llvm.ptr, !llvm.ptr
    %425 = arith.trunci %424 : i256 to i64
    %c0_i64_161 = arith.constant 0 : i64
    %426 = arith.cmpi slt, %425, %c0_i64_161 : i64
    %c84_i8_162 = arith.constant 84 : i8
    cf.cond_br %426, ^bb1(%c84_i8_162 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %c31_i64_163 = arith.constant 31 : i64
    %c32_i64_164 = arith.constant 32 : i64
    %427 = arith.addi %425, %c31_i64_163 : i64
    %428 = arith.divui %427, %c32_i64_164 : i64
    %c3_i64_165 = arith.constant 3 : i64
    %429 = arith.muli %428, %c3_i64_165 : i64
    %430 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %431 = llvm.load %430 : !llvm.ptr -> i64
    %432 = arith.cmpi ult, %431, %429 : i64
    scf.if %432 {
    } else {
      %508 = arith.subi %431, %429 : i64
      llvm.store %508, %430 : i64, !llvm.ptr
    }
    %c80_i8_166 = arith.constant 80 : i8
    cf.cond_br %432, ^bb1(%c80_i8_166 : i8), ^bb108
  ^bb108:  // pred: ^bb107
    %433 = arith.trunci %420 : i256 to i64
    %c0_i64_167 = arith.constant 0 : i64
    %434 = arith.cmpi slt, %433, %c0_i64_167 : i64
    %c84_i8_168 = arith.constant 84 : i8
    cf.cond_br %434, ^bb1(%c84_i8_168 : i8), ^bb109
  ^bb109:  // pred: ^bb108
    %435 = arith.trunci %416 : i256 to i64
    %c0_i64_169 = arith.constant 0 : i64
    %436 = arith.cmpi slt, %435, %c0_i64_169 : i64
    %c84_i8_170 = arith.constant 84 : i8
    cf.cond_br %436, ^bb1(%c84_i8_170 : i8), ^bb110
  ^bb110:  // pred: ^bb109
    %c1_i256_171 = arith.constant 1 : i256
    %437 = llvm.alloca %c1_i256_171 x i256 : (i256) -> !llvm.ptr
    llvm.store %412, %437 {alignment = 1 : i64} : i256, !llvm.ptr
    %438 = arith.addi %435, %425 : i64
    %c0_i64_172 = arith.constant 0 : i64
    %439 = arith.cmpi slt, %438, %c0_i64_172 : i64
    %c84_i8_173 = arith.constant 84 : i8
    cf.cond_br %439, ^bb1(%c84_i8_173 : i8), ^bb111
  ^bb111:  // pred: ^bb110
    %c31_i64_174 = arith.constant 31 : i64
    %c32_i64_175 = arith.constant 32 : i64
    %440 = arith.addi %438, %c31_i64_174 : i64
    %441 = arith.divui %440, %c32_i64_175 : i64
    %c32_i64_176 = arith.constant 32 : i64
    %442 = arith.muli %441, %c32_i64_176 : i64
    %443 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %444 = llvm.load %443 : !llvm.ptr -> i64
    %c31_i64_177 = arith.constant 31 : i64
    %c32_i64_178 = arith.constant 32 : i64
    %445 = arith.addi %444, %c31_i64_177 : i64
    %446 = arith.divui %445, %c32_i64_178 : i64
    %447 = arith.muli %446, %c32_i64_176 : i64
    %448 = arith.cmpi ult, %447, %442 : i64
    %449 = scf.if %448 -> (i64) {
      %c3_i64_200 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %508 = arith.muli %446, %446 : i64
      %509 = arith.divui %508, %c512_i64 : i64
      %510 = arith.muli %446, %c3_i64_200 : i64
      %511 = arith.addi %509, %510 : i64
      %c3_i64_201 = arith.constant 3 : i64
      %c512_i64_202 = arith.constant 512 : i64
      %512 = arith.muli %441, %441 : i64
      %513 = arith.divui %512, %c512_i64_202 : i64
      %514 = arith.muli %441, %c3_i64_201 : i64
      %515 = arith.addi %513, %514 : i64
      %516 = arith.subi %515, %511 : i64
      scf.yield %516 : i64
    } else {
      %c0_i64_200 = arith.constant 0 : i64
      scf.yield %c0_i64_200 : i64
    }
    %450 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %451 = llvm.load %450 : !llvm.ptr -> i64
    %452 = arith.cmpi ult, %451, %449 : i64
    scf.if %452 {
    } else {
      %508 = arith.subi %451, %449 : i64
      llvm.store %508, %450 : i64, !llvm.ptr
    }
    %c80_i8_179 = arith.constant 80 : i8
    cf.cond_br %452, ^bb1(%c80_i8_179 : i8), ^bb112
  ^bb112:  // pred: ^bb111
    %453 = call @dora_fn_extend_memory(%arg0, %442) : (!llvm.ptr, i64) -> !llvm.ptr
    %454 = llvm.getelementptr %453[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %455 = llvm.load %454 : !llvm.ptr -> !llvm.ptr
    %456 = llvm.getelementptr %453[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %457 = llvm.load %456 : !llvm.ptr -> i8
    %c0_i8_180 = arith.constant 0 : i8
    %458 = arith.cmpi ne, %457, %c0_i8_180 : i8
    cf.cond_br %458, ^bb1(%457 : i8), ^bb113
  ^bb113:  // pred: ^bb112
    %459 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %455, %459 : !llvm.ptr, !llvm.ptr
    %460 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %442, %460 : i64, !llvm.ptr
    %461 = call @dora_fn_ext_code_copy(%arg0, %437, %433, %425, %435) : (!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
    %462 = llvm.getelementptr %461[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %463 = llvm.load %462 : !llvm.ptr -> i64
    %464 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %465 = llvm.load %464 : !llvm.ptr -> i64
    %466 = arith.cmpi ult, %465, %463 : i64
    scf.if %466 {
    } else {
      %508 = arith.subi %465, %463 : i64
      llvm.store %508, %464 : i64, !llvm.ptr
    }
    %c80_i8_181 = arith.constant 80 : i8
    cf.cond_br %466, ^bb1(%c80_i8_181 : i8), ^bb114
  ^bb114:  // pred: ^bb113
    cf.br ^bb118
  ^bb115:  // pred: ^bb117
    %467 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_182 = arith.constant 1024 : i64
    %468 = llvm.load %467 : !llvm.ptr -> i64
    %c-4_i64 = arith.constant -4 : i64
    %469 = arith.addi %468, %c-4_i64 : i64
    llvm.store %469, %467 : i64, !llvm.ptr
    %c4_i64 = arith.constant 4 : i64
    %470 = arith.cmpi ult, %468, %c4_i64 : i64
    %c91_i8_183 = arith.constant 91 : i8
    cf.cond_br %470, ^bb1(%c91_i8_183 : i8), ^bb106
  ^bb116:  // pred: ^bb102
    %471 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %472 = llvm.load %471 : !llvm.ptr -> i64
    %c0_i64_184 = arith.constant 0 : i64
    %473 = arith.cmpi uge, %472, %c0_i64_184 : i64
    %c80_i8_185 = arith.constant 80 : i8
    cf.cond_br %473, ^bb117, ^bb1(%c80_i8_185 : i8)
  ^bb117:  // pred: ^bb116
    %474 = arith.subi %472, %c0_i64_184 : i64
    llvm.store %474, %471 : i64, !llvm.ptr
    cf.br ^bb115
  ^bb118:  // pred: ^bb114
    %c0_i64_186 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %475 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %476 = llvm.load %475 : !llvm.ptr -> i64
    %477 = call @dora_fn_write_result(%arg0, %c0_i64_186, %c0_i64_186, %476, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb119:  // pred: ^bb50
    %c49152_i64 = arith.constant 49152 : i64
    %478 = arith.cmpi ugt, %197, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %478, ^bb1(%c100_i8 : i8), ^bb120
  ^bb120:  // pred: ^bb119
    %c31_i64_187 = arith.constant 31 : i64
    %c32_i64_188 = arith.constant 32 : i64
    %479 = arith.addi %197, %c31_i64_187 : i64
    %480 = arith.divui %479, %c32_i64_188 : i64
    %c2_i64_189 = arith.constant 2 : i64
    %481 = arith.muli %480, %c2_i64_189 : i64
    %482 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %483 = llvm.load %482 : !llvm.ptr -> i64
    %484 = arith.cmpi ult, %483, %481 : i64
    scf.if %484 {
    } else {
      %508 = arith.subi %483, %481 : i64
      llvm.store %508, %482 : i64, !llvm.ptr
    }
    %c80_i8_190 = arith.constant 80 : i8
    cf.cond_br %484, ^bb1(%c80_i8_190 : i8), ^bb121
  ^bb121:  // pred: ^bb120
    %485 = arith.addi %195, %197 : i64
    %c0_i64_191 = arith.constant 0 : i64
    %486 = arith.cmpi slt, %485, %c0_i64_191 : i64
    %c84_i8_192 = arith.constant 84 : i8
    cf.cond_br %486, ^bb1(%c84_i8_192 : i8), ^bb122
  ^bb122:  // pred: ^bb121
    %c31_i64_193 = arith.constant 31 : i64
    %c32_i64_194 = arith.constant 32 : i64
    %487 = arith.addi %485, %c31_i64_193 : i64
    %488 = arith.divui %487, %c32_i64_194 : i64
    %c32_i64_195 = arith.constant 32 : i64
    %489 = arith.muli %488, %c32_i64_195 : i64
    %490 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %491 = llvm.load %490 : !llvm.ptr -> i64
    %c31_i64_196 = arith.constant 31 : i64
    %c32_i64_197 = arith.constant 32 : i64
    %492 = arith.addi %491, %c31_i64_196 : i64
    %493 = arith.divui %492, %c32_i64_197 : i64
    %494 = arith.muli %493, %c32_i64_195 : i64
    %495 = arith.cmpi ult, %494, %489 : i64
    %496 = scf.if %495 -> (i64) {
      %c3_i64_200 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %508 = arith.muli %493, %493 : i64
      %509 = arith.divui %508, %c512_i64 : i64
      %510 = arith.muli %493, %c3_i64_200 : i64
      %511 = arith.addi %509, %510 : i64
      %c3_i64_201 = arith.constant 3 : i64
      %c512_i64_202 = arith.constant 512 : i64
      %512 = arith.muli %488, %488 : i64
      %513 = arith.divui %512, %c512_i64_202 : i64
      %514 = arith.muli %488, %c3_i64_201 : i64
      %515 = arith.addi %513, %514 : i64
      %516 = arith.subi %515, %511 : i64
      scf.yield %516 : i64
    } else {
      %c0_i64_200 = arith.constant 0 : i64
      scf.yield %c0_i64_200 : i64
    }
    %497 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %498 = llvm.load %497 : !llvm.ptr -> i64
    %499 = arith.cmpi ult, %498, %496 : i64
    scf.if %499 {
    } else {
      %508 = arith.subi %498, %496 : i64
      llvm.store %508, %497 : i64, !llvm.ptr
    }
    %c80_i8_198 = arith.constant 80 : i8
    cf.cond_br %499, ^bb1(%c80_i8_198 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %500 = call @dora_fn_extend_memory(%arg0, %489) : (!llvm.ptr, i64) -> !llvm.ptr
    %501 = llvm.getelementptr %500[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %502 = llvm.load %501 : !llvm.ptr -> !llvm.ptr
    %503 = llvm.getelementptr %500[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %504 = llvm.load %503 : !llvm.ptr -> i8
    %c0_i8_199 = arith.constant 0 : i8
    %505 = arith.cmpi ne, %504, %c0_i8_199 : i8
    cf.cond_br %505, ^bb1(%504 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %506 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %502, %506 : !llvm.ptr, !llvm.ptr
    %507 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %489, %507 : i64, !llvm.ptr
    cf.br ^bb51
  }
}
