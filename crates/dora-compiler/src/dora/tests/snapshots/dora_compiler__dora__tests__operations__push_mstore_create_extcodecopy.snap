---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 85 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb38, ^bb39, ^bb41, ^bb42, ^bb43, ^bb45, ^bb46, ^bb47, ^bb49, ^bb50, ^bb53, ^bb54, ^bb57, ^bb58, ^bb62, ^bb63, ^bb66, ^bb67, ^bb70, ^bb71, ^bb75, ^bb76, ^bb79, ^bb80, ^bb83, ^bb84, ^bb87, ^bb88, ^bb91, ^bb92, ^bb94, ^bb95, ^bb96, ^bb98, ^bb100, ^bb101, ^bb104, ^bb105, ^bb106, ^bb109, ^bb110, ^bb112, ^bb113, ^bb114, ^bb117, ^bb118, ^bb120, ^bb121, ^bb122, ^bb123, ^bb124, ^bb127, ^bb128, ^bb130, ^bb131, ^bb132, ^bb135, ^bb136, ^bb138, ^bb139, ^bb140, ^bb143, ^bb144, ^bb146, ^bb147, ^bb148, ^bb151, ^bb152
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %43 = arith.cmpi ne, %c32_i64, %c0_i64_7 : i64
    cf.cond_br %43, ^bb104, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb108
    %44 = arith.trunci %38 : i256 to i64
    %45 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %46 = llvm.load %45 : !llvm.ptr -> !llvm.ptr
    %47 = llvm.getelementptr %46[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %48 = llvm.intr.bswap(%42)  : (i256) -> i256
    llvm.store %48, %47 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %49 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_8 = arith.constant 1024 : i64
    %50 = llvm.load %49 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %51 = arith.addi %50, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    llvm.store %51, %49 : i64, !llvm.ptr
    %52 = arith.cmpi ult, %50, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %52, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %53 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %c3_i64_9 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %55 = arith.cmpi uge, %54, %c3_i64_9 : i64
    %c80_i8_10 = arith.constant 80 : i8
    cf.cond_br %55, ^bb15, ^bb1(%c80_i8_10 : i8)
  ^bb15:  // pred: ^bb14
    %56 = arith.subi %54, %c3_i64_9 : i64
    llvm.store %56, %53 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c170141183460469231731687303715884105727_i256_11 = arith.constant 170141183460469231731687303715884105727 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_11, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %60 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_12 = arith.constant 1024 : i64
    %61 = llvm.load %60 : !llvm.ptr -> i64
    %c1_i64_13 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_13 : i64
    llvm.store %62, %60 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64_12, %62 : i64
    %c92_i8_14 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_14 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %64 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %c3_i64_15 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %66 = arith.cmpi uge, %65, %c3_i64_15 : i64
    %c80_i8_16 = arith.constant 80 : i8
    cf.cond_br %66, ^bb19, ^bb1(%c80_i8_16 : i8)
  ^bb19:  // pred: ^bb18
    %67 = arith.subi %65, %c3_i64_15 : i64
    llvm.store %67, %64 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c32_i256 = arith.constant 32 : i256
    %68 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %69 = llvm.load %68 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %69 : i256, !llvm.ptr
    %70 = llvm.getelementptr %69[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %70, %68 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %71 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_17 = arith.constant 1024 : i64
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c1_i64_18 = arith.constant 1 : i64
    %73 = arith.addi %72, %c1_i64_18 : i64
    llvm.store %73, %71 : i64, !llvm.ptr
    %74 = arith.cmpi ult, %c1024_i64_17, %73 : i64
    %c92_i8_19 = arith.constant 92 : i8
    cf.cond_br %74, ^bb1(%c92_i8_19 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %75 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> i64
    %c3_i64_20 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %77 = arith.cmpi uge, %76, %c3_i64_20 : i64
    %c80_i8_21 = arith.constant 80 : i8
    cf.cond_br %77, ^bb23, ^bb1(%c80_i8_21 : i8)
  ^bb23:  // pred: ^bb22
    %78 = arith.subi %76, %c3_i64_20 : i64
    llvm.store %78, %75 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %79 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> !llvm.ptr
    %81 = llvm.getelementptr %80[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %82 = llvm.load %81 : !llvm.ptr -> i256
    llvm.store %81, %79 : !llvm.ptr, !llvm.ptr
    %83 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> !llvm.ptr
    %85 = llvm.getelementptr %84[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %86 = llvm.load %85 : !llvm.ptr -> i256
    llvm.store %85, %83 : !llvm.ptr, !llvm.ptr
    %c32_i64_22 = arith.constant 32 : i64
    %c0_i64_23 = arith.constant 0 : i64
    %87 = arith.cmpi ne, %c32_i64_22, %c0_i64_23 : i64
    cf.cond_br %87, ^bb112, ^bb25
  ^bb25:  // 2 preds: ^bb24, ^bb116
    %88 = arith.trunci %82 : i256 to i64
    %89 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %90 = llvm.load %89 : !llvm.ptr -> !llvm.ptr
    %91 = llvm.getelementptr %90[%88] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %92 = llvm.intr.bswap(%86)  : (i256) -> i256
    llvm.store %92, %91 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %93 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_24 = arith.constant 1024 : i64
    %94 = llvm.load %93 : !llvm.ptr -> i64
    %c-2_i64_25 = arith.constant -2 : i64
    %95 = arith.addi %94, %c-2_i64_25 : i64
    %c2_i64_26 = arith.constant 2 : i64
    llvm.store %95, %93 : i64, !llvm.ptr
    %96 = arith.cmpi ult, %94, %c2_i64_26 : i64
    %c91_i8_27 = arith.constant 91 : i8
    cf.cond_br %96, ^bb1(%c91_i8_27 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %97 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %98 = llvm.load %97 : !llvm.ptr -> i64
    %c3_i64_28 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %99 = arith.cmpi uge, %98, %c3_i64_28 : i64
    %c80_i8_29 = arith.constant 80 : i8
    cf.cond_br %99, ^bb28, ^bb1(%c80_i8_29 : i8)
  ^bb28:  // pred: ^bb27
    %100 = arith.subi %98, %c3_i64_28 : i64
    llvm.store %100, %97 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c41_i256 = arith.constant 41 : i256
    %101 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %102 = llvm.load %101 : !llvm.ptr -> !llvm.ptr
    llvm.store %c41_i256, %102 : i256, !llvm.ptr
    %103 = llvm.getelementptr %102[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %103, %101 : !llvm.ptr, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %104 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_30 = arith.constant 1024 : i64
    %105 = llvm.load %104 : !llvm.ptr -> i64
    %c1_i64_31 = arith.constant 1 : i64
    %106 = arith.addi %105, %c1_i64_31 : i64
    llvm.store %106, %104 : i64, !llvm.ptr
    %107 = arith.cmpi ult, %c1024_i64_30, %106 : i64
    %c92_i8_32 = arith.constant 92 : i8
    cf.cond_br %107, ^bb1(%c92_i8_32 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %108 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> i64
    %c3_i64_33 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %110 = arith.cmpi uge, %109, %c3_i64_33 : i64
    %c80_i8_34 = arith.constant 80 : i8
    cf.cond_br %110, ^bb32, ^bb1(%c80_i8_34 : i8)
  ^bb32:  // pred: ^bb31
    %111 = arith.subi %109, %c3_i64_33 : i64
    llvm.store %111, %108 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %c0_i256_35 = arith.constant 0 : i256
    %112 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_35, %113 : i256, !llvm.ptr
    %114 = llvm.getelementptr %113[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %114, %112 : !llvm.ptr, !llvm.ptr
    cf.br ^bb39
  ^bb34:  // pred: ^bb36
    %115 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_36 = arith.constant 1024 : i64
    %116 = llvm.load %115 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %117 = arith.addi %116, %c1_i64_37 : i64
    llvm.store %117, %115 : i64, !llvm.ptr
    %118 = arith.cmpi ult, %c1024_i64_36, %117 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %118, ^bb1(%c92_i8_38 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %119 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %120 = llvm.load %119 : !llvm.ptr -> i64
    %c3_i64_39 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %121 = arith.cmpi uge, %120, %c3_i64_39 : i64
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %121, ^bb36, ^bb1(%c80_i8_40 : i8)
  ^bb36:  // pred: ^bb35
    %122 = arith.subi %120, %c3_i64_39 : i64
    llvm.store %122, %119 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb38
    %c0_i256_41 = arith.constant 0 : i256
    %123 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %124 = llvm.load %123 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_41, %124 : i256, !llvm.ptr
    %125 = llvm.getelementptr %124[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %125, %123 : !llvm.ptr, !llvm.ptr
    cf.br ^bb50
  ^bb38:  // pred: ^bb40
    %126 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %127 = llvm.load %126 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %128 = arith.addi %127, %c1_i64_43 : i64
    llvm.store %128, %126 : i64, !llvm.ptr
    %129 = arith.cmpi ult, %c1024_i64_42, %128 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %129, ^bb1(%c92_i8_44 : i8), ^bb37
  ^bb39:  // pred: ^bb33
    %130 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %131 = llvm.load %130 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %132 = arith.cmpi uge, %131, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %132, ^bb40, ^bb1(%c80_i8_46 : i8)
  ^bb40:  // pred: ^bb39
    %133 = arith.subi %131, %c3_i64_45 : i64
    llvm.store %133, %130 : i64, !llvm.ptr
    cf.br ^bb38
  ^bb41:  // pred: ^bb49
    %134 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> !llvm.ptr
    %136 = llvm.getelementptr %135[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %137 = llvm.load %136 : !llvm.ptr -> i256
    llvm.store %136, %134 : !llvm.ptr, !llvm.ptr
    %138 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %139 = llvm.load %138 : !llvm.ptr -> !llvm.ptr
    %140 = llvm.getelementptr %139[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %141 = llvm.load %140 : !llvm.ptr -> i256
    llvm.store %140, %138 : !llvm.ptr, !llvm.ptr
    %142 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> !llvm.ptr
    %144 = llvm.getelementptr %143[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %145 = llvm.load %144 : !llvm.ptr -> i256
    llvm.store %144, %142 : !llvm.ptr, !llvm.ptr
    %146 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %147 = arith.cmpi ne, %146, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %147, ^bb1(%c87_i8 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %148 = arith.cmpi sgt, %145, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %148, ^bb1(%c84_i8 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %149 = arith.trunci %145 : i256 to i64
    %c0_i64_47 = arith.constant 0 : i64
    %150 = arith.cmpi slt, %149, %c0_i64_47 : i64
    %c84_i8_48 = arith.constant 84 : i8
    cf.cond_br %150, ^bb1(%c84_i8_48 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c0_i64_49 = arith.constant 0 : i64
    %151 = arith.cmpi ne, %149, %c0_i64_49 : i64
    cf.cond_br %151, ^bb120, ^bb45
  ^bb45:  // 2 preds: ^bb44, ^bb126
    %c32000_i64 = arith.constant 32000 : i64
    %152 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %154 = arith.cmpi ult, %153, %c32000_i64 : i64
    scf.if %154 {
    } else {
      %574 = arith.subi %153, %c32000_i64 : i64
      llvm.store %574, %152 : i64, !llvm.ptr
    }
    %c80_i8_50 = arith.constant 80 : i8
    cf.cond_br %154, ^bb1(%c80_i8_50 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c1_i256 = arith.constant 1 : i256
    %155 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %137, %155 {alignment = 1 : i64} : i256, !llvm.ptr
    %156 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> i64
    %158 = arith.trunci %141 : i256 to i64
    %159 = call @dora_fn_create(%arg0, %149, %158, %155, %157) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %160 = llvm.getelementptr %159[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %161 = llvm.load %160 : !llvm.ptr -> i8
    %c0_i8_51 = arith.constant 0 : i8
    %162 = arith.cmpi ne, %161, %c0_i8_51 : i8
    cf.cond_br %162, ^bb1(%161 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %163 = llvm.getelementptr %159[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %164 = llvm.load %163 : !llvm.ptr -> i64
    %165 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %166 = llvm.load %165 : !llvm.ptr -> i64
    %167 = arith.cmpi ult, %166, %164 : i64
    scf.if %167 {
    } else {
      %574 = arith.subi %166, %164 : i64
      llvm.store %574, %165 : i64, !llvm.ptr
    }
    %c80_i8_52 = arith.constant 80 : i8
    cf.cond_br %167, ^bb1(%c80_i8_52 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %168 = llvm.load %155 : !llvm.ptr -> i256
    %169 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %170 = llvm.load %169 : !llvm.ptr -> !llvm.ptr
    llvm.store %168, %170 : i256, !llvm.ptr
    %171 = llvm.getelementptr %170[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %171, %169 : !llvm.ptr, !llvm.ptr
    cf.br ^bb54
  ^bb49:  // pred: ^bb51
    %172 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_53 = arith.constant 1024 : i64
    %173 = llvm.load %172 : !llvm.ptr -> i64
    %c-2_i64_54 = arith.constant -2 : i64
    %174 = arith.addi %173, %c-2_i64_54 : i64
    %c3_i64_55 = arith.constant 3 : i64
    llvm.store %174, %172 : i64, !llvm.ptr
    %175 = arith.cmpi ult, %173, %c3_i64_55 : i64
    %c91_i8_56 = arith.constant 91 : i8
    cf.cond_br %175, ^bb1(%c91_i8_56 : i8), ^bb41
  ^bb50:  // pred: ^bb37
    %176 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %177 = llvm.load %176 : !llvm.ptr -> i64
    %c0_i64_57 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %178 = arith.cmpi uge, %177, %c0_i64_57 : i64
    %c80_i8_58 = arith.constant 80 : i8
    cf.cond_br %178, ^bb51, ^bb1(%c80_i8_58 : i8)
  ^bb51:  // pred: ^bb50
    %179 = arith.subi %177, %c0_i64_57 : i64
    llvm.store %179, %176 : i64, !llvm.ptr
    cf.br ^bb49
  ^bb52:  // pred: ^bb53
    %c0_i256_59 = arith.constant 0 : i256
    %180 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %181 = llvm.load %180 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_59, %181 : i256, !llvm.ptr
    %182 = llvm.getelementptr %181[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %182, %180 : !llvm.ptr, !llvm.ptr
    cf.br ^bb58
  ^bb53:  // pred: ^bb55
    %183 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_60 = arith.constant 1024 : i64
    %184 = llvm.load %183 : !llvm.ptr -> i64
    %c1_i64_61 = arith.constant 1 : i64
    %185 = arith.addi %184, %c1_i64_61 : i64
    llvm.store %185, %183 : i64, !llvm.ptr
    %186 = arith.cmpi ult, %c1024_i64_60, %185 : i64
    %c92_i8_62 = arith.constant 92 : i8
    cf.cond_br %186, ^bb1(%c92_i8_62 : i8), ^bb52
  ^bb54:  // pred: ^bb48
    %187 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %188 = llvm.load %187 : !llvm.ptr -> i64
    %c3_i64_63 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %189 = arith.cmpi uge, %188, %c3_i64_63 : i64
    %c80_i8_64 = arith.constant 80 : i8
    cf.cond_br %189, ^bb55, ^bb1(%c80_i8_64 : i8)
  ^bb55:  // pred: ^bb54
    %190 = arith.subi %188, %c3_i64_63 : i64
    llvm.store %190, %187 : i64, !llvm.ptr
    cf.br ^bb53
  ^bb56:  // pred: ^bb57
    %c0_i256_65 = arith.constant 0 : i256
    %191 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %192 = llvm.load %191 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_65, %192 : i256, !llvm.ptr
    %193 = llvm.getelementptr %192[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %193, %191 : !llvm.ptr, !llvm.ptr
    cf.br ^bb63
  ^bb57:  // pred: ^bb59
    %194 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_66 = arith.constant 1024 : i64
    %195 = llvm.load %194 : !llvm.ptr -> i64
    %c1_i64_67 = arith.constant 1 : i64
    %196 = arith.addi %195, %c1_i64_67 : i64
    llvm.store %196, %194 : i64, !llvm.ptr
    %197 = arith.cmpi ult, %c1024_i64_66, %196 : i64
    %c92_i8_68 = arith.constant 92 : i8
    cf.cond_br %197, ^bb1(%c92_i8_68 : i8), ^bb56
  ^bb58:  // pred: ^bb52
    %198 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %199 = llvm.load %198 : !llvm.ptr -> i64
    %c3_i64_69 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %200 = arith.cmpi uge, %199, %c3_i64_69 : i64
    %c80_i8_70 = arith.constant 80 : i8
    cf.cond_br %200, ^bb59, ^bb1(%c80_i8_70 : i8)
  ^bb59:  // pred: ^bb58
    %201 = arith.subi %199, %c3_i64_69 : i64
    llvm.store %201, %198 : i64, !llvm.ptr
    cf.br ^bb57
  ^bb60:  // pred: ^bb62
    %202 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %203 = llvm.load %202 : !llvm.ptr -> !llvm.ptr
    %204 = llvm.getelementptr %203[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %205 = llvm.load %204 : !llvm.ptr -> i256
    llvm.store %204, %202 : !llvm.ptr, !llvm.ptr
    %206 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %207 = llvm.load %206 : !llvm.ptr -> !llvm.ptr
    %208 = llvm.getelementptr %207[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %209 = llvm.load %208 : !llvm.ptr -> i256
    llvm.store %208, %206 : !llvm.ptr, !llvm.ptr
    %c32_i64_71 = arith.constant 32 : i64
    %c0_i64_72 = arith.constant 0 : i64
    %210 = arith.cmpi ne, %c32_i64_71, %c0_i64_72 : i64
    cf.cond_br %210, ^bb130, ^bb61
  ^bb61:  // 2 preds: ^bb60, ^bb134
    %211 = arith.trunci %205 : i256 to i64
    %212 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %213 = llvm.load %212 : !llvm.ptr -> !llvm.ptr
    %214 = llvm.getelementptr %213[%211] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %215 = llvm.intr.bswap(%209)  : (i256) -> i256
    llvm.store %215, %214 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb67
  ^bb62:  // pred: ^bb64
    %216 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_73 = arith.constant 1024 : i64
    %217 = llvm.load %216 : !llvm.ptr -> i64
    %c-2_i64_74 = arith.constant -2 : i64
    %218 = arith.addi %217, %c-2_i64_74 : i64
    %c2_i64_75 = arith.constant 2 : i64
    llvm.store %218, %216 : i64, !llvm.ptr
    %219 = arith.cmpi ult, %217, %c2_i64_75 : i64
    %c91_i8_76 = arith.constant 91 : i8
    cf.cond_br %219, ^bb1(%c91_i8_76 : i8), ^bb60
  ^bb63:  // pred: ^bb56
    %220 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %221 = llvm.load %220 : !llvm.ptr -> i64
    %c3_i64_77 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %222 = arith.cmpi uge, %221, %c3_i64_77 : i64
    %c80_i8_78 = arith.constant 80 : i8
    cf.cond_br %222, ^bb64, ^bb1(%c80_i8_78 : i8)
  ^bb64:  // pred: ^bb63
    %223 = arith.subi %221, %c3_i64_77 : i64
    llvm.store %223, %220 : i64, !llvm.ptr
    cf.br ^bb62
  ^bb65:  // pred: ^bb66
    %c0_i256_79 = arith.constant 0 : i256
    %224 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %225 = llvm.load %224 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_79, %225 : i256, !llvm.ptr
    %226 = llvm.getelementptr %225[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %226, %224 : !llvm.ptr, !llvm.ptr
    cf.br ^bb71
  ^bb66:  // pred: ^bb68
    %227 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_80 = arith.constant 1024 : i64
    %228 = llvm.load %227 : !llvm.ptr -> i64
    %c1_i64_81 = arith.constant 1 : i64
    %229 = arith.addi %228, %c1_i64_81 : i64
    llvm.store %229, %227 : i64, !llvm.ptr
    %230 = arith.cmpi ult, %c1024_i64_80, %229 : i64
    %c92_i8_82 = arith.constant 92 : i8
    cf.cond_br %230, ^bb1(%c92_i8_82 : i8), ^bb65
  ^bb67:  // pred: ^bb61
    %231 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %232 = llvm.load %231 : !llvm.ptr -> i64
    %c3_i64_83 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %233 = arith.cmpi uge, %232, %c3_i64_83 : i64
    %c80_i8_84 = arith.constant 80 : i8
    cf.cond_br %233, ^bb68, ^bb1(%c80_i8_84 : i8)
  ^bb68:  // pred: ^bb67
    %234 = arith.subi %232, %c3_i64_83 : i64
    llvm.store %234, %231 : i64, !llvm.ptr
    cf.br ^bb66
  ^bb69:  // pred: ^bb70
    %c32_i256_85 = arith.constant 32 : i256
    %235 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %236 = llvm.load %235 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_85, %236 : i256, !llvm.ptr
    %237 = llvm.getelementptr %236[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %237, %235 : !llvm.ptr, !llvm.ptr
    cf.br ^bb76
  ^bb70:  // pred: ^bb72
    %238 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_86 = arith.constant 1024 : i64
    %239 = llvm.load %238 : !llvm.ptr -> i64
    %c1_i64_87 = arith.constant 1 : i64
    %240 = arith.addi %239, %c1_i64_87 : i64
    llvm.store %240, %238 : i64, !llvm.ptr
    %241 = arith.cmpi ult, %c1024_i64_86, %240 : i64
    %c92_i8_88 = arith.constant 92 : i8
    cf.cond_br %241, ^bb1(%c92_i8_88 : i8), ^bb69
  ^bb71:  // pred: ^bb65
    %242 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %243 = llvm.load %242 : !llvm.ptr -> i64
    %c3_i64_89 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %244 = arith.cmpi uge, %243, %c3_i64_89 : i64
    %c80_i8_90 = arith.constant 80 : i8
    cf.cond_br %244, ^bb72, ^bb1(%c80_i8_90 : i8)
  ^bb72:  // pred: ^bb71
    %245 = arith.subi %243, %c3_i64_89 : i64
    llvm.store %245, %242 : i64, !llvm.ptr
    cf.br ^bb70
  ^bb73:  // pred: ^bb75
    %246 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %247 = llvm.load %246 : !llvm.ptr -> !llvm.ptr
    %248 = llvm.getelementptr %247[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %249 = llvm.load %248 : !llvm.ptr -> i256
    llvm.store %248, %246 : !llvm.ptr, !llvm.ptr
    %250 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %251 = llvm.load %250 : !llvm.ptr -> !llvm.ptr
    %252 = llvm.getelementptr %251[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %253 = llvm.load %252 : !llvm.ptr -> i256
    llvm.store %252, %250 : !llvm.ptr, !llvm.ptr
    %c32_i64_91 = arith.constant 32 : i64
    %c0_i64_92 = arith.constant 0 : i64
    %254 = arith.cmpi ne, %c32_i64_91, %c0_i64_92 : i64
    cf.cond_br %254, ^bb138, ^bb74
  ^bb74:  // 2 preds: ^bb73, ^bb142
    %255 = arith.trunci %249 : i256 to i64
    %256 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %257 = llvm.load %256 : !llvm.ptr -> !llvm.ptr
    %258 = llvm.getelementptr %257[%255] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %259 = llvm.intr.bswap(%253)  : (i256) -> i256
    llvm.store %259, %258 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb80
  ^bb75:  // pred: ^bb77
    %260 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_93 = arith.constant 1024 : i64
    %261 = llvm.load %260 : !llvm.ptr -> i64
    %c-2_i64_94 = arith.constant -2 : i64
    %262 = arith.addi %261, %c-2_i64_94 : i64
    %c2_i64_95 = arith.constant 2 : i64
    llvm.store %262, %260 : i64, !llvm.ptr
    %263 = arith.cmpi ult, %261, %c2_i64_95 : i64
    %c91_i8_96 = arith.constant 91 : i8
    cf.cond_br %263, ^bb1(%c91_i8_96 : i8), ^bb73
  ^bb76:  // pred: ^bb69
    %264 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %265 = llvm.load %264 : !llvm.ptr -> i64
    %c3_i64_97 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %266 = arith.cmpi uge, %265, %c3_i64_97 : i64
    %c80_i8_98 = arith.constant 80 : i8
    cf.cond_br %266, ^bb77, ^bb1(%c80_i8_98 : i8)
  ^bb77:  // pred: ^bb76
    %267 = arith.subi %265, %c3_i64_97 : i64
    llvm.store %267, %264 : i64, !llvm.ptr
    cf.br ^bb75
  ^bb78:  // pred: ^bb79
    %c32_i256_99 = arith.constant 32 : i256
    %268 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %269 = llvm.load %268 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_99, %269 : i256, !llvm.ptr
    %270 = llvm.getelementptr %269[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %270, %268 : !llvm.ptr, !llvm.ptr
    cf.br ^bb84
  ^bb79:  // pred: ^bb81
    %271 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_100 = arith.constant 1024 : i64
    %272 = llvm.load %271 : !llvm.ptr -> i64
    %c1_i64_101 = arith.constant 1 : i64
    %273 = arith.addi %272, %c1_i64_101 : i64
    llvm.store %273, %271 : i64, !llvm.ptr
    %274 = arith.cmpi ult, %c1024_i64_100, %273 : i64
    %c92_i8_102 = arith.constant 92 : i8
    cf.cond_br %274, ^bb1(%c92_i8_102 : i8), ^bb78
  ^bb80:  // pred: ^bb74
    %275 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %276 = llvm.load %275 : !llvm.ptr -> i64
    %c3_i64_103 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %277 = arith.cmpi uge, %276, %c3_i64_103 : i64
    %c80_i8_104 = arith.constant 80 : i8
    cf.cond_br %277, ^bb81, ^bb1(%c80_i8_104 : i8)
  ^bb81:  // pred: ^bb80
    %278 = arith.subi %276, %c3_i64_103 : i64
    llvm.store %278, %275 : i64, !llvm.ptr
    cf.br ^bb79
  ^bb82:  // pred: ^bb83
    %c0_i256_105 = arith.constant 0 : i256
    %279 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %280 = llvm.load %279 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_105, %280 : i256, !llvm.ptr
    %281 = llvm.getelementptr %280[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %281, %279 : !llvm.ptr, !llvm.ptr
    cf.br ^bb88
  ^bb83:  // pred: ^bb85
    %282 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_106 = arith.constant 1024 : i64
    %283 = llvm.load %282 : !llvm.ptr -> i64
    %c1_i64_107 = arith.constant 1 : i64
    %284 = arith.addi %283, %c1_i64_107 : i64
    llvm.store %284, %282 : i64, !llvm.ptr
    %285 = arith.cmpi ult, %c1024_i64_106, %284 : i64
    %c92_i8_108 = arith.constant 92 : i8
    cf.cond_br %285, ^bb1(%c92_i8_108 : i8), ^bb82
  ^bb84:  // pred: ^bb78
    %286 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %287 = llvm.load %286 : !llvm.ptr -> i64
    %c3_i64_109 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %288 = arith.cmpi uge, %287, %c3_i64_109 : i64
    %c80_i8_110 = arith.constant 80 : i8
    cf.cond_br %288, ^bb85, ^bb1(%c80_i8_110 : i8)
  ^bb85:  // pred: ^bb84
    %289 = arith.subi %287, %c3_i64_109 : i64
    llvm.store %289, %286 : i64, !llvm.ptr
    cf.br ^bb83
  ^bb86:  // pred: ^bb87
    %c0_i256_111 = arith.constant 0 : i256
    %290 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %291 = llvm.load %290 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_111, %291 : i256, !llvm.ptr
    %292 = llvm.getelementptr %291[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %292, %290 : !llvm.ptr, !llvm.ptr
    cf.br ^bb92
  ^bb87:  // pred: ^bb89
    %293 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_112 = arith.constant 1024 : i64
    %294 = llvm.load %293 : !llvm.ptr -> i64
    %c1_i64_113 = arith.constant 1 : i64
    %295 = arith.addi %294, %c1_i64_113 : i64
    llvm.store %295, %293 : i64, !llvm.ptr
    %296 = arith.cmpi ult, %c1024_i64_112, %295 : i64
    %c92_i8_114 = arith.constant 92 : i8
    cf.cond_br %296, ^bb1(%c92_i8_114 : i8), ^bb86
  ^bb88:  // pred: ^bb82
    %297 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %298 = llvm.load %297 : !llvm.ptr -> i64
    %c3_i64_115 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %299 = arith.cmpi uge, %298, %c3_i64_115 : i64
    %c80_i8_116 = arith.constant 80 : i8
    cf.cond_br %299, ^bb89, ^bb1(%c80_i8_116 : i8)
  ^bb89:  // pred: ^bb88
    %300 = arith.subi %298, %c3_i64_115 : i64
    llvm.store %300, %297 : i64, !llvm.ptr
    cf.br ^bb87
  ^bb90:  // pred: ^bb91
    %301 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %302 = llvm.load %301 : !llvm.ptr -> !llvm.ptr
    %303 = llvm.getelementptr %302[-4] : (!llvm.ptr) -> !llvm.ptr, i256
    %304 = llvm.load %303 : !llvm.ptr -> i256
    %305 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %306 = llvm.load %305 : !llvm.ptr -> !llvm.ptr
    llvm.store %304, %306 : i256, !llvm.ptr
    %307 = llvm.getelementptr %306[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %307, %305 : !llvm.ptr, !llvm.ptr
    cf.br ^bb101
  ^bb91:  // pred: ^bb93
    %308 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_117 = arith.constant 1024 : i64
    %309 = llvm.load %308 : !llvm.ptr -> i64
    %c1_i64_118 = arith.constant 1 : i64
    %310 = arith.addi %309, %c1_i64_118 : i64
    %c4_i64 = arith.constant 4 : i64
    %311 = arith.cmpi ult, %309, %c4_i64 : i64
    %312 = arith.cmpi ult, %c1024_i64_117, %310 : i64
    llvm.store %310, %308 : i64, !llvm.ptr
    %313 = arith.xori %311, %312 : i1
    %c92_i8_119 = arith.constant 92 : i8
    cf.cond_br %313, ^bb1(%c92_i8_119 : i8), ^bb90
  ^bb92:  // pred: ^bb86
    %314 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %315 = llvm.load %314 : !llvm.ptr -> i64
    %c3_i64_120 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %316 = arith.cmpi uge, %315, %c3_i64_120 : i64
    %c80_i8_121 = arith.constant 80 : i8
    cf.cond_br %316, ^bb93, ^bb1(%c80_i8_121 : i8)
  ^bb93:  // pred: ^bb92
    %317 = arith.subi %315, %c3_i64_120 : i64
    llvm.store %317, %314 : i64, !llvm.ptr
    cf.br ^bb91
  ^bb94:  // pred: ^bb100
    %318 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %319 = llvm.load %318 : !llvm.ptr -> !llvm.ptr
    %320 = llvm.getelementptr %319[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %321 = llvm.load %320 : !llvm.ptr -> i256
    llvm.store %320, %318 : !llvm.ptr, !llvm.ptr
    %322 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %323 = llvm.load %322 : !llvm.ptr -> !llvm.ptr
    %324 = llvm.getelementptr %323[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %325 = llvm.load %324 : !llvm.ptr -> i256
    llvm.store %324, %322 : !llvm.ptr, !llvm.ptr
    %326 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %327 = llvm.load %326 : !llvm.ptr -> !llvm.ptr
    %328 = llvm.getelementptr %327[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %329 = llvm.load %328 : !llvm.ptr -> i256
    llvm.store %328, %326 : !llvm.ptr, !llvm.ptr
    %330 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %331 = llvm.load %330 : !llvm.ptr -> !llvm.ptr
    %332 = llvm.getelementptr %331[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %333 = llvm.load %332 : !llvm.ptr -> i256
    llvm.store %332, %330 : !llvm.ptr, !llvm.ptr
    %c18446744073709551615_i256_122 = arith.constant 18446744073709551615 : i256
    %334 = arith.cmpi sgt, %333, %c18446744073709551615_i256_122 : i256
    %c84_i8_123 = arith.constant 84 : i8
    cf.cond_br %334, ^bb1(%c84_i8_123 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %335 = arith.trunci %333 : i256 to i64
    %c0_i64_124 = arith.constant 0 : i64
    %336 = arith.cmpi slt, %335, %c0_i64_124 : i64
    %c84_i8_125 = arith.constant 84 : i8
    cf.cond_br %336, ^bb1(%c84_i8_125 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_126 = arith.constant 32 : i64
    %337 = arith.addi %335, %c31_i64 : i64
    %338 = arith.divui %337, %c32_i64_126 : i64
    %c3_i64_127 = arith.constant 3 : i64
    %339 = arith.muli %338, %c3_i64_127 : i64
    %340 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %341 = llvm.load %340 : !llvm.ptr -> i64
    %342 = arith.cmpi ult, %341, %339 : i64
    scf.if %342 {
    } else {
      %574 = arith.subi %341, %339 : i64
      llvm.store %574, %340 : i64, !llvm.ptr
    }
    %c80_i8_128 = arith.constant 80 : i8
    cf.cond_br %342, ^bb1(%c80_i8_128 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %c0_i64_129 = arith.constant 0 : i64
    %343 = arith.cmpi ne, %335, %c0_i64_129 : i64
    cf.cond_br %343, ^bb146, ^bb98
  ^bb98:  // 2 preds: ^bb97, ^bb150
    %344 = arith.trunci %325 : i256 to i64
    %c1_i256_130 = arith.constant 1 : i256
    %345 = llvm.alloca %c1_i256_130 x i256 : (i256) -> !llvm.ptr
    llvm.store %321, %345 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_131 = arith.constant 1 : i256
    %346 = llvm.alloca %c1_i256_131 x i256 : (i256) -> !llvm.ptr
    llvm.store %329, %346 {alignment = 1 : i64} : i256, !llvm.ptr
    %347 = call @dora_fn_ext_code_copy(%arg0, %345, %346, %335, %344) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
    %348 = llvm.getelementptr %347[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %349 = llvm.load %348 : !llvm.ptr -> i64
    %350 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %351 = llvm.load %350 : !llvm.ptr -> i64
    %352 = arith.cmpi ult, %351, %349 : i64
    scf.if %352 {
    } else {
      %574 = arith.subi %351, %349 : i64
      llvm.store %574, %350 : i64, !llvm.ptr
    }
    %c80_i8_132 = arith.constant 80 : i8
    cf.cond_br %352, ^bb1(%c80_i8_132 : i8), ^bb99
  ^bb99:  // pred: ^bb98
    cf.br ^bb103
  ^bb100:  // pred: ^bb102
    %353 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_133 = arith.constant 1024 : i64
    %354 = llvm.load %353 : !llvm.ptr -> i64
    %c-4_i64 = arith.constant -4 : i64
    %355 = arith.addi %354, %c-4_i64 : i64
    %c4_i64_134 = arith.constant 4 : i64
    llvm.store %355, %353 : i64, !llvm.ptr
    %356 = arith.cmpi ult, %354, %c4_i64_134 : i64
    %c91_i8_135 = arith.constant 91 : i8
    cf.cond_br %356, ^bb1(%c91_i8_135 : i8), ^bb94
  ^bb101:  // pred: ^bb90
    %357 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %358 = llvm.load %357 : !llvm.ptr -> i64
    %c0_i64_136 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %359 = arith.cmpi uge, %358, %c0_i64_136 : i64
    %c80_i8_137 = arith.constant 80 : i8
    cf.cond_br %359, ^bb102, ^bb1(%c80_i8_137 : i8)
  ^bb102:  // pred: ^bb101
    %360 = arith.subi %358, %c0_i64_136 : i64
    llvm.store %360, %357 : i64, !llvm.ptr
    cf.br ^bb100
  ^bb103:  // pred: ^bb99
    %c0_i64_138 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %361 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %362 = llvm.load %361 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_138, %c0_i64_138, %362, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb104:  // pred: ^bb11
    %c18446744073709551615_i256_139 = arith.constant 18446744073709551615 : i256
    %363 = arith.cmpi sgt, %38, %c18446744073709551615_i256_139 : i256
    %c84_i8_140 = arith.constant 84 : i8
    cf.cond_br %363, ^bb1(%c84_i8_140 : i8), ^bb105
  ^bb105:  // pred: ^bb104
    %364 = arith.trunci %38 : i256 to i64
    %c0_i64_141 = arith.constant 0 : i64
    %365 = arith.cmpi slt, %364, %c0_i64_141 : i64
    %c84_i8_142 = arith.constant 84 : i8
    cf.cond_br %365, ^bb1(%c84_i8_142 : i8), ^bb106
  ^bb106:  // pred: ^bb105
    %366 = arith.addi %364, %c32_i64 : i64
    %c0_i64_143 = arith.constant 0 : i64
    %367 = arith.cmpi slt, %366, %c0_i64_143 : i64
    %c84_i8_144 = arith.constant 84 : i8
    cf.cond_br %367, ^bb1(%c84_i8_144 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %c31_i64_145 = arith.constant 31 : i64
    %c32_i64_146 = arith.constant 32 : i64
    %368 = arith.addi %366, %c31_i64_145 : i64
    %369 = arith.divui %368, %c32_i64_146 : i64
    %c32_i64_147 = arith.constant 32 : i64
    %370 = arith.muli %369, %c32_i64_147 : i64
    %371 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %372 = llvm.load %371 : !llvm.ptr -> i64
    %c31_i64_148 = arith.constant 31 : i64
    %c32_i64_149 = arith.constant 32 : i64
    %373 = arith.addi %372, %c31_i64_148 : i64
    %374 = arith.divui %373, %c32_i64_149 : i64
    %375 = arith.muli %374, %c32_i64_147 : i64
    %376 = arith.cmpi ult, %375, %370 : i64
    cf.cond_br %376, ^bb109, ^bb108
  ^bb108:  // 2 preds: ^bb107, ^bb111
    cf.br ^bb12
  ^bb109:  // pred: ^bb107
    %c3_i64_150 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %377 = arith.muli %374, %374 : i64
    %378 = arith.divui %377, %c512_i64 : i64
    %379 = arith.muli %374, %c3_i64_150 : i64
    %380 = arith.addi %378, %379 : i64
    %c3_i64_151 = arith.constant 3 : i64
    %c512_i64_152 = arith.constant 512 : i64
    %381 = arith.muli %369, %369 : i64
    %382 = arith.divui %381, %c512_i64_152 : i64
    %383 = arith.muli %369, %c3_i64_151 : i64
    %384 = arith.addi %382, %383 : i64
    %385 = arith.subi %384, %380 : i64
    %386 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %387 = llvm.load %386 : !llvm.ptr -> i64
    %388 = arith.cmpi ult, %387, %385 : i64
    scf.if %388 {
    } else {
      %574 = arith.subi %387, %385 : i64
      llvm.store %574, %386 : i64, !llvm.ptr
    }
    %c80_i8_153 = arith.constant 80 : i8
    cf.cond_br %388, ^bb1(%c80_i8_153 : i8), ^bb110
  ^bb110:  // pred: ^bb109
    %389 = call @dora_fn_extend_memory(%arg0, %370) : (!llvm.ptr, i64) -> !llvm.ptr
    %390 = llvm.getelementptr %389[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %391 = llvm.load %390 : !llvm.ptr -> !llvm.ptr
    %392 = llvm.getelementptr %389[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %393 = llvm.load %392 : !llvm.ptr -> i8
    %c0_i8_154 = arith.constant 0 : i8
    %394 = arith.cmpi ne, %393, %c0_i8_154 : i8
    cf.cond_br %394, ^bb1(%393 : i8), ^bb111
  ^bb111:  // pred: ^bb110
    %395 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %391, %395 : !llvm.ptr, !llvm.ptr
    %396 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %370, %396 : i64, !llvm.ptr
    cf.br ^bb108
  ^bb112:  // pred: ^bb24
    %c18446744073709551615_i256_155 = arith.constant 18446744073709551615 : i256
    %397 = arith.cmpi sgt, %82, %c18446744073709551615_i256_155 : i256
    %c84_i8_156 = arith.constant 84 : i8
    cf.cond_br %397, ^bb1(%c84_i8_156 : i8), ^bb113
  ^bb113:  // pred: ^bb112
    %398 = arith.trunci %82 : i256 to i64
    %c0_i64_157 = arith.constant 0 : i64
    %399 = arith.cmpi slt, %398, %c0_i64_157 : i64
    %c84_i8_158 = arith.constant 84 : i8
    cf.cond_br %399, ^bb1(%c84_i8_158 : i8), ^bb114
  ^bb114:  // pred: ^bb113
    %400 = arith.addi %398, %c32_i64_22 : i64
    %c0_i64_159 = arith.constant 0 : i64
    %401 = arith.cmpi slt, %400, %c0_i64_159 : i64
    %c84_i8_160 = arith.constant 84 : i8
    cf.cond_br %401, ^bb1(%c84_i8_160 : i8), ^bb115
  ^bb115:  // pred: ^bb114
    %c31_i64_161 = arith.constant 31 : i64
    %c32_i64_162 = arith.constant 32 : i64
    %402 = arith.addi %400, %c31_i64_161 : i64
    %403 = arith.divui %402, %c32_i64_162 : i64
    %c32_i64_163 = arith.constant 32 : i64
    %404 = arith.muli %403, %c32_i64_163 : i64
    %405 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %406 = llvm.load %405 : !llvm.ptr -> i64
    %c31_i64_164 = arith.constant 31 : i64
    %c32_i64_165 = arith.constant 32 : i64
    %407 = arith.addi %406, %c31_i64_164 : i64
    %408 = arith.divui %407, %c32_i64_165 : i64
    %409 = arith.muli %408, %c32_i64_163 : i64
    %410 = arith.cmpi ult, %409, %404 : i64
    cf.cond_br %410, ^bb117, ^bb116
  ^bb116:  // 2 preds: ^bb115, ^bb119
    cf.br ^bb25
  ^bb117:  // pred: ^bb115
    %c3_i64_166 = arith.constant 3 : i64
    %c512_i64_167 = arith.constant 512 : i64
    %411 = arith.muli %408, %408 : i64
    %412 = arith.divui %411, %c512_i64_167 : i64
    %413 = arith.muli %408, %c3_i64_166 : i64
    %414 = arith.addi %412, %413 : i64
    %c3_i64_168 = arith.constant 3 : i64
    %c512_i64_169 = arith.constant 512 : i64
    %415 = arith.muli %403, %403 : i64
    %416 = arith.divui %415, %c512_i64_169 : i64
    %417 = arith.muli %403, %c3_i64_168 : i64
    %418 = arith.addi %416, %417 : i64
    %419 = arith.subi %418, %414 : i64
    %420 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %421 = llvm.load %420 : !llvm.ptr -> i64
    %422 = arith.cmpi ult, %421, %419 : i64
    scf.if %422 {
    } else {
      %574 = arith.subi %421, %419 : i64
      llvm.store %574, %420 : i64, !llvm.ptr
    }
    %c80_i8_170 = arith.constant 80 : i8
    cf.cond_br %422, ^bb1(%c80_i8_170 : i8), ^bb118
  ^bb118:  // pred: ^bb117
    %423 = call @dora_fn_extend_memory(%arg0, %404) : (!llvm.ptr, i64) -> !llvm.ptr
    %424 = llvm.getelementptr %423[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %425 = llvm.load %424 : !llvm.ptr -> !llvm.ptr
    %426 = llvm.getelementptr %423[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %427 = llvm.load %426 : !llvm.ptr -> i8
    %c0_i8_171 = arith.constant 0 : i8
    %428 = arith.cmpi ne, %427, %c0_i8_171 : i8
    cf.cond_br %428, ^bb1(%427 : i8), ^bb119
  ^bb119:  // pred: ^bb118
    %429 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %425, %429 : !llvm.ptr, !llvm.ptr
    %430 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %404, %430 : i64, !llvm.ptr
    cf.br ^bb116
  ^bb120:  // pred: ^bb44
    %c49152_i64 = arith.constant 49152 : i64
    %431 = arith.cmpi ugt, %149, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %431, ^bb1(%c100_i8 : i8), ^bb121
  ^bb121:  // pred: ^bb120
    %c31_i64_172 = arith.constant 31 : i64
    %c32_i64_173 = arith.constant 32 : i64
    %432 = arith.addi %149, %c31_i64_172 : i64
    %433 = arith.divui %432, %c32_i64_173 : i64
    %c2_i64_174 = arith.constant 2 : i64
    %434 = arith.muli %433, %c2_i64_174 : i64
    %435 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %436 = llvm.load %435 : !llvm.ptr -> i64
    %437 = arith.cmpi ult, %436, %434 : i64
    scf.if %437 {
    } else {
      %574 = arith.subi %436, %434 : i64
      llvm.store %574, %435 : i64, !llvm.ptr
    }
    %c80_i8_175 = arith.constant 80 : i8
    cf.cond_br %437, ^bb1(%c80_i8_175 : i8), ^bb122
  ^bb122:  // pred: ^bb121
    %c18446744073709551615_i256_176 = arith.constant 18446744073709551615 : i256
    %438 = arith.cmpi sgt, %141, %c18446744073709551615_i256_176 : i256
    %c84_i8_177 = arith.constant 84 : i8
    cf.cond_br %438, ^bb1(%c84_i8_177 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %439 = arith.trunci %141 : i256 to i64
    %c0_i64_178 = arith.constant 0 : i64
    %440 = arith.cmpi slt, %439, %c0_i64_178 : i64
    %c84_i8_179 = arith.constant 84 : i8
    cf.cond_br %440, ^bb1(%c84_i8_179 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %441 = arith.addi %439, %149 : i64
    %c0_i64_180 = arith.constant 0 : i64
    %442 = arith.cmpi slt, %441, %c0_i64_180 : i64
    %c84_i8_181 = arith.constant 84 : i8
    cf.cond_br %442, ^bb1(%c84_i8_181 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %c31_i64_182 = arith.constant 31 : i64
    %c32_i64_183 = arith.constant 32 : i64
    %443 = arith.addi %441, %c31_i64_182 : i64
    %444 = arith.divui %443, %c32_i64_183 : i64
    %c32_i64_184 = arith.constant 32 : i64
    %445 = arith.muli %444, %c32_i64_184 : i64
    %446 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %447 = llvm.load %446 : !llvm.ptr -> i64
    %c31_i64_185 = arith.constant 31 : i64
    %c32_i64_186 = arith.constant 32 : i64
    %448 = arith.addi %447, %c31_i64_185 : i64
    %449 = arith.divui %448, %c32_i64_186 : i64
    %450 = arith.muli %449, %c32_i64_184 : i64
    %451 = arith.cmpi ult, %450, %445 : i64
    cf.cond_br %451, ^bb127, ^bb126
  ^bb126:  // 2 preds: ^bb125, ^bb129
    cf.br ^bb45
  ^bb127:  // pred: ^bb125
    %c3_i64_187 = arith.constant 3 : i64
    %c512_i64_188 = arith.constant 512 : i64
    %452 = arith.muli %449, %449 : i64
    %453 = arith.divui %452, %c512_i64_188 : i64
    %454 = arith.muli %449, %c3_i64_187 : i64
    %455 = arith.addi %453, %454 : i64
    %c3_i64_189 = arith.constant 3 : i64
    %c512_i64_190 = arith.constant 512 : i64
    %456 = arith.muli %444, %444 : i64
    %457 = arith.divui %456, %c512_i64_190 : i64
    %458 = arith.muli %444, %c3_i64_189 : i64
    %459 = arith.addi %457, %458 : i64
    %460 = arith.subi %459, %455 : i64
    %461 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %462 = llvm.load %461 : !llvm.ptr -> i64
    %463 = arith.cmpi ult, %462, %460 : i64
    scf.if %463 {
    } else {
      %574 = arith.subi %462, %460 : i64
      llvm.store %574, %461 : i64, !llvm.ptr
    }
    %c80_i8_191 = arith.constant 80 : i8
    cf.cond_br %463, ^bb1(%c80_i8_191 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %464 = call @dora_fn_extend_memory(%arg0, %445) : (!llvm.ptr, i64) -> !llvm.ptr
    %465 = llvm.getelementptr %464[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %466 = llvm.load %465 : !llvm.ptr -> !llvm.ptr
    %467 = llvm.getelementptr %464[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %468 = llvm.load %467 : !llvm.ptr -> i8
    %c0_i8_192 = arith.constant 0 : i8
    %469 = arith.cmpi ne, %468, %c0_i8_192 : i8
    cf.cond_br %469, ^bb1(%468 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    %470 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %466, %470 : !llvm.ptr, !llvm.ptr
    %471 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %445, %471 : i64, !llvm.ptr
    cf.br ^bb126
  ^bb130:  // pred: ^bb60
    %c18446744073709551615_i256_193 = arith.constant 18446744073709551615 : i256
    %472 = arith.cmpi sgt, %205, %c18446744073709551615_i256_193 : i256
    %c84_i8_194 = arith.constant 84 : i8
    cf.cond_br %472, ^bb1(%c84_i8_194 : i8), ^bb131
  ^bb131:  // pred: ^bb130
    %473 = arith.trunci %205 : i256 to i64
    %c0_i64_195 = arith.constant 0 : i64
    %474 = arith.cmpi slt, %473, %c0_i64_195 : i64
    %c84_i8_196 = arith.constant 84 : i8
    cf.cond_br %474, ^bb1(%c84_i8_196 : i8), ^bb132
  ^bb132:  // pred: ^bb131
    %475 = arith.addi %473, %c32_i64_71 : i64
    %c0_i64_197 = arith.constant 0 : i64
    %476 = arith.cmpi slt, %475, %c0_i64_197 : i64
    %c84_i8_198 = arith.constant 84 : i8
    cf.cond_br %476, ^bb1(%c84_i8_198 : i8), ^bb133
  ^bb133:  // pred: ^bb132
    %c31_i64_199 = arith.constant 31 : i64
    %c32_i64_200 = arith.constant 32 : i64
    %477 = arith.addi %475, %c31_i64_199 : i64
    %478 = arith.divui %477, %c32_i64_200 : i64
    %c32_i64_201 = arith.constant 32 : i64
    %479 = arith.muli %478, %c32_i64_201 : i64
    %480 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %481 = llvm.load %480 : !llvm.ptr -> i64
    %c31_i64_202 = arith.constant 31 : i64
    %c32_i64_203 = arith.constant 32 : i64
    %482 = arith.addi %481, %c31_i64_202 : i64
    %483 = arith.divui %482, %c32_i64_203 : i64
    %484 = arith.muli %483, %c32_i64_201 : i64
    %485 = arith.cmpi ult, %484, %479 : i64
    cf.cond_br %485, ^bb135, ^bb134
  ^bb134:  // 2 preds: ^bb133, ^bb137
    cf.br ^bb61
  ^bb135:  // pred: ^bb133
    %c3_i64_204 = arith.constant 3 : i64
    %c512_i64_205 = arith.constant 512 : i64
    %486 = arith.muli %483, %483 : i64
    %487 = arith.divui %486, %c512_i64_205 : i64
    %488 = arith.muli %483, %c3_i64_204 : i64
    %489 = arith.addi %487, %488 : i64
    %c3_i64_206 = arith.constant 3 : i64
    %c512_i64_207 = arith.constant 512 : i64
    %490 = arith.muli %478, %478 : i64
    %491 = arith.divui %490, %c512_i64_207 : i64
    %492 = arith.muli %478, %c3_i64_206 : i64
    %493 = arith.addi %491, %492 : i64
    %494 = arith.subi %493, %489 : i64
    %495 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %496 = llvm.load %495 : !llvm.ptr -> i64
    %497 = arith.cmpi ult, %496, %494 : i64
    scf.if %497 {
    } else {
      %574 = arith.subi %496, %494 : i64
      llvm.store %574, %495 : i64, !llvm.ptr
    }
    %c80_i8_208 = arith.constant 80 : i8
    cf.cond_br %497, ^bb1(%c80_i8_208 : i8), ^bb136
  ^bb136:  // pred: ^bb135
    %498 = call @dora_fn_extend_memory(%arg0, %479) : (!llvm.ptr, i64) -> !llvm.ptr
    %499 = llvm.getelementptr %498[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %500 = llvm.load %499 : !llvm.ptr -> !llvm.ptr
    %501 = llvm.getelementptr %498[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %502 = llvm.load %501 : !llvm.ptr -> i8
    %c0_i8_209 = arith.constant 0 : i8
    %503 = arith.cmpi ne, %502, %c0_i8_209 : i8
    cf.cond_br %503, ^bb1(%502 : i8), ^bb137
  ^bb137:  // pred: ^bb136
    %504 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %500, %504 : !llvm.ptr, !llvm.ptr
    %505 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %479, %505 : i64, !llvm.ptr
    cf.br ^bb134
  ^bb138:  // pred: ^bb73
    %c18446744073709551615_i256_210 = arith.constant 18446744073709551615 : i256
    %506 = arith.cmpi sgt, %249, %c18446744073709551615_i256_210 : i256
    %c84_i8_211 = arith.constant 84 : i8
    cf.cond_br %506, ^bb1(%c84_i8_211 : i8), ^bb139
  ^bb139:  // pred: ^bb138
    %507 = arith.trunci %249 : i256 to i64
    %c0_i64_212 = arith.constant 0 : i64
    %508 = arith.cmpi slt, %507, %c0_i64_212 : i64
    %c84_i8_213 = arith.constant 84 : i8
    cf.cond_br %508, ^bb1(%c84_i8_213 : i8), ^bb140
  ^bb140:  // pred: ^bb139
    %509 = arith.addi %507, %c32_i64_91 : i64
    %c0_i64_214 = arith.constant 0 : i64
    %510 = arith.cmpi slt, %509, %c0_i64_214 : i64
    %c84_i8_215 = arith.constant 84 : i8
    cf.cond_br %510, ^bb1(%c84_i8_215 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    %c31_i64_216 = arith.constant 31 : i64
    %c32_i64_217 = arith.constant 32 : i64
    %511 = arith.addi %509, %c31_i64_216 : i64
    %512 = arith.divui %511, %c32_i64_217 : i64
    %c32_i64_218 = arith.constant 32 : i64
    %513 = arith.muli %512, %c32_i64_218 : i64
    %514 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %515 = llvm.load %514 : !llvm.ptr -> i64
    %c31_i64_219 = arith.constant 31 : i64
    %c32_i64_220 = arith.constant 32 : i64
    %516 = arith.addi %515, %c31_i64_219 : i64
    %517 = arith.divui %516, %c32_i64_220 : i64
    %518 = arith.muli %517, %c32_i64_218 : i64
    %519 = arith.cmpi ult, %518, %513 : i64
    cf.cond_br %519, ^bb143, ^bb142
  ^bb142:  // 2 preds: ^bb141, ^bb145
    cf.br ^bb74
  ^bb143:  // pred: ^bb141
    %c3_i64_221 = arith.constant 3 : i64
    %c512_i64_222 = arith.constant 512 : i64
    %520 = arith.muli %517, %517 : i64
    %521 = arith.divui %520, %c512_i64_222 : i64
    %522 = arith.muli %517, %c3_i64_221 : i64
    %523 = arith.addi %521, %522 : i64
    %c3_i64_223 = arith.constant 3 : i64
    %c512_i64_224 = arith.constant 512 : i64
    %524 = arith.muli %512, %512 : i64
    %525 = arith.divui %524, %c512_i64_224 : i64
    %526 = arith.muli %512, %c3_i64_223 : i64
    %527 = arith.addi %525, %526 : i64
    %528 = arith.subi %527, %523 : i64
    %529 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %530 = llvm.load %529 : !llvm.ptr -> i64
    %531 = arith.cmpi ult, %530, %528 : i64
    scf.if %531 {
    } else {
      %574 = arith.subi %530, %528 : i64
      llvm.store %574, %529 : i64, !llvm.ptr
    }
    %c80_i8_225 = arith.constant 80 : i8
    cf.cond_br %531, ^bb1(%c80_i8_225 : i8), ^bb144
  ^bb144:  // pred: ^bb143
    %532 = call @dora_fn_extend_memory(%arg0, %513) : (!llvm.ptr, i64) -> !llvm.ptr
    %533 = llvm.getelementptr %532[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %534 = llvm.load %533 : !llvm.ptr -> !llvm.ptr
    %535 = llvm.getelementptr %532[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %536 = llvm.load %535 : !llvm.ptr -> i8
    %c0_i8_226 = arith.constant 0 : i8
    %537 = arith.cmpi ne, %536, %c0_i8_226 : i8
    cf.cond_br %537, ^bb1(%536 : i8), ^bb145
  ^bb145:  // pred: ^bb144
    %538 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %534, %538 : !llvm.ptr, !llvm.ptr
    %539 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %513, %539 : i64, !llvm.ptr
    cf.br ^bb142
  ^bb146:  // pred: ^bb97
    %c18446744073709551615_i256_227 = arith.constant 18446744073709551615 : i256
    %540 = arith.cmpi sgt, %325, %c18446744073709551615_i256_227 : i256
    %c84_i8_228 = arith.constant 84 : i8
    cf.cond_br %540, ^bb1(%c84_i8_228 : i8), ^bb147
  ^bb147:  // pred: ^bb146
    %541 = arith.trunci %325 : i256 to i64
    %c0_i64_229 = arith.constant 0 : i64
    %542 = arith.cmpi slt, %541, %c0_i64_229 : i64
    %c84_i8_230 = arith.constant 84 : i8
    cf.cond_br %542, ^bb1(%c84_i8_230 : i8), ^bb148
  ^bb148:  // pred: ^bb147
    %543 = arith.addi %541, %335 : i64
    %c0_i64_231 = arith.constant 0 : i64
    %544 = arith.cmpi slt, %543, %c0_i64_231 : i64
    %c84_i8_232 = arith.constant 84 : i8
    cf.cond_br %544, ^bb1(%c84_i8_232 : i8), ^bb149
  ^bb149:  // pred: ^bb148
    %c31_i64_233 = arith.constant 31 : i64
    %c32_i64_234 = arith.constant 32 : i64
    %545 = arith.addi %543, %c31_i64_233 : i64
    %546 = arith.divui %545, %c32_i64_234 : i64
    %c32_i64_235 = arith.constant 32 : i64
    %547 = arith.muli %546, %c32_i64_235 : i64
    %548 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %549 = llvm.load %548 : !llvm.ptr -> i64
    %c31_i64_236 = arith.constant 31 : i64
    %c32_i64_237 = arith.constant 32 : i64
    %550 = arith.addi %549, %c31_i64_236 : i64
    %551 = arith.divui %550, %c32_i64_237 : i64
    %552 = arith.muli %551, %c32_i64_235 : i64
    %553 = arith.cmpi ult, %552, %547 : i64
    cf.cond_br %553, ^bb151, ^bb150
  ^bb150:  // 2 preds: ^bb149, ^bb153
    cf.br ^bb98
  ^bb151:  // pred: ^bb149
    %c3_i64_238 = arith.constant 3 : i64
    %c512_i64_239 = arith.constant 512 : i64
    %554 = arith.muli %551, %551 : i64
    %555 = arith.divui %554, %c512_i64_239 : i64
    %556 = arith.muli %551, %c3_i64_238 : i64
    %557 = arith.addi %555, %556 : i64
    %c3_i64_240 = arith.constant 3 : i64
    %c512_i64_241 = arith.constant 512 : i64
    %558 = arith.muli %546, %546 : i64
    %559 = arith.divui %558, %c512_i64_241 : i64
    %560 = arith.muli %546, %c3_i64_240 : i64
    %561 = arith.addi %559, %560 : i64
    %562 = arith.subi %561, %557 : i64
    %563 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %564 = llvm.load %563 : !llvm.ptr -> i64
    %565 = arith.cmpi ult, %564, %562 : i64
    scf.if %565 {
    } else {
      %574 = arith.subi %564, %562 : i64
      llvm.store %574, %563 : i64, !llvm.ptr
    }
    %c80_i8_242 = arith.constant 80 : i8
    cf.cond_br %565, ^bb1(%c80_i8_242 : i8), ^bb152
  ^bb152:  // pred: ^bb151
    %566 = call @dora_fn_extend_memory(%arg0, %547) : (!llvm.ptr, i64) -> !llvm.ptr
    %567 = llvm.getelementptr %566[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %568 = llvm.load %567 : !llvm.ptr -> !llvm.ptr
    %569 = llvm.getelementptr %566[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %570 = llvm.load %569 : !llvm.ptr -> i8
    %c0_i8_243 = arith.constant 0 : i8
    %571 = arith.cmpi ne, %570, %c0_i8_243 : i8
    cf.cond_br %571, ^bb1(%570 : i8), ^bb153
  ^bb153:  // pred: ^bb152
    %572 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %568, %572 : !llvm.ptr, !llvm.ptr
    %573 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %547, %573 : i64, !llvm.ptr
    cf.br ^bb150
  }
}
