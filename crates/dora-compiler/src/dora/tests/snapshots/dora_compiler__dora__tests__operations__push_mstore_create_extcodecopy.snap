---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 77 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb38, ^bb39, ^bb41, ^bb42, ^bb44, ^bb45, ^bb46, ^bb48, ^bb49, ^bb52, ^bb53, ^bb56, ^bb57, ^bb61, ^bb62, ^bb65, ^bb66, ^bb69, ^bb70, ^bb74, ^bb75, ^bb78, ^bb79, ^bb82, ^bb83, ^bb86, ^bb87, ^bb90, ^bb91, ^bb93, ^bb94, ^bb95, ^bb97, ^bb99, ^bb100, ^bb103, ^bb104, ^bb107, ^bb108, ^bb110, ^bb111, ^bb114, ^bb115, ^bb117, ^bb118, ^bb119, ^bb120, ^bb123, ^bb124, ^bb126, ^bb127, ^bb130, ^bb131, ^bb133, ^bb134, ^bb137, ^bb138, ^bb140, ^bb143, ^bb144
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %43 = arith.cmpi ne, %c32_i64, %c0_i64_7 : i64
    cf.cond_br %43, ^bb103, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb106
    %44 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %45[%38] : (!llvm.ptr, i256) -> !llvm.ptr, i8
    %47 = llvm.intr.bswap(%42)  : (i256) -> i256
    llvm.store %47, %46 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %48 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_8 = arith.constant 1024 : i64
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %50 = arith.addi %49, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    llvm.store %50, %48 : i64, !llvm.ptr
    %51 = arith.cmpi ult, %49, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %51, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %52 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %53 = llvm.load %52 : !llvm.ptr -> i64
    %c3_i64_9 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %54 = arith.cmpi uge, %53, %c3_i64_9 : i64
    %c80_i8_10 = arith.constant 80 : i8
    cf.cond_br %54, ^bb15, ^bb1(%c80_i8_10 : i8)
  ^bb15:  // pred: ^bb14
    %55 = arith.subi %53, %c3_i64_9 : i64
    llvm.store %55, %52 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c170141183460469231731687303715884105727_i256_11 = arith.constant 170141183460469231731687303715884105727 : i256
    %56 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %57 = llvm.load %56 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_11, %57 : i256, !llvm.ptr
    %58 = llvm.getelementptr %57[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %58, %56 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %59 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_12 = arith.constant 1024 : i64
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c1_i64_13 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_13 : i64
    llvm.store %61, %59 : i64, !llvm.ptr
    %62 = arith.cmpi ult, %c1024_i64_12, %61 : i64
    %c92_i8_14 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_14 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %63 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> i64
    %c3_i64_15 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %65 = arith.cmpi uge, %64, %c3_i64_15 : i64
    %c80_i8_16 = arith.constant 80 : i8
    cf.cond_br %65, ^bb19, ^bb1(%c80_i8_16 : i8)
  ^bb19:  // pred: ^bb18
    %66 = arith.subi %64, %c3_i64_15 : i64
    llvm.store %66, %63 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c32_i256 = arith.constant 32 : i256
    %67 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %68 : i256, !llvm.ptr
    %69 = llvm.getelementptr %68[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %69, %67 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %70 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_17 = arith.constant 1024 : i64
    %71 = llvm.load %70 : !llvm.ptr -> i64
    %c1_i64_18 = arith.constant 1 : i64
    %72 = arith.addi %71, %c1_i64_18 : i64
    llvm.store %72, %70 : i64, !llvm.ptr
    %73 = arith.cmpi ult, %c1024_i64_17, %72 : i64
    %c92_i8_19 = arith.constant 92 : i8
    cf.cond_br %73, ^bb1(%c92_i8_19 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %74 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> i64
    %c3_i64_20 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %76 = arith.cmpi uge, %75, %c3_i64_20 : i64
    %c80_i8_21 = arith.constant 80 : i8
    cf.cond_br %76, ^bb23, ^bb1(%c80_i8_21 : i8)
  ^bb23:  // pred: ^bb22
    %77 = arith.subi %75, %c3_i64_20 : i64
    llvm.store %77, %74 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %78 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %79 = llvm.load %78 : !llvm.ptr -> !llvm.ptr
    %80 = llvm.getelementptr %79[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %81 = llvm.load %80 : !llvm.ptr -> i256
    llvm.store %80, %78 : !llvm.ptr, !llvm.ptr
    %82 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %83 = llvm.load %82 : !llvm.ptr -> !llvm.ptr
    %84 = llvm.getelementptr %83[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %85 = llvm.load %84 : !llvm.ptr -> i256
    llvm.store %84, %82 : !llvm.ptr, !llvm.ptr
    %c32_i64_22 = arith.constant 32 : i64
    %c0_i64_23 = arith.constant 0 : i64
    %86 = arith.cmpi ne, %c32_i64_22, %c0_i64_23 : i64
    cf.cond_br %86, ^bb110, ^bb25
  ^bb25:  // 2 preds: ^bb24, ^bb113
    %87 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> !llvm.ptr
    %89 = llvm.getelementptr %88[%81] : (!llvm.ptr, i256) -> !llvm.ptr, i8
    %90 = llvm.intr.bswap(%85)  : (i256) -> i256
    llvm.store %90, %89 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %91 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_24 = arith.constant 1024 : i64
    %92 = llvm.load %91 : !llvm.ptr -> i64
    %c-2_i64_25 = arith.constant -2 : i64
    %93 = arith.addi %92, %c-2_i64_25 : i64
    %c2_i64_26 = arith.constant 2 : i64
    llvm.store %93, %91 : i64, !llvm.ptr
    %94 = arith.cmpi ult, %92, %c2_i64_26 : i64
    %c91_i8_27 = arith.constant 91 : i8
    cf.cond_br %94, ^bb1(%c91_i8_27 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %95 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c3_i64_28 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %97 = arith.cmpi uge, %96, %c3_i64_28 : i64
    %c80_i8_29 = arith.constant 80 : i8
    cf.cond_br %97, ^bb28, ^bb1(%c80_i8_29 : i8)
  ^bb28:  // pred: ^bb27
    %98 = arith.subi %96, %c3_i64_28 : i64
    llvm.store %98, %95 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c41_i256 = arith.constant 41 : i256
    %99 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> !llvm.ptr
    llvm.store %c41_i256, %100 : i256, !llvm.ptr
    %101 = llvm.getelementptr %100[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %101, %99 : !llvm.ptr, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %102 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_30 = arith.constant 1024 : i64
    %103 = llvm.load %102 : !llvm.ptr -> i64
    %c1_i64_31 = arith.constant 1 : i64
    %104 = arith.addi %103, %c1_i64_31 : i64
    llvm.store %104, %102 : i64, !llvm.ptr
    %105 = arith.cmpi ult, %c1024_i64_30, %104 : i64
    %c92_i8_32 = arith.constant 92 : i8
    cf.cond_br %105, ^bb1(%c92_i8_32 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %106 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %c3_i64_33 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %108 = arith.cmpi uge, %107, %c3_i64_33 : i64
    %c80_i8_34 = arith.constant 80 : i8
    cf.cond_br %108, ^bb32, ^bb1(%c80_i8_34 : i8)
  ^bb32:  // pred: ^bb31
    %109 = arith.subi %107, %c3_i64_33 : i64
    llvm.store %109, %106 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %c0_i256_35 = arith.constant 0 : i256
    %110 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_35, %111 : i256, !llvm.ptr
    %112 = llvm.getelementptr %111[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %112, %110 : !llvm.ptr, !llvm.ptr
    cf.br ^bb39
  ^bb34:  // pred: ^bb36
    %113 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_36 = arith.constant 1024 : i64
    %114 = llvm.load %113 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %115 = arith.addi %114, %c1_i64_37 : i64
    llvm.store %115, %113 : i64, !llvm.ptr
    %116 = arith.cmpi ult, %c1024_i64_36, %115 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %116, ^bb1(%c92_i8_38 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %117 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %118 = llvm.load %117 : !llvm.ptr -> i64
    %c3_i64_39 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %119 = arith.cmpi uge, %118, %c3_i64_39 : i64
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %119, ^bb36, ^bb1(%c80_i8_40 : i8)
  ^bb36:  // pred: ^bb35
    %120 = arith.subi %118, %c3_i64_39 : i64
    llvm.store %120, %117 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb38
    %c0_i256_41 = arith.constant 0 : i256
    %121 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %122 = llvm.load %121 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_41, %122 : i256, !llvm.ptr
    %123 = llvm.getelementptr %122[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %123, %121 : !llvm.ptr, !llvm.ptr
    cf.br ^bb49
  ^bb38:  // pred: ^bb40
    %124 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %125 = llvm.load %124 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %126 = arith.addi %125, %c1_i64_43 : i64
    llvm.store %126, %124 : i64, !llvm.ptr
    %127 = arith.cmpi ult, %c1024_i64_42, %126 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %127, ^bb1(%c92_i8_44 : i8), ^bb37
  ^bb39:  // pred: ^bb33
    %128 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %129 = llvm.load %128 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %130 = arith.cmpi uge, %129, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %130, ^bb40, ^bb1(%c80_i8_46 : i8)
  ^bb40:  // pred: ^bb39
    %131 = arith.subi %129, %c3_i64_45 : i64
    llvm.store %131, %128 : i64, !llvm.ptr
    cf.br ^bb38
  ^bb41:  // pred: ^bb48
    %132 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> !llvm.ptr
    %134 = llvm.getelementptr %133[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %135 = llvm.load %134 : !llvm.ptr -> i256
    llvm.store %134, %132 : !llvm.ptr, !llvm.ptr
    %136 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %137[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %139 = llvm.load %138 : !llvm.ptr -> i256
    llvm.store %138, %136 : !llvm.ptr, !llvm.ptr
    %140 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> !llvm.ptr
    %142 = llvm.getelementptr %141[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %143 = llvm.load %142 : !llvm.ptr -> i256
    llvm.store %142, %140 : !llvm.ptr, !llvm.ptr
    %144 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %145 = arith.cmpi ne, %144, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %145, ^bb1(%c87_i8 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %146 = arith.trunci %143 : i256 to i64
    %c0_i64_47 = arith.constant 0 : i64
    %147 = arith.cmpi slt, %146, %c0_i64_47 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %147, ^bb1(%c84_i8 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %c0_i64_48 = arith.constant 0 : i64
    %148 = arith.cmpi ne, %146, %c0_i64_48 : i64
    cf.cond_br %148, ^bb117, ^bb44
  ^bb44:  // 2 preds: ^bb43, ^bb122
    %c32000_i64 = arith.constant 32000 : i64
    %149 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> i64
    %151 = arith.cmpi ult, %150, %c32000_i64 : i64
    scf.if %151 {
    } else {
      %561 = arith.subi %150, %c32000_i64 : i64
      llvm.store %561, %149 : i64, !llvm.ptr
    }
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %151, ^bb1(%c80_i8_49 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %c1_i256 = arith.constant 1 : i256
    %152 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %135, %152 {alignment = 1 : i64} : i256, !llvm.ptr
    %153 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %154 = llvm.load %153 : !llvm.ptr -> i64
    %155 = arith.trunci %139 : i256 to i64
    %156 = call @dora_fn_create(%arg0, %146, %155, %152, %154) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %157 = llvm.getelementptr %156[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %158 = llvm.load %157 : !llvm.ptr -> i8
    %c0_i8_50 = arith.constant 0 : i8
    %159 = arith.cmpi ne, %158, %c0_i8_50 : i8
    cf.cond_br %159, ^bb1(%158 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %160 = llvm.getelementptr %156[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %161 = llvm.load %160 : !llvm.ptr -> i64
    %162 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %163 = llvm.load %162 : !llvm.ptr -> i64
    %164 = arith.cmpi ult, %163, %161 : i64
    scf.if %164 {
    } else {
      %561 = arith.subi %163, %161 : i64
      llvm.store %561, %162 : i64, !llvm.ptr
    }
    %c80_i8_51 = arith.constant 80 : i8
    cf.cond_br %164, ^bb1(%c80_i8_51 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %165 = llvm.load %152 : !llvm.ptr -> i256
    %166 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> !llvm.ptr
    llvm.store %165, %167 : i256, !llvm.ptr
    %168 = llvm.getelementptr %167[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %168, %166 : !llvm.ptr, !llvm.ptr
    cf.br ^bb53
  ^bb48:  // pred: ^bb50
    %169 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_52 = arith.constant 1024 : i64
    %170 = llvm.load %169 : !llvm.ptr -> i64
    %c-2_i64_53 = arith.constant -2 : i64
    %171 = arith.addi %170, %c-2_i64_53 : i64
    %c3_i64_54 = arith.constant 3 : i64
    llvm.store %171, %169 : i64, !llvm.ptr
    %172 = arith.cmpi ult, %170, %c3_i64_54 : i64
    %c91_i8_55 = arith.constant 91 : i8
    cf.cond_br %172, ^bb1(%c91_i8_55 : i8), ^bb41
  ^bb49:  // pred: ^bb37
    %173 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %c0_i64_56 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %175 = arith.cmpi uge, %174, %c0_i64_56 : i64
    %c80_i8_57 = arith.constant 80 : i8
    cf.cond_br %175, ^bb50, ^bb1(%c80_i8_57 : i8)
  ^bb50:  // pred: ^bb49
    %176 = arith.subi %174, %c0_i64_56 : i64
    llvm.store %176, %173 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // pred: ^bb52
    %c0_i256_58 = arith.constant 0 : i256
    %177 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_58, %178 : i256, !llvm.ptr
    %179 = llvm.getelementptr %178[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %179, %177 : !llvm.ptr, !llvm.ptr
    cf.br ^bb57
  ^bb52:  // pred: ^bb54
    %180 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_59 = arith.constant 1024 : i64
    %181 = llvm.load %180 : !llvm.ptr -> i64
    %c1_i64_60 = arith.constant 1 : i64
    %182 = arith.addi %181, %c1_i64_60 : i64
    llvm.store %182, %180 : i64, !llvm.ptr
    %183 = arith.cmpi ult, %c1024_i64_59, %182 : i64
    %c92_i8_61 = arith.constant 92 : i8
    cf.cond_br %183, ^bb1(%c92_i8_61 : i8), ^bb51
  ^bb53:  // pred: ^bb47
    %184 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %185 = llvm.load %184 : !llvm.ptr -> i64
    %c3_i64_62 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %186 = arith.cmpi uge, %185, %c3_i64_62 : i64
    %c80_i8_63 = arith.constant 80 : i8
    cf.cond_br %186, ^bb54, ^bb1(%c80_i8_63 : i8)
  ^bb54:  // pred: ^bb53
    %187 = arith.subi %185, %c3_i64_62 : i64
    llvm.store %187, %184 : i64, !llvm.ptr
    cf.br ^bb52
  ^bb55:  // pred: ^bb56
    %c0_i256_64 = arith.constant 0 : i256
    %188 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %189 = llvm.load %188 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_64, %189 : i256, !llvm.ptr
    %190 = llvm.getelementptr %189[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %190, %188 : !llvm.ptr, !llvm.ptr
    cf.br ^bb62
  ^bb56:  // pred: ^bb58
    %191 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_65 = arith.constant 1024 : i64
    %192 = llvm.load %191 : !llvm.ptr -> i64
    %c1_i64_66 = arith.constant 1 : i64
    %193 = arith.addi %192, %c1_i64_66 : i64
    llvm.store %193, %191 : i64, !llvm.ptr
    %194 = arith.cmpi ult, %c1024_i64_65, %193 : i64
    %c92_i8_67 = arith.constant 92 : i8
    cf.cond_br %194, ^bb1(%c92_i8_67 : i8), ^bb55
  ^bb57:  // pred: ^bb51
    %195 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %196 = llvm.load %195 : !llvm.ptr -> i64
    %c3_i64_68 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %197 = arith.cmpi uge, %196, %c3_i64_68 : i64
    %c80_i8_69 = arith.constant 80 : i8
    cf.cond_br %197, ^bb58, ^bb1(%c80_i8_69 : i8)
  ^bb58:  // pred: ^bb57
    %198 = arith.subi %196, %c3_i64_68 : i64
    llvm.store %198, %195 : i64, !llvm.ptr
    cf.br ^bb56
  ^bb59:  // pred: ^bb61
    %199 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> !llvm.ptr
    %201 = llvm.getelementptr %200[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %202 = llvm.load %201 : !llvm.ptr -> i256
    llvm.store %201, %199 : !llvm.ptr, !llvm.ptr
    %203 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %204 = llvm.load %203 : !llvm.ptr -> !llvm.ptr
    %205 = llvm.getelementptr %204[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %206 = llvm.load %205 : !llvm.ptr -> i256
    llvm.store %205, %203 : !llvm.ptr, !llvm.ptr
    %c32_i64_70 = arith.constant 32 : i64
    %c0_i64_71 = arith.constant 0 : i64
    %207 = arith.cmpi ne, %c32_i64_70, %c0_i64_71 : i64
    cf.cond_br %207, ^bb126, ^bb60
  ^bb60:  // 2 preds: ^bb59, ^bb129
    %208 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %209 = llvm.load %208 : !llvm.ptr -> !llvm.ptr
    %210 = llvm.getelementptr %209[%202] : (!llvm.ptr, i256) -> !llvm.ptr, i8
    %211 = llvm.intr.bswap(%206)  : (i256) -> i256
    llvm.store %211, %210 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb66
  ^bb61:  // pred: ^bb63
    %212 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_72 = arith.constant 1024 : i64
    %213 = llvm.load %212 : !llvm.ptr -> i64
    %c-2_i64_73 = arith.constant -2 : i64
    %214 = arith.addi %213, %c-2_i64_73 : i64
    %c2_i64_74 = arith.constant 2 : i64
    llvm.store %214, %212 : i64, !llvm.ptr
    %215 = arith.cmpi ult, %213, %c2_i64_74 : i64
    %c91_i8_75 = arith.constant 91 : i8
    cf.cond_br %215, ^bb1(%c91_i8_75 : i8), ^bb59
  ^bb62:  // pred: ^bb55
    %216 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %217 = llvm.load %216 : !llvm.ptr -> i64
    %c3_i64_76 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %218 = arith.cmpi uge, %217, %c3_i64_76 : i64
    %c80_i8_77 = arith.constant 80 : i8
    cf.cond_br %218, ^bb63, ^bb1(%c80_i8_77 : i8)
  ^bb63:  // pred: ^bb62
    %219 = arith.subi %217, %c3_i64_76 : i64
    llvm.store %219, %216 : i64, !llvm.ptr
    cf.br ^bb61
  ^bb64:  // pred: ^bb65
    %c0_i256_78 = arith.constant 0 : i256
    %220 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %221 = llvm.load %220 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_78, %221 : i256, !llvm.ptr
    %222 = llvm.getelementptr %221[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %222, %220 : !llvm.ptr, !llvm.ptr
    cf.br ^bb70
  ^bb65:  // pred: ^bb67
    %223 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_79 = arith.constant 1024 : i64
    %224 = llvm.load %223 : !llvm.ptr -> i64
    %c1_i64_80 = arith.constant 1 : i64
    %225 = arith.addi %224, %c1_i64_80 : i64
    llvm.store %225, %223 : i64, !llvm.ptr
    %226 = arith.cmpi ult, %c1024_i64_79, %225 : i64
    %c92_i8_81 = arith.constant 92 : i8
    cf.cond_br %226, ^bb1(%c92_i8_81 : i8), ^bb64
  ^bb66:  // pred: ^bb60
    %227 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %228 = llvm.load %227 : !llvm.ptr -> i64
    %c3_i64_82 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %229 = arith.cmpi uge, %228, %c3_i64_82 : i64
    %c80_i8_83 = arith.constant 80 : i8
    cf.cond_br %229, ^bb67, ^bb1(%c80_i8_83 : i8)
  ^bb67:  // pred: ^bb66
    %230 = arith.subi %228, %c3_i64_82 : i64
    llvm.store %230, %227 : i64, !llvm.ptr
    cf.br ^bb65
  ^bb68:  // pred: ^bb69
    %c32_i256_84 = arith.constant 32 : i256
    %231 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %232 = llvm.load %231 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_84, %232 : i256, !llvm.ptr
    %233 = llvm.getelementptr %232[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %233, %231 : !llvm.ptr, !llvm.ptr
    cf.br ^bb75
  ^bb69:  // pred: ^bb71
    %234 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_85 = arith.constant 1024 : i64
    %235 = llvm.load %234 : !llvm.ptr -> i64
    %c1_i64_86 = arith.constant 1 : i64
    %236 = arith.addi %235, %c1_i64_86 : i64
    llvm.store %236, %234 : i64, !llvm.ptr
    %237 = arith.cmpi ult, %c1024_i64_85, %236 : i64
    %c92_i8_87 = arith.constant 92 : i8
    cf.cond_br %237, ^bb1(%c92_i8_87 : i8), ^bb68
  ^bb70:  // pred: ^bb64
    %238 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %239 = llvm.load %238 : !llvm.ptr -> i64
    %c3_i64_88 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %240 = arith.cmpi uge, %239, %c3_i64_88 : i64
    %c80_i8_89 = arith.constant 80 : i8
    cf.cond_br %240, ^bb71, ^bb1(%c80_i8_89 : i8)
  ^bb71:  // pred: ^bb70
    %241 = arith.subi %239, %c3_i64_88 : i64
    llvm.store %241, %238 : i64, !llvm.ptr
    cf.br ^bb69
  ^bb72:  // pred: ^bb74
    %242 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %243 = llvm.load %242 : !llvm.ptr -> !llvm.ptr
    %244 = llvm.getelementptr %243[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %245 = llvm.load %244 : !llvm.ptr -> i256
    llvm.store %244, %242 : !llvm.ptr, !llvm.ptr
    %246 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %247 = llvm.load %246 : !llvm.ptr -> !llvm.ptr
    %248 = llvm.getelementptr %247[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %249 = llvm.load %248 : !llvm.ptr -> i256
    llvm.store %248, %246 : !llvm.ptr, !llvm.ptr
    %c32_i64_90 = arith.constant 32 : i64
    %c0_i64_91 = arith.constant 0 : i64
    %250 = arith.cmpi ne, %c32_i64_90, %c0_i64_91 : i64
    cf.cond_br %250, ^bb133, ^bb73
  ^bb73:  // 2 preds: ^bb72, ^bb136
    %251 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %252 = llvm.load %251 : !llvm.ptr -> !llvm.ptr
    %253 = llvm.getelementptr %252[%245] : (!llvm.ptr, i256) -> !llvm.ptr, i8
    %254 = llvm.intr.bswap(%249)  : (i256) -> i256
    llvm.store %254, %253 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb79
  ^bb74:  // pred: ^bb76
    %255 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_92 = arith.constant 1024 : i64
    %256 = llvm.load %255 : !llvm.ptr -> i64
    %c-2_i64_93 = arith.constant -2 : i64
    %257 = arith.addi %256, %c-2_i64_93 : i64
    %c2_i64_94 = arith.constant 2 : i64
    llvm.store %257, %255 : i64, !llvm.ptr
    %258 = arith.cmpi ult, %256, %c2_i64_94 : i64
    %c91_i8_95 = arith.constant 91 : i8
    cf.cond_br %258, ^bb1(%c91_i8_95 : i8), ^bb72
  ^bb75:  // pred: ^bb68
    %259 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %260 = llvm.load %259 : !llvm.ptr -> i64
    %c3_i64_96 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %261 = arith.cmpi uge, %260, %c3_i64_96 : i64
    %c80_i8_97 = arith.constant 80 : i8
    cf.cond_br %261, ^bb76, ^bb1(%c80_i8_97 : i8)
  ^bb76:  // pred: ^bb75
    %262 = arith.subi %260, %c3_i64_96 : i64
    llvm.store %262, %259 : i64, !llvm.ptr
    cf.br ^bb74
  ^bb77:  // pred: ^bb78
    %c32_i256_98 = arith.constant 32 : i256
    %263 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %264 = llvm.load %263 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_98, %264 : i256, !llvm.ptr
    %265 = llvm.getelementptr %264[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %265, %263 : !llvm.ptr, !llvm.ptr
    cf.br ^bb83
  ^bb78:  // pred: ^bb80
    %266 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_99 = arith.constant 1024 : i64
    %267 = llvm.load %266 : !llvm.ptr -> i64
    %c1_i64_100 = arith.constant 1 : i64
    %268 = arith.addi %267, %c1_i64_100 : i64
    llvm.store %268, %266 : i64, !llvm.ptr
    %269 = arith.cmpi ult, %c1024_i64_99, %268 : i64
    %c92_i8_101 = arith.constant 92 : i8
    cf.cond_br %269, ^bb1(%c92_i8_101 : i8), ^bb77
  ^bb79:  // pred: ^bb73
    %270 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %271 = llvm.load %270 : !llvm.ptr -> i64
    %c3_i64_102 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %272 = arith.cmpi uge, %271, %c3_i64_102 : i64
    %c80_i8_103 = arith.constant 80 : i8
    cf.cond_br %272, ^bb80, ^bb1(%c80_i8_103 : i8)
  ^bb80:  // pred: ^bb79
    %273 = arith.subi %271, %c3_i64_102 : i64
    llvm.store %273, %270 : i64, !llvm.ptr
    cf.br ^bb78
  ^bb81:  // pred: ^bb82
    %c0_i256_104 = arith.constant 0 : i256
    %274 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %275 = llvm.load %274 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_104, %275 : i256, !llvm.ptr
    %276 = llvm.getelementptr %275[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %276, %274 : !llvm.ptr, !llvm.ptr
    cf.br ^bb87
  ^bb82:  // pred: ^bb84
    %277 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_105 = arith.constant 1024 : i64
    %278 = llvm.load %277 : !llvm.ptr -> i64
    %c1_i64_106 = arith.constant 1 : i64
    %279 = arith.addi %278, %c1_i64_106 : i64
    llvm.store %279, %277 : i64, !llvm.ptr
    %280 = arith.cmpi ult, %c1024_i64_105, %279 : i64
    %c92_i8_107 = arith.constant 92 : i8
    cf.cond_br %280, ^bb1(%c92_i8_107 : i8), ^bb81
  ^bb83:  // pred: ^bb77
    %281 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %282 = llvm.load %281 : !llvm.ptr -> i64
    %c3_i64_108 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %283 = arith.cmpi uge, %282, %c3_i64_108 : i64
    %c80_i8_109 = arith.constant 80 : i8
    cf.cond_br %283, ^bb84, ^bb1(%c80_i8_109 : i8)
  ^bb84:  // pred: ^bb83
    %284 = arith.subi %282, %c3_i64_108 : i64
    llvm.store %284, %281 : i64, !llvm.ptr
    cf.br ^bb82
  ^bb85:  // pred: ^bb86
    %c0_i256_110 = arith.constant 0 : i256
    %285 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %286 = llvm.load %285 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_110, %286 : i256, !llvm.ptr
    %287 = llvm.getelementptr %286[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %287, %285 : !llvm.ptr, !llvm.ptr
    cf.br ^bb91
  ^bb86:  // pred: ^bb88
    %288 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_111 = arith.constant 1024 : i64
    %289 = llvm.load %288 : !llvm.ptr -> i64
    %c1_i64_112 = arith.constant 1 : i64
    %290 = arith.addi %289, %c1_i64_112 : i64
    llvm.store %290, %288 : i64, !llvm.ptr
    %291 = arith.cmpi ult, %c1024_i64_111, %290 : i64
    %c92_i8_113 = arith.constant 92 : i8
    cf.cond_br %291, ^bb1(%c92_i8_113 : i8), ^bb85
  ^bb87:  // pred: ^bb81
    %292 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %293 = llvm.load %292 : !llvm.ptr -> i64
    %c3_i64_114 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %294 = arith.cmpi uge, %293, %c3_i64_114 : i64
    %c80_i8_115 = arith.constant 80 : i8
    cf.cond_br %294, ^bb88, ^bb1(%c80_i8_115 : i8)
  ^bb88:  // pred: ^bb87
    %295 = arith.subi %293, %c3_i64_114 : i64
    llvm.store %295, %292 : i64, !llvm.ptr
    cf.br ^bb86
  ^bb89:  // pred: ^bb90
    %296 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %297 = llvm.load %296 : !llvm.ptr -> !llvm.ptr
    %298 = llvm.getelementptr %297[-4] : (!llvm.ptr) -> !llvm.ptr, i256
    %299 = llvm.load %298 : !llvm.ptr -> i256
    %300 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %301 = llvm.load %300 : !llvm.ptr -> !llvm.ptr
    llvm.store %299, %301 : i256, !llvm.ptr
    %302 = llvm.getelementptr %301[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %302, %300 : !llvm.ptr, !llvm.ptr
    cf.br ^bb100
  ^bb90:  // pred: ^bb92
    %303 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_116 = arith.constant 1024 : i64
    %304 = llvm.load %303 : !llvm.ptr -> i64
    %c1_i64_117 = arith.constant 1 : i64
    %305 = arith.addi %304, %c1_i64_117 : i64
    %c4_i64 = arith.constant 4 : i64
    %306 = arith.cmpi ult, %304, %c4_i64 : i64
    %307 = arith.cmpi ult, %c1024_i64_116, %305 : i64
    llvm.store %305, %303 : i64, !llvm.ptr
    %308 = arith.xori %306, %307 : i1
    %c92_i8_118 = arith.constant 92 : i8
    cf.cond_br %308, ^bb1(%c92_i8_118 : i8), ^bb89
  ^bb91:  // pred: ^bb85
    %309 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %310 = llvm.load %309 : !llvm.ptr -> i64
    %c3_i64_119 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %311 = arith.cmpi uge, %310, %c3_i64_119 : i64
    %c80_i8_120 = arith.constant 80 : i8
    cf.cond_br %311, ^bb92, ^bb1(%c80_i8_120 : i8)
  ^bb92:  // pred: ^bb91
    %312 = arith.subi %310, %c3_i64_119 : i64
    llvm.store %312, %309 : i64, !llvm.ptr
    cf.br ^bb90
  ^bb93:  // pred: ^bb99
    %313 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %314 = llvm.load %313 : !llvm.ptr -> !llvm.ptr
    %315 = llvm.getelementptr %314[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %316 = llvm.load %315 : !llvm.ptr -> i256
    llvm.store %315, %313 : !llvm.ptr, !llvm.ptr
    %317 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %318 = llvm.load %317 : !llvm.ptr -> !llvm.ptr
    %319 = llvm.getelementptr %318[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %320 = llvm.load %319 : !llvm.ptr -> i256
    llvm.store %319, %317 : !llvm.ptr, !llvm.ptr
    %321 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %322 = llvm.load %321 : !llvm.ptr -> !llvm.ptr
    %323 = llvm.getelementptr %322[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %324 = llvm.load %323 : !llvm.ptr -> i256
    llvm.store %323, %321 : !llvm.ptr, !llvm.ptr
    %325 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %326 = llvm.load %325 : !llvm.ptr -> !llvm.ptr
    %327 = llvm.getelementptr %326[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %328 = llvm.load %327 : !llvm.ptr -> i256
    llvm.store %327, %325 : !llvm.ptr, !llvm.ptr
    %329 = arith.trunci %328 : i256 to i64
    %c0_i64_121 = arith.constant 0 : i64
    %330 = arith.cmpi slt, %329, %c0_i64_121 : i64
    %c84_i8_122 = arith.constant 84 : i8
    cf.cond_br %330, ^bb1(%c84_i8_122 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_123 = arith.constant 32 : i64
    %331 = arith.addi %329, %c31_i64 : i64
    %332 = arith.divui %331, %c32_i64_123 : i64
    %c3_i64_124 = arith.constant 3 : i64
    %333 = arith.muli %332, %c3_i64_124 : i64
    %334 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %335 = llvm.load %334 : !llvm.ptr -> i64
    %336 = arith.cmpi ult, %335, %333 : i64
    scf.if %336 {
    } else {
      %561 = arith.subi %335, %333 : i64
      llvm.store %561, %334 : i64, !llvm.ptr
    }
    %c80_i8_125 = arith.constant 80 : i8
    cf.cond_br %336, ^bb1(%c80_i8_125 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %337 = arith.trunci %320 : i256 to i64
    %c0_i64_126 = arith.constant 0 : i64
    %338 = arith.cmpi slt, %337, %c0_i64_126 : i64
    %c84_i8_127 = arith.constant 84 : i8
    cf.cond_br %338, ^bb1(%c84_i8_127 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %c0_i64_128 = arith.constant 0 : i64
    %339 = arith.cmpi ne, %329, %c0_i64_128 : i64
    cf.cond_br %339, ^bb140, ^bb97
  ^bb97:  // 2 preds: ^bb96, ^bb142
    %c1_i256_129 = arith.constant 1 : i256
    %340 = llvm.alloca %c1_i256_129 x i256 : (i256) -> !llvm.ptr
    llvm.store %316, %340 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_130 = arith.constant 1 : i256
    %341 = llvm.alloca %c1_i256_130 x i256 : (i256) -> !llvm.ptr
    llvm.store %324, %341 {alignment = 1 : i64} : i256, !llvm.ptr
    %342 = call @dora_fn_ext_code_copy(%arg0, %340, %341, %329, %337) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
    %343 = llvm.getelementptr %342[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %344 = llvm.load %343 : !llvm.ptr -> i64
    %345 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %346 = llvm.load %345 : !llvm.ptr -> i64
    %347 = arith.cmpi ult, %346, %344 : i64
    scf.if %347 {
    } else {
      %561 = arith.subi %346, %344 : i64
      llvm.store %561, %345 : i64, !llvm.ptr
    }
    %c80_i8_131 = arith.constant 80 : i8
    cf.cond_br %347, ^bb1(%c80_i8_131 : i8), ^bb98
  ^bb98:  // pred: ^bb97
    cf.br ^bb102
  ^bb99:  // pred: ^bb101
    %348 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_132 = arith.constant 1024 : i64
    %349 = llvm.load %348 : !llvm.ptr -> i64
    %c-4_i64 = arith.constant -4 : i64
    %350 = arith.addi %349, %c-4_i64 : i64
    %c4_i64_133 = arith.constant 4 : i64
    llvm.store %350, %348 : i64, !llvm.ptr
    %351 = arith.cmpi ult, %349, %c4_i64_133 : i64
    %c91_i8_134 = arith.constant 91 : i8
    cf.cond_br %351, ^bb1(%c91_i8_134 : i8), ^bb93
  ^bb100:  // pred: ^bb89
    %352 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %353 = llvm.load %352 : !llvm.ptr -> i64
    %c0_i64_135 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %354 = arith.cmpi uge, %353, %c0_i64_135 : i64
    %c80_i8_136 = arith.constant 80 : i8
    cf.cond_br %354, ^bb101, ^bb1(%c80_i8_136 : i8)
  ^bb101:  // pred: ^bb100
    %355 = arith.subi %353, %c0_i64_135 : i64
    llvm.store %355, %352 : i64, !llvm.ptr
    cf.br ^bb99
  ^bb102:  // pred: ^bb98
    %c0_i64_137 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %356 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %357 = llvm.load %356 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_137, %c0_i64_137, %357, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb103:  // pred: ^bb11
    %358 = arith.trunci %38 : i256 to i64
    %c0_i64_138 = arith.constant 0 : i64
    %359 = arith.cmpi slt, %358, %c0_i64_138 : i64
    %c84_i8_139 = arith.constant 84 : i8
    cf.cond_br %359, ^bb1(%c84_i8_139 : i8), ^bb104
  ^bb104:  // pred: ^bb103
    %360 = arith.addi %358, %c32_i64 : i64
    %c0_i64_140 = arith.constant 0 : i64
    %361 = arith.cmpi slt, %360, %c0_i64_140 : i64
    %c84_i8_141 = arith.constant 84 : i8
    cf.cond_br %361, ^bb1(%c84_i8_141 : i8), ^bb105
  ^bb105:  // pred: ^bb104
    %c31_i64_142 = arith.constant 31 : i64
    %c32_i64_143 = arith.constant 32 : i64
    %362 = arith.addi %360, %c31_i64_142 : i64
    %363 = arith.divui %362, %c32_i64_143 : i64
    %c32_i64_144 = arith.constant 32 : i64
    %364 = arith.muli %363, %c32_i64_144 : i64
    %365 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %366 = llvm.load %365 : !llvm.ptr -> i64
    %c31_i64_145 = arith.constant 31 : i64
    %c32_i64_146 = arith.constant 32 : i64
    %367 = arith.addi %366, %c31_i64_145 : i64
    %368 = arith.divui %367, %c32_i64_146 : i64
    %369 = arith.muli %368, %c32_i64_144 : i64
    %370 = arith.cmpi ult, %369, %364 : i64
    cf.cond_br %370, ^bb107, ^bb106
  ^bb106:  // 2 preds: ^bb105, ^bb109
    cf.br ^bb12
  ^bb107:  // pred: ^bb105
    %c3_i64_147 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %371 = arith.muli %368, %368 : i64
    %372 = arith.divui %371, %c512_i64 : i64
    %373 = arith.muli %368, %c3_i64_147 : i64
    %374 = arith.addi %372, %373 : i64
    %c3_i64_148 = arith.constant 3 : i64
    %c512_i64_149 = arith.constant 512 : i64
    %375 = arith.muli %363, %363 : i64
    %376 = arith.divui %375, %c512_i64_149 : i64
    %377 = arith.muli %363, %c3_i64_148 : i64
    %378 = arith.addi %376, %377 : i64
    %379 = arith.subi %378, %374 : i64
    %380 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %381 = llvm.load %380 : !llvm.ptr -> i64
    %382 = arith.cmpi ult, %381, %379 : i64
    scf.if %382 {
    } else {
      %561 = arith.subi %381, %379 : i64
      llvm.store %561, %380 : i64, !llvm.ptr
    }
    %c80_i8_150 = arith.constant 80 : i8
    cf.cond_br %382, ^bb1(%c80_i8_150 : i8), ^bb108
  ^bb108:  // pred: ^bb107
    %383 = call @dora_fn_extend_memory(%arg0, %364) : (!llvm.ptr, i64) -> !llvm.ptr
    %384 = llvm.getelementptr %383[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %385 = llvm.load %384 : !llvm.ptr -> !llvm.ptr
    %386 = llvm.getelementptr %383[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %387 = llvm.load %386 : !llvm.ptr -> i8
    %c0_i8_151 = arith.constant 0 : i8
    %388 = arith.cmpi ne, %387, %c0_i8_151 : i8
    cf.cond_br %388, ^bb1(%387 : i8), ^bb109
  ^bb109:  // pred: ^bb108
    %389 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %385, %389 : !llvm.ptr, !llvm.ptr
    %390 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %364, %390 : i64, !llvm.ptr
    cf.br ^bb106
  ^bb110:  // pred: ^bb24
    %391 = arith.trunci %81 : i256 to i64
    %c0_i64_152 = arith.constant 0 : i64
    %392 = arith.cmpi slt, %391, %c0_i64_152 : i64
    %c84_i8_153 = arith.constant 84 : i8
    cf.cond_br %392, ^bb1(%c84_i8_153 : i8), ^bb111
  ^bb111:  // pred: ^bb110
    %393 = arith.addi %391, %c32_i64_22 : i64
    %c0_i64_154 = arith.constant 0 : i64
    %394 = arith.cmpi slt, %393, %c0_i64_154 : i64
    %c84_i8_155 = arith.constant 84 : i8
    cf.cond_br %394, ^bb1(%c84_i8_155 : i8), ^bb112
  ^bb112:  // pred: ^bb111
    %c31_i64_156 = arith.constant 31 : i64
    %c32_i64_157 = arith.constant 32 : i64
    %395 = arith.addi %393, %c31_i64_156 : i64
    %396 = arith.divui %395, %c32_i64_157 : i64
    %c32_i64_158 = arith.constant 32 : i64
    %397 = arith.muli %396, %c32_i64_158 : i64
    %398 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %399 = llvm.load %398 : !llvm.ptr -> i64
    %c31_i64_159 = arith.constant 31 : i64
    %c32_i64_160 = arith.constant 32 : i64
    %400 = arith.addi %399, %c31_i64_159 : i64
    %401 = arith.divui %400, %c32_i64_160 : i64
    %402 = arith.muli %401, %c32_i64_158 : i64
    %403 = arith.cmpi ult, %402, %397 : i64
    cf.cond_br %403, ^bb114, ^bb113
  ^bb113:  // 2 preds: ^bb112, ^bb116
    cf.br ^bb25
  ^bb114:  // pred: ^bb112
    %c3_i64_161 = arith.constant 3 : i64
    %c512_i64_162 = arith.constant 512 : i64
    %404 = arith.muli %401, %401 : i64
    %405 = arith.divui %404, %c512_i64_162 : i64
    %406 = arith.muli %401, %c3_i64_161 : i64
    %407 = arith.addi %405, %406 : i64
    %c3_i64_163 = arith.constant 3 : i64
    %c512_i64_164 = arith.constant 512 : i64
    %408 = arith.muli %396, %396 : i64
    %409 = arith.divui %408, %c512_i64_164 : i64
    %410 = arith.muli %396, %c3_i64_163 : i64
    %411 = arith.addi %409, %410 : i64
    %412 = arith.subi %411, %407 : i64
    %413 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %414 = llvm.load %413 : !llvm.ptr -> i64
    %415 = arith.cmpi ult, %414, %412 : i64
    scf.if %415 {
    } else {
      %561 = arith.subi %414, %412 : i64
      llvm.store %561, %413 : i64, !llvm.ptr
    }
    %c80_i8_165 = arith.constant 80 : i8
    cf.cond_br %415, ^bb1(%c80_i8_165 : i8), ^bb115
  ^bb115:  // pred: ^bb114
    %416 = call @dora_fn_extend_memory(%arg0, %397) : (!llvm.ptr, i64) -> !llvm.ptr
    %417 = llvm.getelementptr %416[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %418 = llvm.load %417 : !llvm.ptr -> !llvm.ptr
    %419 = llvm.getelementptr %416[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %420 = llvm.load %419 : !llvm.ptr -> i8
    %c0_i8_166 = arith.constant 0 : i8
    %421 = arith.cmpi ne, %420, %c0_i8_166 : i8
    cf.cond_br %421, ^bb1(%420 : i8), ^bb116
  ^bb116:  // pred: ^bb115
    %422 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %418, %422 : !llvm.ptr, !llvm.ptr
    %423 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %397, %423 : i64, !llvm.ptr
    cf.br ^bb113
  ^bb117:  // pred: ^bb43
    %c49152_i64 = arith.constant 49152 : i64
    %424 = arith.cmpi ugt, %146, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %424, ^bb1(%c100_i8 : i8), ^bb118
  ^bb118:  // pred: ^bb117
    %c31_i64_167 = arith.constant 31 : i64
    %c32_i64_168 = arith.constant 32 : i64
    %425 = arith.addi %146, %c31_i64_167 : i64
    %426 = arith.divui %425, %c32_i64_168 : i64
    %c2_i64_169 = arith.constant 2 : i64
    %427 = arith.muli %426, %c2_i64_169 : i64
    %428 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %429 = llvm.load %428 : !llvm.ptr -> i64
    %430 = arith.cmpi ult, %429, %427 : i64
    scf.if %430 {
    } else {
      %561 = arith.subi %429, %427 : i64
      llvm.store %561, %428 : i64, !llvm.ptr
    }
    %c80_i8_170 = arith.constant 80 : i8
    cf.cond_br %430, ^bb1(%c80_i8_170 : i8), ^bb119
  ^bb119:  // pred: ^bb118
    %431 = arith.trunci %139 : i256 to i64
    %c0_i64_171 = arith.constant 0 : i64
    %432 = arith.cmpi slt, %431, %c0_i64_171 : i64
    %c84_i8_172 = arith.constant 84 : i8
    cf.cond_br %432, ^bb1(%c84_i8_172 : i8), ^bb120
  ^bb120:  // pred: ^bb119
    %433 = arith.addi %431, %146 : i64
    %c0_i64_173 = arith.constant 0 : i64
    %434 = arith.cmpi slt, %433, %c0_i64_173 : i64
    %c84_i8_174 = arith.constant 84 : i8
    cf.cond_br %434, ^bb1(%c84_i8_174 : i8), ^bb121
  ^bb121:  // pred: ^bb120
    %c31_i64_175 = arith.constant 31 : i64
    %c32_i64_176 = arith.constant 32 : i64
    %435 = arith.addi %433, %c31_i64_175 : i64
    %436 = arith.divui %435, %c32_i64_176 : i64
    %c32_i64_177 = arith.constant 32 : i64
    %437 = arith.muli %436, %c32_i64_177 : i64
    %438 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %439 = llvm.load %438 : !llvm.ptr -> i64
    %c31_i64_178 = arith.constant 31 : i64
    %c32_i64_179 = arith.constant 32 : i64
    %440 = arith.addi %439, %c31_i64_178 : i64
    %441 = arith.divui %440, %c32_i64_179 : i64
    %442 = arith.muli %441, %c32_i64_177 : i64
    %443 = arith.cmpi ult, %442, %437 : i64
    cf.cond_br %443, ^bb123, ^bb122
  ^bb122:  // 2 preds: ^bb121, ^bb125
    cf.br ^bb44
  ^bb123:  // pred: ^bb121
    %c3_i64_180 = arith.constant 3 : i64
    %c512_i64_181 = arith.constant 512 : i64
    %444 = arith.muli %441, %441 : i64
    %445 = arith.divui %444, %c512_i64_181 : i64
    %446 = arith.muli %441, %c3_i64_180 : i64
    %447 = arith.addi %445, %446 : i64
    %c3_i64_182 = arith.constant 3 : i64
    %c512_i64_183 = arith.constant 512 : i64
    %448 = arith.muli %436, %436 : i64
    %449 = arith.divui %448, %c512_i64_183 : i64
    %450 = arith.muli %436, %c3_i64_182 : i64
    %451 = arith.addi %449, %450 : i64
    %452 = arith.subi %451, %447 : i64
    %453 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %454 = llvm.load %453 : !llvm.ptr -> i64
    %455 = arith.cmpi ult, %454, %452 : i64
    scf.if %455 {
    } else {
      %561 = arith.subi %454, %452 : i64
      llvm.store %561, %453 : i64, !llvm.ptr
    }
    %c80_i8_184 = arith.constant 80 : i8
    cf.cond_br %455, ^bb1(%c80_i8_184 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %456 = call @dora_fn_extend_memory(%arg0, %437) : (!llvm.ptr, i64) -> !llvm.ptr
    %457 = llvm.getelementptr %456[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %458 = llvm.load %457 : !llvm.ptr -> !llvm.ptr
    %459 = llvm.getelementptr %456[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %460 = llvm.load %459 : !llvm.ptr -> i8
    %c0_i8_185 = arith.constant 0 : i8
    %461 = arith.cmpi ne, %460, %c0_i8_185 : i8
    cf.cond_br %461, ^bb1(%460 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %462 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %458, %462 : !llvm.ptr, !llvm.ptr
    %463 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %437, %463 : i64, !llvm.ptr
    cf.br ^bb122
  ^bb126:  // pred: ^bb59
    %464 = arith.trunci %202 : i256 to i64
    %c0_i64_186 = arith.constant 0 : i64
    %465 = arith.cmpi slt, %464, %c0_i64_186 : i64
    %c84_i8_187 = arith.constant 84 : i8
    cf.cond_br %465, ^bb1(%c84_i8_187 : i8), ^bb127
  ^bb127:  // pred: ^bb126
    %466 = arith.addi %464, %c32_i64_70 : i64
    %c0_i64_188 = arith.constant 0 : i64
    %467 = arith.cmpi slt, %466, %c0_i64_188 : i64
    %c84_i8_189 = arith.constant 84 : i8
    cf.cond_br %467, ^bb1(%c84_i8_189 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %c31_i64_190 = arith.constant 31 : i64
    %c32_i64_191 = arith.constant 32 : i64
    %468 = arith.addi %466, %c31_i64_190 : i64
    %469 = arith.divui %468, %c32_i64_191 : i64
    %c32_i64_192 = arith.constant 32 : i64
    %470 = arith.muli %469, %c32_i64_192 : i64
    %471 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %472 = llvm.load %471 : !llvm.ptr -> i64
    %c31_i64_193 = arith.constant 31 : i64
    %c32_i64_194 = arith.constant 32 : i64
    %473 = arith.addi %472, %c31_i64_193 : i64
    %474 = arith.divui %473, %c32_i64_194 : i64
    %475 = arith.muli %474, %c32_i64_192 : i64
    %476 = arith.cmpi ult, %475, %470 : i64
    cf.cond_br %476, ^bb130, ^bb129
  ^bb129:  // 2 preds: ^bb128, ^bb132
    cf.br ^bb60
  ^bb130:  // pred: ^bb128
    %c3_i64_195 = arith.constant 3 : i64
    %c512_i64_196 = arith.constant 512 : i64
    %477 = arith.muli %474, %474 : i64
    %478 = arith.divui %477, %c512_i64_196 : i64
    %479 = arith.muli %474, %c3_i64_195 : i64
    %480 = arith.addi %478, %479 : i64
    %c3_i64_197 = arith.constant 3 : i64
    %c512_i64_198 = arith.constant 512 : i64
    %481 = arith.muli %469, %469 : i64
    %482 = arith.divui %481, %c512_i64_198 : i64
    %483 = arith.muli %469, %c3_i64_197 : i64
    %484 = arith.addi %482, %483 : i64
    %485 = arith.subi %484, %480 : i64
    %486 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %487 = llvm.load %486 : !llvm.ptr -> i64
    %488 = arith.cmpi ult, %487, %485 : i64
    scf.if %488 {
    } else {
      %561 = arith.subi %487, %485 : i64
      llvm.store %561, %486 : i64, !llvm.ptr
    }
    %c80_i8_199 = arith.constant 80 : i8
    cf.cond_br %488, ^bb1(%c80_i8_199 : i8), ^bb131
  ^bb131:  // pred: ^bb130
    %489 = call @dora_fn_extend_memory(%arg0, %470) : (!llvm.ptr, i64) -> !llvm.ptr
    %490 = llvm.getelementptr %489[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %491 = llvm.load %490 : !llvm.ptr -> !llvm.ptr
    %492 = llvm.getelementptr %489[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %493 = llvm.load %492 : !llvm.ptr -> i8
    %c0_i8_200 = arith.constant 0 : i8
    %494 = arith.cmpi ne, %493, %c0_i8_200 : i8
    cf.cond_br %494, ^bb1(%493 : i8), ^bb132
  ^bb132:  // pred: ^bb131
    %495 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %491, %495 : !llvm.ptr, !llvm.ptr
    %496 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %470, %496 : i64, !llvm.ptr
    cf.br ^bb129
  ^bb133:  // pred: ^bb72
    %497 = arith.trunci %245 : i256 to i64
    %c0_i64_201 = arith.constant 0 : i64
    %498 = arith.cmpi slt, %497, %c0_i64_201 : i64
    %c84_i8_202 = arith.constant 84 : i8
    cf.cond_br %498, ^bb1(%c84_i8_202 : i8), ^bb134
  ^bb134:  // pred: ^bb133
    %499 = arith.addi %497, %c32_i64_90 : i64
    %c0_i64_203 = arith.constant 0 : i64
    %500 = arith.cmpi slt, %499, %c0_i64_203 : i64
    %c84_i8_204 = arith.constant 84 : i8
    cf.cond_br %500, ^bb1(%c84_i8_204 : i8), ^bb135
  ^bb135:  // pred: ^bb134
    %c31_i64_205 = arith.constant 31 : i64
    %c32_i64_206 = arith.constant 32 : i64
    %501 = arith.addi %499, %c31_i64_205 : i64
    %502 = arith.divui %501, %c32_i64_206 : i64
    %c32_i64_207 = arith.constant 32 : i64
    %503 = arith.muli %502, %c32_i64_207 : i64
    %504 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %505 = llvm.load %504 : !llvm.ptr -> i64
    %c31_i64_208 = arith.constant 31 : i64
    %c32_i64_209 = arith.constant 32 : i64
    %506 = arith.addi %505, %c31_i64_208 : i64
    %507 = arith.divui %506, %c32_i64_209 : i64
    %508 = arith.muli %507, %c32_i64_207 : i64
    %509 = arith.cmpi ult, %508, %503 : i64
    cf.cond_br %509, ^bb137, ^bb136
  ^bb136:  // 2 preds: ^bb135, ^bb139
    cf.br ^bb73
  ^bb137:  // pred: ^bb135
    %c3_i64_210 = arith.constant 3 : i64
    %c512_i64_211 = arith.constant 512 : i64
    %510 = arith.muli %507, %507 : i64
    %511 = arith.divui %510, %c512_i64_211 : i64
    %512 = arith.muli %507, %c3_i64_210 : i64
    %513 = arith.addi %511, %512 : i64
    %c3_i64_212 = arith.constant 3 : i64
    %c512_i64_213 = arith.constant 512 : i64
    %514 = arith.muli %502, %502 : i64
    %515 = arith.divui %514, %c512_i64_213 : i64
    %516 = arith.muli %502, %c3_i64_212 : i64
    %517 = arith.addi %515, %516 : i64
    %518 = arith.subi %517, %513 : i64
    %519 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %520 = llvm.load %519 : !llvm.ptr -> i64
    %521 = arith.cmpi ult, %520, %518 : i64
    scf.if %521 {
    } else {
      %561 = arith.subi %520, %518 : i64
      llvm.store %561, %519 : i64, !llvm.ptr
    }
    %c80_i8_214 = arith.constant 80 : i8
    cf.cond_br %521, ^bb1(%c80_i8_214 : i8), ^bb138
  ^bb138:  // pred: ^bb137
    %522 = call @dora_fn_extend_memory(%arg0, %503) : (!llvm.ptr, i64) -> !llvm.ptr
    %523 = llvm.getelementptr %522[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %524 = llvm.load %523 : !llvm.ptr -> !llvm.ptr
    %525 = llvm.getelementptr %522[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %526 = llvm.load %525 : !llvm.ptr -> i8
    %c0_i8_215 = arith.constant 0 : i8
    %527 = arith.cmpi ne, %526, %c0_i8_215 : i8
    cf.cond_br %527, ^bb1(%526 : i8), ^bb139
  ^bb139:  // pred: ^bb138
    %528 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %524, %528 : !llvm.ptr, !llvm.ptr
    %529 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %503, %529 : i64, !llvm.ptr
    cf.br ^bb136
  ^bb140:  // pred: ^bb96
    %530 = arith.addi %337, %329 : i64
    %c0_i64_216 = arith.constant 0 : i64
    %531 = arith.cmpi slt, %530, %c0_i64_216 : i64
    %c84_i8_217 = arith.constant 84 : i8
    cf.cond_br %531, ^bb1(%c84_i8_217 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    %c31_i64_218 = arith.constant 31 : i64
    %c32_i64_219 = arith.constant 32 : i64
    %532 = arith.addi %530, %c31_i64_218 : i64
    %533 = arith.divui %532, %c32_i64_219 : i64
    %c32_i64_220 = arith.constant 32 : i64
    %534 = arith.muli %533, %c32_i64_220 : i64
    %535 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %536 = llvm.load %535 : !llvm.ptr -> i64
    %c31_i64_221 = arith.constant 31 : i64
    %c32_i64_222 = arith.constant 32 : i64
    %537 = arith.addi %536, %c31_i64_221 : i64
    %538 = arith.divui %537, %c32_i64_222 : i64
    %539 = arith.muli %538, %c32_i64_220 : i64
    %540 = arith.cmpi ult, %539, %534 : i64
    cf.cond_br %540, ^bb143, ^bb142
  ^bb142:  // 2 preds: ^bb141, ^bb145
    cf.br ^bb97
  ^bb143:  // pred: ^bb141
    %c3_i64_223 = arith.constant 3 : i64
    %c512_i64_224 = arith.constant 512 : i64
    %541 = arith.muli %538, %538 : i64
    %542 = arith.divui %541, %c512_i64_224 : i64
    %543 = arith.muli %538, %c3_i64_223 : i64
    %544 = arith.addi %542, %543 : i64
    %c3_i64_225 = arith.constant 3 : i64
    %c512_i64_226 = arith.constant 512 : i64
    %545 = arith.muli %533, %533 : i64
    %546 = arith.divui %545, %c512_i64_226 : i64
    %547 = arith.muli %533, %c3_i64_225 : i64
    %548 = arith.addi %546, %547 : i64
    %549 = arith.subi %548, %544 : i64
    %550 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %551 = llvm.load %550 : !llvm.ptr -> i64
    %552 = arith.cmpi ult, %551, %549 : i64
    scf.if %552 {
    } else {
      %561 = arith.subi %551, %549 : i64
      llvm.store %561, %550 : i64, !llvm.ptr
    }
    %c80_i8_227 = arith.constant 80 : i8
    cf.cond_br %552, ^bb1(%c80_i8_227 : i8), ^bb144
  ^bb144:  // pred: ^bb143
    %553 = call @dora_fn_extend_memory(%arg0, %534) : (!llvm.ptr, i64) -> !llvm.ptr
    %554 = llvm.getelementptr %553[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %555 = llvm.load %554 : !llvm.ptr -> !llvm.ptr
    %556 = llvm.getelementptr %553[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %557 = llvm.load %556 : !llvm.ptr -> i8
    %c0_i8_228 = arith.constant 0 : i8
    %558 = arith.cmpi ne, %557, %c0_i8_228 : i8
    cf.cond_br %558, ^bb1(%557 : i8), ^bb145
  ^bb145:  // pred: ^bb144
    %559 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %555, %559 : !llvm.ptr, !llvm.ptr
    %560 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %534, %560 : i64, !llvm.ptr
    cf.br ^bb142
  }
}
