---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 45 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36, ^bb37, ^bb38, ^bb39, ^bb40, ^bb41, ^bb42, ^bb43, ^bb44, ^bb45
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c0_i64_4 = arith.constant 0 : i64
    %37 = arith.cmpi slt, %36, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %37, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c32_i64 = arith.constant 32 : i64
    %38 = arith.addi %36, %c32_i64 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %39 = arith.cmpi slt, %38, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %39, ^bb1(%c84_i8_6 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_7 = arith.constant 32 : i64
    %40 = arith.addi %38, %c31_i64 : i64
    %41 = arith.divui %40, %c32_i64_7 : i64
    %42 = arith.muli %41, %c32_i64_7 : i64
    %43 = call @dora_fn_extend_memory(%arg0, %42) : (!llvm.ptr, i64) -> !llvm.ptr
    %44 = llvm.getelementptr %43[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %43[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %48 = arith.cmpi ne, %47, %c0_i8 : i8
    cf.cond_br %48, ^bb1(%47 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %49 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %45, %49 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %42, %50 : i64, !llvm.ptr
    %51 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %54, %53 {alignment = 1 : i64} : i256, !llvm.ptr
    %55 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_8 : i64
    llvm.store %56, %9 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64, %56 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c170141183460469231731687303715884105727_i256_10 = arith.constant 170141183460469231731687303715884105727 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_10, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    %61 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_11 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_11 : i64
    llvm.store %62, %9 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64, %62 : i64
    %c92_i8_12 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_12 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c32_i256 = arith.constant 32 : i256
    %64 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %65 : i256, !llvm.ptr
    %66 = llvm.getelementptr %65[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %66, %64 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_13 = arith.constant -2 : i64
    %68 = arith.addi %67, %c-2_i64_13 : i64
    llvm.store %68, %9 : i64, !llvm.ptr
    %c2_i64_14 = arith.constant 2 : i64
    %69 = arith.cmpi ult, %67, %c2_i64_14 : i64
    %c91_i8_15 = arith.constant 91 : i8
    cf.cond_br %69, ^bb1(%c91_i8_15 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    %72 = llvm.getelementptr %71[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %73 = llvm.load %72 : !llvm.ptr -> i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    %74 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> !llvm.ptr
    %76 = llvm.getelementptr %75[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %77 = llvm.load %76 : !llvm.ptr -> i256
    llvm.store %76, %74 : !llvm.ptr, !llvm.ptr
    %78 = arith.trunci %73 : i256 to i64
    %c0_i64_16 = arith.constant 0 : i64
    %79 = arith.cmpi slt, %78, %c0_i64_16 : i64
    %c84_i8_17 = arith.constant 84 : i8
    cf.cond_br %79, ^bb1(%c84_i8_17 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64_18 = arith.constant 32 : i64
    %80 = arith.addi %78, %c32_i64_18 : i64
    %c0_i64_19 = arith.constant 0 : i64
    %81 = arith.cmpi slt, %80, %c0_i64_19 : i64
    %c84_i8_20 = arith.constant 84 : i8
    cf.cond_br %81, ^bb1(%c84_i8_20 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64_21 = arith.constant 31 : i64
    %c32_i64_22 = arith.constant 32 : i64
    %82 = arith.addi %80, %c31_i64_21 : i64
    %83 = arith.divui %82, %c32_i64_22 : i64
    %84 = arith.muli %83, %c32_i64_22 : i64
    %85 = call @dora_fn_extend_memory(%arg0, %84) : (!llvm.ptr, i64) -> !llvm.ptr
    %86 = llvm.getelementptr %85[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %87 = llvm.load %86 : !llvm.ptr -> !llvm.ptr
    %88 = llvm.getelementptr %85[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %89 = llvm.load %88 : !llvm.ptr -> i8
    %c0_i8_23 = arith.constant 0 : i8
    %90 = arith.cmpi ne, %89, %c0_i8_23 : i8
    cf.cond_br %90, ^bb1(%89 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %91 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %87, %91 : !llvm.ptr, !llvm.ptr
    %92 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %84, %92 : i64, !llvm.ptr
    %93 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %94 = llvm.load %93 : !llvm.ptr -> !llvm.ptr
    %95 = llvm.getelementptr %94[%78] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %96 = llvm.intr.bswap(%77)  : (i256) -> i256
    llvm.store %96, %95 {alignment = 1 : i64} : i256, !llvm.ptr
    %97 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %98 = arith.addi %97, %c1_i64_24 : i64
    llvm.store %98, %9 : i64, !llvm.ptr
    %99 = arith.cmpi ult, %c1024_i64, %98 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %99, ^bb1(%c92_i8_25 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %c41_i256 = arith.constant 41 : i256
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    llvm.store %c41_i256, %101 : i256, !llvm.ptr
    %102 = llvm.getelementptr %101[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    %103 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_26 = arith.constant 1 : i64
    %104 = arith.addi %103, %c1_i64_26 : i64
    llvm.store %104, %9 : i64, !llvm.ptr
    %105 = arith.cmpi ult, %c1024_i64, %104 : i64
    %c92_i8_27 = arith.constant 92 : i8
    cf.cond_br %105, ^bb1(%c92_i8_27 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c0_i256_28 = arith.constant 0 : i256
    %106 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_28, %107 : i256, !llvm.ptr
    %108 = llvm.getelementptr %107[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %108, %106 : !llvm.ptr, !llvm.ptr
    %109 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_29 = arith.constant 1 : i64
    %110 = arith.addi %109, %c1_i64_29 : i64
    llvm.store %110, %9 : i64, !llvm.ptr
    %111 = arith.cmpi ult, %c1024_i64, %110 : i64
    %c92_i8_30 = arith.constant 92 : i8
    cf.cond_br %111, ^bb1(%c92_i8_30 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %c0_i256_31 = arith.constant 0 : i256
    %112 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_31, %113 : i256, !llvm.ptr
    %114 = llvm.getelementptr %113[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %114, %112 : !llvm.ptr, !llvm.ptr
    %115 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_32 = arith.constant -2 : i64
    %116 = arith.addi %115, %c-2_i64_32 : i64
    llvm.store %116, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %117 = arith.cmpi ult, %115, %c3_i64 : i64
    %c91_i8_33 = arith.constant 91 : i8
    cf.cond_br %117, ^bb1(%c91_i8_33 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %118 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> !llvm.ptr
    %120 = llvm.getelementptr %119[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %121 = llvm.load %120 : !llvm.ptr -> i256
    llvm.store %120, %118 : !llvm.ptr, !llvm.ptr
    %122 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> !llvm.ptr
    %124 = llvm.getelementptr %123[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %125 = llvm.load %124 : !llvm.ptr -> i256
    llvm.store %124, %122 : !llvm.ptr, !llvm.ptr
    %126 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> !llvm.ptr
    %128 = llvm.getelementptr %127[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %129 = llvm.load %128 : !llvm.ptr -> i256
    llvm.store %128, %126 : !llvm.ptr, !llvm.ptr
    %130 = arith.trunci %125 : i256 to i64
    %c0_i64_34 = arith.constant 0 : i64
    %131 = arith.cmpi slt, %130, %c0_i64_34 : i64
    %c84_i8_35 = arith.constant 84 : i8
    cf.cond_br %131, ^bb1(%c84_i8_35 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %132 = arith.trunci %129 : i256 to i64
    %c0_i64_36 = arith.constant 0 : i64
    %133 = arith.cmpi slt, %132, %c0_i64_36 : i64
    %c84_i8_37 = arith.constant 84 : i8
    cf.cond_br %133, ^bb1(%c84_i8_37 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %134 = arith.addi %130, %132 : i64
    %c0_i64_38 = arith.constant 0 : i64
    %135 = arith.cmpi slt, %134, %c0_i64_38 : i64
    %c84_i8_39 = arith.constant 84 : i8
    cf.cond_br %135, ^bb1(%c84_i8_39 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %c31_i64_40 = arith.constant 31 : i64
    %c32_i64_41 = arith.constant 32 : i64
    %136 = arith.addi %134, %c31_i64_40 : i64
    %137 = arith.divui %136, %c32_i64_41 : i64
    %138 = arith.muli %137, %c32_i64_41 : i64
    %139 = call @dora_fn_extend_memory(%arg0, %138) : (!llvm.ptr, i64) -> !llvm.ptr
    %140 = llvm.getelementptr %139[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %141 = llvm.load %140 : !llvm.ptr -> !llvm.ptr
    %142 = llvm.getelementptr %139[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %143 = llvm.load %142 : !llvm.ptr -> i8
    %c0_i8_42 = arith.constant 0 : i8
    %144 = arith.cmpi ne, %143, %c0_i8_42 : i8
    cf.cond_br %144, ^bb1(%143 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %145 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %141, %145 : !llvm.ptr, !llvm.ptr
    %146 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %138, %146 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %147 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %121, %147 {alignment = 1 : i64} : i256, !llvm.ptr
    %148 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %150 = llvm.alloca %c1_i64_43 x i64 : (i64) -> !llvm.ptr
    llvm.store %149, %150 {alignment = 1 : i64} : i64, !llvm.ptr
    %151 = call @dora_fn_create(%arg0, %132, %130, %147, %150) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %152 = llvm.getelementptr %151[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %153 = llvm.load %152 : !llvm.ptr -> i8
    %154 = llvm.getelementptr %151[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %155 = llvm.load %154 : !llvm.ptr -> i8
    %c0_i8_44 = arith.constant 0 : i8
    %156 = arith.cmpi ne, %155, %c0_i8_44 : i8
    cf.cond_br %156, ^bb1(%155 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i8_45 = arith.constant 0 : i8
    %157 = arith.cmpi ne, %c0_i8_45, %153 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %157, ^bb1(%c94_i8 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %158 = llvm.load %147 : !llvm.ptr -> i256
    %159 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> !llvm.ptr
    llvm.store %158, %160 : i256, !llvm.ptr
    %161 = llvm.getelementptr %160[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %161, %159 : !llvm.ptr, !llvm.ptr
    %162 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %163 = arith.addi %162, %c1_i64_46 : i64
    llvm.store %163, %9 : i64, !llvm.ptr
    %164 = arith.cmpi ult, %c1024_i64, %163 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %164, ^bb1(%c92_i8_47 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %c0_i256_48 = arith.constant 0 : i256
    %165 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %166 = llvm.load %165 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_48, %166 : i256, !llvm.ptr
    %167 = llvm.getelementptr %166[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %167, %165 : !llvm.ptr, !llvm.ptr
    %168 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_49 = arith.constant 1 : i64
    %169 = arith.addi %168, %c1_i64_49 : i64
    llvm.store %169, %9 : i64, !llvm.ptr
    %170 = arith.cmpi ult, %c1024_i64, %169 : i64
    %c92_i8_50 = arith.constant 92 : i8
    cf.cond_br %170, ^bb1(%c92_i8_50 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %c0_i256_51 = arith.constant 0 : i256
    %171 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %172 = llvm.load %171 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_51, %172 : i256, !llvm.ptr
    %173 = llvm.getelementptr %172[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %173, %171 : !llvm.ptr, !llvm.ptr
    %174 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_52 = arith.constant -2 : i64
    %175 = arith.addi %174, %c-2_i64_52 : i64
    llvm.store %175, %9 : i64, !llvm.ptr
    %c2_i64_53 = arith.constant 2 : i64
    %176 = arith.cmpi ult, %174, %c2_i64_53 : i64
    %c91_i8_54 = arith.constant 91 : i8
    cf.cond_br %176, ^bb1(%c91_i8_54 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %177 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> !llvm.ptr
    %179 = llvm.getelementptr %178[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %180 = llvm.load %179 : !llvm.ptr -> i256
    llvm.store %179, %177 : !llvm.ptr, !llvm.ptr
    %181 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %182 = llvm.load %181 : !llvm.ptr -> !llvm.ptr
    %183 = llvm.getelementptr %182[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %184 = llvm.load %183 : !llvm.ptr -> i256
    llvm.store %183, %181 : !llvm.ptr, !llvm.ptr
    %185 = arith.trunci %180 : i256 to i64
    %c0_i64_55 = arith.constant 0 : i64
    %186 = arith.cmpi slt, %185, %c0_i64_55 : i64
    %c84_i8_56 = arith.constant 84 : i8
    cf.cond_br %186, ^bb1(%c84_i8_56 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c32_i64_57 = arith.constant 32 : i64
    %187 = arith.addi %185, %c32_i64_57 : i64
    %c0_i64_58 = arith.constant 0 : i64
    %188 = arith.cmpi slt, %187, %c0_i64_58 : i64
    %c84_i8_59 = arith.constant 84 : i8
    cf.cond_br %188, ^bb1(%c84_i8_59 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c31_i64_60 = arith.constant 31 : i64
    %c32_i64_61 = arith.constant 32 : i64
    %189 = arith.addi %187, %c31_i64_60 : i64
    %190 = arith.divui %189, %c32_i64_61 : i64
    %191 = arith.muli %190, %c32_i64_61 : i64
    %192 = call @dora_fn_extend_memory(%arg0, %191) : (!llvm.ptr, i64) -> !llvm.ptr
    %193 = llvm.getelementptr %192[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %194 = llvm.load %193 : !llvm.ptr -> !llvm.ptr
    %195 = llvm.getelementptr %192[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %196 = llvm.load %195 : !llvm.ptr -> i8
    %c0_i8_62 = arith.constant 0 : i8
    %197 = arith.cmpi ne, %196, %c0_i8_62 : i8
    cf.cond_br %197, ^bb1(%196 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %198 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %194, %198 : !llvm.ptr, !llvm.ptr
    %199 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %191, %199 : i64, !llvm.ptr
    %200 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %201 = llvm.load %200 : !llvm.ptr -> !llvm.ptr
    %202 = llvm.getelementptr %201[%185] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %203 = llvm.intr.bswap(%184)  : (i256) -> i256
    llvm.store %203, %202 {alignment = 1 : i64} : i256, !llvm.ptr
    %204 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_63 = arith.constant 1 : i64
    %205 = arith.addi %204, %c1_i64_63 : i64
    llvm.store %205, %9 : i64, !llvm.ptr
    %206 = arith.cmpi ult, %c1024_i64, %205 : i64
    %c92_i8_64 = arith.constant 92 : i8
    cf.cond_br %206, ^bb1(%c92_i8_64 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i256_65 = arith.constant 0 : i256
    %207 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %208 = llvm.load %207 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_65, %208 : i256, !llvm.ptr
    %209 = llvm.getelementptr %208[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %209, %207 : !llvm.ptr, !llvm.ptr
    %210 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_66 = arith.constant 1 : i64
    %211 = arith.addi %210, %c1_i64_66 : i64
    llvm.store %211, %9 : i64, !llvm.ptr
    %212 = arith.cmpi ult, %c1024_i64, %211 : i64
    %c92_i8_67 = arith.constant 92 : i8
    cf.cond_br %212, ^bb1(%c92_i8_67 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c32_i256_68 = arith.constant 32 : i256
    %213 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %214 = llvm.load %213 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_68, %214 : i256, !llvm.ptr
    %215 = llvm.getelementptr %214[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %215, %213 : !llvm.ptr, !llvm.ptr
    %216 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_69 = arith.constant -2 : i64
    %217 = arith.addi %216, %c-2_i64_69 : i64
    llvm.store %217, %9 : i64, !llvm.ptr
    %c2_i64_70 = arith.constant 2 : i64
    %218 = arith.cmpi ult, %216, %c2_i64_70 : i64
    %c91_i8_71 = arith.constant 91 : i8
    cf.cond_br %218, ^bb1(%c91_i8_71 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %219 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %220 = llvm.load %219 : !llvm.ptr -> !llvm.ptr
    %221 = llvm.getelementptr %220[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %222 = llvm.load %221 : !llvm.ptr -> i256
    llvm.store %221, %219 : !llvm.ptr, !llvm.ptr
    %223 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %224 = llvm.load %223 : !llvm.ptr -> !llvm.ptr
    %225 = llvm.getelementptr %224[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %226 = llvm.load %225 : !llvm.ptr -> i256
    llvm.store %225, %223 : !llvm.ptr, !llvm.ptr
    %227 = arith.trunci %222 : i256 to i64
    %c0_i64_72 = arith.constant 0 : i64
    %228 = arith.cmpi slt, %227, %c0_i64_72 : i64
    %c84_i8_73 = arith.constant 84 : i8
    cf.cond_br %228, ^bb1(%c84_i8_73 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c32_i64_74 = arith.constant 32 : i64
    %229 = arith.addi %227, %c32_i64_74 : i64
    %c0_i64_75 = arith.constant 0 : i64
    %230 = arith.cmpi slt, %229, %c0_i64_75 : i64
    %c84_i8_76 = arith.constant 84 : i8
    cf.cond_br %230, ^bb1(%c84_i8_76 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %c31_i64_77 = arith.constant 31 : i64
    %c32_i64_78 = arith.constant 32 : i64
    %231 = arith.addi %229, %c31_i64_77 : i64
    %232 = arith.divui %231, %c32_i64_78 : i64
    %233 = arith.muli %232, %c32_i64_78 : i64
    %234 = call @dora_fn_extend_memory(%arg0, %233) : (!llvm.ptr, i64) -> !llvm.ptr
    %235 = llvm.getelementptr %234[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %236 = llvm.load %235 : !llvm.ptr -> !llvm.ptr
    %237 = llvm.getelementptr %234[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %238 = llvm.load %237 : !llvm.ptr -> i8
    %c0_i8_79 = arith.constant 0 : i8
    %239 = arith.cmpi ne, %238, %c0_i8_79 : i8
    cf.cond_br %239, ^bb1(%238 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %240 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %236, %240 : !llvm.ptr, !llvm.ptr
    %241 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %233, %241 : i64, !llvm.ptr
    %242 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %243 = llvm.load %242 : !llvm.ptr -> !llvm.ptr
    %244 = llvm.getelementptr %243[%227] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %245 = llvm.intr.bswap(%226)  : (i256) -> i256
    llvm.store %245, %244 {alignment = 1 : i64} : i256, !llvm.ptr
    %246 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_80 = arith.constant 1 : i64
    %247 = arith.addi %246, %c1_i64_80 : i64
    llvm.store %247, %9 : i64, !llvm.ptr
    %248 = arith.cmpi ult, %c1024_i64, %247 : i64
    %c92_i8_81 = arith.constant 92 : i8
    cf.cond_br %248, ^bb1(%c92_i8_81 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %c32_i256_82 = arith.constant 32 : i256
    %249 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_82, %250 : i256, !llvm.ptr
    %251 = llvm.getelementptr %250[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %251, %249 : !llvm.ptr, !llvm.ptr
    %252 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_83 = arith.constant 1 : i64
    %253 = arith.addi %252, %c1_i64_83 : i64
    llvm.store %253, %9 : i64, !llvm.ptr
    %254 = arith.cmpi ult, %c1024_i64, %253 : i64
    %c92_i8_84 = arith.constant 92 : i8
    cf.cond_br %254, ^bb1(%c92_i8_84 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %c0_i256_85 = arith.constant 0 : i256
    %255 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %256 = llvm.load %255 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_85, %256 : i256, !llvm.ptr
    %257 = llvm.getelementptr %256[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %257, %255 : !llvm.ptr, !llvm.ptr
    %258 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_86 = arith.constant 1 : i64
    %259 = arith.addi %258, %c1_i64_86 : i64
    llvm.store %259, %9 : i64, !llvm.ptr
    %260 = arith.cmpi ult, %c1024_i64, %259 : i64
    %c92_i8_87 = arith.constant 92 : i8
    cf.cond_br %260, ^bb1(%c92_i8_87 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %c0_i256_88 = arith.constant 0 : i256
    %261 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %262 = llvm.load %261 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_88, %262 : i256, !llvm.ptr
    %263 = llvm.getelementptr %262[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %263, %261 : !llvm.ptr, !llvm.ptr
    %264 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_89 = arith.constant 1 : i64
    %265 = arith.addi %264, %c1_i64_89 : i64
    llvm.store %265, %9 : i64, !llvm.ptr
    %266 = arith.cmpi ult, %c1024_i64, %265 : i64
    %c92_i8_90 = arith.constant 92 : i8
    cf.cond_br %266, ^bb1(%c92_i8_90 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %267 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %268 = llvm.load %267 : !llvm.ptr -> !llvm.ptr
    %269 = llvm.getelementptr %268[-4] : (!llvm.ptr) -> !llvm.ptr, i256
    %270 = llvm.load %269 : !llvm.ptr -> i256
    %271 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %272 = llvm.load %271 : !llvm.ptr -> !llvm.ptr
    llvm.store %270, %272 : i256, !llvm.ptr
    %273 = llvm.getelementptr %272[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %273, %271 : !llvm.ptr, !llvm.ptr
    %274 = llvm.load %9 : !llvm.ptr -> i64
    %c-4_i64 = arith.constant -4 : i64
    %275 = arith.addi %274, %c-4_i64 : i64
    llvm.store %275, %9 : i64, !llvm.ptr
    %c4_i64 = arith.constant 4 : i64
    %276 = arith.cmpi ult, %274, %c4_i64 : i64
    %c91_i8_91 = arith.constant 91 : i8
    cf.cond_br %276, ^bb1(%c91_i8_91 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %277 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %278 = llvm.load %277 : !llvm.ptr -> !llvm.ptr
    %279 = llvm.getelementptr %278[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %280 = llvm.load %279 : !llvm.ptr -> i256
    llvm.store %279, %277 : !llvm.ptr, !llvm.ptr
    %281 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %282 = llvm.load %281 : !llvm.ptr -> !llvm.ptr
    %283 = llvm.getelementptr %282[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %284 = llvm.load %283 : !llvm.ptr -> i256
    llvm.store %283, %281 : !llvm.ptr, !llvm.ptr
    %285 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %286 = llvm.load %285 : !llvm.ptr -> !llvm.ptr
    %287 = llvm.getelementptr %286[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %288 = llvm.load %287 : !llvm.ptr -> i256
    llvm.store %287, %285 : !llvm.ptr, !llvm.ptr
    %289 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %290 = llvm.load %289 : !llvm.ptr -> !llvm.ptr
    %291 = llvm.getelementptr %290[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %292 = llvm.load %291 : !llvm.ptr -> i256
    llvm.store %291, %289 : !llvm.ptr, !llvm.ptr
    %293 = arith.trunci %288 : i256 to i64
    %c0_i64_92 = arith.constant 0 : i64
    %294 = arith.cmpi slt, %293, %c0_i64_92 : i64
    %c84_i8_93 = arith.constant 84 : i8
    cf.cond_br %294, ^bb1(%c84_i8_93 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %295 = arith.trunci %292 : i256 to i64
    %c0_i64_94 = arith.constant 0 : i64
    %296 = arith.cmpi slt, %295, %c0_i64_94 : i64
    %c84_i8_95 = arith.constant 84 : i8
    cf.cond_br %296, ^bb1(%c84_i8_95 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %297 = arith.trunci %284 : i256 to i64
    %c0_i64_96 = arith.constant 0 : i64
    %298 = arith.cmpi slt, %297, %c0_i64_96 : i64
    %c84_i8_97 = arith.constant 84 : i8
    cf.cond_br %298, ^bb1(%c84_i8_97 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c1_i256_98 = arith.constant 1 : i256
    %299 = llvm.alloca %c1_i256_98 x i256 : (i256) -> !llvm.ptr
    llvm.store %280, %299 {alignment = 1 : i64} : i256, !llvm.ptr
    %300 = arith.addi %297, %295 : i64
    %c0_i64_99 = arith.constant 0 : i64
    %301 = arith.cmpi slt, %300, %c0_i64_99 : i64
    %c84_i8_100 = arith.constant 84 : i8
    cf.cond_br %301, ^bb1(%c84_i8_100 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %c31_i64_101 = arith.constant 31 : i64
    %c32_i64_102 = arith.constant 32 : i64
    %302 = arith.addi %300, %c31_i64_101 : i64
    %303 = arith.divui %302, %c32_i64_102 : i64
    %304 = arith.muli %303, %c32_i64_102 : i64
    %305 = call @dora_fn_extend_memory(%arg0, %304) : (!llvm.ptr, i64) -> !llvm.ptr
    %306 = llvm.getelementptr %305[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %307 = llvm.load %306 : !llvm.ptr -> !llvm.ptr
    %308 = llvm.getelementptr %305[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %309 = llvm.load %308 : !llvm.ptr -> i8
    %c0_i8_103 = arith.constant 0 : i8
    %310 = arith.cmpi ne, %309, %c0_i8_103 : i8
    cf.cond_br %310, ^bb1(%309 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %311 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %307, %311 : !llvm.ptr, !llvm.ptr
    %312 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %304, %312 : i64, !llvm.ptr
    %313 = call @dora_fn_ext_code_copy(%arg0, %299, %293, %295, %297) : (!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
    cf.br ^bb47
  ^bb47:  // pred: ^bb46
    %c0_i64_104 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %314 = call @dora_fn_write_result(%arg0, %c0_i64_104, %c0_i64_104, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
