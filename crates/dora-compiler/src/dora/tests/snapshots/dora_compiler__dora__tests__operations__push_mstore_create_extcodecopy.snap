---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 77 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb14, ^bb15, ^bb18, ^bb19, ^bb22, ^bb23, ^bb25, ^bb28, ^bb29, ^bb32, ^bb33, ^bb36, ^bb37, ^bb40, ^bb41, ^bb43, ^bb44, ^bb46, ^bb47, ^bb48, ^bb50, ^bb51, ^bb54, ^bb55, ^bb58, ^bb59, ^bb61, ^bb64, ^bb65, ^bb68, ^bb69, ^bb72, ^bb73, ^bb75, ^bb78, ^bb79, ^bb82, ^bb83, ^bb86, ^bb87, ^bb90, ^bb91, ^bb94, ^bb95, ^bb97, ^bb98, ^bb99, ^bb101, ^bb103, ^bb104, ^bb107, ^bb110, ^bb111, ^bb113, ^bb116, ^bb117, ^bb119, ^bb120, ^bb121, ^bb122, ^bb125, ^bb126, ^bb128, ^bb131, ^bb132, ^bb134, ^bb137, ^bb138, ^bb140, ^bb143, ^bb144
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb14
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %43 = arith.trunci %38 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %44 = arith.cmpi slt, %43, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %44, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %45 = arith.cmpi ne, %c32_i64, %c0_i64_8 : i64
    cf.cond_br %45, ^bb107, ^bb13
  ^bb13:  // 2 preds: ^bb12, ^bb109
    %46 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %47 = llvm.load %46 : !llvm.ptr -> !llvm.ptr
    %48 = llvm.getelementptr %47[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.intr.bswap(%42)  : (i256) -> i256
    llvm.store %49, %48 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb19
  ^bb14:  // pred: ^bb16
    %50 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_9 = arith.constant 1024 : i64
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %52 = arith.addi %51, %c-2_i64 : i64
    llvm.store %52, %50 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %53 = arith.cmpi ult, %51, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %53, ^bb1(%c91_i8 : i8), ^bb11
  ^bb15:  // pred: ^bb7
    %54 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %55 = llvm.load %54 : !llvm.ptr -> i64
    %c3_i64_10 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %56 = arith.cmpi uge, %55, %c3_i64_10 : i64
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %56, ^bb16, ^bb1(%c80_i8_11 : i8)
  ^bb16:  // pred: ^bb15
    %57 = arith.subi %55, %c3_i64_10 : i64
    llvm.store %57, %54 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb17:  // pred: ^bb18
    %c170141183460469231731687303715884105727_i256_12 = arith.constant 170141183460469231731687303715884105727 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_12, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb18:  // pred: ^bb20
    %61 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_13 = arith.constant 1024 : i64
    %62 = llvm.load %61 : !llvm.ptr -> i64
    %c1_i64_14 = arith.constant 1 : i64
    %63 = arith.addi %62, %c1_i64_14 : i64
    llvm.store %63, %61 : i64, !llvm.ptr
    %64 = arith.cmpi ult, %c1024_i64_13, %63 : i64
    %c92_i8_15 = arith.constant 92 : i8
    cf.cond_br %64, ^bb1(%c92_i8_15 : i8), ^bb17
  ^bb19:  // pred: ^bb13
    %65 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %66 = llvm.load %65 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %67 = arith.cmpi uge, %66, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %67, ^bb20, ^bb1(%c80_i8_17 : i8)
  ^bb20:  // pred: ^bb19
    %68 = arith.subi %66, %c3_i64_16 : i64
    llvm.store %68, %65 : i64, !llvm.ptr
    cf.br ^bb18
  ^bb21:  // pred: ^bb22
    %c32_i256 = arith.constant 32 : i256
    %69 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %70 : i256, !llvm.ptr
    %71 = llvm.getelementptr %70[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %71, %69 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb22:  // pred: ^bb24
    %72 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %73 = llvm.load %72 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %74 = arith.addi %73, %c1_i64_19 : i64
    llvm.store %74, %72 : i64, !llvm.ptr
    %75 = arith.cmpi ult, %c1024_i64_18, %74 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %75, ^bb1(%c92_i8_20 : i8), ^bb21
  ^bb23:  // pred: ^bb17
    %76 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %77 = llvm.load %76 : !llvm.ptr -> i64
    %c3_i64_21 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %78 = arith.cmpi uge, %77, %c3_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %78, ^bb24, ^bb1(%c80_i8_22 : i8)
  ^bb24:  // pred: ^bb23
    %79 = arith.subi %77, %c3_i64_21 : i64
    llvm.store %79, %76 : i64, !llvm.ptr
    cf.br ^bb22
  ^bb25:  // pred: ^bb28
    %80 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    %82 = llvm.getelementptr %81[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %83 = llvm.load %82 : !llvm.ptr -> i256
    llvm.store %82, %80 : !llvm.ptr, !llvm.ptr
    %84 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> !llvm.ptr
    %86 = llvm.getelementptr %85[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %87 = llvm.load %86 : !llvm.ptr -> i256
    llvm.store %86, %84 : !llvm.ptr, !llvm.ptr
    %88 = arith.trunci %83 : i256 to i64
    %c0_i64_23 = arith.constant 0 : i64
    %89 = arith.cmpi slt, %88, %c0_i64_23 : i64
    %c84_i8_24 = arith.constant 84 : i8
    cf.cond_br %89, ^bb1(%c84_i8_24 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %c32_i64_25 = arith.constant 32 : i64
    %c0_i64_26 = arith.constant 0 : i64
    %90 = arith.cmpi ne, %c32_i64_25, %c0_i64_26 : i64
    cf.cond_br %90, ^bb113, ^bb27
  ^bb27:  // 2 preds: ^bb26, ^bb115
    %91 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %92 = llvm.load %91 : !llvm.ptr -> !llvm.ptr
    %93 = llvm.getelementptr %92[%88] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %94 = llvm.intr.bswap(%87)  : (i256) -> i256
    llvm.store %94, %93 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb33
  ^bb28:  // pred: ^bb30
    %95 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_27 = arith.constant 1024 : i64
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c-2_i64_28 = arith.constant -2 : i64
    %97 = arith.addi %96, %c-2_i64_28 : i64
    llvm.store %97, %95 : i64, !llvm.ptr
    %c2_i64_29 = arith.constant 2 : i64
    %98 = arith.cmpi ult, %96, %c2_i64_29 : i64
    %c91_i8_30 = arith.constant 91 : i8
    cf.cond_br %98, ^bb1(%c91_i8_30 : i8), ^bb25
  ^bb29:  // pred: ^bb21
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %c3_i64_31 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %101 = arith.cmpi uge, %100, %c3_i64_31 : i64
    %c80_i8_32 = arith.constant 80 : i8
    cf.cond_br %101, ^bb30, ^bb1(%c80_i8_32 : i8)
  ^bb30:  // pred: ^bb29
    %102 = arith.subi %100, %c3_i64_31 : i64
    llvm.store %102, %99 : i64, !llvm.ptr
    cf.br ^bb28
  ^bb31:  // pred: ^bb32
    %c41_i256 = arith.constant 41 : i256
    %103 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> !llvm.ptr
    llvm.store %c41_i256, %104 : i256, !llvm.ptr
    %105 = llvm.getelementptr %104[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %105, %103 : !llvm.ptr, !llvm.ptr
    cf.br ^bb37
  ^bb32:  // pred: ^bb34
    %106 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_33 = arith.constant 1024 : i64
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %108 = arith.addi %107, %c1_i64_34 : i64
    llvm.store %108, %106 : i64, !llvm.ptr
    %109 = arith.cmpi ult, %c1024_i64_33, %108 : i64
    %c92_i8_35 = arith.constant 92 : i8
    cf.cond_br %109, ^bb1(%c92_i8_35 : i8), ^bb31
  ^bb33:  // pred: ^bb27
    %110 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> i64
    %c3_i64_36 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %112 = arith.cmpi uge, %111, %c3_i64_36 : i64
    %c80_i8_37 = arith.constant 80 : i8
    cf.cond_br %112, ^bb34, ^bb1(%c80_i8_37 : i8)
  ^bb34:  // pred: ^bb33
    %113 = arith.subi %111, %c3_i64_36 : i64
    llvm.store %113, %110 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb36
    %c0_i256_38 = arith.constant 0 : i256
    %114 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_38, %115 : i256, !llvm.ptr
    %116 = llvm.getelementptr %115[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %116, %114 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %117 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_39 = arith.constant 1024 : i64
    %118 = llvm.load %117 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %119 = arith.addi %118, %c1_i64_40 : i64
    llvm.store %119, %117 : i64, !llvm.ptr
    %120 = arith.cmpi ult, %c1024_i64_39, %119 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %120, ^bb1(%c92_i8_41 : i8), ^bb35
  ^bb37:  // pred: ^bb31
    %121 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %122 = llvm.load %121 : !llvm.ptr -> i64
    %c3_i64_42 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %123 = arith.cmpi uge, %122, %c3_i64_42 : i64
    %c80_i8_43 = arith.constant 80 : i8
    cf.cond_br %123, ^bb38, ^bb1(%c80_i8_43 : i8)
  ^bb38:  // pred: ^bb37
    %124 = arith.subi %122, %c3_i64_42 : i64
    llvm.store %124, %121 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_44 = arith.constant 0 : i256
    %125 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_44, %126 : i256, !llvm.ptr
    %127 = llvm.getelementptr %126[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %127, %125 : !llvm.ptr, !llvm.ptr
    cf.br ^bb51
  ^bb40:  // pred: ^bb42
    %128 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_45 = arith.constant 1024 : i64
    %129 = llvm.load %128 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %130 = arith.addi %129, %c1_i64_46 : i64
    llvm.store %130, %128 : i64, !llvm.ptr
    %131 = arith.cmpi ult, %c1024_i64_45, %130 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %131, ^bb1(%c92_i8_47 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %132 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> i64
    %c3_i64_48 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %134 = arith.cmpi uge, %133, %c3_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %134, ^bb42, ^bb1(%c80_i8_49 : i8)
  ^bb42:  // pred: ^bb41
    %135 = arith.subi %133, %c3_i64_48 : i64
    llvm.store %135, %132 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb50
    %136 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %137[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %139 = llvm.load %138 : !llvm.ptr -> i256
    llvm.store %138, %136 : !llvm.ptr, !llvm.ptr
    %140 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> !llvm.ptr
    %142 = llvm.getelementptr %141[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %143 = llvm.load %142 : !llvm.ptr -> i256
    llvm.store %142, %140 : !llvm.ptr, !llvm.ptr
    %144 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> !llvm.ptr
    %146 = llvm.getelementptr %145[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %147 = llvm.load %146 : !llvm.ptr -> i256
    llvm.store %146, %144 : !llvm.ptr, !llvm.ptr
    %148 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %149 = arith.cmpi ne, %148, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %149, ^bb1(%c87_i8 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %150 = arith.trunci %147 : i256 to i64
    %c0_i64_50 = arith.constant 0 : i64
    %151 = arith.cmpi slt, %150, %c0_i64_50 : i64
    %c84_i8_51 = arith.constant 84 : i8
    cf.cond_br %151, ^bb1(%c84_i8_51 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %c0_i64_52 = arith.constant 0 : i64
    %152 = arith.cmpi ne, %150, %c0_i64_52 : i64
    cf.cond_br %152, ^bb119, ^bb46
  ^bb46:  // 2 preds: ^bb45, ^bb124
    %c32000_i64 = arith.constant 32000 : i64
    %153 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %154 = llvm.load %153 : !llvm.ptr -> i64
    %155 = arith.cmpi ult, %154, %c32000_i64 : i64
    scf.if %155 {
    } else {
      %559 = arith.subi %154, %c32000_i64 : i64
      llvm.store %559, %153 : i64, !llvm.ptr
    }
    %c80_i8_53 = arith.constant 80 : i8
    cf.cond_br %155, ^bb1(%c80_i8_53 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %c1_i256 = arith.constant 1 : i256
    %156 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %139, %156 {alignment = 1 : i64} : i256, !llvm.ptr
    %157 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %158 = llvm.load %157 : !llvm.ptr -> i64
    %159 = arith.trunci %143 : i256 to i64
    %160 = call @dora_fn_create(%arg0, %150, %159, %156, %158) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %161 = llvm.getelementptr %160[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %162 = llvm.load %161 : !llvm.ptr -> i8
    %c0_i8_54 = arith.constant 0 : i8
    %163 = arith.cmpi ne, %162, %c0_i8_54 : i8
    cf.cond_br %163, ^bb1(%162 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %164 = llvm.getelementptr %160[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %165 = llvm.load %164 : !llvm.ptr -> i64
    %166 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> i64
    %168 = arith.cmpi ult, %167, %165 : i64
    scf.if %168 {
    } else {
      %559 = arith.subi %167, %165 : i64
      llvm.store %559, %166 : i64, !llvm.ptr
    }
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %168, ^bb1(%c80_i8_55 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %169 = llvm.load %156 : !llvm.ptr -> i256
    %170 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> !llvm.ptr
    llvm.store %169, %171 : i256, !llvm.ptr
    %172 = llvm.getelementptr %171[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %172, %170 : !llvm.ptr, !llvm.ptr
    cf.br ^bb55
  ^bb50:  // pred: ^bb52
    %173 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_56 = arith.constant 1024 : i64
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %c-2_i64_57 = arith.constant -2 : i64
    %175 = arith.addi %174, %c-2_i64_57 : i64
    llvm.store %175, %173 : i64, !llvm.ptr
    %c3_i64_58 = arith.constant 3 : i64
    %176 = arith.cmpi ult, %174, %c3_i64_58 : i64
    %c91_i8_59 = arith.constant 91 : i8
    cf.cond_br %176, ^bb1(%c91_i8_59 : i8), ^bb43
  ^bb51:  // pred: ^bb39
    %177 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> i64
    %c0_i64_60 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %179 = arith.cmpi uge, %178, %c0_i64_60 : i64
    %c80_i8_61 = arith.constant 80 : i8
    cf.cond_br %179, ^bb52, ^bb1(%c80_i8_61 : i8)
  ^bb52:  // pred: ^bb51
    %180 = arith.subi %178, %c0_i64_60 : i64
    llvm.store %180, %177 : i64, !llvm.ptr
    cf.br ^bb50
  ^bb53:  // pred: ^bb54
    %c0_i256_62 = arith.constant 0 : i256
    %181 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %182 = llvm.load %181 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_62, %182 : i256, !llvm.ptr
    %183 = llvm.getelementptr %182[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %183, %181 : !llvm.ptr, !llvm.ptr
    cf.br ^bb59
  ^bb54:  // pred: ^bb56
    %184 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_63 = arith.constant 1024 : i64
    %185 = llvm.load %184 : !llvm.ptr -> i64
    %c1_i64_64 = arith.constant 1 : i64
    %186 = arith.addi %185, %c1_i64_64 : i64
    llvm.store %186, %184 : i64, !llvm.ptr
    %187 = arith.cmpi ult, %c1024_i64_63, %186 : i64
    %c92_i8_65 = arith.constant 92 : i8
    cf.cond_br %187, ^bb1(%c92_i8_65 : i8), ^bb53
  ^bb55:  // pred: ^bb49
    %188 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %189 = llvm.load %188 : !llvm.ptr -> i64
    %c3_i64_66 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %190 = arith.cmpi uge, %189, %c3_i64_66 : i64
    %c80_i8_67 = arith.constant 80 : i8
    cf.cond_br %190, ^bb56, ^bb1(%c80_i8_67 : i8)
  ^bb56:  // pred: ^bb55
    %191 = arith.subi %189, %c3_i64_66 : i64
    llvm.store %191, %188 : i64, !llvm.ptr
    cf.br ^bb54
  ^bb57:  // pred: ^bb58
    %c0_i256_68 = arith.constant 0 : i256
    %192 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_68, %193 : i256, !llvm.ptr
    %194 = llvm.getelementptr %193[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %194, %192 : !llvm.ptr, !llvm.ptr
    cf.br ^bb65
  ^bb58:  // pred: ^bb60
    %195 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_69 = arith.constant 1024 : i64
    %196 = llvm.load %195 : !llvm.ptr -> i64
    %c1_i64_70 = arith.constant 1 : i64
    %197 = arith.addi %196, %c1_i64_70 : i64
    llvm.store %197, %195 : i64, !llvm.ptr
    %198 = arith.cmpi ult, %c1024_i64_69, %197 : i64
    %c92_i8_71 = arith.constant 92 : i8
    cf.cond_br %198, ^bb1(%c92_i8_71 : i8), ^bb57
  ^bb59:  // pred: ^bb53
    %199 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> i64
    %c3_i64_72 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %201 = arith.cmpi uge, %200, %c3_i64_72 : i64
    %c80_i8_73 = arith.constant 80 : i8
    cf.cond_br %201, ^bb60, ^bb1(%c80_i8_73 : i8)
  ^bb60:  // pred: ^bb59
    %202 = arith.subi %200, %c3_i64_72 : i64
    llvm.store %202, %199 : i64, !llvm.ptr
    cf.br ^bb58
  ^bb61:  // pred: ^bb64
    %203 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %204 = llvm.load %203 : !llvm.ptr -> !llvm.ptr
    %205 = llvm.getelementptr %204[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %206 = llvm.load %205 : !llvm.ptr -> i256
    llvm.store %205, %203 : !llvm.ptr, !llvm.ptr
    %207 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %208 = llvm.load %207 : !llvm.ptr -> !llvm.ptr
    %209 = llvm.getelementptr %208[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %210 = llvm.load %209 : !llvm.ptr -> i256
    llvm.store %209, %207 : !llvm.ptr, !llvm.ptr
    %211 = arith.trunci %206 : i256 to i64
    %c0_i64_74 = arith.constant 0 : i64
    %212 = arith.cmpi slt, %211, %c0_i64_74 : i64
    %c84_i8_75 = arith.constant 84 : i8
    cf.cond_br %212, ^bb1(%c84_i8_75 : i8), ^bb62
  ^bb62:  // pred: ^bb61
    %c32_i64_76 = arith.constant 32 : i64
    %c0_i64_77 = arith.constant 0 : i64
    %213 = arith.cmpi ne, %c32_i64_76, %c0_i64_77 : i64
    cf.cond_br %213, ^bb128, ^bb63
  ^bb63:  // 2 preds: ^bb62, ^bb130
    %214 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %215 = llvm.load %214 : !llvm.ptr -> !llvm.ptr
    %216 = llvm.getelementptr %215[%211] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %217 = llvm.intr.bswap(%210)  : (i256) -> i256
    llvm.store %217, %216 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb69
  ^bb64:  // pred: ^bb66
    %218 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_78 = arith.constant 1024 : i64
    %219 = llvm.load %218 : !llvm.ptr -> i64
    %c-2_i64_79 = arith.constant -2 : i64
    %220 = arith.addi %219, %c-2_i64_79 : i64
    llvm.store %220, %218 : i64, !llvm.ptr
    %c2_i64_80 = arith.constant 2 : i64
    %221 = arith.cmpi ult, %219, %c2_i64_80 : i64
    %c91_i8_81 = arith.constant 91 : i8
    cf.cond_br %221, ^bb1(%c91_i8_81 : i8), ^bb61
  ^bb65:  // pred: ^bb57
    %222 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> i64
    %c3_i64_82 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %224 = arith.cmpi uge, %223, %c3_i64_82 : i64
    %c80_i8_83 = arith.constant 80 : i8
    cf.cond_br %224, ^bb66, ^bb1(%c80_i8_83 : i8)
  ^bb66:  // pred: ^bb65
    %225 = arith.subi %223, %c3_i64_82 : i64
    llvm.store %225, %222 : i64, !llvm.ptr
    cf.br ^bb64
  ^bb67:  // pred: ^bb68
    %c0_i256_84 = arith.constant 0 : i256
    %226 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %227 = llvm.load %226 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_84, %227 : i256, !llvm.ptr
    %228 = llvm.getelementptr %227[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %228, %226 : !llvm.ptr, !llvm.ptr
    cf.br ^bb73
  ^bb68:  // pred: ^bb70
    %229 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_85 = arith.constant 1024 : i64
    %230 = llvm.load %229 : !llvm.ptr -> i64
    %c1_i64_86 = arith.constant 1 : i64
    %231 = arith.addi %230, %c1_i64_86 : i64
    llvm.store %231, %229 : i64, !llvm.ptr
    %232 = arith.cmpi ult, %c1024_i64_85, %231 : i64
    %c92_i8_87 = arith.constant 92 : i8
    cf.cond_br %232, ^bb1(%c92_i8_87 : i8), ^bb67
  ^bb69:  // pred: ^bb63
    %233 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %234 = llvm.load %233 : !llvm.ptr -> i64
    %c3_i64_88 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %235 = arith.cmpi uge, %234, %c3_i64_88 : i64
    %c80_i8_89 = arith.constant 80 : i8
    cf.cond_br %235, ^bb70, ^bb1(%c80_i8_89 : i8)
  ^bb70:  // pred: ^bb69
    %236 = arith.subi %234, %c3_i64_88 : i64
    llvm.store %236, %233 : i64, !llvm.ptr
    cf.br ^bb68
  ^bb71:  // pred: ^bb72
    %c32_i256_90 = arith.constant 32 : i256
    %237 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_90, %238 : i256, !llvm.ptr
    %239 = llvm.getelementptr %238[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %239, %237 : !llvm.ptr, !llvm.ptr
    cf.br ^bb79
  ^bb72:  // pred: ^bb74
    %240 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_91 = arith.constant 1024 : i64
    %241 = llvm.load %240 : !llvm.ptr -> i64
    %c1_i64_92 = arith.constant 1 : i64
    %242 = arith.addi %241, %c1_i64_92 : i64
    llvm.store %242, %240 : i64, !llvm.ptr
    %243 = arith.cmpi ult, %c1024_i64_91, %242 : i64
    %c92_i8_93 = arith.constant 92 : i8
    cf.cond_br %243, ^bb1(%c92_i8_93 : i8), ^bb71
  ^bb73:  // pred: ^bb67
    %244 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %245 = llvm.load %244 : !llvm.ptr -> i64
    %c3_i64_94 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %246 = arith.cmpi uge, %245, %c3_i64_94 : i64
    %c80_i8_95 = arith.constant 80 : i8
    cf.cond_br %246, ^bb74, ^bb1(%c80_i8_95 : i8)
  ^bb74:  // pred: ^bb73
    %247 = arith.subi %245, %c3_i64_94 : i64
    llvm.store %247, %244 : i64, !llvm.ptr
    cf.br ^bb72
  ^bb75:  // pred: ^bb78
    %248 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %249 = llvm.load %248 : !llvm.ptr -> !llvm.ptr
    %250 = llvm.getelementptr %249[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %251 = llvm.load %250 : !llvm.ptr -> i256
    llvm.store %250, %248 : !llvm.ptr, !llvm.ptr
    %252 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> !llvm.ptr
    %254 = llvm.getelementptr %253[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %255 = llvm.load %254 : !llvm.ptr -> i256
    llvm.store %254, %252 : !llvm.ptr, !llvm.ptr
    %256 = arith.trunci %251 : i256 to i64
    %c0_i64_96 = arith.constant 0 : i64
    %257 = arith.cmpi slt, %256, %c0_i64_96 : i64
    %c84_i8_97 = arith.constant 84 : i8
    cf.cond_br %257, ^bb1(%c84_i8_97 : i8), ^bb76
  ^bb76:  // pred: ^bb75
    %c32_i64_98 = arith.constant 32 : i64
    %c0_i64_99 = arith.constant 0 : i64
    %258 = arith.cmpi ne, %c32_i64_98, %c0_i64_99 : i64
    cf.cond_br %258, ^bb134, ^bb77
  ^bb77:  // 2 preds: ^bb76, ^bb136
    %259 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %260 = llvm.load %259 : !llvm.ptr -> !llvm.ptr
    %261 = llvm.getelementptr %260[%256] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %262 = llvm.intr.bswap(%255)  : (i256) -> i256
    llvm.store %262, %261 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb83
  ^bb78:  // pred: ^bb80
    %263 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_100 = arith.constant 1024 : i64
    %264 = llvm.load %263 : !llvm.ptr -> i64
    %c-2_i64_101 = arith.constant -2 : i64
    %265 = arith.addi %264, %c-2_i64_101 : i64
    llvm.store %265, %263 : i64, !llvm.ptr
    %c2_i64_102 = arith.constant 2 : i64
    %266 = arith.cmpi ult, %264, %c2_i64_102 : i64
    %c91_i8_103 = arith.constant 91 : i8
    cf.cond_br %266, ^bb1(%c91_i8_103 : i8), ^bb75
  ^bb79:  // pred: ^bb71
    %267 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %268 = llvm.load %267 : !llvm.ptr -> i64
    %c3_i64_104 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %269 = arith.cmpi uge, %268, %c3_i64_104 : i64
    %c80_i8_105 = arith.constant 80 : i8
    cf.cond_br %269, ^bb80, ^bb1(%c80_i8_105 : i8)
  ^bb80:  // pred: ^bb79
    %270 = arith.subi %268, %c3_i64_104 : i64
    llvm.store %270, %267 : i64, !llvm.ptr
    cf.br ^bb78
  ^bb81:  // pred: ^bb82
    %c32_i256_106 = arith.constant 32 : i256
    %271 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %272 = llvm.load %271 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_106, %272 : i256, !llvm.ptr
    %273 = llvm.getelementptr %272[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %273, %271 : !llvm.ptr, !llvm.ptr
    cf.br ^bb87
  ^bb82:  // pred: ^bb84
    %274 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_107 = arith.constant 1024 : i64
    %275 = llvm.load %274 : !llvm.ptr -> i64
    %c1_i64_108 = arith.constant 1 : i64
    %276 = arith.addi %275, %c1_i64_108 : i64
    llvm.store %276, %274 : i64, !llvm.ptr
    %277 = arith.cmpi ult, %c1024_i64_107, %276 : i64
    %c92_i8_109 = arith.constant 92 : i8
    cf.cond_br %277, ^bb1(%c92_i8_109 : i8), ^bb81
  ^bb83:  // pred: ^bb77
    %278 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %279 = llvm.load %278 : !llvm.ptr -> i64
    %c3_i64_110 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %280 = arith.cmpi uge, %279, %c3_i64_110 : i64
    %c80_i8_111 = arith.constant 80 : i8
    cf.cond_br %280, ^bb84, ^bb1(%c80_i8_111 : i8)
  ^bb84:  // pred: ^bb83
    %281 = arith.subi %279, %c3_i64_110 : i64
    llvm.store %281, %278 : i64, !llvm.ptr
    cf.br ^bb82
  ^bb85:  // pred: ^bb86
    %c0_i256_112 = arith.constant 0 : i256
    %282 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %283 = llvm.load %282 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_112, %283 : i256, !llvm.ptr
    %284 = llvm.getelementptr %283[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %284, %282 : !llvm.ptr, !llvm.ptr
    cf.br ^bb91
  ^bb86:  // pred: ^bb88
    %285 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_113 = arith.constant 1024 : i64
    %286 = llvm.load %285 : !llvm.ptr -> i64
    %c1_i64_114 = arith.constant 1 : i64
    %287 = arith.addi %286, %c1_i64_114 : i64
    llvm.store %287, %285 : i64, !llvm.ptr
    %288 = arith.cmpi ult, %c1024_i64_113, %287 : i64
    %c92_i8_115 = arith.constant 92 : i8
    cf.cond_br %288, ^bb1(%c92_i8_115 : i8), ^bb85
  ^bb87:  // pred: ^bb81
    %289 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %290 = llvm.load %289 : !llvm.ptr -> i64
    %c3_i64_116 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %291 = arith.cmpi uge, %290, %c3_i64_116 : i64
    %c80_i8_117 = arith.constant 80 : i8
    cf.cond_br %291, ^bb88, ^bb1(%c80_i8_117 : i8)
  ^bb88:  // pred: ^bb87
    %292 = arith.subi %290, %c3_i64_116 : i64
    llvm.store %292, %289 : i64, !llvm.ptr
    cf.br ^bb86
  ^bb89:  // pred: ^bb90
    %c0_i256_118 = arith.constant 0 : i256
    %293 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %294 = llvm.load %293 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_118, %294 : i256, !llvm.ptr
    %295 = llvm.getelementptr %294[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %295, %293 : !llvm.ptr, !llvm.ptr
    cf.br ^bb95
  ^bb90:  // pred: ^bb92
    %296 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_119 = arith.constant 1024 : i64
    %297 = llvm.load %296 : !llvm.ptr -> i64
    %c1_i64_120 = arith.constant 1 : i64
    %298 = arith.addi %297, %c1_i64_120 : i64
    llvm.store %298, %296 : i64, !llvm.ptr
    %299 = arith.cmpi ult, %c1024_i64_119, %298 : i64
    %c92_i8_121 = arith.constant 92 : i8
    cf.cond_br %299, ^bb1(%c92_i8_121 : i8), ^bb89
  ^bb91:  // pred: ^bb85
    %300 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %301 = llvm.load %300 : !llvm.ptr -> i64
    %c3_i64_122 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %302 = arith.cmpi uge, %301, %c3_i64_122 : i64
    %c80_i8_123 = arith.constant 80 : i8
    cf.cond_br %302, ^bb92, ^bb1(%c80_i8_123 : i8)
  ^bb92:  // pred: ^bb91
    %303 = arith.subi %301, %c3_i64_122 : i64
    llvm.store %303, %300 : i64, !llvm.ptr
    cf.br ^bb90
  ^bb93:  // pred: ^bb94
    %304 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %305 = llvm.load %304 : !llvm.ptr -> !llvm.ptr
    %306 = llvm.getelementptr %305[-4] : (!llvm.ptr) -> !llvm.ptr, i256
    %307 = llvm.load %306 : !llvm.ptr -> i256
    %308 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %309 = llvm.load %308 : !llvm.ptr -> !llvm.ptr
    llvm.store %307, %309 : i256, !llvm.ptr
    %310 = llvm.getelementptr %309[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %310, %308 : !llvm.ptr, !llvm.ptr
    cf.br ^bb104
  ^bb94:  // pred: ^bb96
    %311 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_124 = arith.constant 1024 : i64
    %312 = llvm.load %311 : !llvm.ptr -> i64
    %c1_i64_125 = arith.constant 1 : i64
    %313 = arith.addi %312, %c1_i64_125 : i64
    llvm.store %313, %311 : i64, !llvm.ptr
    %314 = arith.cmpi ult, %c1024_i64_124, %313 : i64
    %c92_i8_126 = arith.constant 92 : i8
    cf.cond_br %314, ^bb1(%c92_i8_126 : i8), ^bb93
  ^bb95:  // pred: ^bb89
    %315 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %316 = llvm.load %315 : !llvm.ptr -> i64
    %c3_i64_127 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %317 = arith.cmpi uge, %316, %c3_i64_127 : i64
    %c80_i8_128 = arith.constant 80 : i8
    cf.cond_br %317, ^bb96, ^bb1(%c80_i8_128 : i8)
  ^bb96:  // pred: ^bb95
    %318 = arith.subi %316, %c3_i64_127 : i64
    llvm.store %318, %315 : i64, !llvm.ptr
    cf.br ^bb94
  ^bb97:  // pred: ^bb103
    %319 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %320 = llvm.load %319 : !llvm.ptr -> !llvm.ptr
    %321 = llvm.getelementptr %320[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %322 = llvm.load %321 : !llvm.ptr -> i256
    llvm.store %321, %319 : !llvm.ptr, !llvm.ptr
    %323 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %324 = llvm.load %323 : !llvm.ptr -> !llvm.ptr
    %325 = llvm.getelementptr %324[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %326 = llvm.load %325 : !llvm.ptr -> i256
    llvm.store %325, %323 : !llvm.ptr, !llvm.ptr
    %327 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %328 = llvm.load %327 : !llvm.ptr -> !llvm.ptr
    %329 = llvm.getelementptr %328[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %330 = llvm.load %329 : !llvm.ptr -> i256
    llvm.store %329, %327 : !llvm.ptr, !llvm.ptr
    %331 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %332 = llvm.load %331 : !llvm.ptr -> !llvm.ptr
    %333 = llvm.getelementptr %332[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %334 = llvm.load %333 : !llvm.ptr -> i256
    llvm.store %333, %331 : !llvm.ptr, !llvm.ptr
    %335 = arith.trunci %334 : i256 to i64
    %c0_i64_129 = arith.constant 0 : i64
    %336 = arith.cmpi slt, %335, %c0_i64_129 : i64
    %c84_i8_130 = arith.constant 84 : i8
    cf.cond_br %336, ^bb1(%c84_i8_130 : i8), ^bb98
  ^bb98:  // pred: ^bb97
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_131 = arith.constant 32 : i64
    %337 = arith.addi %335, %c31_i64 : i64
    %338 = arith.divui %337, %c32_i64_131 : i64
    %c3_i64_132 = arith.constant 3 : i64
    %339 = arith.muli %338, %c3_i64_132 : i64
    %340 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %341 = llvm.load %340 : !llvm.ptr -> i64
    %342 = arith.cmpi ult, %341, %339 : i64
    scf.if %342 {
    } else {
      %559 = arith.subi %341, %339 : i64
      llvm.store %559, %340 : i64, !llvm.ptr
    }
    %c80_i8_133 = arith.constant 80 : i8
    cf.cond_br %342, ^bb1(%c80_i8_133 : i8), ^bb99
  ^bb99:  // pred: ^bb98
    %343 = arith.trunci %326 : i256 to i64
    %c0_i64_134 = arith.constant 0 : i64
    %344 = arith.cmpi slt, %343, %c0_i64_134 : i64
    %c84_i8_135 = arith.constant 84 : i8
    cf.cond_br %344, ^bb1(%c84_i8_135 : i8), ^bb100
  ^bb100:  // pred: ^bb99
    %c0_i64_136 = arith.constant 0 : i64
    %345 = arith.cmpi ne, %335, %c0_i64_136 : i64
    cf.cond_br %345, ^bb140, ^bb101
  ^bb101:  // 2 preds: ^bb100, ^bb142
    %c1_i256_137 = arith.constant 1 : i256
    %346 = llvm.alloca %c1_i256_137 x i256 : (i256) -> !llvm.ptr
    llvm.store %322, %346 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_138 = arith.constant 1 : i256
    %347 = llvm.alloca %c1_i256_138 x i256 : (i256) -> !llvm.ptr
    llvm.store %330, %347 {alignment = 1 : i64} : i256, !llvm.ptr
    %348 = call @dora_fn_ext_code_copy(%arg0, %346, %347, %335, %343) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
    %349 = llvm.getelementptr %348[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %350 = llvm.load %349 : !llvm.ptr -> i64
    %351 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %352 = llvm.load %351 : !llvm.ptr -> i64
    %353 = arith.cmpi ult, %352, %350 : i64
    scf.if %353 {
    } else {
      %559 = arith.subi %352, %350 : i64
      llvm.store %559, %351 : i64, !llvm.ptr
    }
    %c80_i8_139 = arith.constant 80 : i8
    cf.cond_br %353, ^bb1(%c80_i8_139 : i8), ^bb102
  ^bb102:  // pred: ^bb101
    cf.br ^bb106
  ^bb103:  // pred: ^bb105
    %354 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_140 = arith.constant 1024 : i64
    %355 = llvm.load %354 : !llvm.ptr -> i64
    %c-4_i64 = arith.constant -4 : i64
    %356 = arith.addi %355, %c-4_i64 : i64
    llvm.store %356, %354 : i64, !llvm.ptr
    %c4_i64 = arith.constant 4 : i64
    %357 = arith.cmpi ult, %355, %c4_i64 : i64
    %c91_i8_141 = arith.constant 91 : i8
    cf.cond_br %357, ^bb1(%c91_i8_141 : i8), ^bb97
  ^bb104:  // pred: ^bb93
    %358 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %359 = llvm.load %358 : !llvm.ptr -> i64
    %c0_i64_142 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %360 = arith.cmpi uge, %359, %c0_i64_142 : i64
    %c80_i8_143 = arith.constant 80 : i8
    cf.cond_br %360, ^bb105, ^bb1(%c80_i8_143 : i8)
  ^bb105:  // pred: ^bb104
    %361 = arith.subi %359, %c0_i64_142 : i64
    llvm.store %361, %358 : i64, !llvm.ptr
    cf.br ^bb103
  ^bb106:  // pred: ^bb102
    %c0_i64_144 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %362 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %363 = llvm.load %362 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_144, %c0_i64_144, %363, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb107:  // pred: ^bb12
    %364 = arith.addi %43, %c32_i64 : i64
    %c0_i64_145 = arith.constant 0 : i64
    %365 = arith.cmpi slt, %364, %c0_i64_145 : i64
    %c84_i8_146 = arith.constant 84 : i8
    cf.cond_br %365, ^bb1(%c84_i8_146 : i8), ^bb108
  ^bb108:  // pred: ^bb107
    %c31_i64_147 = arith.constant 31 : i64
    %c32_i64_148 = arith.constant 32 : i64
    %366 = arith.addi %364, %c31_i64_147 : i64
    %367 = arith.divui %366, %c32_i64_148 : i64
    %c32_i64_149 = arith.constant 32 : i64
    %368 = arith.muli %367, %c32_i64_149 : i64
    %369 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %370 = llvm.load %369 : !llvm.ptr -> i64
    %c31_i64_150 = arith.constant 31 : i64
    %c32_i64_151 = arith.constant 32 : i64
    %371 = arith.addi %370, %c31_i64_150 : i64
    %372 = arith.divui %371, %c32_i64_151 : i64
    %373 = arith.muli %372, %c32_i64_149 : i64
    %374 = arith.cmpi ult, %373, %368 : i64
    cf.cond_br %374, ^bb110, ^bb109
  ^bb109:  // 2 preds: ^bb108, ^bb112
    cf.br ^bb13
  ^bb110:  // pred: ^bb108
    %c3_i64_152 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %375 = arith.muli %372, %372 : i64
    %376 = arith.divui %375, %c512_i64 : i64
    %377 = arith.muli %372, %c3_i64_152 : i64
    %378 = arith.addi %376, %377 : i64
    %c3_i64_153 = arith.constant 3 : i64
    %c512_i64_154 = arith.constant 512 : i64
    %379 = arith.muli %367, %367 : i64
    %380 = arith.divui %379, %c512_i64_154 : i64
    %381 = arith.muli %367, %c3_i64_153 : i64
    %382 = arith.addi %380, %381 : i64
    %383 = arith.subi %382, %378 : i64
    %384 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %385 = llvm.load %384 : !llvm.ptr -> i64
    %386 = arith.cmpi ult, %385, %383 : i64
    scf.if %386 {
    } else {
      %559 = arith.subi %385, %383 : i64
      llvm.store %559, %384 : i64, !llvm.ptr
    }
    %c80_i8_155 = arith.constant 80 : i8
    cf.cond_br %386, ^bb1(%c80_i8_155 : i8), ^bb111
  ^bb111:  // pred: ^bb110
    %387 = call @dora_fn_extend_memory(%arg0, %368) : (!llvm.ptr, i64) -> !llvm.ptr
    %388 = llvm.getelementptr %387[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %389 = llvm.load %388 : !llvm.ptr -> !llvm.ptr
    %390 = llvm.getelementptr %387[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %391 = llvm.load %390 : !llvm.ptr -> i8
    %c0_i8_156 = arith.constant 0 : i8
    %392 = arith.cmpi ne, %391, %c0_i8_156 : i8
    cf.cond_br %392, ^bb1(%391 : i8), ^bb112
  ^bb112:  // pred: ^bb111
    %393 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %389, %393 : !llvm.ptr, !llvm.ptr
    %394 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %368, %394 : i64, !llvm.ptr
    cf.br ^bb109
  ^bb113:  // pred: ^bb26
    %395 = arith.addi %88, %c32_i64_25 : i64
    %c0_i64_157 = arith.constant 0 : i64
    %396 = arith.cmpi slt, %395, %c0_i64_157 : i64
    %c84_i8_158 = arith.constant 84 : i8
    cf.cond_br %396, ^bb1(%c84_i8_158 : i8), ^bb114
  ^bb114:  // pred: ^bb113
    %c31_i64_159 = arith.constant 31 : i64
    %c32_i64_160 = arith.constant 32 : i64
    %397 = arith.addi %395, %c31_i64_159 : i64
    %398 = arith.divui %397, %c32_i64_160 : i64
    %c32_i64_161 = arith.constant 32 : i64
    %399 = arith.muli %398, %c32_i64_161 : i64
    %400 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %401 = llvm.load %400 : !llvm.ptr -> i64
    %c31_i64_162 = arith.constant 31 : i64
    %c32_i64_163 = arith.constant 32 : i64
    %402 = arith.addi %401, %c31_i64_162 : i64
    %403 = arith.divui %402, %c32_i64_163 : i64
    %404 = arith.muli %403, %c32_i64_161 : i64
    %405 = arith.cmpi ult, %404, %399 : i64
    cf.cond_br %405, ^bb116, ^bb115
  ^bb115:  // 2 preds: ^bb114, ^bb118
    cf.br ^bb27
  ^bb116:  // pred: ^bb114
    %c3_i64_164 = arith.constant 3 : i64
    %c512_i64_165 = arith.constant 512 : i64
    %406 = arith.muli %403, %403 : i64
    %407 = arith.divui %406, %c512_i64_165 : i64
    %408 = arith.muli %403, %c3_i64_164 : i64
    %409 = arith.addi %407, %408 : i64
    %c3_i64_166 = arith.constant 3 : i64
    %c512_i64_167 = arith.constant 512 : i64
    %410 = arith.muli %398, %398 : i64
    %411 = arith.divui %410, %c512_i64_167 : i64
    %412 = arith.muli %398, %c3_i64_166 : i64
    %413 = arith.addi %411, %412 : i64
    %414 = arith.subi %413, %409 : i64
    %415 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %416 = llvm.load %415 : !llvm.ptr -> i64
    %417 = arith.cmpi ult, %416, %414 : i64
    scf.if %417 {
    } else {
      %559 = arith.subi %416, %414 : i64
      llvm.store %559, %415 : i64, !llvm.ptr
    }
    %c80_i8_168 = arith.constant 80 : i8
    cf.cond_br %417, ^bb1(%c80_i8_168 : i8), ^bb117
  ^bb117:  // pred: ^bb116
    %418 = call @dora_fn_extend_memory(%arg0, %399) : (!llvm.ptr, i64) -> !llvm.ptr
    %419 = llvm.getelementptr %418[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %420 = llvm.load %419 : !llvm.ptr -> !llvm.ptr
    %421 = llvm.getelementptr %418[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %422 = llvm.load %421 : !llvm.ptr -> i8
    %c0_i8_169 = arith.constant 0 : i8
    %423 = arith.cmpi ne, %422, %c0_i8_169 : i8
    cf.cond_br %423, ^bb1(%422 : i8), ^bb118
  ^bb118:  // pred: ^bb117
    %424 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %420, %424 : !llvm.ptr, !llvm.ptr
    %425 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %399, %425 : i64, !llvm.ptr
    cf.br ^bb115
  ^bb119:  // pred: ^bb45
    %c49152_i64 = arith.constant 49152 : i64
    %426 = arith.cmpi ugt, %150, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %426, ^bb1(%c100_i8 : i8), ^bb120
  ^bb120:  // pred: ^bb119
    %c31_i64_170 = arith.constant 31 : i64
    %c32_i64_171 = arith.constant 32 : i64
    %427 = arith.addi %150, %c31_i64_170 : i64
    %428 = arith.divui %427, %c32_i64_171 : i64
    %c2_i64_172 = arith.constant 2 : i64
    %429 = arith.muli %428, %c2_i64_172 : i64
    %430 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %431 = llvm.load %430 : !llvm.ptr -> i64
    %432 = arith.cmpi ult, %431, %429 : i64
    scf.if %432 {
    } else {
      %559 = arith.subi %431, %429 : i64
      llvm.store %559, %430 : i64, !llvm.ptr
    }
    %c80_i8_173 = arith.constant 80 : i8
    cf.cond_br %432, ^bb1(%c80_i8_173 : i8), ^bb121
  ^bb121:  // pred: ^bb120
    %433 = arith.trunci %143 : i256 to i64
    %c0_i64_174 = arith.constant 0 : i64
    %434 = arith.cmpi slt, %433, %c0_i64_174 : i64
    %c84_i8_175 = arith.constant 84 : i8
    cf.cond_br %434, ^bb1(%c84_i8_175 : i8), ^bb122
  ^bb122:  // pred: ^bb121
    %435 = arith.addi %433, %150 : i64
    %c0_i64_176 = arith.constant 0 : i64
    %436 = arith.cmpi slt, %435, %c0_i64_176 : i64
    %c84_i8_177 = arith.constant 84 : i8
    cf.cond_br %436, ^bb1(%c84_i8_177 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %c31_i64_178 = arith.constant 31 : i64
    %c32_i64_179 = arith.constant 32 : i64
    %437 = arith.addi %435, %c31_i64_178 : i64
    %438 = arith.divui %437, %c32_i64_179 : i64
    %c32_i64_180 = arith.constant 32 : i64
    %439 = arith.muli %438, %c32_i64_180 : i64
    %440 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %441 = llvm.load %440 : !llvm.ptr -> i64
    %c31_i64_181 = arith.constant 31 : i64
    %c32_i64_182 = arith.constant 32 : i64
    %442 = arith.addi %441, %c31_i64_181 : i64
    %443 = arith.divui %442, %c32_i64_182 : i64
    %444 = arith.muli %443, %c32_i64_180 : i64
    %445 = arith.cmpi ult, %444, %439 : i64
    cf.cond_br %445, ^bb125, ^bb124
  ^bb124:  // 2 preds: ^bb123, ^bb127
    cf.br ^bb46
  ^bb125:  // pred: ^bb123
    %c3_i64_183 = arith.constant 3 : i64
    %c512_i64_184 = arith.constant 512 : i64
    %446 = arith.muli %443, %443 : i64
    %447 = arith.divui %446, %c512_i64_184 : i64
    %448 = arith.muli %443, %c3_i64_183 : i64
    %449 = arith.addi %447, %448 : i64
    %c3_i64_185 = arith.constant 3 : i64
    %c512_i64_186 = arith.constant 512 : i64
    %450 = arith.muli %438, %438 : i64
    %451 = arith.divui %450, %c512_i64_186 : i64
    %452 = arith.muli %438, %c3_i64_185 : i64
    %453 = arith.addi %451, %452 : i64
    %454 = arith.subi %453, %449 : i64
    %455 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %456 = llvm.load %455 : !llvm.ptr -> i64
    %457 = arith.cmpi ult, %456, %454 : i64
    scf.if %457 {
    } else {
      %559 = arith.subi %456, %454 : i64
      llvm.store %559, %455 : i64, !llvm.ptr
    }
    %c80_i8_187 = arith.constant 80 : i8
    cf.cond_br %457, ^bb1(%c80_i8_187 : i8), ^bb126
  ^bb126:  // pred: ^bb125
    %458 = call @dora_fn_extend_memory(%arg0, %439) : (!llvm.ptr, i64) -> !llvm.ptr
    %459 = llvm.getelementptr %458[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %460 = llvm.load %459 : !llvm.ptr -> !llvm.ptr
    %461 = llvm.getelementptr %458[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %462 = llvm.load %461 : !llvm.ptr -> i8
    %c0_i8_188 = arith.constant 0 : i8
    %463 = arith.cmpi ne, %462, %c0_i8_188 : i8
    cf.cond_br %463, ^bb1(%462 : i8), ^bb127
  ^bb127:  // pred: ^bb126
    %464 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %460, %464 : !llvm.ptr, !llvm.ptr
    %465 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %439, %465 : i64, !llvm.ptr
    cf.br ^bb124
  ^bb128:  // pred: ^bb62
    %466 = arith.addi %211, %c32_i64_76 : i64
    %c0_i64_189 = arith.constant 0 : i64
    %467 = arith.cmpi slt, %466, %c0_i64_189 : i64
    %c84_i8_190 = arith.constant 84 : i8
    cf.cond_br %467, ^bb1(%c84_i8_190 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    %c31_i64_191 = arith.constant 31 : i64
    %c32_i64_192 = arith.constant 32 : i64
    %468 = arith.addi %466, %c31_i64_191 : i64
    %469 = arith.divui %468, %c32_i64_192 : i64
    %c32_i64_193 = arith.constant 32 : i64
    %470 = arith.muli %469, %c32_i64_193 : i64
    %471 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %472 = llvm.load %471 : !llvm.ptr -> i64
    %c31_i64_194 = arith.constant 31 : i64
    %c32_i64_195 = arith.constant 32 : i64
    %473 = arith.addi %472, %c31_i64_194 : i64
    %474 = arith.divui %473, %c32_i64_195 : i64
    %475 = arith.muli %474, %c32_i64_193 : i64
    %476 = arith.cmpi ult, %475, %470 : i64
    cf.cond_br %476, ^bb131, ^bb130
  ^bb130:  // 2 preds: ^bb129, ^bb133
    cf.br ^bb63
  ^bb131:  // pred: ^bb129
    %c3_i64_196 = arith.constant 3 : i64
    %c512_i64_197 = arith.constant 512 : i64
    %477 = arith.muli %474, %474 : i64
    %478 = arith.divui %477, %c512_i64_197 : i64
    %479 = arith.muli %474, %c3_i64_196 : i64
    %480 = arith.addi %478, %479 : i64
    %c3_i64_198 = arith.constant 3 : i64
    %c512_i64_199 = arith.constant 512 : i64
    %481 = arith.muli %469, %469 : i64
    %482 = arith.divui %481, %c512_i64_199 : i64
    %483 = arith.muli %469, %c3_i64_198 : i64
    %484 = arith.addi %482, %483 : i64
    %485 = arith.subi %484, %480 : i64
    %486 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %487 = llvm.load %486 : !llvm.ptr -> i64
    %488 = arith.cmpi ult, %487, %485 : i64
    scf.if %488 {
    } else {
      %559 = arith.subi %487, %485 : i64
      llvm.store %559, %486 : i64, !llvm.ptr
    }
    %c80_i8_200 = arith.constant 80 : i8
    cf.cond_br %488, ^bb1(%c80_i8_200 : i8), ^bb132
  ^bb132:  // pred: ^bb131
    %489 = call @dora_fn_extend_memory(%arg0, %470) : (!llvm.ptr, i64) -> !llvm.ptr
    %490 = llvm.getelementptr %489[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %491 = llvm.load %490 : !llvm.ptr -> !llvm.ptr
    %492 = llvm.getelementptr %489[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %493 = llvm.load %492 : !llvm.ptr -> i8
    %c0_i8_201 = arith.constant 0 : i8
    %494 = arith.cmpi ne, %493, %c0_i8_201 : i8
    cf.cond_br %494, ^bb1(%493 : i8), ^bb133
  ^bb133:  // pred: ^bb132
    %495 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %491, %495 : !llvm.ptr, !llvm.ptr
    %496 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %470, %496 : i64, !llvm.ptr
    cf.br ^bb130
  ^bb134:  // pred: ^bb76
    %497 = arith.addi %256, %c32_i64_98 : i64
    %c0_i64_202 = arith.constant 0 : i64
    %498 = arith.cmpi slt, %497, %c0_i64_202 : i64
    %c84_i8_203 = arith.constant 84 : i8
    cf.cond_br %498, ^bb1(%c84_i8_203 : i8), ^bb135
  ^bb135:  // pred: ^bb134
    %c31_i64_204 = arith.constant 31 : i64
    %c32_i64_205 = arith.constant 32 : i64
    %499 = arith.addi %497, %c31_i64_204 : i64
    %500 = arith.divui %499, %c32_i64_205 : i64
    %c32_i64_206 = arith.constant 32 : i64
    %501 = arith.muli %500, %c32_i64_206 : i64
    %502 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %503 = llvm.load %502 : !llvm.ptr -> i64
    %c31_i64_207 = arith.constant 31 : i64
    %c32_i64_208 = arith.constant 32 : i64
    %504 = arith.addi %503, %c31_i64_207 : i64
    %505 = arith.divui %504, %c32_i64_208 : i64
    %506 = arith.muli %505, %c32_i64_206 : i64
    %507 = arith.cmpi ult, %506, %501 : i64
    cf.cond_br %507, ^bb137, ^bb136
  ^bb136:  // 2 preds: ^bb135, ^bb139
    cf.br ^bb77
  ^bb137:  // pred: ^bb135
    %c3_i64_209 = arith.constant 3 : i64
    %c512_i64_210 = arith.constant 512 : i64
    %508 = arith.muli %505, %505 : i64
    %509 = arith.divui %508, %c512_i64_210 : i64
    %510 = arith.muli %505, %c3_i64_209 : i64
    %511 = arith.addi %509, %510 : i64
    %c3_i64_211 = arith.constant 3 : i64
    %c512_i64_212 = arith.constant 512 : i64
    %512 = arith.muli %500, %500 : i64
    %513 = arith.divui %512, %c512_i64_212 : i64
    %514 = arith.muli %500, %c3_i64_211 : i64
    %515 = arith.addi %513, %514 : i64
    %516 = arith.subi %515, %511 : i64
    %517 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %518 = llvm.load %517 : !llvm.ptr -> i64
    %519 = arith.cmpi ult, %518, %516 : i64
    scf.if %519 {
    } else {
      %559 = arith.subi %518, %516 : i64
      llvm.store %559, %517 : i64, !llvm.ptr
    }
    %c80_i8_213 = arith.constant 80 : i8
    cf.cond_br %519, ^bb1(%c80_i8_213 : i8), ^bb138
  ^bb138:  // pred: ^bb137
    %520 = call @dora_fn_extend_memory(%arg0, %501) : (!llvm.ptr, i64) -> !llvm.ptr
    %521 = llvm.getelementptr %520[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %522 = llvm.load %521 : !llvm.ptr -> !llvm.ptr
    %523 = llvm.getelementptr %520[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %524 = llvm.load %523 : !llvm.ptr -> i8
    %c0_i8_214 = arith.constant 0 : i8
    %525 = arith.cmpi ne, %524, %c0_i8_214 : i8
    cf.cond_br %525, ^bb1(%524 : i8), ^bb139
  ^bb139:  // pred: ^bb138
    %526 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %522, %526 : !llvm.ptr, !llvm.ptr
    %527 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %501, %527 : i64, !llvm.ptr
    cf.br ^bb136
  ^bb140:  // pred: ^bb100
    %528 = arith.addi %343, %335 : i64
    %c0_i64_215 = arith.constant 0 : i64
    %529 = arith.cmpi slt, %528, %c0_i64_215 : i64
    %c84_i8_216 = arith.constant 84 : i8
    cf.cond_br %529, ^bb1(%c84_i8_216 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    %c31_i64_217 = arith.constant 31 : i64
    %c32_i64_218 = arith.constant 32 : i64
    %530 = arith.addi %528, %c31_i64_217 : i64
    %531 = arith.divui %530, %c32_i64_218 : i64
    %c32_i64_219 = arith.constant 32 : i64
    %532 = arith.muli %531, %c32_i64_219 : i64
    %533 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %534 = llvm.load %533 : !llvm.ptr -> i64
    %c31_i64_220 = arith.constant 31 : i64
    %c32_i64_221 = arith.constant 32 : i64
    %535 = arith.addi %534, %c31_i64_220 : i64
    %536 = arith.divui %535, %c32_i64_221 : i64
    %537 = arith.muli %536, %c32_i64_219 : i64
    %538 = arith.cmpi ult, %537, %532 : i64
    cf.cond_br %538, ^bb143, ^bb142
  ^bb142:  // 2 preds: ^bb141, ^bb145
    cf.br ^bb101
  ^bb143:  // pred: ^bb141
    %c3_i64_222 = arith.constant 3 : i64
    %c512_i64_223 = arith.constant 512 : i64
    %539 = arith.muli %536, %536 : i64
    %540 = arith.divui %539, %c512_i64_223 : i64
    %541 = arith.muli %536, %c3_i64_222 : i64
    %542 = arith.addi %540, %541 : i64
    %c3_i64_224 = arith.constant 3 : i64
    %c512_i64_225 = arith.constant 512 : i64
    %543 = arith.muli %531, %531 : i64
    %544 = arith.divui %543, %c512_i64_225 : i64
    %545 = arith.muli %531, %c3_i64_224 : i64
    %546 = arith.addi %544, %545 : i64
    %547 = arith.subi %546, %542 : i64
    %548 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %549 = llvm.load %548 : !llvm.ptr -> i64
    %550 = arith.cmpi ult, %549, %547 : i64
    scf.if %550 {
    } else {
      %559 = arith.subi %549, %547 : i64
      llvm.store %559, %548 : i64, !llvm.ptr
    }
    %c80_i8_226 = arith.constant 80 : i8
    cf.cond_br %550, ^bb1(%c80_i8_226 : i8), ^bb144
  ^bb144:  // pred: ^bb143
    %551 = call @dora_fn_extend_memory(%arg0, %532) : (!llvm.ptr, i64) -> !llvm.ptr
    %552 = llvm.getelementptr %551[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %553 = llvm.load %552 : !llvm.ptr -> !llvm.ptr
    %554 = llvm.getelementptr %551[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %555 = llvm.load %554 : !llvm.ptr -> i8
    %c0_i8_227 = arith.constant 0 : i8
    %556 = arith.cmpi ne, %555, %c0_i8_227 : i8
    cf.cond_br %556, ^bb1(%555 : i8), ^bb145
  ^bb145:  // pred: ^bb144
    %557 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %553, %557 : !llvm.ptr, !llvm.ptr
    %558 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %532, %558 : i64, !llvm.ptr
    cf.br ^bb142
  }
}
