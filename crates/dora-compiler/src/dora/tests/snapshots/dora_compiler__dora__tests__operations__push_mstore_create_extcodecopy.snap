---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    %1 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %2 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %1, %2 : !llvm.ptr, !llvm.ptr
    %3 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %4 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %3, %4 : i64, !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %5 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%6: i8):  // 85 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb38, ^bb39, ^bb41, ^bb42, ^bb43, ^bb45, ^bb46, ^bb47, ^bb49, ^bb50, ^bb53, ^bb54, ^bb57, ^bb58, ^bb62, ^bb63, ^bb66, ^bb67, ^bb70, ^bb71, ^bb75, ^bb76, ^bb79, ^bb80, ^bb83, ^bb84, ^bb87, ^bb88, ^bb91, ^bb92, ^bb94, ^bb95, ^bb96, ^bb98, ^bb100, ^bb101, ^bb104, ^bb105, ^bb106, ^bb109, ^bb110, ^bb112, ^bb113, ^bb114, ^bb117, ^bb118, ^bb120, ^bb121, ^bb122, ^bb123, ^bb124, ^bb127, ^bb128, ^bb130, ^bb131, ^bb132, ^bb135, ^bb136, ^bb138, ^bb139, ^bb140, ^bb143, ^bb144, ^bb146, ^bb147, ^bb148, ^bb151, ^bb152
    %c0_i64_0 = arith.constant 0 : i64
    %7 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %8 = llvm.load %7 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %8, %6) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %6 : i8
  ^bb2(%9: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %9 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %10 = llvm.load %arg3 : !llvm.ptr -> i64
    %11 = llvm.getelementptr %arg2[%10] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %12 = arith.addi %10, %c1_i64 : i64
    llvm.store %12, %arg3 : i64, !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %11 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %13 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %14 = arith.addi %13, %c1_i64_1 : i64
    %15 = arith.cmpi ult, %c1024_i64, %14 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %15, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %16 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %18 = arith.cmpi uge, %17, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %18, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %19 = arith.subi %17, %c3_i64 : i64
    llvm.store %19, %16 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %20 = llvm.load %arg3 : !llvm.ptr -> i64
    %21 = llvm.getelementptr %arg2[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %22 = arith.addi %20, %c1_i64_2 : i64
    llvm.store %22, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %21 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %23 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %24 = arith.addi %23, %c1_i64_4 : i64
    %25 = arith.cmpi ult, %c1024_i64_3, %24 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %25, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %26 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %27 = llvm.load %26 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %28 = arith.cmpi uge, %27, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %28, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %29 = arith.subi %27, %c3_i64_6 : i64
    llvm.store %29, %26 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %30 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %31 = arith.subi %30, %c1_i64_8 : i64
    %32 = llvm.getelementptr %arg2[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %31, %arg3 : i64, !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i256
    %34 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_9 = arith.constant 1 : i64
    %35 = arith.subi %34, %c1_i64_9 : i64
    %36 = llvm.getelementptr %arg2[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %35, %arg3 : i64, !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %38 = arith.cmpi ne, %c32_i64, %c0_i64_10 : i64
    cf.cond_br %38, ^bb104, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb108
    %39 = arith.trunci %33 : i256 to i64
    %40 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %43 = llvm.intr.bswap(%37)  : (i256) -> i256
    llvm.store %43, %42 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_11 = arith.constant 1024 : i64
    %44 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %45 = arith.addi %44, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %46 = arith.cmpi ult, %44, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %46, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %47 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %49 = arith.cmpi uge, %48, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %49, ^bb15, ^bb1(%c80_i8_13 : i8)
  ^bb15:  // pred: ^bb14
    %50 = arith.subi %48, %c3_i64_12 : i64
    llvm.store %50, %47 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c170141183460469231731687303715884105727_i256_14 = arith.constant 170141183460469231731687303715884105727 : i256
    %51 = llvm.load %arg3 : !llvm.ptr -> i64
    %52 = llvm.getelementptr %arg2[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_15 = arith.constant 1 : i64
    %53 = arith.addi %51, %c1_i64_15 : i64
    llvm.store %53, %arg3 : i64, !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_14, %52 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_16 = arith.constant 1024 : i64
    %54 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_17 = arith.constant 1 : i64
    %55 = arith.addi %54, %c1_i64_17 : i64
    %56 = arith.cmpi ult, %c1024_i64_16, %55 : i64
    %c92_i8_18 = arith.constant 92 : i8
    cf.cond_br %56, ^bb1(%c92_i8_18 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %57 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> i64
    %c3_i64_19 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %59 = arith.cmpi uge, %58, %c3_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %59, ^bb19, ^bb1(%c80_i8_20 : i8)
  ^bb19:  // pred: ^bb18
    %60 = arith.subi %58, %c3_i64_19 : i64
    llvm.store %60, %57 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c32_i256 = arith.constant 32 : i256
    %61 = llvm.load %arg3 : !llvm.ptr -> i64
    %62 = llvm.getelementptr %arg2[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_21 = arith.constant 1 : i64
    %63 = arith.addi %61, %c1_i64_21 : i64
    llvm.store %63, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256, %62 : i256, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %c1024_i64_22 = arith.constant 1024 : i64
    %64 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %65 = arith.addi %64, %c1_i64_23 : i64
    %66 = arith.cmpi ult, %c1024_i64_22, %65 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %66, ^bb1(%c92_i8_24 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %67 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %69 = arith.cmpi uge, %68, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %69, ^bb23, ^bb1(%c80_i8_26 : i8)
  ^bb23:  // pred: ^bb22
    %70 = arith.subi %68, %c3_i64_25 : i64
    llvm.store %70, %67 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %71 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_27 = arith.constant 1 : i64
    %72 = arith.subi %71, %c1_i64_27 : i64
    %73 = llvm.getelementptr %arg2[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %72, %arg3 : i64, !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> i256
    %75 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_28 = arith.constant 1 : i64
    %76 = arith.subi %75, %c1_i64_28 : i64
    %77 = llvm.getelementptr %arg2[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %76, %arg3 : i64, !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i256
    %c32_i64_29 = arith.constant 32 : i64
    %c0_i64_30 = arith.constant 0 : i64
    %79 = arith.cmpi ne, %c32_i64_29, %c0_i64_30 : i64
    cf.cond_br %79, ^bb112, ^bb25
  ^bb25:  // 2 preds: ^bb24, ^bb116
    %80 = arith.trunci %74 : i256 to i64
    %81 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    %83 = llvm.getelementptr %82[%80] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %84 = llvm.intr.bswap(%78)  : (i256) -> i256
    llvm.store %84, %83 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %c1024_i64_31 = arith.constant 1024 : i64
    %85 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_32 = arith.constant -2 : i64
    %86 = arith.addi %85, %c-2_i64_32 : i64
    %c2_i64_33 = arith.constant 2 : i64
    %87 = arith.cmpi ult, %85, %c2_i64_33 : i64
    %c91_i8_34 = arith.constant 91 : i8
    cf.cond_br %87, ^bb1(%c91_i8_34 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_35 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %90 = arith.cmpi uge, %89, %c3_i64_35 : i64
    %c80_i8_36 = arith.constant 80 : i8
    cf.cond_br %90, ^bb28, ^bb1(%c80_i8_36 : i8)
  ^bb28:  // pred: ^bb27
    %91 = arith.subi %89, %c3_i64_35 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c41_i256 = arith.constant 41 : i256
    %92 = llvm.load %arg3 : !llvm.ptr -> i64
    %93 = llvm.getelementptr %arg2[%92] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_37 = arith.constant 1 : i64
    %94 = arith.addi %92, %c1_i64_37 : i64
    llvm.store %94, %arg3 : i64, !llvm.ptr
    llvm.store %c41_i256, %93 : i256, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %c1024_i64_38 = arith.constant 1024 : i64
    %95 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_39 = arith.constant 1 : i64
    %96 = arith.addi %95, %c1_i64_39 : i64
    %97 = arith.cmpi ult, %c1024_i64_38, %96 : i64
    %c92_i8_40 = arith.constant 92 : i8
    cf.cond_br %97, ^bb1(%c92_i8_40 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %98 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> i64
    %c3_i64_41 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %100 = arith.cmpi uge, %99, %c3_i64_41 : i64
    %c80_i8_42 = arith.constant 80 : i8
    cf.cond_br %100, ^bb32, ^bb1(%c80_i8_42 : i8)
  ^bb32:  // pred: ^bb31
    %101 = arith.subi %99, %c3_i64_41 : i64
    llvm.store %101, %98 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %c0_i256_43 = arith.constant 0 : i256
    %102 = llvm.load %arg3 : !llvm.ptr -> i64
    %103 = llvm.getelementptr %arg2[%102] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_44 = arith.constant 1 : i64
    %104 = arith.addi %102, %c1_i64_44 : i64
    llvm.store %104, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_43, %103 : i256, !llvm.ptr
    cf.br ^bb39
  ^bb34:  // pred: ^bb36
    %c1024_i64_45 = arith.constant 1024 : i64
    %105 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %106 = arith.addi %105, %c1_i64_46 : i64
    %107 = arith.cmpi ult, %c1024_i64_45, %106 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %107, ^bb1(%c92_i8_47 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %108 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> i64
    %c3_i64_48 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %110 = arith.cmpi uge, %109, %c3_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %110, ^bb36, ^bb1(%c80_i8_49 : i8)
  ^bb36:  // pred: ^bb35
    %111 = arith.subi %109, %c3_i64_48 : i64
    llvm.store %111, %108 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb38
    %c0_i256_50 = arith.constant 0 : i256
    %112 = llvm.load %arg3 : !llvm.ptr -> i64
    %113 = llvm.getelementptr %arg2[%112] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_51 = arith.constant 1 : i64
    %114 = arith.addi %112, %c1_i64_51 : i64
    llvm.store %114, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_50, %113 : i256, !llvm.ptr
    cf.br ^bb50
  ^bb38:  // pred: ^bb40
    %c1024_i64_52 = arith.constant 1024 : i64
    %115 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_53 = arith.constant 1 : i64
    %116 = arith.addi %115, %c1_i64_53 : i64
    %117 = arith.cmpi ult, %c1024_i64_52, %116 : i64
    %c92_i8_54 = arith.constant 92 : i8
    cf.cond_br %117, ^bb1(%c92_i8_54 : i8), ^bb37
  ^bb39:  // pred: ^bb33
    %118 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c3_i64_55 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %120 = arith.cmpi uge, %119, %c3_i64_55 : i64
    %c80_i8_56 = arith.constant 80 : i8
    cf.cond_br %120, ^bb40, ^bb1(%c80_i8_56 : i8)
  ^bb40:  // pred: ^bb39
    %121 = arith.subi %119, %c3_i64_55 : i64
    llvm.store %121, %118 : i64, !llvm.ptr
    cf.br ^bb38
  ^bb41:  // pred: ^bb49
    %122 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_57 = arith.constant 1 : i64
    %123 = arith.subi %122, %c1_i64_57 : i64
    %124 = llvm.getelementptr %arg2[%123] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %123, %arg3 : i64, !llvm.ptr
    %125 = llvm.load %124 : !llvm.ptr -> i256
    %126 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %127 = arith.subi %126, %c1_i64_58 : i64
    %128 = llvm.getelementptr %arg2[%127] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %127, %arg3 : i64, !llvm.ptr
    %129 = llvm.load %128 : !llvm.ptr -> i256
    %130 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %131 = arith.subi %130, %c1_i64_59 : i64
    %132 = llvm.getelementptr %arg2[%131] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %131, %arg3 : i64, !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> i256
    %134 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %135 = arith.cmpi ne, %134, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %135, ^bb1(%c87_i8 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %136 = arith.cmpi sgt, %133, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %136, ^bb1(%c84_i8 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %137 = arith.trunci %133 : i256 to i64
    %c0_i64_60 = arith.constant 0 : i64
    %138 = arith.cmpi slt, %137, %c0_i64_60 : i64
    %c84_i8_61 = arith.constant 84 : i8
    cf.cond_br %138, ^bb1(%c84_i8_61 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c0_i64_62 = arith.constant 0 : i64
    %139 = arith.cmpi ne, %137, %c0_i64_62 : i64
    cf.cond_br %139, ^bb120, ^bb45
  ^bb45:  // 2 preds: ^bb44, ^bb126
    %c32000_i64 = arith.constant 32000 : i64
    %140 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %142 = arith.cmpi ult, %141, %c32000_i64 : i64
    scf.if %142 {
    } else {
      %550 = arith.subi %141, %c32000_i64 : i64
      llvm.store %550, %140 : i64, !llvm.ptr
    }
    %c80_i8_63 = arith.constant 80 : i8
    cf.cond_br %142, ^bb1(%c80_i8_63 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c1_i256 = arith.constant 1 : i256
    %143 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %125, %143 {alignment = 1 : i64} : i256, !llvm.ptr
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %146 = arith.trunci %129 : i256 to i64
    %147 = call @dora_fn_create(%arg0, %137, %146, %143, %145) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %148 = llvm.getelementptr %147[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %149 = llvm.load %148 : !llvm.ptr -> i8
    %c0_i8_64 = arith.constant 0 : i8
    %150 = arith.cmpi ne, %149, %c0_i8_64 : i8
    cf.cond_br %150, ^bb1(%149 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %151 = llvm.getelementptr %147[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %152 = llvm.load %151 : !llvm.ptr -> i64
    %153 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %154 = llvm.load %153 : !llvm.ptr -> i64
    %155 = arith.cmpi ult, %154, %152 : i64
    scf.if %155 {
    } else {
      %550 = arith.subi %154, %152 : i64
      llvm.store %550, %153 : i64, !llvm.ptr
    }
    %c80_i8_65 = arith.constant 80 : i8
    cf.cond_br %155, ^bb1(%c80_i8_65 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %156 = llvm.load %143 : !llvm.ptr -> i256
    %157 = llvm.load %arg3 : !llvm.ptr -> i64
    %158 = llvm.getelementptr %arg2[%157] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_66 = arith.constant 1 : i64
    %159 = arith.addi %157, %c1_i64_66 : i64
    llvm.store %159, %arg3 : i64, !llvm.ptr
    llvm.store %156, %158 : i256, !llvm.ptr
    cf.br ^bb54
  ^bb49:  // pred: ^bb51
    %c1024_i64_67 = arith.constant 1024 : i64
    %160 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_68 = arith.constant -2 : i64
    %161 = arith.addi %160, %c-2_i64_68 : i64
    %c3_i64_69 = arith.constant 3 : i64
    %162 = arith.cmpi ult, %160, %c3_i64_69 : i64
    %c91_i8_70 = arith.constant 91 : i8
    cf.cond_br %162, ^bb1(%c91_i8_70 : i8), ^bb41
  ^bb50:  // pred: ^bb37
    %163 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> i64
    %c0_i64_71 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %165 = arith.cmpi uge, %164, %c0_i64_71 : i64
    %c80_i8_72 = arith.constant 80 : i8
    cf.cond_br %165, ^bb51, ^bb1(%c80_i8_72 : i8)
  ^bb51:  // pred: ^bb50
    %166 = arith.subi %164, %c0_i64_71 : i64
    llvm.store %166, %163 : i64, !llvm.ptr
    cf.br ^bb49
  ^bb52:  // pred: ^bb53
    %c0_i256_73 = arith.constant 0 : i256
    %167 = llvm.load %arg3 : !llvm.ptr -> i64
    %168 = llvm.getelementptr %arg2[%167] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_74 = arith.constant 1 : i64
    %169 = arith.addi %167, %c1_i64_74 : i64
    llvm.store %169, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_73, %168 : i256, !llvm.ptr
    cf.br ^bb58
  ^bb53:  // pred: ^bb55
    %c1024_i64_75 = arith.constant 1024 : i64
    %170 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_76 = arith.constant 1 : i64
    %171 = arith.addi %170, %c1_i64_76 : i64
    %172 = arith.cmpi ult, %c1024_i64_75, %171 : i64
    %c92_i8_77 = arith.constant 92 : i8
    cf.cond_br %172, ^bb1(%c92_i8_77 : i8), ^bb52
  ^bb54:  // pred: ^bb48
    %173 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %c3_i64_78 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %175 = arith.cmpi uge, %174, %c3_i64_78 : i64
    %c80_i8_79 = arith.constant 80 : i8
    cf.cond_br %175, ^bb55, ^bb1(%c80_i8_79 : i8)
  ^bb55:  // pred: ^bb54
    %176 = arith.subi %174, %c3_i64_78 : i64
    llvm.store %176, %173 : i64, !llvm.ptr
    cf.br ^bb53
  ^bb56:  // pred: ^bb57
    %c0_i256_80 = arith.constant 0 : i256
    %177 = llvm.load %arg3 : !llvm.ptr -> i64
    %178 = llvm.getelementptr %arg2[%177] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_81 = arith.constant 1 : i64
    %179 = arith.addi %177, %c1_i64_81 : i64
    llvm.store %179, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_80, %178 : i256, !llvm.ptr
    cf.br ^bb63
  ^bb57:  // pred: ^bb59
    %c1024_i64_82 = arith.constant 1024 : i64
    %180 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_83 = arith.constant 1 : i64
    %181 = arith.addi %180, %c1_i64_83 : i64
    %182 = arith.cmpi ult, %c1024_i64_82, %181 : i64
    %c92_i8_84 = arith.constant 92 : i8
    cf.cond_br %182, ^bb1(%c92_i8_84 : i8), ^bb56
  ^bb58:  // pred: ^bb52
    %183 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> i64
    %c3_i64_85 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %185 = arith.cmpi uge, %184, %c3_i64_85 : i64
    %c80_i8_86 = arith.constant 80 : i8
    cf.cond_br %185, ^bb59, ^bb1(%c80_i8_86 : i8)
  ^bb59:  // pred: ^bb58
    %186 = arith.subi %184, %c3_i64_85 : i64
    llvm.store %186, %183 : i64, !llvm.ptr
    cf.br ^bb57
  ^bb60:  // pred: ^bb62
    %187 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_87 = arith.constant 1 : i64
    %188 = arith.subi %187, %c1_i64_87 : i64
    %189 = llvm.getelementptr %arg2[%188] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %188, %arg3 : i64, !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> i256
    %191 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_88 = arith.constant 1 : i64
    %192 = arith.subi %191, %c1_i64_88 : i64
    %193 = llvm.getelementptr %arg2[%192] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %192, %arg3 : i64, !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> i256
    %c32_i64_89 = arith.constant 32 : i64
    %c0_i64_90 = arith.constant 0 : i64
    %195 = arith.cmpi ne, %c32_i64_89, %c0_i64_90 : i64
    cf.cond_br %195, ^bb130, ^bb61
  ^bb61:  // 2 preds: ^bb60, ^bb134
    %196 = arith.trunci %190 : i256 to i64
    %197 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %198 = llvm.load %197 : !llvm.ptr -> !llvm.ptr
    %199 = llvm.getelementptr %198[%196] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %200 = llvm.intr.bswap(%194)  : (i256) -> i256
    llvm.store %200, %199 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb67
  ^bb62:  // pred: ^bb64
    %c1024_i64_91 = arith.constant 1024 : i64
    %201 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_92 = arith.constant -2 : i64
    %202 = arith.addi %201, %c-2_i64_92 : i64
    %c2_i64_93 = arith.constant 2 : i64
    %203 = arith.cmpi ult, %201, %c2_i64_93 : i64
    %c91_i8_94 = arith.constant 91 : i8
    cf.cond_br %203, ^bb1(%c91_i8_94 : i8), ^bb60
  ^bb63:  // pred: ^bb56
    %204 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> i64
    %c3_i64_95 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %206 = arith.cmpi uge, %205, %c3_i64_95 : i64
    %c80_i8_96 = arith.constant 80 : i8
    cf.cond_br %206, ^bb64, ^bb1(%c80_i8_96 : i8)
  ^bb64:  // pred: ^bb63
    %207 = arith.subi %205, %c3_i64_95 : i64
    llvm.store %207, %204 : i64, !llvm.ptr
    cf.br ^bb62
  ^bb65:  // pred: ^bb66
    %c0_i256_97 = arith.constant 0 : i256
    %208 = llvm.load %arg3 : !llvm.ptr -> i64
    %209 = llvm.getelementptr %arg2[%208] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_98 = arith.constant 1 : i64
    %210 = arith.addi %208, %c1_i64_98 : i64
    llvm.store %210, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_97, %209 : i256, !llvm.ptr
    cf.br ^bb71
  ^bb66:  // pred: ^bb68
    %c1024_i64_99 = arith.constant 1024 : i64
    %211 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_100 = arith.constant 1 : i64
    %212 = arith.addi %211, %c1_i64_100 : i64
    %213 = arith.cmpi ult, %c1024_i64_99, %212 : i64
    %c92_i8_101 = arith.constant 92 : i8
    cf.cond_br %213, ^bb1(%c92_i8_101 : i8), ^bb65
  ^bb67:  // pred: ^bb61
    %214 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %215 = llvm.load %214 : !llvm.ptr -> i64
    %c3_i64_102 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %216 = arith.cmpi uge, %215, %c3_i64_102 : i64
    %c80_i8_103 = arith.constant 80 : i8
    cf.cond_br %216, ^bb68, ^bb1(%c80_i8_103 : i8)
  ^bb68:  // pred: ^bb67
    %217 = arith.subi %215, %c3_i64_102 : i64
    llvm.store %217, %214 : i64, !llvm.ptr
    cf.br ^bb66
  ^bb69:  // pred: ^bb70
    %c32_i256_104 = arith.constant 32 : i256
    %218 = llvm.load %arg3 : !llvm.ptr -> i64
    %219 = llvm.getelementptr %arg2[%218] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_105 = arith.constant 1 : i64
    %220 = arith.addi %218, %c1_i64_105 : i64
    llvm.store %220, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256_104, %219 : i256, !llvm.ptr
    cf.br ^bb76
  ^bb70:  // pred: ^bb72
    %c1024_i64_106 = arith.constant 1024 : i64
    %221 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_107 = arith.constant 1 : i64
    %222 = arith.addi %221, %c1_i64_107 : i64
    %223 = arith.cmpi ult, %c1024_i64_106, %222 : i64
    %c92_i8_108 = arith.constant 92 : i8
    cf.cond_br %223, ^bb1(%c92_i8_108 : i8), ^bb69
  ^bb71:  // pred: ^bb65
    %224 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %225 = llvm.load %224 : !llvm.ptr -> i64
    %c3_i64_109 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %226 = arith.cmpi uge, %225, %c3_i64_109 : i64
    %c80_i8_110 = arith.constant 80 : i8
    cf.cond_br %226, ^bb72, ^bb1(%c80_i8_110 : i8)
  ^bb72:  // pred: ^bb71
    %227 = arith.subi %225, %c3_i64_109 : i64
    llvm.store %227, %224 : i64, !llvm.ptr
    cf.br ^bb70
  ^bb73:  // pred: ^bb75
    %228 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_111 = arith.constant 1 : i64
    %229 = arith.subi %228, %c1_i64_111 : i64
    %230 = llvm.getelementptr %arg2[%229] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %229, %arg3 : i64, !llvm.ptr
    %231 = llvm.load %230 : !llvm.ptr -> i256
    %232 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_112 = arith.constant 1 : i64
    %233 = arith.subi %232, %c1_i64_112 : i64
    %234 = llvm.getelementptr %arg2[%233] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %233, %arg3 : i64, !llvm.ptr
    %235 = llvm.load %234 : !llvm.ptr -> i256
    %c32_i64_113 = arith.constant 32 : i64
    %c0_i64_114 = arith.constant 0 : i64
    %236 = arith.cmpi ne, %c32_i64_113, %c0_i64_114 : i64
    cf.cond_br %236, ^bb138, ^bb74
  ^bb74:  // 2 preds: ^bb73, ^bb142
    %237 = arith.trunci %231 : i256 to i64
    %238 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %239 = llvm.load %238 : !llvm.ptr -> !llvm.ptr
    %240 = llvm.getelementptr %239[%237] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %241 = llvm.intr.bswap(%235)  : (i256) -> i256
    llvm.store %241, %240 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb80
  ^bb75:  // pred: ^bb77
    %c1024_i64_115 = arith.constant 1024 : i64
    %242 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_116 = arith.constant -2 : i64
    %243 = arith.addi %242, %c-2_i64_116 : i64
    %c2_i64_117 = arith.constant 2 : i64
    %244 = arith.cmpi ult, %242, %c2_i64_117 : i64
    %c91_i8_118 = arith.constant 91 : i8
    cf.cond_br %244, ^bb1(%c91_i8_118 : i8), ^bb73
  ^bb76:  // pred: ^bb69
    %245 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %246 = llvm.load %245 : !llvm.ptr -> i64
    %c3_i64_119 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %247 = arith.cmpi uge, %246, %c3_i64_119 : i64
    %c80_i8_120 = arith.constant 80 : i8
    cf.cond_br %247, ^bb77, ^bb1(%c80_i8_120 : i8)
  ^bb77:  // pred: ^bb76
    %248 = arith.subi %246, %c3_i64_119 : i64
    llvm.store %248, %245 : i64, !llvm.ptr
    cf.br ^bb75
  ^bb78:  // pred: ^bb79
    %c32_i256_121 = arith.constant 32 : i256
    %249 = llvm.load %arg3 : !llvm.ptr -> i64
    %250 = llvm.getelementptr %arg2[%249] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_122 = arith.constant 1 : i64
    %251 = arith.addi %249, %c1_i64_122 : i64
    llvm.store %251, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256_121, %250 : i256, !llvm.ptr
    cf.br ^bb84
  ^bb79:  // pred: ^bb81
    %c1024_i64_123 = arith.constant 1024 : i64
    %252 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_124 = arith.constant 1 : i64
    %253 = arith.addi %252, %c1_i64_124 : i64
    %254 = arith.cmpi ult, %c1024_i64_123, %253 : i64
    %c92_i8_125 = arith.constant 92 : i8
    cf.cond_br %254, ^bb1(%c92_i8_125 : i8), ^bb78
  ^bb80:  // pred: ^bb74
    %255 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %256 = llvm.load %255 : !llvm.ptr -> i64
    %c3_i64_126 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %257 = arith.cmpi uge, %256, %c3_i64_126 : i64
    %c80_i8_127 = arith.constant 80 : i8
    cf.cond_br %257, ^bb81, ^bb1(%c80_i8_127 : i8)
  ^bb81:  // pred: ^bb80
    %258 = arith.subi %256, %c3_i64_126 : i64
    llvm.store %258, %255 : i64, !llvm.ptr
    cf.br ^bb79
  ^bb82:  // pred: ^bb83
    %c0_i256_128 = arith.constant 0 : i256
    %259 = llvm.load %arg3 : !llvm.ptr -> i64
    %260 = llvm.getelementptr %arg2[%259] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_129 = arith.constant 1 : i64
    %261 = arith.addi %259, %c1_i64_129 : i64
    llvm.store %261, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_128, %260 : i256, !llvm.ptr
    cf.br ^bb88
  ^bb83:  // pred: ^bb85
    %c1024_i64_130 = arith.constant 1024 : i64
    %262 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_131 = arith.constant 1 : i64
    %263 = arith.addi %262, %c1_i64_131 : i64
    %264 = arith.cmpi ult, %c1024_i64_130, %263 : i64
    %c92_i8_132 = arith.constant 92 : i8
    cf.cond_br %264, ^bb1(%c92_i8_132 : i8), ^bb82
  ^bb84:  // pred: ^bb78
    %265 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %266 = llvm.load %265 : !llvm.ptr -> i64
    %c3_i64_133 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %267 = arith.cmpi uge, %266, %c3_i64_133 : i64
    %c80_i8_134 = arith.constant 80 : i8
    cf.cond_br %267, ^bb85, ^bb1(%c80_i8_134 : i8)
  ^bb85:  // pred: ^bb84
    %268 = arith.subi %266, %c3_i64_133 : i64
    llvm.store %268, %265 : i64, !llvm.ptr
    cf.br ^bb83
  ^bb86:  // pred: ^bb87
    %c0_i256_135 = arith.constant 0 : i256
    %269 = llvm.load %arg3 : !llvm.ptr -> i64
    %270 = llvm.getelementptr %arg2[%269] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_136 = arith.constant 1 : i64
    %271 = arith.addi %269, %c1_i64_136 : i64
    llvm.store %271, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_135, %270 : i256, !llvm.ptr
    cf.br ^bb92
  ^bb87:  // pred: ^bb89
    %c1024_i64_137 = arith.constant 1024 : i64
    %272 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_138 = arith.constant 1 : i64
    %273 = arith.addi %272, %c1_i64_138 : i64
    %274 = arith.cmpi ult, %c1024_i64_137, %273 : i64
    %c92_i8_139 = arith.constant 92 : i8
    cf.cond_br %274, ^bb1(%c92_i8_139 : i8), ^bb86
  ^bb88:  // pred: ^bb82
    %275 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %276 = llvm.load %275 : !llvm.ptr -> i64
    %c3_i64_140 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %277 = arith.cmpi uge, %276, %c3_i64_140 : i64
    %c80_i8_141 = arith.constant 80 : i8
    cf.cond_br %277, ^bb89, ^bb1(%c80_i8_141 : i8)
  ^bb89:  // pred: ^bb88
    %278 = arith.subi %276, %c3_i64_140 : i64
    llvm.store %278, %275 : i64, !llvm.ptr
    cf.br ^bb87
  ^bb90:  // pred: ^bb91
    %279 = llvm.load %arg3 : !llvm.ptr -> i64
    %280 = llvm.getelementptr %arg2[%279] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %281 = llvm.getelementptr %280[-4] : (!llvm.ptr) -> !llvm.ptr, i256
    %282 = llvm.load %281 : !llvm.ptr -> i256
    %283 = llvm.load %arg3 : !llvm.ptr -> i64
    %284 = llvm.getelementptr %arg2[%283] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_142 = arith.constant 1 : i64
    %285 = arith.addi %283, %c1_i64_142 : i64
    llvm.store %285, %arg3 : i64, !llvm.ptr
    llvm.store %282, %284 : i256, !llvm.ptr
    cf.br ^bb101
  ^bb91:  // pred: ^bb93
    %c1024_i64_143 = arith.constant 1024 : i64
    %286 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_144 = arith.constant 1 : i64
    %287 = arith.addi %286, %c1_i64_144 : i64
    %c4_i64 = arith.constant 4 : i64
    %288 = arith.cmpi ult, %286, %c4_i64 : i64
    %289 = arith.cmpi ult, %c1024_i64_143, %287 : i64
    %290 = arith.xori %288, %289 : i1
    %c92_i8_145 = arith.constant 92 : i8
    cf.cond_br %290, ^bb1(%c92_i8_145 : i8), ^bb90
  ^bb92:  // pred: ^bb86
    %291 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %292 = llvm.load %291 : !llvm.ptr -> i64
    %c3_i64_146 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %293 = arith.cmpi uge, %292, %c3_i64_146 : i64
    %c80_i8_147 = arith.constant 80 : i8
    cf.cond_br %293, ^bb93, ^bb1(%c80_i8_147 : i8)
  ^bb93:  // pred: ^bb92
    %294 = arith.subi %292, %c3_i64_146 : i64
    llvm.store %294, %291 : i64, !llvm.ptr
    cf.br ^bb91
  ^bb94:  // pred: ^bb100
    %295 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_148 = arith.constant 1 : i64
    %296 = arith.subi %295, %c1_i64_148 : i64
    %297 = llvm.getelementptr %arg2[%296] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %296, %arg3 : i64, !llvm.ptr
    %298 = llvm.load %297 : !llvm.ptr -> i256
    %299 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_149 = arith.constant 1 : i64
    %300 = arith.subi %299, %c1_i64_149 : i64
    %301 = llvm.getelementptr %arg2[%300] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %300, %arg3 : i64, !llvm.ptr
    %302 = llvm.load %301 : !llvm.ptr -> i256
    %303 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_150 = arith.constant 1 : i64
    %304 = arith.subi %303, %c1_i64_150 : i64
    %305 = llvm.getelementptr %arg2[%304] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %304, %arg3 : i64, !llvm.ptr
    %306 = llvm.load %305 : !llvm.ptr -> i256
    %307 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_151 = arith.constant 1 : i64
    %308 = arith.subi %307, %c1_i64_151 : i64
    %309 = llvm.getelementptr %arg2[%308] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %308, %arg3 : i64, !llvm.ptr
    %310 = llvm.load %309 : !llvm.ptr -> i256
    %c18446744073709551615_i256_152 = arith.constant 18446744073709551615 : i256
    %311 = arith.cmpi sgt, %310, %c18446744073709551615_i256_152 : i256
    %c84_i8_153 = arith.constant 84 : i8
    cf.cond_br %311, ^bb1(%c84_i8_153 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %312 = arith.trunci %310 : i256 to i64
    %c0_i64_154 = arith.constant 0 : i64
    %313 = arith.cmpi slt, %312, %c0_i64_154 : i64
    %c84_i8_155 = arith.constant 84 : i8
    cf.cond_br %313, ^bb1(%c84_i8_155 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_156 = arith.constant 32 : i64
    %314 = arith.addi %312, %c31_i64 : i64
    %315 = arith.divui %314, %c32_i64_156 : i64
    %c3_i64_157 = arith.constant 3 : i64
    %316 = arith.muli %315, %c3_i64_157 : i64
    %317 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %318 = llvm.load %317 : !llvm.ptr -> i64
    %319 = arith.cmpi ult, %318, %316 : i64
    scf.if %319 {
    } else {
      %550 = arith.subi %318, %316 : i64
      llvm.store %550, %317 : i64, !llvm.ptr
    }
    %c80_i8_158 = arith.constant 80 : i8
    cf.cond_br %319, ^bb1(%c80_i8_158 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %c0_i64_159 = arith.constant 0 : i64
    %320 = arith.cmpi ne, %312, %c0_i64_159 : i64
    cf.cond_br %320, ^bb146, ^bb98
  ^bb98:  // 2 preds: ^bb97, ^bb150
    %321 = arith.trunci %302 : i256 to i64
    %c1_i256_160 = arith.constant 1 : i256
    %322 = llvm.alloca %c1_i256_160 x i256 : (i256) -> !llvm.ptr
    llvm.store %298, %322 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_161 = arith.constant 1 : i256
    %323 = llvm.alloca %c1_i256_161 x i256 : (i256) -> !llvm.ptr
    llvm.store %306, %323 {alignment = 1 : i64} : i256, !llvm.ptr
    %324 = call @dora_fn_ext_code_copy(%arg0, %322, %323, %312, %321) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
    %325 = llvm.getelementptr %324[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %326 = llvm.load %325 : !llvm.ptr -> i64
    %327 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %328 = llvm.load %327 : !llvm.ptr -> i64
    %329 = arith.cmpi ult, %328, %326 : i64
    scf.if %329 {
    } else {
      %550 = arith.subi %328, %326 : i64
      llvm.store %550, %327 : i64, !llvm.ptr
    }
    %c80_i8_162 = arith.constant 80 : i8
    cf.cond_br %329, ^bb1(%c80_i8_162 : i8), ^bb99
  ^bb99:  // pred: ^bb98
    cf.br ^bb103
  ^bb100:  // pred: ^bb102
    %c1024_i64_163 = arith.constant 1024 : i64
    %330 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-4_i64 = arith.constant -4 : i64
    %331 = arith.addi %330, %c-4_i64 : i64
    %c4_i64_164 = arith.constant 4 : i64
    %332 = arith.cmpi ult, %330, %c4_i64_164 : i64
    %c91_i8_165 = arith.constant 91 : i8
    cf.cond_br %332, ^bb1(%c91_i8_165 : i8), ^bb94
  ^bb101:  // pred: ^bb90
    %333 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %334 = llvm.load %333 : !llvm.ptr -> i64
    %c0_i64_166 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %335 = arith.cmpi uge, %334, %c0_i64_166 : i64
    %c80_i8_167 = arith.constant 80 : i8
    cf.cond_br %335, ^bb102, ^bb1(%c80_i8_167 : i8)
  ^bb102:  // pred: ^bb101
    %336 = arith.subi %334, %c0_i64_166 : i64
    llvm.store %336, %333 : i64, !llvm.ptr
    cf.br ^bb100
  ^bb103:  // pred: ^bb99
    %c0_i64_168 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %337 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %338 = llvm.load %337 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_168, %c0_i64_168, %338, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb104:  // pred: ^bb11
    %c18446744073709551615_i256_169 = arith.constant 18446744073709551615 : i256
    %339 = arith.cmpi sgt, %33, %c18446744073709551615_i256_169 : i256
    %c84_i8_170 = arith.constant 84 : i8
    cf.cond_br %339, ^bb1(%c84_i8_170 : i8), ^bb105
  ^bb105:  // pred: ^bb104
    %340 = arith.trunci %33 : i256 to i64
    %c0_i64_171 = arith.constant 0 : i64
    %341 = arith.cmpi slt, %340, %c0_i64_171 : i64
    %c84_i8_172 = arith.constant 84 : i8
    cf.cond_br %341, ^bb1(%c84_i8_172 : i8), ^bb106
  ^bb106:  // pred: ^bb105
    %342 = arith.addi %340, %c32_i64 : i64
    %c0_i64_173 = arith.constant 0 : i64
    %343 = arith.cmpi slt, %342, %c0_i64_173 : i64
    %c84_i8_174 = arith.constant 84 : i8
    cf.cond_br %343, ^bb1(%c84_i8_174 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %c31_i64_175 = arith.constant 31 : i64
    %c32_i64_176 = arith.constant 32 : i64
    %344 = arith.addi %342, %c31_i64_175 : i64
    %345 = arith.divui %344, %c32_i64_176 : i64
    %c32_i64_177 = arith.constant 32 : i64
    %346 = arith.muli %345, %c32_i64_177 : i64
    %347 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %348 = llvm.load %347 : !llvm.ptr -> i64
    %c31_i64_178 = arith.constant 31 : i64
    %c32_i64_179 = arith.constant 32 : i64
    %349 = arith.addi %348, %c31_i64_178 : i64
    %350 = arith.divui %349, %c32_i64_179 : i64
    %351 = arith.muli %350, %c32_i64_177 : i64
    %352 = arith.cmpi ult, %351, %346 : i64
    cf.cond_br %352, ^bb109, ^bb108
  ^bb108:  // 2 preds: ^bb107, ^bb111
    cf.br ^bb12
  ^bb109:  // pred: ^bb107
    %c3_i64_180 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %353 = arith.muli %350, %350 : i64
    %354 = arith.divui %353, %c512_i64 : i64
    %355 = arith.muli %350, %c3_i64_180 : i64
    %356 = arith.addi %354, %355 : i64
    %c3_i64_181 = arith.constant 3 : i64
    %c512_i64_182 = arith.constant 512 : i64
    %357 = arith.muli %345, %345 : i64
    %358 = arith.divui %357, %c512_i64_182 : i64
    %359 = arith.muli %345, %c3_i64_181 : i64
    %360 = arith.addi %358, %359 : i64
    %361 = arith.subi %360, %356 : i64
    %362 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %363 = llvm.load %362 : !llvm.ptr -> i64
    %364 = arith.cmpi ult, %363, %361 : i64
    scf.if %364 {
    } else {
      %550 = arith.subi %363, %361 : i64
      llvm.store %550, %362 : i64, !llvm.ptr
    }
    %c80_i8_183 = arith.constant 80 : i8
    cf.cond_br %364, ^bb1(%c80_i8_183 : i8), ^bb110
  ^bb110:  // pred: ^bb109
    %365 = call @dora_fn_extend_memory(%arg0, %346) : (!llvm.ptr, i64) -> !llvm.ptr
    %366 = llvm.getelementptr %365[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %367 = llvm.load %366 : !llvm.ptr -> !llvm.ptr
    %368 = llvm.getelementptr %365[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %369 = llvm.load %368 : !llvm.ptr -> i8
    %c0_i8_184 = arith.constant 0 : i8
    %370 = arith.cmpi ne, %369, %c0_i8_184 : i8
    cf.cond_br %370, ^bb1(%369 : i8), ^bb111
  ^bb111:  // pred: ^bb110
    %371 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %367, %371 : !llvm.ptr, !llvm.ptr
    %372 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %346, %372 : i64, !llvm.ptr
    cf.br ^bb108
  ^bb112:  // pred: ^bb24
    %c18446744073709551615_i256_185 = arith.constant 18446744073709551615 : i256
    %373 = arith.cmpi sgt, %74, %c18446744073709551615_i256_185 : i256
    %c84_i8_186 = arith.constant 84 : i8
    cf.cond_br %373, ^bb1(%c84_i8_186 : i8), ^bb113
  ^bb113:  // pred: ^bb112
    %374 = arith.trunci %74 : i256 to i64
    %c0_i64_187 = arith.constant 0 : i64
    %375 = arith.cmpi slt, %374, %c0_i64_187 : i64
    %c84_i8_188 = arith.constant 84 : i8
    cf.cond_br %375, ^bb1(%c84_i8_188 : i8), ^bb114
  ^bb114:  // pred: ^bb113
    %376 = arith.addi %374, %c32_i64_29 : i64
    %c0_i64_189 = arith.constant 0 : i64
    %377 = arith.cmpi slt, %376, %c0_i64_189 : i64
    %c84_i8_190 = arith.constant 84 : i8
    cf.cond_br %377, ^bb1(%c84_i8_190 : i8), ^bb115
  ^bb115:  // pred: ^bb114
    %c31_i64_191 = arith.constant 31 : i64
    %c32_i64_192 = arith.constant 32 : i64
    %378 = arith.addi %376, %c31_i64_191 : i64
    %379 = arith.divui %378, %c32_i64_192 : i64
    %c32_i64_193 = arith.constant 32 : i64
    %380 = arith.muli %379, %c32_i64_193 : i64
    %381 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %382 = llvm.load %381 : !llvm.ptr -> i64
    %c31_i64_194 = arith.constant 31 : i64
    %c32_i64_195 = arith.constant 32 : i64
    %383 = arith.addi %382, %c31_i64_194 : i64
    %384 = arith.divui %383, %c32_i64_195 : i64
    %385 = arith.muli %384, %c32_i64_193 : i64
    %386 = arith.cmpi ult, %385, %380 : i64
    cf.cond_br %386, ^bb117, ^bb116
  ^bb116:  // 2 preds: ^bb115, ^bb119
    cf.br ^bb25
  ^bb117:  // pred: ^bb115
    %c3_i64_196 = arith.constant 3 : i64
    %c512_i64_197 = arith.constant 512 : i64
    %387 = arith.muli %384, %384 : i64
    %388 = arith.divui %387, %c512_i64_197 : i64
    %389 = arith.muli %384, %c3_i64_196 : i64
    %390 = arith.addi %388, %389 : i64
    %c3_i64_198 = arith.constant 3 : i64
    %c512_i64_199 = arith.constant 512 : i64
    %391 = arith.muli %379, %379 : i64
    %392 = arith.divui %391, %c512_i64_199 : i64
    %393 = arith.muli %379, %c3_i64_198 : i64
    %394 = arith.addi %392, %393 : i64
    %395 = arith.subi %394, %390 : i64
    %396 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %397 = llvm.load %396 : !llvm.ptr -> i64
    %398 = arith.cmpi ult, %397, %395 : i64
    scf.if %398 {
    } else {
      %550 = arith.subi %397, %395 : i64
      llvm.store %550, %396 : i64, !llvm.ptr
    }
    %c80_i8_200 = arith.constant 80 : i8
    cf.cond_br %398, ^bb1(%c80_i8_200 : i8), ^bb118
  ^bb118:  // pred: ^bb117
    %399 = call @dora_fn_extend_memory(%arg0, %380) : (!llvm.ptr, i64) -> !llvm.ptr
    %400 = llvm.getelementptr %399[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %401 = llvm.load %400 : !llvm.ptr -> !llvm.ptr
    %402 = llvm.getelementptr %399[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %403 = llvm.load %402 : !llvm.ptr -> i8
    %c0_i8_201 = arith.constant 0 : i8
    %404 = arith.cmpi ne, %403, %c0_i8_201 : i8
    cf.cond_br %404, ^bb1(%403 : i8), ^bb119
  ^bb119:  // pred: ^bb118
    %405 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %401, %405 : !llvm.ptr, !llvm.ptr
    %406 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %380, %406 : i64, !llvm.ptr
    cf.br ^bb116
  ^bb120:  // pred: ^bb44
    %c49152_i64 = arith.constant 49152 : i64
    %407 = arith.cmpi ugt, %137, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %407, ^bb1(%c100_i8 : i8), ^bb121
  ^bb121:  // pred: ^bb120
    %c31_i64_202 = arith.constant 31 : i64
    %c32_i64_203 = arith.constant 32 : i64
    %408 = arith.addi %137, %c31_i64_202 : i64
    %409 = arith.divui %408, %c32_i64_203 : i64
    %c2_i64_204 = arith.constant 2 : i64
    %410 = arith.muli %409, %c2_i64_204 : i64
    %411 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %412 = llvm.load %411 : !llvm.ptr -> i64
    %413 = arith.cmpi ult, %412, %410 : i64
    scf.if %413 {
    } else {
      %550 = arith.subi %412, %410 : i64
      llvm.store %550, %411 : i64, !llvm.ptr
    }
    %c80_i8_205 = arith.constant 80 : i8
    cf.cond_br %413, ^bb1(%c80_i8_205 : i8), ^bb122
  ^bb122:  // pred: ^bb121
    %c18446744073709551615_i256_206 = arith.constant 18446744073709551615 : i256
    %414 = arith.cmpi sgt, %129, %c18446744073709551615_i256_206 : i256
    %c84_i8_207 = arith.constant 84 : i8
    cf.cond_br %414, ^bb1(%c84_i8_207 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %415 = arith.trunci %129 : i256 to i64
    %c0_i64_208 = arith.constant 0 : i64
    %416 = arith.cmpi slt, %415, %c0_i64_208 : i64
    %c84_i8_209 = arith.constant 84 : i8
    cf.cond_br %416, ^bb1(%c84_i8_209 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %417 = arith.addi %415, %137 : i64
    %c0_i64_210 = arith.constant 0 : i64
    %418 = arith.cmpi slt, %417, %c0_i64_210 : i64
    %c84_i8_211 = arith.constant 84 : i8
    cf.cond_br %418, ^bb1(%c84_i8_211 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %c31_i64_212 = arith.constant 31 : i64
    %c32_i64_213 = arith.constant 32 : i64
    %419 = arith.addi %417, %c31_i64_212 : i64
    %420 = arith.divui %419, %c32_i64_213 : i64
    %c32_i64_214 = arith.constant 32 : i64
    %421 = arith.muli %420, %c32_i64_214 : i64
    %422 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %423 = llvm.load %422 : !llvm.ptr -> i64
    %c31_i64_215 = arith.constant 31 : i64
    %c32_i64_216 = arith.constant 32 : i64
    %424 = arith.addi %423, %c31_i64_215 : i64
    %425 = arith.divui %424, %c32_i64_216 : i64
    %426 = arith.muli %425, %c32_i64_214 : i64
    %427 = arith.cmpi ult, %426, %421 : i64
    cf.cond_br %427, ^bb127, ^bb126
  ^bb126:  // 2 preds: ^bb125, ^bb129
    cf.br ^bb45
  ^bb127:  // pred: ^bb125
    %c3_i64_217 = arith.constant 3 : i64
    %c512_i64_218 = arith.constant 512 : i64
    %428 = arith.muli %425, %425 : i64
    %429 = arith.divui %428, %c512_i64_218 : i64
    %430 = arith.muli %425, %c3_i64_217 : i64
    %431 = arith.addi %429, %430 : i64
    %c3_i64_219 = arith.constant 3 : i64
    %c512_i64_220 = arith.constant 512 : i64
    %432 = arith.muli %420, %420 : i64
    %433 = arith.divui %432, %c512_i64_220 : i64
    %434 = arith.muli %420, %c3_i64_219 : i64
    %435 = arith.addi %433, %434 : i64
    %436 = arith.subi %435, %431 : i64
    %437 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %438 = llvm.load %437 : !llvm.ptr -> i64
    %439 = arith.cmpi ult, %438, %436 : i64
    scf.if %439 {
    } else {
      %550 = arith.subi %438, %436 : i64
      llvm.store %550, %437 : i64, !llvm.ptr
    }
    %c80_i8_221 = arith.constant 80 : i8
    cf.cond_br %439, ^bb1(%c80_i8_221 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %440 = call @dora_fn_extend_memory(%arg0, %421) : (!llvm.ptr, i64) -> !llvm.ptr
    %441 = llvm.getelementptr %440[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %442 = llvm.load %441 : !llvm.ptr -> !llvm.ptr
    %443 = llvm.getelementptr %440[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %444 = llvm.load %443 : !llvm.ptr -> i8
    %c0_i8_222 = arith.constant 0 : i8
    %445 = arith.cmpi ne, %444, %c0_i8_222 : i8
    cf.cond_br %445, ^bb1(%444 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    %446 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %442, %446 : !llvm.ptr, !llvm.ptr
    %447 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %421, %447 : i64, !llvm.ptr
    cf.br ^bb126
  ^bb130:  // pred: ^bb60
    %c18446744073709551615_i256_223 = arith.constant 18446744073709551615 : i256
    %448 = arith.cmpi sgt, %190, %c18446744073709551615_i256_223 : i256
    %c84_i8_224 = arith.constant 84 : i8
    cf.cond_br %448, ^bb1(%c84_i8_224 : i8), ^bb131
  ^bb131:  // pred: ^bb130
    %449 = arith.trunci %190 : i256 to i64
    %c0_i64_225 = arith.constant 0 : i64
    %450 = arith.cmpi slt, %449, %c0_i64_225 : i64
    %c84_i8_226 = arith.constant 84 : i8
    cf.cond_br %450, ^bb1(%c84_i8_226 : i8), ^bb132
  ^bb132:  // pred: ^bb131
    %451 = arith.addi %449, %c32_i64_89 : i64
    %c0_i64_227 = arith.constant 0 : i64
    %452 = arith.cmpi slt, %451, %c0_i64_227 : i64
    %c84_i8_228 = arith.constant 84 : i8
    cf.cond_br %452, ^bb1(%c84_i8_228 : i8), ^bb133
  ^bb133:  // pred: ^bb132
    %c31_i64_229 = arith.constant 31 : i64
    %c32_i64_230 = arith.constant 32 : i64
    %453 = arith.addi %451, %c31_i64_229 : i64
    %454 = arith.divui %453, %c32_i64_230 : i64
    %c32_i64_231 = arith.constant 32 : i64
    %455 = arith.muli %454, %c32_i64_231 : i64
    %456 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %457 = llvm.load %456 : !llvm.ptr -> i64
    %c31_i64_232 = arith.constant 31 : i64
    %c32_i64_233 = arith.constant 32 : i64
    %458 = arith.addi %457, %c31_i64_232 : i64
    %459 = arith.divui %458, %c32_i64_233 : i64
    %460 = arith.muli %459, %c32_i64_231 : i64
    %461 = arith.cmpi ult, %460, %455 : i64
    cf.cond_br %461, ^bb135, ^bb134
  ^bb134:  // 2 preds: ^bb133, ^bb137
    cf.br ^bb61
  ^bb135:  // pred: ^bb133
    %c3_i64_234 = arith.constant 3 : i64
    %c512_i64_235 = arith.constant 512 : i64
    %462 = arith.muli %459, %459 : i64
    %463 = arith.divui %462, %c512_i64_235 : i64
    %464 = arith.muli %459, %c3_i64_234 : i64
    %465 = arith.addi %463, %464 : i64
    %c3_i64_236 = arith.constant 3 : i64
    %c512_i64_237 = arith.constant 512 : i64
    %466 = arith.muli %454, %454 : i64
    %467 = arith.divui %466, %c512_i64_237 : i64
    %468 = arith.muli %454, %c3_i64_236 : i64
    %469 = arith.addi %467, %468 : i64
    %470 = arith.subi %469, %465 : i64
    %471 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %472 = llvm.load %471 : !llvm.ptr -> i64
    %473 = arith.cmpi ult, %472, %470 : i64
    scf.if %473 {
    } else {
      %550 = arith.subi %472, %470 : i64
      llvm.store %550, %471 : i64, !llvm.ptr
    }
    %c80_i8_238 = arith.constant 80 : i8
    cf.cond_br %473, ^bb1(%c80_i8_238 : i8), ^bb136
  ^bb136:  // pred: ^bb135
    %474 = call @dora_fn_extend_memory(%arg0, %455) : (!llvm.ptr, i64) -> !llvm.ptr
    %475 = llvm.getelementptr %474[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %476 = llvm.load %475 : !llvm.ptr -> !llvm.ptr
    %477 = llvm.getelementptr %474[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %478 = llvm.load %477 : !llvm.ptr -> i8
    %c0_i8_239 = arith.constant 0 : i8
    %479 = arith.cmpi ne, %478, %c0_i8_239 : i8
    cf.cond_br %479, ^bb1(%478 : i8), ^bb137
  ^bb137:  // pred: ^bb136
    %480 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %476, %480 : !llvm.ptr, !llvm.ptr
    %481 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %455, %481 : i64, !llvm.ptr
    cf.br ^bb134
  ^bb138:  // pred: ^bb73
    %c18446744073709551615_i256_240 = arith.constant 18446744073709551615 : i256
    %482 = arith.cmpi sgt, %231, %c18446744073709551615_i256_240 : i256
    %c84_i8_241 = arith.constant 84 : i8
    cf.cond_br %482, ^bb1(%c84_i8_241 : i8), ^bb139
  ^bb139:  // pred: ^bb138
    %483 = arith.trunci %231 : i256 to i64
    %c0_i64_242 = arith.constant 0 : i64
    %484 = arith.cmpi slt, %483, %c0_i64_242 : i64
    %c84_i8_243 = arith.constant 84 : i8
    cf.cond_br %484, ^bb1(%c84_i8_243 : i8), ^bb140
  ^bb140:  // pred: ^bb139
    %485 = arith.addi %483, %c32_i64_113 : i64
    %c0_i64_244 = arith.constant 0 : i64
    %486 = arith.cmpi slt, %485, %c0_i64_244 : i64
    %c84_i8_245 = arith.constant 84 : i8
    cf.cond_br %486, ^bb1(%c84_i8_245 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    %c31_i64_246 = arith.constant 31 : i64
    %c32_i64_247 = arith.constant 32 : i64
    %487 = arith.addi %485, %c31_i64_246 : i64
    %488 = arith.divui %487, %c32_i64_247 : i64
    %c32_i64_248 = arith.constant 32 : i64
    %489 = arith.muli %488, %c32_i64_248 : i64
    %490 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %491 = llvm.load %490 : !llvm.ptr -> i64
    %c31_i64_249 = arith.constant 31 : i64
    %c32_i64_250 = arith.constant 32 : i64
    %492 = arith.addi %491, %c31_i64_249 : i64
    %493 = arith.divui %492, %c32_i64_250 : i64
    %494 = arith.muli %493, %c32_i64_248 : i64
    %495 = arith.cmpi ult, %494, %489 : i64
    cf.cond_br %495, ^bb143, ^bb142
  ^bb142:  // 2 preds: ^bb141, ^bb145
    cf.br ^bb74
  ^bb143:  // pred: ^bb141
    %c3_i64_251 = arith.constant 3 : i64
    %c512_i64_252 = arith.constant 512 : i64
    %496 = arith.muli %493, %493 : i64
    %497 = arith.divui %496, %c512_i64_252 : i64
    %498 = arith.muli %493, %c3_i64_251 : i64
    %499 = arith.addi %497, %498 : i64
    %c3_i64_253 = arith.constant 3 : i64
    %c512_i64_254 = arith.constant 512 : i64
    %500 = arith.muli %488, %488 : i64
    %501 = arith.divui %500, %c512_i64_254 : i64
    %502 = arith.muli %488, %c3_i64_253 : i64
    %503 = arith.addi %501, %502 : i64
    %504 = arith.subi %503, %499 : i64
    %505 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %506 = llvm.load %505 : !llvm.ptr -> i64
    %507 = arith.cmpi ult, %506, %504 : i64
    scf.if %507 {
    } else {
      %550 = arith.subi %506, %504 : i64
      llvm.store %550, %505 : i64, !llvm.ptr
    }
    %c80_i8_255 = arith.constant 80 : i8
    cf.cond_br %507, ^bb1(%c80_i8_255 : i8), ^bb144
  ^bb144:  // pred: ^bb143
    %508 = call @dora_fn_extend_memory(%arg0, %489) : (!llvm.ptr, i64) -> !llvm.ptr
    %509 = llvm.getelementptr %508[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %510 = llvm.load %509 : !llvm.ptr -> !llvm.ptr
    %511 = llvm.getelementptr %508[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %512 = llvm.load %511 : !llvm.ptr -> i8
    %c0_i8_256 = arith.constant 0 : i8
    %513 = arith.cmpi ne, %512, %c0_i8_256 : i8
    cf.cond_br %513, ^bb1(%512 : i8), ^bb145
  ^bb145:  // pred: ^bb144
    %514 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %510, %514 : !llvm.ptr, !llvm.ptr
    %515 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %489, %515 : i64, !llvm.ptr
    cf.br ^bb142
  ^bb146:  // pred: ^bb97
    %c18446744073709551615_i256_257 = arith.constant 18446744073709551615 : i256
    %516 = arith.cmpi sgt, %302, %c18446744073709551615_i256_257 : i256
    %c84_i8_258 = arith.constant 84 : i8
    cf.cond_br %516, ^bb1(%c84_i8_258 : i8), ^bb147
  ^bb147:  // pred: ^bb146
    %517 = arith.trunci %302 : i256 to i64
    %c0_i64_259 = arith.constant 0 : i64
    %518 = arith.cmpi slt, %517, %c0_i64_259 : i64
    %c84_i8_260 = arith.constant 84 : i8
    cf.cond_br %518, ^bb1(%c84_i8_260 : i8), ^bb148
  ^bb148:  // pred: ^bb147
    %519 = arith.addi %517, %312 : i64
    %c0_i64_261 = arith.constant 0 : i64
    %520 = arith.cmpi slt, %519, %c0_i64_261 : i64
    %c84_i8_262 = arith.constant 84 : i8
    cf.cond_br %520, ^bb1(%c84_i8_262 : i8), ^bb149
  ^bb149:  // pred: ^bb148
    %c31_i64_263 = arith.constant 31 : i64
    %c32_i64_264 = arith.constant 32 : i64
    %521 = arith.addi %519, %c31_i64_263 : i64
    %522 = arith.divui %521, %c32_i64_264 : i64
    %c32_i64_265 = arith.constant 32 : i64
    %523 = arith.muli %522, %c32_i64_265 : i64
    %524 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %525 = llvm.load %524 : !llvm.ptr -> i64
    %c31_i64_266 = arith.constant 31 : i64
    %c32_i64_267 = arith.constant 32 : i64
    %526 = arith.addi %525, %c31_i64_266 : i64
    %527 = arith.divui %526, %c32_i64_267 : i64
    %528 = arith.muli %527, %c32_i64_265 : i64
    %529 = arith.cmpi ult, %528, %523 : i64
    cf.cond_br %529, ^bb151, ^bb150
  ^bb150:  // 2 preds: ^bb149, ^bb153
    cf.br ^bb98
  ^bb151:  // pred: ^bb149
    %c3_i64_268 = arith.constant 3 : i64
    %c512_i64_269 = arith.constant 512 : i64
    %530 = arith.muli %527, %527 : i64
    %531 = arith.divui %530, %c512_i64_269 : i64
    %532 = arith.muli %527, %c3_i64_268 : i64
    %533 = arith.addi %531, %532 : i64
    %c3_i64_270 = arith.constant 3 : i64
    %c512_i64_271 = arith.constant 512 : i64
    %534 = arith.muli %522, %522 : i64
    %535 = arith.divui %534, %c512_i64_271 : i64
    %536 = arith.muli %522, %c3_i64_270 : i64
    %537 = arith.addi %535, %536 : i64
    %538 = arith.subi %537, %533 : i64
    %539 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %540 = llvm.load %539 : !llvm.ptr -> i64
    %541 = arith.cmpi ult, %540, %538 : i64
    scf.if %541 {
    } else {
      %550 = arith.subi %540, %538 : i64
      llvm.store %550, %539 : i64, !llvm.ptr
    }
    %c80_i8_272 = arith.constant 80 : i8
    cf.cond_br %541, ^bb1(%c80_i8_272 : i8), ^bb152
  ^bb152:  // pred: ^bb151
    %542 = call @dora_fn_extend_memory(%arg0, %523) : (!llvm.ptr, i64) -> !llvm.ptr
    %543 = llvm.getelementptr %542[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %544 = llvm.load %543 : !llvm.ptr -> !llvm.ptr
    %545 = llvm.getelementptr %542[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %546 = llvm.load %545 : !llvm.ptr -> i8
    %c0_i8_273 = arith.constant 0 : i8
    %547 = arith.cmpi ne, %546, %c0_i8_273 : i8
    cf.cond_br %547, ^bb1(%546 : i8), ^bb153
  ^bb153:  // pred: ^bb152
    %548 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %544, %548 : !llvm.ptr, !llvm.ptr
    %549 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %523, %549 : i64, !llvm.ptr
    cf.br ^bb150
  }
}
