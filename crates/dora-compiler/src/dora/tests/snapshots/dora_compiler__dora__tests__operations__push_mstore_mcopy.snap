---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 23 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb13, ^bb15, ^bb16, ^bb19, ^bb20, ^bb23, ^bb24, ^bb27, ^bb28, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb36, ^bb37
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c255_i256 = arith.constant 255 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c255_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c32_i256 = arith.constant 32 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb16
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb15
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %46 = arith.addi %44, %c32_i64 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %47 = arith.cmpi slt, %46, %c0_i64_8 : i64
    %c84_i8_9 = arith.constant 84 : i8
    cf.cond_br %47, ^bb1(%c84_i8_9 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_10 = arith.constant 32 : i64
    %48 = arith.addi %46, %c31_i64 : i64
    %49 = arith.divui %48, %c32_i64_10 : i64
    %50 = arith.muli %49, %c32_i64_10 : i64
    %51 = call @dora_fn_extend_memory(%arg0, %50) : (!llvm.ptr, i64) -> !llvm.ptr
    %52 = llvm.getelementptr %51[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %53 = llvm.load %52 : !llvm.ptr -> !llvm.ptr
    %54 = llvm.getelementptr %51[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %55 = llvm.load %54 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %56 = arith.cmpi ne, %55, %c0_i8 : i8
    cf.cond_br %56, ^bb1(%55 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %57 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %53, %57 : !llvm.ptr, !llvm.ptr
    %58 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %50, %58 : i64, !llvm.ptr
    %59 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %60 = llvm.load %59 : !llvm.ptr -> !llvm.ptr
    %61 = llvm.getelementptr %60[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %62 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %62, %61 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb20
  ^bb15:  // pred: ^bb17
    %63 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_11 = arith.constant 1024 : i64
    %64 = llvm.load %63 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %65 = arith.addi %64, %c-2_i64 : i64
    llvm.store %65, %63 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %66 = arith.cmpi ult, %64, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %66, ^bb1(%c91_i8 : i8), ^bb11
  ^bb16:  // pred: ^bb7
    %67 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    %69 = arith.cmpi uge, %68, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %69, ^bb17, ^bb1(%c80_i8_13 : i8)
  ^bb17:  // pred: ^bb16
    %70 = arith.subi %68, %c3_i64_12 : i64
    llvm.store %70, %67 : i64, !llvm.ptr
    cf.br ^bb15
  ^bb18:  // pred: ^bb19
    %c32_i256_14 = arith.constant 32 : i256
    %71 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %72 = llvm.load %71 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_14, %72 : i256, !llvm.ptr
    %73 = llvm.getelementptr %72[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %73, %71 : !llvm.ptr, !llvm.ptr
    cf.br ^bb24
  ^bb19:  // pred: ^bb21
    %74 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_15 = arith.constant 1024 : i64
    %75 = llvm.load %74 : !llvm.ptr -> i64
    %c1_i64_16 = arith.constant 1 : i64
    %76 = arith.addi %75, %c1_i64_16 : i64
    llvm.store %76, %74 : i64, !llvm.ptr
    %77 = arith.cmpi ult, %c1024_i64_15, %76 : i64
    %c92_i8_17 = arith.constant 92 : i8
    cf.cond_br %77, ^bb1(%c92_i8_17 : i8), ^bb18
  ^bb20:  // pred: ^bb14
    %78 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %79 = llvm.load %78 : !llvm.ptr -> i64
    %c3_i64_18 = arith.constant 3 : i64
    %80 = arith.cmpi uge, %79, %c3_i64_18 : i64
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %80, ^bb21, ^bb1(%c80_i8_19 : i8)
  ^bb21:  // pred: ^bb20
    %81 = arith.subi %79, %c3_i64_18 : i64
    llvm.store %81, %78 : i64, !llvm.ptr
    cf.br ^bb19
  ^bb22:  // pred: ^bb23
    %c32_i256_20 = arith.constant 32 : i256
    %82 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %83 = llvm.load %82 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_20, %83 : i256, !llvm.ptr
    %84 = llvm.getelementptr %83[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %84, %82 : !llvm.ptr, !llvm.ptr
    cf.br ^bb28
  ^bb23:  // pred: ^bb25
    %85 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_21 = arith.constant 1024 : i64
    %86 = llvm.load %85 : !llvm.ptr -> i64
    %c1_i64_22 = arith.constant 1 : i64
    %87 = arith.addi %86, %c1_i64_22 : i64
    llvm.store %87, %85 : i64, !llvm.ptr
    %88 = arith.cmpi ult, %c1024_i64_21, %87 : i64
    %c92_i8_23 = arith.constant 92 : i8
    cf.cond_br %88, ^bb1(%c92_i8_23 : i8), ^bb22
  ^bb24:  // pred: ^bb18
    %89 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %90 = llvm.load %89 : !llvm.ptr -> i64
    %c3_i64_24 = arith.constant 3 : i64
    %91 = arith.cmpi uge, %90, %c3_i64_24 : i64
    %c80_i8_25 = arith.constant 80 : i8
    cf.cond_br %91, ^bb25, ^bb1(%c80_i8_25 : i8)
  ^bb25:  // pred: ^bb24
    %92 = arith.subi %90, %c3_i64_24 : i64
    llvm.store %92, %89 : i64, !llvm.ptr
    cf.br ^bb23
  ^bb26:  // pred: ^bb27
    %c0_i256 = arith.constant 0 : i256
    %93 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %94 = llvm.load %93 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %94 : i256, !llvm.ptr
    %95 = llvm.getelementptr %94[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %95, %93 : !llvm.ptr, !llvm.ptr
    cf.br ^bb37
  ^bb27:  // pred: ^bb29
    %96 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_26 = arith.constant 1024 : i64
    %97 = llvm.load %96 : !llvm.ptr -> i64
    %c1_i64_27 = arith.constant 1 : i64
    %98 = arith.addi %97, %c1_i64_27 : i64
    llvm.store %98, %96 : i64, !llvm.ptr
    %99 = arith.cmpi ult, %c1024_i64_26, %98 : i64
    %c92_i8_28 = arith.constant 92 : i8
    cf.cond_br %99, ^bb1(%c92_i8_28 : i8), ^bb26
  ^bb28:  // pred: ^bb22
    %100 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> i64
    %c3_i64_29 = arith.constant 3 : i64
    %102 = arith.cmpi uge, %101, %c3_i64_29 : i64
    %c80_i8_30 = arith.constant 80 : i8
    cf.cond_br %102, ^bb29, ^bb1(%c80_i8_30 : i8)
  ^bb29:  // pred: ^bb28
    %103 = arith.subi %101, %c3_i64_29 : i64
    llvm.store %103, %100 : i64, !llvm.ptr
    cf.br ^bb27
  ^bb30:  // pred: ^bb36
    %104 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> !llvm.ptr
    %106 = llvm.getelementptr %105[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %107 = llvm.load %106 : !llvm.ptr -> i256
    llvm.store %106, %104 : !llvm.ptr, !llvm.ptr
    %108 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> !llvm.ptr
    %110 = llvm.getelementptr %109[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %111 = llvm.load %110 : !llvm.ptr -> i256
    llvm.store %110, %108 : !llvm.ptr, !llvm.ptr
    %112 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> !llvm.ptr
    %114 = llvm.getelementptr %113[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %115 = llvm.load %114 : !llvm.ptr -> i256
    llvm.store %114, %112 : !llvm.ptr, !llvm.ptr
    %116 = arith.trunci %107 : i256 to i64
    %c0_i64_31 = arith.constant 0 : i64
    %117 = arith.cmpi slt, %116, %c0_i64_31 : i64
    %c84_i8_32 = arith.constant 84 : i8
    cf.cond_br %117, ^bb1(%c84_i8_32 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %118 = arith.trunci %111 : i256 to i64
    %c0_i64_33 = arith.constant 0 : i64
    %119 = arith.cmpi slt, %118, %c0_i64_33 : i64
    %c84_i8_34 = arith.constant 84 : i8
    cf.cond_br %119, ^bb1(%c84_i8_34 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %120 = arith.trunci %115 : i256 to i64
    %c0_i64_35 = arith.constant 0 : i64
    %121 = arith.cmpi slt, %120, %c0_i64_35 : i64
    %c84_i8_36 = arith.constant 84 : i8
    cf.cond_br %121, ^bb1(%c84_i8_36 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %122 = arith.maxui %116, %118 : i64
    %123 = arith.addi %122, %120 : i64
    %c0_i64_37 = arith.constant 0 : i64
    %124 = arith.cmpi slt, %123, %c0_i64_37 : i64
    %c84_i8_38 = arith.constant 84 : i8
    cf.cond_br %124, ^bb1(%c84_i8_38 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c31_i64_39 = arith.constant 31 : i64
    %c32_i64_40 = arith.constant 32 : i64
    %125 = arith.addi %123, %c31_i64_39 : i64
    %126 = arith.divui %125, %c32_i64_40 : i64
    %127 = arith.muli %126, %c32_i64_40 : i64
    %128 = call @dora_fn_extend_memory(%arg0, %127) : (!llvm.ptr, i64) -> !llvm.ptr
    %129 = llvm.getelementptr %128[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %130 = llvm.load %129 : !llvm.ptr -> !llvm.ptr
    %131 = llvm.getelementptr %128[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %132 = llvm.load %131 : !llvm.ptr -> i8
    %c0_i8_41 = arith.constant 0 : i8
    %133 = arith.cmpi ne, %132, %c0_i8_41 : i8
    cf.cond_br %133, ^bb1(%132 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %134 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %130, %134 : !llvm.ptr, !llvm.ptr
    %135 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %127, %135 : i64, !llvm.ptr
    %136 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %137[%122] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %139 = llvm.getelementptr %137[%116] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    "llvm.intr.memmove"(%139, %138, %120) <{isVolatile = false}> : (!llvm.ptr, !llvm.ptr, i64) -> ()
    cf.br ^bb39
  ^bb36:  // pred: ^bb38
    %140 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %c-3_i64 = arith.constant -3 : i64
    %142 = arith.addi %141, %c-3_i64 : i64
    llvm.store %142, %140 : i64, !llvm.ptr
    %c3_i64_43 = arith.constant 3 : i64
    %143 = arith.cmpi ult, %141, %c3_i64_43 : i64
    %c91_i8_44 = arith.constant 91 : i8
    cf.cond_br %143, ^bb1(%c91_i8_44 : i8), ^bb30
  ^bb37:  // pred: ^bb26
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    %146 = arith.cmpi uge, %145, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %146, ^bb38, ^bb1(%c80_i8_46 : i8)
  ^bb38:  // pred: ^bb37
    %147 = arith.subi %145, %c3_i64_45 : i64
    llvm.store %147, %144 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb35
    %c0_i64_47 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %148 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> i64
    %150 = call @dora_fn_write_result(%arg0, %c0_i64_47, %c0_i64_47, %149, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
