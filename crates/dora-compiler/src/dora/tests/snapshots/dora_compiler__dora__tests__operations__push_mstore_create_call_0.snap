---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_memory_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_memory_size(!llvm.ptr) -> i64
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: !llvm.ptr, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    cf.br ^bb5
  ^bb1(%0: i8):  // 66 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb34, ^bb36, ^bb37, ^bb40, ^bb41, ^bb44, ^bb45, ^bb48, ^bb49, ^bb52, ^bb53, ^bb56, ^bb57, ^bb60, ^bb61, ^bb64, ^bb65, ^bb67, ^bb68, ^bb69, ^bb71, ^bb72, ^bb74, ^bb75, ^bb77, ^bb78, ^bb81, ^bb82, ^bb83, ^bb86, ^bb87, ^bb89, ^bb90, ^bb91, ^bb92, ^bb93, ^bb96, ^bb97, ^bb99, ^bb100, ^bb101, ^bb104, ^bb105, ^bb107, ^bb108, ^bb109, ^bb112, ^bb113
    %c0_i64 = arith.constant 0 : i64
    %1 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64, %c0_i64, %1, %0) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %0 : i8
  ^bb2(%2: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %2 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %3 = llvm.load %arg3 : !llvm.ptr -> i64
    %4 = llvm.getelementptr %arg2[%3] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %5 = arith.addi %3, %c1_i64 : i64
    llvm.store %5, %arg3 : i64, !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %4 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %6 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_0 = arith.constant 1 : i64
    %7 = arith.addi %6, %c1_i64_0 : i64
    %8 = arith.cmpi ult, %c1024_i64, %7 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %8, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %9 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %10 = arith.cmpi uge, %9, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %10, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %11 = arith.subi %9, %c3_i64 : i64
    llvm.store %11, %arg1 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %12 = llvm.load %arg3 : !llvm.ptr -> i64
    %13 = llvm.getelementptr %arg2[%12] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_1 = arith.constant 1 : i64
    %14 = arith.addi %12, %c1_i64_1 : i64
    llvm.store %14, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %13 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_2 = arith.constant 1024 : i64
    %15 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %16 = arith.addi %15, %c1_i64_3 : i64
    %17 = arith.cmpi ult, %c1024_i64_2, %16 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %17, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %18 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %19 = arith.cmpi uge, %18, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %19, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %20 = arith.subi %18, %c3_i64_5 : i64
    llvm.store %20, %arg1 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %21 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_7 = arith.constant 1 : i64
    %22 = arith.subi %21, %c1_i64_7 : i64
    %23 = llvm.getelementptr %arg2[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %22, %arg3 : i64, !llvm.ptr
    %24 = llvm.load %23 : !llvm.ptr -> i256
    %25 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %26 = arith.subi %25, %c1_i64_8 : i64
    %27 = llvm.getelementptr %arg2[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %26, %arg3 : i64, !llvm.ptr
    %28 = llvm.load %27 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_9 = arith.constant 0 : i64
    %29 = arith.cmpi ne, %c32_i64, %c0_i64_9 : i64
    cf.cond_br %29, ^bb81, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb85
    %30 = arith.trunci %24 : i256 to i64
    %31 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %32 = llvm.getelementptr %31[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.intr.bswap(%28)  : (i256) -> i256
    llvm.store %33, %32 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_10 = arith.constant 1024 : i64
    %34 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %35 = arith.addi %34, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %36 = arith.cmpi ult, %34, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %36, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %37 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_11 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %38 = arith.cmpi uge, %37, %c3_i64_11 : i64
    %c80_i8_12 = arith.constant 80 : i8
    cf.cond_br %38, ^bb15, ^bb1(%c80_i8_12 : i8)
  ^bb15:  // pred: ^bb14
    %39 = arith.subi %37, %c3_i64_11 : i64
    llvm.store %39, %arg1 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c17_i256 = arith.constant 17 : i256
    %40 = llvm.load %arg3 : !llvm.ptr -> i64
    %41 = llvm.getelementptr %arg2[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_13 = arith.constant 1 : i64
    %42 = arith.addi %40, %c1_i64_13 : i64
    llvm.store %42, %arg3 : i64, !llvm.ptr
    llvm.store %c17_i256, %41 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_14 = arith.constant 1024 : i64
    %43 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_15 = arith.constant 1 : i64
    %44 = arith.addi %43, %c1_i64_15 : i64
    %45 = arith.cmpi ult, %c1024_i64_14, %44 : i64
    %c92_i8_16 = arith.constant 92 : i8
    cf.cond_br %45, ^bb1(%c92_i8_16 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %46 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_17 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %47 = arith.cmpi uge, %46, %c3_i64_17 : i64
    %c80_i8_18 = arith.constant 80 : i8
    cf.cond_br %47, ^bb19, ^bb1(%c80_i8_18 : i8)
  ^bb19:  // pred: ^bb18
    %48 = arith.subi %46, %c3_i64_17 : i64
    llvm.store %48, %arg1 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c15_i256 = arith.constant 15 : i256
    %49 = llvm.load %arg3 : !llvm.ptr -> i64
    %50 = llvm.getelementptr %arg2[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_19 = arith.constant 1 : i64
    %51 = arith.addi %49, %c1_i64_19 : i64
    llvm.store %51, %arg3 : i64, !llvm.ptr
    llvm.store %c15_i256, %50 : i256, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %c1024_i64_20 = arith.constant 1024 : i64
    %52 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_21 = arith.constant 1 : i64
    %53 = arith.addi %52, %c1_i64_21 : i64
    %54 = arith.cmpi ult, %c1024_i64_20, %53 : i64
    %c92_i8_22 = arith.constant 92 : i8
    cf.cond_br %54, ^bb1(%c92_i8_22 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %55 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_23 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %56 = arith.cmpi uge, %55, %c3_i64_23 : i64
    %c80_i8_24 = arith.constant 80 : i8
    cf.cond_br %56, ^bb23, ^bb1(%c80_i8_24 : i8)
  ^bb23:  // pred: ^bb22
    %57 = arith.subi %55, %c3_i64_23 : i64
    llvm.store %57, %arg1 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_25 = arith.constant 0 : i256
    %58 = llvm.load %arg3 : !llvm.ptr -> i64
    %59 = llvm.getelementptr %arg2[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_26 = arith.constant 1 : i64
    %60 = arith.addi %58, %c1_i64_26 : i64
    llvm.store %60, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_25, %59 : i256, !llvm.ptr
    cf.br ^bb37
  ^bb25:  // pred: ^bb27
    %c1024_i64_27 = arith.constant 1024 : i64
    %61 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_28 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_28 : i64
    %63 = arith.cmpi ult, %c1024_i64_27, %62 : i64
    %c92_i8_29 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_29 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %64 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_30 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %65 = arith.cmpi uge, %64, %c3_i64_30 : i64
    %c80_i8_31 = arith.constant 80 : i8
    cf.cond_br %65, ^bb27, ^bb1(%c80_i8_31 : i8)
  ^bb27:  // pred: ^bb26
    %66 = arith.subi %64, %c3_i64_30 : i64
    llvm.store %66, %arg1 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb36
    %67 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_32 = arith.constant 1 : i64
    %68 = arith.subi %67, %c1_i64_32 : i64
    %69 = llvm.getelementptr %arg2[%68] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %68, %arg3 : i64, !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> i256
    %71 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_33 = arith.constant 1 : i64
    %72 = arith.subi %71, %c1_i64_33 : i64
    %73 = llvm.getelementptr %arg2[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %72, %arg3 : i64, !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> i256
    %75 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %76 = arith.subi %75, %c1_i64_34 : i64
    %77 = llvm.getelementptr %arg2[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %76, %arg3 : i64, !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i256
    %79 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %80 = arith.cmpi ne, %79, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %80, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %81 = arith.cmpi sgt, %78, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %81, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %82 = arith.trunci %78 : i256 to i64
    %c0_i64_35 = arith.constant 0 : i64
    %83 = arith.cmpi slt, %82, %c0_i64_35 : i64
    %c84_i8_36 = arith.constant 84 : i8
    cf.cond_br %83, ^bb1(%c84_i8_36 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i64_37 = arith.constant 0 : i64
    %84 = arith.cmpi ne, %82, %c0_i64_37 : i64
    cf.cond_br %84, ^bb89, ^bb32
  ^bb32:  // 2 preds: ^bb31, ^bb95
    %c32000_i64 = arith.constant 32000 : i64
    %85 = llvm.load %arg1 : !llvm.ptr -> i64
    %86 = arith.cmpi ult, %85, %c32000_i64 : i64
    scf.if %86 {
    } else {
      %362 = arith.subi %85, %c32000_i64 : i64
      llvm.store %362, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_38 = arith.constant 80 : i8
    cf.cond_br %86, ^bb1(%c80_i8_38 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c1_i256 = arith.constant 1 : i256
    %87 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %70, %87 {alignment = 1 : i64} : i256, !llvm.ptr
    %88 = llvm.load %arg1 : !llvm.ptr -> i64
    %89 = arith.trunci %74 : i256 to i64
    %90 = call @dora_fn_create(%arg0, %82, %89, %87, %88) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %91 = llvm.getelementptr %90[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %92 = llvm.load %91 : !llvm.ptr -> i8
    %c0_i8_39 = arith.constant 0 : i8
    %93 = arith.cmpi ne, %92, %c0_i8_39 : i8
    cf.cond_br %93, ^bb1(%92 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %94 = llvm.getelementptr %90[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %95 = llvm.load %94 : !llvm.ptr -> i64
    %96 = llvm.load %arg1 : !llvm.ptr -> i64
    %97 = arith.cmpi ult, %96, %95 : i64
    scf.if %97 {
    } else {
      %362 = arith.subi %96, %95 : i64
      llvm.store %362, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %97, ^bb1(%c80_i8_40 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %98 = llvm.load %87 : !llvm.ptr -> i256
    %99 = llvm.load %arg3 : !llvm.ptr -> i64
    %100 = llvm.getelementptr %arg2[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_41 = arith.constant 1 : i64
    %101 = arith.addi %99, %c1_i64_41 : i64
    llvm.store %101, %arg3 : i64, !llvm.ptr
    llvm.store %98, %100 : i256, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %c1024_i64_42 = arith.constant 1024 : i64
    %102 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_43 = arith.constant -2 : i64
    %103 = arith.addi %102, %c-2_i64_43 : i64
    %c3_i64_44 = arith.constant 3 : i64
    %104 = arith.cmpi ult, %102, %c3_i64_44 : i64
    %c91_i8_45 = arith.constant 91 : i8
    cf.cond_br %104, ^bb1(%c91_i8_45 : i8), ^bb28
  ^bb37:  // pred: ^bb24
    %105 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_46 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %106 = arith.cmpi uge, %105, %c0_i64_46 : i64
    %c80_i8_47 = arith.constant 80 : i8
    cf.cond_br %106, ^bb38, ^bb1(%c80_i8_47 : i8)
  ^bb38:  // pred: ^bb37
    %107 = arith.subi %105, %c0_i64_46 : i64
    llvm.store %107, %arg1 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_48 = arith.constant 0 : i256
    %108 = llvm.load %arg3 : !llvm.ptr -> i64
    %109 = llvm.getelementptr %arg2[%108] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_49 = arith.constant 1 : i64
    %110 = arith.addi %108, %c1_i64_49 : i64
    llvm.store %110, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_48, %109 : i256, !llvm.ptr
    cf.br ^bb45
  ^bb40:  // pred: ^bb42
    %c1024_i64_50 = arith.constant 1024 : i64
    %111 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_51 = arith.constant 1 : i64
    %112 = arith.addi %111, %c1_i64_51 : i64
    %113 = arith.cmpi ult, %c1024_i64_50, %112 : i64
    %c92_i8_52 = arith.constant 92 : i8
    cf.cond_br %113, ^bb1(%c92_i8_52 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %114 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_53 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %115 = arith.cmpi uge, %114, %c3_i64_53 : i64
    %c80_i8_54 = arith.constant 80 : i8
    cf.cond_br %115, ^bb42, ^bb1(%c80_i8_54 : i8)
  ^bb42:  // pred: ^bb41
    %116 = arith.subi %114, %c3_i64_53 : i64
    llvm.store %116, %arg1 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb44
    %c0_i256_55 = arith.constant 0 : i256
    %117 = llvm.load %arg3 : !llvm.ptr -> i64
    %118 = llvm.getelementptr %arg2[%117] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_56 = arith.constant 1 : i64
    %119 = arith.addi %117, %c1_i64_56 : i64
    llvm.store %119, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_55, %118 : i256, !llvm.ptr
    cf.br ^bb49
  ^bb44:  // pred: ^bb46
    %c1024_i64_57 = arith.constant 1024 : i64
    %120 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %121 = arith.addi %120, %c1_i64_58 : i64
    %122 = arith.cmpi ult, %c1024_i64_57, %121 : i64
    %c92_i8_59 = arith.constant 92 : i8
    cf.cond_br %122, ^bb1(%c92_i8_59 : i8), ^bb43
  ^bb45:  // pred: ^bb39
    %123 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_60 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %124 = arith.cmpi uge, %123, %c3_i64_60 : i64
    %c80_i8_61 = arith.constant 80 : i8
    cf.cond_br %124, ^bb46, ^bb1(%c80_i8_61 : i8)
  ^bb46:  // pred: ^bb45
    %125 = arith.subi %123, %c3_i64_60 : i64
    llvm.store %125, %arg1 : i64, !llvm.ptr
    cf.br ^bb44
  ^bb47:  // pred: ^bb48
    %c0_i256_62 = arith.constant 0 : i256
    %126 = llvm.load %arg3 : !llvm.ptr -> i64
    %127 = llvm.getelementptr %arg2[%126] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_63 = arith.constant 1 : i64
    %128 = arith.addi %126, %c1_i64_63 : i64
    llvm.store %128, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_62, %127 : i256, !llvm.ptr
    cf.br ^bb53
  ^bb48:  // pred: ^bb50
    %c1024_i64_64 = arith.constant 1024 : i64
    %129 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_65 = arith.constant 1 : i64
    %130 = arith.addi %129, %c1_i64_65 : i64
    %131 = arith.cmpi ult, %c1024_i64_64, %130 : i64
    %c92_i8_66 = arith.constant 92 : i8
    cf.cond_br %131, ^bb1(%c92_i8_66 : i8), ^bb47
  ^bb49:  // pred: ^bb43
    %132 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_67 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %133 = arith.cmpi uge, %132, %c3_i64_67 : i64
    %c80_i8_68 = arith.constant 80 : i8
    cf.cond_br %133, ^bb50, ^bb1(%c80_i8_68 : i8)
  ^bb50:  // pred: ^bb49
    %134 = arith.subi %132, %c3_i64_67 : i64
    llvm.store %134, %arg1 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // pred: ^bb52
    %c0_i256_69 = arith.constant 0 : i256
    %135 = llvm.load %arg3 : !llvm.ptr -> i64
    %136 = llvm.getelementptr %arg2[%135] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_70 = arith.constant 1 : i64
    %137 = arith.addi %135, %c1_i64_70 : i64
    llvm.store %137, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_69, %136 : i256, !llvm.ptr
    cf.br ^bb57
  ^bb52:  // pred: ^bb54
    %c1024_i64_71 = arith.constant 1024 : i64
    %138 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_72 = arith.constant 1 : i64
    %139 = arith.addi %138, %c1_i64_72 : i64
    %140 = arith.cmpi ult, %c1024_i64_71, %139 : i64
    %c92_i8_73 = arith.constant 92 : i8
    cf.cond_br %140, ^bb1(%c92_i8_73 : i8), ^bb51
  ^bb53:  // pred: ^bb47
    %141 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_74 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %142 = arith.cmpi uge, %141, %c3_i64_74 : i64
    %c80_i8_75 = arith.constant 80 : i8
    cf.cond_br %142, ^bb54, ^bb1(%c80_i8_75 : i8)
  ^bb54:  // pred: ^bb53
    %143 = arith.subi %141, %c3_i64_74 : i64
    llvm.store %143, %arg1 : i64, !llvm.ptr
    cf.br ^bb52
  ^bb55:  // pred: ^bb56
    %c0_i256_76 = arith.constant 0 : i256
    %144 = llvm.load %arg3 : !llvm.ptr -> i64
    %145 = llvm.getelementptr %arg2[%144] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_77 = arith.constant 1 : i64
    %146 = arith.addi %144, %c1_i64_77 : i64
    llvm.store %146, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_76, %145 : i256, !llvm.ptr
    cf.br ^bb61
  ^bb56:  // pred: ^bb58
    %c1024_i64_78 = arith.constant 1024 : i64
    %147 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_79 = arith.constant 1 : i64
    %148 = arith.addi %147, %c1_i64_79 : i64
    %149 = arith.cmpi ult, %c1024_i64_78, %148 : i64
    %c92_i8_80 = arith.constant 92 : i8
    cf.cond_br %149, ^bb1(%c92_i8_80 : i8), ^bb55
  ^bb57:  // pred: ^bb51
    %150 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_81 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %151 = arith.cmpi uge, %150, %c3_i64_81 : i64
    %c80_i8_82 = arith.constant 80 : i8
    cf.cond_br %151, ^bb58, ^bb1(%c80_i8_82 : i8)
  ^bb58:  // pred: ^bb57
    %152 = arith.subi %150, %c3_i64_81 : i64
    llvm.store %152, %arg1 : i64, !llvm.ptr
    cf.br ^bb56
  ^bb59:  // pred: ^bb60
    %153 = llvm.load %arg3 : !llvm.ptr -> i64
    %154 = llvm.getelementptr %arg2[%153] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %155 = llvm.getelementptr %154[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %156 = llvm.load %155 : !llvm.ptr -> i256
    %157 = llvm.load %arg3 : !llvm.ptr -> i64
    %158 = llvm.getelementptr %arg2[%157] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_83 = arith.constant 1 : i64
    %159 = arith.addi %157, %c1_i64_83 : i64
    llvm.store %159, %arg3 : i64, !llvm.ptr
    llvm.store %156, %158 : i256, !llvm.ptr
    cf.br ^bb65
  ^bb60:  // pred: ^bb62
    %c1024_i64_84 = arith.constant 1024 : i64
    %160 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_85 = arith.constant 1 : i64
    %161 = arith.addi %160, %c1_i64_85 : i64
    %c6_i64 = arith.constant 6 : i64
    %162 = arith.cmpi ult, %160, %c6_i64 : i64
    %163 = arith.cmpi ult, %c1024_i64_84, %161 : i64
    %164 = arith.xori %162, %163 : i1
    %c92_i8_86 = arith.constant 92 : i8
    cf.cond_br %164, ^bb1(%c92_i8_86 : i8), ^bb59
  ^bb61:  // pred: ^bb55
    %165 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_87 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %166 = arith.cmpi uge, %165, %c3_i64_87 : i64
    %c80_i8_88 = arith.constant 80 : i8
    cf.cond_br %166, ^bb62, ^bb1(%c80_i8_88 : i8)
  ^bb62:  // pred: ^bb61
    %167 = arith.subi %165, %c3_i64_87 : i64
    llvm.store %167, %arg1 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb63:  // pred: ^bb64
    %c65535_i256 = arith.constant 65535 : i256
    %168 = llvm.load %arg3 : !llvm.ptr -> i64
    %169 = llvm.getelementptr %arg2[%168] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_89 = arith.constant 1 : i64
    %170 = arith.addi %168, %c1_i64_89 : i64
    llvm.store %170, %arg3 : i64, !llvm.ptr
    llvm.store %c65535_i256, %169 : i256, !llvm.ptr
    cf.br ^bb78
  ^bb64:  // pred: ^bb66
    %c1024_i64_90 = arith.constant 1024 : i64
    %171 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_91 = arith.constant 1 : i64
    %172 = arith.addi %171, %c1_i64_91 : i64
    %173 = arith.cmpi ult, %c1024_i64_90, %172 : i64
    %c92_i8_92 = arith.constant 92 : i8
    cf.cond_br %173, ^bb1(%c92_i8_92 : i8), ^bb63
  ^bb65:  // pred: ^bb59
    %174 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_93 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %175 = arith.cmpi uge, %174, %c3_i64_93 : i64
    %c80_i8_94 = arith.constant 80 : i8
    cf.cond_br %175, ^bb66, ^bb1(%c80_i8_94 : i8)
  ^bb66:  // pred: ^bb65
    %176 = arith.subi %174, %c3_i64_93 : i64
    llvm.store %176, %arg1 : i64, !llvm.ptr
    cf.br ^bb64
  ^bb67:  // pred: ^bb77
    %177 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_95 = arith.constant 1 : i64
    %178 = arith.subi %177, %c1_i64_95 : i64
    %179 = llvm.getelementptr %arg2[%178] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %178, %arg3 : i64, !llvm.ptr
    %180 = llvm.load %179 : !llvm.ptr -> i256
    %181 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_96 = arith.constant 1 : i64
    %182 = arith.subi %181, %c1_i64_96 : i64
    %183 = llvm.getelementptr %arg2[%182] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %182, %arg3 : i64, !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> i256
    %185 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_97 = arith.constant 1 : i64
    %186 = arith.subi %185, %c1_i64_97 : i64
    %187 = llvm.getelementptr %arg2[%186] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %186, %arg3 : i64, !llvm.ptr
    %188 = llvm.load %187 : !llvm.ptr -> i256
    %189 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_98 = arith.constant 1 : i64
    %190 = arith.subi %189, %c1_i64_98 : i64
    %191 = llvm.getelementptr %arg2[%190] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %190, %arg3 : i64, !llvm.ptr
    %192 = llvm.load %191 : !llvm.ptr -> i256
    %193 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_99 = arith.constant 1 : i64
    %194 = arith.subi %193, %c1_i64_99 : i64
    %195 = llvm.getelementptr %arg2[%194] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %194, %arg3 : i64, !llvm.ptr
    %196 = llvm.load %195 : !llvm.ptr -> i256
    %197 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_100 = arith.constant 1 : i64
    %198 = arith.subi %197, %c1_i64_100 : i64
    %199 = llvm.getelementptr %arg2[%198] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %198, %arg3 : i64, !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> i256
    %201 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_101 = arith.constant 1 : i64
    %202 = arith.subi %201, %c1_i64_101 : i64
    %203 = llvm.getelementptr %arg2[%202] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %202, %arg3 : i64, !llvm.ptr
    %204 = llvm.load %203 : !llvm.ptr -> i256
    %205 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8_102 = arith.constant 0 : i8
    %206 = arith.cmpi ne, %205, %c0_i8_102 : i8
    %c0_i256_103 = arith.constant 0 : i256
    %207 = arith.cmpi ne, %188, %c0_i256_103 : i256
    %208 = arith.andi %206, %207 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %208, ^bb1(%c86_i8 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %c18446744073709551615_i256_104 = arith.constant 18446744073709551615 : i256
    %209 = arith.cmpi sgt, %196, %c18446744073709551615_i256_104 : i256
    %c84_i8_105 = arith.constant 84 : i8
    cf.cond_br %209, ^bb1(%c84_i8_105 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %210 = arith.trunci %196 : i256 to i64
    %c0_i64_106 = arith.constant 0 : i64
    %211 = arith.cmpi slt, %210, %c0_i64_106 : i64
    %c84_i8_107 = arith.constant 84 : i8
    cf.cond_br %211, ^bb1(%c84_i8_107 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %c0_i64_108 = arith.constant 0 : i64
    %212 = arith.cmpi ne, %210, %c0_i64_108 : i64
    cf.cond_br %212, ^bb99, ^bb71
  ^bb71:  // 2 preds: ^bb70, ^bb103
    %c18446744073709551615_i256_109 = arith.constant 18446744073709551615 : i256
    %213 = arith.cmpi sgt, %204, %c18446744073709551615_i256_109 : i256
    %c84_i8_110 = arith.constant 84 : i8
    cf.cond_br %213, ^bb1(%c84_i8_110 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %214 = arith.trunci %204 : i256 to i64
    %c0_i64_111 = arith.constant 0 : i64
    %215 = arith.cmpi slt, %214, %c0_i64_111 : i64
    %c84_i8_112 = arith.constant 84 : i8
    cf.cond_br %215, ^bb1(%c84_i8_112 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %c0_i64_113 = arith.constant 0 : i64
    %216 = arith.cmpi ne, %214, %c0_i64_113 : i64
    cf.cond_br %216, ^bb107, ^bb74
  ^bb74:  // 2 preds: ^bb73, ^bb111
    %217 = arith.trunci %192 : i256 to i64
    %218 = arith.trunci %200 : i256 to i64
    %219 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_114 = arith.constant 1 : i256
    %220 = llvm.alloca %c1_i256_114 x i256 : (i256) -> !llvm.ptr
    llvm.store %188, %220 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_115 = arith.constant 1 : i256
    %221 = llvm.alloca %c1_i256_115 x i256 : (i256) -> !llvm.ptr
    llvm.store %180, %221 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_116 = arith.constant 1 : i256
    %222 = llvm.alloca %c1_i256_116 x i256 : (i256) -> !llvm.ptr
    llvm.store %184, %222 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i8_117 = arith.constant 0 : i8
    %223 = call @dora_fn_call(%arg0, %221, %222, %220, %217, %210, %218, %214, %219, %c0_i8_117) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %224 = llvm.getelementptr %223[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %225 = llvm.load %224 : !llvm.ptr -> i8
    %226 = llvm.getelementptr %223[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %227 = llvm.load %226 : !llvm.ptr -> i8
    %c0_i8_118 = arith.constant 0 : i8
    %228 = arith.cmpi ne, %227, %c0_i8_118 : i8
    cf.cond_br %228, ^bb1(%227 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %229 = llvm.getelementptr %223[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %230 = llvm.load %229 : !llvm.ptr -> i64
    %231 = llvm.load %arg1 : !llvm.ptr -> i64
    %232 = arith.cmpi ult, %231, %230 : i64
    scf.if %232 {
    } else {
      %362 = arith.subi %231, %230 : i64
      llvm.store %362, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_119 = arith.constant 80 : i8
    cf.cond_br %232, ^bb1(%c80_i8_119 : i8), ^bb76
  ^bb76:  // pred: ^bb75
    %233 = arith.extui %225 : i8 to i256
    %234 = llvm.load %arg3 : !llvm.ptr -> i64
    %235 = llvm.getelementptr %arg2[%234] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_120 = arith.constant 1 : i64
    %236 = arith.addi %234, %c1_i64_120 : i64
    llvm.store %236, %arg3 : i64, !llvm.ptr
    llvm.store %233, %235 : i256, !llvm.ptr
    cf.br ^bb80
  ^bb77:  // pred: ^bb79
    %c1024_i64_121 = arith.constant 1024 : i64
    %237 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %238 = arith.addi %237, %c-6_i64 : i64
    %c7_i64 = arith.constant 7 : i64
    %239 = arith.cmpi ult, %237, %c7_i64 : i64
    %c91_i8_122 = arith.constant 91 : i8
    cf.cond_br %239, ^bb1(%c91_i8_122 : i8), ^bb67
  ^bb78:  // pred: ^bb63
    %240 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_123 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %241 = arith.cmpi uge, %240, %c0_i64_123 : i64
    %c80_i8_124 = arith.constant 80 : i8
    cf.cond_br %241, ^bb79, ^bb1(%c80_i8_124 : i8)
  ^bb79:  // pred: ^bb78
    %242 = arith.subi %240, %c0_i64_123 : i64
    llvm.store %242, %arg1 : i64, !llvm.ptr
    cf.br ^bb77
  ^bb80:  // pred: ^bb76
    %c0_i64_125 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %243 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_125, %c0_i64_125, %243, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb81:  // pred: ^bb11
    %c18446744073709551615_i256_126 = arith.constant 18446744073709551615 : i256
    %244 = arith.cmpi sgt, %24, %c18446744073709551615_i256_126 : i256
    %c84_i8_127 = arith.constant 84 : i8
    cf.cond_br %244, ^bb1(%c84_i8_127 : i8), ^bb82
  ^bb82:  // pred: ^bb81
    %245 = arith.trunci %24 : i256 to i64
    %c0_i64_128 = arith.constant 0 : i64
    %246 = arith.cmpi slt, %245, %c0_i64_128 : i64
    %c84_i8_129 = arith.constant 84 : i8
    cf.cond_br %246, ^bb1(%c84_i8_129 : i8), ^bb83
  ^bb83:  // pred: ^bb82
    %247 = arith.addi %245, %c32_i64 : i64
    %c0_i64_130 = arith.constant 0 : i64
    %248 = arith.cmpi slt, %247, %c0_i64_130 : i64
    %c84_i8_131 = arith.constant 84 : i8
    cf.cond_br %248, ^bb1(%c84_i8_131 : i8), ^bb84
  ^bb84:  // pred: ^bb83
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_132 = arith.constant 32 : i64
    %249 = arith.addi %247, %c31_i64 : i64
    %250 = arith.divui %249, %c32_i64_132 : i64
    %c32_i64_133 = arith.constant 32 : i64
    %251 = arith.muli %250, %c32_i64_133 : i64
    %252 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_134 = arith.constant 31 : i64
    %c32_i64_135 = arith.constant 32 : i64
    %253 = arith.addi %252, %c31_i64_134 : i64
    %254 = arith.divui %253, %c32_i64_135 : i64
    %255 = arith.muli %254, %c32_i64_133 : i64
    %256 = arith.cmpi ult, %255, %251 : i64
    cf.cond_br %256, ^bb86, ^bb85
  ^bb85:  // 2 preds: ^bb84, ^bb88
    cf.br ^bb12
  ^bb86:  // pred: ^bb84
    %c3_i64_136 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %257 = arith.muli %254, %254 : i64
    %258 = arith.divui %257, %c512_i64 : i64
    %259 = arith.muli %254, %c3_i64_136 : i64
    %260 = arith.addi %258, %259 : i64
    %c3_i64_137 = arith.constant 3 : i64
    %c512_i64_138 = arith.constant 512 : i64
    %261 = arith.muli %250, %250 : i64
    %262 = arith.divui %261, %c512_i64_138 : i64
    %263 = arith.muli %250, %c3_i64_137 : i64
    %264 = arith.addi %262, %263 : i64
    %265 = arith.subi %264, %260 : i64
    %266 = llvm.load %arg1 : !llvm.ptr -> i64
    %267 = arith.cmpi ult, %266, %265 : i64
    scf.if %267 {
    } else {
      %362 = arith.subi %266, %265 : i64
      llvm.store %362, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_139 = arith.constant 80 : i8
    cf.cond_br %267, ^bb1(%c80_i8_139 : i8), ^bb87
  ^bb87:  // pred: ^bb86
    %268 = call @dora_fn_extend_memory(%arg0, %251) : (!llvm.ptr, i64) -> !llvm.ptr
    %269 = llvm.getelementptr %268[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %270 = llvm.load %269 : !llvm.ptr -> i8
    %c0_i8_140 = arith.constant 0 : i8
    %271 = arith.cmpi ne, %270, %c0_i8_140 : i8
    cf.cond_br %271, ^bb1(%270 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    cf.br ^bb85
  ^bb89:  // pred: ^bb31
    %c49152_i64 = arith.constant 49152 : i64
    %272 = arith.cmpi ugt, %82, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %272, ^bb1(%c100_i8 : i8), ^bb90
  ^bb90:  // pred: ^bb89
    %c31_i64_141 = arith.constant 31 : i64
    %c32_i64_142 = arith.constant 32 : i64
    %273 = arith.addi %82, %c31_i64_141 : i64
    %274 = arith.divui %273, %c32_i64_142 : i64
    %c2_i64_143 = arith.constant 2 : i64
    %275 = arith.muli %274, %c2_i64_143 : i64
    %276 = llvm.load %arg1 : !llvm.ptr -> i64
    %277 = arith.cmpi ult, %276, %275 : i64
    scf.if %277 {
    } else {
      %362 = arith.subi %276, %275 : i64
      llvm.store %362, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_144 = arith.constant 80 : i8
    cf.cond_br %277, ^bb1(%c80_i8_144 : i8), ^bb91
  ^bb91:  // pred: ^bb90
    %c18446744073709551615_i256_145 = arith.constant 18446744073709551615 : i256
    %278 = arith.cmpi sgt, %74, %c18446744073709551615_i256_145 : i256
    %c84_i8_146 = arith.constant 84 : i8
    cf.cond_br %278, ^bb1(%c84_i8_146 : i8), ^bb92
  ^bb92:  // pred: ^bb91
    %279 = arith.trunci %74 : i256 to i64
    %c0_i64_147 = arith.constant 0 : i64
    %280 = arith.cmpi slt, %279, %c0_i64_147 : i64
    %c84_i8_148 = arith.constant 84 : i8
    cf.cond_br %280, ^bb1(%c84_i8_148 : i8), ^bb93
  ^bb93:  // pred: ^bb92
    %281 = arith.addi %279, %82 : i64
    %c0_i64_149 = arith.constant 0 : i64
    %282 = arith.cmpi slt, %281, %c0_i64_149 : i64
    %c84_i8_150 = arith.constant 84 : i8
    cf.cond_br %282, ^bb1(%c84_i8_150 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %c31_i64_151 = arith.constant 31 : i64
    %c32_i64_152 = arith.constant 32 : i64
    %283 = arith.addi %281, %c31_i64_151 : i64
    %284 = arith.divui %283, %c32_i64_152 : i64
    %c32_i64_153 = arith.constant 32 : i64
    %285 = arith.muli %284, %c32_i64_153 : i64
    %286 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_154 = arith.constant 31 : i64
    %c32_i64_155 = arith.constant 32 : i64
    %287 = arith.addi %286, %c31_i64_154 : i64
    %288 = arith.divui %287, %c32_i64_155 : i64
    %289 = arith.muli %288, %c32_i64_153 : i64
    %290 = arith.cmpi ult, %289, %285 : i64
    cf.cond_br %290, ^bb96, ^bb95
  ^bb95:  // 2 preds: ^bb94, ^bb98
    cf.br ^bb32
  ^bb96:  // pred: ^bb94
    %c3_i64_156 = arith.constant 3 : i64
    %c512_i64_157 = arith.constant 512 : i64
    %291 = arith.muli %288, %288 : i64
    %292 = arith.divui %291, %c512_i64_157 : i64
    %293 = arith.muli %288, %c3_i64_156 : i64
    %294 = arith.addi %292, %293 : i64
    %c3_i64_158 = arith.constant 3 : i64
    %c512_i64_159 = arith.constant 512 : i64
    %295 = arith.muli %284, %284 : i64
    %296 = arith.divui %295, %c512_i64_159 : i64
    %297 = arith.muli %284, %c3_i64_158 : i64
    %298 = arith.addi %296, %297 : i64
    %299 = arith.subi %298, %294 : i64
    %300 = llvm.load %arg1 : !llvm.ptr -> i64
    %301 = arith.cmpi ult, %300, %299 : i64
    scf.if %301 {
    } else {
      %362 = arith.subi %300, %299 : i64
      llvm.store %362, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_160 = arith.constant 80 : i8
    cf.cond_br %301, ^bb1(%c80_i8_160 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %302 = call @dora_fn_extend_memory(%arg0, %285) : (!llvm.ptr, i64) -> !llvm.ptr
    %303 = llvm.getelementptr %302[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %304 = llvm.load %303 : !llvm.ptr -> i8
    %c0_i8_161 = arith.constant 0 : i8
    %305 = arith.cmpi ne, %304, %c0_i8_161 : i8
    cf.cond_br %305, ^bb1(%304 : i8), ^bb98
  ^bb98:  // pred: ^bb97
    cf.br ^bb95
  ^bb99:  // pred: ^bb70
    %c18446744073709551615_i256_162 = arith.constant 18446744073709551615 : i256
    %306 = arith.cmpi sgt, %192, %c18446744073709551615_i256_162 : i256
    %c84_i8_163 = arith.constant 84 : i8
    cf.cond_br %306, ^bb1(%c84_i8_163 : i8), ^bb100
  ^bb100:  // pred: ^bb99
    %307 = arith.trunci %192 : i256 to i64
    %c0_i64_164 = arith.constant 0 : i64
    %308 = arith.cmpi slt, %307, %c0_i64_164 : i64
    %c84_i8_165 = arith.constant 84 : i8
    cf.cond_br %308, ^bb1(%c84_i8_165 : i8), ^bb101
  ^bb101:  // pred: ^bb100
    %309 = arith.addi %307, %210 : i64
    %c0_i64_166 = arith.constant 0 : i64
    %310 = arith.cmpi slt, %309, %c0_i64_166 : i64
    %c84_i8_167 = arith.constant 84 : i8
    cf.cond_br %310, ^bb1(%c84_i8_167 : i8), ^bb102
  ^bb102:  // pred: ^bb101
    %c31_i64_168 = arith.constant 31 : i64
    %c32_i64_169 = arith.constant 32 : i64
    %311 = arith.addi %309, %c31_i64_168 : i64
    %312 = arith.divui %311, %c32_i64_169 : i64
    %c32_i64_170 = arith.constant 32 : i64
    %313 = arith.muli %312, %c32_i64_170 : i64
    %314 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_171 = arith.constant 31 : i64
    %c32_i64_172 = arith.constant 32 : i64
    %315 = arith.addi %314, %c31_i64_171 : i64
    %316 = arith.divui %315, %c32_i64_172 : i64
    %317 = arith.muli %316, %c32_i64_170 : i64
    %318 = arith.cmpi ult, %317, %313 : i64
    cf.cond_br %318, ^bb104, ^bb103
  ^bb103:  // 2 preds: ^bb102, ^bb106
    cf.br ^bb71
  ^bb104:  // pred: ^bb102
    %c3_i64_173 = arith.constant 3 : i64
    %c512_i64_174 = arith.constant 512 : i64
    %319 = arith.muli %316, %316 : i64
    %320 = arith.divui %319, %c512_i64_174 : i64
    %321 = arith.muli %316, %c3_i64_173 : i64
    %322 = arith.addi %320, %321 : i64
    %c3_i64_175 = arith.constant 3 : i64
    %c512_i64_176 = arith.constant 512 : i64
    %323 = arith.muli %312, %312 : i64
    %324 = arith.divui %323, %c512_i64_176 : i64
    %325 = arith.muli %312, %c3_i64_175 : i64
    %326 = arith.addi %324, %325 : i64
    %327 = arith.subi %326, %322 : i64
    %328 = llvm.load %arg1 : !llvm.ptr -> i64
    %329 = arith.cmpi ult, %328, %327 : i64
    scf.if %329 {
    } else {
      %362 = arith.subi %328, %327 : i64
      llvm.store %362, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_177 = arith.constant 80 : i8
    cf.cond_br %329, ^bb1(%c80_i8_177 : i8), ^bb105
  ^bb105:  // pred: ^bb104
    %330 = call @dora_fn_extend_memory(%arg0, %313) : (!llvm.ptr, i64) -> !llvm.ptr
    %331 = llvm.getelementptr %330[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %332 = llvm.load %331 : !llvm.ptr -> i8
    %c0_i8_178 = arith.constant 0 : i8
    %333 = arith.cmpi ne, %332, %c0_i8_178 : i8
    cf.cond_br %333, ^bb1(%332 : i8), ^bb106
  ^bb106:  // pred: ^bb105
    cf.br ^bb103
  ^bb107:  // pred: ^bb73
    %c18446744073709551615_i256_179 = arith.constant 18446744073709551615 : i256
    %334 = arith.cmpi sgt, %200, %c18446744073709551615_i256_179 : i256
    %c84_i8_180 = arith.constant 84 : i8
    cf.cond_br %334, ^bb1(%c84_i8_180 : i8), ^bb108
  ^bb108:  // pred: ^bb107
    %335 = arith.trunci %200 : i256 to i64
    %c0_i64_181 = arith.constant 0 : i64
    %336 = arith.cmpi slt, %335, %c0_i64_181 : i64
    %c84_i8_182 = arith.constant 84 : i8
    cf.cond_br %336, ^bb1(%c84_i8_182 : i8), ^bb109
  ^bb109:  // pred: ^bb108
    %337 = arith.addi %335, %214 : i64
    %c0_i64_183 = arith.constant 0 : i64
    %338 = arith.cmpi slt, %337, %c0_i64_183 : i64
    %c84_i8_184 = arith.constant 84 : i8
    cf.cond_br %338, ^bb1(%c84_i8_184 : i8), ^bb110
  ^bb110:  // pred: ^bb109
    %c31_i64_185 = arith.constant 31 : i64
    %c32_i64_186 = arith.constant 32 : i64
    %339 = arith.addi %337, %c31_i64_185 : i64
    %340 = arith.divui %339, %c32_i64_186 : i64
    %c32_i64_187 = arith.constant 32 : i64
    %341 = arith.muli %340, %c32_i64_187 : i64
    %342 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_188 = arith.constant 31 : i64
    %c32_i64_189 = arith.constant 32 : i64
    %343 = arith.addi %342, %c31_i64_188 : i64
    %344 = arith.divui %343, %c32_i64_189 : i64
    %345 = arith.muli %344, %c32_i64_187 : i64
    %346 = arith.cmpi ult, %345, %341 : i64
    cf.cond_br %346, ^bb112, ^bb111
  ^bb111:  // 2 preds: ^bb110, ^bb114
    cf.br ^bb74
  ^bb112:  // pred: ^bb110
    %c3_i64_190 = arith.constant 3 : i64
    %c512_i64_191 = arith.constant 512 : i64
    %347 = arith.muli %344, %344 : i64
    %348 = arith.divui %347, %c512_i64_191 : i64
    %349 = arith.muli %344, %c3_i64_190 : i64
    %350 = arith.addi %348, %349 : i64
    %c3_i64_192 = arith.constant 3 : i64
    %c512_i64_193 = arith.constant 512 : i64
    %351 = arith.muli %340, %340 : i64
    %352 = arith.divui %351, %c512_i64_193 : i64
    %353 = arith.muli %340, %c3_i64_192 : i64
    %354 = arith.addi %352, %353 : i64
    %355 = arith.subi %354, %350 : i64
    %356 = llvm.load %arg1 : !llvm.ptr -> i64
    %357 = arith.cmpi ult, %356, %355 : i64
    scf.if %357 {
    } else {
      %362 = arith.subi %356, %355 : i64
      llvm.store %362, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_194 = arith.constant 80 : i8
    cf.cond_br %357, ^bb1(%c80_i8_194 : i8), ^bb113
  ^bb113:  // pred: ^bb112
    %358 = call @dora_fn_extend_memory(%arg0, %341) : (!llvm.ptr, i64) -> !llvm.ptr
    %359 = llvm.getelementptr %358[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %360 = llvm.load %359 : !llvm.ptr -> i8
    %c0_i8_195 = arith.constant 0 : i8
    %361 = arith.cmpi ne, %360, %c0_i8_195 : i8
    cf.cond_br %361, ^bb1(%360 : i8), ^bb114
  ^bb114:  // pred: ^bb113
    cf.br ^bb111
  }
}
