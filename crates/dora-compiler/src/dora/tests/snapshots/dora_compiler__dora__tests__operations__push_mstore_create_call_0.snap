---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 32 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c0_i64_4 = arith.constant 0 : i64
    %37 = arith.cmpi slt, %36, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %37, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c32_i64 = arith.constant 32 : i64
    %38 = arith.addi %36, %c32_i64 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %39 = arith.cmpi slt, %38, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %39, ^bb1(%c84_i8_6 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_7 = arith.constant 32 : i64
    %40 = arith.addi %38, %c31_i64 : i64
    %41 = arith.divui %40, %c32_i64_7 : i64
    %42 = arith.muli %41, %c32_i64_7 : i64
    %43 = call @dora_fn_extend_memory(%arg0, %42) : (!llvm.ptr, i64) -> !llvm.ptr
    %44 = llvm.getelementptr %43[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %43[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %48 = arith.cmpi ne, %47, %c0_i8 : i8
    cf.cond_br %48, ^bb1(%47 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %49 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %45, %49 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %42, %50 : i64, !llvm.ptr
    %51 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %54, %53 {alignment = 1 : i64} : i256, !llvm.ptr
    %55 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_8 : i64
    llvm.store %56, %9 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64, %56 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c17_i256 = arith.constant 17 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    %61 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_10 : i64
    llvm.store %62, %9 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64, %62 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_11 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c15_i256 = arith.constant 15 : i256
    %64 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %65 : i256, !llvm.ptr
    %66 = llvm.getelementptr %65[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %66, %64 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_12 = arith.constant 1 : i64
    %68 = arith.addi %67, %c1_i64_12 : i64
    llvm.store %68, %9 : i64, !llvm.ptr
    %69 = arith.cmpi ult, %c1024_i64, %68 : i64
    %c92_i8_13 = arith.constant 92 : i8
    cf.cond_br %69, ^bb1(%c92_i8_13 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %c0_i256_14 = arith.constant 0 : i256
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_14, %71 : i256, !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    %73 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_15 = arith.constant -2 : i64
    %74 = arith.addi %73, %c-2_i64_15 : i64
    llvm.store %74, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %75 = arith.cmpi ult, %73, %c3_i64 : i64
    %c91_i8_16 = arith.constant 91 : i8
    cf.cond_br %75, ^bb1(%c91_i8_16 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %76 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %77 = llvm.load %76 : !llvm.ptr -> !llvm.ptr
    %78 = llvm.getelementptr %77[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %79 = llvm.load %78 : !llvm.ptr -> i256
    llvm.store %78, %76 : !llvm.ptr, !llvm.ptr
    %80 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    %82 = llvm.getelementptr %81[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %83 = llvm.load %82 : !llvm.ptr -> i256
    llvm.store %82, %80 : !llvm.ptr, !llvm.ptr
    %84 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> !llvm.ptr
    %86 = llvm.getelementptr %85[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %87 = llvm.load %86 : !llvm.ptr -> i256
    llvm.store %86, %84 : !llvm.ptr, !llvm.ptr
    %88 = arith.trunci %83 : i256 to i64
    %c0_i64_17 = arith.constant 0 : i64
    %89 = arith.cmpi slt, %88, %c0_i64_17 : i64
    %c84_i8_18 = arith.constant 84 : i8
    cf.cond_br %89, ^bb1(%c84_i8_18 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %90 = arith.trunci %87 : i256 to i64
    %c0_i64_19 = arith.constant 0 : i64
    %91 = arith.cmpi slt, %90, %c0_i64_19 : i64
    %c84_i8_20 = arith.constant 84 : i8
    cf.cond_br %91, ^bb1(%c84_i8_20 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %92 = arith.addi %88, %90 : i64
    %c0_i64_21 = arith.constant 0 : i64
    %93 = arith.cmpi slt, %92, %c0_i64_21 : i64
    %c84_i8_22 = arith.constant 84 : i8
    cf.cond_br %93, ^bb1(%c84_i8_22 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %c31_i64_23 = arith.constant 31 : i64
    %c32_i64_24 = arith.constant 32 : i64
    %94 = arith.addi %92, %c31_i64_23 : i64
    %95 = arith.divui %94, %c32_i64_24 : i64
    %96 = arith.muli %95, %c32_i64_24 : i64
    %97 = call @dora_fn_extend_memory(%arg0, %96) : (!llvm.ptr, i64) -> !llvm.ptr
    %98 = llvm.getelementptr %97[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %99 = llvm.load %98 : !llvm.ptr -> !llvm.ptr
    %100 = llvm.getelementptr %97[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i8
    %c0_i8_25 = arith.constant 0 : i8
    %102 = arith.cmpi ne, %101, %c0_i8_25 : i8
    cf.cond_br %102, ^bb1(%101 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %103 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %99, %103 : !llvm.ptr, !llvm.ptr
    %104 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %96, %104 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %105 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %79, %105 {alignment = 1 : i64} : i256, !llvm.ptr
    %106 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %c1_i64_26 = arith.constant 1 : i64
    %108 = llvm.alloca %c1_i64_26 x i64 : (i64) -> !llvm.ptr
    llvm.store %107, %108 {alignment = 1 : i64} : i64, !llvm.ptr
    %109 = call @dora_fn_create(%arg0, %90, %88, %105, %108) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %110 = llvm.getelementptr %109[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %111 = llvm.load %110 : !llvm.ptr -> i8
    %c0_i8_27 = arith.constant 0 : i8
    %112 = arith.cmpi ne, %111, %c0_i8_27 : i8
    cf.cond_br %112, ^bb1(%111 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %113 = llvm.load %105 : !llvm.ptr -> i256
    %114 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> !llvm.ptr
    llvm.store %113, %115 : i256, !llvm.ptr
    %116 = llvm.getelementptr %115[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %116, %114 : !llvm.ptr, !llvm.ptr
    %117 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_28 = arith.constant 1 : i64
    %118 = arith.addi %117, %c1_i64_28 : i64
    llvm.store %118, %9 : i64, !llvm.ptr
    %119 = arith.cmpi ult, %c1024_i64, %118 : i64
    %c92_i8_29 = arith.constant 92 : i8
    cf.cond_br %119, ^bb1(%c92_i8_29 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %c0_i256_30 = arith.constant 0 : i256
    %120 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %121 = llvm.load %120 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_30, %121 : i256, !llvm.ptr
    %122 = llvm.getelementptr %121[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %122, %120 : !llvm.ptr, !llvm.ptr
    %123 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_31 = arith.constant 1 : i64
    %124 = arith.addi %123, %c1_i64_31 : i64
    llvm.store %124, %9 : i64, !llvm.ptr
    %125 = arith.cmpi ult, %c1024_i64, %124 : i64
    %c92_i8_32 = arith.constant 92 : i8
    cf.cond_br %125, ^bb1(%c92_i8_32 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i256_33 = arith.constant 0 : i256
    %126 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_33, %127 : i256, !llvm.ptr
    %128 = llvm.getelementptr %127[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %128, %126 : !llvm.ptr, !llvm.ptr
    %129 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %130 = arith.addi %129, %c1_i64_34 : i64
    llvm.store %130, %9 : i64, !llvm.ptr
    %131 = arith.cmpi ult, %c1024_i64, %130 : i64
    %c92_i8_35 = arith.constant 92 : i8
    cf.cond_br %131, ^bb1(%c92_i8_35 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %c0_i256_36 = arith.constant 0 : i256
    %132 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_36, %133 : i256, !llvm.ptr
    %134 = llvm.getelementptr %133[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %134, %132 : !llvm.ptr, !llvm.ptr
    %135 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %136 = arith.addi %135, %c1_i64_37 : i64
    llvm.store %136, %9 : i64, !llvm.ptr
    %137 = arith.cmpi ult, %c1024_i64, %136 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %137, ^bb1(%c92_i8_38 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %c0_i256_39 = arith.constant 0 : i256
    %138 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %139 = llvm.load %138 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_39, %139 : i256, !llvm.ptr
    %140 = llvm.getelementptr %139[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %140, %138 : !llvm.ptr, !llvm.ptr
    %141 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %142 = arith.addi %141, %c1_i64_40 : i64
    llvm.store %142, %9 : i64, !llvm.ptr
    %143 = arith.cmpi ult, %c1024_i64, %142 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %143, ^bb1(%c92_i8_41 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_42 = arith.constant 0 : i256
    %144 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_42, %145 : i256, !llvm.ptr
    %146 = llvm.getelementptr %145[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %146, %144 : !llvm.ptr, !llvm.ptr
    %147 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %148 = arith.addi %147, %c1_i64_43 : i64
    llvm.store %148, %9 : i64, !llvm.ptr
    %149 = arith.cmpi ult, %c1024_i64, %148 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %149, ^bb1(%c92_i8_44 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %150 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %151 = llvm.load %150 : !llvm.ptr -> !llvm.ptr
    %152 = llvm.getelementptr %151[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %153 = llvm.load %152 : !llvm.ptr -> i256
    %154 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> !llvm.ptr
    llvm.store %153, %155 : i256, !llvm.ptr
    %156 = llvm.getelementptr %155[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %156, %154 : !llvm.ptr, !llvm.ptr
    %157 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_45 = arith.constant 1 : i64
    %158 = arith.addi %157, %c1_i64_45 : i64
    llvm.store %158, %9 : i64, !llvm.ptr
    %159 = arith.cmpi ult, %c1024_i64, %158 : i64
    %c92_i8_46 = arith.constant 92 : i8
    cf.cond_br %159, ^bb1(%c92_i8_46 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %c65535_i256 = arith.constant 65535 : i256
    %160 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %161 : i256, !llvm.ptr
    %162 = llvm.getelementptr %161[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    %163 = llvm.load %9 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %164 = arith.addi %163, %c-6_i64 : i64
    llvm.store %164, %9 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %165 = arith.cmpi ult, %163, %c7_i64 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %165, ^bb1(%c91_i8_47 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %166 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> !llvm.ptr
    %168 = llvm.getelementptr %167[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %169 = llvm.load %168 : !llvm.ptr -> i256
    llvm.store %168, %166 : !llvm.ptr, !llvm.ptr
    %170 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> !llvm.ptr
    %172 = llvm.getelementptr %171[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %173 = llvm.load %172 : !llvm.ptr -> i256
    llvm.store %172, %170 : !llvm.ptr, !llvm.ptr
    %174 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %175 = llvm.load %174 : !llvm.ptr -> !llvm.ptr
    %176 = llvm.getelementptr %175[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %177 = llvm.load %176 : !llvm.ptr -> i256
    llvm.store %176, %174 : !llvm.ptr, !llvm.ptr
    %178 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %179 = llvm.load %178 : !llvm.ptr -> !llvm.ptr
    %180 = llvm.getelementptr %179[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %181 = llvm.load %180 : !llvm.ptr -> i256
    llvm.store %180, %178 : !llvm.ptr, !llvm.ptr
    %182 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %183 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    %184 = llvm.getelementptr %183[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %185 = llvm.load %184 : !llvm.ptr -> i256
    llvm.store %184, %182 : !llvm.ptr, !llvm.ptr
    %186 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %187 = llvm.load %186 : !llvm.ptr -> !llvm.ptr
    %188 = llvm.getelementptr %187[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %189 = llvm.load %188 : !llvm.ptr -> i256
    llvm.store %188, %186 : !llvm.ptr, !llvm.ptr
    %190 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %191 = llvm.load %190 : !llvm.ptr -> !llvm.ptr
    %192 = llvm.getelementptr %191[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %193 = llvm.load %192 : !llvm.ptr -> i256
    llvm.store %192, %190 : !llvm.ptr, !llvm.ptr
    %194 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %195 = llvm.load %194 : !llvm.ptr -> i1
    %c0_i256_48 = arith.constant 0 : i256
    %196 = arith.cmpi ne, %177, %c0_i256_48 : i256
    %197 = arith.andi %195, %196 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %197, ^bb1(%c86_i8 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %198 = arith.trunci %169 : i256 to i64
    %199 = arith.trunci %181 : i256 to i64
    %c0_i64_49 = arith.constant 0 : i64
    %200 = arith.cmpi slt, %199, %c0_i64_49 : i64
    %c84_i8_50 = arith.constant 84 : i8
    cf.cond_br %200, ^bb1(%c84_i8_50 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %201 = arith.trunci %185 : i256 to i64
    %c0_i64_51 = arith.constant 0 : i64
    %202 = arith.cmpi slt, %201, %c0_i64_51 : i64
    %c84_i8_52 = arith.constant 84 : i8
    cf.cond_br %202, ^bb1(%c84_i8_52 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %203 = arith.trunci %189 : i256 to i64
    %c0_i64_53 = arith.constant 0 : i64
    %204 = arith.cmpi slt, %203, %c0_i64_53 : i64
    %c84_i8_54 = arith.constant 84 : i8
    cf.cond_br %204, ^bb1(%c84_i8_54 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %205 = arith.trunci %193 : i256 to i64
    %c0_i64_55 = arith.constant 0 : i64
    %206 = arith.cmpi slt, %205, %c0_i64_55 : i64
    %c84_i8_56 = arith.constant 84 : i8
    cf.cond_br %206, ^bb1(%c84_i8_56 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %207 = arith.addi %199, %201 : i64
    %208 = arith.addi %203, %205 : i64
    %209 = arith.maxui %207, %208 : i64
    %c0_i64_57 = arith.constant 0 : i64
    %210 = arith.cmpi slt, %209, %c0_i64_57 : i64
    %c84_i8_58 = arith.constant 84 : i8
    cf.cond_br %210, ^bb1(%c84_i8_58 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c31_i64_59 = arith.constant 31 : i64
    %c32_i64_60 = arith.constant 32 : i64
    %211 = arith.addi %209, %c31_i64_59 : i64
    %212 = arith.divui %211, %c32_i64_60 : i64
    %213 = arith.muli %212, %c32_i64_60 : i64
    %214 = call @dora_fn_extend_memory(%arg0, %213) : (!llvm.ptr, i64) -> !llvm.ptr
    %215 = llvm.getelementptr %214[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %216 = llvm.load %215 : !llvm.ptr -> !llvm.ptr
    %217 = llvm.getelementptr %214[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %218 = llvm.load %217 : !llvm.ptr -> i8
    %c0_i8_61 = arith.constant 0 : i8
    %219 = arith.cmpi ne, %218, %c0_i8_61 : i8
    cf.cond_br %219, ^bb1(%218 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %220 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %216, %220 : !llvm.ptr, !llvm.ptr
    %221 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %213, %221 : i64, !llvm.ptr
    %222 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> i64
    %c1_i256_62 = arith.constant 1 : i256
    %224 = llvm.alloca %c1_i256_62 x i256 : (i256) -> !llvm.ptr
    llvm.store %177, %224 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_63 = arith.constant 1 : i256
    %225 = llvm.alloca %c1_i256_63 x i256 : (i256) -> !llvm.ptr
    llvm.store %173, %225 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_64 = arith.constant 1 : i64
    %226 = llvm.alloca %c1_i64_64 x i64 : (i64) -> !llvm.ptr
    %c0_i8_65 = arith.constant 0 : i8
    %227 = call @dora_fn_call(%arg0, %198, %225, %224, %199, %201, %203, %205, %223, %226, %c0_i8_65) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %228 = llvm.getelementptr %227[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %229 = llvm.load %228 : !llvm.ptr -> i8
    %230 = llvm.getelementptr %227[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %231 = llvm.load %230 : !llvm.ptr -> i8
    %c0_i8_66 = arith.constant 0 : i8
    %232 = arith.cmpi ne, %231, %c0_i8_66 : i8
    cf.cond_br %232, ^bb1(%231 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %233 = llvm.load %226 : !llvm.ptr -> i64
    %234 = arith.extui %229 : i8 to i256
    %235 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %236 = llvm.load %235 : !llvm.ptr -> !llvm.ptr
    llvm.store %234, %236 : i256, !llvm.ptr
    %237 = llvm.getelementptr %236[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %237, %235 : !llvm.ptr, !llvm.ptr
    cf.br ^bb34
  ^bb34:  // pred: ^bb33
    %c0_i64_67 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %238 = call @dora_fn_write_result(%arg0, %c0_i64_67, %c0_i64_67, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
