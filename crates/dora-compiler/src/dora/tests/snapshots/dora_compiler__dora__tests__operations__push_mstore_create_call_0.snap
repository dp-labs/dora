---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 60 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb13, ^bb14, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb28, ^bb29, ^bb31, ^bb32, ^bb33, ^bb35, ^bb36, ^bb37, ^bb39, ^bb40, ^bb43, ^bb44, ^bb47, ^bb48, ^bb51, ^bb52, ^bb55, ^bb56, ^bb59, ^bb60, ^bb63, ^bb64, ^bb67, ^bb68, ^bb70, ^bb71, ^bb72, ^bb73, ^bb74, ^bb75, ^bb78, ^bb79, ^bb81, ^bb82, ^bb85, ^bb86, ^bb87, ^bb88, ^bb89, ^bb91, ^bb92, ^bb93, ^bb95, ^bb96, ^bb97
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb16
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %46 = arith.addi %44, %c32_i64 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %47 = arith.cmpi slt, %46, %c0_i64_8 : i64
    %c84_i8_9 = arith.constant 84 : i8
    cf.cond_br %47, ^bb1(%c84_i8_9 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_10 = arith.constant 32 : i64
    %48 = arith.addi %46, %c31_i64 : i64
    %49 = arith.divui %48, %c32_i64_10 : i64
    %c32_i64_11 = arith.constant 32 : i64
    %50 = arith.muli %49, %c32_i64_11 : i64
    %51 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c31_i64_12 = arith.constant 31 : i64
    %c32_i64_13 = arith.constant 32 : i64
    %53 = arith.addi %52, %c31_i64_12 : i64
    %54 = arith.divui %53, %c32_i64_13 : i64
    %55 = arith.muli %54, %c32_i64_11 : i64
    %56 = arith.cmpi ult, %55, %50 : i64
    %57 = scf.if %56 -> (i64) {
      %c3_i64_142 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %391 = arith.muli %54, %54 : i64
      %392 = arith.divui %391, %c512_i64 : i64
      %393 = arith.muli %54, %c3_i64_142 : i64
      %394 = arith.addi %392, %393 : i64
      %c3_i64_143 = arith.constant 3 : i64
      %c512_i64_144 = arith.constant 512 : i64
      %395 = arith.muli %49, %49 : i64
      %396 = arith.divui %395, %c512_i64_144 : i64
      %397 = arith.muli %49, %c3_i64_143 : i64
      %398 = arith.addi %396, %397 : i64
      %399 = arith.subi %398, %394 : i64
      scf.yield %399 : i64
    } else {
      %c0_i64_142 = arith.constant 0 : i64
      scf.yield %c0_i64_142 : i64
    }
    %58 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %60 = arith.cmpi ult, %59, %57 : i64
    scf.if %60 {
    } else {
      %391 = arith.subi %59, %57 : i64
      llvm.store %391, %58 : i64, !llvm.ptr
    }
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %60, ^bb1(%c80_i8_14 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %61 = call @dora_fn_extend_memory(%arg0, %50) : (!llvm.ptr, i64) -> !llvm.ptr
    %62 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %63 = llvm.load %62 : !llvm.ptr -> !llvm.ptr
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %66 = arith.cmpi ne, %65, %c0_i8 : i8
    cf.cond_br %66, ^bb1(%65 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %67 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %63, %67 : !llvm.ptr, !llvm.ptr
    %68 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %50, %68 : i64, !llvm.ptr
    %69 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.getelementptr %70[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %72, %71 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_15 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %75 = arith.addi %74, %c-2_i64 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %76 = arith.cmpi ult, %74, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %76, ^bb1(%c91_i8 : i8), ^bb11
  ^bb17:  // pred: ^bb7
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %79, ^bb18, ^bb1(%c80_i8_17 : i8)
  ^bb18:  // pred: ^bb17
    %80 = arith.subi %78, %c3_i64_16 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c17_i256 = arith.constant 17 : i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %86 = arith.addi %85, %c1_i64_19 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %c1024_i64_18, %86 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %87, ^bb1(%c92_i8_20 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_21 = arith.constant 3 : i64
    %90 = arith.cmpi uge, %89, %c3_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %90, ^bb22, ^bb1(%c80_i8_22 : i8)
  ^bb22:  // pred: ^bb21
    %91 = arith.subi %89, %c3_i64_21 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c15_i256 = arith.constant 15 : i256
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %93 : i256, !llvm.ptr
    %94 = llvm.getelementptr %93[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb24:  // pred: ^bb26
    %95 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %97 = arith.addi %96, %c1_i64_24 : i64
    llvm.store %97, %95 : i64, !llvm.ptr
    %98 = arith.cmpi ult, %c1024_i64_23, %97 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %98, ^bb1(%c92_i8_25 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    %101 = arith.cmpi uge, %100, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %101, ^bb26, ^bb1(%c80_i8_27 : i8)
  ^bb26:  // pred: ^bb25
    %102 = arith.subi %100, %c3_i64_26 : i64
    llvm.store %102, %99 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb28
    %c0_i256_28 = arith.constant 0 : i256
    %103 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_28, %104 : i256, !llvm.ptr
    %105 = llvm.getelementptr %104[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %105, %103 : !llvm.ptr, !llvm.ptr
    cf.br ^bb40
  ^bb28:  // pred: ^bb30
    %106 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_29 = arith.constant 1024 : i64
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %c1_i64_30 = arith.constant 1 : i64
    %108 = arith.addi %107, %c1_i64_30 : i64
    llvm.store %108, %106 : i64, !llvm.ptr
    %109 = arith.cmpi ult, %c1024_i64_29, %108 : i64
    %c92_i8_31 = arith.constant 92 : i8
    cf.cond_br %109, ^bb1(%c92_i8_31 : i8), ^bb27
  ^bb29:  // pred: ^bb23
    %110 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> i64
    %c3_i64_32 = arith.constant 3 : i64
    %112 = arith.cmpi uge, %111, %c3_i64_32 : i64
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %112, ^bb30, ^bb1(%c80_i8_33 : i8)
  ^bb30:  // pred: ^bb29
    %113 = arith.subi %111, %c3_i64_32 : i64
    llvm.store %113, %110 : i64, !llvm.ptr
    cf.br ^bb28
  ^bb31:  // pred: ^bb39
    %114 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> !llvm.ptr
    %116 = llvm.getelementptr %115[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %117 = llvm.load %116 : !llvm.ptr -> i256
    llvm.store %116, %114 : !llvm.ptr, !llvm.ptr
    %118 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> !llvm.ptr
    %120 = llvm.getelementptr %119[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %121 = llvm.load %120 : !llvm.ptr -> i256
    llvm.store %120, %118 : !llvm.ptr, !llvm.ptr
    %122 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> !llvm.ptr
    %124 = llvm.getelementptr %123[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %125 = llvm.load %124 : !llvm.ptr -> i256
    llvm.store %124, %122 : !llvm.ptr, !llvm.ptr
    %126 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %127, ^bb1(%c87_i8 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %128 = arith.trunci %121 : i256 to i64
    %c0_i64_34 = arith.constant 0 : i64
    %129 = arith.cmpi slt, %128, %c0_i64_34 : i64
    %c84_i8_35 = arith.constant 84 : i8
    cf.cond_br %129, ^bb1(%c84_i8_35 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %130 = arith.trunci %125 : i256 to i64
    %c0_i64_36 = arith.constant 0 : i64
    %131 = arith.cmpi slt, %130, %c0_i64_36 : i64
    %c84_i8_37 = arith.constant 84 : i8
    cf.cond_br %131, ^bb1(%c84_i8_37 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c0_i64_38 = arith.constant 0 : i64
    %132 = arith.cmpi ne, %130, %c0_i64_38 : i64
    cf.cond_br %132, ^bb85, ^bb35
  ^bb35:  // 2 preds: ^bb34, ^bb90
    %c32000_i64 = arith.constant 32000 : i64
    %133 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %134 = llvm.load %133 : !llvm.ptr -> i64
    %135 = arith.cmpi ult, %134, %c32000_i64 : i64
    scf.if %135 {
    } else {
      %391 = arith.subi %134, %c32000_i64 : i64
      llvm.store %391, %133 : i64, !llvm.ptr
    }
    %c80_i8_39 = arith.constant 80 : i8
    cf.cond_br %135, ^bb1(%c80_i8_39 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %c1_i256 = arith.constant 1 : i256
    %136 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %117, %136 {alignment = 1 : i64} : i256, !llvm.ptr
    %137 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %138 = llvm.load %137 : !llvm.ptr -> i64
    %139 = call @dora_fn_create(%arg0, %130, %128, %136, %138) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %140 = llvm.getelementptr %139[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %141 = llvm.load %140 : !llvm.ptr -> i8
    %c0_i8_40 = arith.constant 0 : i8
    %142 = arith.cmpi ne, %141, %c0_i8_40 : i8
    cf.cond_br %142, ^bb1(%141 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %143 = llvm.getelementptr %139[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %144 = llvm.load %143 : !llvm.ptr -> i64
    %145 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> i64
    %147 = arith.cmpi ult, %146, %144 : i64
    scf.if %147 {
    } else {
      %391 = arith.subi %146, %144 : i64
      llvm.store %391, %145 : i64, !llvm.ptr
    }
    %c80_i8_41 = arith.constant 80 : i8
    cf.cond_br %147, ^bb1(%c80_i8_41 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %148 = llvm.load %136 : !llvm.ptr -> i256
    %149 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> !llvm.ptr
    llvm.store %148, %150 : i256, !llvm.ptr
    %151 = llvm.getelementptr %150[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %151, %149 : !llvm.ptr, !llvm.ptr
    cf.br ^bb44
  ^bb39:  // pred: ^bb41
    %152 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %c-2_i64_43 = arith.constant -2 : i64
    %154 = arith.addi %153, %c-2_i64_43 : i64
    llvm.store %154, %152 : i64, !llvm.ptr
    %c3_i64_44 = arith.constant 3 : i64
    %155 = arith.cmpi ult, %153, %c3_i64_44 : i64
    %c91_i8_45 = arith.constant 91 : i8
    cf.cond_br %155, ^bb1(%c91_i8_45 : i8), ^bb31
  ^bb40:  // pred: ^bb27
    %156 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> i64
    %c0_i64_46 = arith.constant 0 : i64
    %158 = arith.cmpi uge, %157, %c0_i64_46 : i64
    %c80_i8_47 = arith.constant 80 : i8
    cf.cond_br %158, ^bb41, ^bb1(%c80_i8_47 : i8)
  ^bb41:  // pred: ^bb40
    %159 = arith.subi %157, %c0_i64_46 : i64
    llvm.store %159, %156 : i64, !llvm.ptr
    cf.br ^bb39
  ^bb42:  // pred: ^bb43
    %c0_i256_48 = arith.constant 0 : i256
    %160 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_48, %161 : i256, !llvm.ptr
    %162 = llvm.getelementptr %161[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    cf.br ^bb48
  ^bb43:  // pred: ^bb45
    %163 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_49 = arith.constant 1024 : i64
    %164 = llvm.load %163 : !llvm.ptr -> i64
    %c1_i64_50 = arith.constant 1 : i64
    %165 = arith.addi %164, %c1_i64_50 : i64
    llvm.store %165, %163 : i64, !llvm.ptr
    %166 = arith.cmpi ult, %c1024_i64_49, %165 : i64
    %c92_i8_51 = arith.constant 92 : i8
    cf.cond_br %166, ^bb1(%c92_i8_51 : i8), ^bb42
  ^bb44:  // pred: ^bb38
    %167 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %168 = llvm.load %167 : !llvm.ptr -> i64
    %c3_i64_52 = arith.constant 3 : i64
    %169 = arith.cmpi uge, %168, %c3_i64_52 : i64
    %c80_i8_53 = arith.constant 80 : i8
    cf.cond_br %169, ^bb45, ^bb1(%c80_i8_53 : i8)
  ^bb45:  // pred: ^bb44
    %170 = arith.subi %168, %c3_i64_52 : i64
    llvm.store %170, %167 : i64, !llvm.ptr
    cf.br ^bb43
  ^bb46:  // pred: ^bb47
    %c0_i256_54 = arith.constant 0 : i256
    %171 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %172 = llvm.load %171 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_54, %172 : i256, !llvm.ptr
    %173 = llvm.getelementptr %172[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %173, %171 : !llvm.ptr, !llvm.ptr
    cf.br ^bb52
  ^bb47:  // pred: ^bb49
    %174 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_55 = arith.constant 1024 : i64
    %175 = llvm.load %174 : !llvm.ptr -> i64
    %c1_i64_56 = arith.constant 1 : i64
    %176 = arith.addi %175, %c1_i64_56 : i64
    llvm.store %176, %174 : i64, !llvm.ptr
    %177 = arith.cmpi ult, %c1024_i64_55, %176 : i64
    %c92_i8_57 = arith.constant 92 : i8
    cf.cond_br %177, ^bb1(%c92_i8_57 : i8), ^bb46
  ^bb48:  // pred: ^bb42
    %178 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %179 = llvm.load %178 : !llvm.ptr -> i64
    %c3_i64_58 = arith.constant 3 : i64
    %180 = arith.cmpi uge, %179, %c3_i64_58 : i64
    %c80_i8_59 = arith.constant 80 : i8
    cf.cond_br %180, ^bb49, ^bb1(%c80_i8_59 : i8)
  ^bb49:  // pred: ^bb48
    %181 = arith.subi %179, %c3_i64_58 : i64
    llvm.store %181, %178 : i64, !llvm.ptr
    cf.br ^bb47
  ^bb50:  // pred: ^bb51
    %c0_i256_60 = arith.constant 0 : i256
    %182 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %183 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_60, %183 : i256, !llvm.ptr
    %184 = llvm.getelementptr %183[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %184, %182 : !llvm.ptr, !llvm.ptr
    cf.br ^bb56
  ^bb51:  // pred: ^bb53
    %185 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_61 = arith.constant 1024 : i64
    %186 = llvm.load %185 : !llvm.ptr -> i64
    %c1_i64_62 = arith.constant 1 : i64
    %187 = arith.addi %186, %c1_i64_62 : i64
    llvm.store %187, %185 : i64, !llvm.ptr
    %188 = arith.cmpi ult, %c1024_i64_61, %187 : i64
    %c92_i8_63 = arith.constant 92 : i8
    cf.cond_br %188, ^bb1(%c92_i8_63 : i8), ^bb50
  ^bb52:  // pred: ^bb46
    %189 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> i64
    %c3_i64_64 = arith.constant 3 : i64
    %191 = arith.cmpi uge, %190, %c3_i64_64 : i64
    %c80_i8_65 = arith.constant 80 : i8
    cf.cond_br %191, ^bb53, ^bb1(%c80_i8_65 : i8)
  ^bb53:  // pred: ^bb52
    %192 = arith.subi %190, %c3_i64_64 : i64
    llvm.store %192, %189 : i64, !llvm.ptr
    cf.br ^bb51
  ^bb54:  // pred: ^bb55
    %c0_i256_66 = arith.constant 0 : i256
    %193 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_66, %194 : i256, !llvm.ptr
    %195 = llvm.getelementptr %194[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %195, %193 : !llvm.ptr, !llvm.ptr
    cf.br ^bb60
  ^bb55:  // pred: ^bb57
    %196 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_67 = arith.constant 1024 : i64
    %197 = llvm.load %196 : !llvm.ptr -> i64
    %c1_i64_68 = arith.constant 1 : i64
    %198 = arith.addi %197, %c1_i64_68 : i64
    llvm.store %198, %196 : i64, !llvm.ptr
    %199 = arith.cmpi ult, %c1024_i64_67, %198 : i64
    %c92_i8_69 = arith.constant 92 : i8
    cf.cond_br %199, ^bb1(%c92_i8_69 : i8), ^bb54
  ^bb56:  // pred: ^bb50
    %200 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %201 = llvm.load %200 : !llvm.ptr -> i64
    %c3_i64_70 = arith.constant 3 : i64
    %202 = arith.cmpi uge, %201, %c3_i64_70 : i64
    %c80_i8_71 = arith.constant 80 : i8
    cf.cond_br %202, ^bb57, ^bb1(%c80_i8_71 : i8)
  ^bb57:  // pred: ^bb56
    %203 = arith.subi %201, %c3_i64_70 : i64
    llvm.store %203, %200 : i64, !llvm.ptr
    cf.br ^bb55
  ^bb58:  // pred: ^bb59
    %c0_i256_72 = arith.constant 0 : i256
    %204 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_72, %205 : i256, !llvm.ptr
    %206 = llvm.getelementptr %205[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %206, %204 : !llvm.ptr, !llvm.ptr
    cf.br ^bb64
  ^bb59:  // pred: ^bb61
    %207 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_73 = arith.constant 1024 : i64
    %208 = llvm.load %207 : !llvm.ptr -> i64
    %c1_i64_74 = arith.constant 1 : i64
    %209 = arith.addi %208, %c1_i64_74 : i64
    llvm.store %209, %207 : i64, !llvm.ptr
    %210 = arith.cmpi ult, %c1024_i64_73, %209 : i64
    %c92_i8_75 = arith.constant 92 : i8
    cf.cond_br %210, ^bb1(%c92_i8_75 : i8), ^bb58
  ^bb60:  // pred: ^bb54
    %211 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %212 = llvm.load %211 : !llvm.ptr -> i64
    %c3_i64_76 = arith.constant 3 : i64
    %213 = arith.cmpi uge, %212, %c3_i64_76 : i64
    %c80_i8_77 = arith.constant 80 : i8
    cf.cond_br %213, ^bb61, ^bb1(%c80_i8_77 : i8)
  ^bb61:  // pred: ^bb60
    %214 = arith.subi %212, %c3_i64_76 : i64
    llvm.store %214, %211 : i64, !llvm.ptr
    cf.br ^bb59
  ^bb62:  // pred: ^bb63
    %215 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %216 = llvm.load %215 : !llvm.ptr -> !llvm.ptr
    %217 = llvm.getelementptr %216[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %218 = llvm.load %217 : !llvm.ptr -> i256
    %219 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %220 = llvm.load %219 : !llvm.ptr -> !llvm.ptr
    llvm.store %218, %220 : i256, !llvm.ptr
    %221 = llvm.getelementptr %220[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %221, %219 : !llvm.ptr, !llvm.ptr
    cf.br ^bb68
  ^bb63:  // pred: ^bb65
    %222 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_78 = arith.constant 1024 : i64
    %223 = llvm.load %222 : !llvm.ptr -> i64
    %c1_i64_79 = arith.constant 1 : i64
    %224 = arith.addi %223, %c1_i64_79 : i64
    llvm.store %224, %222 : i64, !llvm.ptr
    %225 = arith.cmpi ult, %c1024_i64_78, %224 : i64
    %c92_i8_80 = arith.constant 92 : i8
    cf.cond_br %225, ^bb1(%c92_i8_80 : i8), ^bb62
  ^bb64:  // pred: ^bb58
    %226 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %227 = llvm.load %226 : !llvm.ptr -> i64
    %c3_i64_81 = arith.constant 3 : i64
    %228 = arith.cmpi uge, %227, %c3_i64_81 : i64
    %c80_i8_82 = arith.constant 80 : i8
    cf.cond_br %228, ^bb65, ^bb1(%c80_i8_82 : i8)
  ^bb65:  // pred: ^bb64
    %229 = arith.subi %227, %c3_i64_81 : i64
    llvm.store %229, %226 : i64, !llvm.ptr
    cf.br ^bb63
  ^bb66:  // pred: ^bb67
    %c65535_i256 = arith.constant 65535 : i256
    %230 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %231 = llvm.load %230 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %231 : i256, !llvm.ptr
    %232 = llvm.getelementptr %231[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %232, %230 : !llvm.ptr, !llvm.ptr
    cf.br ^bb82
  ^bb67:  // pred: ^bb69
    %233 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_83 = arith.constant 1024 : i64
    %234 = llvm.load %233 : !llvm.ptr -> i64
    %c1_i64_84 = arith.constant 1 : i64
    %235 = arith.addi %234, %c1_i64_84 : i64
    llvm.store %235, %233 : i64, !llvm.ptr
    %236 = arith.cmpi ult, %c1024_i64_83, %235 : i64
    %c92_i8_85 = arith.constant 92 : i8
    cf.cond_br %236, ^bb1(%c92_i8_85 : i8), ^bb66
  ^bb68:  // pred: ^bb62
    %237 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> i64
    %c3_i64_86 = arith.constant 3 : i64
    %239 = arith.cmpi uge, %238, %c3_i64_86 : i64
    %c80_i8_87 = arith.constant 80 : i8
    cf.cond_br %239, ^bb69, ^bb1(%c80_i8_87 : i8)
  ^bb69:  // pred: ^bb68
    %240 = arith.subi %238, %c3_i64_86 : i64
    llvm.store %240, %237 : i64, !llvm.ptr
    cf.br ^bb67
  ^bb70:  // pred: ^bb81
    %241 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %242 = llvm.load %241 : !llvm.ptr -> !llvm.ptr
    %243 = llvm.getelementptr %242[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %244 = llvm.load %243 : !llvm.ptr -> i256
    llvm.store %243, %241 : !llvm.ptr, !llvm.ptr
    %245 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %246 = llvm.load %245 : !llvm.ptr -> !llvm.ptr
    %247 = llvm.getelementptr %246[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %248 = llvm.load %247 : !llvm.ptr -> i256
    llvm.store %247, %245 : !llvm.ptr, !llvm.ptr
    %249 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> !llvm.ptr
    %251 = llvm.getelementptr %250[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %252 = llvm.load %251 : !llvm.ptr -> i256
    llvm.store %251, %249 : !llvm.ptr, !llvm.ptr
    %253 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %254 = llvm.load %253 : !llvm.ptr -> !llvm.ptr
    %255 = llvm.getelementptr %254[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %256 = llvm.load %255 : !llvm.ptr -> i256
    llvm.store %255, %253 : !llvm.ptr, !llvm.ptr
    %257 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %258 = llvm.load %257 : !llvm.ptr -> !llvm.ptr
    %259 = llvm.getelementptr %258[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %260 = llvm.load %259 : !llvm.ptr -> i256
    llvm.store %259, %257 : !llvm.ptr, !llvm.ptr
    %261 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %262 = llvm.load %261 : !llvm.ptr -> !llvm.ptr
    %263 = llvm.getelementptr %262[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %264 = llvm.load %263 : !llvm.ptr -> i256
    llvm.store %263, %261 : !llvm.ptr, !llvm.ptr
    %265 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %266 = llvm.load %265 : !llvm.ptr -> !llvm.ptr
    %267 = llvm.getelementptr %266[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %268 = llvm.load %267 : !llvm.ptr -> i256
    llvm.store %267, %265 : !llvm.ptr, !llvm.ptr
    %269 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %270 = llvm.load %269 : !llvm.ptr -> i1
    %c0_i256_88 = arith.constant 0 : i256
    %271 = arith.cmpi ne, %252, %c0_i256_88 : i256
    %272 = arith.andi %270, %271 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %272, ^bb1(%c86_i8 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %273 = arith.trunci %244 : i256 to i64
    %c0_i64_89 = arith.constant 0 : i64
    %274 = arith.cmpi slt, %273, %c0_i64_89 : i64
    %c84_i8_90 = arith.constant 84 : i8
    cf.cond_br %274, ^bb1(%c84_i8_90 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %275 = arith.trunci %256 : i256 to i64
    %c0_i64_91 = arith.constant 0 : i64
    %276 = arith.cmpi slt, %275, %c0_i64_91 : i64
    %c84_i8_92 = arith.constant 84 : i8
    cf.cond_br %276, ^bb1(%c84_i8_92 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %277 = arith.trunci %260 : i256 to i64
    %c0_i64_93 = arith.constant 0 : i64
    %278 = arith.cmpi slt, %277, %c0_i64_93 : i64
    %c84_i8_94 = arith.constant 84 : i8
    cf.cond_br %278, ^bb1(%c84_i8_94 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %279 = arith.trunci %264 : i256 to i64
    %c0_i64_95 = arith.constant 0 : i64
    %280 = arith.cmpi slt, %279, %c0_i64_95 : i64
    %c84_i8_96 = arith.constant 84 : i8
    cf.cond_br %280, ^bb1(%c84_i8_96 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %281 = arith.trunci %268 : i256 to i64
    %c0_i64_97 = arith.constant 0 : i64
    %282 = arith.cmpi slt, %281, %c0_i64_97 : i64
    %c84_i8_98 = arith.constant 84 : i8
    cf.cond_br %282, ^bb1(%c84_i8_98 : i8), ^bb76
  ^bb76:  // pred: ^bb75
    %c0_i64_99 = arith.constant 0 : i64
    %283 = arith.cmpi ne, %277, %c0_i64_99 : i64
    cf.cond_br %283, ^bb91, ^bb77
  ^bb77:  // 2 preds: ^bb76, ^bb94
    %c0_i64_100 = arith.constant 0 : i64
    %284 = arith.cmpi ne, %281, %c0_i64_100 : i64
    cf.cond_br %284, ^bb95, ^bb78
  ^bb78:  // 2 preds: ^bb77, ^bb98
    %285 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %286 = llvm.load %285 : !llvm.ptr -> i64
    %c1_i256_101 = arith.constant 1 : i256
    %287 = llvm.alloca %c1_i256_101 x i256 : (i256) -> !llvm.ptr
    llvm.store %252, %287 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_102 = arith.constant 1 : i256
    %288 = llvm.alloca %c1_i256_102 x i256 : (i256) -> !llvm.ptr
    llvm.store %248, %288 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i8_103 = arith.constant 0 : i8
    %289 = call @dora_fn_call(%arg0, %273, %288, %287, %275, %277, %279, %281, %286, %c0_i8_103) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %290 = llvm.getelementptr %289[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %291 = llvm.load %290 : !llvm.ptr -> i8
    %292 = llvm.getelementptr %289[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %293 = llvm.load %292 : !llvm.ptr -> i8
    %c0_i8_104 = arith.constant 0 : i8
    %294 = arith.cmpi ne, %293, %c0_i8_104 : i8
    cf.cond_br %294, ^bb1(%293 : i8), ^bb79
  ^bb79:  // pred: ^bb78
    %295 = llvm.getelementptr %289[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %296 = llvm.load %295 : !llvm.ptr -> i64
    %297 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %298 = llvm.load %297 : !llvm.ptr -> i64
    %299 = arith.cmpi ult, %298, %296 : i64
    scf.if %299 {
    } else {
      %391 = arith.subi %298, %296 : i64
      llvm.store %391, %297 : i64, !llvm.ptr
    }
    %c80_i8_105 = arith.constant 80 : i8
    cf.cond_br %299, ^bb1(%c80_i8_105 : i8), ^bb80
  ^bb80:  // pred: ^bb79
    %300 = arith.extui %291 : i8 to i256
    %301 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %302 = llvm.load %301 : !llvm.ptr -> !llvm.ptr
    llvm.store %300, %302 : i256, !llvm.ptr
    %303 = llvm.getelementptr %302[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %303, %301 : !llvm.ptr, !llvm.ptr
    cf.br ^bb84
  ^bb81:  // pred: ^bb83
    %304 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_106 = arith.constant 1024 : i64
    %305 = llvm.load %304 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %306 = arith.addi %305, %c-6_i64 : i64
    llvm.store %306, %304 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %307 = arith.cmpi ult, %305, %c7_i64 : i64
    %c91_i8_107 = arith.constant 91 : i8
    cf.cond_br %307, ^bb1(%c91_i8_107 : i8), ^bb70
  ^bb82:  // pred: ^bb66
    %308 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %309 = llvm.load %308 : !llvm.ptr -> i64
    %c0_i64_108 = arith.constant 0 : i64
    %310 = arith.cmpi uge, %309, %c0_i64_108 : i64
    %c80_i8_109 = arith.constant 80 : i8
    cf.cond_br %310, ^bb83, ^bb1(%c80_i8_109 : i8)
  ^bb83:  // pred: ^bb82
    %311 = arith.subi %309, %c0_i64_108 : i64
    llvm.store %311, %308 : i64, !llvm.ptr
    cf.br ^bb81
  ^bb84:  // pred: ^bb80
    %c0_i64_110 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %312 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %313 = llvm.load %312 : !llvm.ptr -> i64
    %314 = call @dora_fn_write_result(%arg0, %c0_i64_110, %c0_i64_110, %313, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb85:  // pred: ^bb34
    %c49152_i64 = arith.constant 49152 : i64
    %315 = arith.cmpi ugt, %130, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %315, ^bb1(%c100_i8 : i8), ^bb86
  ^bb86:  // pred: ^bb85
    %c31_i64_111 = arith.constant 31 : i64
    %c32_i64_112 = arith.constant 32 : i64
    %316 = arith.addi %130, %c31_i64_111 : i64
    %317 = arith.divui %316, %c32_i64_112 : i64
    %c2_i64_113 = arith.constant 2 : i64
    %318 = arith.muli %317, %c2_i64_113 : i64
    %319 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %320 = llvm.load %319 : !llvm.ptr -> i64
    %321 = arith.cmpi ult, %320, %318 : i64
    scf.if %321 {
    } else {
      %391 = arith.subi %320, %318 : i64
      llvm.store %391, %319 : i64, !llvm.ptr
    }
    %c80_i8_114 = arith.constant 80 : i8
    cf.cond_br %321, ^bb1(%c80_i8_114 : i8), ^bb87
  ^bb87:  // pred: ^bb86
    %322 = arith.addi %128, %130 : i64
    %c0_i64_115 = arith.constant 0 : i64
    %323 = arith.cmpi slt, %322, %c0_i64_115 : i64
    %c84_i8_116 = arith.constant 84 : i8
    cf.cond_br %323, ^bb1(%c84_i8_116 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %c31_i64_117 = arith.constant 31 : i64
    %c32_i64_118 = arith.constant 32 : i64
    %324 = arith.addi %322, %c31_i64_117 : i64
    %325 = arith.divui %324, %c32_i64_118 : i64
    %c32_i64_119 = arith.constant 32 : i64
    %326 = arith.muli %325, %c32_i64_119 : i64
    %327 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %328 = llvm.load %327 : !llvm.ptr -> i64
    %c31_i64_120 = arith.constant 31 : i64
    %c32_i64_121 = arith.constant 32 : i64
    %329 = arith.addi %328, %c31_i64_120 : i64
    %330 = arith.divui %329, %c32_i64_121 : i64
    %331 = arith.muli %330, %c32_i64_119 : i64
    %332 = arith.cmpi ult, %331, %326 : i64
    %333 = scf.if %332 -> (i64) {
      %c3_i64_142 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %391 = arith.muli %330, %330 : i64
      %392 = arith.divui %391, %c512_i64 : i64
      %393 = arith.muli %330, %c3_i64_142 : i64
      %394 = arith.addi %392, %393 : i64
      %c3_i64_143 = arith.constant 3 : i64
      %c512_i64_144 = arith.constant 512 : i64
      %395 = arith.muli %325, %325 : i64
      %396 = arith.divui %395, %c512_i64_144 : i64
      %397 = arith.muli %325, %c3_i64_143 : i64
      %398 = arith.addi %396, %397 : i64
      %399 = arith.subi %398, %394 : i64
      scf.yield %399 : i64
    } else {
      %c0_i64_142 = arith.constant 0 : i64
      scf.yield %c0_i64_142 : i64
    }
    %334 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %335 = llvm.load %334 : !llvm.ptr -> i64
    %336 = arith.cmpi ult, %335, %333 : i64
    scf.if %336 {
    } else {
      %391 = arith.subi %335, %333 : i64
      llvm.store %391, %334 : i64, !llvm.ptr
    }
    %c80_i8_122 = arith.constant 80 : i8
    cf.cond_br %336, ^bb1(%c80_i8_122 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    %337 = call @dora_fn_extend_memory(%arg0, %326) : (!llvm.ptr, i64) -> !llvm.ptr
    %338 = llvm.getelementptr %337[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %339 = llvm.load %338 : !llvm.ptr -> !llvm.ptr
    %340 = llvm.getelementptr %337[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %341 = llvm.load %340 : !llvm.ptr -> i8
    %c0_i8_123 = arith.constant 0 : i8
    %342 = arith.cmpi ne, %341, %c0_i8_123 : i8
    cf.cond_br %342, ^bb1(%341 : i8), ^bb90
  ^bb90:  // pred: ^bb89
    %343 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %339, %343 : !llvm.ptr, !llvm.ptr
    %344 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %326, %344 : i64, !llvm.ptr
    cf.br ^bb35
  ^bb91:  // pred: ^bb76
    %345 = arith.addi %275, %277 : i64
    %c0_i64_124 = arith.constant 0 : i64
    %346 = arith.cmpi slt, %345, %c0_i64_124 : i64
    %c84_i8_125 = arith.constant 84 : i8
    cf.cond_br %346, ^bb1(%c84_i8_125 : i8), ^bb92
  ^bb92:  // pred: ^bb91
    %c31_i64_126 = arith.constant 31 : i64
    %c32_i64_127 = arith.constant 32 : i64
    %347 = arith.addi %345, %c31_i64_126 : i64
    %348 = arith.divui %347, %c32_i64_127 : i64
    %c32_i64_128 = arith.constant 32 : i64
    %349 = arith.muli %348, %c32_i64_128 : i64
    %350 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %351 = llvm.load %350 : !llvm.ptr -> i64
    %c31_i64_129 = arith.constant 31 : i64
    %c32_i64_130 = arith.constant 32 : i64
    %352 = arith.addi %351, %c31_i64_129 : i64
    %353 = arith.divui %352, %c32_i64_130 : i64
    %354 = arith.muli %353, %c32_i64_128 : i64
    %355 = arith.cmpi ult, %354, %349 : i64
    %356 = scf.if %355 -> (i64) {
      %c3_i64_142 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %391 = arith.muli %353, %353 : i64
      %392 = arith.divui %391, %c512_i64 : i64
      %393 = arith.muli %353, %c3_i64_142 : i64
      %394 = arith.addi %392, %393 : i64
      %c3_i64_143 = arith.constant 3 : i64
      %c512_i64_144 = arith.constant 512 : i64
      %395 = arith.muli %348, %348 : i64
      %396 = arith.divui %395, %c512_i64_144 : i64
      %397 = arith.muli %348, %c3_i64_143 : i64
      %398 = arith.addi %396, %397 : i64
      %399 = arith.subi %398, %394 : i64
      scf.yield %399 : i64
    } else {
      %c0_i64_142 = arith.constant 0 : i64
      scf.yield %c0_i64_142 : i64
    }
    %357 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %358 = llvm.load %357 : !llvm.ptr -> i64
    %359 = arith.cmpi ult, %358, %356 : i64
    scf.if %359 {
    } else {
      %391 = arith.subi %358, %356 : i64
      llvm.store %391, %357 : i64, !llvm.ptr
    }
    %c80_i8_131 = arith.constant 80 : i8
    cf.cond_br %359, ^bb1(%c80_i8_131 : i8), ^bb93
  ^bb93:  // pred: ^bb92
    %360 = call @dora_fn_extend_memory(%arg0, %349) : (!llvm.ptr, i64) -> !llvm.ptr
    %361 = llvm.getelementptr %360[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %362 = llvm.load %361 : !llvm.ptr -> !llvm.ptr
    %363 = llvm.getelementptr %360[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %364 = llvm.load %363 : !llvm.ptr -> i8
    %c0_i8_132 = arith.constant 0 : i8
    %365 = arith.cmpi ne, %364, %c0_i8_132 : i8
    cf.cond_br %365, ^bb1(%364 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %366 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %362, %366 : !llvm.ptr, !llvm.ptr
    %367 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %349, %367 : i64, !llvm.ptr
    cf.br ^bb77
  ^bb95:  // pred: ^bb77
    %368 = arith.addi %279, %281 : i64
    %c0_i64_133 = arith.constant 0 : i64
    %369 = arith.cmpi slt, %368, %c0_i64_133 : i64
    %c84_i8_134 = arith.constant 84 : i8
    cf.cond_br %369, ^bb1(%c84_i8_134 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %c31_i64_135 = arith.constant 31 : i64
    %c32_i64_136 = arith.constant 32 : i64
    %370 = arith.addi %368, %c31_i64_135 : i64
    %371 = arith.divui %370, %c32_i64_136 : i64
    %c32_i64_137 = arith.constant 32 : i64
    %372 = arith.muli %371, %c32_i64_137 : i64
    %373 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %374 = llvm.load %373 : !llvm.ptr -> i64
    %c31_i64_138 = arith.constant 31 : i64
    %c32_i64_139 = arith.constant 32 : i64
    %375 = arith.addi %374, %c31_i64_138 : i64
    %376 = arith.divui %375, %c32_i64_139 : i64
    %377 = arith.muli %376, %c32_i64_137 : i64
    %378 = arith.cmpi ult, %377, %372 : i64
    %379 = scf.if %378 -> (i64) {
      %c3_i64_142 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %391 = arith.muli %376, %376 : i64
      %392 = arith.divui %391, %c512_i64 : i64
      %393 = arith.muli %376, %c3_i64_142 : i64
      %394 = arith.addi %392, %393 : i64
      %c3_i64_143 = arith.constant 3 : i64
      %c512_i64_144 = arith.constant 512 : i64
      %395 = arith.muli %371, %371 : i64
      %396 = arith.divui %395, %c512_i64_144 : i64
      %397 = arith.muli %371, %c3_i64_143 : i64
      %398 = arith.addi %396, %397 : i64
      %399 = arith.subi %398, %394 : i64
      scf.yield %399 : i64
    } else {
      %c0_i64_142 = arith.constant 0 : i64
      scf.yield %c0_i64_142 : i64
    }
    %380 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %381 = llvm.load %380 : !llvm.ptr -> i64
    %382 = arith.cmpi ult, %381, %379 : i64
    scf.if %382 {
    } else {
      %391 = arith.subi %381, %379 : i64
      llvm.store %391, %380 : i64, !llvm.ptr
    }
    %c80_i8_140 = arith.constant 80 : i8
    cf.cond_br %382, ^bb1(%c80_i8_140 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %383 = call @dora_fn_extend_memory(%arg0, %372) : (!llvm.ptr, i64) -> !llvm.ptr
    %384 = llvm.getelementptr %383[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %385 = llvm.load %384 : !llvm.ptr -> !llvm.ptr
    %386 = llvm.getelementptr %383[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %387 = llvm.load %386 : !llvm.ptr -> i8
    %c0_i8_141 = arith.constant 0 : i8
    %388 = arith.cmpi ne, %387, %c0_i8_141 : i8
    cf.cond_br %388, ^bb1(%387 : i8), ^bb98
  ^bb98:  // pred: ^bb97
    %389 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %385, %389 : !llvm.ptr, !llvm.ptr
    %390 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %372, %390 : i64, !llvm.ptr
    cf.br ^bb78
  }
}
