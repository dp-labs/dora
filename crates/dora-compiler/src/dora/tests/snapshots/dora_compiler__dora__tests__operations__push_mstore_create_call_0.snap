---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 60 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb14, ^bb15, ^bb18, ^bb19, ^bb22, ^bb23, ^bb26, ^bb27, ^bb29, ^bb30, ^bb31, ^bb33, ^bb34, ^bb35, ^bb37, ^bb38, ^bb41, ^bb42, ^bb45, ^bb46, ^bb49, ^bb50, ^bb53, ^bb54, ^bb57, ^bb58, ^bb61, ^bb62, ^bb65, ^bb66, ^bb68, ^bb69, ^bb70, ^bb71, ^bb72, ^bb73, ^bb76, ^bb77, ^bb79, ^bb80, ^bb83, ^bb84, ^bb85, ^bb87, ^bb88, ^bb89, ^bb90, ^bb91, ^bb93, ^bb94, ^bb95, ^bb97, ^bb98, ^bb99
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb14
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %46 = arith.cmpi ne, %c32_i64, %c0_i64_8 : i64
    cf.cond_br %46, ^bb83, ^bb13
  ^bb13:  // 2 preds: ^bb12, ^bb86
    %47 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> !llvm.ptr
    %49 = llvm.getelementptr %48[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %50 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %50, %49 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb19
  ^bb14:  // pred: ^bb16
    %51 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_9 = arith.constant 1024 : i64
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %53 = arith.addi %52, %c-2_i64 : i64
    llvm.store %53, %51 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %54 = arith.cmpi ult, %52, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %54, ^bb1(%c91_i8 : i8), ^bb11
  ^bb15:  // pred: ^bb7
    %55 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %56 = llvm.load %55 : !llvm.ptr -> i64
    %c3_i64_10 = arith.constant 3 : i64
    %57 = arith.cmpi uge, %56, %c3_i64_10 : i64
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %57, ^bb16, ^bb1(%c80_i8_11 : i8)
  ^bb16:  // pred: ^bb15
    %58 = arith.subi %56, %c3_i64_10 : i64
    llvm.store %58, %55 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb17:  // pred: ^bb18
    %c17_i256 = arith.constant 17 : i256
    %59 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %60 = llvm.load %59 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %60 : i256, !llvm.ptr
    %61 = llvm.getelementptr %60[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %61, %59 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb18:  // pred: ^bb20
    %62 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_12 = arith.constant 1024 : i64
    %63 = llvm.load %62 : !llvm.ptr -> i64
    %c1_i64_13 = arith.constant 1 : i64
    %64 = arith.addi %63, %c1_i64_13 : i64
    llvm.store %64, %62 : i64, !llvm.ptr
    %65 = arith.cmpi ult, %c1024_i64_12, %64 : i64
    %c92_i8_14 = arith.constant 92 : i8
    cf.cond_br %65, ^bb1(%c92_i8_14 : i8), ^bb17
  ^bb19:  // pred: ^bb13
    %66 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %67 = llvm.load %66 : !llvm.ptr -> i64
    %c3_i64_15 = arith.constant 3 : i64
    %68 = arith.cmpi uge, %67, %c3_i64_15 : i64
    %c80_i8_16 = arith.constant 80 : i8
    cf.cond_br %68, ^bb20, ^bb1(%c80_i8_16 : i8)
  ^bb20:  // pred: ^bb19
    %69 = arith.subi %67, %c3_i64_15 : i64
    llvm.store %69, %66 : i64, !llvm.ptr
    cf.br ^bb18
  ^bb21:  // pred: ^bb22
    %c15_i256 = arith.constant 15 : i256
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %71 : i256, !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb22:  // pred: ^bb24
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_17 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c1_i64_18 = arith.constant 1 : i64
    %75 = arith.addi %74, %c1_i64_18 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %76 = arith.cmpi ult, %c1024_i64_17, %75 : i64
    %c92_i8_19 = arith.constant 92 : i8
    cf.cond_br %76, ^bb1(%c92_i8_19 : i8), ^bb21
  ^bb23:  // pred: ^bb17
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_20 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_20 : i64
    %c80_i8_21 = arith.constant 80 : i8
    cf.cond_br %79, ^bb24, ^bb1(%c80_i8_21 : i8)
  ^bb24:  // pred: ^bb23
    %80 = arith.subi %78, %c3_i64_20 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb22
  ^bb25:  // pred: ^bb26
    %c0_i256_22 = arith.constant 0 : i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_22, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb38
  ^bb26:  // pred: ^bb28
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %86 = arith.addi %85, %c1_i64_24 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %c1024_i64_23, %86 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %87, ^bb1(%c92_i8_25 : i8), ^bb25
  ^bb27:  // pred: ^bb21
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    %90 = arith.cmpi uge, %89, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %90, ^bb28, ^bb1(%c80_i8_27 : i8)
  ^bb28:  // pred: ^bb27
    %91 = arith.subi %89, %c3_i64_26 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb37
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    %94 = llvm.getelementptr %93[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %95 = llvm.load %94 : !llvm.ptr -> i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    %96 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %97 = llvm.load %96 : !llvm.ptr -> !llvm.ptr
    %98 = llvm.getelementptr %97[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %99 = llvm.load %98 : !llvm.ptr -> i256
    llvm.store %98, %96 : !llvm.ptr, !llvm.ptr
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    %102 = llvm.getelementptr %101[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %103 = llvm.load %102 : !llvm.ptr -> i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    %104 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %105, ^bb1(%c87_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %106 = arith.trunci %99 : i256 to i64
    %c0_i64_28 = arith.constant 0 : i64
    %107 = arith.cmpi slt, %106, %c0_i64_28 : i64
    %c84_i8_29 = arith.constant 84 : i8
    cf.cond_br %107, ^bb1(%c84_i8_29 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %108 = arith.trunci %103 : i256 to i64
    %c0_i64_30 = arith.constant 0 : i64
    %109 = arith.cmpi slt, %108, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %109, ^bb1(%c84_i8_31 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i64_32 = arith.constant 0 : i64
    %110 = arith.cmpi ne, %108, %c0_i64_32 : i64
    cf.cond_br %110, ^bb87, ^bb33
  ^bb33:  // 2 preds: ^bb32, ^bb92
    %c32000_i64 = arith.constant 32000 : i64
    %111 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> i64
    %113 = arith.cmpi ult, %112, %c32000_i64 : i64
    scf.if %113 {
    } else {
      %392 = arith.subi %112, %c32000_i64 : i64
      llvm.store %392, %111 : i64, !llvm.ptr
    }
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %113, ^bb1(%c80_i8_33 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c1_i256 = arith.constant 1 : i256
    %114 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %95, %114 {alignment = 1 : i64} : i256, !llvm.ptr
    %115 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %116 = llvm.load %115 : !llvm.ptr -> i64
    %117 = call @dora_fn_create(%arg0, %108, %106, %114, %116) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %118 = llvm.getelementptr %117[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %119 = llvm.load %118 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %120 = arith.cmpi ne, %119, %c0_i8 : i8
    cf.cond_br %120, ^bb1(%119 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %121 = llvm.getelementptr %117[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %122 = llvm.load %121 : !llvm.ptr -> i64
    %123 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %124 = llvm.load %123 : !llvm.ptr -> i64
    %125 = arith.cmpi ult, %124, %122 : i64
    scf.if %125 {
    } else {
      %392 = arith.subi %124, %122 : i64
      llvm.store %392, %123 : i64, !llvm.ptr
    }
    %c80_i8_34 = arith.constant 80 : i8
    cf.cond_br %125, ^bb1(%c80_i8_34 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %126 = llvm.load %114 : !llvm.ptr -> i256
    %127 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %128 = llvm.load %127 : !llvm.ptr -> !llvm.ptr
    llvm.store %126, %128 : i256, !llvm.ptr
    %129 = llvm.getelementptr %128[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %129, %127 : !llvm.ptr, !llvm.ptr
    cf.br ^bb42
  ^bb37:  // pred: ^bb39
    %130 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_35 = arith.constant 1024 : i64
    %131 = llvm.load %130 : !llvm.ptr -> i64
    %c-2_i64_36 = arith.constant -2 : i64
    %132 = arith.addi %131, %c-2_i64_36 : i64
    llvm.store %132, %130 : i64, !llvm.ptr
    %c3_i64_37 = arith.constant 3 : i64
    %133 = arith.cmpi ult, %131, %c3_i64_37 : i64
    %c91_i8_38 = arith.constant 91 : i8
    cf.cond_br %133, ^bb1(%c91_i8_38 : i8), ^bb29
  ^bb38:  // pred: ^bb25
    %134 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> i64
    %c0_i64_39 = arith.constant 0 : i64
    %136 = arith.cmpi uge, %135, %c0_i64_39 : i64
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %136, ^bb39, ^bb1(%c80_i8_40 : i8)
  ^bb39:  // pred: ^bb38
    %137 = arith.subi %135, %c0_i64_39 : i64
    llvm.store %137, %134 : i64, !llvm.ptr
    cf.br ^bb37
  ^bb40:  // pred: ^bb41
    %c0_i256_41 = arith.constant 0 : i256
    %138 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %139 = llvm.load %138 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_41, %139 : i256, !llvm.ptr
    %140 = llvm.getelementptr %139[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %140, %138 : !llvm.ptr, !llvm.ptr
    cf.br ^bb46
  ^bb41:  // pred: ^bb43
    %141 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %142 = llvm.load %141 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %143 = arith.addi %142, %c1_i64_43 : i64
    llvm.store %143, %141 : i64, !llvm.ptr
    %144 = arith.cmpi ult, %c1024_i64_42, %143 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %144, ^bb1(%c92_i8_44 : i8), ^bb40
  ^bb42:  // pred: ^bb36
    %145 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    %147 = arith.cmpi uge, %146, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %147, ^bb43, ^bb1(%c80_i8_46 : i8)
  ^bb43:  // pred: ^bb42
    %148 = arith.subi %146, %c3_i64_45 : i64
    llvm.store %148, %145 : i64, !llvm.ptr
    cf.br ^bb41
  ^bb44:  // pred: ^bb45
    %c0_i256_47 = arith.constant 0 : i256
    %149 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_47, %150 : i256, !llvm.ptr
    %151 = llvm.getelementptr %150[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %151, %149 : !llvm.ptr, !llvm.ptr
    cf.br ^bb50
  ^bb45:  // pred: ^bb47
    %152 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_48 = arith.constant 1024 : i64
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %c1_i64_49 = arith.constant 1 : i64
    %154 = arith.addi %153, %c1_i64_49 : i64
    llvm.store %154, %152 : i64, !llvm.ptr
    %155 = arith.cmpi ult, %c1024_i64_48, %154 : i64
    %c92_i8_50 = arith.constant 92 : i8
    cf.cond_br %155, ^bb1(%c92_i8_50 : i8), ^bb44
  ^bb46:  // pred: ^bb40
    %156 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> i64
    %c3_i64_51 = arith.constant 3 : i64
    %158 = arith.cmpi uge, %157, %c3_i64_51 : i64
    %c80_i8_52 = arith.constant 80 : i8
    cf.cond_br %158, ^bb47, ^bb1(%c80_i8_52 : i8)
  ^bb47:  // pred: ^bb46
    %159 = arith.subi %157, %c3_i64_51 : i64
    llvm.store %159, %156 : i64, !llvm.ptr
    cf.br ^bb45
  ^bb48:  // pred: ^bb49
    %c0_i256_53 = arith.constant 0 : i256
    %160 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_53, %161 : i256, !llvm.ptr
    %162 = llvm.getelementptr %161[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    cf.br ^bb54
  ^bb49:  // pred: ^bb51
    %163 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_54 = arith.constant 1024 : i64
    %164 = llvm.load %163 : !llvm.ptr -> i64
    %c1_i64_55 = arith.constant 1 : i64
    %165 = arith.addi %164, %c1_i64_55 : i64
    llvm.store %165, %163 : i64, !llvm.ptr
    %166 = arith.cmpi ult, %c1024_i64_54, %165 : i64
    %c92_i8_56 = arith.constant 92 : i8
    cf.cond_br %166, ^bb1(%c92_i8_56 : i8), ^bb48
  ^bb50:  // pred: ^bb44
    %167 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %168 = llvm.load %167 : !llvm.ptr -> i64
    %c3_i64_57 = arith.constant 3 : i64
    %169 = arith.cmpi uge, %168, %c3_i64_57 : i64
    %c80_i8_58 = arith.constant 80 : i8
    cf.cond_br %169, ^bb51, ^bb1(%c80_i8_58 : i8)
  ^bb51:  // pred: ^bb50
    %170 = arith.subi %168, %c3_i64_57 : i64
    llvm.store %170, %167 : i64, !llvm.ptr
    cf.br ^bb49
  ^bb52:  // pred: ^bb53
    %c0_i256_59 = arith.constant 0 : i256
    %171 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %172 = llvm.load %171 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_59, %172 : i256, !llvm.ptr
    %173 = llvm.getelementptr %172[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %173, %171 : !llvm.ptr, !llvm.ptr
    cf.br ^bb58
  ^bb53:  // pred: ^bb55
    %174 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_60 = arith.constant 1024 : i64
    %175 = llvm.load %174 : !llvm.ptr -> i64
    %c1_i64_61 = arith.constant 1 : i64
    %176 = arith.addi %175, %c1_i64_61 : i64
    llvm.store %176, %174 : i64, !llvm.ptr
    %177 = arith.cmpi ult, %c1024_i64_60, %176 : i64
    %c92_i8_62 = arith.constant 92 : i8
    cf.cond_br %177, ^bb1(%c92_i8_62 : i8), ^bb52
  ^bb54:  // pred: ^bb48
    %178 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %179 = llvm.load %178 : !llvm.ptr -> i64
    %c3_i64_63 = arith.constant 3 : i64
    %180 = arith.cmpi uge, %179, %c3_i64_63 : i64
    %c80_i8_64 = arith.constant 80 : i8
    cf.cond_br %180, ^bb55, ^bb1(%c80_i8_64 : i8)
  ^bb55:  // pred: ^bb54
    %181 = arith.subi %179, %c3_i64_63 : i64
    llvm.store %181, %178 : i64, !llvm.ptr
    cf.br ^bb53
  ^bb56:  // pred: ^bb57
    %c0_i256_65 = arith.constant 0 : i256
    %182 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %183 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_65, %183 : i256, !llvm.ptr
    %184 = llvm.getelementptr %183[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %184, %182 : !llvm.ptr, !llvm.ptr
    cf.br ^bb62
  ^bb57:  // pred: ^bb59
    %185 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_66 = arith.constant 1024 : i64
    %186 = llvm.load %185 : !llvm.ptr -> i64
    %c1_i64_67 = arith.constant 1 : i64
    %187 = arith.addi %186, %c1_i64_67 : i64
    llvm.store %187, %185 : i64, !llvm.ptr
    %188 = arith.cmpi ult, %c1024_i64_66, %187 : i64
    %c92_i8_68 = arith.constant 92 : i8
    cf.cond_br %188, ^bb1(%c92_i8_68 : i8), ^bb56
  ^bb58:  // pred: ^bb52
    %189 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> i64
    %c3_i64_69 = arith.constant 3 : i64
    %191 = arith.cmpi uge, %190, %c3_i64_69 : i64
    %c80_i8_70 = arith.constant 80 : i8
    cf.cond_br %191, ^bb59, ^bb1(%c80_i8_70 : i8)
  ^bb59:  // pred: ^bb58
    %192 = arith.subi %190, %c3_i64_69 : i64
    llvm.store %192, %189 : i64, !llvm.ptr
    cf.br ^bb57
  ^bb60:  // pred: ^bb61
    %193 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> !llvm.ptr
    %195 = llvm.getelementptr %194[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %196 = llvm.load %195 : !llvm.ptr -> i256
    %197 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %198 = llvm.load %197 : !llvm.ptr -> !llvm.ptr
    llvm.store %196, %198 : i256, !llvm.ptr
    %199 = llvm.getelementptr %198[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %199, %197 : !llvm.ptr, !llvm.ptr
    cf.br ^bb66
  ^bb61:  // pred: ^bb63
    %200 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_71 = arith.constant 1024 : i64
    %201 = llvm.load %200 : !llvm.ptr -> i64
    %c1_i64_72 = arith.constant 1 : i64
    %202 = arith.addi %201, %c1_i64_72 : i64
    llvm.store %202, %200 : i64, !llvm.ptr
    %203 = arith.cmpi ult, %c1024_i64_71, %202 : i64
    %c92_i8_73 = arith.constant 92 : i8
    cf.cond_br %203, ^bb1(%c92_i8_73 : i8), ^bb60
  ^bb62:  // pred: ^bb56
    %204 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> i64
    %c3_i64_74 = arith.constant 3 : i64
    %206 = arith.cmpi uge, %205, %c3_i64_74 : i64
    %c80_i8_75 = arith.constant 80 : i8
    cf.cond_br %206, ^bb63, ^bb1(%c80_i8_75 : i8)
  ^bb63:  // pred: ^bb62
    %207 = arith.subi %205, %c3_i64_74 : i64
    llvm.store %207, %204 : i64, !llvm.ptr
    cf.br ^bb61
  ^bb64:  // pred: ^bb65
    %c65535_i256 = arith.constant 65535 : i256
    %208 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %209 = llvm.load %208 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %209 : i256, !llvm.ptr
    %210 = llvm.getelementptr %209[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %210, %208 : !llvm.ptr, !llvm.ptr
    cf.br ^bb80
  ^bb65:  // pred: ^bb67
    %211 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_76 = arith.constant 1024 : i64
    %212 = llvm.load %211 : !llvm.ptr -> i64
    %c1_i64_77 = arith.constant 1 : i64
    %213 = arith.addi %212, %c1_i64_77 : i64
    llvm.store %213, %211 : i64, !llvm.ptr
    %214 = arith.cmpi ult, %c1024_i64_76, %213 : i64
    %c92_i8_78 = arith.constant 92 : i8
    cf.cond_br %214, ^bb1(%c92_i8_78 : i8), ^bb64
  ^bb66:  // pred: ^bb60
    %215 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %216 = llvm.load %215 : !llvm.ptr -> i64
    %c3_i64_79 = arith.constant 3 : i64
    %217 = arith.cmpi uge, %216, %c3_i64_79 : i64
    %c80_i8_80 = arith.constant 80 : i8
    cf.cond_br %217, ^bb67, ^bb1(%c80_i8_80 : i8)
  ^bb67:  // pred: ^bb66
    %218 = arith.subi %216, %c3_i64_79 : i64
    llvm.store %218, %215 : i64, !llvm.ptr
    cf.br ^bb65
  ^bb68:  // pred: ^bb79
    %219 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %220 = llvm.load %219 : !llvm.ptr -> !llvm.ptr
    %221 = llvm.getelementptr %220[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %222 = llvm.load %221 : !llvm.ptr -> i256
    llvm.store %221, %219 : !llvm.ptr, !llvm.ptr
    %223 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %224 = llvm.load %223 : !llvm.ptr -> !llvm.ptr
    %225 = llvm.getelementptr %224[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %226 = llvm.load %225 : !llvm.ptr -> i256
    llvm.store %225, %223 : !llvm.ptr, !llvm.ptr
    %227 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %228 = llvm.load %227 : !llvm.ptr -> !llvm.ptr
    %229 = llvm.getelementptr %228[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %230 = llvm.load %229 : !llvm.ptr -> i256
    llvm.store %229, %227 : !llvm.ptr, !llvm.ptr
    %231 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %232 = llvm.load %231 : !llvm.ptr -> !llvm.ptr
    %233 = llvm.getelementptr %232[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %234 = llvm.load %233 : !llvm.ptr -> i256
    llvm.store %233, %231 : !llvm.ptr, !llvm.ptr
    %235 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %236 = llvm.load %235 : !llvm.ptr -> !llvm.ptr
    %237 = llvm.getelementptr %236[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %238 = llvm.load %237 : !llvm.ptr -> i256
    llvm.store %237, %235 : !llvm.ptr, !llvm.ptr
    %239 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %240 = llvm.load %239 : !llvm.ptr -> !llvm.ptr
    %241 = llvm.getelementptr %240[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %242 = llvm.load %241 : !llvm.ptr -> i256
    llvm.store %241, %239 : !llvm.ptr, !llvm.ptr
    %243 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %244 = llvm.load %243 : !llvm.ptr -> !llvm.ptr
    %245 = llvm.getelementptr %244[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %246 = llvm.load %245 : !llvm.ptr -> i256
    llvm.store %245, %243 : !llvm.ptr, !llvm.ptr
    %247 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %248 = llvm.load %247 : !llvm.ptr -> i1
    %c0_i256_81 = arith.constant 0 : i256
    %249 = arith.cmpi ne, %230, %c0_i256_81 : i256
    %250 = arith.andi %248, %249 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %250, ^bb1(%c86_i8 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %251 = arith.trunci %222 : i256 to i64
    %c0_i64_82 = arith.constant 0 : i64
    %252 = arith.cmpi slt, %251, %c0_i64_82 : i64
    %c84_i8_83 = arith.constant 84 : i8
    cf.cond_br %252, ^bb1(%c84_i8_83 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %253 = arith.trunci %234 : i256 to i64
    %c0_i64_84 = arith.constant 0 : i64
    %254 = arith.cmpi slt, %253, %c0_i64_84 : i64
    %c84_i8_85 = arith.constant 84 : i8
    cf.cond_br %254, ^bb1(%c84_i8_85 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %255 = arith.trunci %238 : i256 to i64
    %c0_i64_86 = arith.constant 0 : i64
    %256 = arith.cmpi slt, %255, %c0_i64_86 : i64
    %c84_i8_87 = arith.constant 84 : i8
    cf.cond_br %256, ^bb1(%c84_i8_87 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %257 = arith.trunci %242 : i256 to i64
    %c0_i64_88 = arith.constant 0 : i64
    %258 = arith.cmpi slt, %257, %c0_i64_88 : i64
    %c84_i8_89 = arith.constant 84 : i8
    cf.cond_br %258, ^bb1(%c84_i8_89 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %259 = arith.trunci %246 : i256 to i64
    %c0_i64_90 = arith.constant 0 : i64
    %260 = arith.cmpi slt, %259, %c0_i64_90 : i64
    %c84_i8_91 = arith.constant 84 : i8
    cf.cond_br %260, ^bb1(%c84_i8_91 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %c0_i64_92 = arith.constant 0 : i64
    %261 = arith.cmpi ne, %255, %c0_i64_92 : i64
    cf.cond_br %261, ^bb93, ^bb75
  ^bb75:  // 2 preds: ^bb74, ^bb96
    %c0_i64_93 = arith.constant 0 : i64
    %262 = arith.cmpi ne, %259, %c0_i64_93 : i64
    cf.cond_br %262, ^bb97, ^bb76
  ^bb76:  // 2 preds: ^bb75, ^bb100
    %263 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %264 = llvm.load %263 : !llvm.ptr -> i64
    %c1_i256_94 = arith.constant 1 : i256
    %265 = llvm.alloca %c1_i256_94 x i256 : (i256) -> !llvm.ptr
    llvm.store %230, %265 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_95 = arith.constant 1 : i256
    %266 = llvm.alloca %c1_i256_95 x i256 : (i256) -> !llvm.ptr
    llvm.store %226, %266 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i8_96 = arith.constant 0 : i8
    %267 = call @dora_fn_call(%arg0, %251, %266, %265, %253, %255, %257, %259, %264, %c0_i8_96) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %268 = llvm.getelementptr %267[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %269 = llvm.load %268 : !llvm.ptr -> i8
    %270 = llvm.getelementptr %267[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %271 = llvm.load %270 : !llvm.ptr -> i8
    %c0_i8_97 = arith.constant 0 : i8
    %272 = arith.cmpi ne, %271, %c0_i8_97 : i8
    cf.cond_br %272, ^bb1(%271 : i8), ^bb77
  ^bb77:  // pred: ^bb76
    %273 = llvm.getelementptr %267[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %274 = llvm.load %273 : !llvm.ptr -> i64
    %275 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %276 = llvm.load %275 : !llvm.ptr -> i64
    %277 = arith.cmpi ult, %276, %274 : i64
    scf.if %277 {
    } else {
      %392 = arith.subi %276, %274 : i64
      llvm.store %392, %275 : i64, !llvm.ptr
    }
    %c80_i8_98 = arith.constant 80 : i8
    cf.cond_br %277, ^bb1(%c80_i8_98 : i8), ^bb78
  ^bb78:  // pred: ^bb77
    %278 = arith.extui %269 : i8 to i256
    %279 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %280 = llvm.load %279 : !llvm.ptr -> !llvm.ptr
    llvm.store %278, %280 : i256, !llvm.ptr
    %281 = llvm.getelementptr %280[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %281, %279 : !llvm.ptr, !llvm.ptr
    cf.br ^bb82
  ^bb79:  // pred: ^bb81
    %282 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_99 = arith.constant 1024 : i64
    %283 = llvm.load %282 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %284 = arith.addi %283, %c-6_i64 : i64
    llvm.store %284, %282 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %285 = arith.cmpi ult, %283, %c7_i64 : i64
    %c91_i8_100 = arith.constant 91 : i8
    cf.cond_br %285, ^bb1(%c91_i8_100 : i8), ^bb68
  ^bb80:  // pred: ^bb64
    %286 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %287 = llvm.load %286 : !llvm.ptr -> i64
    %c0_i64_101 = arith.constant 0 : i64
    %288 = arith.cmpi uge, %287, %c0_i64_101 : i64
    %c80_i8_102 = arith.constant 80 : i8
    cf.cond_br %288, ^bb81, ^bb1(%c80_i8_102 : i8)
  ^bb81:  // pred: ^bb80
    %289 = arith.subi %287, %c0_i64_101 : i64
    llvm.store %289, %286 : i64, !llvm.ptr
    cf.br ^bb79
  ^bb82:  // pred: ^bb78
    %c0_i64_103 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %290 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %291 = llvm.load %290 : !llvm.ptr -> i64
    %292 = call @dora_fn_write_result(%arg0, %c0_i64_103, %c0_i64_103, %291, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb83:  // pred: ^bb12
    %293 = arith.addi %44, %c32_i64 : i64
    %c0_i64_104 = arith.constant 0 : i64
    %294 = arith.cmpi slt, %293, %c0_i64_104 : i64
    %c84_i8_105 = arith.constant 84 : i8
    cf.cond_br %294, ^bb1(%c84_i8_105 : i8), ^bb84
  ^bb84:  // pred: ^bb83
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_106 = arith.constant 32 : i64
    %295 = arith.addi %293, %c31_i64 : i64
    %296 = arith.divui %295, %c32_i64_106 : i64
    %c32_i64_107 = arith.constant 32 : i64
    %297 = arith.muli %296, %c32_i64_107 : i64
    %298 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %299 = llvm.load %298 : !llvm.ptr -> i64
    %c31_i64_108 = arith.constant 31 : i64
    %c32_i64_109 = arith.constant 32 : i64
    %300 = arith.addi %299, %c31_i64_108 : i64
    %301 = arith.divui %300, %c32_i64_109 : i64
    %302 = arith.muli %301, %c32_i64_107 : i64
    %303 = arith.cmpi ult, %302, %297 : i64
    %304 = scf.if %303 -> (i64) {
      %c3_i64_143 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %392 = arith.muli %301, %301 : i64
      %393 = arith.divui %392, %c512_i64 : i64
      %394 = arith.muli %301, %c3_i64_143 : i64
      %395 = arith.addi %393, %394 : i64
      %c3_i64_144 = arith.constant 3 : i64
      %c512_i64_145 = arith.constant 512 : i64
      %396 = arith.muli %296, %296 : i64
      %397 = arith.divui %396, %c512_i64_145 : i64
      %398 = arith.muli %296, %c3_i64_144 : i64
      %399 = arith.addi %397, %398 : i64
      %400 = arith.subi %399, %395 : i64
      scf.yield %400 : i64
    } else {
      %c0_i64_143 = arith.constant 0 : i64
      scf.yield %c0_i64_143 : i64
    }
    %305 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %306 = llvm.load %305 : !llvm.ptr -> i64
    %307 = arith.cmpi ult, %306, %304 : i64
    scf.if %307 {
    } else {
      %392 = arith.subi %306, %304 : i64
      llvm.store %392, %305 : i64, !llvm.ptr
    }
    %c80_i8_110 = arith.constant 80 : i8
    cf.cond_br %307, ^bb1(%c80_i8_110 : i8), ^bb85
  ^bb85:  // pred: ^bb84
    %308 = call @dora_fn_extend_memory(%arg0, %297) : (!llvm.ptr, i64) -> !llvm.ptr
    %309 = llvm.getelementptr %308[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %310 = llvm.load %309 : !llvm.ptr -> !llvm.ptr
    %311 = llvm.getelementptr %308[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %312 = llvm.load %311 : !llvm.ptr -> i8
    %c0_i8_111 = arith.constant 0 : i8
    %313 = arith.cmpi ne, %312, %c0_i8_111 : i8
    cf.cond_br %313, ^bb1(%312 : i8), ^bb86
  ^bb86:  // pred: ^bb85
    %314 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %310, %314 : !llvm.ptr, !llvm.ptr
    %315 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %297, %315 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb87:  // pred: ^bb32
    %c49152_i64 = arith.constant 49152 : i64
    %316 = arith.cmpi ugt, %108, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %316, ^bb1(%c100_i8 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %c31_i64_112 = arith.constant 31 : i64
    %c32_i64_113 = arith.constant 32 : i64
    %317 = arith.addi %108, %c31_i64_112 : i64
    %318 = arith.divui %317, %c32_i64_113 : i64
    %c2_i64_114 = arith.constant 2 : i64
    %319 = arith.muli %318, %c2_i64_114 : i64
    %320 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %321 = llvm.load %320 : !llvm.ptr -> i64
    %322 = arith.cmpi ult, %321, %319 : i64
    scf.if %322 {
    } else {
      %392 = arith.subi %321, %319 : i64
      llvm.store %392, %320 : i64, !llvm.ptr
    }
    %c80_i8_115 = arith.constant 80 : i8
    cf.cond_br %322, ^bb1(%c80_i8_115 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    %323 = arith.addi %106, %108 : i64
    %c0_i64_116 = arith.constant 0 : i64
    %324 = arith.cmpi slt, %323, %c0_i64_116 : i64
    %c84_i8_117 = arith.constant 84 : i8
    cf.cond_br %324, ^bb1(%c84_i8_117 : i8), ^bb90
  ^bb90:  // pred: ^bb89
    %c31_i64_118 = arith.constant 31 : i64
    %c32_i64_119 = arith.constant 32 : i64
    %325 = arith.addi %323, %c31_i64_118 : i64
    %326 = arith.divui %325, %c32_i64_119 : i64
    %c32_i64_120 = arith.constant 32 : i64
    %327 = arith.muli %326, %c32_i64_120 : i64
    %328 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %329 = llvm.load %328 : !llvm.ptr -> i64
    %c31_i64_121 = arith.constant 31 : i64
    %c32_i64_122 = arith.constant 32 : i64
    %330 = arith.addi %329, %c31_i64_121 : i64
    %331 = arith.divui %330, %c32_i64_122 : i64
    %332 = arith.muli %331, %c32_i64_120 : i64
    %333 = arith.cmpi ult, %332, %327 : i64
    %334 = scf.if %333 -> (i64) {
      %c3_i64_143 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %392 = arith.muli %331, %331 : i64
      %393 = arith.divui %392, %c512_i64 : i64
      %394 = arith.muli %331, %c3_i64_143 : i64
      %395 = arith.addi %393, %394 : i64
      %c3_i64_144 = arith.constant 3 : i64
      %c512_i64_145 = arith.constant 512 : i64
      %396 = arith.muli %326, %326 : i64
      %397 = arith.divui %396, %c512_i64_145 : i64
      %398 = arith.muli %326, %c3_i64_144 : i64
      %399 = arith.addi %397, %398 : i64
      %400 = arith.subi %399, %395 : i64
      scf.yield %400 : i64
    } else {
      %c0_i64_143 = arith.constant 0 : i64
      scf.yield %c0_i64_143 : i64
    }
    %335 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %336 = llvm.load %335 : !llvm.ptr -> i64
    %337 = arith.cmpi ult, %336, %334 : i64
    scf.if %337 {
    } else {
      %392 = arith.subi %336, %334 : i64
      llvm.store %392, %335 : i64, !llvm.ptr
    }
    %c80_i8_123 = arith.constant 80 : i8
    cf.cond_br %337, ^bb1(%c80_i8_123 : i8), ^bb91
  ^bb91:  // pred: ^bb90
    %338 = call @dora_fn_extend_memory(%arg0, %327) : (!llvm.ptr, i64) -> !llvm.ptr
    %339 = llvm.getelementptr %338[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %340 = llvm.load %339 : !llvm.ptr -> !llvm.ptr
    %341 = llvm.getelementptr %338[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %342 = llvm.load %341 : !llvm.ptr -> i8
    %c0_i8_124 = arith.constant 0 : i8
    %343 = arith.cmpi ne, %342, %c0_i8_124 : i8
    cf.cond_br %343, ^bb1(%342 : i8), ^bb92
  ^bb92:  // pred: ^bb91
    %344 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %340, %344 : !llvm.ptr, !llvm.ptr
    %345 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %327, %345 : i64, !llvm.ptr
    cf.br ^bb33
  ^bb93:  // pred: ^bb74
    %346 = arith.addi %253, %255 : i64
    %c0_i64_125 = arith.constant 0 : i64
    %347 = arith.cmpi slt, %346, %c0_i64_125 : i64
    %c84_i8_126 = arith.constant 84 : i8
    cf.cond_br %347, ^bb1(%c84_i8_126 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %c31_i64_127 = arith.constant 31 : i64
    %c32_i64_128 = arith.constant 32 : i64
    %348 = arith.addi %346, %c31_i64_127 : i64
    %349 = arith.divui %348, %c32_i64_128 : i64
    %c32_i64_129 = arith.constant 32 : i64
    %350 = arith.muli %349, %c32_i64_129 : i64
    %351 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %352 = llvm.load %351 : !llvm.ptr -> i64
    %c31_i64_130 = arith.constant 31 : i64
    %c32_i64_131 = arith.constant 32 : i64
    %353 = arith.addi %352, %c31_i64_130 : i64
    %354 = arith.divui %353, %c32_i64_131 : i64
    %355 = arith.muli %354, %c32_i64_129 : i64
    %356 = arith.cmpi ult, %355, %350 : i64
    %357 = scf.if %356 -> (i64) {
      %c3_i64_143 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %392 = arith.muli %354, %354 : i64
      %393 = arith.divui %392, %c512_i64 : i64
      %394 = arith.muli %354, %c3_i64_143 : i64
      %395 = arith.addi %393, %394 : i64
      %c3_i64_144 = arith.constant 3 : i64
      %c512_i64_145 = arith.constant 512 : i64
      %396 = arith.muli %349, %349 : i64
      %397 = arith.divui %396, %c512_i64_145 : i64
      %398 = arith.muli %349, %c3_i64_144 : i64
      %399 = arith.addi %397, %398 : i64
      %400 = arith.subi %399, %395 : i64
      scf.yield %400 : i64
    } else {
      %c0_i64_143 = arith.constant 0 : i64
      scf.yield %c0_i64_143 : i64
    }
    %358 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %359 = llvm.load %358 : !llvm.ptr -> i64
    %360 = arith.cmpi ult, %359, %357 : i64
    scf.if %360 {
    } else {
      %392 = arith.subi %359, %357 : i64
      llvm.store %392, %358 : i64, !llvm.ptr
    }
    %c80_i8_132 = arith.constant 80 : i8
    cf.cond_br %360, ^bb1(%c80_i8_132 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %361 = call @dora_fn_extend_memory(%arg0, %350) : (!llvm.ptr, i64) -> !llvm.ptr
    %362 = llvm.getelementptr %361[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %363 = llvm.load %362 : !llvm.ptr -> !llvm.ptr
    %364 = llvm.getelementptr %361[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %365 = llvm.load %364 : !llvm.ptr -> i8
    %c0_i8_133 = arith.constant 0 : i8
    %366 = arith.cmpi ne, %365, %c0_i8_133 : i8
    cf.cond_br %366, ^bb1(%365 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %367 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %363, %367 : !llvm.ptr, !llvm.ptr
    %368 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %350, %368 : i64, !llvm.ptr
    cf.br ^bb75
  ^bb97:  // pred: ^bb75
    %369 = arith.addi %257, %259 : i64
    %c0_i64_134 = arith.constant 0 : i64
    %370 = arith.cmpi slt, %369, %c0_i64_134 : i64
    %c84_i8_135 = arith.constant 84 : i8
    cf.cond_br %370, ^bb1(%c84_i8_135 : i8), ^bb98
  ^bb98:  // pred: ^bb97
    %c31_i64_136 = arith.constant 31 : i64
    %c32_i64_137 = arith.constant 32 : i64
    %371 = arith.addi %369, %c31_i64_136 : i64
    %372 = arith.divui %371, %c32_i64_137 : i64
    %c32_i64_138 = arith.constant 32 : i64
    %373 = arith.muli %372, %c32_i64_138 : i64
    %374 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %375 = llvm.load %374 : !llvm.ptr -> i64
    %c31_i64_139 = arith.constant 31 : i64
    %c32_i64_140 = arith.constant 32 : i64
    %376 = arith.addi %375, %c31_i64_139 : i64
    %377 = arith.divui %376, %c32_i64_140 : i64
    %378 = arith.muli %377, %c32_i64_138 : i64
    %379 = arith.cmpi ult, %378, %373 : i64
    %380 = scf.if %379 -> (i64) {
      %c3_i64_143 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %392 = arith.muli %377, %377 : i64
      %393 = arith.divui %392, %c512_i64 : i64
      %394 = arith.muli %377, %c3_i64_143 : i64
      %395 = arith.addi %393, %394 : i64
      %c3_i64_144 = arith.constant 3 : i64
      %c512_i64_145 = arith.constant 512 : i64
      %396 = arith.muli %372, %372 : i64
      %397 = arith.divui %396, %c512_i64_145 : i64
      %398 = arith.muli %372, %c3_i64_144 : i64
      %399 = arith.addi %397, %398 : i64
      %400 = arith.subi %399, %395 : i64
      scf.yield %400 : i64
    } else {
      %c0_i64_143 = arith.constant 0 : i64
      scf.yield %c0_i64_143 : i64
    }
    %381 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %382 = llvm.load %381 : !llvm.ptr -> i64
    %383 = arith.cmpi ult, %382, %380 : i64
    scf.if %383 {
    } else {
      %392 = arith.subi %382, %380 : i64
      llvm.store %392, %381 : i64, !llvm.ptr
    }
    %c80_i8_141 = arith.constant 80 : i8
    cf.cond_br %383, ^bb1(%c80_i8_141 : i8), ^bb99
  ^bb99:  // pred: ^bb98
    %384 = call @dora_fn_extend_memory(%arg0, %373) : (!llvm.ptr, i64) -> !llvm.ptr
    %385 = llvm.getelementptr %384[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %386 = llvm.load %385 : !llvm.ptr -> !llvm.ptr
    %387 = llvm.getelementptr %384[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %388 = llvm.load %387 : !llvm.ptr -> i8
    %c0_i8_142 = arith.constant 0 : i8
    %389 = arith.cmpi ne, %388, %c0_i8_142 : i8
    cf.cond_br %389, ^bb1(%388 : i8), ^bb100
  ^bb100:  // pred: ^bb99
    %390 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %386, %390 : !llvm.ptr, !llvm.ptr
    %391 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %373, %391 : i64, !llvm.ptr
    cf.br ^bb76
  }
}
