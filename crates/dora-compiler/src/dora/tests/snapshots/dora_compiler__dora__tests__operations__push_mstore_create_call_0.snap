---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 59 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb31, ^bb32, ^bb33, ^bb35, ^bb36, ^bb39, ^bb40, ^bb43, ^bb44, ^bb47, ^bb48, ^bb51, ^bb52, ^bb55, ^bb56, ^bb59, ^bb60, ^bb63, ^bb64, ^bb66, ^bb67, ^bb69, ^bb71, ^bb72, ^bb74, ^bb75, ^bb78, ^bb79, ^bb82, ^bb83, ^bb85, ^bb86, ^bb87, ^bb88, ^bb91, ^bb92, ^bb94, ^bb95, ^bb98, ^bb99, ^bb101, ^bb102, ^bb105, ^bb106
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %43 = arith.cmpi ne, %c32_i64, %c0_i64_7 : i64
    cf.cond_br %43, ^bb78, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb81
    %44 = arith.trunci %38 : i256 to i64
    %45 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %46 = llvm.load %45 : !llvm.ptr -> !llvm.ptr
    %47 = llvm.getelementptr %46[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %48 = llvm.intr.bswap(%42)  : (i256) -> i256
    llvm.store %48, %47 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %49 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_8 = arith.constant 1024 : i64
    %50 = llvm.load %49 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %51 = arith.addi %50, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    llvm.store %51, %49 : i64, !llvm.ptr
    %52 = arith.cmpi ult, %50, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %52, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %53 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %c3_i64_9 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %55 = arith.cmpi uge, %54, %c3_i64_9 : i64
    %c80_i8_10 = arith.constant 80 : i8
    cf.cond_br %55, ^bb15, ^bb1(%c80_i8_10 : i8)
  ^bb15:  // pred: ^bb14
    %56 = arith.subi %54, %c3_i64_9 : i64
    llvm.store %56, %53 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c17_i256 = arith.constant 17 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %60 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_11 = arith.constant 1024 : i64
    %61 = llvm.load %60 : !llvm.ptr -> i64
    %c1_i64_12 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_12 : i64
    llvm.store %62, %60 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64_11, %62 : i64
    %c92_i8_13 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_13 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %64 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %c3_i64_14 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %66 = arith.cmpi uge, %65, %c3_i64_14 : i64
    %c80_i8_15 = arith.constant 80 : i8
    cf.cond_br %66, ^bb19, ^bb1(%c80_i8_15 : i8)
  ^bb19:  // pred: ^bb18
    %67 = arith.subi %65, %c3_i64_14 : i64
    llvm.store %67, %64 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c15_i256 = arith.constant 15 : i256
    %68 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %69 = llvm.load %68 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %69 : i256, !llvm.ptr
    %70 = llvm.getelementptr %69[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %70, %68 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %71 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_16 = arith.constant 1024 : i64
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c1_i64_17 = arith.constant 1 : i64
    %73 = arith.addi %72, %c1_i64_17 : i64
    llvm.store %73, %71 : i64, !llvm.ptr
    %74 = arith.cmpi ult, %c1024_i64_16, %73 : i64
    %c92_i8_18 = arith.constant 92 : i8
    cf.cond_br %74, ^bb1(%c92_i8_18 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %75 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> i64
    %c3_i64_19 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %77 = arith.cmpi uge, %76, %c3_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %77, ^bb23, ^bb1(%c80_i8_20 : i8)
  ^bb23:  // pred: ^bb22
    %78 = arith.subi %76, %c3_i64_19 : i64
    llvm.store %78, %75 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_21 = arith.constant 0 : i256
    %79 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_21, %80 : i256, !llvm.ptr
    %81 = llvm.getelementptr %80[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %81, %79 : !llvm.ptr, !llvm.ptr
    cf.br ^bb36
  ^bb25:  // pred: ^bb27
    %82 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_22 = arith.constant 1024 : i64
    %83 = llvm.load %82 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %84 = arith.addi %83, %c1_i64_23 : i64
    llvm.store %84, %82 : i64, !llvm.ptr
    %85 = arith.cmpi ult, %c1024_i64_22, %84 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %85, ^bb1(%c92_i8_24 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %86 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %87 = llvm.load %86 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %88 = arith.cmpi uge, %87, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %88, ^bb27, ^bb1(%c80_i8_26 : i8)
  ^bb27:  // pred: ^bb26
    %89 = arith.subi %87, %c3_i64_25 : i64
    llvm.store %89, %86 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb35
    %90 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %91 = llvm.load %90 : !llvm.ptr -> !llvm.ptr
    %92 = llvm.getelementptr %91[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %93 = llvm.load %92 : !llvm.ptr -> i256
    llvm.store %92, %90 : !llvm.ptr, !llvm.ptr
    %94 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %95 = llvm.load %94 : !llvm.ptr -> !llvm.ptr
    %96 = llvm.getelementptr %95[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %97 = llvm.load %96 : !llvm.ptr -> i256
    llvm.store %96, %94 : !llvm.ptr, !llvm.ptr
    %98 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> !llvm.ptr
    %100 = llvm.getelementptr %99[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %101 = llvm.load %100 : !llvm.ptr -> i256
    llvm.store %100, %98 : !llvm.ptr, !llvm.ptr
    %102 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %103 = arith.cmpi ne, %102, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %103, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %104 = arith.trunci %101 : i256 to i64
    %c0_i64_27 = arith.constant 0 : i64
    %105 = arith.cmpi slt, %104, %c0_i64_27 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %105, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %c0_i64_28 = arith.constant 0 : i64
    %106 = arith.cmpi ne, %104, %c0_i64_28 : i64
    cf.cond_br %106, ^bb85, ^bb31
  ^bb31:  // 2 preds: ^bb30, ^bb90
    %c32000_i64 = arith.constant 32000 : i64
    %107 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> i64
    %109 = arith.cmpi ult, %108, %c32000_i64 : i64
    scf.if %109 {
    } else {
      %427 = arith.subi %108, %c32000_i64 : i64
      llvm.store %427, %107 : i64, !llvm.ptr
    }
    %c80_i8_29 = arith.constant 80 : i8
    cf.cond_br %109, ^bb1(%c80_i8_29 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c1_i256 = arith.constant 1 : i256
    %110 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %93, %110 {alignment = 1 : i64} : i256, !llvm.ptr
    %111 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> i64
    %113 = arith.trunci %97 : i256 to i64
    %114 = call @dora_fn_create(%arg0, %104, %113, %110, %112) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %115 = llvm.getelementptr %114[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %116 = llvm.load %115 : !llvm.ptr -> i8
    %c0_i8_30 = arith.constant 0 : i8
    %117 = arith.cmpi ne, %116, %c0_i8_30 : i8
    cf.cond_br %117, ^bb1(%116 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %118 = llvm.getelementptr %114[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %120 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %121 = llvm.load %120 : !llvm.ptr -> i64
    %122 = arith.cmpi ult, %121, %119 : i64
    scf.if %122 {
    } else {
      %427 = arith.subi %121, %119 : i64
      llvm.store %427, %120 : i64, !llvm.ptr
    }
    %c80_i8_31 = arith.constant 80 : i8
    cf.cond_br %122, ^bb1(%c80_i8_31 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %123 = llvm.load %110 : !llvm.ptr -> i256
    %124 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %125 = llvm.load %124 : !llvm.ptr -> !llvm.ptr
    llvm.store %123, %125 : i256, !llvm.ptr
    %126 = llvm.getelementptr %125[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %126, %124 : !llvm.ptr, !llvm.ptr
    cf.br ^bb40
  ^bb35:  // pred: ^bb37
    %127 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_32 = arith.constant 1024 : i64
    %128 = llvm.load %127 : !llvm.ptr -> i64
    %c-2_i64_33 = arith.constant -2 : i64
    %129 = arith.addi %128, %c-2_i64_33 : i64
    %c3_i64_34 = arith.constant 3 : i64
    llvm.store %129, %127 : i64, !llvm.ptr
    %130 = arith.cmpi ult, %128, %c3_i64_34 : i64
    %c91_i8_35 = arith.constant 91 : i8
    cf.cond_br %130, ^bb1(%c91_i8_35 : i8), ^bb28
  ^bb36:  // pred: ^bb24
    %131 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %132 = llvm.load %131 : !llvm.ptr -> i64
    %c0_i64_36 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %133 = arith.cmpi uge, %132, %c0_i64_36 : i64
    %c80_i8_37 = arith.constant 80 : i8
    cf.cond_br %133, ^bb37, ^bb1(%c80_i8_37 : i8)
  ^bb37:  // pred: ^bb36
    %134 = arith.subi %132, %c0_i64_36 : i64
    llvm.store %134, %131 : i64, !llvm.ptr
    cf.br ^bb35
  ^bb38:  // pred: ^bb39
    %c0_i256_38 = arith.constant 0 : i256
    %135 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_38, %136 : i256, !llvm.ptr
    %137 = llvm.getelementptr %136[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %137, %135 : !llvm.ptr, !llvm.ptr
    cf.br ^bb44
  ^bb39:  // pred: ^bb41
    %138 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_39 = arith.constant 1024 : i64
    %139 = llvm.load %138 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %140 = arith.addi %139, %c1_i64_40 : i64
    llvm.store %140, %138 : i64, !llvm.ptr
    %141 = arith.cmpi ult, %c1024_i64_39, %140 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %141, ^bb1(%c92_i8_41 : i8), ^bb38
  ^bb40:  // pred: ^bb34
    %142 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> i64
    %c3_i64_42 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %144 = arith.cmpi uge, %143, %c3_i64_42 : i64
    %c80_i8_43 = arith.constant 80 : i8
    cf.cond_br %144, ^bb41, ^bb1(%c80_i8_43 : i8)
  ^bb41:  // pred: ^bb40
    %145 = arith.subi %143, %c3_i64_42 : i64
    llvm.store %145, %142 : i64, !llvm.ptr
    cf.br ^bb39
  ^bb42:  // pred: ^bb43
    %c0_i256_44 = arith.constant 0 : i256
    %146 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_44, %147 : i256, !llvm.ptr
    %148 = llvm.getelementptr %147[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %148, %146 : !llvm.ptr, !llvm.ptr
    cf.br ^bb48
  ^bb43:  // pred: ^bb45
    %149 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_45 = arith.constant 1024 : i64
    %150 = llvm.load %149 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %151 = arith.addi %150, %c1_i64_46 : i64
    llvm.store %151, %149 : i64, !llvm.ptr
    %152 = arith.cmpi ult, %c1024_i64_45, %151 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %152, ^bb1(%c92_i8_47 : i8), ^bb42
  ^bb44:  // pred: ^bb38
    %153 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %154 = llvm.load %153 : !llvm.ptr -> i64
    %c3_i64_48 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %155 = arith.cmpi uge, %154, %c3_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %155, ^bb45, ^bb1(%c80_i8_49 : i8)
  ^bb45:  // pred: ^bb44
    %156 = arith.subi %154, %c3_i64_48 : i64
    llvm.store %156, %153 : i64, !llvm.ptr
    cf.br ^bb43
  ^bb46:  // pred: ^bb47
    %c0_i256_50 = arith.constant 0 : i256
    %157 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %158 = llvm.load %157 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_50, %158 : i256, !llvm.ptr
    %159 = llvm.getelementptr %158[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %159, %157 : !llvm.ptr, !llvm.ptr
    cf.br ^bb52
  ^bb47:  // pred: ^bb49
    %160 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_51 = arith.constant 1024 : i64
    %161 = llvm.load %160 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %162 = arith.addi %161, %c1_i64_52 : i64
    llvm.store %162, %160 : i64, !llvm.ptr
    %163 = arith.cmpi ult, %c1024_i64_51, %162 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %163, ^bb1(%c92_i8_53 : i8), ^bb46
  ^bb48:  // pred: ^bb42
    %164 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %165 = llvm.load %164 : !llvm.ptr -> i64
    %c3_i64_54 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %166 = arith.cmpi uge, %165, %c3_i64_54 : i64
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %166, ^bb49, ^bb1(%c80_i8_55 : i8)
  ^bb49:  // pred: ^bb48
    %167 = arith.subi %165, %c3_i64_54 : i64
    llvm.store %167, %164 : i64, !llvm.ptr
    cf.br ^bb47
  ^bb50:  // pred: ^bb51
    %c0_i256_56 = arith.constant 0 : i256
    %168 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_56, %169 : i256, !llvm.ptr
    %170 = llvm.getelementptr %169[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %170, %168 : !llvm.ptr, !llvm.ptr
    cf.br ^bb56
  ^bb51:  // pred: ^bb53
    %171 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_57 = arith.constant 1024 : i64
    %172 = llvm.load %171 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %173 = arith.addi %172, %c1_i64_58 : i64
    llvm.store %173, %171 : i64, !llvm.ptr
    %174 = arith.cmpi ult, %c1024_i64_57, %173 : i64
    %c92_i8_59 = arith.constant 92 : i8
    cf.cond_br %174, ^bb1(%c92_i8_59 : i8), ^bb50
  ^bb52:  // pred: ^bb46
    %175 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %176 = llvm.load %175 : !llvm.ptr -> i64
    %c3_i64_60 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %177 = arith.cmpi uge, %176, %c3_i64_60 : i64
    %c80_i8_61 = arith.constant 80 : i8
    cf.cond_br %177, ^bb53, ^bb1(%c80_i8_61 : i8)
  ^bb53:  // pred: ^bb52
    %178 = arith.subi %176, %c3_i64_60 : i64
    llvm.store %178, %175 : i64, !llvm.ptr
    cf.br ^bb51
  ^bb54:  // pred: ^bb55
    %c0_i256_62 = arith.constant 0 : i256
    %179 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %180 = llvm.load %179 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_62, %180 : i256, !llvm.ptr
    %181 = llvm.getelementptr %180[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %181, %179 : !llvm.ptr, !llvm.ptr
    cf.br ^bb60
  ^bb55:  // pred: ^bb57
    %182 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_63 = arith.constant 1024 : i64
    %183 = llvm.load %182 : !llvm.ptr -> i64
    %c1_i64_64 = arith.constant 1 : i64
    %184 = arith.addi %183, %c1_i64_64 : i64
    llvm.store %184, %182 : i64, !llvm.ptr
    %185 = arith.cmpi ult, %c1024_i64_63, %184 : i64
    %c92_i8_65 = arith.constant 92 : i8
    cf.cond_br %185, ^bb1(%c92_i8_65 : i8), ^bb54
  ^bb56:  // pred: ^bb50
    %186 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %187 = llvm.load %186 : !llvm.ptr -> i64
    %c3_i64_66 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %188 = arith.cmpi uge, %187, %c3_i64_66 : i64
    %c80_i8_67 = arith.constant 80 : i8
    cf.cond_br %188, ^bb57, ^bb1(%c80_i8_67 : i8)
  ^bb57:  // pred: ^bb56
    %189 = arith.subi %187, %c3_i64_66 : i64
    llvm.store %189, %186 : i64, !llvm.ptr
    cf.br ^bb55
  ^bb58:  // pred: ^bb59
    %190 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %191 = llvm.load %190 : !llvm.ptr -> !llvm.ptr
    %192 = llvm.getelementptr %191[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %193 = llvm.load %192 : !llvm.ptr -> i256
    %194 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %195 = llvm.load %194 : !llvm.ptr -> !llvm.ptr
    llvm.store %193, %195 : i256, !llvm.ptr
    %196 = llvm.getelementptr %195[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %196, %194 : !llvm.ptr, !llvm.ptr
    cf.br ^bb64
  ^bb59:  // pred: ^bb61
    %197 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_68 = arith.constant 1024 : i64
    %198 = llvm.load %197 : !llvm.ptr -> i64
    %c1_i64_69 = arith.constant 1 : i64
    %199 = arith.addi %198, %c1_i64_69 : i64
    %c6_i64 = arith.constant 6 : i64
    %200 = arith.cmpi ult, %198, %c6_i64 : i64
    %201 = arith.cmpi ult, %c1024_i64_68, %199 : i64
    llvm.store %199, %197 : i64, !llvm.ptr
    %202 = arith.xori %200, %201 : i1
    %c92_i8_70 = arith.constant 92 : i8
    cf.cond_br %202, ^bb1(%c92_i8_70 : i8), ^bb58
  ^bb60:  // pred: ^bb54
    %203 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %204 = llvm.load %203 : !llvm.ptr -> i64
    %c3_i64_71 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %205 = arith.cmpi uge, %204, %c3_i64_71 : i64
    %c80_i8_72 = arith.constant 80 : i8
    cf.cond_br %205, ^bb61, ^bb1(%c80_i8_72 : i8)
  ^bb61:  // pred: ^bb60
    %206 = arith.subi %204, %c3_i64_71 : i64
    llvm.store %206, %203 : i64, !llvm.ptr
    cf.br ^bb59
  ^bb62:  // pred: ^bb63
    %c65535_i256 = arith.constant 65535 : i256
    %207 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %208 = llvm.load %207 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %208 : i256, !llvm.ptr
    %209 = llvm.getelementptr %208[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %209, %207 : !llvm.ptr, !llvm.ptr
    cf.br ^bb75
  ^bb63:  // pred: ^bb65
    %210 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_73 = arith.constant 1024 : i64
    %211 = llvm.load %210 : !llvm.ptr -> i64
    %c1_i64_74 = arith.constant 1 : i64
    %212 = arith.addi %211, %c1_i64_74 : i64
    llvm.store %212, %210 : i64, !llvm.ptr
    %213 = arith.cmpi ult, %c1024_i64_73, %212 : i64
    %c92_i8_75 = arith.constant 92 : i8
    cf.cond_br %213, ^bb1(%c92_i8_75 : i8), ^bb62
  ^bb64:  // pred: ^bb58
    %214 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %215 = llvm.load %214 : !llvm.ptr -> i64
    %c3_i64_76 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %216 = arith.cmpi uge, %215, %c3_i64_76 : i64
    %c80_i8_77 = arith.constant 80 : i8
    cf.cond_br %216, ^bb65, ^bb1(%c80_i8_77 : i8)
  ^bb65:  // pred: ^bb64
    %217 = arith.subi %215, %c3_i64_76 : i64
    llvm.store %217, %214 : i64, !llvm.ptr
    cf.br ^bb63
  ^bb66:  // pred: ^bb74
    %218 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %219 = llvm.load %218 : !llvm.ptr -> !llvm.ptr
    %220 = llvm.getelementptr %219[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %221 = llvm.load %220 : !llvm.ptr -> i256
    llvm.store %220, %218 : !llvm.ptr, !llvm.ptr
    %222 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> !llvm.ptr
    %224 = llvm.getelementptr %223[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %225 = llvm.load %224 : !llvm.ptr -> i256
    llvm.store %224, %222 : !llvm.ptr, !llvm.ptr
    %226 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %227 = llvm.load %226 : !llvm.ptr -> !llvm.ptr
    %228 = llvm.getelementptr %227[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %229 = llvm.load %228 : !llvm.ptr -> i256
    llvm.store %228, %226 : !llvm.ptr, !llvm.ptr
    %230 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %231 = llvm.load %230 : !llvm.ptr -> !llvm.ptr
    %232 = llvm.getelementptr %231[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %233 = llvm.load %232 : !llvm.ptr -> i256
    llvm.store %232, %230 : !llvm.ptr, !llvm.ptr
    %234 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %235 = llvm.load %234 : !llvm.ptr -> !llvm.ptr
    %236 = llvm.getelementptr %235[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %237 = llvm.load %236 : !llvm.ptr -> i256
    llvm.store %236, %234 : !llvm.ptr, !llvm.ptr
    %238 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %239 = llvm.load %238 : !llvm.ptr -> !llvm.ptr
    %240 = llvm.getelementptr %239[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %241 = llvm.load %240 : !llvm.ptr -> i256
    llvm.store %240, %238 : !llvm.ptr, !llvm.ptr
    %242 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %243 = llvm.load %242 : !llvm.ptr -> !llvm.ptr
    %244 = llvm.getelementptr %243[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %245 = llvm.load %244 : !llvm.ptr -> i256
    llvm.store %244, %242 : !llvm.ptr, !llvm.ptr
    %246 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8_78 = arith.constant 0 : i8
    %247 = arith.cmpi ne, %246, %c0_i8_78 : i8
    %c0_i256_79 = arith.constant 0 : i256
    %248 = arith.cmpi ne, %229, %c0_i256_79 : i256
    %249 = arith.andi %247, %248 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %249, ^bb1(%c86_i8 : i8), ^bb67
  ^bb67:  // pred: ^bb66
    %250 = arith.trunci %237 : i256 to i64
    %c0_i64_80 = arith.constant 0 : i64
    %251 = arith.cmpi slt, %250, %c0_i64_80 : i64
    %c84_i8_81 = arith.constant 84 : i8
    cf.cond_br %251, ^bb1(%c84_i8_81 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %c0_i64_82 = arith.constant 0 : i64
    %252 = arith.cmpi ne, %250, %c0_i64_82 : i64
    cf.cond_br %252, ^bb94, ^bb69
  ^bb69:  // 2 preds: ^bb68, ^bb97
    %253 = arith.trunci %245 : i256 to i64
    %c0_i64_83 = arith.constant 0 : i64
    %254 = arith.cmpi slt, %253, %c0_i64_83 : i64
    %c84_i8_84 = arith.constant 84 : i8
    cf.cond_br %254, ^bb1(%c84_i8_84 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %c0_i64_85 = arith.constant 0 : i64
    %255 = arith.cmpi ne, %253, %c0_i64_85 : i64
    cf.cond_br %255, ^bb101, ^bb71
  ^bb71:  // 2 preds: ^bb70, ^bb104
    %256 = arith.trunci %233 : i256 to i64
    %257 = arith.trunci %241 : i256 to i64
    %258 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %259 = llvm.load %258 : !llvm.ptr -> i64
    %c1_i256_86 = arith.constant 1 : i256
    %260 = llvm.alloca %c1_i256_86 x i256 : (i256) -> !llvm.ptr
    llvm.store %229, %260 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_87 = arith.constant 1 : i256
    %261 = llvm.alloca %c1_i256_87 x i256 : (i256) -> !llvm.ptr
    llvm.store %221, %261 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_88 = arith.constant 1 : i256
    %262 = llvm.alloca %c1_i256_88 x i256 : (i256) -> !llvm.ptr
    llvm.store %225, %262 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i8_89 = arith.constant 0 : i8
    %263 = call @dora_fn_call(%arg0, %261, %262, %260, %256, %250, %257, %253, %259, %c0_i8_89) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %264 = llvm.getelementptr %263[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %265 = llvm.load %264 : !llvm.ptr -> i8
    %266 = llvm.getelementptr %263[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %267 = llvm.load %266 : !llvm.ptr -> i8
    %c0_i8_90 = arith.constant 0 : i8
    %268 = arith.cmpi ne, %267, %c0_i8_90 : i8
    cf.cond_br %268, ^bb1(%267 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %269 = llvm.getelementptr %263[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %270 = llvm.load %269 : !llvm.ptr -> i64
    %271 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %272 = llvm.load %271 : !llvm.ptr -> i64
    %273 = arith.cmpi ult, %272, %270 : i64
    scf.if %273 {
    } else {
      %427 = arith.subi %272, %270 : i64
      llvm.store %427, %271 : i64, !llvm.ptr
    }
    %c80_i8_91 = arith.constant 80 : i8
    cf.cond_br %273, ^bb1(%c80_i8_91 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %274 = arith.extui %265 : i8 to i256
    %275 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %276 = llvm.load %275 : !llvm.ptr -> !llvm.ptr
    llvm.store %274, %276 : i256, !llvm.ptr
    %277 = llvm.getelementptr %276[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %277, %275 : !llvm.ptr, !llvm.ptr
    cf.br ^bb77
  ^bb74:  // pred: ^bb76
    %278 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_92 = arith.constant 1024 : i64
    %279 = llvm.load %278 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %280 = arith.addi %279, %c-6_i64 : i64
    %c7_i64 = arith.constant 7 : i64
    llvm.store %280, %278 : i64, !llvm.ptr
    %281 = arith.cmpi ult, %279, %c7_i64 : i64
    %c91_i8_93 = arith.constant 91 : i8
    cf.cond_br %281, ^bb1(%c91_i8_93 : i8), ^bb66
  ^bb75:  // pred: ^bb62
    %282 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %283 = llvm.load %282 : !llvm.ptr -> i64
    %c0_i64_94 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %284 = arith.cmpi uge, %283, %c0_i64_94 : i64
    %c80_i8_95 = arith.constant 80 : i8
    cf.cond_br %284, ^bb76, ^bb1(%c80_i8_95 : i8)
  ^bb76:  // pred: ^bb75
    %285 = arith.subi %283, %c0_i64_94 : i64
    llvm.store %285, %282 : i64, !llvm.ptr
    cf.br ^bb74
  ^bb77:  // pred: ^bb73
    %c0_i64_96 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %286 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %287 = llvm.load %286 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_96, %c0_i64_96, %287, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb78:  // pred: ^bb11
    %288 = arith.trunci %38 : i256 to i64
    %c0_i64_97 = arith.constant 0 : i64
    %289 = arith.cmpi slt, %288, %c0_i64_97 : i64
    %c84_i8_98 = arith.constant 84 : i8
    cf.cond_br %289, ^bb1(%c84_i8_98 : i8), ^bb79
  ^bb79:  // pred: ^bb78
    %290 = arith.addi %288, %c32_i64 : i64
    %c0_i64_99 = arith.constant 0 : i64
    %291 = arith.cmpi slt, %290, %c0_i64_99 : i64
    %c84_i8_100 = arith.constant 84 : i8
    cf.cond_br %291, ^bb1(%c84_i8_100 : i8), ^bb80
  ^bb80:  // pred: ^bb79
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_101 = arith.constant 32 : i64
    %292 = arith.addi %290, %c31_i64 : i64
    %293 = arith.divui %292, %c32_i64_101 : i64
    %c32_i64_102 = arith.constant 32 : i64
    %294 = arith.muli %293, %c32_i64_102 : i64
    %295 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %296 = llvm.load %295 : !llvm.ptr -> i64
    %c31_i64_103 = arith.constant 31 : i64
    %c32_i64_104 = arith.constant 32 : i64
    %297 = arith.addi %296, %c31_i64_103 : i64
    %298 = arith.divui %297, %c32_i64_104 : i64
    %299 = arith.muli %298, %c32_i64_102 : i64
    %300 = arith.cmpi ult, %299, %294 : i64
    cf.cond_br %300, ^bb82, ^bb81
  ^bb81:  // 2 preds: ^bb80, ^bb84
    cf.br ^bb12
  ^bb82:  // pred: ^bb80
    %c3_i64_105 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %301 = arith.muli %298, %298 : i64
    %302 = arith.divui %301, %c512_i64 : i64
    %303 = arith.muli %298, %c3_i64_105 : i64
    %304 = arith.addi %302, %303 : i64
    %c3_i64_106 = arith.constant 3 : i64
    %c512_i64_107 = arith.constant 512 : i64
    %305 = arith.muli %293, %293 : i64
    %306 = arith.divui %305, %c512_i64_107 : i64
    %307 = arith.muli %293, %c3_i64_106 : i64
    %308 = arith.addi %306, %307 : i64
    %309 = arith.subi %308, %304 : i64
    %310 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %311 = llvm.load %310 : !llvm.ptr -> i64
    %312 = arith.cmpi ult, %311, %309 : i64
    scf.if %312 {
    } else {
      %427 = arith.subi %311, %309 : i64
      llvm.store %427, %310 : i64, !llvm.ptr
    }
    %c80_i8_108 = arith.constant 80 : i8
    cf.cond_br %312, ^bb1(%c80_i8_108 : i8), ^bb83
  ^bb83:  // pred: ^bb82
    %313 = call @dora_fn_extend_memory(%arg0, %294) : (!llvm.ptr, i64) -> !llvm.ptr
    %314 = llvm.getelementptr %313[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %315 = llvm.load %314 : !llvm.ptr -> !llvm.ptr
    %316 = llvm.getelementptr %313[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %317 = llvm.load %316 : !llvm.ptr -> i8
    %c0_i8_109 = arith.constant 0 : i8
    %318 = arith.cmpi ne, %317, %c0_i8_109 : i8
    cf.cond_br %318, ^bb1(%317 : i8), ^bb84
  ^bb84:  // pred: ^bb83
    %319 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %315, %319 : !llvm.ptr, !llvm.ptr
    %320 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %294, %320 : i64, !llvm.ptr
    cf.br ^bb81
  ^bb85:  // pred: ^bb30
    %c49152_i64 = arith.constant 49152 : i64
    %321 = arith.cmpi ugt, %104, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %321, ^bb1(%c100_i8 : i8), ^bb86
  ^bb86:  // pred: ^bb85
    %c31_i64_110 = arith.constant 31 : i64
    %c32_i64_111 = arith.constant 32 : i64
    %322 = arith.addi %104, %c31_i64_110 : i64
    %323 = arith.divui %322, %c32_i64_111 : i64
    %c2_i64_112 = arith.constant 2 : i64
    %324 = arith.muli %323, %c2_i64_112 : i64
    %325 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %326 = llvm.load %325 : !llvm.ptr -> i64
    %327 = arith.cmpi ult, %326, %324 : i64
    scf.if %327 {
    } else {
      %427 = arith.subi %326, %324 : i64
      llvm.store %427, %325 : i64, !llvm.ptr
    }
    %c80_i8_113 = arith.constant 80 : i8
    cf.cond_br %327, ^bb1(%c80_i8_113 : i8), ^bb87
  ^bb87:  // pred: ^bb86
    %328 = arith.trunci %97 : i256 to i64
    %c0_i64_114 = arith.constant 0 : i64
    %329 = arith.cmpi slt, %328, %c0_i64_114 : i64
    %c84_i8_115 = arith.constant 84 : i8
    cf.cond_br %329, ^bb1(%c84_i8_115 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %330 = arith.addi %328, %104 : i64
    %c0_i64_116 = arith.constant 0 : i64
    %331 = arith.cmpi slt, %330, %c0_i64_116 : i64
    %c84_i8_117 = arith.constant 84 : i8
    cf.cond_br %331, ^bb1(%c84_i8_117 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    %c31_i64_118 = arith.constant 31 : i64
    %c32_i64_119 = arith.constant 32 : i64
    %332 = arith.addi %330, %c31_i64_118 : i64
    %333 = arith.divui %332, %c32_i64_119 : i64
    %c32_i64_120 = arith.constant 32 : i64
    %334 = arith.muli %333, %c32_i64_120 : i64
    %335 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %336 = llvm.load %335 : !llvm.ptr -> i64
    %c31_i64_121 = arith.constant 31 : i64
    %c32_i64_122 = arith.constant 32 : i64
    %337 = arith.addi %336, %c31_i64_121 : i64
    %338 = arith.divui %337, %c32_i64_122 : i64
    %339 = arith.muli %338, %c32_i64_120 : i64
    %340 = arith.cmpi ult, %339, %334 : i64
    cf.cond_br %340, ^bb91, ^bb90
  ^bb90:  // 2 preds: ^bb89, ^bb93
    cf.br ^bb31
  ^bb91:  // pred: ^bb89
    %c3_i64_123 = arith.constant 3 : i64
    %c512_i64_124 = arith.constant 512 : i64
    %341 = arith.muli %338, %338 : i64
    %342 = arith.divui %341, %c512_i64_124 : i64
    %343 = arith.muli %338, %c3_i64_123 : i64
    %344 = arith.addi %342, %343 : i64
    %c3_i64_125 = arith.constant 3 : i64
    %c512_i64_126 = arith.constant 512 : i64
    %345 = arith.muli %333, %333 : i64
    %346 = arith.divui %345, %c512_i64_126 : i64
    %347 = arith.muli %333, %c3_i64_125 : i64
    %348 = arith.addi %346, %347 : i64
    %349 = arith.subi %348, %344 : i64
    %350 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %351 = llvm.load %350 : !llvm.ptr -> i64
    %352 = arith.cmpi ult, %351, %349 : i64
    scf.if %352 {
    } else {
      %427 = arith.subi %351, %349 : i64
      llvm.store %427, %350 : i64, !llvm.ptr
    }
    %c80_i8_127 = arith.constant 80 : i8
    cf.cond_br %352, ^bb1(%c80_i8_127 : i8), ^bb92
  ^bb92:  // pred: ^bb91
    %353 = call @dora_fn_extend_memory(%arg0, %334) : (!llvm.ptr, i64) -> !llvm.ptr
    %354 = llvm.getelementptr %353[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %355 = llvm.load %354 : !llvm.ptr -> !llvm.ptr
    %356 = llvm.getelementptr %353[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %357 = llvm.load %356 : !llvm.ptr -> i8
    %c0_i8_128 = arith.constant 0 : i8
    %358 = arith.cmpi ne, %357, %c0_i8_128 : i8
    cf.cond_br %358, ^bb1(%357 : i8), ^bb93
  ^bb93:  // pred: ^bb92
    %359 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %355, %359 : !llvm.ptr, !llvm.ptr
    %360 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %334, %360 : i64, !llvm.ptr
    cf.br ^bb90
  ^bb94:  // pred: ^bb68
    %361 = arith.trunci %233 : i256 to i64
    %c0_i64_129 = arith.constant 0 : i64
    %362 = arith.cmpi slt, %361, %c0_i64_129 : i64
    %c84_i8_130 = arith.constant 84 : i8
    cf.cond_br %362, ^bb1(%c84_i8_130 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %363 = arith.addi %361, %250 : i64
    %c0_i64_131 = arith.constant 0 : i64
    %364 = arith.cmpi slt, %363, %c0_i64_131 : i64
    %c84_i8_132 = arith.constant 84 : i8
    cf.cond_br %364, ^bb1(%c84_i8_132 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %c31_i64_133 = arith.constant 31 : i64
    %c32_i64_134 = arith.constant 32 : i64
    %365 = arith.addi %363, %c31_i64_133 : i64
    %366 = arith.divui %365, %c32_i64_134 : i64
    %c32_i64_135 = arith.constant 32 : i64
    %367 = arith.muli %366, %c32_i64_135 : i64
    %368 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %369 = llvm.load %368 : !llvm.ptr -> i64
    %c31_i64_136 = arith.constant 31 : i64
    %c32_i64_137 = arith.constant 32 : i64
    %370 = arith.addi %369, %c31_i64_136 : i64
    %371 = arith.divui %370, %c32_i64_137 : i64
    %372 = arith.muli %371, %c32_i64_135 : i64
    %373 = arith.cmpi ult, %372, %367 : i64
    cf.cond_br %373, ^bb98, ^bb97
  ^bb97:  // 2 preds: ^bb96, ^bb100
    cf.br ^bb69
  ^bb98:  // pred: ^bb96
    %c3_i64_138 = arith.constant 3 : i64
    %c512_i64_139 = arith.constant 512 : i64
    %374 = arith.muli %371, %371 : i64
    %375 = arith.divui %374, %c512_i64_139 : i64
    %376 = arith.muli %371, %c3_i64_138 : i64
    %377 = arith.addi %375, %376 : i64
    %c3_i64_140 = arith.constant 3 : i64
    %c512_i64_141 = arith.constant 512 : i64
    %378 = arith.muli %366, %366 : i64
    %379 = arith.divui %378, %c512_i64_141 : i64
    %380 = arith.muli %366, %c3_i64_140 : i64
    %381 = arith.addi %379, %380 : i64
    %382 = arith.subi %381, %377 : i64
    %383 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %384 = llvm.load %383 : !llvm.ptr -> i64
    %385 = arith.cmpi ult, %384, %382 : i64
    scf.if %385 {
    } else {
      %427 = arith.subi %384, %382 : i64
      llvm.store %427, %383 : i64, !llvm.ptr
    }
    %c80_i8_142 = arith.constant 80 : i8
    cf.cond_br %385, ^bb1(%c80_i8_142 : i8), ^bb99
  ^bb99:  // pred: ^bb98
    %386 = call @dora_fn_extend_memory(%arg0, %367) : (!llvm.ptr, i64) -> !llvm.ptr
    %387 = llvm.getelementptr %386[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %388 = llvm.load %387 : !llvm.ptr -> !llvm.ptr
    %389 = llvm.getelementptr %386[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %390 = llvm.load %389 : !llvm.ptr -> i8
    %c0_i8_143 = arith.constant 0 : i8
    %391 = arith.cmpi ne, %390, %c0_i8_143 : i8
    cf.cond_br %391, ^bb1(%390 : i8), ^bb100
  ^bb100:  // pred: ^bb99
    %392 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %388, %392 : !llvm.ptr, !llvm.ptr
    %393 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %367, %393 : i64, !llvm.ptr
    cf.br ^bb97
  ^bb101:  // pred: ^bb70
    %394 = arith.trunci %241 : i256 to i64
    %c0_i64_144 = arith.constant 0 : i64
    %395 = arith.cmpi slt, %394, %c0_i64_144 : i64
    %c84_i8_145 = arith.constant 84 : i8
    cf.cond_br %395, ^bb1(%c84_i8_145 : i8), ^bb102
  ^bb102:  // pred: ^bb101
    %396 = arith.addi %394, %253 : i64
    %c0_i64_146 = arith.constant 0 : i64
    %397 = arith.cmpi slt, %396, %c0_i64_146 : i64
    %c84_i8_147 = arith.constant 84 : i8
    cf.cond_br %397, ^bb1(%c84_i8_147 : i8), ^bb103
  ^bb103:  // pred: ^bb102
    %c31_i64_148 = arith.constant 31 : i64
    %c32_i64_149 = arith.constant 32 : i64
    %398 = arith.addi %396, %c31_i64_148 : i64
    %399 = arith.divui %398, %c32_i64_149 : i64
    %c32_i64_150 = arith.constant 32 : i64
    %400 = arith.muli %399, %c32_i64_150 : i64
    %401 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %402 = llvm.load %401 : !llvm.ptr -> i64
    %c31_i64_151 = arith.constant 31 : i64
    %c32_i64_152 = arith.constant 32 : i64
    %403 = arith.addi %402, %c31_i64_151 : i64
    %404 = arith.divui %403, %c32_i64_152 : i64
    %405 = arith.muli %404, %c32_i64_150 : i64
    %406 = arith.cmpi ult, %405, %400 : i64
    cf.cond_br %406, ^bb105, ^bb104
  ^bb104:  // 2 preds: ^bb103, ^bb107
    cf.br ^bb71
  ^bb105:  // pred: ^bb103
    %c3_i64_153 = arith.constant 3 : i64
    %c512_i64_154 = arith.constant 512 : i64
    %407 = arith.muli %404, %404 : i64
    %408 = arith.divui %407, %c512_i64_154 : i64
    %409 = arith.muli %404, %c3_i64_153 : i64
    %410 = arith.addi %408, %409 : i64
    %c3_i64_155 = arith.constant 3 : i64
    %c512_i64_156 = arith.constant 512 : i64
    %411 = arith.muli %399, %399 : i64
    %412 = arith.divui %411, %c512_i64_156 : i64
    %413 = arith.muli %399, %c3_i64_155 : i64
    %414 = arith.addi %412, %413 : i64
    %415 = arith.subi %414, %410 : i64
    %416 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %417 = llvm.load %416 : !llvm.ptr -> i64
    %418 = arith.cmpi ult, %417, %415 : i64
    scf.if %418 {
    } else {
      %427 = arith.subi %417, %415 : i64
      llvm.store %427, %416 : i64, !llvm.ptr
    }
    %c80_i8_157 = arith.constant 80 : i8
    cf.cond_br %418, ^bb1(%c80_i8_157 : i8), ^bb106
  ^bb106:  // pred: ^bb105
    %419 = call @dora_fn_extend_memory(%arg0, %400) : (!llvm.ptr, i64) -> !llvm.ptr
    %420 = llvm.getelementptr %419[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %421 = llvm.load %420 : !llvm.ptr -> !llvm.ptr
    %422 = llvm.getelementptr %419[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %423 = llvm.load %422 : !llvm.ptr -> i8
    %c0_i8_158 = arith.constant 0 : i8
    %424 = arith.cmpi ne, %423, %c0_i8_158 : i8
    cf.cond_br %424, ^bb1(%423 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %425 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %421, %425 : !llvm.ptr, !llvm.ptr
    %426 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %400, %426 : i64, !llvm.ptr
    cf.br ^bb104
  }
}
