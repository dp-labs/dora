---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 36 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c0_i64_4 = arith.constant 0 : i64
    %37 = arith.cmpi slt, %36, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %37, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c32_i64 = arith.constant 32 : i64
    %38 = arith.addi %36, %c32_i64 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %39 = arith.cmpi slt, %38, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %39, ^bb1(%c84_i8_6 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_7 = arith.constant 32 : i64
    %40 = arith.addi %38, %c31_i64 : i64
    %41 = arith.divui %40, %c32_i64_7 : i64
    %42 = arith.muli %41, %c32_i64_7 : i64
    %43 = call @dora_fn_extend_memory(%arg0, %42) : (!llvm.ptr, i64) -> !llvm.ptr
    %44 = llvm.getelementptr %43[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %43[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %48 = arith.cmpi ne, %47, %c0_i8 : i8
    cf.cond_br %48, ^bb1(%47 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %49 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %45, %49 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %42, %50 : i64, !llvm.ptr
    %51 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %54, %53 {alignment = 1 : i64} : i256, !llvm.ptr
    %55 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_8 : i64
    llvm.store %56, %9 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64, %56 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c17_i256 = arith.constant 17 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    %61 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_10 : i64
    llvm.store %62, %9 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64, %62 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_11 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c15_i256 = arith.constant 15 : i256
    %64 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %65 : i256, !llvm.ptr
    %66 = llvm.getelementptr %65[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %66, %64 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_12 = arith.constant 1 : i64
    %68 = arith.addi %67, %c1_i64_12 : i64
    llvm.store %68, %9 : i64, !llvm.ptr
    %69 = arith.cmpi ult, %c1024_i64, %68 : i64
    %c92_i8_13 = arith.constant 92 : i8
    cf.cond_br %69, ^bb1(%c92_i8_13 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %c0_i256_14 = arith.constant 0 : i256
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_14, %71 : i256, !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    %73 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_15 = arith.constant -2 : i64
    %74 = arith.addi %73, %c-2_i64_15 : i64
    llvm.store %74, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %75 = arith.cmpi ult, %73, %c3_i64 : i64
    %c91_i8_16 = arith.constant 91 : i8
    cf.cond_br %75, ^bb1(%c91_i8_16 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %76 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %77 = llvm.load %76 : !llvm.ptr -> !llvm.ptr
    %78 = llvm.getelementptr %77[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %79 = llvm.load %78 : !llvm.ptr -> i256
    llvm.store %78, %76 : !llvm.ptr, !llvm.ptr
    %80 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    %82 = llvm.getelementptr %81[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %83 = llvm.load %82 : !llvm.ptr -> i256
    llvm.store %82, %80 : !llvm.ptr, !llvm.ptr
    %84 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> !llvm.ptr
    %86 = llvm.getelementptr %85[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %87 = llvm.load %86 : !llvm.ptr -> i256
    llvm.store %86, %84 : !llvm.ptr, !llvm.ptr
    %88 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %89, ^bb1(%c87_i8 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %90 = arith.trunci %83 : i256 to i64
    %c0_i64_17 = arith.constant 0 : i64
    %91 = arith.cmpi slt, %90, %c0_i64_17 : i64
    %c84_i8_18 = arith.constant 84 : i8
    cf.cond_br %91, ^bb1(%c84_i8_18 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %92 = arith.trunci %87 : i256 to i64
    %c0_i64_19 = arith.constant 0 : i64
    %93 = arith.cmpi slt, %92, %c0_i64_19 : i64
    %c84_i8_20 = arith.constant 84 : i8
    cf.cond_br %93, ^bb1(%c84_i8_20 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %94 = arith.addi %90, %92 : i64
    %c0_i64_21 = arith.constant 0 : i64
    %95 = arith.cmpi slt, %94, %c0_i64_21 : i64
    %c84_i8_22 = arith.constant 84 : i8
    cf.cond_br %95, ^bb1(%c84_i8_22 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c31_i64_23 = arith.constant 31 : i64
    %c32_i64_24 = arith.constant 32 : i64
    %96 = arith.addi %94, %c31_i64_23 : i64
    %97 = arith.divui %96, %c32_i64_24 : i64
    %98 = arith.muli %97, %c32_i64_24 : i64
    %99 = call @dora_fn_extend_memory(%arg0, %98) : (!llvm.ptr, i64) -> !llvm.ptr
    %100 = llvm.getelementptr %99[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    %102 = llvm.getelementptr %99[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %103 = llvm.load %102 : !llvm.ptr -> i8
    %c0_i8_25 = arith.constant 0 : i8
    %104 = arith.cmpi ne, %103, %c0_i8_25 : i8
    cf.cond_br %104, ^bb1(%103 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %105 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %101, %105 : !llvm.ptr, !llvm.ptr
    %106 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %98, %106 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %107 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %79, %107 {alignment = 1 : i64} : i256, !llvm.ptr
    %108 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> i64
    %c1_i64_26 = arith.constant 1 : i64
    %110 = llvm.alloca %c1_i64_26 x i64 : (i64) -> !llvm.ptr
    llvm.store %109, %110 {alignment = 1 : i64} : i64, !llvm.ptr
    %111 = call @dora_fn_create(%arg0, %92, %90, %107, %110) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %112 = llvm.getelementptr %111[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %113 = llvm.load %112 : !llvm.ptr -> i8
    %c0_i8_27 = arith.constant 0 : i8
    %114 = arith.cmpi ne, %113, %c0_i8_27 : i8
    cf.cond_br %114, ^bb1(%113 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %115 = llvm.load %107 : !llvm.ptr -> i256
    %116 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %117 = llvm.load %116 : !llvm.ptr -> !llvm.ptr
    llvm.store %115, %117 : i256, !llvm.ptr
    %118 = llvm.getelementptr %117[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %118, %116 : !llvm.ptr, !llvm.ptr
    %119 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_28 = arith.constant 1 : i64
    %120 = arith.addi %119, %c1_i64_28 : i64
    llvm.store %120, %9 : i64, !llvm.ptr
    %121 = arith.cmpi ult, %c1024_i64, %120 : i64
    %c92_i8_29 = arith.constant 92 : i8
    cf.cond_br %121, ^bb1(%c92_i8_29 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i256_30 = arith.constant 0 : i256
    %122 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_30, %123 : i256, !llvm.ptr
    %124 = llvm.getelementptr %123[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %124, %122 : !llvm.ptr, !llvm.ptr
    %125 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_31 = arith.constant 1 : i64
    %126 = arith.addi %125, %c1_i64_31 : i64
    llvm.store %126, %9 : i64, !llvm.ptr
    %127 = arith.cmpi ult, %c1024_i64, %126 : i64
    %c92_i8_32 = arith.constant 92 : i8
    cf.cond_br %127, ^bb1(%c92_i8_32 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %c0_i256_33 = arith.constant 0 : i256
    %128 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %129 = llvm.load %128 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_33, %129 : i256, !llvm.ptr
    %130 = llvm.getelementptr %129[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %130, %128 : !llvm.ptr, !llvm.ptr
    %131 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %132 = arith.addi %131, %c1_i64_34 : i64
    llvm.store %132, %9 : i64, !llvm.ptr
    %133 = arith.cmpi ult, %c1024_i64, %132 : i64
    %c92_i8_35 = arith.constant 92 : i8
    cf.cond_br %133, ^bb1(%c92_i8_35 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %c0_i256_36 = arith.constant 0 : i256
    %134 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_36, %135 : i256, !llvm.ptr
    %136 = llvm.getelementptr %135[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %136, %134 : !llvm.ptr, !llvm.ptr
    %137 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %138 = arith.addi %137, %c1_i64_37 : i64
    llvm.store %138, %9 : i64, !llvm.ptr
    %139 = arith.cmpi ult, %c1024_i64, %138 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %139, ^bb1(%c92_i8_38 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_39 = arith.constant 0 : i256
    %140 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_39, %141 : i256, !llvm.ptr
    %142 = llvm.getelementptr %141[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %142, %140 : !llvm.ptr, !llvm.ptr
    %143 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %144 = arith.addi %143, %c1_i64_40 : i64
    llvm.store %144, %9 : i64, !llvm.ptr
    %145 = arith.cmpi ult, %c1024_i64, %144 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %145, ^bb1(%c92_i8_41 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i256_42 = arith.constant 0 : i256
    %146 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_42, %147 : i256, !llvm.ptr
    %148 = llvm.getelementptr %147[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %148, %146 : !llvm.ptr, !llvm.ptr
    %149 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %150 = arith.addi %149, %c1_i64_43 : i64
    llvm.store %150, %9 : i64, !llvm.ptr
    %151 = arith.cmpi ult, %c1024_i64, %150 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %151, ^bb1(%c92_i8_44 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %152 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %153 = llvm.load %152 : !llvm.ptr -> !llvm.ptr
    %154 = llvm.getelementptr %153[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %155 = llvm.load %154 : !llvm.ptr -> i256
    %156 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> !llvm.ptr
    llvm.store %155, %157 : i256, !llvm.ptr
    %158 = llvm.getelementptr %157[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %158, %156 : !llvm.ptr, !llvm.ptr
    %159 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_45 = arith.constant 1 : i64
    %160 = arith.addi %159, %c1_i64_45 : i64
    llvm.store %160, %9 : i64, !llvm.ptr
    %161 = arith.cmpi ult, %c1024_i64, %160 : i64
    %c92_i8_46 = arith.constant 92 : i8
    cf.cond_br %161, ^bb1(%c92_i8_46 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %c65535_i256 = arith.constant 65535 : i256
    %162 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %163 = llvm.load %162 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %163 : i256, !llvm.ptr
    %164 = llvm.getelementptr %163[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %164, %162 : !llvm.ptr, !llvm.ptr
    %165 = llvm.load %9 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %166 = arith.addi %165, %c-6_i64 : i64
    llvm.store %166, %9 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %167 = arith.cmpi ult, %165, %c7_i64 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %167, ^bb1(%c91_i8_47 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %168 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> !llvm.ptr
    %170 = llvm.getelementptr %169[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %171 = llvm.load %170 : !llvm.ptr -> i256
    llvm.store %170, %168 : !llvm.ptr, !llvm.ptr
    %172 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %173 = llvm.load %172 : !llvm.ptr -> !llvm.ptr
    %174 = llvm.getelementptr %173[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %175 = llvm.load %174 : !llvm.ptr -> i256
    llvm.store %174, %172 : !llvm.ptr, !llvm.ptr
    %176 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %177 = llvm.load %176 : !llvm.ptr -> !llvm.ptr
    %178 = llvm.getelementptr %177[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %179 = llvm.load %178 : !llvm.ptr -> i256
    llvm.store %178, %176 : !llvm.ptr, !llvm.ptr
    %180 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %181 = llvm.load %180 : !llvm.ptr -> !llvm.ptr
    %182 = llvm.getelementptr %181[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %183 = llvm.load %182 : !llvm.ptr -> i256
    llvm.store %182, %180 : !llvm.ptr, !llvm.ptr
    %184 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %185 = llvm.load %184 : !llvm.ptr -> !llvm.ptr
    %186 = llvm.getelementptr %185[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %187 = llvm.load %186 : !llvm.ptr -> i256
    llvm.store %186, %184 : !llvm.ptr, !llvm.ptr
    %188 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %189 = llvm.load %188 : !llvm.ptr -> !llvm.ptr
    %190 = llvm.getelementptr %189[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %191 = llvm.load %190 : !llvm.ptr -> i256
    llvm.store %190, %188 : !llvm.ptr, !llvm.ptr
    %192 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> !llvm.ptr
    %194 = llvm.getelementptr %193[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %195 = llvm.load %194 : !llvm.ptr -> i256
    llvm.store %194, %192 : !llvm.ptr, !llvm.ptr
    %196 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %197 = llvm.load %196 : !llvm.ptr -> i1
    %c0_i256_48 = arith.constant 0 : i256
    %198 = arith.cmpi ne, %179, %c0_i256_48 : i256
    %199 = arith.andi %197, %198 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %199, ^bb1(%c86_i8 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %200 = arith.trunci %171 : i256 to i64
    %c0_i64_49 = arith.constant 0 : i64
    %201 = arith.cmpi slt, %200, %c0_i64_49 : i64
    %c84_i8_50 = arith.constant 84 : i8
    cf.cond_br %201, ^bb1(%c84_i8_50 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %202 = arith.trunci %183 : i256 to i64
    %c0_i64_51 = arith.constant 0 : i64
    %203 = arith.cmpi slt, %202, %c0_i64_51 : i64
    %c84_i8_52 = arith.constant 84 : i8
    cf.cond_br %203, ^bb1(%c84_i8_52 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %204 = arith.trunci %187 : i256 to i64
    %c0_i64_53 = arith.constant 0 : i64
    %205 = arith.cmpi slt, %204, %c0_i64_53 : i64
    %c84_i8_54 = arith.constant 84 : i8
    cf.cond_br %205, ^bb1(%c84_i8_54 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %206 = arith.trunci %191 : i256 to i64
    %c0_i64_55 = arith.constant 0 : i64
    %207 = arith.cmpi slt, %206, %c0_i64_55 : i64
    %c84_i8_56 = arith.constant 84 : i8
    cf.cond_br %207, ^bb1(%c84_i8_56 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %208 = arith.trunci %195 : i256 to i64
    %c0_i64_57 = arith.constant 0 : i64
    %209 = arith.cmpi slt, %208, %c0_i64_57 : i64
    %c84_i8_58 = arith.constant 84 : i8
    cf.cond_br %209, ^bb1(%c84_i8_58 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %210 = arith.addi %202, %204 : i64
    %c0_i64_59 = arith.constant 0 : i64
    %211 = arith.cmpi slt, %210, %c0_i64_59 : i64
    %c84_i8_60 = arith.constant 84 : i8
    cf.cond_br %211, ^bb1(%c84_i8_60 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c31_i64_61 = arith.constant 31 : i64
    %c32_i64_62 = arith.constant 32 : i64
    %212 = arith.addi %210, %c31_i64_61 : i64
    %213 = arith.divui %212, %c32_i64_62 : i64
    %214 = arith.muli %213, %c32_i64_62 : i64
    %215 = call @dora_fn_extend_memory(%arg0, %214) : (!llvm.ptr, i64) -> !llvm.ptr
    %216 = llvm.getelementptr %215[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %217 = llvm.load %216 : !llvm.ptr -> !llvm.ptr
    %218 = llvm.getelementptr %215[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %219 = llvm.load %218 : !llvm.ptr -> i8
    %c0_i8_63 = arith.constant 0 : i8
    %220 = arith.cmpi ne, %219, %c0_i8_63 : i8
    cf.cond_br %220, ^bb1(%219 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %221 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %217, %221 : !llvm.ptr, !llvm.ptr
    %222 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %214, %222 : i64, !llvm.ptr
    %223 = arith.addi %206, %208 : i64
    %c0_i64_64 = arith.constant 0 : i64
    %224 = arith.cmpi slt, %223, %c0_i64_64 : i64
    %c84_i8_65 = arith.constant 84 : i8
    cf.cond_br %224, ^bb1(%c84_i8_65 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %c31_i64_66 = arith.constant 31 : i64
    %c32_i64_67 = arith.constant 32 : i64
    %225 = arith.addi %223, %c31_i64_66 : i64
    %226 = arith.divui %225, %c32_i64_67 : i64
    %227 = arith.muli %226, %c32_i64_67 : i64
    %228 = call @dora_fn_extend_memory(%arg0, %227) : (!llvm.ptr, i64) -> !llvm.ptr
    %229 = llvm.getelementptr %228[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %230 = llvm.load %229 : !llvm.ptr -> !llvm.ptr
    %231 = llvm.getelementptr %228[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %232 = llvm.load %231 : !llvm.ptr -> i8
    %c0_i8_68 = arith.constant 0 : i8
    %233 = arith.cmpi ne, %232, %c0_i8_68 : i8
    cf.cond_br %233, ^bb1(%232 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %234 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %230, %234 : !llvm.ptr, !llvm.ptr
    %235 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %227, %235 : i64, !llvm.ptr
    %236 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %237 = llvm.load %236 : !llvm.ptr -> i64
    %c1_i256_69 = arith.constant 1 : i256
    %238 = llvm.alloca %c1_i256_69 x i256 : (i256) -> !llvm.ptr
    llvm.store %179, %238 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_70 = arith.constant 1 : i256
    %239 = llvm.alloca %c1_i256_70 x i256 : (i256) -> !llvm.ptr
    llvm.store %175, %239 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_71 = arith.constant 1 : i64
    %240 = llvm.alloca %c1_i64_71 x i64 : (i64) -> !llvm.ptr
    %c0_i8_72 = arith.constant 0 : i8
    %241 = call @dora_fn_call(%arg0, %200, %239, %238, %202, %204, %206, %208, %237, %240, %c0_i8_72) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %242 = llvm.getelementptr %241[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %243 = llvm.load %242 : !llvm.ptr -> i8
    %244 = llvm.getelementptr %241[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %245 = llvm.load %244 : !llvm.ptr -> i8
    %c0_i8_73 = arith.constant 0 : i8
    %246 = arith.cmpi ne, %245, %c0_i8_73 : i8
    cf.cond_br %246, ^bb1(%245 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %247 = llvm.load %240 : !llvm.ptr -> i64
    %248 = arith.extui %243 : i8 to i256
    %249 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> !llvm.ptr
    llvm.store %248, %250 : i256, !llvm.ptr
    %251 = llvm.getelementptr %250[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %251, %249 : !llvm.ptr, !llvm.ptr
    cf.br ^bb38
  ^bb38:  // pred: ^bb37
    %c0_i64_74 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %252 = call @dora_fn_write_result(%arg0, %c0_i64_74, %c0_i64_74, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
