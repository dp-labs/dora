---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 59 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb31, ^bb32, ^bb33, ^bb35, ^bb36, ^bb39, ^bb40, ^bb43, ^bb44, ^bb47, ^bb48, ^bb51, ^bb52, ^bb55, ^bb56, ^bb59, ^bb60, ^bb63, ^bb64, ^bb66, ^bb67, ^bb68, ^bb69, ^bb70, ^bb73, ^bb74, ^bb76, ^bb77, ^bb80, ^bb81, ^bb84, ^bb85, ^bb87, ^bb88, ^bb89, ^bb90, ^bb93, ^bb94, ^bb96, ^bb99, ^bb100, ^bb102, ^bb105, ^bb106
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %43 = arith.cmpi ne, %c32_i64, %c0_i64_7 : i64
    cf.cond_br %43, ^bb80, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb83
    %44 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %45[%38] : (!llvm.ptr, i256) -> !llvm.ptr, i8
    %47 = llvm.intr.bswap(%42)  : (i256) -> i256
    llvm.store %47, %46 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %48 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_8 = arith.constant 1024 : i64
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %50 = arith.addi %49, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    llvm.store %50, %48 : i64, !llvm.ptr
    %51 = arith.cmpi ult, %49, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %51, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %52 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %53 = llvm.load %52 : !llvm.ptr -> i64
    %c3_i64_9 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %54 = arith.cmpi uge, %53, %c3_i64_9 : i64
    %c80_i8_10 = arith.constant 80 : i8
    cf.cond_br %54, ^bb15, ^bb1(%c80_i8_10 : i8)
  ^bb15:  // pred: ^bb14
    %55 = arith.subi %53, %c3_i64_9 : i64
    llvm.store %55, %52 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c17_i256 = arith.constant 17 : i256
    %56 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %57 = llvm.load %56 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %57 : i256, !llvm.ptr
    %58 = llvm.getelementptr %57[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %58, %56 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %59 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_11 = arith.constant 1024 : i64
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c1_i64_12 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_12 : i64
    llvm.store %61, %59 : i64, !llvm.ptr
    %62 = arith.cmpi ult, %c1024_i64_11, %61 : i64
    %c92_i8_13 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_13 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %63 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> i64
    %c3_i64_14 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %65 = arith.cmpi uge, %64, %c3_i64_14 : i64
    %c80_i8_15 = arith.constant 80 : i8
    cf.cond_br %65, ^bb19, ^bb1(%c80_i8_15 : i8)
  ^bb19:  // pred: ^bb18
    %66 = arith.subi %64, %c3_i64_14 : i64
    llvm.store %66, %63 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c15_i256 = arith.constant 15 : i256
    %67 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %68 : i256, !llvm.ptr
    %69 = llvm.getelementptr %68[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %69, %67 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %70 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_16 = arith.constant 1024 : i64
    %71 = llvm.load %70 : !llvm.ptr -> i64
    %c1_i64_17 = arith.constant 1 : i64
    %72 = arith.addi %71, %c1_i64_17 : i64
    llvm.store %72, %70 : i64, !llvm.ptr
    %73 = arith.cmpi ult, %c1024_i64_16, %72 : i64
    %c92_i8_18 = arith.constant 92 : i8
    cf.cond_br %73, ^bb1(%c92_i8_18 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %74 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> i64
    %c3_i64_19 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %76 = arith.cmpi uge, %75, %c3_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %76, ^bb23, ^bb1(%c80_i8_20 : i8)
  ^bb23:  // pred: ^bb22
    %77 = arith.subi %75, %c3_i64_19 : i64
    llvm.store %77, %74 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_21 = arith.constant 0 : i256
    %78 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %79 = llvm.load %78 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_21, %79 : i256, !llvm.ptr
    %80 = llvm.getelementptr %79[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %80, %78 : !llvm.ptr, !llvm.ptr
    cf.br ^bb36
  ^bb25:  // pred: ^bb27
    %81 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_22 = arith.constant 1024 : i64
    %82 = llvm.load %81 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %83 = arith.addi %82, %c1_i64_23 : i64
    llvm.store %83, %81 : i64, !llvm.ptr
    %84 = arith.cmpi ult, %c1024_i64_22, %83 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %84, ^bb1(%c92_i8_24 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %85 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %86 = llvm.load %85 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %87 = arith.cmpi uge, %86, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %87, ^bb27, ^bb1(%c80_i8_26 : i8)
  ^bb27:  // pred: ^bb26
    %88 = arith.subi %86, %c3_i64_25 : i64
    llvm.store %88, %85 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb35
    %89 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %90 = llvm.load %89 : !llvm.ptr -> !llvm.ptr
    %91 = llvm.getelementptr %90[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %92 = llvm.load %91 : !llvm.ptr -> i256
    llvm.store %91, %89 : !llvm.ptr, !llvm.ptr
    %93 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %94 = llvm.load %93 : !llvm.ptr -> !llvm.ptr
    %95 = llvm.getelementptr %94[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %96 = llvm.load %95 : !llvm.ptr -> i256
    llvm.store %95, %93 : !llvm.ptr, !llvm.ptr
    %97 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %98 = llvm.load %97 : !llvm.ptr -> !llvm.ptr
    %99 = llvm.getelementptr %98[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %100 = llvm.load %99 : !llvm.ptr -> i256
    llvm.store %99, %97 : !llvm.ptr, !llvm.ptr
    %101 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %102 = arith.cmpi ne, %101, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %102, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %103 = arith.trunci %100 : i256 to i64
    %c0_i64_27 = arith.constant 0 : i64
    %104 = arith.cmpi slt, %103, %c0_i64_27 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %104, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %c0_i64_28 = arith.constant 0 : i64
    %105 = arith.cmpi ne, %103, %c0_i64_28 : i64
    cf.cond_br %105, ^bb87, ^bb31
  ^bb31:  // 2 preds: ^bb30, ^bb92
    %c32000_i64 = arith.constant 32000 : i64
    %106 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %108 = arith.cmpi ult, %107, %c32000_i64 : i64
    scf.if %108 {
    } else {
      %424 = arith.subi %107, %c32000_i64 : i64
      llvm.store %424, %106 : i64, !llvm.ptr
    }
    %c80_i8_29 = arith.constant 80 : i8
    cf.cond_br %108, ^bb1(%c80_i8_29 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c1_i256 = arith.constant 1 : i256
    %109 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %92, %109 {alignment = 1 : i64} : i256, !llvm.ptr
    %110 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> i64
    %112 = arith.trunci %96 : i256 to i64
    %113 = call @dora_fn_create(%arg0, %103, %112, %109, %111) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %114 = llvm.getelementptr %113[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %115 = llvm.load %114 : !llvm.ptr -> i8
    %c0_i8_30 = arith.constant 0 : i8
    %116 = arith.cmpi ne, %115, %c0_i8_30 : i8
    cf.cond_br %116, ^bb1(%115 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %117 = llvm.getelementptr %113[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %118 = llvm.load %117 : !llvm.ptr -> i64
    %119 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %120 = llvm.load %119 : !llvm.ptr -> i64
    %121 = arith.cmpi ult, %120, %118 : i64
    scf.if %121 {
    } else {
      %424 = arith.subi %120, %118 : i64
      llvm.store %424, %119 : i64, !llvm.ptr
    }
    %c80_i8_31 = arith.constant 80 : i8
    cf.cond_br %121, ^bb1(%c80_i8_31 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %122 = llvm.load %109 : !llvm.ptr -> i256
    %123 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %124 = llvm.load %123 : !llvm.ptr -> !llvm.ptr
    llvm.store %122, %124 : i256, !llvm.ptr
    %125 = llvm.getelementptr %124[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %125, %123 : !llvm.ptr, !llvm.ptr
    cf.br ^bb40
  ^bb35:  // pred: ^bb37
    %126 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_32 = arith.constant 1024 : i64
    %127 = llvm.load %126 : !llvm.ptr -> i64
    %c-2_i64_33 = arith.constant -2 : i64
    %128 = arith.addi %127, %c-2_i64_33 : i64
    %c3_i64_34 = arith.constant 3 : i64
    llvm.store %128, %126 : i64, !llvm.ptr
    %129 = arith.cmpi ult, %127, %c3_i64_34 : i64
    %c91_i8_35 = arith.constant 91 : i8
    cf.cond_br %129, ^bb1(%c91_i8_35 : i8), ^bb28
  ^bb36:  // pred: ^bb24
    %130 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %131 = llvm.load %130 : !llvm.ptr -> i64
    %c0_i64_36 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %132 = arith.cmpi uge, %131, %c0_i64_36 : i64
    %c80_i8_37 = arith.constant 80 : i8
    cf.cond_br %132, ^bb37, ^bb1(%c80_i8_37 : i8)
  ^bb37:  // pred: ^bb36
    %133 = arith.subi %131, %c0_i64_36 : i64
    llvm.store %133, %130 : i64, !llvm.ptr
    cf.br ^bb35
  ^bb38:  // pred: ^bb39
    %c0_i256_38 = arith.constant 0 : i256
    %134 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_38, %135 : i256, !llvm.ptr
    %136 = llvm.getelementptr %135[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %136, %134 : !llvm.ptr, !llvm.ptr
    cf.br ^bb44
  ^bb39:  // pred: ^bb41
    %137 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_39 = arith.constant 1024 : i64
    %138 = llvm.load %137 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %139 = arith.addi %138, %c1_i64_40 : i64
    llvm.store %139, %137 : i64, !llvm.ptr
    %140 = arith.cmpi ult, %c1024_i64_39, %139 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %140, ^bb1(%c92_i8_41 : i8), ^bb38
  ^bb40:  // pred: ^bb34
    %141 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %142 = llvm.load %141 : !llvm.ptr -> i64
    %c3_i64_42 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %143 = arith.cmpi uge, %142, %c3_i64_42 : i64
    %c80_i8_43 = arith.constant 80 : i8
    cf.cond_br %143, ^bb41, ^bb1(%c80_i8_43 : i8)
  ^bb41:  // pred: ^bb40
    %144 = arith.subi %142, %c3_i64_42 : i64
    llvm.store %144, %141 : i64, !llvm.ptr
    cf.br ^bb39
  ^bb42:  // pred: ^bb43
    %c0_i256_44 = arith.constant 0 : i256
    %145 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_44, %146 : i256, !llvm.ptr
    %147 = llvm.getelementptr %146[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %147, %145 : !llvm.ptr, !llvm.ptr
    cf.br ^bb48
  ^bb43:  // pred: ^bb45
    %148 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_45 = arith.constant 1024 : i64
    %149 = llvm.load %148 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %150 = arith.addi %149, %c1_i64_46 : i64
    llvm.store %150, %148 : i64, !llvm.ptr
    %151 = arith.cmpi ult, %c1024_i64_45, %150 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %151, ^bb1(%c92_i8_47 : i8), ^bb42
  ^bb44:  // pred: ^bb38
    %152 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %c3_i64_48 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %154 = arith.cmpi uge, %153, %c3_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %154, ^bb45, ^bb1(%c80_i8_49 : i8)
  ^bb45:  // pred: ^bb44
    %155 = arith.subi %153, %c3_i64_48 : i64
    llvm.store %155, %152 : i64, !llvm.ptr
    cf.br ^bb43
  ^bb46:  // pred: ^bb47
    %c0_i256_50 = arith.constant 0 : i256
    %156 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_50, %157 : i256, !llvm.ptr
    %158 = llvm.getelementptr %157[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %158, %156 : !llvm.ptr, !llvm.ptr
    cf.br ^bb52
  ^bb47:  // pred: ^bb49
    %159 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_51 = arith.constant 1024 : i64
    %160 = llvm.load %159 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %161 = arith.addi %160, %c1_i64_52 : i64
    llvm.store %161, %159 : i64, !llvm.ptr
    %162 = arith.cmpi ult, %c1024_i64_51, %161 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %162, ^bb1(%c92_i8_53 : i8), ^bb46
  ^bb48:  // pred: ^bb42
    %163 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> i64
    %c3_i64_54 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %165 = arith.cmpi uge, %164, %c3_i64_54 : i64
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %165, ^bb49, ^bb1(%c80_i8_55 : i8)
  ^bb49:  // pred: ^bb48
    %166 = arith.subi %164, %c3_i64_54 : i64
    llvm.store %166, %163 : i64, !llvm.ptr
    cf.br ^bb47
  ^bb50:  // pred: ^bb51
    %c0_i256_56 = arith.constant 0 : i256
    %167 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %168 = llvm.load %167 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_56, %168 : i256, !llvm.ptr
    %169 = llvm.getelementptr %168[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %169, %167 : !llvm.ptr, !llvm.ptr
    cf.br ^bb56
  ^bb51:  // pred: ^bb53
    %170 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_57 = arith.constant 1024 : i64
    %171 = llvm.load %170 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %172 = arith.addi %171, %c1_i64_58 : i64
    llvm.store %172, %170 : i64, !llvm.ptr
    %173 = arith.cmpi ult, %c1024_i64_57, %172 : i64
    %c92_i8_59 = arith.constant 92 : i8
    cf.cond_br %173, ^bb1(%c92_i8_59 : i8), ^bb50
  ^bb52:  // pred: ^bb46
    %174 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %175 = llvm.load %174 : !llvm.ptr -> i64
    %c3_i64_60 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %176 = arith.cmpi uge, %175, %c3_i64_60 : i64
    %c80_i8_61 = arith.constant 80 : i8
    cf.cond_br %176, ^bb53, ^bb1(%c80_i8_61 : i8)
  ^bb53:  // pred: ^bb52
    %177 = arith.subi %175, %c3_i64_60 : i64
    llvm.store %177, %174 : i64, !llvm.ptr
    cf.br ^bb51
  ^bb54:  // pred: ^bb55
    %c0_i256_62 = arith.constant 0 : i256
    %178 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %179 = llvm.load %178 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_62, %179 : i256, !llvm.ptr
    %180 = llvm.getelementptr %179[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %180, %178 : !llvm.ptr, !llvm.ptr
    cf.br ^bb60
  ^bb55:  // pred: ^bb57
    %181 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_63 = arith.constant 1024 : i64
    %182 = llvm.load %181 : !llvm.ptr -> i64
    %c1_i64_64 = arith.constant 1 : i64
    %183 = arith.addi %182, %c1_i64_64 : i64
    llvm.store %183, %181 : i64, !llvm.ptr
    %184 = arith.cmpi ult, %c1024_i64_63, %183 : i64
    %c92_i8_65 = arith.constant 92 : i8
    cf.cond_br %184, ^bb1(%c92_i8_65 : i8), ^bb54
  ^bb56:  // pred: ^bb50
    %185 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> i64
    %c3_i64_66 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %187 = arith.cmpi uge, %186, %c3_i64_66 : i64
    %c80_i8_67 = arith.constant 80 : i8
    cf.cond_br %187, ^bb57, ^bb1(%c80_i8_67 : i8)
  ^bb57:  // pred: ^bb56
    %188 = arith.subi %186, %c3_i64_66 : i64
    llvm.store %188, %185 : i64, !llvm.ptr
    cf.br ^bb55
  ^bb58:  // pred: ^bb59
    %189 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> !llvm.ptr
    %191 = llvm.getelementptr %190[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %192 = llvm.load %191 : !llvm.ptr -> i256
    %193 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> !llvm.ptr
    llvm.store %192, %194 : i256, !llvm.ptr
    %195 = llvm.getelementptr %194[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %195, %193 : !llvm.ptr, !llvm.ptr
    cf.br ^bb64
  ^bb59:  // pred: ^bb61
    %196 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_68 = arith.constant 1024 : i64
    %197 = llvm.load %196 : !llvm.ptr -> i64
    %c1_i64_69 = arith.constant 1 : i64
    %198 = arith.addi %197, %c1_i64_69 : i64
    %c6_i64 = arith.constant 6 : i64
    %199 = arith.cmpi ult, %197, %c6_i64 : i64
    %200 = arith.cmpi ult, %c1024_i64_68, %198 : i64
    llvm.store %198, %196 : i64, !llvm.ptr
    %201 = arith.xori %199, %200 : i1
    %c92_i8_70 = arith.constant 92 : i8
    cf.cond_br %201, ^bb1(%c92_i8_70 : i8), ^bb58
  ^bb60:  // pred: ^bb54
    %202 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %203 = llvm.load %202 : !llvm.ptr -> i64
    %c3_i64_71 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %204 = arith.cmpi uge, %203, %c3_i64_71 : i64
    %c80_i8_72 = arith.constant 80 : i8
    cf.cond_br %204, ^bb61, ^bb1(%c80_i8_72 : i8)
  ^bb61:  // pred: ^bb60
    %205 = arith.subi %203, %c3_i64_71 : i64
    llvm.store %205, %202 : i64, !llvm.ptr
    cf.br ^bb59
  ^bb62:  // pred: ^bb63
    %c65535_i256 = arith.constant 65535 : i256
    %206 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %207 = llvm.load %206 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %207 : i256, !llvm.ptr
    %208 = llvm.getelementptr %207[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %208, %206 : !llvm.ptr, !llvm.ptr
    cf.br ^bb77
  ^bb63:  // pred: ^bb65
    %209 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_73 = arith.constant 1024 : i64
    %210 = llvm.load %209 : !llvm.ptr -> i64
    %c1_i64_74 = arith.constant 1 : i64
    %211 = arith.addi %210, %c1_i64_74 : i64
    llvm.store %211, %209 : i64, !llvm.ptr
    %212 = arith.cmpi ult, %c1024_i64_73, %211 : i64
    %c92_i8_75 = arith.constant 92 : i8
    cf.cond_br %212, ^bb1(%c92_i8_75 : i8), ^bb62
  ^bb64:  // pred: ^bb58
    %213 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %214 = llvm.load %213 : !llvm.ptr -> i64
    %c3_i64_76 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %215 = arith.cmpi uge, %214, %c3_i64_76 : i64
    %c80_i8_77 = arith.constant 80 : i8
    cf.cond_br %215, ^bb65, ^bb1(%c80_i8_77 : i8)
  ^bb65:  // pred: ^bb64
    %216 = arith.subi %214, %c3_i64_76 : i64
    llvm.store %216, %213 : i64, !llvm.ptr
    cf.br ^bb63
  ^bb66:  // pred: ^bb76
    %217 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %218 = llvm.load %217 : !llvm.ptr -> !llvm.ptr
    %219 = llvm.getelementptr %218[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %220 = llvm.load %219 : !llvm.ptr -> i256
    llvm.store %219, %217 : !llvm.ptr, !llvm.ptr
    %221 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %222 = llvm.load %221 : !llvm.ptr -> !llvm.ptr
    %223 = llvm.getelementptr %222[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %224 = llvm.load %223 : !llvm.ptr -> i256
    llvm.store %223, %221 : !llvm.ptr, !llvm.ptr
    %225 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %226 = llvm.load %225 : !llvm.ptr -> !llvm.ptr
    %227 = llvm.getelementptr %226[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %228 = llvm.load %227 : !llvm.ptr -> i256
    llvm.store %227, %225 : !llvm.ptr, !llvm.ptr
    %229 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %230 = llvm.load %229 : !llvm.ptr -> !llvm.ptr
    %231 = llvm.getelementptr %230[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %232 = llvm.load %231 : !llvm.ptr -> i256
    llvm.store %231, %229 : !llvm.ptr, !llvm.ptr
    %233 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %234 = llvm.load %233 : !llvm.ptr -> !llvm.ptr
    %235 = llvm.getelementptr %234[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %236 = llvm.load %235 : !llvm.ptr -> i256
    llvm.store %235, %233 : !llvm.ptr, !llvm.ptr
    %237 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> !llvm.ptr
    %239 = llvm.getelementptr %238[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %240 = llvm.load %239 : !llvm.ptr -> i256
    llvm.store %239, %237 : !llvm.ptr, !llvm.ptr
    %241 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %242 = llvm.load %241 : !llvm.ptr -> !llvm.ptr
    %243 = llvm.getelementptr %242[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %244 = llvm.load %243 : !llvm.ptr -> i256
    llvm.store %243, %241 : !llvm.ptr, !llvm.ptr
    %245 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8_78 = arith.constant 0 : i8
    %246 = arith.cmpi ne, %245, %c0_i8_78 : i8
    %c0_i256_79 = arith.constant 0 : i256
    %247 = arith.cmpi ne, %228, %c0_i256_79 : i256
    %248 = arith.andi %246, %247 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %248, ^bb1(%c86_i8 : i8), ^bb67
  ^bb67:  // pred: ^bb66
    %249 = arith.trunci %232 : i256 to i64
    %c0_i64_80 = arith.constant 0 : i64
    %250 = arith.cmpi slt, %249, %c0_i64_80 : i64
    %c84_i8_81 = arith.constant 84 : i8
    cf.cond_br %250, ^bb1(%c84_i8_81 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %251 = arith.trunci %236 : i256 to i64
    %c0_i64_82 = arith.constant 0 : i64
    %252 = arith.cmpi slt, %251, %c0_i64_82 : i64
    %c84_i8_83 = arith.constant 84 : i8
    cf.cond_br %252, ^bb1(%c84_i8_83 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %253 = arith.trunci %240 : i256 to i64
    %c0_i64_84 = arith.constant 0 : i64
    %254 = arith.cmpi slt, %253, %c0_i64_84 : i64
    %c84_i8_85 = arith.constant 84 : i8
    cf.cond_br %254, ^bb1(%c84_i8_85 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %255 = arith.trunci %244 : i256 to i64
    %c0_i64_86 = arith.constant 0 : i64
    %256 = arith.cmpi slt, %255, %c0_i64_86 : i64
    %c84_i8_87 = arith.constant 84 : i8
    cf.cond_br %256, ^bb1(%c84_i8_87 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %c0_i64_88 = arith.constant 0 : i64
    %257 = arith.cmpi ne, %251, %c0_i64_88 : i64
    cf.cond_br %257, ^bb96, ^bb72
  ^bb72:  // 2 preds: ^bb71, ^bb98
    %c0_i64_89 = arith.constant 0 : i64
    %258 = arith.cmpi ne, %255, %c0_i64_89 : i64
    cf.cond_br %258, ^bb102, ^bb73
  ^bb73:  // 2 preds: ^bb72, ^bb104
    %259 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %260 = llvm.load %259 : !llvm.ptr -> i64
    %c1_i256_90 = arith.constant 1 : i256
    %261 = llvm.alloca %c1_i256_90 x i256 : (i256) -> !llvm.ptr
    llvm.store %228, %261 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_91 = arith.constant 1 : i256
    %262 = llvm.alloca %c1_i256_91 x i256 : (i256) -> !llvm.ptr
    llvm.store %220, %262 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_92 = arith.constant 1 : i256
    %263 = llvm.alloca %c1_i256_92 x i256 : (i256) -> !llvm.ptr
    llvm.store %224, %263 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i8_93 = arith.constant 0 : i8
    %264 = call @dora_fn_call(%arg0, %262, %263, %261, %249, %251, %253, %255, %260, %c0_i8_93) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %265 = llvm.getelementptr %264[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %266 = llvm.load %265 : !llvm.ptr -> i8
    %267 = llvm.getelementptr %264[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %268 = llvm.load %267 : !llvm.ptr -> i8
    %c0_i8_94 = arith.constant 0 : i8
    %269 = arith.cmpi ne, %268, %c0_i8_94 : i8
    cf.cond_br %269, ^bb1(%268 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %270 = llvm.getelementptr %264[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %271 = llvm.load %270 : !llvm.ptr -> i64
    %272 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %273 = llvm.load %272 : !llvm.ptr -> i64
    %274 = arith.cmpi ult, %273, %271 : i64
    scf.if %274 {
    } else {
      %424 = arith.subi %273, %271 : i64
      llvm.store %424, %272 : i64, !llvm.ptr
    }
    %c80_i8_95 = arith.constant 80 : i8
    cf.cond_br %274, ^bb1(%c80_i8_95 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %275 = arith.extui %266 : i8 to i256
    %276 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %277 = llvm.load %276 : !llvm.ptr -> !llvm.ptr
    llvm.store %275, %277 : i256, !llvm.ptr
    %278 = llvm.getelementptr %277[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %278, %276 : !llvm.ptr, !llvm.ptr
    cf.br ^bb79
  ^bb76:  // pred: ^bb78
    %279 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_96 = arith.constant 1024 : i64
    %280 = llvm.load %279 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %281 = arith.addi %280, %c-6_i64 : i64
    %c7_i64 = arith.constant 7 : i64
    llvm.store %281, %279 : i64, !llvm.ptr
    %282 = arith.cmpi ult, %280, %c7_i64 : i64
    %c91_i8_97 = arith.constant 91 : i8
    cf.cond_br %282, ^bb1(%c91_i8_97 : i8), ^bb66
  ^bb77:  // pred: ^bb62
    %283 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %284 = llvm.load %283 : !llvm.ptr -> i64
    %c0_i64_98 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %285 = arith.cmpi uge, %284, %c0_i64_98 : i64
    %c80_i8_99 = arith.constant 80 : i8
    cf.cond_br %285, ^bb78, ^bb1(%c80_i8_99 : i8)
  ^bb78:  // pred: ^bb77
    %286 = arith.subi %284, %c0_i64_98 : i64
    llvm.store %286, %283 : i64, !llvm.ptr
    cf.br ^bb76
  ^bb79:  // pred: ^bb75
    %c0_i64_100 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %287 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %288 = llvm.load %287 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_100, %c0_i64_100, %288, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb80:  // pred: ^bb11
    %289 = arith.trunci %38 : i256 to i64
    %c0_i64_101 = arith.constant 0 : i64
    %290 = arith.cmpi slt, %289, %c0_i64_101 : i64
    %c84_i8_102 = arith.constant 84 : i8
    cf.cond_br %290, ^bb1(%c84_i8_102 : i8), ^bb81
  ^bb81:  // pred: ^bb80
    %291 = arith.addi %289, %c32_i64 : i64
    %c0_i64_103 = arith.constant 0 : i64
    %292 = arith.cmpi slt, %291, %c0_i64_103 : i64
    %c84_i8_104 = arith.constant 84 : i8
    cf.cond_br %292, ^bb1(%c84_i8_104 : i8), ^bb82
  ^bb82:  // pred: ^bb81
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_105 = arith.constant 32 : i64
    %293 = arith.addi %291, %c31_i64 : i64
    %294 = arith.divui %293, %c32_i64_105 : i64
    %c32_i64_106 = arith.constant 32 : i64
    %295 = arith.muli %294, %c32_i64_106 : i64
    %296 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %297 = llvm.load %296 : !llvm.ptr -> i64
    %c31_i64_107 = arith.constant 31 : i64
    %c32_i64_108 = arith.constant 32 : i64
    %298 = arith.addi %297, %c31_i64_107 : i64
    %299 = arith.divui %298, %c32_i64_108 : i64
    %300 = arith.muli %299, %c32_i64_106 : i64
    %301 = arith.cmpi ult, %300, %295 : i64
    cf.cond_br %301, ^bb84, ^bb83
  ^bb83:  // 2 preds: ^bb82, ^bb86
    cf.br ^bb12
  ^bb84:  // pred: ^bb82
    %c3_i64_109 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %302 = arith.muli %299, %299 : i64
    %303 = arith.divui %302, %c512_i64 : i64
    %304 = arith.muli %299, %c3_i64_109 : i64
    %305 = arith.addi %303, %304 : i64
    %c3_i64_110 = arith.constant 3 : i64
    %c512_i64_111 = arith.constant 512 : i64
    %306 = arith.muli %294, %294 : i64
    %307 = arith.divui %306, %c512_i64_111 : i64
    %308 = arith.muli %294, %c3_i64_110 : i64
    %309 = arith.addi %307, %308 : i64
    %310 = arith.subi %309, %305 : i64
    %311 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %312 = llvm.load %311 : !llvm.ptr -> i64
    %313 = arith.cmpi ult, %312, %310 : i64
    scf.if %313 {
    } else {
      %424 = arith.subi %312, %310 : i64
      llvm.store %424, %311 : i64, !llvm.ptr
    }
    %c80_i8_112 = arith.constant 80 : i8
    cf.cond_br %313, ^bb1(%c80_i8_112 : i8), ^bb85
  ^bb85:  // pred: ^bb84
    %314 = call @dora_fn_extend_memory(%arg0, %295) : (!llvm.ptr, i64) -> !llvm.ptr
    %315 = llvm.getelementptr %314[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %316 = llvm.load %315 : !llvm.ptr -> !llvm.ptr
    %317 = llvm.getelementptr %314[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %318 = llvm.load %317 : !llvm.ptr -> i8
    %c0_i8_113 = arith.constant 0 : i8
    %319 = arith.cmpi ne, %318, %c0_i8_113 : i8
    cf.cond_br %319, ^bb1(%318 : i8), ^bb86
  ^bb86:  // pred: ^bb85
    %320 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %316, %320 : !llvm.ptr, !llvm.ptr
    %321 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %295, %321 : i64, !llvm.ptr
    cf.br ^bb83
  ^bb87:  // pred: ^bb30
    %c49152_i64 = arith.constant 49152 : i64
    %322 = arith.cmpi ugt, %103, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %322, ^bb1(%c100_i8 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %c31_i64_114 = arith.constant 31 : i64
    %c32_i64_115 = arith.constant 32 : i64
    %323 = arith.addi %103, %c31_i64_114 : i64
    %324 = arith.divui %323, %c32_i64_115 : i64
    %c2_i64_116 = arith.constant 2 : i64
    %325 = arith.muli %324, %c2_i64_116 : i64
    %326 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %327 = llvm.load %326 : !llvm.ptr -> i64
    %328 = arith.cmpi ult, %327, %325 : i64
    scf.if %328 {
    } else {
      %424 = arith.subi %327, %325 : i64
      llvm.store %424, %326 : i64, !llvm.ptr
    }
    %c80_i8_117 = arith.constant 80 : i8
    cf.cond_br %328, ^bb1(%c80_i8_117 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    %329 = arith.trunci %96 : i256 to i64
    %c0_i64_118 = arith.constant 0 : i64
    %330 = arith.cmpi slt, %329, %c0_i64_118 : i64
    %c84_i8_119 = arith.constant 84 : i8
    cf.cond_br %330, ^bb1(%c84_i8_119 : i8), ^bb90
  ^bb90:  // pred: ^bb89
    %331 = arith.addi %329, %103 : i64
    %c0_i64_120 = arith.constant 0 : i64
    %332 = arith.cmpi slt, %331, %c0_i64_120 : i64
    %c84_i8_121 = arith.constant 84 : i8
    cf.cond_br %332, ^bb1(%c84_i8_121 : i8), ^bb91
  ^bb91:  // pred: ^bb90
    %c31_i64_122 = arith.constant 31 : i64
    %c32_i64_123 = arith.constant 32 : i64
    %333 = arith.addi %331, %c31_i64_122 : i64
    %334 = arith.divui %333, %c32_i64_123 : i64
    %c32_i64_124 = arith.constant 32 : i64
    %335 = arith.muli %334, %c32_i64_124 : i64
    %336 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %337 = llvm.load %336 : !llvm.ptr -> i64
    %c31_i64_125 = arith.constant 31 : i64
    %c32_i64_126 = arith.constant 32 : i64
    %338 = arith.addi %337, %c31_i64_125 : i64
    %339 = arith.divui %338, %c32_i64_126 : i64
    %340 = arith.muli %339, %c32_i64_124 : i64
    %341 = arith.cmpi ult, %340, %335 : i64
    cf.cond_br %341, ^bb93, ^bb92
  ^bb92:  // 2 preds: ^bb91, ^bb95
    cf.br ^bb31
  ^bb93:  // pred: ^bb91
    %c3_i64_127 = arith.constant 3 : i64
    %c512_i64_128 = arith.constant 512 : i64
    %342 = arith.muli %339, %339 : i64
    %343 = arith.divui %342, %c512_i64_128 : i64
    %344 = arith.muli %339, %c3_i64_127 : i64
    %345 = arith.addi %343, %344 : i64
    %c3_i64_129 = arith.constant 3 : i64
    %c512_i64_130 = arith.constant 512 : i64
    %346 = arith.muli %334, %334 : i64
    %347 = arith.divui %346, %c512_i64_130 : i64
    %348 = arith.muli %334, %c3_i64_129 : i64
    %349 = arith.addi %347, %348 : i64
    %350 = arith.subi %349, %345 : i64
    %351 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %352 = llvm.load %351 : !llvm.ptr -> i64
    %353 = arith.cmpi ult, %352, %350 : i64
    scf.if %353 {
    } else {
      %424 = arith.subi %352, %350 : i64
      llvm.store %424, %351 : i64, !llvm.ptr
    }
    %c80_i8_131 = arith.constant 80 : i8
    cf.cond_br %353, ^bb1(%c80_i8_131 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %354 = call @dora_fn_extend_memory(%arg0, %335) : (!llvm.ptr, i64) -> !llvm.ptr
    %355 = llvm.getelementptr %354[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %356 = llvm.load %355 : !llvm.ptr -> !llvm.ptr
    %357 = llvm.getelementptr %354[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %358 = llvm.load %357 : !llvm.ptr -> i8
    %c0_i8_132 = arith.constant 0 : i8
    %359 = arith.cmpi ne, %358, %c0_i8_132 : i8
    cf.cond_br %359, ^bb1(%358 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %360 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %356, %360 : !llvm.ptr, !llvm.ptr
    %361 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %335, %361 : i64, !llvm.ptr
    cf.br ^bb92
  ^bb96:  // pred: ^bb71
    %362 = arith.addi %249, %251 : i64
    %c0_i64_133 = arith.constant 0 : i64
    %363 = arith.cmpi slt, %362, %c0_i64_133 : i64
    %c84_i8_134 = arith.constant 84 : i8
    cf.cond_br %363, ^bb1(%c84_i8_134 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %c31_i64_135 = arith.constant 31 : i64
    %c32_i64_136 = arith.constant 32 : i64
    %364 = arith.addi %362, %c31_i64_135 : i64
    %365 = arith.divui %364, %c32_i64_136 : i64
    %c32_i64_137 = arith.constant 32 : i64
    %366 = arith.muli %365, %c32_i64_137 : i64
    %367 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %368 = llvm.load %367 : !llvm.ptr -> i64
    %c31_i64_138 = arith.constant 31 : i64
    %c32_i64_139 = arith.constant 32 : i64
    %369 = arith.addi %368, %c31_i64_138 : i64
    %370 = arith.divui %369, %c32_i64_139 : i64
    %371 = arith.muli %370, %c32_i64_137 : i64
    %372 = arith.cmpi ult, %371, %366 : i64
    cf.cond_br %372, ^bb99, ^bb98
  ^bb98:  // 2 preds: ^bb97, ^bb101
    cf.br ^bb72
  ^bb99:  // pred: ^bb97
    %c3_i64_140 = arith.constant 3 : i64
    %c512_i64_141 = arith.constant 512 : i64
    %373 = arith.muli %370, %370 : i64
    %374 = arith.divui %373, %c512_i64_141 : i64
    %375 = arith.muli %370, %c3_i64_140 : i64
    %376 = arith.addi %374, %375 : i64
    %c3_i64_142 = arith.constant 3 : i64
    %c512_i64_143 = arith.constant 512 : i64
    %377 = arith.muli %365, %365 : i64
    %378 = arith.divui %377, %c512_i64_143 : i64
    %379 = arith.muli %365, %c3_i64_142 : i64
    %380 = arith.addi %378, %379 : i64
    %381 = arith.subi %380, %376 : i64
    %382 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %383 = llvm.load %382 : !llvm.ptr -> i64
    %384 = arith.cmpi ult, %383, %381 : i64
    scf.if %384 {
    } else {
      %424 = arith.subi %383, %381 : i64
      llvm.store %424, %382 : i64, !llvm.ptr
    }
    %c80_i8_144 = arith.constant 80 : i8
    cf.cond_br %384, ^bb1(%c80_i8_144 : i8), ^bb100
  ^bb100:  // pred: ^bb99
    %385 = call @dora_fn_extend_memory(%arg0, %366) : (!llvm.ptr, i64) -> !llvm.ptr
    %386 = llvm.getelementptr %385[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %387 = llvm.load %386 : !llvm.ptr -> !llvm.ptr
    %388 = llvm.getelementptr %385[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %389 = llvm.load %388 : !llvm.ptr -> i8
    %c0_i8_145 = arith.constant 0 : i8
    %390 = arith.cmpi ne, %389, %c0_i8_145 : i8
    cf.cond_br %390, ^bb1(%389 : i8), ^bb101
  ^bb101:  // pred: ^bb100
    %391 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %387, %391 : !llvm.ptr, !llvm.ptr
    %392 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %366, %392 : i64, !llvm.ptr
    cf.br ^bb98
  ^bb102:  // pred: ^bb72
    %393 = arith.addi %253, %255 : i64
    %c0_i64_146 = arith.constant 0 : i64
    %394 = arith.cmpi slt, %393, %c0_i64_146 : i64
    %c84_i8_147 = arith.constant 84 : i8
    cf.cond_br %394, ^bb1(%c84_i8_147 : i8), ^bb103
  ^bb103:  // pred: ^bb102
    %c31_i64_148 = arith.constant 31 : i64
    %c32_i64_149 = arith.constant 32 : i64
    %395 = arith.addi %393, %c31_i64_148 : i64
    %396 = arith.divui %395, %c32_i64_149 : i64
    %c32_i64_150 = arith.constant 32 : i64
    %397 = arith.muli %396, %c32_i64_150 : i64
    %398 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %399 = llvm.load %398 : !llvm.ptr -> i64
    %c31_i64_151 = arith.constant 31 : i64
    %c32_i64_152 = arith.constant 32 : i64
    %400 = arith.addi %399, %c31_i64_151 : i64
    %401 = arith.divui %400, %c32_i64_152 : i64
    %402 = arith.muli %401, %c32_i64_150 : i64
    %403 = arith.cmpi ult, %402, %397 : i64
    cf.cond_br %403, ^bb105, ^bb104
  ^bb104:  // 2 preds: ^bb103, ^bb107
    cf.br ^bb73
  ^bb105:  // pred: ^bb103
    %c3_i64_153 = arith.constant 3 : i64
    %c512_i64_154 = arith.constant 512 : i64
    %404 = arith.muli %401, %401 : i64
    %405 = arith.divui %404, %c512_i64_154 : i64
    %406 = arith.muli %401, %c3_i64_153 : i64
    %407 = arith.addi %405, %406 : i64
    %c3_i64_155 = arith.constant 3 : i64
    %c512_i64_156 = arith.constant 512 : i64
    %408 = arith.muli %396, %396 : i64
    %409 = arith.divui %408, %c512_i64_156 : i64
    %410 = arith.muli %396, %c3_i64_155 : i64
    %411 = arith.addi %409, %410 : i64
    %412 = arith.subi %411, %407 : i64
    %413 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %414 = llvm.load %413 : !llvm.ptr -> i64
    %415 = arith.cmpi ult, %414, %412 : i64
    scf.if %415 {
    } else {
      %424 = arith.subi %414, %412 : i64
      llvm.store %424, %413 : i64, !llvm.ptr
    }
    %c80_i8_157 = arith.constant 80 : i8
    cf.cond_br %415, ^bb1(%c80_i8_157 : i8), ^bb106
  ^bb106:  // pred: ^bb105
    %416 = call @dora_fn_extend_memory(%arg0, %397) : (!llvm.ptr, i64) -> !llvm.ptr
    %417 = llvm.getelementptr %416[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %418 = llvm.load %417 : !llvm.ptr -> !llvm.ptr
    %419 = llvm.getelementptr %416[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %420 = llvm.load %419 : !llvm.ptr -> i8
    %c0_i8_158 = arith.constant 0 : i8
    %421 = arith.cmpi ne, %420, %c0_i8_158 : i8
    cf.cond_br %421, ^bb1(%420 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %422 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %418, %422 : !llvm.ptr, !llvm.ptr
    %423 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %397, %423 : i64, !llvm.ptr
    cf.br ^bb104
  }
}
