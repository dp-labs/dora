---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> i64
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 60 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb14, ^bb15, ^bb18, ^bb19, ^bb22, ^bb23, ^bb26, ^bb27, ^bb29, ^bb30, ^bb31, ^bb33, ^bb34, ^bb35, ^bb37, ^bb38, ^bb41, ^bb42, ^bb45, ^bb46, ^bb49, ^bb50, ^bb53, ^bb54, ^bb57, ^bb58, ^bb61, ^bb62, ^bb65, ^bb66, ^bb68, ^bb69, ^bb70, ^bb71, ^bb72, ^bb73, ^bb76, ^bb77, ^bb79, ^bb80, ^bb83, ^bb86, ^bb87, ^bb89, ^bb90, ^bb91, ^bb94, ^bb95, ^bb97, ^bb100, ^bb101, ^bb103, ^bb106, ^bb107
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb14
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %43 = arith.trunci %38 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %44 = arith.cmpi slt, %43, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %44, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %45 = arith.cmpi ne, %c32_i64, %c0_i64_8 : i64
    cf.cond_br %45, ^bb83, ^bb13
  ^bb13:  // 2 preds: ^bb12, ^bb85
    %46 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %47 = llvm.load %46 : !llvm.ptr -> !llvm.ptr
    %48 = llvm.getelementptr %47[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.intr.bswap(%42)  : (i256) -> i256
    llvm.store %49, %48 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb19
  ^bb14:  // pred: ^bb16
    %50 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_9 = arith.constant 1024 : i64
    %51 = llvm.load %50 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %52 = arith.addi %51, %c-2_i64 : i64
    llvm.store %52, %50 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %53 = arith.cmpi ult, %51, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %53, ^bb1(%c91_i8 : i8), ^bb11
  ^bb15:  // pred: ^bb7
    %54 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %55 = llvm.load %54 : !llvm.ptr -> i64
    %c3_i64_10 = arith.constant 3 : i64
    %56 = arith.cmpi uge, %55, %c3_i64_10 : i64
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %56, ^bb16, ^bb1(%c80_i8_11 : i8)
  ^bb16:  // pred: ^bb15
    %57 = arith.subi %55, %c3_i64_10 : i64
    llvm.store %57, %54 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb17:  // pred: ^bb18
    %c17_i256 = arith.constant 17 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb18:  // pred: ^bb20
    %61 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_12 = arith.constant 1024 : i64
    %62 = llvm.load %61 : !llvm.ptr -> i64
    %c1_i64_13 = arith.constant 1 : i64
    %63 = arith.addi %62, %c1_i64_13 : i64
    llvm.store %63, %61 : i64, !llvm.ptr
    %64 = arith.cmpi ult, %c1024_i64_12, %63 : i64
    %c92_i8_14 = arith.constant 92 : i8
    cf.cond_br %64, ^bb1(%c92_i8_14 : i8), ^bb17
  ^bb19:  // pred: ^bb13
    %65 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %66 = llvm.load %65 : !llvm.ptr -> i64
    %c3_i64_15 = arith.constant 3 : i64
    %67 = arith.cmpi uge, %66, %c3_i64_15 : i64
    %c80_i8_16 = arith.constant 80 : i8
    cf.cond_br %67, ^bb20, ^bb1(%c80_i8_16 : i8)
  ^bb20:  // pred: ^bb19
    %68 = arith.subi %66, %c3_i64_15 : i64
    llvm.store %68, %65 : i64, !llvm.ptr
    cf.br ^bb18
  ^bb21:  // pred: ^bb22
    %c15_i256 = arith.constant 15 : i256
    %69 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %70 : i256, !llvm.ptr
    %71 = llvm.getelementptr %70[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %71, %69 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb22:  // pred: ^bb24
    %72 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_17 = arith.constant 1024 : i64
    %73 = llvm.load %72 : !llvm.ptr -> i64
    %c1_i64_18 = arith.constant 1 : i64
    %74 = arith.addi %73, %c1_i64_18 : i64
    llvm.store %74, %72 : i64, !llvm.ptr
    %75 = arith.cmpi ult, %c1024_i64_17, %74 : i64
    %c92_i8_19 = arith.constant 92 : i8
    cf.cond_br %75, ^bb1(%c92_i8_19 : i8), ^bb21
  ^bb23:  // pred: ^bb17
    %76 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %77 = llvm.load %76 : !llvm.ptr -> i64
    %c3_i64_20 = arith.constant 3 : i64
    %78 = arith.cmpi uge, %77, %c3_i64_20 : i64
    %c80_i8_21 = arith.constant 80 : i8
    cf.cond_br %78, ^bb24, ^bb1(%c80_i8_21 : i8)
  ^bb24:  // pred: ^bb23
    %79 = arith.subi %77, %c3_i64_20 : i64
    llvm.store %79, %76 : i64, !llvm.ptr
    cf.br ^bb22
  ^bb25:  // pred: ^bb26
    %c0_i256_22 = arith.constant 0 : i256
    %80 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_22, %81 : i256, !llvm.ptr
    %82 = llvm.getelementptr %81[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %82, %80 : !llvm.ptr, !llvm.ptr
    cf.br ^bb38
  ^bb26:  // pred: ^bb28
    %83 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %84 = llvm.load %83 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %85 = arith.addi %84, %c1_i64_24 : i64
    llvm.store %85, %83 : i64, !llvm.ptr
    %86 = arith.cmpi ult, %c1024_i64_23, %85 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %86, ^bb1(%c92_i8_25 : i8), ^bb25
  ^bb27:  // pred: ^bb21
    %87 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    %89 = arith.cmpi uge, %88, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %89, ^bb28, ^bb1(%c80_i8_27 : i8)
  ^bb28:  // pred: ^bb27
    %90 = arith.subi %88, %c3_i64_26 : i64
    llvm.store %90, %87 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb37
    %91 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %92 = llvm.load %91 : !llvm.ptr -> !llvm.ptr
    %93 = llvm.getelementptr %92[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %94 = llvm.load %93 : !llvm.ptr -> i256
    llvm.store %93, %91 : !llvm.ptr, !llvm.ptr
    %95 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %96 = llvm.load %95 : !llvm.ptr -> !llvm.ptr
    %97 = llvm.getelementptr %96[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %98 = llvm.load %97 : !llvm.ptr -> i256
    llvm.store %97, %95 : !llvm.ptr, !llvm.ptr
    %99 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> !llvm.ptr
    %101 = llvm.getelementptr %100[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %102 = llvm.load %101 : !llvm.ptr -> i256
    llvm.store %101, %99 : !llvm.ptr, !llvm.ptr
    %103 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %104, ^bb1(%c87_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %105 = arith.trunci %98 : i256 to i64
    %c0_i64_28 = arith.constant 0 : i64
    %106 = arith.cmpi slt, %105, %c0_i64_28 : i64
    %c84_i8_29 = arith.constant 84 : i8
    cf.cond_br %106, ^bb1(%c84_i8_29 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %107 = arith.trunci %102 : i256 to i64
    %c0_i64_30 = arith.constant 0 : i64
    %108 = arith.cmpi slt, %107, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %108, ^bb1(%c84_i8_31 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i64_32 = arith.constant 0 : i64
    %109 = arith.cmpi ne, %107, %c0_i64_32 : i64
    cf.cond_br %109, ^bb89, ^bb33
  ^bb33:  // 2 preds: ^bb32, ^bb93
    %c32000_i64 = arith.constant 32000 : i64
    %110 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> i64
    %112 = arith.cmpi ult, %111, %c32000_i64 : i64
    scf.if %112 {
    } else {
      %422 = arith.subi %111, %c32000_i64 : i64
      llvm.store %422, %110 : i64, !llvm.ptr
    }
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %112, ^bb1(%c80_i8_33 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c1_i256 = arith.constant 1 : i256
    %113 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %94, %113 {alignment = 1 : i64} : i256, !llvm.ptr
    %114 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> i64
    %116 = call @dora_fn_create(%arg0, %107, %105, %113, %115) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %117 = llvm.getelementptr %116[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %118 = llvm.load %117 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %119 = arith.cmpi ne, %118, %c0_i8 : i8
    cf.cond_br %119, ^bb1(%118 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %120 = llvm.getelementptr %116[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %121 = llvm.load %120 : !llvm.ptr -> i64
    %122 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %124 = arith.cmpi ult, %123, %121 : i64
    scf.if %124 {
    } else {
      %422 = arith.subi %123, %121 : i64
      llvm.store %422, %122 : i64, !llvm.ptr
    }
    %c80_i8_34 = arith.constant 80 : i8
    cf.cond_br %124, ^bb1(%c80_i8_34 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %125 = llvm.load %113 : !llvm.ptr -> i256
    %126 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> !llvm.ptr
    llvm.store %125, %127 : i256, !llvm.ptr
    %128 = llvm.getelementptr %127[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %128, %126 : !llvm.ptr, !llvm.ptr
    cf.br ^bb42
  ^bb37:  // pred: ^bb39
    %129 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_35 = arith.constant 1024 : i64
    %130 = llvm.load %129 : !llvm.ptr -> i64
    %c-2_i64_36 = arith.constant -2 : i64
    %131 = arith.addi %130, %c-2_i64_36 : i64
    llvm.store %131, %129 : i64, !llvm.ptr
    %c3_i64_37 = arith.constant 3 : i64
    %132 = arith.cmpi ult, %130, %c3_i64_37 : i64
    %c91_i8_38 = arith.constant 91 : i8
    cf.cond_br %132, ^bb1(%c91_i8_38 : i8), ^bb29
  ^bb38:  // pred: ^bb25
    %133 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %134 = llvm.load %133 : !llvm.ptr -> i64
    %c0_i64_39 = arith.constant 0 : i64
    %135 = arith.cmpi uge, %134, %c0_i64_39 : i64
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %135, ^bb39, ^bb1(%c80_i8_40 : i8)
  ^bb39:  // pred: ^bb38
    %136 = arith.subi %134, %c0_i64_39 : i64
    llvm.store %136, %133 : i64, !llvm.ptr
    cf.br ^bb37
  ^bb40:  // pred: ^bb41
    %c0_i256_41 = arith.constant 0 : i256
    %137 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %138 = llvm.load %137 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_41, %138 : i256, !llvm.ptr
    %139 = llvm.getelementptr %138[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %139, %137 : !llvm.ptr, !llvm.ptr
    cf.br ^bb46
  ^bb41:  // pred: ^bb43
    %140 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %142 = arith.addi %141, %c1_i64_43 : i64
    llvm.store %142, %140 : i64, !llvm.ptr
    %143 = arith.cmpi ult, %c1024_i64_42, %142 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %143, ^bb1(%c92_i8_44 : i8), ^bb40
  ^bb42:  // pred: ^bb36
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    %146 = arith.cmpi uge, %145, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %146, ^bb43, ^bb1(%c80_i8_46 : i8)
  ^bb43:  // pred: ^bb42
    %147 = arith.subi %145, %c3_i64_45 : i64
    llvm.store %147, %144 : i64, !llvm.ptr
    cf.br ^bb41
  ^bb44:  // pred: ^bb45
    %c0_i256_47 = arith.constant 0 : i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_47, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    cf.br ^bb50
  ^bb45:  // pred: ^bb47
    %151 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_48 = arith.constant 1024 : i64
    %152 = llvm.load %151 : !llvm.ptr -> i64
    %c1_i64_49 = arith.constant 1 : i64
    %153 = arith.addi %152, %c1_i64_49 : i64
    llvm.store %153, %151 : i64, !llvm.ptr
    %154 = arith.cmpi ult, %c1024_i64_48, %153 : i64
    %c92_i8_50 = arith.constant 92 : i8
    cf.cond_br %154, ^bb1(%c92_i8_50 : i8), ^bb44
  ^bb46:  // pred: ^bb40
    %155 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %156 = llvm.load %155 : !llvm.ptr -> i64
    %c3_i64_51 = arith.constant 3 : i64
    %157 = arith.cmpi uge, %156, %c3_i64_51 : i64
    %c80_i8_52 = arith.constant 80 : i8
    cf.cond_br %157, ^bb47, ^bb1(%c80_i8_52 : i8)
  ^bb47:  // pred: ^bb46
    %158 = arith.subi %156, %c3_i64_51 : i64
    llvm.store %158, %155 : i64, !llvm.ptr
    cf.br ^bb45
  ^bb48:  // pred: ^bb49
    %c0_i256_53 = arith.constant 0 : i256
    %159 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_53, %160 : i256, !llvm.ptr
    %161 = llvm.getelementptr %160[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %161, %159 : !llvm.ptr, !llvm.ptr
    cf.br ^bb54
  ^bb49:  // pred: ^bb51
    %162 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_54 = arith.constant 1024 : i64
    %163 = llvm.load %162 : !llvm.ptr -> i64
    %c1_i64_55 = arith.constant 1 : i64
    %164 = arith.addi %163, %c1_i64_55 : i64
    llvm.store %164, %162 : i64, !llvm.ptr
    %165 = arith.cmpi ult, %c1024_i64_54, %164 : i64
    %c92_i8_56 = arith.constant 92 : i8
    cf.cond_br %165, ^bb1(%c92_i8_56 : i8), ^bb48
  ^bb50:  // pred: ^bb44
    %166 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> i64
    %c3_i64_57 = arith.constant 3 : i64
    %168 = arith.cmpi uge, %167, %c3_i64_57 : i64
    %c80_i8_58 = arith.constant 80 : i8
    cf.cond_br %168, ^bb51, ^bb1(%c80_i8_58 : i8)
  ^bb51:  // pred: ^bb50
    %169 = arith.subi %167, %c3_i64_57 : i64
    llvm.store %169, %166 : i64, !llvm.ptr
    cf.br ^bb49
  ^bb52:  // pred: ^bb53
    %c0_i256_59 = arith.constant 0 : i256
    %170 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_59, %171 : i256, !llvm.ptr
    %172 = llvm.getelementptr %171[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %172, %170 : !llvm.ptr, !llvm.ptr
    cf.br ^bb58
  ^bb53:  // pred: ^bb55
    %173 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_60 = arith.constant 1024 : i64
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %c1_i64_61 = arith.constant 1 : i64
    %175 = arith.addi %174, %c1_i64_61 : i64
    llvm.store %175, %173 : i64, !llvm.ptr
    %176 = arith.cmpi ult, %c1024_i64_60, %175 : i64
    %c92_i8_62 = arith.constant 92 : i8
    cf.cond_br %176, ^bb1(%c92_i8_62 : i8), ^bb52
  ^bb54:  // pred: ^bb48
    %177 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> i64
    %c3_i64_63 = arith.constant 3 : i64
    %179 = arith.cmpi uge, %178, %c3_i64_63 : i64
    %c80_i8_64 = arith.constant 80 : i8
    cf.cond_br %179, ^bb55, ^bb1(%c80_i8_64 : i8)
  ^bb55:  // pred: ^bb54
    %180 = arith.subi %178, %c3_i64_63 : i64
    llvm.store %180, %177 : i64, !llvm.ptr
    cf.br ^bb53
  ^bb56:  // pred: ^bb57
    %c0_i256_65 = arith.constant 0 : i256
    %181 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %182 = llvm.load %181 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_65, %182 : i256, !llvm.ptr
    %183 = llvm.getelementptr %182[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %183, %181 : !llvm.ptr, !llvm.ptr
    cf.br ^bb62
  ^bb57:  // pred: ^bb59
    %184 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_66 = arith.constant 1024 : i64
    %185 = llvm.load %184 : !llvm.ptr -> i64
    %c1_i64_67 = arith.constant 1 : i64
    %186 = arith.addi %185, %c1_i64_67 : i64
    llvm.store %186, %184 : i64, !llvm.ptr
    %187 = arith.cmpi ult, %c1024_i64_66, %186 : i64
    %c92_i8_68 = arith.constant 92 : i8
    cf.cond_br %187, ^bb1(%c92_i8_68 : i8), ^bb56
  ^bb58:  // pred: ^bb52
    %188 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %189 = llvm.load %188 : !llvm.ptr -> i64
    %c3_i64_69 = arith.constant 3 : i64
    %190 = arith.cmpi uge, %189, %c3_i64_69 : i64
    %c80_i8_70 = arith.constant 80 : i8
    cf.cond_br %190, ^bb59, ^bb1(%c80_i8_70 : i8)
  ^bb59:  // pred: ^bb58
    %191 = arith.subi %189, %c3_i64_69 : i64
    llvm.store %191, %188 : i64, !llvm.ptr
    cf.br ^bb57
  ^bb60:  // pred: ^bb61
    %192 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> !llvm.ptr
    %194 = llvm.getelementptr %193[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %195 = llvm.load %194 : !llvm.ptr -> i256
    %196 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %197 = llvm.load %196 : !llvm.ptr -> !llvm.ptr
    llvm.store %195, %197 : i256, !llvm.ptr
    %198 = llvm.getelementptr %197[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %198, %196 : !llvm.ptr, !llvm.ptr
    cf.br ^bb66
  ^bb61:  // pred: ^bb63
    %199 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_71 = arith.constant 1024 : i64
    %200 = llvm.load %199 : !llvm.ptr -> i64
    %c1_i64_72 = arith.constant 1 : i64
    %201 = arith.addi %200, %c1_i64_72 : i64
    llvm.store %201, %199 : i64, !llvm.ptr
    %202 = arith.cmpi ult, %c1024_i64_71, %201 : i64
    %c92_i8_73 = arith.constant 92 : i8
    cf.cond_br %202, ^bb1(%c92_i8_73 : i8), ^bb60
  ^bb62:  // pred: ^bb56
    %203 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %204 = llvm.load %203 : !llvm.ptr -> i64
    %c3_i64_74 = arith.constant 3 : i64
    %205 = arith.cmpi uge, %204, %c3_i64_74 : i64
    %c80_i8_75 = arith.constant 80 : i8
    cf.cond_br %205, ^bb63, ^bb1(%c80_i8_75 : i8)
  ^bb63:  // pred: ^bb62
    %206 = arith.subi %204, %c3_i64_74 : i64
    llvm.store %206, %203 : i64, !llvm.ptr
    cf.br ^bb61
  ^bb64:  // pred: ^bb65
    %c65535_i256 = arith.constant 65535 : i256
    %207 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %208 = llvm.load %207 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %208 : i256, !llvm.ptr
    %209 = llvm.getelementptr %208[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %209, %207 : !llvm.ptr, !llvm.ptr
    cf.br ^bb80
  ^bb65:  // pred: ^bb67
    %210 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_76 = arith.constant 1024 : i64
    %211 = llvm.load %210 : !llvm.ptr -> i64
    %c1_i64_77 = arith.constant 1 : i64
    %212 = arith.addi %211, %c1_i64_77 : i64
    llvm.store %212, %210 : i64, !llvm.ptr
    %213 = arith.cmpi ult, %c1024_i64_76, %212 : i64
    %c92_i8_78 = arith.constant 92 : i8
    cf.cond_br %213, ^bb1(%c92_i8_78 : i8), ^bb64
  ^bb66:  // pred: ^bb60
    %214 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %215 = llvm.load %214 : !llvm.ptr -> i64
    %c3_i64_79 = arith.constant 3 : i64
    %216 = arith.cmpi uge, %215, %c3_i64_79 : i64
    %c80_i8_80 = arith.constant 80 : i8
    cf.cond_br %216, ^bb67, ^bb1(%c80_i8_80 : i8)
  ^bb67:  // pred: ^bb66
    %217 = arith.subi %215, %c3_i64_79 : i64
    llvm.store %217, %214 : i64, !llvm.ptr
    cf.br ^bb65
  ^bb68:  // pred: ^bb79
    %218 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %219 = llvm.load %218 : !llvm.ptr -> !llvm.ptr
    %220 = llvm.getelementptr %219[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %221 = llvm.load %220 : !llvm.ptr -> i256
    llvm.store %220, %218 : !llvm.ptr, !llvm.ptr
    %222 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> !llvm.ptr
    %224 = llvm.getelementptr %223[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %225 = llvm.load %224 : !llvm.ptr -> i256
    llvm.store %224, %222 : !llvm.ptr, !llvm.ptr
    %226 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %227 = llvm.load %226 : !llvm.ptr -> !llvm.ptr
    %228 = llvm.getelementptr %227[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %229 = llvm.load %228 : !llvm.ptr -> i256
    llvm.store %228, %226 : !llvm.ptr, !llvm.ptr
    %230 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %231 = llvm.load %230 : !llvm.ptr -> !llvm.ptr
    %232 = llvm.getelementptr %231[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %233 = llvm.load %232 : !llvm.ptr -> i256
    llvm.store %232, %230 : !llvm.ptr, !llvm.ptr
    %234 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %235 = llvm.load %234 : !llvm.ptr -> !llvm.ptr
    %236 = llvm.getelementptr %235[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %237 = llvm.load %236 : !llvm.ptr -> i256
    llvm.store %236, %234 : !llvm.ptr, !llvm.ptr
    %238 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %239 = llvm.load %238 : !llvm.ptr -> !llvm.ptr
    %240 = llvm.getelementptr %239[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %241 = llvm.load %240 : !llvm.ptr -> i256
    llvm.store %240, %238 : !llvm.ptr, !llvm.ptr
    %242 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %243 = llvm.load %242 : !llvm.ptr -> !llvm.ptr
    %244 = llvm.getelementptr %243[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %245 = llvm.load %244 : !llvm.ptr -> i256
    llvm.store %244, %242 : !llvm.ptr, !llvm.ptr
    %246 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %247 = llvm.load %246 : !llvm.ptr -> i1
    %c0_i256_81 = arith.constant 0 : i256
    %248 = arith.cmpi ne, %229, %c0_i256_81 : i256
    %249 = arith.andi %247, %248 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %249, ^bb1(%c86_i8 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %250 = arith.trunci %221 : i256 to i64
    %c0_i64_82 = arith.constant 0 : i64
    %251 = arith.cmpi slt, %250, %c0_i64_82 : i64
    %c84_i8_83 = arith.constant 84 : i8
    cf.cond_br %251, ^bb1(%c84_i8_83 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %252 = arith.trunci %233 : i256 to i64
    %c0_i64_84 = arith.constant 0 : i64
    %253 = arith.cmpi slt, %252, %c0_i64_84 : i64
    %c84_i8_85 = arith.constant 84 : i8
    cf.cond_br %253, ^bb1(%c84_i8_85 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %254 = arith.trunci %237 : i256 to i64
    %c0_i64_86 = arith.constant 0 : i64
    %255 = arith.cmpi slt, %254, %c0_i64_86 : i64
    %c84_i8_87 = arith.constant 84 : i8
    cf.cond_br %255, ^bb1(%c84_i8_87 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %256 = arith.trunci %241 : i256 to i64
    %c0_i64_88 = arith.constant 0 : i64
    %257 = arith.cmpi slt, %256, %c0_i64_88 : i64
    %c84_i8_89 = arith.constant 84 : i8
    cf.cond_br %257, ^bb1(%c84_i8_89 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %258 = arith.trunci %245 : i256 to i64
    %c0_i64_90 = arith.constant 0 : i64
    %259 = arith.cmpi slt, %258, %c0_i64_90 : i64
    %c84_i8_91 = arith.constant 84 : i8
    cf.cond_br %259, ^bb1(%c84_i8_91 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %c0_i64_92 = arith.constant 0 : i64
    %260 = arith.cmpi ne, %254, %c0_i64_92 : i64
    cf.cond_br %260, ^bb97, ^bb75
  ^bb75:  // 2 preds: ^bb74, ^bb99
    %c0_i64_93 = arith.constant 0 : i64
    %261 = arith.cmpi ne, %258, %c0_i64_93 : i64
    cf.cond_br %261, ^bb103, ^bb76
  ^bb76:  // 2 preds: ^bb75, ^bb105
    %262 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %263 = llvm.load %262 : !llvm.ptr -> i64
    %c1_i256_94 = arith.constant 1 : i256
    %264 = llvm.alloca %c1_i256_94 x i256 : (i256) -> !llvm.ptr
    llvm.store %229, %264 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_95 = arith.constant 1 : i256
    %265 = llvm.alloca %c1_i256_95 x i256 : (i256) -> !llvm.ptr
    llvm.store %225, %265 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i8_96 = arith.constant 0 : i8
    %266 = call @dora_fn_call(%arg0, %250, %265, %264, %252, %254, %256, %258, %263, %c0_i8_96) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %267 = llvm.getelementptr %266[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %268 = llvm.load %267 : !llvm.ptr -> i8
    %269 = llvm.getelementptr %266[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %270 = llvm.load %269 : !llvm.ptr -> i8
    %c0_i8_97 = arith.constant 0 : i8
    %271 = arith.cmpi ne, %270, %c0_i8_97 : i8
    cf.cond_br %271, ^bb1(%270 : i8), ^bb77
  ^bb77:  // pred: ^bb76
    %272 = llvm.getelementptr %266[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %273 = llvm.load %272 : !llvm.ptr -> i64
    %274 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %275 = llvm.load %274 : !llvm.ptr -> i64
    %276 = arith.cmpi ult, %275, %273 : i64
    scf.if %276 {
    } else {
      %422 = arith.subi %275, %273 : i64
      llvm.store %422, %274 : i64, !llvm.ptr
    }
    %c80_i8_98 = arith.constant 80 : i8
    cf.cond_br %276, ^bb1(%c80_i8_98 : i8), ^bb78
  ^bb78:  // pred: ^bb77
    %277 = arith.extui %268 : i8 to i256
    %278 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %279 = llvm.load %278 : !llvm.ptr -> !llvm.ptr
    llvm.store %277, %279 : i256, !llvm.ptr
    %280 = llvm.getelementptr %279[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %280, %278 : !llvm.ptr, !llvm.ptr
    cf.br ^bb82
  ^bb79:  // pred: ^bb81
    %281 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_99 = arith.constant 1024 : i64
    %282 = llvm.load %281 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %283 = arith.addi %282, %c-6_i64 : i64
    llvm.store %283, %281 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %284 = arith.cmpi ult, %282, %c7_i64 : i64
    %c91_i8_100 = arith.constant 91 : i8
    cf.cond_br %284, ^bb1(%c91_i8_100 : i8), ^bb68
  ^bb80:  // pred: ^bb64
    %285 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %286 = llvm.load %285 : !llvm.ptr -> i64
    %c0_i64_101 = arith.constant 0 : i64
    %287 = arith.cmpi uge, %286, %c0_i64_101 : i64
    %c80_i8_102 = arith.constant 80 : i8
    cf.cond_br %287, ^bb81, ^bb1(%c80_i8_102 : i8)
  ^bb81:  // pred: ^bb80
    %288 = arith.subi %286, %c0_i64_101 : i64
    llvm.store %288, %285 : i64, !llvm.ptr
    cf.br ^bb79
  ^bb82:  // pred: ^bb78
    %c0_i64_103 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %289 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %290 = llvm.load %289 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_103, %c0_i64_103, %290, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb83:  // pred: ^bb12
    %291 = arith.addi %43, %c32_i64 : i64
    %c0_i64_104 = arith.constant 0 : i64
    %292 = arith.cmpi slt, %291, %c0_i64_104 : i64
    %c84_i8_105 = arith.constant 84 : i8
    cf.cond_br %292, ^bb1(%c84_i8_105 : i8), ^bb84
  ^bb84:  // pred: ^bb83
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_106 = arith.constant 32 : i64
    %293 = arith.addi %291, %c31_i64 : i64
    %294 = arith.divui %293, %c32_i64_106 : i64
    %c32_i64_107 = arith.constant 32 : i64
    %295 = arith.muli %294, %c32_i64_107 : i64
    %296 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %297 = llvm.load %296 : !llvm.ptr -> i64
    %c31_i64_108 = arith.constant 31 : i64
    %c32_i64_109 = arith.constant 32 : i64
    %298 = arith.addi %297, %c31_i64_108 : i64
    %299 = arith.divui %298, %c32_i64_109 : i64
    %300 = arith.muli %299, %c32_i64_107 : i64
    %301 = arith.cmpi ult, %300, %295 : i64
    cf.cond_br %301, ^bb86, ^bb85
  ^bb85:  // 2 preds: ^bb84, ^bb88
    cf.br ^bb13
  ^bb86:  // pred: ^bb84
    %c3_i64_110 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %302 = arith.muli %299, %299 : i64
    %303 = arith.divui %302, %c512_i64 : i64
    %304 = arith.muli %299, %c3_i64_110 : i64
    %305 = arith.addi %303, %304 : i64
    %c3_i64_111 = arith.constant 3 : i64
    %c512_i64_112 = arith.constant 512 : i64
    %306 = arith.muli %294, %294 : i64
    %307 = arith.divui %306, %c512_i64_112 : i64
    %308 = arith.muli %294, %c3_i64_111 : i64
    %309 = arith.addi %307, %308 : i64
    %310 = arith.subi %309, %305 : i64
    %311 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %312 = llvm.load %311 : !llvm.ptr -> i64
    %313 = arith.cmpi ult, %312, %310 : i64
    scf.if %313 {
    } else {
      %422 = arith.subi %312, %310 : i64
      llvm.store %422, %311 : i64, !llvm.ptr
    }
    %c80_i8_113 = arith.constant 80 : i8
    cf.cond_br %313, ^bb1(%c80_i8_113 : i8), ^bb87
  ^bb87:  // pred: ^bb86
    %314 = call @dora_fn_extend_memory(%arg0, %295) : (!llvm.ptr, i64) -> !llvm.ptr
    %315 = llvm.getelementptr %314[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %316 = llvm.load %315 : !llvm.ptr -> !llvm.ptr
    %317 = llvm.getelementptr %314[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %318 = llvm.load %317 : !llvm.ptr -> i8
    %c0_i8_114 = arith.constant 0 : i8
    %319 = arith.cmpi ne, %318, %c0_i8_114 : i8
    cf.cond_br %319, ^bb1(%318 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %320 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %316, %320 : !llvm.ptr, !llvm.ptr
    %321 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %295, %321 : i64, !llvm.ptr
    cf.br ^bb85
  ^bb89:  // pred: ^bb32
    %c49152_i64 = arith.constant 49152 : i64
    %322 = arith.cmpi ugt, %107, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %322, ^bb1(%c100_i8 : i8), ^bb90
  ^bb90:  // pred: ^bb89
    %c31_i64_115 = arith.constant 31 : i64
    %c32_i64_116 = arith.constant 32 : i64
    %323 = arith.addi %107, %c31_i64_115 : i64
    %324 = arith.divui %323, %c32_i64_116 : i64
    %c2_i64_117 = arith.constant 2 : i64
    %325 = arith.muli %324, %c2_i64_117 : i64
    %326 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %327 = llvm.load %326 : !llvm.ptr -> i64
    %328 = arith.cmpi ult, %327, %325 : i64
    scf.if %328 {
    } else {
      %422 = arith.subi %327, %325 : i64
      llvm.store %422, %326 : i64, !llvm.ptr
    }
    %c80_i8_118 = arith.constant 80 : i8
    cf.cond_br %328, ^bb1(%c80_i8_118 : i8), ^bb91
  ^bb91:  // pred: ^bb90
    %329 = arith.addi %105, %107 : i64
    %c0_i64_119 = arith.constant 0 : i64
    %330 = arith.cmpi slt, %329, %c0_i64_119 : i64
    %c84_i8_120 = arith.constant 84 : i8
    cf.cond_br %330, ^bb1(%c84_i8_120 : i8), ^bb92
  ^bb92:  // pred: ^bb91
    %c31_i64_121 = arith.constant 31 : i64
    %c32_i64_122 = arith.constant 32 : i64
    %331 = arith.addi %329, %c31_i64_121 : i64
    %332 = arith.divui %331, %c32_i64_122 : i64
    %c32_i64_123 = arith.constant 32 : i64
    %333 = arith.muli %332, %c32_i64_123 : i64
    %334 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %335 = llvm.load %334 : !llvm.ptr -> i64
    %c31_i64_124 = arith.constant 31 : i64
    %c32_i64_125 = arith.constant 32 : i64
    %336 = arith.addi %335, %c31_i64_124 : i64
    %337 = arith.divui %336, %c32_i64_125 : i64
    %338 = arith.muli %337, %c32_i64_123 : i64
    %339 = arith.cmpi ult, %338, %333 : i64
    cf.cond_br %339, ^bb94, ^bb93
  ^bb93:  // 2 preds: ^bb92, ^bb96
    cf.br ^bb33
  ^bb94:  // pred: ^bb92
    %c3_i64_126 = arith.constant 3 : i64
    %c512_i64_127 = arith.constant 512 : i64
    %340 = arith.muli %337, %337 : i64
    %341 = arith.divui %340, %c512_i64_127 : i64
    %342 = arith.muli %337, %c3_i64_126 : i64
    %343 = arith.addi %341, %342 : i64
    %c3_i64_128 = arith.constant 3 : i64
    %c512_i64_129 = arith.constant 512 : i64
    %344 = arith.muli %332, %332 : i64
    %345 = arith.divui %344, %c512_i64_129 : i64
    %346 = arith.muli %332, %c3_i64_128 : i64
    %347 = arith.addi %345, %346 : i64
    %348 = arith.subi %347, %343 : i64
    %349 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %350 = llvm.load %349 : !llvm.ptr -> i64
    %351 = arith.cmpi ult, %350, %348 : i64
    scf.if %351 {
    } else {
      %422 = arith.subi %350, %348 : i64
      llvm.store %422, %349 : i64, !llvm.ptr
    }
    %c80_i8_130 = arith.constant 80 : i8
    cf.cond_br %351, ^bb1(%c80_i8_130 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %352 = call @dora_fn_extend_memory(%arg0, %333) : (!llvm.ptr, i64) -> !llvm.ptr
    %353 = llvm.getelementptr %352[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %354 = llvm.load %353 : !llvm.ptr -> !llvm.ptr
    %355 = llvm.getelementptr %352[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %356 = llvm.load %355 : !llvm.ptr -> i8
    %c0_i8_131 = arith.constant 0 : i8
    %357 = arith.cmpi ne, %356, %c0_i8_131 : i8
    cf.cond_br %357, ^bb1(%356 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %358 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %354, %358 : !llvm.ptr, !llvm.ptr
    %359 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %333, %359 : i64, !llvm.ptr
    cf.br ^bb93
  ^bb97:  // pred: ^bb74
    %360 = arith.addi %252, %254 : i64
    %c0_i64_132 = arith.constant 0 : i64
    %361 = arith.cmpi slt, %360, %c0_i64_132 : i64
    %c84_i8_133 = arith.constant 84 : i8
    cf.cond_br %361, ^bb1(%c84_i8_133 : i8), ^bb98
  ^bb98:  // pred: ^bb97
    %c31_i64_134 = arith.constant 31 : i64
    %c32_i64_135 = arith.constant 32 : i64
    %362 = arith.addi %360, %c31_i64_134 : i64
    %363 = arith.divui %362, %c32_i64_135 : i64
    %c32_i64_136 = arith.constant 32 : i64
    %364 = arith.muli %363, %c32_i64_136 : i64
    %365 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %366 = llvm.load %365 : !llvm.ptr -> i64
    %c31_i64_137 = arith.constant 31 : i64
    %c32_i64_138 = arith.constant 32 : i64
    %367 = arith.addi %366, %c31_i64_137 : i64
    %368 = arith.divui %367, %c32_i64_138 : i64
    %369 = arith.muli %368, %c32_i64_136 : i64
    %370 = arith.cmpi ult, %369, %364 : i64
    cf.cond_br %370, ^bb100, ^bb99
  ^bb99:  // 2 preds: ^bb98, ^bb102
    cf.br ^bb75
  ^bb100:  // pred: ^bb98
    %c3_i64_139 = arith.constant 3 : i64
    %c512_i64_140 = arith.constant 512 : i64
    %371 = arith.muli %368, %368 : i64
    %372 = arith.divui %371, %c512_i64_140 : i64
    %373 = arith.muli %368, %c3_i64_139 : i64
    %374 = arith.addi %372, %373 : i64
    %c3_i64_141 = arith.constant 3 : i64
    %c512_i64_142 = arith.constant 512 : i64
    %375 = arith.muli %363, %363 : i64
    %376 = arith.divui %375, %c512_i64_142 : i64
    %377 = arith.muli %363, %c3_i64_141 : i64
    %378 = arith.addi %376, %377 : i64
    %379 = arith.subi %378, %374 : i64
    %380 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %381 = llvm.load %380 : !llvm.ptr -> i64
    %382 = arith.cmpi ult, %381, %379 : i64
    scf.if %382 {
    } else {
      %422 = arith.subi %381, %379 : i64
      llvm.store %422, %380 : i64, !llvm.ptr
    }
    %c80_i8_143 = arith.constant 80 : i8
    cf.cond_br %382, ^bb1(%c80_i8_143 : i8), ^bb101
  ^bb101:  // pred: ^bb100
    %383 = call @dora_fn_extend_memory(%arg0, %364) : (!llvm.ptr, i64) -> !llvm.ptr
    %384 = llvm.getelementptr %383[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %385 = llvm.load %384 : !llvm.ptr -> !llvm.ptr
    %386 = llvm.getelementptr %383[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %387 = llvm.load %386 : !llvm.ptr -> i8
    %c0_i8_144 = arith.constant 0 : i8
    %388 = arith.cmpi ne, %387, %c0_i8_144 : i8
    cf.cond_br %388, ^bb1(%387 : i8), ^bb102
  ^bb102:  // pred: ^bb101
    %389 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %385, %389 : !llvm.ptr, !llvm.ptr
    %390 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %364, %390 : i64, !llvm.ptr
    cf.br ^bb99
  ^bb103:  // pred: ^bb75
    %391 = arith.addi %256, %258 : i64
    %c0_i64_145 = arith.constant 0 : i64
    %392 = arith.cmpi slt, %391, %c0_i64_145 : i64
    %c84_i8_146 = arith.constant 84 : i8
    cf.cond_br %392, ^bb1(%c84_i8_146 : i8), ^bb104
  ^bb104:  // pred: ^bb103
    %c31_i64_147 = arith.constant 31 : i64
    %c32_i64_148 = arith.constant 32 : i64
    %393 = arith.addi %391, %c31_i64_147 : i64
    %394 = arith.divui %393, %c32_i64_148 : i64
    %c32_i64_149 = arith.constant 32 : i64
    %395 = arith.muli %394, %c32_i64_149 : i64
    %396 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %397 = llvm.load %396 : !llvm.ptr -> i64
    %c31_i64_150 = arith.constant 31 : i64
    %c32_i64_151 = arith.constant 32 : i64
    %398 = arith.addi %397, %c31_i64_150 : i64
    %399 = arith.divui %398, %c32_i64_151 : i64
    %400 = arith.muli %399, %c32_i64_149 : i64
    %401 = arith.cmpi ult, %400, %395 : i64
    cf.cond_br %401, ^bb106, ^bb105
  ^bb105:  // 2 preds: ^bb104, ^bb108
    cf.br ^bb76
  ^bb106:  // pred: ^bb104
    %c3_i64_152 = arith.constant 3 : i64
    %c512_i64_153 = arith.constant 512 : i64
    %402 = arith.muli %399, %399 : i64
    %403 = arith.divui %402, %c512_i64_153 : i64
    %404 = arith.muli %399, %c3_i64_152 : i64
    %405 = arith.addi %403, %404 : i64
    %c3_i64_154 = arith.constant 3 : i64
    %c512_i64_155 = arith.constant 512 : i64
    %406 = arith.muli %394, %394 : i64
    %407 = arith.divui %406, %c512_i64_155 : i64
    %408 = arith.muli %394, %c3_i64_154 : i64
    %409 = arith.addi %407, %408 : i64
    %410 = arith.subi %409, %405 : i64
    %411 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %412 = llvm.load %411 : !llvm.ptr -> i64
    %413 = arith.cmpi ult, %412, %410 : i64
    scf.if %413 {
    } else {
      %422 = arith.subi %412, %410 : i64
      llvm.store %422, %411 : i64, !llvm.ptr
    }
    %c80_i8_156 = arith.constant 80 : i8
    cf.cond_br %413, ^bb1(%c80_i8_156 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %414 = call @dora_fn_extend_memory(%arg0, %395) : (!llvm.ptr, i64) -> !llvm.ptr
    %415 = llvm.getelementptr %414[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %416 = llvm.load %415 : !llvm.ptr -> !llvm.ptr
    %417 = llvm.getelementptr %414[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %418 = llvm.load %417 : !llvm.ptr -> i8
    %c0_i8_157 = arith.constant 0 : i8
    %419 = arith.cmpi ne, %418, %c0_i8_157 : i8
    cf.cond_br %419, ^bb1(%418 : i8), ^bb108
  ^bb108:  // pred: ^bb107
    %420 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %416, %420 : !llvm.ptr, !llvm.ptr
    %421 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %395, %421 : i64, !llvm.ptr
    cf.br ^bb105
  }
}
