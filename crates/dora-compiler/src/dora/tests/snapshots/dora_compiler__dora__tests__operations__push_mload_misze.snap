---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 25 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb13, ^bb15, ^bb16, ^bb19, ^bb20, ^bb23, ^bb24, ^bb27, ^bb28, ^bb30, ^bb31, ^bb32, ^bb34, ^bb35, ^bb38, ^bb39, ^bb42, ^bb43
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %14 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> i64
    %16 = arith.extui %15 : i64 to i256
    %17 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %18 = llvm.load %17 : !llvm.ptr -> !llvm.ptr
    llvm.store %16, %18 : i256, !llvm.ptr
    %19 = llvm.getelementptr %18[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %19, %17 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %20 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %22 = arith.addi %21, %c1_i64 : i64
    llvm.store %22, %20 : i64, !llvm.ptr
    %23 = arith.cmpi ult, %c1024_i64, %22 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %23, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %24 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> i64
    %c2_i64 = arith.constant 2 : i64
    %26 = arith.cmpi uge, %25, %c2_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %26, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %27 = arith.subi %25, %c2_i64 : i64
    llvm.store %27, %24 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %29 : i256, !llvm.ptr
    %30 = llvm.getelementptr %29[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    cf.br ^bb16
  ^bb8:  // pred: ^bb10
    %31 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %33 = arith.addi %32, %c1_i64_3 : i64
    llvm.store %33, %31 : i64, !llvm.ptr
    %34 = arith.cmpi ult, %c1024_i64_2, %33 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %34, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %35 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %37 = arith.cmpi uge, %36, %c3_i64 : i64
    %c80_i8_5 = arith.constant 80 : i8
    cf.cond_br %37, ^bb10, ^bb1(%c80_i8_5 : i8)
  ^bb10:  // pred: ^bb9
    %38 = arith.subi %36, %c3_i64 : i64
    llvm.store %38, %35 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb15
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %43 = arith.trunci %42 : i256 to i64
    %c0_i64_6 = arith.constant 0 : i64
    %44 = arith.cmpi slt, %43, %c0_i64_6 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %44, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %45 = arith.addi %43, %c32_i64 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %46 = arith.cmpi slt, %45, %c0_i64_7 : i64
    %c84_i8_8 = arith.constant 84 : i8
    cf.cond_br %46, ^bb1(%c84_i8_8 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_9 = arith.constant 32 : i64
    %47 = arith.addi %45, %c31_i64 : i64
    %48 = arith.divui %47, %c32_i64_9 : i64
    %49 = arith.muli %48, %c32_i64_9 : i64
    %50 = call @dora_fn_extend_memory(%arg0, %49) : (!llvm.ptr, i64) -> !llvm.ptr
    %51 = llvm.getelementptr %50[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %50[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %54 = llvm.load %53 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %55 = arith.cmpi ne, %54, %c0_i8 : i8
    cf.cond_br %55, ^bb1(%54 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %56 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %52, %56 : !llvm.ptr, !llvm.ptr
    %57 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %49, %57 : i64, !llvm.ptr
    %58 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    %60 = llvm.getelementptr %59[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %61 = llvm.load %60 {alignment = 1 : i64} : !llvm.ptr -> i256
    %62 = llvm.intr.bswap(%61)  : (i256) -> i256
    %63 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> !llvm.ptr
    llvm.store %62, %64 : i256, !llvm.ptr
    %65 = llvm.getelementptr %64[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %65, %63 : !llvm.ptr, !llvm.ptr
    cf.br ^bb20
  ^bb15:  // pred: ^bb17
    %66 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_10 = arith.constant 1024 : i64
    %67 = llvm.load %66 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %68 = arith.addi %67, %c0_i64_11 : i64
    llvm.store %68, %66 : i64, !llvm.ptr
    %c1_i64_12 = arith.constant 1 : i64
    %69 = arith.cmpi ult, %67, %c1_i64_12 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %69, ^bb1(%c91_i8 : i8), ^bb11
  ^bb16:  // pred: ^bb7
    %70 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> i64
    %c3_i64_13 = arith.constant 3 : i64
    %72 = arith.cmpi uge, %71, %c3_i64_13 : i64
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %72, ^bb17, ^bb1(%c80_i8_14 : i8)
  ^bb17:  // pred: ^bb16
    %73 = arith.subi %71, %c3_i64_13 : i64
    llvm.store %73, %70 : i64, !llvm.ptr
    cf.br ^bb15
  ^bb18:  // pred: ^bb19
    %74 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> !llvm.ptr
    %76 = llvm.getelementptr %75[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %77 = llvm.load %76 : !llvm.ptr -> i256
    llvm.store %76, %74 : !llvm.ptr, !llvm.ptr
    cf.br ^bb24
  ^bb19:  // pred: ^bb21
    %78 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_15 = arith.constant 1024 : i64
    %79 = llvm.load %78 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %80 = arith.addi %79, %c-1_i64 : i64
    llvm.store %80, %78 : i64, !llvm.ptr
    %c1_i64_16 = arith.constant 1 : i64
    %81 = arith.cmpi ult, %79, %c1_i64_16 : i64
    %c91_i8_17 = arith.constant 91 : i8
    cf.cond_br %81, ^bb1(%c91_i8_17 : i8), ^bb18
  ^bb20:  // pred: ^bb14
    %82 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %83 = llvm.load %82 : !llvm.ptr -> i64
    %c2_i64_18 = arith.constant 2 : i64
    %84 = arith.cmpi uge, %83, %c2_i64_18 : i64
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %84, ^bb21, ^bb1(%c80_i8_19 : i8)
  ^bb21:  // pred: ^bb20
    %85 = arith.subi %83, %c2_i64_18 : i64
    llvm.store %85, %82 : i64, !llvm.ptr
    cf.br ^bb19
  ^bb22:  // pred: ^bb23
    %86 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %87 = llvm.load %86 : !llvm.ptr -> i64
    %88 = arith.extui %87 : i64 to i256
    %89 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %90 = llvm.load %89 : !llvm.ptr -> !llvm.ptr
    llvm.store %88, %90 : i256, !llvm.ptr
    %91 = llvm.getelementptr %90[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %91, %89 : !llvm.ptr, !llvm.ptr
    cf.br ^bb28
  ^bb23:  // pred: ^bb25
    %92 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_20 = arith.constant 1024 : i64
    %93 = llvm.load %92 : !llvm.ptr -> i64
    %c1_i64_21 = arith.constant 1 : i64
    %94 = arith.addi %93, %c1_i64_21 : i64
    llvm.store %94, %92 : i64, !llvm.ptr
    %95 = arith.cmpi ult, %c1024_i64_20, %94 : i64
    %c92_i8_22 = arith.constant 92 : i8
    cf.cond_br %95, ^bb1(%c92_i8_22 : i8), ^bb22
  ^bb24:  // pred: ^bb18
    %96 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %97 = llvm.load %96 : !llvm.ptr -> i64
    %c2_i64_23 = arith.constant 2 : i64
    %98 = arith.cmpi uge, %97, %c2_i64_23 : i64
    %c80_i8_24 = arith.constant 80 : i8
    cf.cond_br %98, ^bb25, ^bb1(%c80_i8_24 : i8)
  ^bb25:  // pred: ^bb24
    %99 = arith.subi %97, %c2_i64_23 : i64
    llvm.store %99, %96 : i64, !llvm.ptr
    cf.br ^bb23
  ^bb26:  // pred: ^bb27
    %c39_i256 = arith.constant 39 : i256
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    llvm.store %c39_i256, %101 : i256, !llvm.ptr
    %102 = llvm.getelementptr %101[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    cf.br ^bb35
  ^bb27:  // pred: ^bb29
    %103 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_25 = arith.constant 1024 : i64
    %104 = llvm.load %103 : !llvm.ptr -> i64
    %c1_i64_26 = arith.constant 1 : i64
    %105 = arith.addi %104, %c1_i64_26 : i64
    llvm.store %105, %103 : i64, !llvm.ptr
    %106 = arith.cmpi ult, %c1024_i64_25, %105 : i64
    %c92_i8_27 = arith.constant 92 : i8
    cf.cond_br %106, ^bb1(%c92_i8_27 : i8), ^bb26
  ^bb28:  // pred: ^bb22
    %107 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> i64
    %c3_i64_28 = arith.constant 3 : i64
    %109 = arith.cmpi uge, %108, %c3_i64_28 : i64
    %c80_i8_29 = arith.constant 80 : i8
    cf.cond_br %109, ^bb29, ^bb1(%c80_i8_29 : i8)
  ^bb29:  // pred: ^bb28
    %110 = arith.subi %108, %c3_i64_28 : i64
    llvm.store %110, %107 : i64, !llvm.ptr
    cf.br ^bb27
  ^bb30:  // pred: ^bb34
    %111 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> !llvm.ptr
    %113 = llvm.getelementptr %112[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %114 = llvm.load %113 : !llvm.ptr -> i256
    llvm.store %113, %111 : !llvm.ptr, !llvm.ptr
    %115 = arith.trunci %114 : i256 to i64
    %c0_i64_30 = arith.constant 0 : i64
    %116 = arith.cmpi slt, %115, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %116, ^bb1(%c84_i8_31 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c32_i64_32 = arith.constant 32 : i64
    %117 = arith.addi %115, %c32_i64_32 : i64
    %c0_i64_33 = arith.constant 0 : i64
    %118 = arith.cmpi slt, %117, %c0_i64_33 : i64
    %c84_i8_34 = arith.constant 84 : i8
    cf.cond_br %118, ^bb1(%c84_i8_34 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c31_i64_35 = arith.constant 31 : i64
    %c32_i64_36 = arith.constant 32 : i64
    %119 = arith.addi %117, %c31_i64_35 : i64
    %120 = arith.divui %119, %c32_i64_36 : i64
    %121 = arith.muli %120, %c32_i64_36 : i64
    %122 = call @dora_fn_extend_memory(%arg0, %121) : (!llvm.ptr, i64) -> !llvm.ptr
    %123 = llvm.getelementptr %122[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %124 = llvm.load %123 : !llvm.ptr -> !llvm.ptr
    %125 = llvm.getelementptr %122[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %126 = llvm.load %125 : !llvm.ptr -> i8
    %c0_i8_37 = arith.constant 0 : i8
    %127 = arith.cmpi ne, %126, %c0_i8_37 : i8
    cf.cond_br %127, ^bb1(%126 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %128 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %124, %128 : !llvm.ptr, !llvm.ptr
    %129 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %121, %129 : i64, !llvm.ptr
    %130 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %131 = llvm.load %130 : !llvm.ptr -> !llvm.ptr
    %132 = llvm.getelementptr %131[%115] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %133 = llvm.load %132 {alignment = 1 : i64} : !llvm.ptr -> i256
    %134 = llvm.intr.bswap(%133)  : (i256) -> i256
    %135 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> !llvm.ptr
    llvm.store %134, %136 : i256, !llvm.ptr
    %137 = llvm.getelementptr %136[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %137, %135 : !llvm.ptr, !llvm.ptr
    cf.br ^bb39
  ^bb34:  // pred: ^bb36
    %138 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_38 = arith.constant 1024 : i64
    %139 = llvm.load %138 : !llvm.ptr -> i64
    %c0_i64_39 = arith.constant 0 : i64
    %140 = arith.addi %139, %c0_i64_39 : i64
    llvm.store %140, %138 : i64, !llvm.ptr
    %c1_i64_40 = arith.constant 1 : i64
    %141 = arith.cmpi ult, %139, %c1_i64_40 : i64
    %c91_i8_41 = arith.constant 91 : i8
    cf.cond_br %141, ^bb1(%c91_i8_41 : i8), ^bb30
  ^bb35:  // pred: ^bb26
    %142 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> i64
    %c3_i64_42 = arith.constant 3 : i64
    %144 = arith.cmpi uge, %143, %c3_i64_42 : i64
    %c80_i8_43 = arith.constant 80 : i8
    cf.cond_br %144, ^bb36, ^bb1(%c80_i8_43 : i8)
  ^bb36:  // pred: ^bb35
    %145 = arith.subi %143, %c3_i64_42 : i64
    llvm.store %145, %142 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb38
    %146 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> !llvm.ptr
    %148 = llvm.getelementptr %147[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %149 = llvm.load %148 : !llvm.ptr -> i256
    llvm.store %148, %146 : !llvm.ptr, !llvm.ptr
    cf.br ^bb43
  ^bb38:  // pred: ^bb40
    %150 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_44 = arith.constant 1024 : i64
    %151 = llvm.load %150 : !llvm.ptr -> i64
    %c-1_i64_45 = arith.constant -1 : i64
    %152 = arith.addi %151, %c-1_i64_45 : i64
    llvm.store %152, %150 : i64, !llvm.ptr
    %c1_i64_46 = arith.constant 1 : i64
    %153 = arith.cmpi ult, %151, %c1_i64_46 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %153, ^bb1(%c91_i8_47 : i8), ^bb37
  ^bb39:  // pred: ^bb33
    %154 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> i64
    %c2_i64_48 = arith.constant 2 : i64
    %156 = arith.cmpi uge, %155, %c2_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %156, ^bb40, ^bb1(%c80_i8_49 : i8)
  ^bb40:  // pred: ^bb39
    %157 = arith.subi %155, %c2_i64_48 : i64
    llvm.store %157, %154 : i64, !llvm.ptr
    cf.br ^bb38
  ^bb41:  // pred: ^bb42
    %158 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %159 = llvm.load %158 : !llvm.ptr -> i64
    %160 = arith.extui %159 : i64 to i256
    %161 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %162 = llvm.load %161 : !llvm.ptr -> !llvm.ptr
    llvm.store %160, %162 : i256, !llvm.ptr
    %163 = llvm.getelementptr %162[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %163, %161 : !llvm.ptr, !llvm.ptr
    cf.br ^bb45
  ^bb42:  // pred: ^bb44
    %164 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_50 = arith.constant 1024 : i64
    %165 = llvm.load %164 : !llvm.ptr -> i64
    %c1_i64_51 = arith.constant 1 : i64
    %166 = arith.addi %165, %c1_i64_51 : i64
    llvm.store %166, %164 : i64, !llvm.ptr
    %167 = arith.cmpi ult, %c1024_i64_50, %166 : i64
    %c92_i8_52 = arith.constant 92 : i8
    cf.cond_br %167, ^bb1(%c92_i8_52 : i8), ^bb41
  ^bb43:  // pred: ^bb37
    %168 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> i64
    %c2_i64_53 = arith.constant 2 : i64
    %170 = arith.cmpi uge, %169, %c2_i64_53 : i64
    %c80_i8_54 = arith.constant 80 : i8
    cf.cond_br %170, ^bb44, ^bb1(%c80_i8_54 : i8)
  ^bb44:  // pred: ^bb43
    %171 = arith.subi %169, %c2_i64_53 : i64
    llvm.store %171, %168 : i64, !llvm.ptr
    cf.br ^bb42
  ^bb45:  // pred: ^bb41
    %c0_i64_55 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %172 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %173 = llvm.load %172 : !llvm.ptr -> i64
    %174 = call @dora_fn_write_result(%arg0, %c0_i64_55, %c0_i64_55, %173, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
