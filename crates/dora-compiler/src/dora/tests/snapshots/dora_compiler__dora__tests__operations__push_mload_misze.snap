---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 27 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb14, ^bb15, ^bb18, ^bb19, ^bb22, ^bb23, ^bb26, ^bb27, ^bb29, ^bb32, ^bb33, ^bb36, ^bb37, ^bb40, ^bb41, ^bb44, ^bb45, ^bb46, ^bb48, ^bb49, ^bb50
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %14 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> i64
    %16 = arith.extui %15 : i64 to i256
    %17 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %18 = llvm.load %17 : !llvm.ptr -> !llvm.ptr
    llvm.store %16, %18 : i256, !llvm.ptr
    %19 = llvm.getelementptr %18[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %19, %17 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %20 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %22 = arith.addi %21, %c1_i64 : i64
    llvm.store %22, %20 : i64, !llvm.ptr
    %23 = arith.cmpi ult, %c1024_i64, %22 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %23, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %24 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> i64
    %c2_i64 = arith.constant 2 : i64
    %26 = arith.cmpi uge, %25, %c2_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %26, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %27 = arith.subi %25, %c2_i64 : i64
    llvm.store %27, %24 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %29 : i256, !llvm.ptr
    %30 = llvm.getelementptr %29[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb8:  // pred: ^bb10
    %31 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %33 = arith.addi %32, %c1_i64_3 : i64
    llvm.store %33, %31 : i64, !llvm.ptr
    %34 = arith.cmpi ult, %c1024_i64_2, %33 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %34, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %35 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %37 = arith.cmpi uge, %36, %c3_i64 : i64
    %c80_i8_5 = arith.constant 80 : i8
    cf.cond_br %37, ^bb10, ^bb1(%c80_i8_5 : i8)
  ^bb10:  // pred: ^bb9
    %38 = arith.subi %36, %c3_i64 : i64
    llvm.store %38, %35 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb14
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %43 = arith.trunci %42 : i256 to i64
    %c0_i64_6 = arith.constant 0 : i64
    %44 = arith.cmpi slt, %43, %c0_i64_6 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %44, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi ne, %c32_i64, %c0_i64_7 : i64
    cf.cond_br %45, ^bb44, ^bb13
  ^bb13:  // 2 preds: ^bb12, ^bb47
    %46 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %47 = llvm.load %46 : !llvm.ptr -> !llvm.ptr
    %48 = llvm.getelementptr %47[%43] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %49 = llvm.load %48 {alignment = 1 : i64} : !llvm.ptr -> i256
    %50 = llvm.intr.bswap(%49)  : (i256) -> i256
    %51 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    llvm.store %50, %52 : i256, !llvm.ptr
    %53 = llvm.getelementptr %52[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %53, %51 : !llvm.ptr, !llvm.ptr
    cf.br ^bb19
  ^bb14:  // pred: ^bb16
    %54 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_8 = arith.constant 1024 : i64
    %55 = llvm.load %54 : !llvm.ptr -> i64
    %c0_i64_9 = arith.constant 0 : i64
    %56 = arith.addi %55, %c0_i64_9 : i64
    llvm.store %56, %54 : i64, !llvm.ptr
    %c1_i64_10 = arith.constant 1 : i64
    %57 = arith.cmpi ult, %55, %c1_i64_10 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %57, ^bb1(%c91_i8 : i8), ^bb11
  ^bb15:  // pred: ^bb7
    %58 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %c3_i64_11 = arith.constant 3 : i64
    %60 = arith.cmpi uge, %59, %c3_i64_11 : i64
    %c80_i8_12 = arith.constant 80 : i8
    cf.cond_br %60, ^bb16, ^bb1(%c80_i8_12 : i8)
  ^bb16:  // pred: ^bb15
    %61 = arith.subi %59, %c3_i64_11 : i64
    llvm.store %61, %58 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb17:  // pred: ^bb18
    %62 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %63 = llvm.load %62 : !llvm.ptr -> !llvm.ptr
    %64 = llvm.getelementptr %63[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %65 = llvm.load %64 : !llvm.ptr -> i256
    llvm.store %64, %62 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb18:  // pred: ^bb20
    %66 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_13 = arith.constant 1024 : i64
    %67 = llvm.load %66 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %68 = arith.addi %67, %c-1_i64 : i64
    llvm.store %68, %66 : i64, !llvm.ptr
    %c1_i64_14 = arith.constant 1 : i64
    %69 = arith.cmpi ult, %67, %c1_i64_14 : i64
    %c91_i8_15 = arith.constant 91 : i8
    cf.cond_br %69, ^bb1(%c91_i8_15 : i8), ^bb17
  ^bb19:  // pred: ^bb13
    %70 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> i64
    %c2_i64_16 = arith.constant 2 : i64
    %72 = arith.cmpi uge, %71, %c2_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %72, ^bb20, ^bb1(%c80_i8_17 : i8)
  ^bb20:  // pred: ^bb19
    %73 = arith.subi %71, %c2_i64_16 : i64
    llvm.store %73, %70 : i64, !llvm.ptr
    cf.br ^bb18
  ^bb21:  // pred: ^bb22
    %74 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> i64
    %76 = arith.extui %75 : i64 to i256
    %77 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> !llvm.ptr
    llvm.store %76, %78 : i256, !llvm.ptr
    %79 = llvm.getelementptr %78[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %79, %77 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb22:  // pred: ^bb24
    %80 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %81 = llvm.load %80 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %82 = arith.addi %81, %c1_i64_19 : i64
    llvm.store %82, %80 : i64, !llvm.ptr
    %83 = arith.cmpi ult, %c1024_i64_18, %82 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %83, ^bb1(%c92_i8_20 : i8), ^bb21
  ^bb23:  // pred: ^bb17
    %84 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c2_i64_21 = arith.constant 2 : i64
    %86 = arith.cmpi uge, %85, %c2_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %86, ^bb24, ^bb1(%c80_i8_22 : i8)
  ^bb24:  // pred: ^bb23
    %87 = arith.subi %85, %c2_i64_21 : i64
    llvm.store %87, %84 : i64, !llvm.ptr
    cf.br ^bb22
  ^bb25:  // pred: ^bb26
    %c39_i256 = arith.constant 39 : i256
    %88 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> !llvm.ptr
    llvm.store %c39_i256, %89 : i256, !llvm.ptr
    %90 = llvm.getelementptr %89[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %90, %88 : !llvm.ptr, !llvm.ptr
    cf.br ^bb33
  ^bb26:  // pred: ^bb28
    %91 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %92 = llvm.load %91 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %93 = arith.addi %92, %c1_i64_24 : i64
    llvm.store %93, %91 : i64, !llvm.ptr
    %94 = arith.cmpi ult, %c1024_i64_23, %93 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %94, ^bb1(%c92_i8_25 : i8), ^bb25
  ^bb27:  // pred: ^bb21
    %95 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    %97 = arith.cmpi uge, %96, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %97, ^bb28, ^bb1(%c80_i8_27 : i8)
  ^bb28:  // pred: ^bb27
    %98 = arith.subi %96, %c3_i64_26 : i64
    llvm.store %98, %95 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb32
    %99 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> !llvm.ptr
    %101 = llvm.getelementptr %100[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %102 = llvm.load %101 : !llvm.ptr -> i256
    llvm.store %101, %99 : !llvm.ptr, !llvm.ptr
    %103 = arith.trunci %102 : i256 to i64
    %c0_i64_28 = arith.constant 0 : i64
    %104 = arith.cmpi slt, %103, %c0_i64_28 : i64
    %c84_i8_29 = arith.constant 84 : i8
    cf.cond_br %104, ^bb1(%c84_i8_29 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %c32_i64_30 = arith.constant 32 : i64
    %c0_i64_31 = arith.constant 0 : i64
    %105 = arith.cmpi ne, %c32_i64_30, %c0_i64_31 : i64
    cf.cond_br %105, ^bb48, ^bb31
  ^bb31:  // 2 preds: ^bb30, ^bb51
    %106 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> !llvm.ptr
    %108 = llvm.getelementptr %107[%103] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %109 = llvm.load %108 {alignment = 1 : i64} : !llvm.ptr -> i256
    %110 = llvm.intr.bswap(%109)  : (i256) -> i256
    %111 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> !llvm.ptr
    llvm.store %110, %112 : i256, !llvm.ptr
    %113 = llvm.getelementptr %112[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %113, %111 : !llvm.ptr, !llvm.ptr
    cf.br ^bb37
  ^bb32:  // pred: ^bb34
    %114 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_32 = arith.constant 1024 : i64
    %115 = llvm.load %114 : !llvm.ptr -> i64
    %c0_i64_33 = arith.constant 0 : i64
    %116 = arith.addi %115, %c0_i64_33 : i64
    llvm.store %116, %114 : i64, !llvm.ptr
    %c1_i64_34 = arith.constant 1 : i64
    %117 = arith.cmpi ult, %115, %c1_i64_34 : i64
    %c91_i8_35 = arith.constant 91 : i8
    cf.cond_br %117, ^bb1(%c91_i8_35 : i8), ^bb29
  ^bb33:  // pred: ^bb25
    %118 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c3_i64_36 = arith.constant 3 : i64
    %120 = arith.cmpi uge, %119, %c3_i64_36 : i64
    %c80_i8_37 = arith.constant 80 : i8
    cf.cond_br %120, ^bb34, ^bb1(%c80_i8_37 : i8)
  ^bb34:  // pred: ^bb33
    %121 = arith.subi %119, %c3_i64_36 : i64
    llvm.store %121, %118 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb36
    %122 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> !llvm.ptr
    %124 = llvm.getelementptr %123[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %125 = llvm.load %124 : !llvm.ptr -> i256
    llvm.store %124, %122 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %126 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_38 = arith.constant 1024 : i64
    %127 = llvm.load %126 : !llvm.ptr -> i64
    %c-1_i64_39 = arith.constant -1 : i64
    %128 = arith.addi %127, %c-1_i64_39 : i64
    llvm.store %128, %126 : i64, !llvm.ptr
    %c1_i64_40 = arith.constant 1 : i64
    %129 = arith.cmpi ult, %127, %c1_i64_40 : i64
    %c91_i8_41 = arith.constant 91 : i8
    cf.cond_br %129, ^bb1(%c91_i8_41 : i8), ^bb35
  ^bb37:  // pred: ^bb31
    %130 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %131 = llvm.load %130 : !llvm.ptr -> i64
    %c2_i64_42 = arith.constant 2 : i64
    %132 = arith.cmpi uge, %131, %c2_i64_42 : i64
    %c80_i8_43 = arith.constant 80 : i8
    cf.cond_br %132, ^bb38, ^bb1(%c80_i8_43 : i8)
  ^bb38:  // pred: ^bb37
    %133 = arith.subi %131, %c2_i64_42 : i64
    llvm.store %133, %130 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %134 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> i64
    %136 = arith.extui %135 : i64 to i256
    %137 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %138 = llvm.load %137 : !llvm.ptr -> !llvm.ptr
    llvm.store %136, %138 : i256, !llvm.ptr
    %139 = llvm.getelementptr %138[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %139, %137 : !llvm.ptr, !llvm.ptr
    cf.br ^bb43
  ^bb40:  // pred: ^bb42
    %140 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_44 = arith.constant 1024 : i64
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %c1_i64_45 = arith.constant 1 : i64
    %142 = arith.addi %141, %c1_i64_45 : i64
    llvm.store %142, %140 : i64, !llvm.ptr
    %143 = arith.cmpi ult, %c1024_i64_44, %142 : i64
    %c92_i8_46 = arith.constant 92 : i8
    cf.cond_br %143, ^bb1(%c92_i8_46 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c2_i64_47 = arith.constant 2 : i64
    %146 = arith.cmpi uge, %145, %c2_i64_47 : i64
    %c80_i8_48 = arith.constant 80 : i8
    cf.cond_br %146, ^bb42, ^bb1(%c80_i8_48 : i8)
  ^bb42:  // pred: ^bb41
    %147 = arith.subi %145, %c2_i64_47 : i64
    llvm.store %147, %144 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb39
    %c0_i64_49 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %148 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> i64
    %150 = call @dora_fn_write_result(%arg0, %c0_i64_49, %c0_i64_49, %149, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb44:  // pred: ^bb12
    %151 = arith.addi %43, %c32_i64 : i64
    %c0_i64_50 = arith.constant 0 : i64
    %152 = arith.cmpi slt, %151, %c0_i64_50 : i64
    %c84_i8_51 = arith.constant 84 : i8
    cf.cond_br %152, ^bb1(%c84_i8_51 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_52 = arith.constant 32 : i64
    %153 = arith.addi %151, %c31_i64 : i64
    %154 = arith.divui %153, %c32_i64_52 : i64
    %c32_i64_53 = arith.constant 32 : i64
    %155 = arith.muli %154, %c32_i64_53 : i64
    %156 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> i64
    %c31_i64_54 = arith.constant 31 : i64
    %c32_i64_55 = arith.constant 32 : i64
    %158 = arith.addi %157, %c31_i64_54 : i64
    %159 = arith.divui %158, %c32_i64_55 : i64
    %160 = arith.muli %159, %c32_i64_53 : i64
    %161 = arith.cmpi ult, %160, %155 : i64
    %162 = scf.if %161 -> (i64) {
      %c3_i64_66 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %197 = arith.muli %159, %159 : i64
      %198 = arith.divui %197, %c512_i64 : i64
      %199 = arith.muli %159, %c3_i64_66 : i64
      %200 = arith.addi %198, %199 : i64
      %c3_i64_67 = arith.constant 3 : i64
      %c512_i64_68 = arith.constant 512 : i64
      %201 = arith.muli %154, %154 : i64
      %202 = arith.divui %201, %c512_i64_68 : i64
      %203 = arith.muli %154, %c3_i64_67 : i64
      %204 = arith.addi %202, %203 : i64
      %205 = arith.subi %204, %200 : i64
      scf.yield %205 : i64
    } else {
      %c0_i64_66 = arith.constant 0 : i64
      scf.yield %c0_i64_66 : i64
    }
    %163 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> i64
    %165 = arith.cmpi ult, %164, %162 : i64
    scf.if %165 {
    } else {
      %197 = arith.subi %164, %162 : i64
      llvm.store %197, %163 : i64, !llvm.ptr
    }
    %c80_i8_56 = arith.constant 80 : i8
    cf.cond_br %165, ^bb1(%c80_i8_56 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %166 = call @dora_fn_extend_memory(%arg0, %155) : (!llvm.ptr, i64) -> !llvm.ptr
    %167 = llvm.getelementptr %166[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %168 = llvm.load %167 : !llvm.ptr -> !llvm.ptr
    %169 = llvm.getelementptr %166[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %170 = llvm.load %169 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %171 = arith.cmpi ne, %170, %c0_i8 : i8
    cf.cond_br %171, ^bb1(%170 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %172 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %168, %172 : !llvm.ptr, !llvm.ptr
    %173 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %155, %173 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb48:  // pred: ^bb30
    %174 = arith.addi %103, %c32_i64_30 : i64
    %c0_i64_57 = arith.constant 0 : i64
    %175 = arith.cmpi slt, %174, %c0_i64_57 : i64
    %c84_i8_58 = arith.constant 84 : i8
    cf.cond_br %175, ^bb1(%c84_i8_58 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %c31_i64_59 = arith.constant 31 : i64
    %c32_i64_60 = arith.constant 32 : i64
    %176 = arith.addi %174, %c31_i64_59 : i64
    %177 = arith.divui %176, %c32_i64_60 : i64
    %c32_i64_61 = arith.constant 32 : i64
    %178 = arith.muli %177, %c32_i64_61 : i64
    %179 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %180 = llvm.load %179 : !llvm.ptr -> i64
    %c31_i64_62 = arith.constant 31 : i64
    %c32_i64_63 = arith.constant 32 : i64
    %181 = arith.addi %180, %c31_i64_62 : i64
    %182 = arith.divui %181, %c32_i64_63 : i64
    %183 = arith.muli %182, %c32_i64_61 : i64
    %184 = arith.cmpi ult, %183, %178 : i64
    %185 = scf.if %184 -> (i64) {
      %c3_i64_66 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %197 = arith.muli %182, %182 : i64
      %198 = arith.divui %197, %c512_i64 : i64
      %199 = arith.muli %182, %c3_i64_66 : i64
      %200 = arith.addi %198, %199 : i64
      %c3_i64_67 = arith.constant 3 : i64
      %c512_i64_68 = arith.constant 512 : i64
      %201 = arith.muli %177, %177 : i64
      %202 = arith.divui %201, %c512_i64_68 : i64
      %203 = arith.muli %177, %c3_i64_67 : i64
      %204 = arith.addi %202, %203 : i64
      %205 = arith.subi %204, %200 : i64
      scf.yield %205 : i64
    } else {
      %c0_i64_66 = arith.constant 0 : i64
      scf.yield %c0_i64_66 : i64
    }
    %186 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %187 = llvm.load %186 : !llvm.ptr -> i64
    %188 = arith.cmpi ult, %187, %185 : i64
    scf.if %188 {
    } else {
      %197 = arith.subi %187, %185 : i64
      llvm.store %197, %186 : i64, !llvm.ptr
    }
    %c80_i8_64 = arith.constant 80 : i8
    cf.cond_br %188, ^bb1(%c80_i8_64 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %189 = call @dora_fn_extend_memory(%arg0, %178) : (!llvm.ptr, i64) -> !llvm.ptr
    %190 = llvm.getelementptr %189[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %191 = llvm.load %190 : !llvm.ptr -> !llvm.ptr
    %192 = llvm.getelementptr %189[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %193 = llvm.load %192 : !llvm.ptr -> i8
    %c0_i8_65 = arith.constant 0 : i8
    %194 = arith.cmpi ne, %193, %c0_i8_65 : i8
    cf.cond_br %194, ^bb1(%193 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %195 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %191, %195 : !llvm.ptr, !llvm.ptr
    %196 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %178, %196 : i64, !llvm.ptr
    cf.br ^bb31
  }
}
