---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %1 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%2: i8):  // 29 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb30, ^bb31, ^bb34, ^bb35, ^bb38, ^bb39, ^bb42, ^bb43, ^bb44, ^bb47, ^bb48, ^bb50, ^bb51, ^bb52, ^bb55, ^bb56
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %4, %2) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %2 : i8
  ^bb2(%5: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %5 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %6 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %7 = llvm.load %6 : !llvm.ptr -> i64
    %8 = arith.extui %7 : i64 to i256
    %9 = llvm.load %arg3 : !llvm.ptr -> i64
    %10 = llvm.getelementptr %arg2[%9] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %9, %c1_i64 : i64
    llvm.store %11, %arg3 : i64, !llvm.ptr
    llvm.store %8, %10 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %12 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %13 = arith.addi %12, %c1_i64_1 : i64
    %14 = arith.cmpi ult, %c1024_i64, %13 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %14, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %15 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %16 = llvm.load %15 : !llvm.ptr -> i64
    %c2_i64 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %17 = arith.cmpi uge, %16, %c2_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %17, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %18 = arith.subi %16, %c2_i64 : i64
    llvm.store %18, %15 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %19 = llvm.load %arg3 : !llvm.ptr -> i64
    %20 = llvm.getelementptr %arg2[%19] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %21 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %21, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %20 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %22 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %23 = arith.addi %22, %c1_i64_4 : i64
    %24 = arith.cmpi ult, %c1024_i64_3, %23 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %24, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %25 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %27 = arith.cmpi uge, %26, %c3_i64 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %27, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %28 = arith.subi %26, %c3_i64 : i64
    llvm.store %28, %25 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %29 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_7 = arith.constant 1 : i64
    %30 = arith.subi %29, %c1_i64_7 : i64
    %31 = llvm.getelementptr %arg2[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %30, %arg3 : i64, !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %33 = arith.cmpi ne, %c32_i64, %c0_i64_8 : i64
    cf.cond_br %33, ^bb42, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb46
    %34 = arith.trunci %32 : i256 to i64
    %35 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[%34] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %38 = llvm.load %37 {alignment = 1 : i64} : !llvm.ptr -> i256
    %39 = llvm.intr.bswap(%38)  : (i256) -> i256
    %40 = llvm.load %arg3 : !llvm.ptr -> i64
    %41 = llvm.getelementptr %arg2[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_9 = arith.constant 1 : i64
    %42 = arith.addi %40, %c1_i64_9 : i64
    llvm.store %42, %arg3 : i64, !llvm.ptr
    llvm.store %39, %41 : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_10 = arith.constant 1024 : i64
    %43 = llvm.load %arg3 : !llvm.ptr -> i64
    %c0_i64_11 = arith.constant 0 : i64
    %44 = arith.addi %43, %c0_i64_11 : i64
    %c1_i64_12 = arith.constant 1 : i64
    %45 = arith.cmpi ult, %43, %c1_i64_12 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %45, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %46 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %47 = llvm.load %46 : !llvm.ptr -> i64
    %c3_i64_13 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %48 = arith.cmpi uge, %47, %c3_i64_13 : i64
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %48, ^bb15, ^bb1(%c80_i8_14 : i8)
  ^bb15:  // pred: ^bb14
    %49 = arith.subi %47, %c3_i64_13 : i64
    llvm.store %49, %46 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %50 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_15 = arith.constant 1 : i64
    %51 = arith.subi %50, %c1_i64_15 : i64
    %52 = llvm.getelementptr %arg2[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %51, %arg3 : i64, !llvm.ptr
    %53 = llvm.load %52 : !llvm.ptr -> i256
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_16 = arith.constant 1024 : i64
    %54 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %55 = arith.addi %54, %c-1_i64 : i64
    %c1_i64_17 = arith.constant 1 : i64
    %56 = arith.cmpi ult, %54, %c1_i64_17 : i64
    %c91_i8_18 = arith.constant 91 : i8
    cf.cond_br %56, ^bb1(%c91_i8_18 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %57 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> i64
    %c2_i64_19 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %59 = arith.cmpi uge, %58, %c2_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %59, ^bb19, ^bb1(%c80_i8_20 : i8)
  ^bb19:  // pred: ^bb18
    %60 = arith.subi %58, %c2_i64_19 : i64
    llvm.store %60, %57 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %61 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %62 = llvm.load %61 : !llvm.ptr -> i64
    %63 = arith.extui %62 : i64 to i256
    %64 = llvm.load %arg3 : !llvm.ptr -> i64
    %65 = llvm.getelementptr %arg2[%64] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_21 = arith.constant 1 : i64
    %66 = arith.addi %64, %c1_i64_21 : i64
    llvm.store %66, %arg3 : i64, !llvm.ptr
    llvm.store %63, %65 : i256, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %c1024_i64_22 = arith.constant 1024 : i64
    %67 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %68 = arith.addi %67, %c1_i64_23 : i64
    %69 = arith.cmpi ult, %c1024_i64_22, %68 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %69, ^bb1(%c92_i8_24 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %70 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> i64
    %c2_i64_25 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %72 = arith.cmpi uge, %71, %c2_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %72, ^bb23, ^bb1(%c80_i8_26 : i8)
  ^bb23:  // pred: ^bb22
    %73 = arith.subi %71, %c2_i64_25 : i64
    llvm.store %73, %70 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c39_i256 = arith.constant 39 : i256
    %74 = llvm.load %arg3 : !llvm.ptr -> i64
    %75 = llvm.getelementptr %arg2[%74] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_27 = arith.constant 1 : i64
    %76 = arith.addi %74, %c1_i64_27 : i64
    llvm.store %76, %arg3 : i64, !llvm.ptr
    llvm.store %c39_i256, %75 : i256, !llvm.ptr
    cf.br ^bb31
  ^bb25:  // pred: ^bb27
    %c1024_i64_28 = arith.constant 1024 : i64
    %77 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_29 = arith.constant 1 : i64
    %78 = arith.addi %77, %c1_i64_29 : i64
    %79 = arith.cmpi ult, %c1024_i64_28, %78 : i64
    %c92_i8_30 = arith.constant 92 : i8
    cf.cond_br %79, ^bb1(%c92_i8_30 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %80 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> i64
    %c3_i64_31 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %82 = arith.cmpi uge, %81, %c3_i64_31 : i64
    %c80_i8_32 = arith.constant 80 : i8
    cf.cond_br %82, ^bb27, ^bb1(%c80_i8_32 : i8)
  ^bb27:  // pred: ^bb26
    %83 = arith.subi %81, %c3_i64_31 : i64
    llvm.store %83, %80 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb30
    %84 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_33 = arith.constant 1 : i64
    %85 = arith.subi %84, %c1_i64_33 : i64
    %86 = llvm.getelementptr %arg2[%85] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %85, %arg3 : i64, !llvm.ptr
    %87 = llvm.load %86 : !llvm.ptr -> i256
    %c32_i64_34 = arith.constant 32 : i64
    %c0_i64_35 = arith.constant 0 : i64
    %88 = arith.cmpi ne, %c32_i64_34, %c0_i64_35 : i64
    cf.cond_br %88, ^bb50, ^bb29
  ^bb29:  // 2 preds: ^bb28, ^bb54
    %89 = arith.trunci %87 : i256 to i64
    %90 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %91 = llvm.load %90 : !llvm.ptr -> !llvm.ptr
    %92 = llvm.getelementptr %91[%89] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %93 = llvm.load %92 {alignment = 1 : i64} : !llvm.ptr -> i256
    %94 = llvm.intr.bswap(%93)  : (i256) -> i256
    %95 = llvm.load %arg3 : !llvm.ptr -> i64
    %96 = llvm.getelementptr %arg2[%95] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_36 = arith.constant 1 : i64
    %97 = arith.addi %95, %c1_i64_36 : i64
    llvm.store %97, %arg3 : i64, !llvm.ptr
    llvm.store %94, %96 : i256, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %c1024_i64_37 = arith.constant 1024 : i64
    %98 = llvm.load %arg3 : !llvm.ptr -> i64
    %c0_i64_38 = arith.constant 0 : i64
    %99 = arith.addi %98, %c0_i64_38 : i64
    %c1_i64_39 = arith.constant 1 : i64
    %100 = arith.cmpi ult, %98, %c1_i64_39 : i64
    %c91_i8_40 = arith.constant 91 : i8
    cf.cond_br %100, ^bb1(%c91_i8_40 : i8), ^bb28
  ^bb31:  // pred: ^bb24
    %101 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %102 = llvm.load %101 : !llvm.ptr -> i64
    %c3_i64_41 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %103 = arith.cmpi uge, %102, %c3_i64_41 : i64
    %c80_i8_42 = arith.constant 80 : i8
    cf.cond_br %103, ^bb32, ^bb1(%c80_i8_42 : i8)
  ^bb32:  // pred: ^bb31
    %104 = arith.subi %102, %c3_i64_41 : i64
    llvm.store %104, %101 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %105 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %106 = arith.subi %105, %c1_i64_43 : i64
    %107 = llvm.getelementptr %arg2[%106] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %106, %arg3 : i64, !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> i256
    cf.br ^bb39
  ^bb34:  // pred: ^bb36
    %c1024_i64_44 = arith.constant 1024 : i64
    %109 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-1_i64_45 = arith.constant -1 : i64
    %110 = arith.addi %109, %c-1_i64_45 : i64
    %c1_i64_46 = arith.constant 1 : i64
    %111 = arith.cmpi ult, %109, %c1_i64_46 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %111, ^bb1(%c91_i8_47 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %112 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> i64
    %c2_i64_48 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %114 = arith.cmpi uge, %113, %c2_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %114, ^bb36, ^bb1(%c80_i8_49 : i8)
  ^bb36:  // pred: ^bb35
    %115 = arith.subi %113, %c2_i64_48 : i64
    llvm.store %115, %112 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb38
    %116 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %117 = llvm.load %116 : !llvm.ptr -> i64
    %118 = arith.extui %117 : i64 to i256
    %119 = llvm.load %arg3 : !llvm.ptr -> i64
    %120 = llvm.getelementptr %arg2[%119] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_50 = arith.constant 1 : i64
    %121 = arith.addi %119, %c1_i64_50 : i64
    llvm.store %121, %arg3 : i64, !llvm.ptr
    llvm.store %118, %120 : i256, !llvm.ptr
    cf.br ^bb41
  ^bb38:  // pred: ^bb40
    %c1024_i64_51 = arith.constant 1024 : i64
    %122 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %123 = arith.addi %122, %c1_i64_52 : i64
    %124 = arith.cmpi ult, %c1024_i64_51, %123 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %124, ^bb1(%c92_i8_53 : i8), ^bb37
  ^bb39:  // pred: ^bb33
    %125 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> i64
    %c2_i64_54 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %127 = arith.cmpi uge, %126, %c2_i64_54 : i64
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %127, ^bb40, ^bb1(%c80_i8_55 : i8)
  ^bb40:  // pred: ^bb39
    %128 = arith.subi %126, %c2_i64_54 : i64
    llvm.store %128, %125 : i64, !llvm.ptr
    cf.br ^bb38
  ^bb41:  // pred: ^bb37
    %c0_i64_56 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %129 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %130 = llvm.load %129 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_56, %c0_i64_56, %130, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb42:  // pred: ^bb11
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %131 = arith.cmpi sgt, %32, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %131, ^bb1(%c84_i8 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %132 = arith.trunci %32 : i256 to i64
    %c0_i64_57 = arith.constant 0 : i64
    %133 = arith.cmpi slt, %132, %c0_i64_57 : i64
    %c84_i8_58 = arith.constant 84 : i8
    cf.cond_br %133, ^bb1(%c84_i8_58 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %134 = arith.addi %132, %c32_i64 : i64
    %c0_i64_59 = arith.constant 0 : i64
    %135 = arith.cmpi slt, %134, %c0_i64_59 : i64
    %c84_i8_60 = arith.constant 84 : i8
    cf.cond_br %135, ^bb1(%c84_i8_60 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_61 = arith.constant 32 : i64
    %136 = arith.addi %134, %c31_i64 : i64
    %137 = arith.divui %136, %c32_i64_61 : i64
    %c32_i64_62 = arith.constant 32 : i64
    %138 = arith.muli %137, %c32_i64_62 : i64
    %139 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %140 = llvm.load %139 : !llvm.ptr -> i64
    %c31_i64_63 = arith.constant 31 : i64
    %c32_i64_64 = arith.constant 32 : i64
    %141 = arith.addi %140, %c31_i64_63 : i64
    %142 = arith.divui %141, %c32_i64_64 : i64
    %143 = arith.muli %142, %c32_i64_62 : i64
    %144 = arith.cmpi ult, %143, %138 : i64
    cf.cond_br %144, ^bb47, ^bb46
  ^bb46:  // 2 preds: ^bb45, ^bb49
    cf.br ^bb12
  ^bb47:  // pred: ^bb45
    %c3_i64_65 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %145 = arith.muli %142, %142 : i64
    %146 = arith.divui %145, %c512_i64 : i64
    %147 = arith.muli %142, %c3_i64_65 : i64
    %148 = arith.addi %146, %147 : i64
    %c3_i64_66 = arith.constant 3 : i64
    %c512_i64_67 = arith.constant 512 : i64
    %149 = arith.muli %137, %137 : i64
    %150 = arith.divui %149, %c512_i64_67 : i64
    %151 = arith.muli %137, %c3_i64_66 : i64
    %152 = arith.addi %150, %151 : i64
    %153 = arith.subi %152, %148 : i64
    %154 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> i64
    %156 = arith.cmpi ult, %155, %153 : i64
    scf.if %156 {
    } else {
      %199 = arith.subi %155, %153 : i64
      llvm.store %199, %154 : i64, !llvm.ptr
    }
    %c80_i8_68 = arith.constant 80 : i8
    cf.cond_br %156, ^bb1(%c80_i8_68 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %157 = call @dora_fn_extend_memory(%arg0, %138) : (!llvm.ptr, i64) -> !llvm.ptr
    %158 = llvm.getelementptr %157[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %159 = llvm.load %158 : !llvm.ptr -> !llvm.ptr
    %160 = llvm.getelementptr %157[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %161 = llvm.load %160 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %162 = arith.cmpi ne, %161, %c0_i8 : i8
    cf.cond_br %162, ^bb1(%161 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %163 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %159, %163 : !llvm.ptr, !llvm.ptr
    %164 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %138, %164 : i64, !llvm.ptr
    cf.br ^bb46
  ^bb50:  // pred: ^bb28
    %c18446744073709551615_i256_69 = arith.constant 18446744073709551615 : i256
    %165 = arith.cmpi sgt, %87, %c18446744073709551615_i256_69 : i256
    %c84_i8_70 = arith.constant 84 : i8
    cf.cond_br %165, ^bb1(%c84_i8_70 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %166 = arith.trunci %87 : i256 to i64
    %c0_i64_71 = arith.constant 0 : i64
    %167 = arith.cmpi slt, %166, %c0_i64_71 : i64
    %c84_i8_72 = arith.constant 84 : i8
    cf.cond_br %167, ^bb1(%c84_i8_72 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %168 = arith.addi %166, %c32_i64_34 : i64
    %c0_i64_73 = arith.constant 0 : i64
    %169 = arith.cmpi slt, %168, %c0_i64_73 : i64
    %c84_i8_74 = arith.constant 84 : i8
    cf.cond_br %169, ^bb1(%c84_i8_74 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %c31_i64_75 = arith.constant 31 : i64
    %c32_i64_76 = arith.constant 32 : i64
    %170 = arith.addi %168, %c31_i64_75 : i64
    %171 = arith.divui %170, %c32_i64_76 : i64
    %c32_i64_77 = arith.constant 32 : i64
    %172 = arith.muli %171, %c32_i64_77 : i64
    %173 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %c31_i64_78 = arith.constant 31 : i64
    %c32_i64_79 = arith.constant 32 : i64
    %175 = arith.addi %174, %c31_i64_78 : i64
    %176 = arith.divui %175, %c32_i64_79 : i64
    %177 = arith.muli %176, %c32_i64_77 : i64
    %178 = arith.cmpi ult, %177, %172 : i64
    cf.cond_br %178, ^bb55, ^bb54
  ^bb54:  // 2 preds: ^bb53, ^bb57
    cf.br ^bb29
  ^bb55:  // pred: ^bb53
    %c3_i64_80 = arith.constant 3 : i64
    %c512_i64_81 = arith.constant 512 : i64
    %179 = arith.muli %176, %176 : i64
    %180 = arith.divui %179, %c512_i64_81 : i64
    %181 = arith.muli %176, %c3_i64_80 : i64
    %182 = arith.addi %180, %181 : i64
    %c3_i64_82 = arith.constant 3 : i64
    %c512_i64_83 = arith.constant 512 : i64
    %183 = arith.muli %171, %171 : i64
    %184 = arith.divui %183, %c512_i64_83 : i64
    %185 = arith.muli %171, %c3_i64_82 : i64
    %186 = arith.addi %184, %185 : i64
    %187 = arith.subi %186, %182 : i64
    %188 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %189 = llvm.load %188 : !llvm.ptr -> i64
    %190 = arith.cmpi ult, %189, %187 : i64
    scf.if %190 {
    } else {
      %199 = arith.subi %189, %187 : i64
      llvm.store %199, %188 : i64, !llvm.ptr
    }
    %c80_i8_84 = arith.constant 80 : i8
    cf.cond_br %190, ^bb1(%c80_i8_84 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %191 = call @dora_fn_extend_memory(%arg0, %172) : (!llvm.ptr, i64) -> !llvm.ptr
    %192 = llvm.getelementptr %191[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %193 = llvm.load %192 : !llvm.ptr -> !llvm.ptr
    %194 = llvm.getelementptr %191[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %195 = llvm.load %194 : !llvm.ptr -> i8
    %c0_i8_85 = arith.constant 0 : i8
    %196 = arith.cmpi ne, %195, %c0_i8_85 : i8
    cf.cond_br %196, ^bb1(%195 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %197 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %193, %197 : !llvm.ptr, !llvm.ptr
    %198 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %172, %198 : i64, !llvm.ptr
    cf.br ^bb54
  }
}
