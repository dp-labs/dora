---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 62 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb14, ^bb15, ^bb18, ^bb19, ^bb22, ^bb23, ^bb25, ^bb28, ^bb29, ^bb32, ^bb33, ^bb36, ^bb37, ^bb40, ^bb41, ^bb43, ^bb44, ^bb45, ^bb47, ^bb48, ^bb49, ^bb51, ^bb52, ^bb54, ^bb56, ^bb57, ^bb60, ^bb61, ^bb63, ^bb66, ^bb67, ^bb70, ^bb71, ^bb74, ^bb75, ^bb77, ^bb78, ^bb82, ^bb83, ^bb86, ^bb87, ^bb88, ^bb90, ^bb91, ^bb92, ^bb94, ^bb95, ^bb96, ^bb97, ^bb98, ^bb100, ^bb101, ^bb102, ^bb104, ^bb105, ^bb106
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb14
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %46 = arith.cmpi ne, %c32_i64, %c0_i64_8 : i64
    cf.cond_br %46, ^bb86, ^bb13
  ^bb13:  // 2 preds: ^bb12, ^bb89
    %47 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> !llvm.ptr
    %49 = llvm.getelementptr %48[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %50 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %50, %49 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb19
  ^bb14:  // pred: ^bb16
    %51 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_9 = arith.constant 1024 : i64
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %53 = arith.addi %52, %c-2_i64 : i64
    llvm.store %53, %51 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %54 = arith.cmpi ult, %52, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %54, ^bb1(%c91_i8 : i8), ^bb11
  ^bb15:  // pred: ^bb7
    %55 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %56 = llvm.load %55 : !llvm.ptr -> i64
    %c3_i64_10 = arith.constant 3 : i64
    %57 = arith.cmpi uge, %56, %c3_i64_10 : i64
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %57, ^bb16, ^bb1(%c80_i8_11 : i8)
  ^bb16:  // pred: ^bb15
    %58 = arith.subi %56, %c3_i64_10 : i64
    llvm.store %58, %55 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb17:  // pred: ^bb18
    %c170141183460469231731687303715884105727_i256_12 = arith.constant 170141183460469231731687303715884105727 : i256
    %59 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %60 = llvm.load %59 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_12, %60 : i256, !llvm.ptr
    %61 = llvm.getelementptr %60[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %61, %59 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb18:  // pred: ^bb20
    %62 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_13 = arith.constant 1024 : i64
    %63 = llvm.load %62 : !llvm.ptr -> i64
    %c1_i64_14 = arith.constant 1 : i64
    %64 = arith.addi %63, %c1_i64_14 : i64
    llvm.store %64, %62 : i64, !llvm.ptr
    %65 = arith.cmpi ult, %c1024_i64_13, %64 : i64
    %c92_i8_15 = arith.constant 92 : i8
    cf.cond_br %65, ^bb1(%c92_i8_15 : i8), ^bb17
  ^bb19:  // pred: ^bb13
    %66 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %67 = llvm.load %66 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    %68 = arith.cmpi uge, %67, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %68, ^bb20, ^bb1(%c80_i8_17 : i8)
  ^bb20:  // pred: ^bb19
    %69 = arith.subi %67, %c3_i64_16 : i64
    llvm.store %69, %66 : i64, !llvm.ptr
    cf.br ^bb18
  ^bb21:  // pred: ^bb22
    %c32_i256 = arith.constant 32 : i256
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %71 : i256, !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb22:  // pred: ^bb24
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %75 = arith.addi %74, %c1_i64_19 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %76 = arith.cmpi ult, %c1024_i64_18, %75 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %76, ^bb1(%c92_i8_20 : i8), ^bb21
  ^bb23:  // pred: ^bb17
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_21 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %79, ^bb24, ^bb1(%c80_i8_22 : i8)
  ^bb24:  // pred: ^bb23
    %80 = arith.subi %78, %c3_i64_21 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb22
  ^bb25:  // pred: ^bb28
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    %83 = llvm.getelementptr %82[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %84 = llvm.load %83 : !llvm.ptr -> i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    %85 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %86 = llvm.load %85 : !llvm.ptr -> !llvm.ptr
    %87 = llvm.getelementptr %86[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %88 = llvm.load %87 : !llvm.ptr -> i256
    llvm.store %87, %85 : !llvm.ptr, !llvm.ptr
    %89 = arith.trunci %84 : i256 to i64
    %c0_i64_23 = arith.constant 0 : i64
    %90 = arith.cmpi slt, %89, %c0_i64_23 : i64
    %c84_i8_24 = arith.constant 84 : i8
    cf.cond_br %90, ^bb1(%c84_i8_24 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %c32_i64_25 = arith.constant 32 : i64
    %c0_i64_26 = arith.constant 0 : i64
    %91 = arith.cmpi ne, %c32_i64_25, %c0_i64_26 : i64
    cf.cond_br %91, ^bb90, ^bb27
  ^bb27:  // 2 preds: ^bb26, ^bb93
    %92 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    %94 = llvm.getelementptr %93[%89] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %95 = llvm.intr.bswap(%88)  : (i256) -> i256
    llvm.store %95, %94 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb33
  ^bb28:  // pred: ^bb30
    %96 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_27 = arith.constant 1024 : i64
    %97 = llvm.load %96 : !llvm.ptr -> i64
    %c-2_i64_28 = arith.constant -2 : i64
    %98 = arith.addi %97, %c-2_i64_28 : i64
    llvm.store %98, %96 : i64, !llvm.ptr
    %c2_i64_29 = arith.constant 2 : i64
    %99 = arith.cmpi ult, %97, %c2_i64_29 : i64
    %c91_i8_30 = arith.constant 91 : i8
    cf.cond_br %99, ^bb1(%c91_i8_30 : i8), ^bb25
  ^bb29:  // pred: ^bb21
    %100 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> i64
    %c3_i64_31 = arith.constant 3 : i64
    %102 = arith.cmpi uge, %101, %c3_i64_31 : i64
    %c80_i8_32 = arith.constant 80 : i8
    cf.cond_br %102, ^bb30, ^bb1(%c80_i8_32 : i8)
  ^bb30:  // pred: ^bb29
    %103 = arith.subi %101, %c3_i64_31 : i64
    llvm.store %103, %100 : i64, !llvm.ptr
    cf.br ^bb28
  ^bb31:  // pred: ^bb32
    %c41_i256 = arith.constant 41 : i256
    %104 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> !llvm.ptr
    llvm.store %c41_i256, %105 : i256, !llvm.ptr
    %106 = llvm.getelementptr %105[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %106, %104 : !llvm.ptr, !llvm.ptr
    cf.br ^bb37
  ^bb32:  // pred: ^bb34
    %107 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_33 = arith.constant 1024 : i64
    %108 = llvm.load %107 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %109 = arith.addi %108, %c1_i64_34 : i64
    llvm.store %109, %107 : i64, !llvm.ptr
    %110 = arith.cmpi ult, %c1024_i64_33, %109 : i64
    %c92_i8_35 = arith.constant 92 : i8
    cf.cond_br %110, ^bb1(%c92_i8_35 : i8), ^bb31
  ^bb33:  // pred: ^bb27
    %111 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> i64
    %c3_i64_36 = arith.constant 3 : i64
    %113 = arith.cmpi uge, %112, %c3_i64_36 : i64
    %c80_i8_37 = arith.constant 80 : i8
    cf.cond_br %113, ^bb34, ^bb1(%c80_i8_37 : i8)
  ^bb34:  // pred: ^bb33
    %114 = arith.subi %112, %c3_i64_36 : i64
    llvm.store %114, %111 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb36
    %c0_i256_38 = arith.constant 0 : i256
    %115 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %116 = llvm.load %115 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_38, %116 : i256, !llvm.ptr
    %117 = llvm.getelementptr %116[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %117, %115 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %118 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_39 = arith.constant 1024 : i64
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %120 = arith.addi %119, %c1_i64_40 : i64
    llvm.store %120, %118 : i64, !llvm.ptr
    %121 = arith.cmpi ult, %c1024_i64_39, %120 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %121, ^bb1(%c92_i8_41 : i8), ^bb35
  ^bb37:  // pred: ^bb31
    %122 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %c3_i64_42 = arith.constant 3 : i64
    %124 = arith.cmpi uge, %123, %c3_i64_42 : i64
    %c80_i8_43 = arith.constant 80 : i8
    cf.cond_br %124, ^bb38, ^bb1(%c80_i8_43 : i8)
  ^bb38:  // pred: ^bb37
    %125 = arith.subi %123, %c3_i64_42 : i64
    llvm.store %125, %122 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_44 = arith.constant 0 : i256
    %126 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_44, %127 : i256, !llvm.ptr
    %128 = llvm.getelementptr %127[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %128, %126 : !llvm.ptr, !llvm.ptr
    cf.br ^bb52
  ^bb40:  // pred: ^bb42
    %129 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_45 = arith.constant 1024 : i64
    %130 = llvm.load %129 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %131 = arith.addi %130, %c1_i64_46 : i64
    llvm.store %131, %129 : i64, !llvm.ptr
    %132 = arith.cmpi ult, %c1024_i64_45, %131 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %132, ^bb1(%c92_i8_47 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %133 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %134 = llvm.load %133 : !llvm.ptr -> i64
    %c3_i64_48 = arith.constant 3 : i64
    %135 = arith.cmpi uge, %134, %c3_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %135, ^bb42, ^bb1(%c80_i8_49 : i8)
  ^bb42:  // pred: ^bb41
    %136 = arith.subi %134, %c3_i64_48 : i64
    llvm.store %136, %133 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb51
    %137 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %138 = llvm.load %137 : !llvm.ptr -> !llvm.ptr
    %139 = llvm.getelementptr %138[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %140 = llvm.load %139 : !llvm.ptr -> i256
    llvm.store %139, %137 : !llvm.ptr, !llvm.ptr
    %141 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %142 = llvm.load %141 : !llvm.ptr -> !llvm.ptr
    %143 = llvm.getelementptr %142[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %144 = llvm.load %143 : !llvm.ptr -> i256
    llvm.store %143, %141 : !llvm.ptr, !llvm.ptr
    %145 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> !llvm.ptr
    %147 = llvm.getelementptr %146[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %148 = llvm.load %147 : !llvm.ptr -> i256
    llvm.store %147, %145 : !llvm.ptr, !llvm.ptr
    %149 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %150, ^bb1(%c87_i8 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %151 = arith.trunci %144 : i256 to i64
    %c0_i64_50 = arith.constant 0 : i64
    %152 = arith.cmpi slt, %151, %c0_i64_50 : i64
    %c84_i8_51 = arith.constant 84 : i8
    cf.cond_br %152, ^bb1(%c84_i8_51 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %153 = arith.trunci %148 : i256 to i64
    %c0_i64_52 = arith.constant 0 : i64
    %154 = arith.cmpi slt, %153, %c0_i64_52 : i64
    %c84_i8_53 = arith.constant 84 : i8
    cf.cond_br %154, ^bb1(%c84_i8_53 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c0_i64_54 = arith.constant 0 : i64
    %155 = arith.cmpi ne, %153, %c0_i64_54 : i64
    cf.cond_br %155, ^bb94, ^bb47
  ^bb47:  // 2 preds: ^bb46, ^bb99
    %c32000_i64 = arith.constant 32000 : i64
    %156 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> i64
    %158 = arith.cmpi ult, %157, %c32000_i64 : i64
    scf.if %158 {
    } else {
      %413 = arith.subi %157, %c32000_i64 : i64
      llvm.store %413, %156 : i64, !llvm.ptr
    }
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %158, ^bb1(%c80_i8_55 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %c1_i256 = arith.constant 1 : i256
    %159 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %140, %159 {alignment = 1 : i64} : i256, !llvm.ptr
    %160 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> i64
    %162 = call @dora_fn_create(%arg0, %153, %151, %159, %161) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %163 = llvm.getelementptr %162[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %164 = llvm.load %163 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %165 = arith.cmpi ne, %164, %c0_i8 : i8
    cf.cond_br %165, ^bb1(%164 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %166 = llvm.getelementptr %162[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %167 = llvm.load %166 : !llvm.ptr -> i64
    %168 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> i64
    %170 = arith.cmpi ult, %169, %167 : i64
    scf.if %170 {
    } else {
      %413 = arith.subi %169, %167 : i64
      llvm.store %413, %168 : i64, !llvm.ptr
    }
    %c80_i8_56 = arith.constant 80 : i8
    cf.cond_br %170, ^bb1(%c80_i8_56 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %171 = llvm.load %159 : !llvm.ptr -> i256
    %172 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %173 = llvm.load %172 : !llvm.ptr -> !llvm.ptr
    llvm.store %171, %173 : i256, !llvm.ptr
    %174 = llvm.getelementptr %173[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %174, %172 : !llvm.ptr, !llvm.ptr
    cf.br ^bb57
  ^bb51:  // pred: ^bb53
    %175 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_57 = arith.constant 1024 : i64
    %176 = llvm.load %175 : !llvm.ptr -> i64
    %c-2_i64_58 = arith.constant -2 : i64
    %177 = arith.addi %176, %c-2_i64_58 : i64
    llvm.store %177, %175 : i64, !llvm.ptr
    %c3_i64_59 = arith.constant 3 : i64
    %178 = arith.cmpi ult, %176, %c3_i64_59 : i64
    %c91_i8_60 = arith.constant 91 : i8
    cf.cond_br %178, ^bb1(%c91_i8_60 : i8), ^bb43
  ^bb52:  // pred: ^bb39
    %179 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %180 = llvm.load %179 : !llvm.ptr -> i64
    %c0_i64_61 = arith.constant 0 : i64
    %181 = arith.cmpi uge, %180, %c0_i64_61 : i64
    %c80_i8_62 = arith.constant 80 : i8
    cf.cond_br %181, ^bb53, ^bb1(%c80_i8_62 : i8)
  ^bb53:  // pred: ^bb52
    %182 = arith.subi %180, %c0_i64_61 : i64
    llvm.store %182, %179 : i64, !llvm.ptr
    cf.br ^bb51
  ^bb54:  // pred: ^bb56
    %183 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> !llvm.ptr
    %185 = llvm.getelementptr %184[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %186 = llvm.load %185 : !llvm.ptr -> i256
    llvm.store %185, %183 : !llvm.ptr, !llvm.ptr
    %c1_i256_63 = arith.constant 1 : i256
    %187 = llvm.alloca %c1_i256_63 x i256 : (i256) -> !llvm.ptr
    llvm.store %186, %187 {alignment = 1 : i64} : i256, !llvm.ptr
    %188 = call @dora_fn_extcodesize(%arg0, %187) : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %189 = llvm.getelementptr %188[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %190 = llvm.load %189 : !llvm.ptr -> i64
    %191 = llvm.getelementptr %188[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %192 = llvm.load %191 : !llvm.ptr -> i64
    %193 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> i64
    %195 = arith.cmpi ult, %194, %192 : i64
    scf.if %195 {
    } else {
      %413 = arith.subi %194, %192 : i64
      llvm.store %413, %193 : i64, !llvm.ptr
    }
    %c80_i8_64 = arith.constant 80 : i8
    cf.cond_br %195, ^bb1(%c80_i8_64 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %196 = arith.extui %190 : i64 to i256
    %197 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %198 = llvm.load %197 : !llvm.ptr -> !llvm.ptr
    llvm.store %196, %198 : i256, !llvm.ptr
    %199 = llvm.getelementptr %198[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %199, %197 : !llvm.ptr, !llvm.ptr
    cf.br ^bb61
  ^bb56:  // pred: ^bb58
    %200 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_65 = arith.constant 1024 : i64
    %201 = llvm.load %200 : !llvm.ptr -> i64
    %c0_i64_66 = arith.constant 0 : i64
    %202 = arith.addi %201, %c0_i64_66 : i64
    llvm.store %202, %200 : i64, !llvm.ptr
    %c1_i64_67 = arith.constant 1 : i64
    %203 = arith.cmpi ult, %201, %c1_i64_67 : i64
    %c91_i8_68 = arith.constant 91 : i8
    cf.cond_br %203, ^bb1(%c91_i8_68 : i8), ^bb54
  ^bb57:  // pred: ^bb50
    %204 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> i64
    %c0_i64_69 = arith.constant 0 : i64
    %206 = arith.cmpi uge, %205, %c0_i64_69 : i64
    %c80_i8_70 = arith.constant 80 : i8
    cf.cond_br %206, ^bb58, ^bb1(%c80_i8_70 : i8)
  ^bb58:  // pred: ^bb57
    %207 = arith.subi %205, %c0_i64_69 : i64
    llvm.store %207, %204 : i64, !llvm.ptr
    cf.br ^bb56
  ^bb59:  // pred: ^bb60
    %c0_i256_71 = arith.constant 0 : i256
    %208 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %209 = llvm.load %208 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_71, %209 : i256, !llvm.ptr
    %210 = llvm.getelementptr %209[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %210, %208 : !llvm.ptr, !llvm.ptr
    cf.br ^bb67
  ^bb60:  // pred: ^bb62
    %211 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_72 = arith.constant 1024 : i64
    %212 = llvm.load %211 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %213 = arith.addi %212, %c1_i64_73 : i64
    llvm.store %213, %211 : i64, !llvm.ptr
    %214 = arith.cmpi ult, %c1024_i64_72, %213 : i64
    %c92_i8_74 = arith.constant 92 : i8
    cf.cond_br %214, ^bb1(%c92_i8_74 : i8), ^bb59
  ^bb61:  // pred: ^bb55
    %215 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %216 = llvm.load %215 : !llvm.ptr -> i64
    %c2_i64_75 = arith.constant 2 : i64
    %217 = arith.cmpi uge, %216, %c2_i64_75 : i64
    %c80_i8_76 = arith.constant 80 : i8
    cf.cond_br %217, ^bb62, ^bb1(%c80_i8_76 : i8)
  ^bb62:  // pred: ^bb61
    %218 = arith.subi %216, %c2_i64_75 : i64
    llvm.store %218, %215 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb63:  // pred: ^bb66
    %219 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %220 = llvm.load %219 : !llvm.ptr -> !llvm.ptr
    %221 = llvm.getelementptr %220[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %222 = llvm.load %221 : !llvm.ptr -> i256
    llvm.store %221, %219 : !llvm.ptr, !llvm.ptr
    %223 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %224 = llvm.load %223 : !llvm.ptr -> !llvm.ptr
    %225 = llvm.getelementptr %224[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %226 = llvm.load %225 : !llvm.ptr -> i256
    llvm.store %225, %223 : !llvm.ptr, !llvm.ptr
    %227 = arith.trunci %222 : i256 to i64
    %c0_i64_77 = arith.constant 0 : i64
    %228 = arith.cmpi slt, %227, %c0_i64_77 : i64
    %c84_i8_78 = arith.constant 84 : i8
    cf.cond_br %228, ^bb1(%c84_i8_78 : i8), ^bb64
  ^bb64:  // pred: ^bb63
    %c32_i64_79 = arith.constant 32 : i64
    %c0_i64_80 = arith.constant 0 : i64
    %229 = arith.cmpi ne, %c32_i64_79, %c0_i64_80 : i64
    cf.cond_br %229, ^bb100, ^bb65
  ^bb65:  // 2 preds: ^bb64, ^bb103
    %230 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %231 = llvm.load %230 : !llvm.ptr -> !llvm.ptr
    %232 = llvm.getelementptr %231[%227] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %233 = llvm.intr.bswap(%226)  : (i256) -> i256
    llvm.store %233, %232 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb71
  ^bb66:  // pred: ^bb68
    %234 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_81 = arith.constant 1024 : i64
    %235 = llvm.load %234 : !llvm.ptr -> i64
    %c-2_i64_82 = arith.constant -2 : i64
    %236 = arith.addi %235, %c-2_i64_82 : i64
    llvm.store %236, %234 : i64, !llvm.ptr
    %c2_i64_83 = arith.constant 2 : i64
    %237 = arith.cmpi ult, %235, %c2_i64_83 : i64
    %c91_i8_84 = arith.constant 91 : i8
    cf.cond_br %237, ^bb1(%c91_i8_84 : i8), ^bb63
  ^bb67:  // pred: ^bb59
    %238 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %239 = llvm.load %238 : !llvm.ptr -> i64
    %c3_i64_85 = arith.constant 3 : i64
    %240 = arith.cmpi uge, %239, %c3_i64_85 : i64
    %c80_i8_86 = arith.constant 80 : i8
    cf.cond_br %240, ^bb68, ^bb1(%c80_i8_86 : i8)
  ^bb68:  // pred: ^bb67
    %241 = arith.subi %239, %c3_i64_85 : i64
    llvm.store %241, %238 : i64, !llvm.ptr
    cf.br ^bb66
  ^bb69:  // pred: ^bb70
    %c32_i256_87 = arith.constant 32 : i256
    %242 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %243 = llvm.load %242 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_87, %243 : i256, !llvm.ptr
    %244 = llvm.getelementptr %243[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %244, %242 : !llvm.ptr, !llvm.ptr
    cf.br ^bb75
  ^bb70:  // pred: ^bb72
    %245 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_88 = arith.constant 1024 : i64
    %246 = llvm.load %245 : !llvm.ptr -> i64
    %c1_i64_89 = arith.constant 1 : i64
    %247 = arith.addi %246, %c1_i64_89 : i64
    llvm.store %247, %245 : i64, !llvm.ptr
    %248 = arith.cmpi ult, %c1024_i64_88, %247 : i64
    %c92_i8_90 = arith.constant 92 : i8
    cf.cond_br %248, ^bb1(%c92_i8_90 : i8), ^bb69
  ^bb71:  // pred: ^bb65
    %249 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> i64
    %c3_i64_91 = arith.constant 3 : i64
    %251 = arith.cmpi uge, %250, %c3_i64_91 : i64
    %c80_i8_92 = arith.constant 80 : i8
    cf.cond_br %251, ^bb72, ^bb1(%c80_i8_92 : i8)
  ^bb72:  // pred: ^bb71
    %252 = arith.subi %250, %c3_i64_91 : i64
    llvm.store %252, %249 : i64, !llvm.ptr
    cf.br ^bb70
  ^bb73:  // pred: ^bb74
    %c0_i256_93 = arith.constant 0 : i256
    %253 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %254 = llvm.load %253 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_93, %254 : i256, !llvm.ptr
    %255 = llvm.getelementptr %254[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %255, %253 : !llvm.ptr, !llvm.ptr
    cf.br ^bb83
  ^bb74:  // pred: ^bb76
    %256 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_94 = arith.constant 1024 : i64
    %257 = llvm.load %256 : !llvm.ptr -> i64
    %c1_i64_95 = arith.constant 1 : i64
    %258 = arith.addi %257, %c1_i64_95 : i64
    llvm.store %258, %256 : i64, !llvm.ptr
    %259 = arith.cmpi ult, %c1024_i64_94, %258 : i64
    %c92_i8_96 = arith.constant 92 : i8
    cf.cond_br %259, ^bb1(%c92_i8_96 : i8), ^bb73
  ^bb75:  // pred: ^bb69
    %260 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %261 = llvm.load %260 : !llvm.ptr -> i64
    %c2_i64_97 = arith.constant 2 : i64
    %262 = arith.cmpi uge, %261, %c2_i64_97 : i64
    %c80_i8_98 = arith.constant 80 : i8
    cf.cond_br %262, ^bb76, ^bb1(%c80_i8_98 : i8)
  ^bb76:  // pred: ^bb75
    %263 = arith.subi %261, %c2_i64_97 : i64
    llvm.store %263, %260 : i64, !llvm.ptr
    cf.br ^bb74
  ^bb77:  // pred: ^bb82
    %264 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %265 = llvm.load %264 : !llvm.ptr -> !llvm.ptr
    %266 = llvm.getelementptr %265[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %267 = llvm.load %266 : !llvm.ptr -> i256
    llvm.store %266, %264 : !llvm.ptr, !llvm.ptr
    %268 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %269 = llvm.load %268 : !llvm.ptr -> !llvm.ptr
    %270 = llvm.getelementptr %269[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %271 = llvm.load %270 : !llvm.ptr -> i256
    llvm.store %270, %268 : !llvm.ptr, !llvm.ptr
    %272 = arith.trunci %267 : i256 to i64
    %c0_i64_99 = arith.constant 0 : i64
    %273 = arith.cmpi slt, %272, %c0_i64_99 : i64
    %c84_i8_100 = arith.constant 84 : i8
    cf.cond_br %273, ^bb1(%c84_i8_100 : i8), ^bb78
  ^bb78:  // pred: ^bb77
    %274 = arith.trunci %271 : i256 to i64
    %c0_i64_101 = arith.constant 0 : i64
    %275 = arith.cmpi slt, %274, %c0_i64_101 : i64
    %c84_i8_102 = arith.constant 84 : i8
    cf.cond_br %275, ^bb1(%c84_i8_102 : i8), ^bb79
  ^bb79:  // pred: ^bb78
    %c0_i64_103 = arith.constant 0 : i64
    %276 = arith.cmpi ne, %274, %c0_i64_103 : i64
    cf.cond_br %276, ^bb104, ^bb80
  ^bb80:  // 2 preds: ^bb79, ^bb107
    %c0_i8_104 = arith.constant 0 : i8
    %277 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %278 = llvm.load %277 : !llvm.ptr -> i64
    %279 = call @dora_fn_write_result(%arg0, %272, %274, %278, %c0_i8_104) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c0_i8_104 : i8
  ^bb81:  // no predecessors
    cf.br ^bb85
  ^bb82:  // pred: ^bb84
    %280 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_105 = arith.constant 1024 : i64
    %281 = llvm.load %280 : !llvm.ptr -> i64
    %c-2_i64_106 = arith.constant -2 : i64
    %282 = arith.addi %281, %c-2_i64_106 : i64
    llvm.store %282, %280 : i64, !llvm.ptr
    %c2_i64_107 = arith.constant 2 : i64
    %283 = arith.cmpi ult, %281, %c2_i64_107 : i64
    %c91_i8_108 = arith.constant 91 : i8
    cf.cond_br %283, ^bb1(%c91_i8_108 : i8), ^bb77
  ^bb83:  // pred: ^bb73
    %284 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %285 = llvm.load %284 : !llvm.ptr -> i64
    %c0_i64_109 = arith.constant 0 : i64
    %286 = arith.cmpi uge, %285, %c0_i64_109 : i64
    %c80_i8_110 = arith.constant 80 : i8
    cf.cond_br %286, ^bb84, ^bb1(%c80_i8_110 : i8)
  ^bb84:  // pred: ^bb83
    %287 = arith.subi %285, %c0_i64_109 : i64
    llvm.store %287, %284 : i64, !llvm.ptr
    cf.br ^bb82
  ^bb85:  // pred: ^bb81
    %c0_i64_111 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %288 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %289 = llvm.load %288 : !llvm.ptr -> i64
    %290 = call @dora_fn_write_result(%arg0, %c0_i64_111, %c0_i64_111, %289, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb86:  // pred: ^bb12
    %291 = arith.addi %44, %c32_i64 : i64
    %c0_i64_112 = arith.constant 0 : i64
    %292 = arith.cmpi slt, %291, %c0_i64_112 : i64
    %c84_i8_113 = arith.constant 84 : i8
    cf.cond_br %292, ^bb1(%c84_i8_113 : i8), ^bb87
  ^bb87:  // pred: ^bb86
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_114 = arith.constant 32 : i64
    %293 = arith.addi %291, %c31_i64 : i64
    %294 = arith.divui %293, %c32_i64_114 : i64
    %c32_i64_115 = arith.constant 32 : i64
    %295 = arith.muli %294, %c32_i64_115 : i64
    %296 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %297 = llvm.load %296 : !llvm.ptr -> i64
    %c31_i64_116 = arith.constant 31 : i64
    %c32_i64_117 = arith.constant 32 : i64
    %298 = arith.addi %297, %c31_i64_116 : i64
    %299 = arith.divui %298, %c32_i64_117 : i64
    %300 = arith.muli %299, %c32_i64_115 : i64
    %301 = arith.cmpi ult, %300, %295 : i64
    %302 = scf.if %301 -> (i64) {
      %c3_i64_160 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %413 = arith.muli %299, %299 : i64
      %414 = arith.divui %413, %c512_i64 : i64
      %415 = arith.muli %299, %c3_i64_160 : i64
      %416 = arith.addi %414, %415 : i64
      %c3_i64_161 = arith.constant 3 : i64
      %c512_i64_162 = arith.constant 512 : i64
      %417 = arith.muli %294, %294 : i64
      %418 = arith.divui %417, %c512_i64_162 : i64
      %419 = arith.muli %294, %c3_i64_161 : i64
      %420 = arith.addi %418, %419 : i64
      %421 = arith.subi %420, %416 : i64
      scf.yield %421 : i64
    } else {
      %c0_i64_160 = arith.constant 0 : i64
      scf.yield %c0_i64_160 : i64
    }
    %303 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %304 = llvm.load %303 : !llvm.ptr -> i64
    %305 = arith.cmpi ult, %304, %302 : i64
    scf.if %305 {
    } else {
      %413 = arith.subi %304, %302 : i64
      llvm.store %413, %303 : i64, !llvm.ptr
    }
    %c80_i8_118 = arith.constant 80 : i8
    cf.cond_br %305, ^bb1(%c80_i8_118 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %306 = call @dora_fn_extend_memory(%arg0, %295) : (!llvm.ptr, i64) -> !llvm.ptr
    %307 = llvm.getelementptr %306[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %308 = llvm.load %307 : !llvm.ptr -> !llvm.ptr
    %309 = llvm.getelementptr %306[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %310 = llvm.load %309 : !llvm.ptr -> i8
    %c0_i8_119 = arith.constant 0 : i8
    %311 = arith.cmpi ne, %310, %c0_i8_119 : i8
    cf.cond_br %311, ^bb1(%310 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    %312 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %308, %312 : !llvm.ptr, !llvm.ptr
    %313 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %295, %313 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb90:  // pred: ^bb26
    %314 = arith.addi %89, %c32_i64_25 : i64
    %c0_i64_120 = arith.constant 0 : i64
    %315 = arith.cmpi slt, %314, %c0_i64_120 : i64
    %c84_i8_121 = arith.constant 84 : i8
    cf.cond_br %315, ^bb1(%c84_i8_121 : i8), ^bb91
  ^bb91:  // pred: ^bb90
    %c31_i64_122 = arith.constant 31 : i64
    %c32_i64_123 = arith.constant 32 : i64
    %316 = arith.addi %314, %c31_i64_122 : i64
    %317 = arith.divui %316, %c32_i64_123 : i64
    %c32_i64_124 = arith.constant 32 : i64
    %318 = arith.muli %317, %c32_i64_124 : i64
    %319 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %320 = llvm.load %319 : !llvm.ptr -> i64
    %c31_i64_125 = arith.constant 31 : i64
    %c32_i64_126 = arith.constant 32 : i64
    %321 = arith.addi %320, %c31_i64_125 : i64
    %322 = arith.divui %321, %c32_i64_126 : i64
    %323 = arith.muli %322, %c32_i64_124 : i64
    %324 = arith.cmpi ult, %323, %318 : i64
    %325 = scf.if %324 -> (i64) {
      %c3_i64_160 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %413 = arith.muli %322, %322 : i64
      %414 = arith.divui %413, %c512_i64 : i64
      %415 = arith.muli %322, %c3_i64_160 : i64
      %416 = arith.addi %414, %415 : i64
      %c3_i64_161 = arith.constant 3 : i64
      %c512_i64_162 = arith.constant 512 : i64
      %417 = arith.muli %317, %317 : i64
      %418 = arith.divui %417, %c512_i64_162 : i64
      %419 = arith.muli %317, %c3_i64_161 : i64
      %420 = arith.addi %418, %419 : i64
      %421 = arith.subi %420, %416 : i64
      scf.yield %421 : i64
    } else {
      %c0_i64_160 = arith.constant 0 : i64
      scf.yield %c0_i64_160 : i64
    }
    %326 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %327 = llvm.load %326 : !llvm.ptr -> i64
    %328 = arith.cmpi ult, %327, %325 : i64
    scf.if %328 {
    } else {
      %413 = arith.subi %327, %325 : i64
      llvm.store %413, %326 : i64, !llvm.ptr
    }
    %c80_i8_127 = arith.constant 80 : i8
    cf.cond_br %328, ^bb1(%c80_i8_127 : i8), ^bb92
  ^bb92:  // pred: ^bb91
    %329 = call @dora_fn_extend_memory(%arg0, %318) : (!llvm.ptr, i64) -> !llvm.ptr
    %330 = llvm.getelementptr %329[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %331 = llvm.load %330 : !llvm.ptr -> !llvm.ptr
    %332 = llvm.getelementptr %329[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %333 = llvm.load %332 : !llvm.ptr -> i8
    %c0_i8_128 = arith.constant 0 : i8
    %334 = arith.cmpi ne, %333, %c0_i8_128 : i8
    cf.cond_br %334, ^bb1(%333 : i8), ^bb93
  ^bb93:  // pred: ^bb92
    %335 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %331, %335 : !llvm.ptr, !llvm.ptr
    %336 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %318, %336 : i64, !llvm.ptr
    cf.br ^bb27
  ^bb94:  // pred: ^bb46
    %c49152_i64 = arith.constant 49152 : i64
    %337 = arith.cmpi ugt, %153, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %337, ^bb1(%c100_i8 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %c31_i64_129 = arith.constant 31 : i64
    %c32_i64_130 = arith.constant 32 : i64
    %338 = arith.addi %153, %c31_i64_129 : i64
    %339 = arith.divui %338, %c32_i64_130 : i64
    %c2_i64_131 = arith.constant 2 : i64
    %340 = arith.muli %339, %c2_i64_131 : i64
    %341 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %342 = llvm.load %341 : !llvm.ptr -> i64
    %343 = arith.cmpi ult, %342, %340 : i64
    scf.if %343 {
    } else {
      %413 = arith.subi %342, %340 : i64
      llvm.store %413, %341 : i64, !llvm.ptr
    }
    %c80_i8_132 = arith.constant 80 : i8
    cf.cond_br %343, ^bb1(%c80_i8_132 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %344 = arith.addi %151, %153 : i64
    %c0_i64_133 = arith.constant 0 : i64
    %345 = arith.cmpi slt, %344, %c0_i64_133 : i64
    %c84_i8_134 = arith.constant 84 : i8
    cf.cond_br %345, ^bb1(%c84_i8_134 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %c31_i64_135 = arith.constant 31 : i64
    %c32_i64_136 = arith.constant 32 : i64
    %346 = arith.addi %344, %c31_i64_135 : i64
    %347 = arith.divui %346, %c32_i64_136 : i64
    %c32_i64_137 = arith.constant 32 : i64
    %348 = arith.muli %347, %c32_i64_137 : i64
    %349 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %350 = llvm.load %349 : !llvm.ptr -> i64
    %c31_i64_138 = arith.constant 31 : i64
    %c32_i64_139 = arith.constant 32 : i64
    %351 = arith.addi %350, %c31_i64_138 : i64
    %352 = arith.divui %351, %c32_i64_139 : i64
    %353 = arith.muli %352, %c32_i64_137 : i64
    %354 = arith.cmpi ult, %353, %348 : i64
    %355 = scf.if %354 -> (i64) {
      %c3_i64_160 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %413 = arith.muli %352, %352 : i64
      %414 = arith.divui %413, %c512_i64 : i64
      %415 = arith.muli %352, %c3_i64_160 : i64
      %416 = arith.addi %414, %415 : i64
      %c3_i64_161 = arith.constant 3 : i64
      %c512_i64_162 = arith.constant 512 : i64
      %417 = arith.muli %347, %347 : i64
      %418 = arith.divui %417, %c512_i64_162 : i64
      %419 = arith.muli %347, %c3_i64_161 : i64
      %420 = arith.addi %418, %419 : i64
      %421 = arith.subi %420, %416 : i64
      scf.yield %421 : i64
    } else {
      %c0_i64_160 = arith.constant 0 : i64
      scf.yield %c0_i64_160 : i64
    }
    %356 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %357 = llvm.load %356 : !llvm.ptr -> i64
    %358 = arith.cmpi ult, %357, %355 : i64
    scf.if %358 {
    } else {
      %413 = arith.subi %357, %355 : i64
      llvm.store %413, %356 : i64, !llvm.ptr
    }
    %c80_i8_140 = arith.constant 80 : i8
    cf.cond_br %358, ^bb1(%c80_i8_140 : i8), ^bb98
  ^bb98:  // pred: ^bb97
    %359 = call @dora_fn_extend_memory(%arg0, %348) : (!llvm.ptr, i64) -> !llvm.ptr
    %360 = llvm.getelementptr %359[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %361 = llvm.load %360 : !llvm.ptr -> !llvm.ptr
    %362 = llvm.getelementptr %359[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %363 = llvm.load %362 : !llvm.ptr -> i8
    %c0_i8_141 = arith.constant 0 : i8
    %364 = arith.cmpi ne, %363, %c0_i8_141 : i8
    cf.cond_br %364, ^bb1(%363 : i8), ^bb99
  ^bb99:  // pred: ^bb98
    %365 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %361, %365 : !llvm.ptr, !llvm.ptr
    %366 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %348, %366 : i64, !llvm.ptr
    cf.br ^bb47
  ^bb100:  // pred: ^bb64
    %367 = arith.addi %227, %c32_i64_79 : i64
    %c0_i64_142 = arith.constant 0 : i64
    %368 = arith.cmpi slt, %367, %c0_i64_142 : i64
    %c84_i8_143 = arith.constant 84 : i8
    cf.cond_br %368, ^bb1(%c84_i8_143 : i8), ^bb101
  ^bb101:  // pred: ^bb100
    %c31_i64_144 = arith.constant 31 : i64
    %c32_i64_145 = arith.constant 32 : i64
    %369 = arith.addi %367, %c31_i64_144 : i64
    %370 = arith.divui %369, %c32_i64_145 : i64
    %c32_i64_146 = arith.constant 32 : i64
    %371 = arith.muli %370, %c32_i64_146 : i64
    %372 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %373 = llvm.load %372 : !llvm.ptr -> i64
    %c31_i64_147 = arith.constant 31 : i64
    %c32_i64_148 = arith.constant 32 : i64
    %374 = arith.addi %373, %c31_i64_147 : i64
    %375 = arith.divui %374, %c32_i64_148 : i64
    %376 = arith.muli %375, %c32_i64_146 : i64
    %377 = arith.cmpi ult, %376, %371 : i64
    %378 = scf.if %377 -> (i64) {
      %c3_i64_160 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %413 = arith.muli %375, %375 : i64
      %414 = arith.divui %413, %c512_i64 : i64
      %415 = arith.muli %375, %c3_i64_160 : i64
      %416 = arith.addi %414, %415 : i64
      %c3_i64_161 = arith.constant 3 : i64
      %c512_i64_162 = arith.constant 512 : i64
      %417 = arith.muli %370, %370 : i64
      %418 = arith.divui %417, %c512_i64_162 : i64
      %419 = arith.muli %370, %c3_i64_161 : i64
      %420 = arith.addi %418, %419 : i64
      %421 = arith.subi %420, %416 : i64
      scf.yield %421 : i64
    } else {
      %c0_i64_160 = arith.constant 0 : i64
      scf.yield %c0_i64_160 : i64
    }
    %379 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %380 = llvm.load %379 : !llvm.ptr -> i64
    %381 = arith.cmpi ult, %380, %378 : i64
    scf.if %381 {
    } else {
      %413 = arith.subi %380, %378 : i64
      llvm.store %413, %379 : i64, !llvm.ptr
    }
    %c80_i8_149 = arith.constant 80 : i8
    cf.cond_br %381, ^bb1(%c80_i8_149 : i8), ^bb102
  ^bb102:  // pred: ^bb101
    %382 = call @dora_fn_extend_memory(%arg0, %371) : (!llvm.ptr, i64) -> !llvm.ptr
    %383 = llvm.getelementptr %382[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %384 = llvm.load %383 : !llvm.ptr -> !llvm.ptr
    %385 = llvm.getelementptr %382[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %386 = llvm.load %385 : !llvm.ptr -> i8
    %c0_i8_150 = arith.constant 0 : i8
    %387 = arith.cmpi ne, %386, %c0_i8_150 : i8
    cf.cond_br %387, ^bb1(%386 : i8), ^bb103
  ^bb103:  // pred: ^bb102
    %388 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %384, %388 : !llvm.ptr, !llvm.ptr
    %389 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %371, %389 : i64, !llvm.ptr
    cf.br ^bb65
  ^bb104:  // pred: ^bb79
    %390 = arith.addi %272, %274 : i64
    %c0_i64_151 = arith.constant 0 : i64
    %391 = arith.cmpi slt, %390, %c0_i64_151 : i64
    %c84_i8_152 = arith.constant 84 : i8
    cf.cond_br %391, ^bb1(%c84_i8_152 : i8), ^bb105
  ^bb105:  // pred: ^bb104
    %c31_i64_153 = arith.constant 31 : i64
    %c32_i64_154 = arith.constant 32 : i64
    %392 = arith.addi %390, %c31_i64_153 : i64
    %393 = arith.divui %392, %c32_i64_154 : i64
    %c32_i64_155 = arith.constant 32 : i64
    %394 = arith.muli %393, %c32_i64_155 : i64
    %395 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %396 = llvm.load %395 : !llvm.ptr -> i64
    %c31_i64_156 = arith.constant 31 : i64
    %c32_i64_157 = arith.constant 32 : i64
    %397 = arith.addi %396, %c31_i64_156 : i64
    %398 = arith.divui %397, %c32_i64_157 : i64
    %399 = arith.muli %398, %c32_i64_155 : i64
    %400 = arith.cmpi ult, %399, %394 : i64
    %401 = scf.if %400 -> (i64) {
      %c3_i64_160 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %413 = arith.muli %398, %398 : i64
      %414 = arith.divui %413, %c512_i64 : i64
      %415 = arith.muli %398, %c3_i64_160 : i64
      %416 = arith.addi %414, %415 : i64
      %c3_i64_161 = arith.constant 3 : i64
      %c512_i64_162 = arith.constant 512 : i64
      %417 = arith.muli %393, %393 : i64
      %418 = arith.divui %417, %c512_i64_162 : i64
      %419 = arith.muli %393, %c3_i64_161 : i64
      %420 = arith.addi %418, %419 : i64
      %421 = arith.subi %420, %416 : i64
      scf.yield %421 : i64
    } else {
      %c0_i64_160 = arith.constant 0 : i64
      scf.yield %c0_i64_160 : i64
    }
    %402 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %403 = llvm.load %402 : !llvm.ptr -> i64
    %404 = arith.cmpi ult, %403, %401 : i64
    scf.if %404 {
    } else {
      %413 = arith.subi %403, %401 : i64
      llvm.store %413, %402 : i64, !llvm.ptr
    }
    %c80_i8_158 = arith.constant 80 : i8
    cf.cond_br %404, ^bb1(%c80_i8_158 : i8), ^bb106
  ^bb106:  // pred: ^bb105
    %405 = call @dora_fn_extend_memory(%arg0, %394) : (!llvm.ptr, i64) -> !llvm.ptr
    %406 = llvm.getelementptr %405[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %407 = llvm.load %406 : !llvm.ptr -> !llvm.ptr
    %408 = llvm.getelementptr %405[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %409 = llvm.load %408 : !llvm.ptr -> i8
    %c0_i8_159 = arith.constant 0 : i8
    %410 = arith.cmpi ne, %409, %c0_i8_159 : i8
    cf.cond_br %410, ^bb1(%409 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %411 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %407, %411 : !llvm.ptr, !llvm.ptr
    %412 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %394, %412 : i64, !llvm.ptr
    cf.br ^bb80
  }
}
