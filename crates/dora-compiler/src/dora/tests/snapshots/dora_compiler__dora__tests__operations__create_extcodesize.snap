---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 62 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb13, ^bb14, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb27, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb36, ^bb37, ^bb40, ^bb41, ^bb44, ^bb45, ^bb47, ^bb48, ^bb49, ^bb51, ^bb52, ^bb53, ^bb55, ^bb56, ^bb58, ^bb60, ^bb61, ^bb64, ^bb65, ^bb67, ^bb68, ^bb69, ^bb70, ^bb72, ^bb73, ^bb76, ^bb77, ^bb80, ^bb81, ^bb83, ^bb84, ^bb85, ^bb86, ^bb87, ^bb90, ^bb91, ^bb94, ^bb95, ^bb96, ^bb97, ^bb98
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb16
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %46 = arith.addi %44, %c32_i64 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %47 = arith.cmpi slt, %46, %c0_i64_8 : i64
    %c84_i8_9 = arith.constant 84 : i8
    cf.cond_br %47, ^bb1(%c84_i8_9 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_10 = arith.constant 32 : i64
    %48 = arith.addi %46, %c31_i64 : i64
    %49 = arith.divui %48, %c32_i64_10 : i64
    %c32_i64_11 = arith.constant 32 : i64
    %50 = arith.muli %49, %c32_i64_11 : i64
    %51 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c31_i64_12 = arith.constant 31 : i64
    %c32_i64_13 = arith.constant 32 : i64
    %53 = arith.addi %52, %c31_i64_12 : i64
    %54 = arith.divui %53, %c32_i64_13 : i64
    %55 = arith.muli %54, %c32_i64_11 : i64
    %56 = arith.cmpi ult, %55, %50 : i64
    %57 = scf.if %56 -> (i64) {
      %c3_i64_156 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %409 = arith.muli %54, %54 : i64
      %410 = arith.divui %409, %c512_i64 : i64
      %411 = arith.muli %54, %c3_i64_156 : i64
      %412 = arith.addi %410, %411 : i64
      %c3_i64_157 = arith.constant 3 : i64
      %c512_i64_158 = arith.constant 512 : i64
      %413 = arith.muli %49, %49 : i64
      %414 = arith.divui %413, %c512_i64_158 : i64
      %415 = arith.muli %49, %c3_i64_157 : i64
      %416 = arith.addi %414, %415 : i64
      %417 = arith.subi %416, %412 : i64
      scf.yield %417 : i64
    } else {
      %c0_i64_156 = arith.constant 0 : i64
      scf.yield %c0_i64_156 : i64
    }
    %58 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %60 = arith.cmpi ult, %59, %57 : i64
    scf.if %60 {
    } else {
      %409 = arith.subi %59, %57 : i64
      llvm.store %409, %58 : i64, !llvm.ptr
    }
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %60, ^bb1(%c80_i8_14 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %61 = call @dora_fn_extend_memory(%arg0, %50) : (!llvm.ptr, i64) -> !llvm.ptr
    %62 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %63 = llvm.load %62 : !llvm.ptr -> !llvm.ptr
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %66 = arith.cmpi ne, %65, %c0_i8 : i8
    cf.cond_br %66, ^bb1(%65 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %67 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %63, %67 : !llvm.ptr, !llvm.ptr
    %68 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %50, %68 : i64, !llvm.ptr
    %69 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.getelementptr %70[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %72, %71 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_15 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %75 = arith.addi %74, %c-2_i64 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %76 = arith.cmpi ult, %74, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %76, ^bb1(%c91_i8 : i8), ^bb11
  ^bb17:  // pred: ^bb7
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %79, ^bb18, ^bb1(%c80_i8_17 : i8)
  ^bb18:  // pred: ^bb17
    %80 = arith.subi %78, %c3_i64_16 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c170141183460469231731687303715884105727_i256_18 = arith.constant 170141183460469231731687303715884105727 : i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_18, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_19 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c1_i64_20 = arith.constant 1 : i64
    %86 = arith.addi %85, %c1_i64_20 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %c1024_i64_19, %86 : i64
    %c92_i8_21 = arith.constant 92 : i8
    cf.cond_br %87, ^bb1(%c92_i8_21 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_22 = arith.constant 3 : i64
    %90 = arith.cmpi uge, %89, %c3_i64_22 : i64
    %c80_i8_23 = arith.constant 80 : i8
    cf.cond_br %90, ^bb22, ^bb1(%c80_i8_23 : i8)
  ^bb22:  // pred: ^bb21
    %91 = arith.subi %89, %c3_i64_22 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c32_i256 = arith.constant 32 : i256
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %93 : i256, !llvm.ptr
    %94 = llvm.getelementptr %93[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    cf.br ^bb33
  ^bb24:  // pred: ^bb26
    %95 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_24 = arith.constant 1024 : i64
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %97 = arith.addi %96, %c1_i64_25 : i64
    llvm.store %97, %95 : i64, !llvm.ptr
    %98 = arith.cmpi ult, %c1024_i64_24, %97 : i64
    %c92_i8_26 = arith.constant 92 : i8
    cf.cond_br %98, ^bb1(%c92_i8_26 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %c3_i64_27 = arith.constant 3 : i64
    %101 = arith.cmpi uge, %100, %c3_i64_27 : i64
    %c80_i8_28 = arith.constant 80 : i8
    cf.cond_br %101, ^bb26, ^bb1(%c80_i8_28 : i8)
  ^bb26:  // pred: ^bb25
    %102 = arith.subi %100, %c3_i64_27 : i64
    llvm.store %102, %99 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb32
    %103 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> !llvm.ptr
    %105 = llvm.getelementptr %104[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %106 = llvm.load %105 : !llvm.ptr -> i256
    llvm.store %105, %103 : !llvm.ptr, !llvm.ptr
    %107 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> !llvm.ptr
    %109 = llvm.getelementptr %108[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %110 = llvm.load %109 : !llvm.ptr -> i256
    llvm.store %109, %107 : !llvm.ptr, !llvm.ptr
    %111 = arith.trunci %106 : i256 to i64
    %c0_i64_29 = arith.constant 0 : i64
    %112 = arith.cmpi slt, %111, %c0_i64_29 : i64
    %c84_i8_30 = arith.constant 84 : i8
    cf.cond_br %112, ^bb1(%c84_i8_30 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c32_i64_31 = arith.constant 32 : i64
    %113 = arith.addi %111, %c32_i64_31 : i64
    %c0_i64_32 = arith.constant 0 : i64
    %114 = arith.cmpi slt, %113, %c0_i64_32 : i64
    %c84_i8_33 = arith.constant 84 : i8
    cf.cond_br %114, ^bb1(%c84_i8_33 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c31_i64_34 = arith.constant 31 : i64
    %c32_i64_35 = arith.constant 32 : i64
    %115 = arith.addi %113, %c31_i64_34 : i64
    %116 = arith.divui %115, %c32_i64_35 : i64
    %c32_i64_36 = arith.constant 32 : i64
    %117 = arith.muli %116, %c32_i64_36 : i64
    %118 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c31_i64_37 = arith.constant 31 : i64
    %c32_i64_38 = arith.constant 32 : i64
    %120 = arith.addi %119, %c31_i64_37 : i64
    %121 = arith.divui %120, %c32_i64_38 : i64
    %122 = arith.muli %121, %c32_i64_36 : i64
    %123 = arith.cmpi ult, %122, %117 : i64
    %124 = scf.if %123 -> (i64) {
      %c3_i64_156 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %409 = arith.muli %121, %121 : i64
      %410 = arith.divui %409, %c512_i64 : i64
      %411 = arith.muli %121, %c3_i64_156 : i64
      %412 = arith.addi %410, %411 : i64
      %c3_i64_157 = arith.constant 3 : i64
      %c512_i64_158 = arith.constant 512 : i64
      %413 = arith.muli %116, %116 : i64
      %414 = arith.divui %413, %c512_i64_158 : i64
      %415 = arith.muli %116, %c3_i64_157 : i64
      %416 = arith.addi %414, %415 : i64
      %417 = arith.subi %416, %412 : i64
      scf.yield %417 : i64
    } else {
      %c0_i64_156 = arith.constant 0 : i64
      scf.yield %c0_i64_156 : i64
    }
    %125 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> i64
    %127 = arith.cmpi ult, %126, %124 : i64
    scf.if %127 {
    } else {
      %409 = arith.subi %126, %124 : i64
      llvm.store %409, %125 : i64, !llvm.ptr
    }
    %c80_i8_39 = arith.constant 80 : i8
    cf.cond_br %127, ^bb1(%c80_i8_39 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %128 = call @dora_fn_extend_memory(%arg0, %117) : (!llvm.ptr, i64) -> !llvm.ptr
    %129 = llvm.getelementptr %128[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %130 = llvm.load %129 : !llvm.ptr -> !llvm.ptr
    %131 = llvm.getelementptr %128[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %132 = llvm.load %131 : !llvm.ptr -> i8
    %c0_i8_40 = arith.constant 0 : i8
    %133 = arith.cmpi ne, %132, %c0_i8_40 : i8
    cf.cond_br %133, ^bb1(%132 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %134 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %130, %134 : !llvm.ptr, !llvm.ptr
    %135 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %117, %135 : i64, !llvm.ptr
    %136 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %137[%111] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %139 = llvm.intr.bswap(%110)  : (i256) -> i256
    llvm.store %139, %138 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb37
  ^bb32:  // pred: ^bb34
    %140 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_41 = arith.constant 1024 : i64
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %c-2_i64_42 = arith.constant -2 : i64
    %142 = arith.addi %141, %c-2_i64_42 : i64
    llvm.store %142, %140 : i64, !llvm.ptr
    %c2_i64_43 = arith.constant 2 : i64
    %143 = arith.cmpi ult, %141, %c2_i64_43 : i64
    %c91_i8_44 = arith.constant 91 : i8
    cf.cond_br %143, ^bb1(%c91_i8_44 : i8), ^bb27
  ^bb33:  // pred: ^bb23
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    %146 = arith.cmpi uge, %145, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %146, ^bb34, ^bb1(%c80_i8_46 : i8)
  ^bb34:  // pred: ^bb33
    %147 = arith.subi %145, %c3_i64_45 : i64
    llvm.store %147, %144 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb36
    %c41_i256 = arith.constant 41 : i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %c41_i256, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %151 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_47 = arith.constant 1024 : i64
    %152 = llvm.load %151 : !llvm.ptr -> i64
    %c1_i64_48 = arith.constant 1 : i64
    %153 = arith.addi %152, %c1_i64_48 : i64
    llvm.store %153, %151 : i64, !llvm.ptr
    %154 = arith.cmpi ult, %c1024_i64_47, %153 : i64
    %c92_i8_49 = arith.constant 92 : i8
    cf.cond_br %154, ^bb1(%c92_i8_49 : i8), ^bb35
  ^bb37:  // pred: ^bb31
    %155 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %156 = llvm.load %155 : !llvm.ptr -> i64
    %c3_i64_50 = arith.constant 3 : i64
    %157 = arith.cmpi uge, %156, %c3_i64_50 : i64
    %c80_i8_51 = arith.constant 80 : i8
    cf.cond_br %157, ^bb38, ^bb1(%c80_i8_51 : i8)
  ^bb38:  // pred: ^bb37
    %158 = arith.subi %156, %c3_i64_50 : i64
    llvm.store %158, %155 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_52 = arith.constant 0 : i256
    %159 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_52, %160 : i256, !llvm.ptr
    %161 = llvm.getelementptr %160[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %161, %159 : !llvm.ptr, !llvm.ptr
    cf.br ^bb45
  ^bb40:  // pred: ^bb42
    %162 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_53 = arith.constant 1024 : i64
    %163 = llvm.load %162 : !llvm.ptr -> i64
    %c1_i64_54 = arith.constant 1 : i64
    %164 = arith.addi %163, %c1_i64_54 : i64
    llvm.store %164, %162 : i64, !llvm.ptr
    %165 = arith.cmpi ult, %c1024_i64_53, %164 : i64
    %c92_i8_55 = arith.constant 92 : i8
    cf.cond_br %165, ^bb1(%c92_i8_55 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %166 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> i64
    %c3_i64_56 = arith.constant 3 : i64
    %168 = arith.cmpi uge, %167, %c3_i64_56 : i64
    %c80_i8_57 = arith.constant 80 : i8
    cf.cond_br %168, ^bb42, ^bb1(%c80_i8_57 : i8)
  ^bb42:  // pred: ^bb41
    %169 = arith.subi %167, %c3_i64_56 : i64
    llvm.store %169, %166 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb44
    %c0_i256_58 = arith.constant 0 : i256
    %170 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_58, %171 : i256, !llvm.ptr
    %172 = llvm.getelementptr %171[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %172, %170 : !llvm.ptr, !llvm.ptr
    cf.br ^bb56
  ^bb44:  // pred: ^bb46
    %173 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_59 = arith.constant 1024 : i64
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %c1_i64_60 = arith.constant 1 : i64
    %175 = arith.addi %174, %c1_i64_60 : i64
    llvm.store %175, %173 : i64, !llvm.ptr
    %176 = arith.cmpi ult, %c1024_i64_59, %175 : i64
    %c92_i8_61 = arith.constant 92 : i8
    cf.cond_br %176, ^bb1(%c92_i8_61 : i8), ^bb43
  ^bb45:  // pred: ^bb39
    %177 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %178 = llvm.load %177 : !llvm.ptr -> i64
    %c3_i64_62 = arith.constant 3 : i64
    %179 = arith.cmpi uge, %178, %c3_i64_62 : i64
    %c80_i8_63 = arith.constant 80 : i8
    cf.cond_br %179, ^bb46, ^bb1(%c80_i8_63 : i8)
  ^bb46:  // pred: ^bb45
    %180 = arith.subi %178, %c3_i64_62 : i64
    llvm.store %180, %177 : i64, !llvm.ptr
    cf.br ^bb44
  ^bb47:  // pred: ^bb55
    %181 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %182 = llvm.load %181 : !llvm.ptr -> !llvm.ptr
    %183 = llvm.getelementptr %182[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %184 = llvm.load %183 : !llvm.ptr -> i256
    llvm.store %183, %181 : !llvm.ptr, !llvm.ptr
    %185 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> !llvm.ptr
    %187 = llvm.getelementptr %186[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %188 = llvm.load %187 : !llvm.ptr -> i256
    llvm.store %187, %185 : !llvm.ptr, !llvm.ptr
    %189 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> !llvm.ptr
    %191 = llvm.getelementptr %190[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %192 = llvm.load %191 : !llvm.ptr -> i256
    llvm.store %191, %189 : !llvm.ptr, !llvm.ptr
    %193 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %194, ^bb1(%c87_i8 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %195 = arith.trunci %188 : i256 to i64
    %c0_i64_64 = arith.constant 0 : i64
    %196 = arith.cmpi slt, %195, %c0_i64_64 : i64
    %c84_i8_65 = arith.constant 84 : i8
    cf.cond_br %196, ^bb1(%c84_i8_65 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %197 = arith.trunci %192 : i256 to i64
    %c0_i64_66 = arith.constant 0 : i64
    %198 = arith.cmpi slt, %197, %c0_i64_66 : i64
    %c84_i8_67 = arith.constant 84 : i8
    cf.cond_br %198, ^bb1(%c84_i8_67 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %c0_i64_68 = arith.constant 0 : i64
    %199 = arith.cmpi ne, %197, %c0_i64_68 : i64
    cf.cond_br %199, ^bb94, ^bb51
  ^bb51:  // 2 preds: ^bb50, ^bb99
    %c32000_i64 = arith.constant 32000 : i64
    %200 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %201 = llvm.load %200 : !llvm.ptr -> i64
    %202 = arith.cmpi ult, %201, %c32000_i64 : i64
    scf.if %202 {
    } else {
      %409 = arith.subi %201, %c32000_i64 : i64
      llvm.store %409, %200 : i64, !llvm.ptr
    }
    %c80_i8_69 = arith.constant 80 : i8
    cf.cond_br %202, ^bb1(%c80_i8_69 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %c1_i256 = arith.constant 1 : i256
    %203 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %184, %203 {alignment = 1 : i64} : i256, !llvm.ptr
    %204 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> i64
    %206 = call @dora_fn_create(%arg0, %197, %195, %203, %205) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %207 = llvm.getelementptr %206[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %208 = llvm.load %207 : !llvm.ptr -> i8
    %c0_i8_70 = arith.constant 0 : i8
    %209 = arith.cmpi ne, %208, %c0_i8_70 : i8
    cf.cond_br %209, ^bb1(%208 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %210 = llvm.getelementptr %206[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %211 = llvm.load %210 : !llvm.ptr -> i64
    %212 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %213 = llvm.load %212 : !llvm.ptr -> i64
    %214 = arith.cmpi ult, %213, %211 : i64
    scf.if %214 {
    } else {
      %409 = arith.subi %213, %211 : i64
      llvm.store %409, %212 : i64, !llvm.ptr
    }
    %c80_i8_71 = arith.constant 80 : i8
    cf.cond_br %214, ^bb1(%c80_i8_71 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %215 = llvm.load %203 : !llvm.ptr -> i256
    %216 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %217 = llvm.load %216 : !llvm.ptr -> !llvm.ptr
    llvm.store %215, %217 : i256, !llvm.ptr
    %218 = llvm.getelementptr %217[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %218, %216 : !llvm.ptr, !llvm.ptr
    cf.br ^bb61
  ^bb55:  // pred: ^bb57
    %219 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_72 = arith.constant 1024 : i64
    %220 = llvm.load %219 : !llvm.ptr -> i64
    %c-2_i64_73 = arith.constant -2 : i64
    %221 = arith.addi %220, %c-2_i64_73 : i64
    llvm.store %221, %219 : i64, !llvm.ptr
    %c3_i64_74 = arith.constant 3 : i64
    %222 = arith.cmpi ult, %220, %c3_i64_74 : i64
    %c91_i8_75 = arith.constant 91 : i8
    cf.cond_br %222, ^bb1(%c91_i8_75 : i8), ^bb47
  ^bb56:  // pred: ^bb43
    %223 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %224 = llvm.load %223 : !llvm.ptr -> i64
    %c0_i64_76 = arith.constant 0 : i64
    %225 = arith.cmpi uge, %224, %c0_i64_76 : i64
    %c80_i8_77 = arith.constant 80 : i8
    cf.cond_br %225, ^bb57, ^bb1(%c80_i8_77 : i8)
  ^bb57:  // pred: ^bb56
    %226 = arith.subi %224, %c0_i64_76 : i64
    llvm.store %226, %223 : i64, !llvm.ptr
    cf.br ^bb55
  ^bb58:  // pred: ^bb60
    %227 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %228 = llvm.load %227 : !llvm.ptr -> !llvm.ptr
    %229 = llvm.getelementptr %228[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %230 = llvm.load %229 : !llvm.ptr -> i256
    llvm.store %229, %227 : !llvm.ptr, !llvm.ptr
    %c1_i256_78 = arith.constant 1 : i256
    %231 = llvm.alloca %c1_i256_78 x i256 : (i256) -> !llvm.ptr
    llvm.store %230, %231 {alignment = 1 : i64} : i256, !llvm.ptr
    %232 = call @dora_fn_extcodesize(%arg0, %231) : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %233 = llvm.getelementptr %232[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %234 = llvm.load %233 : !llvm.ptr -> i64
    %235 = llvm.getelementptr %232[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %236 = llvm.load %235 : !llvm.ptr -> i64
    %237 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> i64
    %239 = arith.cmpi ult, %238, %236 : i64
    scf.if %239 {
    } else {
      %409 = arith.subi %238, %236 : i64
      llvm.store %409, %237 : i64, !llvm.ptr
    }
    %c80_i8_79 = arith.constant 80 : i8
    cf.cond_br %239, ^bb1(%c80_i8_79 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %240 = arith.extui %234 : i64 to i256
    %241 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %242 = llvm.load %241 : !llvm.ptr -> !llvm.ptr
    llvm.store %240, %242 : i256, !llvm.ptr
    %243 = llvm.getelementptr %242[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %243, %241 : !llvm.ptr, !llvm.ptr
    cf.br ^bb65
  ^bb60:  // pred: ^bb62
    %244 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_80 = arith.constant 1024 : i64
    %245 = llvm.load %244 : !llvm.ptr -> i64
    %c0_i64_81 = arith.constant 0 : i64
    %246 = arith.addi %245, %c0_i64_81 : i64
    llvm.store %246, %244 : i64, !llvm.ptr
    %c1_i64_82 = arith.constant 1 : i64
    %247 = arith.cmpi ult, %245, %c1_i64_82 : i64
    %c91_i8_83 = arith.constant 91 : i8
    cf.cond_br %247, ^bb1(%c91_i8_83 : i8), ^bb58
  ^bb61:  // pred: ^bb54
    %248 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %249 = llvm.load %248 : !llvm.ptr -> i64
    %c0_i64_84 = arith.constant 0 : i64
    %250 = arith.cmpi uge, %249, %c0_i64_84 : i64
    %c80_i8_85 = arith.constant 80 : i8
    cf.cond_br %250, ^bb62, ^bb1(%c80_i8_85 : i8)
  ^bb62:  // pred: ^bb61
    %251 = arith.subi %249, %c0_i64_84 : i64
    llvm.store %251, %248 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb63:  // pred: ^bb64
    %c0_i256_86 = arith.constant 0 : i256
    %252 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_86, %253 : i256, !llvm.ptr
    %254 = llvm.getelementptr %253[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %254, %252 : !llvm.ptr, !llvm.ptr
    cf.br ^bb73
  ^bb64:  // pred: ^bb66
    %255 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_87 = arith.constant 1024 : i64
    %256 = llvm.load %255 : !llvm.ptr -> i64
    %c1_i64_88 = arith.constant 1 : i64
    %257 = arith.addi %256, %c1_i64_88 : i64
    llvm.store %257, %255 : i64, !llvm.ptr
    %258 = arith.cmpi ult, %c1024_i64_87, %257 : i64
    %c92_i8_89 = arith.constant 92 : i8
    cf.cond_br %258, ^bb1(%c92_i8_89 : i8), ^bb63
  ^bb65:  // pred: ^bb59
    %259 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %260 = llvm.load %259 : !llvm.ptr -> i64
    %c2_i64_90 = arith.constant 2 : i64
    %261 = arith.cmpi uge, %260, %c2_i64_90 : i64
    %c80_i8_91 = arith.constant 80 : i8
    cf.cond_br %261, ^bb66, ^bb1(%c80_i8_91 : i8)
  ^bb66:  // pred: ^bb65
    %262 = arith.subi %260, %c2_i64_90 : i64
    llvm.store %262, %259 : i64, !llvm.ptr
    cf.br ^bb64
  ^bb67:  // pred: ^bb72
    %263 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %264 = llvm.load %263 : !llvm.ptr -> !llvm.ptr
    %265 = llvm.getelementptr %264[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %266 = llvm.load %265 : !llvm.ptr -> i256
    llvm.store %265, %263 : !llvm.ptr, !llvm.ptr
    %267 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %268 = llvm.load %267 : !llvm.ptr -> !llvm.ptr
    %269 = llvm.getelementptr %268[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %270 = llvm.load %269 : !llvm.ptr -> i256
    llvm.store %269, %267 : !llvm.ptr, !llvm.ptr
    %271 = arith.trunci %266 : i256 to i64
    %c0_i64_92 = arith.constant 0 : i64
    %272 = arith.cmpi slt, %271, %c0_i64_92 : i64
    %c84_i8_93 = arith.constant 84 : i8
    cf.cond_br %272, ^bb1(%c84_i8_93 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %c32_i64_94 = arith.constant 32 : i64
    %273 = arith.addi %271, %c32_i64_94 : i64
    %c0_i64_95 = arith.constant 0 : i64
    %274 = arith.cmpi slt, %273, %c0_i64_95 : i64
    %c84_i8_96 = arith.constant 84 : i8
    cf.cond_br %274, ^bb1(%c84_i8_96 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %c31_i64_97 = arith.constant 31 : i64
    %c32_i64_98 = arith.constant 32 : i64
    %275 = arith.addi %273, %c31_i64_97 : i64
    %276 = arith.divui %275, %c32_i64_98 : i64
    %c32_i64_99 = arith.constant 32 : i64
    %277 = arith.muli %276, %c32_i64_99 : i64
    %278 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %279 = llvm.load %278 : !llvm.ptr -> i64
    %c31_i64_100 = arith.constant 31 : i64
    %c32_i64_101 = arith.constant 32 : i64
    %280 = arith.addi %279, %c31_i64_100 : i64
    %281 = arith.divui %280, %c32_i64_101 : i64
    %282 = arith.muli %281, %c32_i64_99 : i64
    %283 = arith.cmpi ult, %282, %277 : i64
    %284 = scf.if %283 -> (i64) {
      %c3_i64_156 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %409 = arith.muli %281, %281 : i64
      %410 = arith.divui %409, %c512_i64 : i64
      %411 = arith.muli %281, %c3_i64_156 : i64
      %412 = arith.addi %410, %411 : i64
      %c3_i64_157 = arith.constant 3 : i64
      %c512_i64_158 = arith.constant 512 : i64
      %413 = arith.muli %276, %276 : i64
      %414 = arith.divui %413, %c512_i64_158 : i64
      %415 = arith.muli %276, %c3_i64_157 : i64
      %416 = arith.addi %414, %415 : i64
      %417 = arith.subi %416, %412 : i64
      scf.yield %417 : i64
    } else {
      %c0_i64_156 = arith.constant 0 : i64
      scf.yield %c0_i64_156 : i64
    }
    %285 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %286 = llvm.load %285 : !llvm.ptr -> i64
    %287 = arith.cmpi ult, %286, %284 : i64
    scf.if %287 {
    } else {
      %409 = arith.subi %286, %284 : i64
      llvm.store %409, %285 : i64, !llvm.ptr
    }
    %c80_i8_102 = arith.constant 80 : i8
    cf.cond_br %287, ^bb1(%c80_i8_102 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %288 = call @dora_fn_extend_memory(%arg0, %277) : (!llvm.ptr, i64) -> !llvm.ptr
    %289 = llvm.getelementptr %288[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %290 = llvm.load %289 : !llvm.ptr -> !llvm.ptr
    %291 = llvm.getelementptr %288[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %292 = llvm.load %291 : !llvm.ptr -> i8
    %c0_i8_103 = arith.constant 0 : i8
    %293 = arith.cmpi ne, %292, %c0_i8_103 : i8
    cf.cond_br %293, ^bb1(%292 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %294 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %290, %294 : !llvm.ptr, !llvm.ptr
    %295 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %277, %295 : i64, !llvm.ptr
    %296 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %297 = llvm.load %296 : !llvm.ptr -> !llvm.ptr
    %298 = llvm.getelementptr %297[%271] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %299 = llvm.intr.bswap(%270)  : (i256) -> i256
    llvm.store %299, %298 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb77
  ^bb72:  // pred: ^bb74
    %300 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_104 = arith.constant 1024 : i64
    %301 = llvm.load %300 : !llvm.ptr -> i64
    %c-2_i64_105 = arith.constant -2 : i64
    %302 = arith.addi %301, %c-2_i64_105 : i64
    llvm.store %302, %300 : i64, !llvm.ptr
    %c2_i64_106 = arith.constant 2 : i64
    %303 = arith.cmpi ult, %301, %c2_i64_106 : i64
    %c91_i8_107 = arith.constant 91 : i8
    cf.cond_br %303, ^bb1(%c91_i8_107 : i8), ^bb67
  ^bb73:  // pred: ^bb63
    %304 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %305 = llvm.load %304 : !llvm.ptr -> i64
    %c3_i64_108 = arith.constant 3 : i64
    %306 = arith.cmpi uge, %305, %c3_i64_108 : i64
    %c80_i8_109 = arith.constant 80 : i8
    cf.cond_br %306, ^bb74, ^bb1(%c80_i8_109 : i8)
  ^bb74:  // pred: ^bb73
    %307 = arith.subi %305, %c3_i64_108 : i64
    llvm.store %307, %304 : i64, !llvm.ptr
    cf.br ^bb72
  ^bb75:  // pred: ^bb76
    %c32_i256_110 = arith.constant 32 : i256
    %308 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %309 = llvm.load %308 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_110, %309 : i256, !llvm.ptr
    %310 = llvm.getelementptr %309[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %310, %308 : !llvm.ptr, !llvm.ptr
    cf.br ^bb81
  ^bb76:  // pred: ^bb78
    %311 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_111 = arith.constant 1024 : i64
    %312 = llvm.load %311 : !llvm.ptr -> i64
    %c1_i64_112 = arith.constant 1 : i64
    %313 = arith.addi %312, %c1_i64_112 : i64
    llvm.store %313, %311 : i64, !llvm.ptr
    %314 = arith.cmpi ult, %c1024_i64_111, %313 : i64
    %c92_i8_113 = arith.constant 92 : i8
    cf.cond_br %314, ^bb1(%c92_i8_113 : i8), ^bb75
  ^bb77:  // pred: ^bb71
    %315 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %316 = llvm.load %315 : !llvm.ptr -> i64
    %c3_i64_114 = arith.constant 3 : i64
    %317 = arith.cmpi uge, %316, %c3_i64_114 : i64
    %c80_i8_115 = arith.constant 80 : i8
    cf.cond_br %317, ^bb78, ^bb1(%c80_i8_115 : i8)
  ^bb78:  // pred: ^bb77
    %318 = arith.subi %316, %c3_i64_114 : i64
    llvm.store %318, %315 : i64, !llvm.ptr
    cf.br ^bb76
  ^bb79:  // pred: ^bb80
    %c0_i256_116 = arith.constant 0 : i256
    %319 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %320 = llvm.load %319 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_116, %320 : i256, !llvm.ptr
    %321 = llvm.getelementptr %320[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %321, %319 : !llvm.ptr, !llvm.ptr
    cf.br ^bb91
  ^bb80:  // pred: ^bb82
    %322 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_117 = arith.constant 1024 : i64
    %323 = llvm.load %322 : !llvm.ptr -> i64
    %c1_i64_118 = arith.constant 1 : i64
    %324 = arith.addi %323, %c1_i64_118 : i64
    llvm.store %324, %322 : i64, !llvm.ptr
    %325 = arith.cmpi ult, %c1024_i64_117, %324 : i64
    %c92_i8_119 = arith.constant 92 : i8
    cf.cond_br %325, ^bb1(%c92_i8_119 : i8), ^bb79
  ^bb81:  // pred: ^bb75
    %326 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %327 = llvm.load %326 : !llvm.ptr -> i64
    %c2_i64_120 = arith.constant 2 : i64
    %328 = arith.cmpi uge, %327, %c2_i64_120 : i64
    %c80_i8_121 = arith.constant 80 : i8
    cf.cond_br %328, ^bb82, ^bb1(%c80_i8_121 : i8)
  ^bb82:  // pred: ^bb81
    %329 = arith.subi %327, %c2_i64_120 : i64
    llvm.store %329, %326 : i64, !llvm.ptr
    cf.br ^bb80
  ^bb83:  // pred: ^bb90
    %330 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %331 = llvm.load %330 : !llvm.ptr -> !llvm.ptr
    %332 = llvm.getelementptr %331[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %333 = llvm.load %332 : !llvm.ptr -> i256
    llvm.store %332, %330 : !llvm.ptr, !llvm.ptr
    %334 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %335 = llvm.load %334 : !llvm.ptr -> !llvm.ptr
    %336 = llvm.getelementptr %335[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %337 = llvm.load %336 : !llvm.ptr -> i256
    llvm.store %336, %334 : !llvm.ptr, !llvm.ptr
    %338 = arith.trunci %333 : i256 to i64
    %c0_i64_122 = arith.constant 0 : i64
    %339 = arith.cmpi slt, %338, %c0_i64_122 : i64
    %c84_i8_123 = arith.constant 84 : i8
    cf.cond_br %339, ^bb1(%c84_i8_123 : i8), ^bb84
  ^bb84:  // pred: ^bb83
    %340 = arith.trunci %337 : i256 to i64
    %c0_i64_124 = arith.constant 0 : i64
    %341 = arith.cmpi slt, %340, %c0_i64_124 : i64
    %c84_i8_125 = arith.constant 84 : i8
    cf.cond_br %341, ^bb1(%c84_i8_125 : i8), ^bb85
  ^bb85:  // pred: ^bb84
    %342 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %343 = llvm.load %342 : !llvm.ptr -> i64
    %344 = arith.addi %340, %338 : i64
    %c0_i64_126 = arith.constant 0 : i64
    %345 = arith.cmpi slt, %344, %c0_i64_126 : i64
    %c84_i8_127 = arith.constant 84 : i8
    cf.cond_br %345, ^bb1(%c84_i8_127 : i8), ^bb86
  ^bb86:  // pred: ^bb85
    %c31_i64_128 = arith.constant 31 : i64
    %c32_i64_129 = arith.constant 32 : i64
    %346 = arith.addi %344, %c31_i64_128 : i64
    %347 = arith.divui %346, %c32_i64_129 : i64
    %c32_i64_130 = arith.constant 32 : i64
    %348 = arith.muli %347, %c32_i64_130 : i64
    %349 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %350 = llvm.load %349 : !llvm.ptr -> i64
    %c31_i64_131 = arith.constant 31 : i64
    %c32_i64_132 = arith.constant 32 : i64
    %351 = arith.addi %350, %c31_i64_131 : i64
    %352 = arith.divui %351, %c32_i64_132 : i64
    %353 = arith.muli %352, %c32_i64_130 : i64
    %354 = arith.cmpi ult, %353, %348 : i64
    %355 = scf.if %354 -> (i64) {
      %c3_i64_156 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %409 = arith.muli %352, %352 : i64
      %410 = arith.divui %409, %c512_i64 : i64
      %411 = arith.muli %352, %c3_i64_156 : i64
      %412 = arith.addi %410, %411 : i64
      %c3_i64_157 = arith.constant 3 : i64
      %c512_i64_158 = arith.constant 512 : i64
      %413 = arith.muli %347, %347 : i64
      %414 = arith.divui %413, %c512_i64_158 : i64
      %415 = arith.muli %347, %c3_i64_157 : i64
      %416 = arith.addi %414, %415 : i64
      %417 = arith.subi %416, %412 : i64
      scf.yield %417 : i64
    } else {
      %c0_i64_156 = arith.constant 0 : i64
      scf.yield %c0_i64_156 : i64
    }
    %356 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %357 = llvm.load %356 : !llvm.ptr -> i64
    %358 = arith.cmpi ult, %357, %355 : i64
    scf.if %358 {
    } else {
      %409 = arith.subi %357, %355 : i64
      llvm.store %409, %356 : i64, !llvm.ptr
    }
    %c80_i8_133 = arith.constant 80 : i8
    cf.cond_br %358, ^bb1(%c80_i8_133 : i8), ^bb87
  ^bb87:  // pred: ^bb86
    %359 = call @dora_fn_extend_memory(%arg0, %348) : (!llvm.ptr, i64) -> !llvm.ptr
    %360 = llvm.getelementptr %359[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %361 = llvm.load %360 : !llvm.ptr -> !llvm.ptr
    %362 = llvm.getelementptr %359[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %363 = llvm.load %362 : !llvm.ptr -> i8
    %c0_i8_134 = arith.constant 0 : i8
    %364 = arith.cmpi ne, %363, %c0_i8_134 : i8
    cf.cond_br %364, ^bb1(%363 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %365 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %361, %365 : !llvm.ptr, !llvm.ptr
    %366 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %348, %366 : i64, !llvm.ptr
    %c0_i8_135 = arith.constant 0 : i8
    %367 = call @dora_fn_write_result(%arg0, %338, %340, %343, %c0_i8_135) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c0_i8_135 : i8
  ^bb89:  // no predecessors
    cf.br ^bb93
  ^bb90:  // pred: ^bb92
    %368 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_136 = arith.constant 1024 : i64
    %369 = llvm.load %368 : !llvm.ptr -> i64
    %c-2_i64_137 = arith.constant -2 : i64
    %370 = arith.addi %369, %c-2_i64_137 : i64
    llvm.store %370, %368 : i64, !llvm.ptr
    %c2_i64_138 = arith.constant 2 : i64
    %371 = arith.cmpi ult, %369, %c2_i64_138 : i64
    %c91_i8_139 = arith.constant 91 : i8
    cf.cond_br %371, ^bb1(%c91_i8_139 : i8), ^bb83
  ^bb91:  // pred: ^bb79
    %372 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %373 = llvm.load %372 : !llvm.ptr -> i64
    %c0_i64_140 = arith.constant 0 : i64
    %374 = arith.cmpi uge, %373, %c0_i64_140 : i64
    %c80_i8_141 = arith.constant 80 : i8
    cf.cond_br %374, ^bb92, ^bb1(%c80_i8_141 : i8)
  ^bb92:  // pred: ^bb91
    %375 = arith.subi %373, %c0_i64_140 : i64
    llvm.store %375, %372 : i64, !llvm.ptr
    cf.br ^bb90
  ^bb93:  // pred: ^bb89
    %c0_i64_142 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %376 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %377 = llvm.load %376 : !llvm.ptr -> i64
    %378 = call @dora_fn_write_result(%arg0, %c0_i64_142, %c0_i64_142, %377, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb94:  // pred: ^bb50
    %c49152_i64 = arith.constant 49152 : i64
    %379 = arith.cmpi ugt, %197, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %379, ^bb1(%c100_i8 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %c31_i64_143 = arith.constant 31 : i64
    %c32_i64_144 = arith.constant 32 : i64
    %380 = arith.addi %197, %c31_i64_143 : i64
    %381 = arith.divui %380, %c32_i64_144 : i64
    %c2_i64_145 = arith.constant 2 : i64
    %382 = arith.muli %381, %c2_i64_145 : i64
    %383 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %384 = llvm.load %383 : !llvm.ptr -> i64
    %385 = arith.cmpi ult, %384, %382 : i64
    scf.if %385 {
    } else {
      %409 = arith.subi %384, %382 : i64
      llvm.store %409, %383 : i64, !llvm.ptr
    }
    %c80_i8_146 = arith.constant 80 : i8
    cf.cond_br %385, ^bb1(%c80_i8_146 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %386 = arith.addi %195, %197 : i64
    %c0_i64_147 = arith.constant 0 : i64
    %387 = arith.cmpi slt, %386, %c0_i64_147 : i64
    %c84_i8_148 = arith.constant 84 : i8
    cf.cond_br %387, ^bb1(%c84_i8_148 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %c31_i64_149 = arith.constant 31 : i64
    %c32_i64_150 = arith.constant 32 : i64
    %388 = arith.addi %386, %c31_i64_149 : i64
    %389 = arith.divui %388, %c32_i64_150 : i64
    %c32_i64_151 = arith.constant 32 : i64
    %390 = arith.muli %389, %c32_i64_151 : i64
    %391 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %392 = llvm.load %391 : !llvm.ptr -> i64
    %c31_i64_152 = arith.constant 31 : i64
    %c32_i64_153 = arith.constant 32 : i64
    %393 = arith.addi %392, %c31_i64_152 : i64
    %394 = arith.divui %393, %c32_i64_153 : i64
    %395 = arith.muli %394, %c32_i64_151 : i64
    %396 = arith.cmpi ult, %395, %390 : i64
    %397 = scf.if %396 -> (i64) {
      %c3_i64_156 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %409 = arith.muli %394, %394 : i64
      %410 = arith.divui %409, %c512_i64 : i64
      %411 = arith.muli %394, %c3_i64_156 : i64
      %412 = arith.addi %410, %411 : i64
      %c3_i64_157 = arith.constant 3 : i64
      %c512_i64_158 = arith.constant 512 : i64
      %413 = arith.muli %389, %389 : i64
      %414 = arith.divui %413, %c512_i64_158 : i64
      %415 = arith.muli %389, %c3_i64_157 : i64
      %416 = arith.addi %414, %415 : i64
      %417 = arith.subi %416, %412 : i64
      scf.yield %417 : i64
    } else {
      %c0_i64_156 = arith.constant 0 : i64
      scf.yield %c0_i64_156 : i64
    }
    %398 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %399 = llvm.load %398 : !llvm.ptr -> i64
    %400 = arith.cmpi ult, %399, %397 : i64
    scf.if %400 {
    } else {
      %409 = arith.subi %399, %397 : i64
      llvm.store %409, %398 : i64, !llvm.ptr
    }
    %c80_i8_154 = arith.constant 80 : i8
    cf.cond_br %400, ^bb1(%c80_i8_154 : i8), ^bb98
  ^bb98:  // pred: ^bb97
    %401 = call @dora_fn_extend_memory(%arg0, %390) : (!llvm.ptr, i64) -> !llvm.ptr
    %402 = llvm.getelementptr %401[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %403 = llvm.load %402 : !llvm.ptr -> !llvm.ptr
    %404 = llvm.getelementptr %401[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %405 = llvm.load %404 : !llvm.ptr -> i8
    %c0_i8_155 = arith.constant 0 : i8
    %406 = arith.cmpi ne, %405, %c0_i8_155 : i8
    cf.cond_br %406, ^bb1(%405 : i8), ^bb99
  ^bb99:  // pred: ^bb98
    %407 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %403, %407 : !llvm.ptr, !llvm.ptr
    %408 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %390, %408 : i64, !llvm.ptr
    cf.br ^bb51
  }
}
