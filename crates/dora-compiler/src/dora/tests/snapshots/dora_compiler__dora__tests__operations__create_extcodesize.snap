---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 29 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c32_i64 = arith.constant 32 : i64
    %37 = arith.addi %36, %c32_i64 : i64
    %c0_i64_4 = arith.constant 0 : i64
    %38 = arith.cmpi slt, %37, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %38, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_5 = arith.constant 32 : i64
    %39 = arith.addi %37, %c31_i64 : i64
    %40 = arith.divui %39, %c32_i64_5 : i64
    %41 = arith.muli %40, %c32_i64_5 : i64
    %42 = call @dora_fn_extend_memory(%arg0, %41) : (!llvm.ptr, i64) -> !llvm.ptr
    %43 = llvm.getelementptr %42[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %44 = llvm.load %43 : !llvm.ptr -> !llvm.ptr
    %45 = llvm.getelementptr %42[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %46 = llvm.load %45 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %47 = arith.cmpi ne, %46, %c0_i8 : i8
    cf.cond_br %47, ^bb1(%46 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %48 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %44, %48 : !llvm.ptr, !llvm.ptr
    %49 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %41, %49 : i64, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %51 = llvm.load %50 : !llvm.ptr -> !llvm.ptr
    %52 = llvm.getelementptr %51[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %53 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %53, %52 {alignment = 1 : i64} : i256, !llvm.ptr
    %54 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_6 = arith.constant 1 : i64
    %55 = arith.addi %54, %c1_i64_6 : i64
    llvm.store %55, %9 : i64, !llvm.ptr
    %56 = arith.cmpi ult, %c1024_i64, %55 : i64
    %c92_i8_7 = arith.constant 92 : i8
    cf.cond_br %56, ^bb1(%c92_i8_7 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %c170141183460469231731687303715884105727_i256_8 = arith.constant 170141183460469231731687303715884105727 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_8, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    %60 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_9 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_9 : i64
    llvm.store %61, %9 : i64, !llvm.ptr
    %62 = arith.cmpi ult, %c1024_i64, %61 : i64
    %c92_i8_10 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_10 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c32_i256 = arith.constant 32 : i256
    %63 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %64 : i256, !llvm.ptr
    %65 = llvm.getelementptr %64[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %65, %63 : !llvm.ptr, !llvm.ptr
    %66 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_11 = arith.constant -2 : i64
    %67 = arith.addi %66, %c-2_i64_11 : i64
    llvm.store %67, %9 : i64, !llvm.ptr
    %c2_i64_12 = arith.constant 2 : i64
    %68 = arith.cmpi ult, %66, %c2_i64_12 : i64
    %c91_i8_13 = arith.constant 91 : i8
    cf.cond_br %68, ^bb1(%c91_i8_13 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %69 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.getelementptr %70[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %72 = llvm.load %71 : !llvm.ptr -> i256
    llvm.store %71, %69 : !llvm.ptr, !llvm.ptr
    %73 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> !llvm.ptr
    %75 = llvm.getelementptr %74[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %76 = llvm.load %75 : !llvm.ptr -> i256
    llvm.store %75, %73 : !llvm.ptr, !llvm.ptr
    %77 = arith.trunci %72 : i256 to i64
    %c32_i64_14 = arith.constant 32 : i64
    %78 = arith.addi %77, %c32_i64_14 : i64
    %c0_i64_15 = arith.constant 0 : i64
    %79 = arith.cmpi slt, %78, %c0_i64_15 : i64
    %c84_i8_16 = arith.constant 84 : i8
    cf.cond_br %79, ^bb1(%c84_i8_16 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %c31_i64_17 = arith.constant 31 : i64
    %c32_i64_18 = arith.constant 32 : i64
    %80 = arith.addi %78, %c31_i64_17 : i64
    %81 = arith.divui %80, %c32_i64_18 : i64
    %82 = arith.muli %81, %c32_i64_18 : i64
    %83 = call @dora_fn_extend_memory(%arg0, %82) : (!llvm.ptr, i64) -> !llvm.ptr
    %84 = llvm.getelementptr %83[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %85 = llvm.load %84 : !llvm.ptr -> !llvm.ptr
    %86 = llvm.getelementptr %83[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %87 = llvm.load %86 : !llvm.ptr -> i8
    %c0_i8_19 = arith.constant 0 : i8
    %88 = arith.cmpi ne, %87, %c0_i8_19 : i8
    cf.cond_br %88, ^bb1(%87 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %89 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %85, %89 : !llvm.ptr, !llvm.ptr
    %90 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %82, %90 : i64, !llvm.ptr
    %91 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %92 = llvm.load %91 : !llvm.ptr -> !llvm.ptr
    %93 = llvm.getelementptr %92[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %94 = llvm.intr.bswap(%76)  : (i256) -> i256
    llvm.store %94, %93 {alignment = 1 : i64} : i256, !llvm.ptr
    %95 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_20 = arith.constant 1 : i64
    %96 = arith.addi %95, %c1_i64_20 : i64
    llvm.store %96, %9 : i64, !llvm.ptr
    %97 = arith.cmpi ult, %c1024_i64, %96 : i64
    %c92_i8_21 = arith.constant 92 : i8
    cf.cond_br %97, ^bb1(%c92_i8_21 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c41_i256 = arith.constant 41 : i256
    %98 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> !llvm.ptr
    llvm.store %c41_i256, %99 : i256, !llvm.ptr
    %100 = llvm.getelementptr %99[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %100, %98 : !llvm.ptr, !llvm.ptr
    %101 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_22 = arith.constant 1 : i64
    %102 = arith.addi %101, %c1_i64_22 : i64
    llvm.store %102, %9 : i64, !llvm.ptr
    %103 = arith.cmpi ult, %c1024_i64, %102 : i64
    %c92_i8_23 = arith.constant 92 : i8
    cf.cond_br %103, ^bb1(%c92_i8_23 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %c0_i256_24 = arith.constant 0 : i256
    %104 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_24, %105 : i256, !llvm.ptr
    %106 = llvm.getelementptr %105[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %106, %104 : !llvm.ptr, !llvm.ptr
    %107 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %108 = arith.addi %107, %c1_i64_25 : i64
    llvm.store %108, %9 : i64, !llvm.ptr
    %109 = arith.cmpi ult, %c1024_i64, %108 : i64
    %c92_i8_26 = arith.constant 92 : i8
    cf.cond_br %109, ^bb1(%c92_i8_26 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %c0_i256_27 = arith.constant 0 : i256
    %110 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_27, %111 : i256, !llvm.ptr
    %112 = llvm.getelementptr %111[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %112, %110 : !llvm.ptr, !llvm.ptr
    %113 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_28 = arith.constant -2 : i64
    %114 = arith.addi %113, %c-2_i64_28 : i64
    llvm.store %114, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %115 = arith.cmpi ult, %113, %c3_i64 : i64
    %c91_i8_29 = arith.constant 91 : i8
    cf.cond_br %115, ^bb1(%c91_i8_29 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %116 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %117 = llvm.load %116 : !llvm.ptr -> !llvm.ptr
    %118 = llvm.getelementptr %117[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %119 = llvm.load %118 : !llvm.ptr -> i256
    llvm.store %118, %116 : !llvm.ptr, !llvm.ptr
    %120 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %121 = llvm.load %120 : !llvm.ptr -> !llvm.ptr
    %122 = llvm.getelementptr %121[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %123 = llvm.load %122 : !llvm.ptr -> i256
    llvm.store %122, %120 : !llvm.ptr, !llvm.ptr
    %124 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %125 = llvm.load %124 : !llvm.ptr -> !llvm.ptr
    %126 = llvm.getelementptr %125[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %127 = llvm.load %126 : !llvm.ptr -> i256
    llvm.store %126, %124 : !llvm.ptr, !llvm.ptr
    %128 = arith.trunci %123 : i256 to i64
    %129 = arith.trunci %127 : i256 to i64
    %130 = arith.addi %128, %129 : i64
    %c0_i64_30 = arith.constant 0 : i64
    %131 = arith.cmpi slt, %130, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %131, ^bb1(%c84_i8_31 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %c31_i64_32 = arith.constant 31 : i64
    %c32_i64_33 = arith.constant 32 : i64
    %132 = arith.addi %130, %c31_i64_32 : i64
    %133 = arith.divui %132, %c32_i64_33 : i64
    %134 = arith.muli %133, %c32_i64_33 : i64
    %135 = call @dora_fn_extend_memory(%arg0, %134) : (!llvm.ptr, i64) -> !llvm.ptr
    %136 = llvm.getelementptr %135[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %135[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %139 = llvm.load %138 : !llvm.ptr -> i8
    %c0_i8_34 = arith.constant 0 : i8
    %140 = arith.cmpi ne, %139, %c0_i8_34 : i8
    cf.cond_br %140, ^bb1(%139 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %141 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %137, %141 : !llvm.ptr, !llvm.ptr
    %142 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %134, %142 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %143 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %119, %143 {alignment = 1 : i64} : i256, !llvm.ptr
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c1_i64_35 = arith.constant 1 : i64
    %146 = llvm.alloca %c1_i64_35 x i64 : (i64) -> !llvm.ptr
    llvm.store %145, %146 {alignment = 1 : i64} : i64, !llvm.ptr
    %147 = call @dora_fn_create(%arg0, %129, %128, %143, %146) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %148 = llvm.getelementptr %147[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %149 = llvm.load %148 : !llvm.ptr -> i8
    %150 = llvm.getelementptr %147[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %151 = llvm.load %150 : !llvm.ptr -> i8
    %c0_i8_36 = arith.constant 0 : i8
    %152 = arith.cmpi ne, %151, %c0_i8_36 : i8
    cf.cond_br %152, ^bb1(%151 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i8_37 = arith.constant 0 : i8
    %153 = arith.cmpi ne, %c0_i8_37, %149 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %153, ^bb1(%c94_i8 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %154 = llvm.load %143 : !llvm.ptr -> i256
    %155 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %156 = llvm.load %155 : !llvm.ptr -> !llvm.ptr
    llvm.store %154, %156 : i256, !llvm.ptr
    %157 = llvm.getelementptr %156[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %157, %155 : !llvm.ptr, !llvm.ptr
    %158 = llvm.load %9 : !llvm.ptr -> i64
    %c0_i64_38 = arith.constant 0 : i64
    %159 = arith.addi %158, %c0_i64_38 : i64
    llvm.store %159, %9 : i64, !llvm.ptr
    %c1_i64_39 = arith.constant 1 : i64
    %160 = arith.cmpi ult, %158, %c1_i64_39 : i64
    %c91_i8_40 = arith.constant 91 : i8
    cf.cond_br %160, ^bb1(%c91_i8_40 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %161 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %162 = llvm.load %161 : !llvm.ptr -> !llvm.ptr
    %163 = llvm.getelementptr %162[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %164 = llvm.load %163 : !llvm.ptr -> i256
    llvm.store %163, %161 : !llvm.ptr, !llvm.ptr
    %c1_i256_41 = arith.constant 1 : i256
    %165 = llvm.alloca %c1_i256_41 x i256 : (i256) -> !llvm.ptr
    llvm.store %164, %165 {alignment = 1 : i64} : i256, !llvm.ptr
    %166 = call @dora_fn_extcodesize(%arg0, %165) : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %167 = llvm.getelementptr %166[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %168 = llvm.load %167 : !llvm.ptr -> i64
    %169 = arith.extui %168 : i64 to i256
    %170 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> !llvm.ptr
    llvm.store %169, %171 : i256, !llvm.ptr
    %172 = llvm.getelementptr %171[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %172, %170 : !llvm.ptr, !llvm.ptr
    %173 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_42 = arith.constant 1 : i64
    %174 = arith.addi %173, %c1_i64_42 : i64
    llvm.store %174, %9 : i64, !llvm.ptr
    %175 = arith.cmpi ult, %c1024_i64, %174 : i64
    %c92_i8_43 = arith.constant 92 : i8
    cf.cond_br %175, ^bb1(%c92_i8_43 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_44 = arith.constant 0 : i256
    %176 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %177 = llvm.load %176 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_44, %177 : i256, !llvm.ptr
    %178 = llvm.getelementptr %177[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %178, %176 : !llvm.ptr, !llvm.ptr
    %179 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_45 = arith.constant -2 : i64
    %180 = arith.addi %179, %c-2_i64_45 : i64
    llvm.store %180, %9 : i64, !llvm.ptr
    %c2_i64_46 = arith.constant 2 : i64
    %181 = arith.cmpi ult, %179, %c2_i64_46 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %181, ^bb1(%c91_i8_47 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %182 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %183 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    %184 = llvm.getelementptr %183[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %185 = llvm.load %184 : !llvm.ptr -> i256
    llvm.store %184, %182 : !llvm.ptr, !llvm.ptr
    %186 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %187 = llvm.load %186 : !llvm.ptr -> !llvm.ptr
    %188 = llvm.getelementptr %187[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %189 = llvm.load %188 : !llvm.ptr -> i256
    llvm.store %188, %186 : !llvm.ptr, !llvm.ptr
    %190 = arith.trunci %185 : i256 to i64
    %c32_i64_48 = arith.constant 32 : i64
    %191 = arith.addi %190, %c32_i64_48 : i64
    %c0_i64_49 = arith.constant 0 : i64
    %192 = arith.cmpi slt, %191, %c0_i64_49 : i64
    %c84_i8_50 = arith.constant 84 : i8
    cf.cond_br %192, ^bb1(%c84_i8_50 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %c31_i64_51 = arith.constant 31 : i64
    %c32_i64_52 = arith.constant 32 : i64
    %193 = arith.addi %191, %c31_i64_51 : i64
    %194 = arith.divui %193, %c32_i64_52 : i64
    %195 = arith.muli %194, %c32_i64_52 : i64
    %196 = call @dora_fn_extend_memory(%arg0, %195) : (!llvm.ptr, i64) -> !llvm.ptr
    %197 = llvm.getelementptr %196[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %198 = llvm.load %197 : !llvm.ptr -> !llvm.ptr
    %199 = llvm.getelementptr %196[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %200 = llvm.load %199 : !llvm.ptr -> i8
    %c0_i8_53 = arith.constant 0 : i8
    %201 = arith.cmpi ne, %200, %c0_i8_53 : i8
    cf.cond_br %201, ^bb1(%200 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %202 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %198, %202 : !llvm.ptr, !llvm.ptr
    %203 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %195, %203 : i64, !llvm.ptr
    %204 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> !llvm.ptr
    %206 = llvm.getelementptr %205[%190] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %207 = llvm.intr.bswap(%189)  : (i256) -> i256
    llvm.store %207, %206 {alignment = 1 : i64} : i256, !llvm.ptr
    %208 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_54 = arith.constant 1 : i64
    %209 = arith.addi %208, %c1_i64_54 : i64
    llvm.store %209, %9 : i64, !llvm.ptr
    %210 = arith.cmpi ult, %c1024_i64, %209 : i64
    %c92_i8_55 = arith.constant 92 : i8
    cf.cond_br %210, ^bb1(%c92_i8_55 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %c32_i256_56 = arith.constant 32 : i256
    %211 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %212 = llvm.load %211 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_56, %212 : i256, !llvm.ptr
    %213 = llvm.getelementptr %212[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %213, %211 : !llvm.ptr, !llvm.ptr
    %214 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_57 = arith.constant 1 : i64
    %215 = arith.addi %214, %c1_i64_57 : i64
    llvm.store %215, %9 : i64, !llvm.ptr
    %216 = arith.cmpi ult, %c1024_i64, %215 : i64
    %c92_i8_58 = arith.constant 92 : i8
    cf.cond_br %216, ^bb1(%c92_i8_58 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %c0_i256_59 = arith.constant 0 : i256
    %217 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %218 = llvm.load %217 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_59, %218 : i256, !llvm.ptr
    %219 = llvm.getelementptr %218[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %219, %217 : !llvm.ptr, !llvm.ptr
    %220 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_60 = arith.constant -2 : i64
    %221 = arith.addi %220, %c-2_i64_60 : i64
    llvm.store %221, %9 : i64, !llvm.ptr
    %c2_i64_61 = arith.constant 2 : i64
    %222 = arith.cmpi ult, %220, %c2_i64_61 : i64
    %c91_i8_62 = arith.constant 91 : i8
    cf.cond_br %222, ^bb1(%c91_i8_62 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %223 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %224 = llvm.load %223 : !llvm.ptr -> !llvm.ptr
    %225 = llvm.getelementptr %224[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %226 = llvm.load %225 : !llvm.ptr -> i256
    llvm.store %225, %223 : !llvm.ptr, !llvm.ptr
    %227 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %228 = llvm.load %227 : !llvm.ptr -> !llvm.ptr
    %229 = llvm.getelementptr %228[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %230 = llvm.load %229 : !llvm.ptr -> i256
    llvm.store %229, %227 : !llvm.ptr, !llvm.ptr
    %231 = arith.trunci %226 : i256 to i64
    %232 = arith.trunci %230 : i256 to i64
    %233 = arith.addi %232, %231 : i64
    %234 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %235 = llvm.load %234 : !llvm.ptr -> i64
    %c0_i64_63 = arith.constant 0 : i64
    %236 = arith.cmpi slt, %233, %c0_i64_63 : i64
    %c84_i8_64 = arith.constant 84 : i8
    cf.cond_br %236, ^bb1(%c84_i8_64 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c31_i64_65 = arith.constant 31 : i64
    %c32_i64_66 = arith.constant 32 : i64
    %237 = arith.addi %233, %c31_i64_65 : i64
    %238 = arith.divui %237, %c32_i64_66 : i64
    %239 = arith.muli %238, %c32_i64_66 : i64
    %240 = call @dora_fn_extend_memory(%arg0, %239) : (!llvm.ptr, i64) -> !llvm.ptr
    %241 = llvm.getelementptr %240[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %242 = llvm.load %241 : !llvm.ptr -> !llvm.ptr
    %243 = llvm.getelementptr %240[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %244 = llvm.load %243 : !llvm.ptr -> i8
    %c0_i8_67 = arith.constant 0 : i8
    %245 = arith.cmpi ne, %244, %c0_i8_67 : i8
    cf.cond_br %245, ^bb1(%244 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %246 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %242, %246 : !llvm.ptr, !llvm.ptr
    %247 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %239, %247 : i64, !llvm.ptr
    %c0_i8_68 = arith.constant 0 : i8
    %248 = call @dora_fn_write_result(%arg0, %231, %232, %235, %c0_i8_68) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c0_i8_68 : i8
  ^bb31:  // no predecessors
    cf.br ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i64_69 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %249 = call @dora_fn_write_result(%arg0, %c0_i64_69, %c0_i64_69, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
