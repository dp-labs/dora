---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %1 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%2: i8):  // 69 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb38, ^bb39, ^bb41, ^bb42, ^bb43, ^bb45, ^bb46, ^bb47, ^bb49, ^bb50, ^bb52, ^bb54, ^bb55, ^bb58, ^bb59, ^bb63, ^bb64, ^bb67, ^bb68, ^bb71, ^bb72, ^bb74, ^bb75, ^bb79, ^bb80, ^bb83, ^bb84, ^bb85, ^bb88, ^bb89, ^bb91, ^bb92, ^bb93, ^bb96, ^bb97, ^bb99, ^bb100, ^bb101, ^bb102, ^bb103, ^bb106, ^bb107, ^bb109, ^bb110, ^bb111, ^bb114, ^bb115, ^bb117, ^bb118, ^bb119, ^bb122, ^bb123
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %4, %2) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %2 : i8
  ^bb2(%5: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %5 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c170141183460469231731687303715884105727_i256 = arith.constant 170141183460469231731687303715884105727 : i256
    %6 = llvm.load %arg3 : !llvm.ptr -> i64
    %7 = llvm.getelementptr %arg2[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %8 = arith.addi %6, %c1_i64 : i64
    llvm.store %8, %arg3 : i64, !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256, %7 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %9 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %10 = arith.addi %9, %c1_i64_1 : i64
    %11 = arith.cmpi ult, %c1024_i64, %10 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %11, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %12 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %13 = llvm.load %12 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %14 = arith.cmpi uge, %13, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %14, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %15 = arith.subi %13, %c3_i64 : i64
    llvm.store %15, %12 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %16 = llvm.load %arg3 : !llvm.ptr -> i64
    %17 = llvm.getelementptr %arg2[%16] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %18 = arith.addi %16, %c1_i64_2 : i64
    llvm.store %18, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %17 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %19 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_4 : i64
    %21 = arith.cmpi ult, %c1024_i64_3, %20 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %22 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %24 = arith.cmpi uge, %23, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %24, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %25 = arith.subi %23, %c3_i64_6 : i64
    llvm.store %25, %22 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %26 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %27 = arith.subi %26, %c1_i64_8 : i64
    %28 = llvm.getelementptr %arg2[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %27, %arg3 : i64, !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> i256
    %30 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_9 = arith.constant 1 : i64
    %31 = arith.subi %30, %c1_i64_9 : i64
    %32 = llvm.getelementptr %arg2[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %31, %arg3 : i64, !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %34 = arith.cmpi ne, %c32_i64, %c0_i64_10 : i64
    cf.cond_br %34, ^bb83, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb87
    %35 = arith.trunci %29 : i256 to i64
    %36 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %39 = llvm.intr.bswap(%33)  : (i256) -> i256
    llvm.store %39, %38 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_11 = arith.constant 1024 : i64
    %40 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %41 = arith.addi %40, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %42 = arith.cmpi ult, %40, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %42, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %43 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %44 = llvm.load %43 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %45 = arith.cmpi uge, %44, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %45, ^bb15, ^bb1(%c80_i8_13 : i8)
  ^bb15:  // pred: ^bb14
    %46 = arith.subi %44, %c3_i64_12 : i64
    llvm.store %46, %43 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c170141183460469231731687303715884105727_i256_14 = arith.constant 170141183460469231731687303715884105727 : i256
    %47 = llvm.load %arg3 : !llvm.ptr -> i64
    %48 = llvm.getelementptr %arg2[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_15 = arith.constant 1 : i64
    %49 = arith.addi %47, %c1_i64_15 : i64
    llvm.store %49, %arg3 : i64, !llvm.ptr
    llvm.store %c170141183460469231731687303715884105727_i256_14, %48 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_16 = arith.constant 1024 : i64
    %50 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_17 = arith.constant 1 : i64
    %51 = arith.addi %50, %c1_i64_17 : i64
    %52 = arith.cmpi ult, %c1024_i64_16, %51 : i64
    %c92_i8_18 = arith.constant 92 : i8
    cf.cond_br %52, ^bb1(%c92_i8_18 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %53 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %c3_i64_19 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %55 = arith.cmpi uge, %54, %c3_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %55, ^bb19, ^bb1(%c80_i8_20 : i8)
  ^bb19:  // pred: ^bb18
    %56 = arith.subi %54, %c3_i64_19 : i64
    llvm.store %56, %53 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c32_i256 = arith.constant 32 : i256
    %57 = llvm.load %arg3 : !llvm.ptr -> i64
    %58 = llvm.getelementptr %arg2[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_21 = arith.constant 1 : i64
    %59 = arith.addi %57, %c1_i64_21 : i64
    llvm.store %59, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256, %58 : i256, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %c1024_i64_22 = arith.constant 1024 : i64
    %60 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_23 : i64
    %62 = arith.cmpi ult, %c1024_i64_22, %61 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_24 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %63 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %65 = arith.cmpi uge, %64, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %65, ^bb23, ^bb1(%c80_i8_26 : i8)
  ^bb23:  // pred: ^bb22
    %66 = arith.subi %64, %c3_i64_25 : i64
    llvm.store %66, %63 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %67 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_27 = arith.constant 1 : i64
    %68 = arith.subi %67, %c1_i64_27 : i64
    %69 = llvm.getelementptr %arg2[%68] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %68, %arg3 : i64, !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> i256
    %71 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_28 = arith.constant 1 : i64
    %72 = arith.subi %71, %c1_i64_28 : i64
    %73 = llvm.getelementptr %arg2[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %72, %arg3 : i64, !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> i256
    %c32_i64_29 = arith.constant 32 : i64
    %c0_i64_30 = arith.constant 0 : i64
    %75 = arith.cmpi ne, %c32_i64_29, %c0_i64_30 : i64
    cf.cond_br %75, ^bb91, ^bb25
  ^bb25:  // 2 preds: ^bb24, ^bb95
    %76 = arith.trunci %70 : i256 to i64
    %77 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> !llvm.ptr
    %79 = llvm.getelementptr %78[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %80 = llvm.intr.bswap(%74)  : (i256) -> i256
    llvm.store %80, %79 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %c1024_i64_31 = arith.constant 1024 : i64
    %81 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_32 = arith.constant -2 : i64
    %82 = arith.addi %81, %c-2_i64_32 : i64
    %c2_i64_33 = arith.constant 2 : i64
    %83 = arith.cmpi ult, %81, %c2_i64_33 : i64
    %c91_i8_34 = arith.constant 91 : i8
    cf.cond_br %83, ^bb1(%c91_i8_34 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %84 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c3_i64_35 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %86 = arith.cmpi uge, %85, %c3_i64_35 : i64
    %c80_i8_36 = arith.constant 80 : i8
    cf.cond_br %86, ^bb28, ^bb1(%c80_i8_36 : i8)
  ^bb28:  // pred: ^bb27
    %87 = arith.subi %85, %c3_i64_35 : i64
    llvm.store %87, %84 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c41_i256 = arith.constant 41 : i256
    %88 = llvm.load %arg3 : !llvm.ptr -> i64
    %89 = llvm.getelementptr %arg2[%88] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_37 = arith.constant 1 : i64
    %90 = arith.addi %88, %c1_i64_37 : i64
    llvm.store %90, %arg3 : i64, !llvm.ptr
    llvm.store %c41_i256, %89 : i256, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %c1024_i64_38 = arith.constant 1024 : i64
    %91 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_39 = arith.constant 1 : i64
    %92 = arith.addi %91, %c1_i64_39 : i64
    %93 = arith.cmpi ult, %c1024_i64_38, %92 : i64
    %c92_i8_40 = arith.constant 92 : i8
    cf.cond_br %93, ^bb1(%c92_i8_40 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %94 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %95 = llvm.load %94 : !llvm.ptr -> i64
    %c3_i64_41 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %96 = arith.cmpi uge, %95, %c3_i64_41 : i64
    %c80_i8_42 = arith.constant 80 : i8
    cf.cond_br %96, ^bb32, ^bb1(%c80_i8_42 : i8)
  ^bb32:  // pred: ^bb31
    %97 = arith.subi %95, %c3_i64_41 : i64
    llvm.store %97, %94 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %c0_i256_43 = arith.constant 0 : i256
    %98 = llvm.load %arg3 : !llvm.ptr -> i64
    %99 = llvm.getelementptr %arg2[%98] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_44 = arith.constant 1 : i64
    %100 = arith.addi %98, %c1_i64_44 : i64
    llvm.store %100, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_43, %99 : i256, !llvm.ptr
    cf.br ^bb39
  ^bb34:  // pred: ^bb36
    %c1024_i64_45 = arith.constant 1024 : i64
    %101 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %102 = arith.addi %101, %c1_i64_46 : i64
    %103 = arith.cmpi ult, %c1024_i64_45, %102 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %103, ^bb1(%c92_i8_47 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %104 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> i64
    %c3_i64_48 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %106 = arith.cmpi uge, %105, %c3_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %106, ^bb36, ^bb1(%c80_i8_49 : i8)
  ^bb36:  // pred: ^bb35
    %107 = arith.subi %105, %c3_i64_48 : i64
    llvm.store %107, %104 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb38
    %c0_i256_50 = arith.constant 0 : i256
    %108 = llvm.load %arg3 : !llvm.ptr -> i64
    %109 = llvm.getelementptr %arg2[%108] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_51 = arith.constant 1 : i64
    %110 = arith.addi %108, %c1_i64_51 : i64
    llvm.store %110, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_50, %109 : i256, !llvm.ptr
    cf.br ^bb50
  ^bb38:  // pred: ^bb40
    %c1024_i64_52 = arith.constant 1024 : i64
    %111 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_53 = arith.constant 1 : i64
    %112 = arith.addi %111, %c1_i64_53 : i64
    %113 = arith.cmpi ult, %c1024_i64_52, %112 : i64
    %c92_i8_54 = arith.constant 92 : i8
    cf.cond_br %113, ^bb1(%c92_i8_54 : i8), ^bb37
  ^bb39:  // pred: ^bb33
    %114 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> i64
    %c3_i64_55 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %116 = arith.cmpi uge, %115, %c3_i64_55 : i64
    %c80_i8_56 = arith.constant 80 : i8
    cf.cond_br %116, ^bb40, ^bb1(%c80_i8_56 : i8)
  ^bb40:  // pred: ^bb39
    %117 = arith.subi %115, %c3_i64_55 : i64
    llvm.store %117, %114 : i64, !llvm.ptr
    cf.br ^bb38
  ^bb41:  // pred: ^bb49
    %118 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_57 = arith.constant 1 : i64
    %119 = arith.subi %118, %c1_i64_57 : i64
    %120 = llvm.getelementptr %arg2[%119] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %119, %arg3 : i64, !llvm.ptr
    %121 = llvm.load %120 : !llvm.ptr -> i256
    %122 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %123 = arith.subi %122, %c1_i64_58 : i64
    %124 = llvm.getelementptr %arg2[%123] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %123, %arg3 : i64, !llvm.ptr
    %125 = llvm.load %124 : !llvm.ptr -> i256
    %126 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %127 = arith.subi %126, %c1_i64_59 : i64
    %128 = llvm.getelementptr %arg2[%127] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %127, %arg3 : i64, !llvm.ptr
    %129 = llvm.load %128 : !llvm.ptr -> i256
    %130 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %131 = arith.cmpi ne, %130, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %131, ^bb1(%c87_i8 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %132 = arith.cmpi sgt, %129, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %132, ^bb1(%c84_i8 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %133 = arith.trunci %129 : i256 to i64
    %c0_i64_60 = arith.constant 0 : i64
    %134 = arith.cmpi slt, %133, %c0_i64_60 : i64
    %c84_i8_61 = arith.constant 84 : i8
    cf.cond_br %134, ^bb1(%c84_i8_61 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c0_i64_62 = arith.constant 0 : i64
    %135 = arith.cmpi ne, %133, %c0_i64_62 : i64
    cf.cond_br %135, ^bb99, ^bb45
  ^bb45:  // 2 preds: ^bb44, ^bb105
    %c32000_i64 = arith.constant 32000 : i64
    %136 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> i64
    %138 = arith.cmpi ult, %137, %c32000_i64 : i64
    scf.if %138 {
    } else {
      %439 = arith.subi %137, %c32000_i64 : i64
      llvm.store %439, %136 : i64, !llvm.ptr
    }
    %c80_i8_63 = arith.constant 80 : i8
    cf.cond_br %138, ^bb1(%c80_i8_63 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c1_i256 = arith.constant 1 : i256
    %139 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %121, %139 {alignment = 1 : i64} : i256, !llvm.ptr
    %140 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %142 = arith.trunci %125 : i256 to i64
    %143 = call @dora_fn_create(%arg0, %133, %142, %139, %141) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %144 = llvm.getelementptr %143[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %145 = llvm.load %144 : !llvm.ptr -> i8
    %c0_i8_64 = arith.constant 0 : i8
    %146 = arith.cmpi ne, %145, %c0_i8_64 : i8
    cf.cond_br %146, ^bb1(%145 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %147 = llvm.getelementptr %143[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %148 = llvm.load %147 : !llvm.ptr -> i64
    %149 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> i64
    %151 = arith.cmpi ult, %150, %148 : i64
    scf.if %151 {
    } else {
      %439 = arith.subi %150, %148 : i64
      llvm.store %439, %149 : i64, !llvm.ptr
    }
    %c80_i8_65 = arith.constant 80 : i8
    cf.cond_br %151, ^bb1(%c80_i8_65 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %152 = llvm.load %139 : !llvm.ptr -> i256
    %153 = llvm.load %arg3 : !llvm.ptr -> i64
    %154 = llvm.getelementptr %arg2[%153] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_66 = arith.constant 1 : i64
    %155 = arith.addi %153, %c1_i64_66 : i64
    llvm.store %155, %arg3 : i64, !llvm.ptr
    llvm.store %152, %154 : i256, !llvm.ptr
    cf.br ^bb55
  ^bb49:  // pred: ^bb51
    %c1024_i64_67 = arith.constant 1024 : i64
    %156 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_68 = arith.constant -2 : i64
    %157 = arith.addi %156, %c-2_i64_68 : i64
    %c3_i64_69 = arith.constant 3 : i64
    %158 = arith.cmpi ult, %156, %c3_i64_69 : i64
    %c91_i8_70 = arith.constant 91 : i8
    cf.cond_br %158, ^bb1(%c91_i8_70 : i8), ^bb41
  ^bb50:  // pred: ^bb37
    %159 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> i64
    %c0_i64_71 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %161 = arith.cmpi uge, %160, %c0_i64_71 : i64
    %c80_i8_72 = arith.constant 80 : i8
    cf.cond_br %161, ^bb51, ^bb1(%c80_i8_72 : i8)
  ^bb51:  // pred: ^bb50
    %162 = arith.subi %160, %c0_i64_71 : i64
    llvm.store %162, %159 : i64, !llvm.ptr
    cf.br ^bb49
  ^bb52:  // pred: ^bb54
    %163 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %164 = arith.subi %163, %c1_i64_73 : i64
    %165 = llvm.getelementptr %arg2[%164] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %164, %arg3 : i64, !llvm.ptr
    %166 = llvm.load %165 : !llvm.ptr -> i256
    %c1_i256_74 = arith.constant 1 : i256
    %167 = llvm.alloca %c1_i256_74 x i256 : (i256) -> !llvm.ptr
    llvm.store %166, %167 {alignment = 1 : i64} : i256, !llvm.ptr
    %168 = call @dora_fn_extcodesize(%arg0, %167) : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %169 = llvm.getelementptr %168[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %170 = llvm.load %169 : !llvm.ptr -> i64
    %171 = llvm.getelementptr %168[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %172 = llvm.load %171 : !llvm.ptr -> i64
    %173 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %175 = arith.cmpi ult, %174, %172 : i64
    scf.if %175 {
    } else {
      %439 = arith.subi %174, %172 : i64
      llvm.store %439, %173 : i64, !llvm.ptr
    }
    %c80_i8_75 = arith.constant 80 : i8
    cf.cond_br %175, ^bb1(%c80_i8_75 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %176 = arith.extui %170 : i64 to i256
    %177 = llvm.load %arg3 : !llvm.ptr -> i64
    %178 = llvm.getelementptr %arg2[%177] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_76 = arith.constant 1 : i64
    %179 = arith.addi %177, %c1_i64_76 : i64
    llvm.store %179, %arg3 : i64, !llvm.ptr
    llvm.store %176, %178 : i256, !llvm.ptr
    cf.br ^bb59
  ^bb54:  // pred: ^bb56
    %c1024_i64_77 = arith.constant 1024 : i64
    %180 = llvm.load %arg3 : !llvm.ptr -> i64
    %c0_i64_78 = arith.constant 0 : i64
    %181 = arith.addi %180, %c0_i64_78 : i64
    %c1_i64_79 = arith.constant 1 : i64
    %182 = arith.cmpi ult, %180, %c1_i64_79 : i64
    %c91_i8_80 = arith.constant 91 : i8
    cf.cond_br %182, ^bb1(%c91_i8_80 : i8), ^bb52
  ^bb55:  // pred: ^bb48
    %183 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> i64
    %c0_i64_81 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %185 = arith.cmpi uge, %184, %c0_i64_81 : i64
    %c80_i8_82 = arith.constant 80 : i8
    cf.cond_br %185, ^bb56, ^bb1(%c80_i8_82 : i8)
  ^bb56:  // pred: ^bb55
    %186 = arith.subi %184, %c0_i64_81 : i64
    llvm.store %186, %183 : i64, !llvm.ptr
    cf.br ^bb54
  ^bb57:  // pred: ^bb58
    %c0_i256_83 = arith.constant 0 : i256
    %187 = llvm.load %arg3 : !llvm.ptr -> i64
    %188 = llvm.getelementptr %arg2[%187] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_84 = arith.constant 1 : i64
    %189 = arith.addi %187, %c1_i64_84 : i64
    llvm.store %189, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_83, %188 : i256, !llvm.ptr
    cf.br ^bb64
  ^bb58:  // pred: ^bb60
    %c1024_i64_85 = arith.constant 1024 : i64
    %190 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_86 = arith.constant 1 : i64
    %191 = arith.addi %190, %c1_i64_86 : i64
    %192 = arith.cmpi ult, %c1024_i64_85, %191 : i64
    %c92_i8_87 = arith.constant 92 : i8
    cf.cond_br %192, ^bb1(%c92_i8_87 : i8), ^bb57
  ^bb59:  // pred: ^bb53
    %193 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> i64
    %c2_i64_88 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %195 = arith.cmpi uge, %194, %c2_i64_88 : i64
    %c80_i8_89 = arith.constant 80 : i8
    cf.cond_br %195, ^bb60, ^bb1(%c80_i8_89 : i8)
  ^bb60:  // pred: ^bb59
    %196 = arith.subi %194, %c2_i64_88 : i64
    llvm.store %196, %193 : i64, !llvm.ptr
    cf.br ^bb58
  ^bb61:  // pred: ^bb63
    %197 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_90 = arith.constant 1 : i64
    %198 = arith.subi %197, %c1_i64_90 : i64
    %199 = llvm.getelementptr %arg2[%198] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %198, %arg3 : i64, !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> i256
    %201 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_91 = arith.constant 1 : i64
    %202 = arith.subi %201, %c1_i64_91 : i64
    %203 = llvm.getelementptr %arg2[%202] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %202, %arg3 : i64, !llvm.ptr
    %204 = llvm.load %203 : !llvm.ptr -> i256
    %c32_i64_92 = arith.constant 32 : i64
    %c0_i64_93 = arith.constant 0 : i64
    %205 = arith.cmpi ne, %c32_i64_92, %c0_i64_93 : i64
    cf.cond_br %205, ^bb109, ^bb62
  ^bb62:  // 2 preds: ^bb61, ^bb113
    %206 = arith.trunci %200 : i256 to i64
    %207 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %208 = llvm.load %207 : !llvm.ptr -> !llvm.ptr
    %209 = llvm.getelementptr %208[%206] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %210 = llvm.intr.bswap(%204)  : (i256) -> i256
    llvm.store %210, %209 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb68
  ^bb63:  // pred: ^bb65
    %c1024_i64_94 = arith.constant 1024 : i64
    %211 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_95 = arith.constant -2 : i64
    %212 = arith.addi %211, %c-2_i64_95 : i64
    %c2_i64_96 = arith.constant 2 : i64
    %213 = arith.cmpi ult, %211, %c2_i64_96 : i64
    %c91_i8_97 = arith.constant 91 : i8
    cf.cond_br %213, ^bb1(%c91_i8_97 : i8), ^bb61
  ^bb64:  // pred: ^bb57
    %214 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %215 = llvm.load %214 : !llvm.ptr -> i64
    %c3_i64_98 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %216 = arith.cmpi uge, %215, %c3_i64_98 : i64
    %c80_i8_99 = arith.constant 80 : i8
    cf.cond_br %216, ^bb65, ^bb1(%c80_i8_99 : i8)
  ^bb65:  // pred: ^bb64
    %217 = arith.subi %215, %c3_i64_98 : i64
    llvm.store %217, %214 : i64, !llvm.ptr
    cf.br ^bb63
  ^bb66:  // pred: ^bb67
    %c32_i256_100 = arith.constant 32 : i256
    %218 = llvm.load %arg3 : !llvm.ptr -> i64
    %219 = llvm.getelementptr %arg2[%218] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_101 = arith.constant 1 : i64
    %220 = arith.addi %218, %c1_i64_101 : i64
    llvm.store %220, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256_100, %219 : i256, !llvm.ptr
    cf.br ^bb72
  ^bb67:  // pred: ^bb69
    %c1024_i64_102 = arith.constant 1024 : i64
    %221 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_103 = arith.constant 1 : i64
    %222 = arith.addi %221, %c1_i64_103 : i64
    %223 = arith.cmpi ult, %c1024_i64_102, %222 : i64
    %c92_i8_104 = arith.constant 92 : i8
    cf.cond_br %223, ^bb1(%c92_i8_104 : i8), ^bb66
  ^bb68:  // pred: ^bb62
    %224 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %225 = llvm.load %224 : !llvm.ptr -> i64
    %c3_i64_105 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %226 = arith.cmpi uge, %225, %c3_i64_105 : i64
    %c80_i8_106 = arith.constant 80 : i8
    cf.cond_br %226, ^bb69, ^bb1(%c80_i8_106 : i8)
  ^bb69:  // pred: ^bb68
    %227 = arith.subi %225, %c3_i64_105 : i64
    llvm.store %227, %224 : i64, !llvm.ptr
    cf.br ^bb67
  ^bb70:  // pred: ^bb71
    %c0_i256_107 = arith.constant 0 : i256
    %228 = llvm.load %arg3 : !llvm.ptr -> i64
    %229 = llvm.getelementptr %arg2[%228] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_108 = arith.constant 1 : i64
    %230 = arith.addi %228, %c1_i64_108 : i64
    llvm.store %230, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_107, %229 : i256, !llvm.ptr
    cf.br ^bb80
  ^bb71:  // pred: ^bb73
    %c1024_i64_109 = arith.constant 1024 : i64
    %231 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_110 = arith.constant 1 : i64
    %232 = arith.addi %231, %c1_i64_110 : i64
    %233 = arith.cmpi ult, %c1024_i64_109, %232 : i64
    %c92_i8_111 = arith.constant 92 : i8
    cf.cond_br %233, ^bb1(%c92_i8_111 : i8), ^bb70
  ^bb72:  // pred: ^bb66
    %234 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %235 = llvm.load %234 : !llvm.ptr -> i64
    %c2_i64_112 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %236 = arith.cmpi uge, %235, %c2_i64_112 : i64
    %c80_i8_113 = arith.constant 80 : i8
    cf.cond_br %236, ^bb73, ^bb1(%c80_i8_113 : i8)
  ^bb73:  // pred: ^bb72
    %237 = arith.subi %235, %c2_i64_112 : i64
    llvm.store %237, %234 : i64, !llvm.ptr
    cf.br ^bb71
  ^bb74:  // pred: ^bb79
    %238 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_114 = arith.constant 1 : i64
    %239 = arith.subi %238, %c1_i64_114 : i64
    %240 = llvm.getelementptr %arg2[%239] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %239, %arg3 : i64, !llvm.ptr
    %241 = llvm.load %240 : !llvm.ptr -> i256
    %242 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_115 = arith.constant 1 : i64
    %243 = arith.subi %242, %c1_i64_115 : i64
    %244 = llvm.getelementptr %arg2[%243] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %243, %arg3 : i64, !llvm.ptr
    %245 = llvm.load %244 : !llvm.ptr -> i256
    %c18446744073709551615_i256_116 = arith.constant 18446744073709551615 : i256
    %246 = arith.cmpi sgt, %245, %c18446744073709551615_i256_116 : i256
    %c84_i8_117 = arith.constant 84 : i8
    cf.cond_br %246, ^bb1(%c84_i8_117 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %247 = arith.trunci %245 : i256 to i64
    %c0_i64_118 = arith.constant 0 : i64
    %248 = arith.cmpi slt, %247, %c0_i64_118 : i64
    %c84_i8_119 = arith.constant 84 : i8
    cf.cond_br %248, ^bb1(%c84_i8_119 : i8), ^bb76
  ^bb76:  // pred: ^bb75
    %c0_i64_120 = arith.constant 0 : i64
    %249 = arith.cmpi ne, %247, %c0_i64_120 : i64
    cf.cond_br %249, ^bb117, ^bb77
  ^bb77:  // 2 preds: ^bb76, ^bb121
    %c0_i8_121 = arith.constant 0 : i8
    %250 = arith.trunci %241 : i256 to i64
    %251 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %252 = llvm.load %251 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %250, %247, %252, %c0_i8_121) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c0_i8_121 : i8
  ^bb78:  // no predecessors
    cf.br ^bb82
  ^bb79:  // pred: ^bb81
    %c1024_i64_122 = arith.constant 1024 : i64
    %253 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_123 = arith.constant -2 : i64
    %254 = arith.addi %253, %c-2_i64_123 : i64
    %c2_i64_124 = arith.constant 2 : i64
    %255 = arith.cmpi ult, %253, %c2_i64_124 : i64
    %c91_i8_125 = arith.constant 91 : i8
    cf.cond_br %255, ^bb1(%c91_i8_125 : i8), ^bb74
  ^bb80:  // pred: ^bb70
    %256 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %257 = llvm.load %256 : !llvm.ptr -> i64
    %c0_i64_126 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %258 = arith.cmpi uge, %257, %c0_i64_126 : i64
    %c80_i8_127 = arith.constant 80 : i8
    cf.cond_br %258, ^bb81, ^bb1(%c80_i8_127 : i8)
  ^bb81:  // pred: ^bb80
    %259 = arith.subi %257, %c0_i64_126 : i64
    llvm.store %259, %256 : i64, !llvm.ptr
    cf.br ^bb79
  ^bb82:  // pred: ^bb78
    %c0_i64_128 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %260 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %261 = llvm.load %260 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_128, %c0_i64_128, %261, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb83:  // pred: ^bb11
    %c18446744073709551615_i256_129 = arith.constant 18446744073709551615 : i256
    %262 = arith.cmpi sgt, %29, %c18446744073709551615_i256_129 : i256
    %c84_i8_130 = arith.constant 84 : i8
    cf.cond_br %262, ^bb1(%c84_i8_130 : i8), ^bb84
  ^bb84:  // pred: ^bb83
    %263 = arith.trunci %29 : i256 to i64
    %c0_i64_131 = arith.constant 0 : i64
    %264 = arith.cmpi slt, %263, %c0_i64_131 : i64
    %c84_i8_132 = arith.constant 84 : i8
    cf.cond_br %264, ^bb1(%c84_i8_132 : i8), ^bb85
  ^bb85:  // pred: ^bb84
    %265 = arith.addi %263, %c32_i64 : i64
    %c0_i64_133 = arith.constant 0 : i64
    %266 = arith.cmpi slt, %265, %c0_i64_133 : i64
    %c84_i8_134 = arith.constant 84 : i8
    cf.cond_br %266, ^bb1(%c84_i8_134 : i8), ^bb86
  ^bb86:  // pred: ^bb85
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_135 = arith.constant 32 : i64
    %267 = arith.addi %265, %c31_i64 : i64
    %268 = arith.divui %267, %c32_i64_135 : i64
    %c32_i64_136 = arith.constant 32 : i64
    %269 = arith.muli %268, %c32_i64_136 : i64
    %270 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %271 = llvm.load %270 : !llvm.ptr -> i64
    %c31_i64_137 = arith.constant 31 : i64
    %c32_i64_138 = arith.constant 32 : i64
    %272 = arith.addi %271, %c31_i64_137 : i64
    %273 = arith.divui %272, %c32_i64_138 : i64
    %274 = arith.muli %273, %c32_i64_136 : i64
    %275 = arith.cmpi ult, %274, %269 : i64
    cf.cond_br %275, ^bb88, ^bb87
  ^bb87:  // 2 preds: ^bb86, ^bb90
    cf.br ^bb12
  ^bb88:  // pred: ^bb86
    %c3_i64_139 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %276 = arith.muli %273, %273 : i64
    %277 = arith.divui %276, %c512_i64 : i64
    %278 = arith.muli %273, %c3_i64_139 : i64
    %279 = arith.addi %277, %278 : i64
    %c3_i64_140 = arith.constant 3 : i64
    %c512_i64_141 = arith.constant 512 : i64
    %280 = arith.muli %268, %268 : i64
    %281 = arith.divui %280, %c512_i64_141 : i64
    %282 = arith.muli %268, %c3_i64_140 : i64
    %283 = arith.addi %281, %282 : i64
    %284 = arith.subi %283, %279 : i64
    %285 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %286 = llvm.load %285 : !llvm.ptr -> i64
    %287 = arith.cmpi ult, %286, %284 : i64
    scf.if %287 {
    } else {
      %439 = arith.subi %286, %284 : i64
      llvm.store %439, %285 : i64, !llvm.ptr
    }
    %c80_i8_142 = arith.constant 80 : i8
    cf.cond_br %287, ^bb1(%c80_i8_142 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    %288 = call @dora_fn_extend_memory(%arg0, %269) : (!llvm.ptr, i64) -> !llvm.ptr
    %289 = llvm.getelementptr %288[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %290 = llvm.load %289 : !llvm.ptr -> !llvm.ptr
    %291 = llvm.getelementptr %288[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %292 = llvm.load %291 : !llvm.ptr -> i8
    %c0_i8_143 = arith.constant 0 : i8
    %293 = arith.cmpi ne, %292, %c0_i8_143 : i8
    cf.cond_br %293, ^bb1(%292 : i8), ^bb90
  ^bb90:  // pred: ^bb89
    %294 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %290, %294 : !llvm.ptr, !llvm.ptr
    %295 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %269, %295 : i64, !llvm.ptr
    cf.br ^bb87
  ^bb91:  // pred: ^bb24
    %c18446744073709551615_i256_144 = arith.constant 18446744073709551615 : i256
    %296 = arith.cmpi sgt, %70, %c18446744073709551615_i256_144 : i256
    %c84_i8_145 = arith.constant 84 : i8
    cf.cond_br %296, ^bb1(%c84_i8_145 : i8), ^bb92
  ^bb92:  // pred: ^bb91
    %297 = arith.trunci %70 : i256 to i64
    %c0_i64_146 = arith.constant 0 : i64
    %298 = arith.cmpi slt, %297, %c0_i64_146 : i64
    %c84_i8_147 = arith.constant 84 : i8
    cf.cond_br %298, ^bb1(%c84_i8_147 : i8), ^bb93
  ^bb93:  // pred: ^bb92
    %299 = arith.addi %297, %c32_i64_29 : i64
    %c0_i64_148 = arith.constant 0 : i64
    %300 = arith.cmpi slt, %299, %c0_i64_148 : i64
    %c84_i8_149 = arith.constant 84 : i8
    cf.cond_br %300, ^bb1(%c84_i8_149 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %c31_i64_150 = arith.constant 31 : i64
    %c32_i64_151 = arith.constant 32 : i64
    %301 = arith.addi %299, %c31_i64_150 : i64
    %302 = arith.divui %301, %c32_i64_151 : i64
    %c32_i64_152 = arith.constant 32 : i64
    %303 = arith.muli %302, %c32_i64_152 : i64
    %304 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %305 = llvm.load %304 : !llvm.ptr -> i64
    %c31_i64_153 = arith.constant 31 : i64
    %c32_i64_154 = arith.constant 32 : i64
    %306 = arith.addi %305, %c31_i64_153 : i64
    %307 = arith.divui %306, %c32_i64_154 : i64
    %308 = arith.muli %307, %c32_i64_152 : i64
    %309 = arith.cmpi ult, %308, %303 : i64
    cf.cond_br %309, ^bb96, ^bb95
  ^bb95:  // 2 preds: ^bb94, ^bb98
    cf.br ^bb25
  ^bb96:  // pred: ^bb94
    %c3_i64_155 = arith.constant 3 : i64
    %c512_i64_156 = arith.constant 512 : i64
    %310 = arith.muli %307, %307 : i64
    %311 = arith.divui %310, %c512_i64_156 : i64
    %312 = arith.muli %307, %c3_i64_155 : i64
    %313 = arith.addi %311, %312 : i64
    %c3_i64_157 = arith.constant 3 : i64
    %c512_i64_158 = arith.constant 512 : i64
    %314 = arith.muli %302, %302 : i64
    %315 = arith.divui %314, %c512_i64_158 : i64
    %316 = arith.muli %302, %c3_i64_157 : i64
    %317 = arith.addi %315, %316 : i64
    %318 = arith.subi %317, %313 : i64
    %319 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %320 = llvm.load %319 : !llvm.ptr -> i64
    %321 = arith.cmpi ult, %320, %318 : i64
    scf.if %321 {
    } else {
      %439 = arith.subi %320, %318 : i64
      llvm.store %439, %319 : i64, !llvm.ptr
    }
    %c80_i8_159 = arith.constant 80 : i8
    cf.cond_br %321, ^bb1(%c80_i8_159 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %322 = call @dora_fn_extend_memory(%arg0, %303) : (!llvm.ptr, i64) -> !llvm.ptr
    %323 = llvm.getelementptr %322[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %324 = llvm.load %323 : !llvm.ptr -> !llvm.ptr
    %325 = llvm.getelementptr %322[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %326 = llvm.load %325 : !llvm.ptr -> i8
    %c0_i8_160 = arith.constant 0 : i8
    %327 = arith.cmpi ne, %326, %c0_i8_160 : i8
    cf.cond_br %327, ^bb1(%326 : i8), ^bb98
  ^bb98:  // pred: ^bb97
    %328 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %324, %328 : !llvm.ptr, !llvm.ptr
    %329 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %303, %329 : i64, !llvm.ptr
    cf.br ^bb95
  ^bb99:  // pred: ^bb44
    %c49152_i64 = arith.constant 49152 : i64
    %330 = arith.cmpi ugt, %133, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %330, ^bb1(%c100_i8 : i8), ^bb100
  ^bb100:  // pred: ^bb99
    %c31_i64_161 = arith.constant 31 : i64
    %c32_i64_162 = arith.constant 32 : i64
    %331 = arith.addi %133, %c31_i64_161 : i64
    %332 = arith.divui %331, %c32_i64_162 : i64
    %c2_i64_163 = arith.constant 2 : i64
    %333 = arith.muli %332, %c2_i64_163 : i64
    %334 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %335 = llvm.load %334 : !llvm.ptr -> i64
    %336 = arith.cmpi ult, %335, %333 : i64
    scf.if %336 {
    } else {
      %439 = arith.subi %335, %333 : i64
      llvm.store %439, %334 : i64, !llvm.ptr
    }
    %c80_i8_164 = arith.constant 80 : i8
    cf.cond_br %336, ^bb1(%c80_i8_164 : i8), ^bb101
  ^bb101:  // pred: ^bb100
    %c18446744073709551615_i256_165 = arith.constant 18446744073709551615 : i256
    %337 = arith.cmpi sgt, %125, %c18446744073709551615_i256_165 : i256
    %c84_i8_166 = arith.constant 84 : i8
    cf.cond_br %337, ^bb1(%c84_i8_166 : i8), ^bb102
  ^bb102:  // pred: ^bb101
    %338 = arith.trunci %125 : i256 to i64
    %c0_i64_167 = arith.constant 0 : i64
    %339 = arith.cmpi slt, %338, %c0_i64_167 : i64
    %c84_i8_168 = arith.constant 84 : i8
    cf.cond_br %339, ^bb1(%c84_i8_168 : i8), ^bb103
  ^bb103:  // pred: ^bb102
    %340 = arith.addi %338, %133 : i64
    %c0_i64_169 = arith.constant 0 : i64
    %341 = arith.cmpi slt, %340, %c0_i64_169 : i64
    %c84_i8_170 = arith.constant 84 : i8
    cf.cond_br %341, ^bb1(%c84_i8_170 : i8), ^bb104
  ^bb104:  // pred: ^bb103
    %c31_i64_171 = arith.constant 31 : i64
    %c32_i64_172 = arith.constant 32 : i64
    %342 = arith.addi %340, %c31_i64_171 : i64
    %343 = arith.divui %342, %c32_i64_172 : i64
    %c32_i64_173 = arith.constant 32 : i64
    %344 = arith.muli %343, %c32_i64_173 : i64
    %345 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %346 = llvm.load %345 : !llvm.ptr -> i64
    %c31_i64_174 = arith.constant 31 : i64
    %c32_i64_175 = arith.constant 32 : i64
    %347 = arith.addi %346, %c31_i64_174 : i64
    %348 = arith.divui %347, %c32_i64_175 : i64
    %349 = arith.muli %348, %c32_i64_173 : i64
    %350 = arith.cmpi ult, %349, %344 : i64
    cf.cond_br %350, ^bb106, ^bb105
  ^bb105:  // 2 preds: ^bb104, ^bb108
    cf.br ^bb45
  ^bb106:  // pred: ^bb104
    %c3_i64_176 = arith.constant 3 : i64
    %c512_i64_177 = arith.constant 512 : i64
    %351 = arith.muli %348, %348 : i64
    %352 = arith.divui %351, %c512_i64_177 : i64
    %353 = arith.muli %348, %c3_i64_176 : i64
    %354 = arith.addi %352, %353 : i64
    %c3_i64_178 = arith.constant 3 : i64
    %c512_i64_179 = arith.constant 512 : i64
    %355 = arith.muli %343, %343 : i64
    %356 = arith.divui %355, %c512_i64_179 : i64
    %357 = arith.muli %343, %c3_i64_178 : i64
    %358 = arith.addi %356, %357 : i64
    %359 = arith.subi %358, %354 : i64
    %360 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %361 = llvm.load %360 : !llvm.ptr -> i64
    %362 = arith.cmpi ult, %361, %359 : i64
    scf.if %362 {
    } else {
      %439 = arith.subi %361, %359 : i64
      llvm.store %439, %360 : i64, !llvm.ptr
    }
    %c80_i8_180 = arith.constant 80 : i8
    cf.cond_br %362, ^bb1(%c80_i8_180 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %363 = call @dora_fn_extend_memory(%arg0, %344) : (!llvm.ptr, i64) -> !llvm.ptr
    %364 = llvm.getelementptr %363[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %365 = llvm.load %364 : !llvm.ptr -> !llvm.ptr
    %366 = llvm.getelementptr %363[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %367 = llvm.load %366 : !llvm.ptr -> i8
    %c0_i8_181 = arith.constant 0 : i8
    %368 = arith.cmpi ne, %367, %c0_i8_181 : i8
    cf.cond_br %368, ^bb1(%367 : i8), ^bb108
  ^bb108:  // pred: ^bb107
    %369 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %365, %369 : !llvm.ptr, !llvm.ptr
    %370 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %344, %370 : i64, !llvm.ptr
    cf.br ^bb105
  ^bb109:  // pred: ^bb61
    %c18446744073709551615_i256_182 = arith.constant 18446744073709551615 : i256
    %371 = arith.cmpi sgt, %200, %c18446744073709551615_i256_182 : i256
    %c84_i8_183 = arith.constant 84 : i8
    cf.cond_br %371, ^bb1(%c84_i8_183 : i8), ^bb110
  ^bb110:  // pred: ^bb109
    %372 = arith.trunci %200 : i256 to i64
    %c0_i64_184 = arith.constant 0 : i64
    %373 = arith.cmpi slt, %372, %c0_i64_184 : i64
    %c84_i8_185 = arith.constant 84 : i8
    cf.cond_br %373, ^bb1(%c84_i8_185 : i8), ^bb111
  ^bb111:  // pred: ^bb110
    %374 = arith.addi %372, %c32_i64_92 : i64
    %c0_i64_186 = arith.constant 0 : i64
    %375 = arith.cmpi slt, %374, %c0_i64_186 : i64
    %c84_i8_187 = arith.constant 84 : i8
    cf.cond_br %375, ^bb1(%c84_i8_187 : i8), ^bb112
  ^bb112:  // pred: ^bb111
    %c31_i64_188 = arith.constant 31 : i64
    %c32_i64_189 = arith.constant 32 : i64
    %376 = arith.addi %374, %c31_i64_188 : i64
    %377 = arith.divui %376, %c32_i64_189 : i64
    %c32_i64_190 = arith.constant 32 : i64
    %378 = arith.muli %377, %c32_i64_190 : i64
    %379 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %380 = llvm.load %379 : !llvm.ptr -> i64
    %c31_i64_191 = arith.constant 31 : i64
    %c32_i64_192 = arith.constant 32 : i64
    %381 = arith.addi %380, %c31_i64_191 : i64
    %382 = arith.divui %381, %c32_i64_192 : i64
    %383 = arith.muli %382, %c32_i64_190 : i64
    %384 = arith.cmpi ult, %383, %378 : i64
    cf.cond_br %384, ^bb114, ^bb113
  ^bb113:  // 2 preds: ^bb112, ^bb116
    cf.br ^bb62
  ^bb114:  // pred: ^bb112
    %c3_i64_193 = arith.constant 3 : i64
    %c512_i64_194 = arith.constant 512 : i64
    %385 = arith.muli %382, %382 : i64
    %386 = arith.divui %385, %c512_i64_194 : i64
    %387 = arith.muli %382, %c3_i64_193 : i64
    %388 = arith.addi %386, %387 : i64
    %c3_i64_195 = arith.constant 3 : i64
    %c512_i64_196 = arith.constant 512 : i64
    %389 = arith.muli %377, %377 : i64
    %390 = arith.divui %389, %c512_i64_196 : i64
    %391 = arith.muli %377, %c3_i64_195 : i64
    %392 = arith.addi %390, %391 : i64
    %393 = arith.subi %392, %388 : i64
    %394 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %395 = llvm.load %394 : !llvm.ptr -> i64
    %396 = arith.cmpi ult, %395, %393 : i64
    scf.if %396 {
    } else {
      %439 = arith.subi %395, %393 : i64
      llvm.store %439, %394 : i64, !llvm.ptr
    }
    %c80_i8_197 = arith.constant 80 : i8
    cf.cond_br %396, ^bb1(%c80_i8_197 : i8), ^bb115
  ^bb115:  // pred: ^bb114
    %397 = call @dora_fn_extend_memory(%arg0, %378) : (!llvm.ptr, i64) -> !llvm.ptr
    %398 = llvm.getelementptr %397[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %399 = llvm.load %398 : !llvm.ptr -> !llvm.ptr
    %400 = llvm.getelementptr %397[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %401 = llvm.load %400 : !llvm.ptr -> i8
    %c0_i8_198 = arith.constant 0 : i8
    %402 = arith.cmpi ne, %401, %c0_i8_198 : i8
    cf.cond_br %402, ^bb1(%401 : i8), ^bb116
  ^bb116:  // pred: ^bb115
    %403 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %399, %403 : !llvm.ptr, !llvm.ptr
    %404 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %378, %404 : i64, !llvm.ptr
    cf.br ^bb113
  ^bb117:  // pred: ^bb76
    %c18446744073709551615_i256_199 = arith.constant 18446744073709551615 : i256
    %405 = arith.cmpi sgt, %241, %c18446744073709551615_i256_199 : i256
    %c84_i8_200 = arith.constant 84 : i8
    cf.cond_br %405, ^bb1(%c84_i8_200 : i8), ^bb118
  ^bb118:  // pred: ^bb117
    %406 = arith.trunci %241 : i256 to i64
    %c0_i64_201 = arith.constant 0 : i64
    %407 = arith.cmpi slt, %406, %c0_i64_201 : i64
    %c84_i8_202 = arith.constant 84 : i8
    cf.cond_br %407, ^bb1(%c84_i8_202 : i8), ^bb119
  ^bb119:  // pred: ^bb118
    %408 = arith.addi %406, %247 : i64
    %c0_i64_203 = arith.constant 0 : i64
    %409 = arith.cmpi slt, %408, %c0_i64_203 : i64
    %c84_i8_204 = arith.constant 84 : i8
    cf.cond_br %409, ^bb1(%c84_i8_204 : i8), ^bb120
  ^bb120:  // pred: ^bb119
    %c31_i64_205 = arith.constant 31 : i64
    %c32_i64_206 = arith.constant 32 : i64
    %410 = arith.addi %408, %c31_i64_205 : i64
    %411 = arith.divui %410, %c32_i64_206 : i64
    %c32_i64_207 = arith.constant 32 : i64
    %412 = arith.muli %411, %c32_i64_207 : i64
    %413 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %414 = llvm.load %413 : !llvm.ptr -> i64
    %c31_i64_208 = arith.constant 31 : i64
    %c32_i64_209 = arith.constant 32 : i64
    %415 = arith.addi %414, %c31_i64_208 : i64
    %416 = arith.divui %415, %c32_i64_209 : i64
    %417 = arith.muli %416, %c32_i64_207 : i64
    %418 = arith.cmpi ult, %417, %412 : i64
    cf.cond_br %418, ^bb122, ^bb121
  ^bb121:  // 2 preds: ^bb120, ^bb124
    cf.br ^bb77
  ^bb122:  // pred: ^bb120
    %c3_i64_210 = arith.constant 3 : i64
    %c512_i64_211 = arith.constant 512 : i64
    %419 = arith.muli %416, %416 : i64
    %420 = arith.divui %419, %c512_i64_211 : i64
    %421 = arith.muli %416, %c3_i64_210 : i64
    %422 = arith.addi %420, %421 : i64
    %c3_i64_212 = arith.constant 3 : i64
    %c512_i64_213 = arith.constant 512 : i64
    %423 = arith.muli %411, %411 : i64
    %424 = arith.divui %423, %c512_i64_213 : i64
    %425 = arith.muli %411, %c3_i64_212 : i64
    %426 = arith.addi %424, %425 : i64
    %427 = arith.subi %426, %422 : i64
    %428 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %429 = llvm.load %428 : !llvm.ptr -> i64
    %430 = arith.cmpi ult, %429, %427 : i64
    scf.if %430 {
    } else {
      %439 = arith.subi %429, %427 : i64
      llvm.store %439, %428 : i64, !llvm.ptr
    }
    %c80_i8_214 = arith.constant 80 : i8
    cf.cond_br %430, ^bb1(%c80_i8_214 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %431 = call @dora_fn_extend_memory(%arg0, %412) : (!llvm.ptr, i64) -> !llvm.ptr
    %432 = llvm.getelementptr %431[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %433 = llvm.load %432 : !llvm.ptr -> !llvm.ptr
    %434 = llvm.getelementptr %431[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %435 = llvm.load %434 : !llvm.ptr -> i8
    %c0_i8_215 = arith.constant 0 : i8
    %436 = arith.cmpi ne, %435, %c0_i8_215 : i8
    cf.cond_br %436, ^bb1(%435 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %437 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %433, %437 : !llvm.ptr, !llvm.ptr
    %438 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %412, %438 : i64, !llvm.ptr
    cf.br ^bb121
  }
}
