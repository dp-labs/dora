---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_memory_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_memory_size(!llvm.ptr) -> i64
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: !llvm.ptr, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.alloca %c0_i64 x !llvm.ptr : (i64) -> !llvm.ptr
    llvm.store %arg2, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb5
  ^bb1(%1: i8):  // 105 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb34, ^bb36, ^bb37, ^bb40, ^bb41, ^bb44, ^bb45, ^bb48, ^bb49, ^bb52, ^bb53, ^bb56, ^bb57, ^bb60, ^bb61, ^bb64, ^bb65, ^bb67, ^bb68, ^bb70, ^bb71, ^bb73, ^bb74, ^bb76, ^bb77, ^bb80, ^bb81, ^bb84, ^bb85, ^bb87, ^bb88, ^bb90, ^bb91, ^bb94, ^bb95, ^bb98, ^bb99, ^bb102, ^bb103, ^bb106, ^bb107, ^bb110, ^bb111, ^bb114, ^bb115, ^bb118, ^bb119, ^bb121, ^bb122, ^bb124, ^bb125, ^bb127, ^bb128, ^bb130, ^bb131, ^bb134, ^bb135, ^bb136, ^bb139, ^bb140, ^bb142, ^bb143, ^bb144, ^bb145, ^bb146, ^bb149, ^bb150, ^bb152, ^bb153, ^bb154, ^bb157, ^bb158, ^bb160, ^bb161, ^bb162, ^bb165, ^bb166, ^bb168, ^bb169, ^bb170, ^bb173, ^bb174, ^bb176, ^bb177, ^bb178, ^bb181, ^bb182
    %c0_i64_0 = arith.constant 0 : i64
    %2 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %2, %1) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %1 : i8
  ^bb2(%3: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %3 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %4 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %4 : i256, !llvm.ptr
    %5 = llvm.getelementptr %4[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %5, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %6 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %7 = arith.addi %6, %c1_i64 : i64
    llvm.store %7, %arg3 : i64, !llvm.ptr
    %8 = arith.cmpi ult, %c1024_i64, %7 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %8, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %9 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %10 = arith.cmpi uge, %9, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %10, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %11 = arith.subi %9, %c3_i64 : i64
    llvm.store %11, %arg1 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %12 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %12 : i256, !llvm.ptr
    %13 = llvm.getelementptr %12[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %13, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_1 = arith.constant 1024 : i64
    %14 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %15 = arith.addi %14, %c1_i64_2 : i64
    llvm.store %15, %arg3 : i64, !llvm.ptr
    %16 = arith.cmpi ult, %c1024_i64_1, %15 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %16, ^bb1(%c92_i8_3 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %17 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_4 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %18 = arith.cmpi uge, %17, %c3_i64_4 : i64
    %c80_i8_5 = arith.constant 80 : i8
    cf.cond_br %18, ^bb10, ^bb1(%c80_i8_5 : i8)
  ^bb10:  // pred: ^bb9
    %19 = arith.subi %17, %c3_i64_4 : i64
    llvm.store %19, %arg1 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %20 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %21 = llvm.getelementptr %20[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %22 = llvm.load %21 : !llvm.ptr -> i256
    llvm.store %21, %0 : !llvm.ptr, !llvm.ptr
    %23 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %24 = llvm.getelementptr %23[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %25 = llvm.load %24 : !llvm.ptr -> i256
    llvm.store %24, %0 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_6 = arith.constant 0 : i64
    %26 = arith.cmpi ne, %c32_i64, %c0_i64_6 : i64
    cf.cond_br %26, ^bb134, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb138
    %27 = arith.trunci %22 : i256 to i64
    %28 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %29 = llvm.getelementptr %28[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %30 = llvm.intr.bswap(%25)  : (i256) -> i256
    llvm.store %30, %29 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_7 = arith.constant 1024 : i64
    %31 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %32 = arith.addi %31, %c-2_i64 : i64
    llvm.store %32, %arg3 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %33 = arith.cmpi ult, %31, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %33, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %34 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_8 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %35 = arith.cmpi uge, %34, %c3_i64_8 : i64
    %c80_i8_9 = arith.constant 80 : i8
    cf.cond_br %35, ^bb15, ^bb1(%c80_i8_9 : i8)
  ^bb15:  // pred: ^bb14
    %36 = arith.subi %34, %c3_i64_8 : i64
    llvm.store %36, %arg1 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c17_i256 = arith.constant 17 : i256
    %37 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %37 : i256, !llvm.ptr
    %38 = llvm.getelementptr %37[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %38, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_10 = arith.constant 1024 : i64
    %39 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_11 = arith.constant 1 : i64
    %40 = arith.addi %39, %c1_i64_11 : i64
    llvm.store %40, %arg3 : i64, !llvm.ptr
    %41 = arith.cmpi ult, %c1024_i64_10, %40 : i64
    %c92_i8_12 = arith.constant 92 : i8
    cf.cond_br %41, ^bb1(%c92_i8_12 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %42 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_13 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %43 = arith.cmpi uge, %42, %c3_i64_13 : i64
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %43, ^bb19, ^bb1(%c80_i8_14 : i8)
  ^bb19:  // pred: ^bb18
    %44 = arith.subi %42, %c3_i64_13 : i64
    llvm.store %44, %arg1 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c15_i256 = arith.constant 15 : i256
    %45 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %45 : i256, !llvm.ptr
    %46 = llvm.getelementptr %45[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %46, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %c1024_i64_15 = arith.constant 1024 : i64
    %47 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_16 = arith.constant 1 : i64
    %48 = arith.addi %47, %c1_i64_16 : i64
    llvm.store %48, %arg3 : i64, !llvm.ptr
    %49 = arith.cmpi ult, %c1024_i64_15, %48 : i64
    %c92_i8_17 = arith.constant 92 : i8
    cf.cond_br %49, ^bb1(%c92_i8_17 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %50 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_18 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %51 = arith.cmpi uge, %50, %c3_i64_18 : i64
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %51, ^bb23, ^bb1(%c80_i8_19 : i8)
  ^bb23:  // pred: ^bb22
    %52 = arith.subi %50, %c3_i64_18 : i64
    llvm.store %52, %arg1 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_20 = arith.constant 0 : i256
    %53 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_20, %53 : i256, !llvm.ptr
    %54 = llvm.getelementptr %53[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %54, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb37
  ^bb25:  // pred: ^bb27
    %c1024_i64_21 = arith.constant 1024 : i64
    %55 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_22 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_22 : i64
    llvm.store %56, %arg3 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64_21, %56 : i64
    %c92_i8_23 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_23 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %58 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_24 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %59 = arith.cmpi uge, %58, %c3_i64_24 : i64
    %c80_i8_25 = arith.constant 80 : i8
    cf.cond_br %59, ^bb27, ^bb1(%c80_i8_25 : i8)
  ^bb27:  // pred: ^bb26
    %60 = arith.subi %58, %c3_i64_24 : i64
    llvm.store %60, %arg1 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb36
    %61 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %62 = llvm.getelementptr %61[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %63 = llvm.load %62 : !llvm.ptr -> i256
    llvm.store %62, %0 : !llvm.ptr, !llvm.ptr
    %64 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %65 = llvm.getelementptr %64[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %66 = llvm.load %65 : !llvm.ptr -> i256
    llvm.store %65, %0 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %68 = llvm.getelementptr %67[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %69 = llvm.load %68 : !llvm.ptr -> i256
    llvm.store %68, %0 : !llvm.ptr, !llvm.ptr
    %70 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %71 = arith.cmpi ne, %70, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %71, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %72 = arith.cmpi sgt, %69, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %72, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %73 = arith.trunci %69 : i256 to i64
    %c0_i64_26 = arith.constant 0 : i64
    %74 = arith.cmpi slt, %73, %c0_i64_26 : i64
    %c84_i8_27 = arith.constant 84 : i8
    cf.cond_br %74, ^bb1(%c84_i8_27 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i64_28 = arith.constant 0 : i64
    %75 = arith.cmpi ne, %73, %c0_i64_28 : i64
    cf.cond_br %75, ^bb142, ^bb32
  ^bb32:  // 2 preds: ^bb31, ^bb148
    %c32000_i64 = arith.constant 32000 : i64
    %76 = llvm.load %arg1 : !llvm.ptr -> i64
    %77 = arith.cmpi ult, %76, %c32000_i64 : i64
    scf.if %77 {
    } else {
      %542 = arith.subi %76, %c32000_i64 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_29 = arith.constant 80 : i8
    cf.cond_br %77, ^bb1(%c80_i8_29 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c1_i256 = arith.constant 1 : i256
    %78 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %63, %78 {alignment = 1 : i64} : i256, !llvm.ptr
    %79 = llvm.load %arg1 : !llvm.ptr -> i64
    %80 = arith.trunci %66 : i256 to i64
    %81 = call @dora_fn_create(%arg0, %73, %80, %78, %79) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %82 = llvm.getelementptr %81[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %83 = llvm.load %82 : !llvm.ptr -> i8
    %c0_i8_30 = arith.constant 0 : i8
    %84 = arith.cmpi ne, %83, %c0_i8_30 : i8
    cf.cond_br %84, ^bb1(%83 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %85 = llvm.getelementptr %81[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %86 = llvm.load %85 : !llvm.ptr -> i64
    %87 = llvm.load %arg1 : !llvm.ptr -> i64
    %88 = arith.cmpi ult, %87, %86 : i64
    scf.if %88 {
    } else {
      %542 = arith.subi %87, %86 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_31 = arith.constant 80 : i8
    cf.cond_br %88, ^bb1(%c80_i8_31 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %89 = llvm.load %78 : !llvm.ptr -> i256
    %90 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %89, %90 : i256, !llvm.ptr
    %91 = llvm.getelementptr %90[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %91, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %c1024_i64_32 = arith.constant 1024 : i64
    %92 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_33 = arith.constant -2 : i64
    %93 = arith.addi %92, %c-2_i64_33 : i64
    llvm.store %93, %arg3 : i64, !llvm.ptr
    %c3_i64_34 = arith.constant 3 : i64
    %94 = arith.cmpi ult, %92, %c3_i64_34 : i64
    %c91_i8_35 = arith.constant 91 : i8
    cf.cond_br %94, ^bb1(%c91_i8_35 : i8), ^bb28
  ^bb37:  // pred: ^bb24
    %95 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_36 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %96 = arith.cmpi uge, %95, %c0_i64_36 : i64
    %c80_i8_37 = arith.constant 80 : i8
    cf.cond_br %96, ^bb38, ^bb1(%c80_i8_37 : i8)
  ^bb38:  // pred: ^bb37
    %97 = arith.subi %95, %c0_i64_36 : i64
    llvm.store %97, %arg1 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_38 = arith.constant 0 : i256
    %98 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_38, %98 : i256, !llvm.ptr
    %99 = llvm.getelementptr %98[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %99, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb45
  ^bb40:  // pred: ^bb42
    %c1024_i64_39 = arith.constant 1024 : i64
    %100 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %101 = arith.addi %100, %c1_i64_40 : i64
    llvm.store %101, %arg3 : i64, !llvm.ptr
    %102 = arith.cmpi ult, %c1024_i64_39, %101 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %102, ^bb1(%c92_i8_41 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %103 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_42 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %104 = arith.cmpi uge, %103, %c3_i64_42 : i64
    %c80_i8_43 = arith.constant 80 : i8
    cf.cond_br %104, ^bb42, ^bb1(%c80_i8_43 : i8)
  ^bb42:  // pred: ^bb41
    %105 = arith.subi %103, %c3_i64_42 : i64
    llvm.store %105, %arg1 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb44
    %c0_i256_44 = arith.constant 0 : i256
    %106 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_44, %106 : i256, !llvm.ptr
    %107 = llvm.getelementptr %106[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %107, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb49
  ^bb44:  // pred: ^bb46
    %c1024_i64_45 = arith.constant 1024 : i64
    %108 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_46 = arith.constant 1 : i64
    %109 = arith.addi %108, %c1_i64_46 : i64
    llvm.store %109, %arg3 : i64, !llvm.ptr
    %110 = arith.cmpi ult, %c1024_i64_45, %109 : i64
    %c92_i8_47 = arith.constant 92 : i8
    cf.cond_br %110, ^bb1(%c92_i8_47 : i8), ^bb43
  ^bb45:  // pred: ^bb39
    %111 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_48 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %112 = arith.cmpi uge, %111, %c3_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %112, ^bb46, ^bb1(%c80_i8_49 : i8)
  ^bb46:  // pred: ^bb45
    %113 = arith.subi %111, %c3_i64_48 : i64
    llvm.store %113, %arg1 : i64, !llvm.ptr
    cf.br ^bb44
  ^bb47:  // pred: ^bb48
    %c0_i256_50 = arith.constant 0 : i256
    %114 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_50, %114 : i256, !llvm.ptr
    %115 = llvm.getelementptr %114[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %115, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb53
  ^bb48:  // pred: ^bb50
    %c1024_i64_51 = arith.constant 1024 : i64
    %116 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %117 = arith.addi %116, %c1_i64_52 : i64
    llvm.store %117, %arg3 : i64, !llvm.ptr
    %118 = arith.cmpi ult, %c1024_i64_51, %117 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %118, ^bb1(%c92_i8_53 : i8), ^bb47
  ^bb49:  // pred: ^bb43
    %119 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_54 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %120 = arith.cmpi uge, %119, %c3_i64_54 : i64
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %120, ^bb50, ^bb1(%c80_i8_55 : i8)
  ^bb50:  // pred: ^bb49
    %121 = arith.subi %119, %c3_i64_54 : i64
    llvm.store %121, %arg1 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // pred: ^bb52
    %c0_i256_56 = arith.constant 0 : i256
    %122 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_56, %122 : i256, !llvm.ptr
    %123 = llvm.getelementptr %122[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %123, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb57
  ^bb52:  // pred: ^bb54
    %c1024_i64_57 = arith.constant 1024 : i64
    %124 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %125 = arith.addi %124, %c1_i64_58 : i64
    llvm.store %125, %arg3 : i64, !llvm.ptr
    %126 = arith.cmpi ult, %c1024_i64_57, %125 : i64
    %c92_i8_59 = arith.constant 92 : i8
    cf.cond_br %126, ^bb1(%c92_i8_59 : i8), ^bb51
  ^bb53:  // pred: ^bb47
    %127 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_60 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %128 = arith.cmpi uge, %127, %c3_i64_60 : i64
    %c80_i8_61 = arith.constant 80 : i8
    cf.cond_br %128, ^bb54, ^bb1(%c80_i8_61 : i8)
  ^bb54:  // pred: ^bb53
    %129 = arith.subi %127, %c3_i64_60 : i64
    llvm.store %129, %arg1 : i64, !llvm.ptr
    cf.br ^bb52
  ^bb55:  // pred: ^bb56
    %c0_i256_62 = arith.constant 0 : i256
    %130 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_62, %130 : i256, !llvm.ptr
    %131 = llvm.getelementptr %130[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %131, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb61
  ^bb56:  // pred: ^bb58
    %c1024_i64_63 = arith.constant 1024 : i64
    %132 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_64 = arith.constant 1 : i64
    %133 = arith.addi %132, %c1_i64_64 : i64
    llvm.store %133, %arg3 : i64, !llvm.ptr
    %134 = arith.cmpi ult, %c1024_i64_63, %133 : i64
    %c92_i8_65 = arith.constant 92 : i8
    cf.cond_br %134, ^bb1(%c92_i8_65 : i8), ^bb55
  ^bb57:  // pred: ^bb51
    %135 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_66 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %136 = arith.cmpi uge, %135, %c3_i64_66 : i64
    %c80_i8_67 = arith.constant 80 : i8
    cf.cond_br %136, ^bb58, ^bb1(%c80_i8_67 : i8)
  ^bb58:  // pred: ^bb57
    %137 = arith.subi %135, %c3_i64_66 : i64
    llvm.store %137, %arg1 : i64, !llvm.ptr
    cf.br ^bb56
  ^bb59:  // pred: ^bb60
    %138 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %139 = llvm.getelementptr %138[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %140 = llvm.load %139 : !llvm.ptr -> i256
    %141 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %140, %141 : i256, !llvm.ptr
    %142 = llvm.getelementptr %141[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %142, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb65
  ^bb60:  // pred: ^bb62
    %c1024_i64_68 = arith.constant 1024 : i64
    %143 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_69 = arith.constant 1 : i64
    %144 = arith.addi %143, %c1_i64_69 : i64
    llvm.store %144, %arg3 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %145 = arith.cmpi ult, %143, %c6_i64 : i64
    %146 = arith.cmpi ult, %c1024_i64_68, %144 : i64
    %147 = arith.xori %145, %146 : i1
    %c92_i8_70 = arith.constant 92 : i8
    cf.cond_br %147, ^bb1(%c92_i8_70 : i8), ^bb59
  ^bb61:  // pred: ^bb55
    %148 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_71 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %149 = arith.cmpi uge, %148, %c3_i64_71 : i64
    %c80_i8_72 = arith.constant 80 : i8
    cf.cond_br %149, ^bb62, ^bb1(%c80_i8_72 : i8)
  ^bb62:  // pred: ^bb61
    %150 = arith.subi %148, %c3_i64_71 : i64
    llvm.store %150, %arg1 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb63:  // pred: ^bb64
    %c65535_i256 = arith.constant 65535 : i256
    %151 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %151 : i256, !llvm.ptr
    %152 = llvm.getelementptr %151[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %152, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb77
  ^bb64:  // pred: ^bb66
    %c1024_i64_73 = arith.constant 1024 : i64
    %153 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_74 = arith.constant 1 : i64
    %154 = arith.addi %153, %c1_i64_74 : i64
    llvm.store %154, %arg3 : i64, !llvm.ptr
    %155 = arith.cmpi ult, %c1024_i64_73, %154 : i64
    %c92_i8_75 = arith.constant 92 : i8
    cf.cond_br %155, ^bb1(%c92_i8_75 : i8), ^bb63
  ^bb65:  // pred: ^bb59
    %156 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_76 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %157 = arith.cmpi uge, %156, %c3_i64_76 : i64
    %c80_i8_77 = arith.constant 80 : i8
    cf.cond_br %157, ^bb66, ^bb1(%c80_i8_77 : i8)
  ^bb66:  // pred: ^bb65
    %158 = arith.subi %156, %c3_i64_76 : i64
    llvm.store %158, %arg1 : i64, !llvm.ptr
    cf.br ^bb64
  ^bb67:  // pred: ^bb76
    %159 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %160 = llvm.getelementptr %159[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %161 = llvm.load %160 : !llvm.ptr -> i256
    llvm.store %160, %0 : !llvm.ptr, !llvm.ptr
    %162 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %163 = llvm.getelementptr %162[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %164 = llvm.load %163 : !llvm.ptr -> i256
    llvm.store %163, %0 : !llvm.ptr, !llvm.ptr
    %165 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %166 = llvm.getelementptr %165[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %167 = llvm.load %166 : !llvm.ptr -> i256
    llvm.store %166, %0 : !llvm.ptr, !llvm.ptr
    %168 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %169 = llvm.getelementptr %168[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %170 = llvm.load %169 : !llvm.ptr -> i256
    llvm.store %169, %0 : !llvm.ptr, !llvm.ptr
    %171 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %172 = llvm.getelementptr %171[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %173 = llvm.load %172 : !llvm.ptr -> i256
    llvm.store %172, %0 : !llvm.ptr, !llvm.ptr
    %174 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %175 = llvm.getelementptr %174[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %176 = llvm.load %175 : !llvm.ptr -> i256
    llvm.store %175, %0 : !llvm.ptr, !llvm.ptr
    %177 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %178 = llvm.getelementptr %177[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %179 = llvm.load %178 : !llvm.ptr -> i256
    llvm.store %178, %0 : !llvm.ptr, !llvm.ptr
    %c18446744073709551615_i256_78 = arith.constant 18446744073709551615 : i256
    %180 = arith.cmpi sgt, %173, %c18446744073709551615_i256_78 : i256
    %c84_i8_79 = arith.constant 84 : i8
    cf.cond_br %180, ^bb1(%c84_i8_79 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %181 = arith.trunci %173 : i256 to i64
    %c0_i64_80 = arith.constant 0 : i64
    %182 = arith.cmpi slt, %181, %c0_i64_80 : i64
    %c84_i8_81 = arith.constant 84 : i8
    cf.cond_br %182, ^bb1(%c84_i8_81 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %c0_i64_82 = arith.constant 0 : i64
    %183 = arith.cmpi ne, %181, %c0_i64_82 : i64
    cf.cond_br %183, ^bb152, ^bb70
  ^bb70:  // 2 preds: ^bb69, ^bb156
    %c18446744073709551615_i256_83 = arith.constant 18446744073709551615 : i256
    %184 = arith.cmpi sgt, %179, %c18446744073709551615_i256_83 : i256
    %c84_i8_84 = arith.constant 84 : i8
    cf.cond_br %184, ^bb1(%c84_i8_84 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %185 = arith.trunci %179 : i256 to i64
    %c0_i64_85 = arith.constant 0 : i64
    %186 = arith.cmpi slt, %185, %c0_i64_85 : i64
    %c84_i8_86 = arith.constant 84 : i8
    cf.cond_br %186, ^bb1(%c84_i8_86 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %c0_i64_87 = arith.constant 0 : i64
    %187 = arith.cmpi ne, %185, %c0_i64_87 : i64
    cf.cond_br %187, ^bb160, ^bb73
  ^bb73:  // 2 preds: ^bb72, ^bb164
    %188 = arith.trunci %170 : i256 to i64
    %189 = arith.trunci %176 : i256 to i64
    %190 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_88 = arith.constant 1 : i256
    %191 = llvm.alloca %c1_i256_88 x i256 : (i256) -> !llvm.ptr
    llvm.store %167, %191 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_89 = arith.constant 1 : i256
    %192 = llvm.alloca %c1_i256_89 x i256 : (i256) -> !llvm.ptr
    llvm.store %161, %192 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_90 = arith.constant 1 : i256
    %193 = llvm.alloca %c1_i256_90 x i256 : (i256) -> !llvm.ptr
    llvm.store %164, %193 {alignment = 1 : i64} : i256, !llvm.ptr
    %c3_i8 = arith.constant 3 : i8
    %194 = call @dora_fn_call(%arg0, %192, %193, %191, %188, %181, %189, %185, %190, %c3_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %195 = llvm.getelementptr %194[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %196 = llvm.load %195 : !llvm.ptr -> i8
    %197 = llvm.getelementptr %194[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %198 = llvm.load %197 : !llvm.ptr -> i8
    %c0_i8_91 = arith.constant 0 : i8
    %199 = arith.cmpi ne, %198, %c0_i8_91 : i8
    cf.cond_br %199, ^bb1(%198 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %200 = llvm.getelementptr %194[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %201 = llvm.load %200 : !llvm.ptr -> i64
    %202 = llvm.load %arg1 : !llvm.ptr -> i64
    %203 = arith.cmpi ult, %202, %201 : i64
    scf.if %203 {
    } else {
      %542 = arith.subi %202, %201 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_92 = arith.constant 80 : i8
    cf.cond_br %203, ^bb1(%c80_i8_92 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %204 = arith.extui %196 : i8 to i256
    %205 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %204, %205 : i256, !llvm.ptr
    %206 = llvm.getelementptr %205[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %206, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb81
  ^bb76:  // pred: ^bb78
    %c1024_i64_93 = arith.constant 1024 : i64
    %207 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %208 = arith.addi %207, %c-6_i64 : i64
    llvm.store %208, %arg3 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %209 = arith.cmpi ult, %207, %c7_i64 : i64
    %c91_i8_94 = arith.constant 91 : i8
    cf.cond_br %209, ^bb1(%c91_i8_94 : i8), ^bb67
  ^bb77:  // pred: ^bb63
    %210 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_95 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %211 = arith.cmpi uge, %210, %c0_i64_95 : i64
    %c80_i8_96 = arith.constant 80 : i8
    cf.cond_br %211, ^bb78, ^bb1(%c80_i8_96 : i8)
  ^bb78:  // pred: ^bb77
    %212 = arith.subi %210, %c0_i64_95 : i64
    llvm.store %212, %arg1 : i64, !llvm.ptr
    cf.br ^bb76
  ^bb79:  // pred: ^bb80
    %c1_i256_97 = arith.constant 1 : i256
    %213 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_97, %213 : i256, !llvm.ptr
    %214 = llvm.getelementptr %213[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %214, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb85
  ^bb80:  // pred: ^bb82
    %c1024_i64_98 = arith.constant 1024 : i64
    %215 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_99 = arith.constant 1 : i64
    %216 = arith.addi %215, %c1_i64_99 : i64
    llvm.store %216, %arg3 : i64, !llvm.ptr
    %217 = arith.cmpi ult, %c1024_i64_98, %216 : i64
    %c92_i8_100 = arith.constant 92 : i8
    cf.cond_br %217, ^bb1(%c92_i8_100 : i8), ^bb79
  ^bb81:  // pred: ^bb75
    %218 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_101 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %219 = arith.cmpi uge, %218, %c3_i64_101 : i64
    %c80_i8_102 = arith.constant 80 : i8
    cf.cond_br %219, ^bb82, ^bb1(%c80_i8_102 : i8)
  ^bb82:  // pred: ^bb81
    %220 = arith.subi %218, %c3_i64_101 : i64
    llvm.store %220, %arg1 : i64, !llvm.ptr
    cf.br ^bb80
  ^bb83:  // pred: ^bb84
    %c0_i256_103 = arith.constant 0 : i256
    %221 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_103, %221 : i256, !llvm.ptr
    %222 = llvm.getelementptr %221[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %222, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb91
  ^bb84:  // pred: ^bb86
    %c1024_i64_104 = arith.constant 1024 : i64
    %223 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_105 = arith.constant 1 : i64
    %224 = arith.addi %223, %c1_i64_105 : i64
    llvm.store %224, %arg3 : i64, !llvm.ptr
    %225 = arith.cmpi ult, %c1024_i64_104, %224 : i64
    %c92_i8_106 = arith.constant 92 : i8
    cf.cond_br %225, ^bb1(%c92_i8_106 : i8), ^bb83
  ^bb85:  // pred: ^bb79
    %226 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_107 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %227 = arith.cmpi uge, %226, %c3_i64_107 : i64
    %c80_i8_108 = arith.constant 80 : i8
    cf.cond_br %227, ^bb86, ^bb1(%c80_i8_108 : i8)
  ^bb86:  // pred: ^bb85
    %228 = arith.subi %226, %c3_i64_107 : i64
    llvm.store %228, %arg1 : i64, !llvm.ptr
    cf.br ^bb84
  ^bb87:  // pred: ^bb90
    %229 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %230 = llvm.getelementptr %229[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %231 = llvm.load %230 : !llvm.ptr -> i256
    llvm.store %230, %0 : !llvm.ptr, !llvm.ptr
    %232 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %233 = llvm.getelementptr %232[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %234 = llvm.load %233 : !llvm.ptr -> i256
    llvm.store %233, %0 : !llvm.ptr, !llvm.ptr
    %c1_i256_109 = arith.constant 1 : i256
    %235 = llvm.alloca %c1_i256_109 x i256 : (i256) -> !llvm.ptr
    llvm.store %231, %235 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_110 = arith.constant 1 : i256
    %236 = llvm.alloca %c1_i256_110 x i256 : (i256) -> !llvm.ptr
    llvm.store %234, %236 {alignment = 1 : i64} : i256, !llvm.ptr
    %237 = llvm.load %arg1 : !llvm.ptr -> i64
    %238 = call @dora_fn_sstore(%arg0, %235, %236, %237) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
    %239 = llvm.getelementptr %238[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %240 = llvm.load %239 : !llvm.ptr -> i8
    %c0_i8_111 = arith.constant 0 : i8
    %241 = arith.cmpi ne, %240, %c0_i8_111 : i8
    cf.cond_br %241, ^bb1(%240 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %242 = llvm.getelementptr %238[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %243 = llvm.load %242 : !llvm.ptr -> i64
    %244 = llvm.load %arg1 : !llvm.ptr -> i64
    %245 = arith.cmpi ult, %244, %243 : i64
    scf.if %245 {
    } else {
      %542 = arith.subi %244, %243 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_112 = arith.constant 80 : i8
    cf.cond_br %245, ^bb1(%c80_i8_112 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    cf.br ^bb95
  ^bb90:  // pred: ^bb92
    %c1024_i64_113 = arith.constant 1024 : i64
    %246 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_114 = arith.constant -2 : i64
    %247 = arith.addi %246, %c-2_i64_114 : i64
    llvm.store %247, %arg3 : i64, !llvm.ptr
    %c2_i64_115 = arith.constant 2 : i64
    %248 = arith.cmpi ult, %246, %c2_i64_115 : i64
    %c91_i8_116 = arith.constant 91 : i8
    cf.cond_br %248, ^bb1(%c91_i8_116 : i8), ^bb87
  ^bb91:  // pred: ^bb83
    %249 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_117 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %250 = arith.cmpi uge, %249, %c0_i64_117 : i64
    %c80_i8_118 = arith.constant 80 : i8
    cf.cond_br %250, ^bb92, ^bb1(%c80_i8_118 : i8)
  ^bb92:  // pred: ^bb91
    %251 = arith.subi %249, %c0_i64_117 : i64
    llvm.store %251, %arg1 : i64, !llvm.ptr
    cf.br ^bb90
  ^bb93:  // pred: ^bb94
    %c0_i256_119 = arith.constant 0 : i256
    %252 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_119, %252 : i256, !llvm.ptr
    %253 = llvm.getelementptr %252[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %253, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb99
  ^bb94:  // pred: ^bb96
    %c1024_i64_120 = arith.constant 1024 : i64
    %254 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_121 = arith.constant 1 : i64
    %255 = arith.addi %254, %c1_i64_121 : i64
    llvm.store %255, %arg3 : i64, !llvm.ptr
    %256 = arith.cmpi ult, %c1024_i64_120, %255 : i64
    %c92_i8_122 = arith.constant 92 : i8
    cf.cond_br %256, ^bb1(%c92_i8_122 : i8), ^bb93
  ^bb95:  // pred: ^bb89
    %257 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_123 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %258 = arith.cmpi uge, %257, %c3_i64_123 : i64
    %c80_i8_124 = arith.constant 80 : i8
    cf.cond_br %258, ^bb96, ^bb1(%c80_i8_124 : i8)
  ^bb96:  // pred: ^bb95
    %259 = arith.subi %257, %c3_i64_123 : i64
    llvm.store %259, %arg1 : i64, !llvm.ptr
    cf.br ^bb94
  ^bb97:  // pred: ^bb98
    %c0_i256_125 = arith.constant 0 : i256
    %260 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_125, %260 : i256, !llvm.ptr
    %261 = llvm.getelementptr %260[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %261, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb103
  ^bb98:  // pred: ^bb100
    %c1024_i64_126 = arith.constant 1024 : i64
    %262 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_127 = arith.constant 1 : i64
    %263 = arith.addi %262, %c1_i64_127 : i64
    llvm.store %263, %arg3 : i64, !llvm.ptr
    %264 = arith.cmpi ult, %c1024_i64_126, %263 : i64
    %c92_i8_128 = arith.constant 92 : i8
    cf.cond_br %264, ^bb1(%c92_i8_128 : i8), ^bb97
  ^bb99:  // pred: ^bb93
    %265 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_129 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %266 = arith.cmpi uge, %265, %c3_i64_129 : i64
    %c80_i8_130 = arith.constant 80 : i8
    cf.cond_br %266, ^bb100, ^bb1(%c80_i8_130 : i8)
  ^bb100:  // pred: ^bb99
    %267 = arith.subi %265, %c3_i64_129 : i64
    llvm.store %267, %arg1 : i64, !llvm.ptr
    cf.br ^bb98
  ^bb101:  // pred: ^bb102
    %c32_i256 = arith.constant 32 : i256
    %268 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %268 : i256, !llvm.ptr
    %269 = llvm.getelementptr %268[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %269, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb107
  ^bb102:  // pred: ^bb104
    %c1024_i64_131 = arith.constant 1024 : i64
    %270 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_132 = arith.constant 1 : i64
    %271 = arith.addi %270, %c1_i64_132 : i64
    llvm.store %271, %arg3 : i64, !llvm.ptr
    %272 = arith.cmpi ult, %c1024_i64_131, %271 : i64
    %c92_i8_133 = arith.constant 92 : i8
    cf.cond_br %272, ^bb1(%c92_i8_133 : i8), ^bb101
  ^bb103:  // pred: ^bb97
    %273 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_134 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %274 = arith.cmpi uge, %273, %c3_i64_134 : i64
    %c80_i8_135 = arith.constant 80 : i8
    cf.cond_br %274, ^bb104, ^bb1(%c80_i8_135 : i8)
  ^bb104:  // pred: ^bb103
    %275 = arith.subi %273, %c3_i64_134 : i64
    llvm.store %275, %arg1 : i64, !llvm.ptr
    cf.br ^bb102
  ^bb105:  // pred: ^bb106
    %c0_i256_136 = arith.constant 0 : i256
    %276 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_136, %276 : i256, !llvm.ptr
    %277 = llvm.getelementptr %276[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %277, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb111
  ^bb106:  // pred: ^bb108
    %c1024_i64_137 = arith.constant 1024 : i64
    %278 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_138 = arith.constant 1 : i64
    %279 = arith.addi %278, %c1_i64_138 : i64
    llvm.store %279, %arg3 : i64, !llvm.ptr
    %280 = arith.cmpi ult, %c1024_i64_137, %279 : i64
    %c92_i8_139 = arith.constant 92 : i8
    cf.cond_br %280, ^bb1(%c92_i8_139 : i8), ^bb105
  ^bb107:  // pred: ^bb101
    %281 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_140 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %282 = arith.cmpi uge, %281, %c3_i64_140 : i64
    %c80_i8_141 = arith.constant 80 : i8
    cf.cond_br %282, ^bb108, ^bb1(%c80_i8_141 : i8)
  ^bb108:  // pred: ^bb107
    %283 = arith.subi %281, %c3_i64_140 : i64
    llvm.store %283, %arg1 : i64, !llvm.ptr
    cf.br ^bb106
  ^bb109:  // pred: ^bb110
    %c0_i256_142 = arith.constant 0 : i256
    %284 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_142, %284 : i256, !llvm.ptr
    %285 = llvm.getelementptr %284[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %285, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb115
  ^bb110:  // pred: ^bb112
    %c1024_i64_143 = arith.constant 1024 : i64
    %286 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_144 = arith.constant 1 : i64
    %287 = arith.addi %286, %c1_i64_144 : i64
    llvm.store %287, %arg3 : i64, !llvm.ptr
    %288 = arith.cmpi ult, %c1024_i64_143, %287 : i64
    %c92_i8_145 = arith.constant 92 : i8
    cf.cond_br %288, ^bb1(%c92_i8_145 : i8), ^bb109
  ^bb111:  // pred: ^bb105
    %289 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_146 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %290 = arith.cmpi uge, %289, %c3_i64_146 : i64
    %c80_i8_147 = arith.constant 80 : i8
    cf.cond_br %290, ^bb112, ^bb1(%c80_i8_147 : i8)
  ^bb112:  // pred: ^bb111
    %291 = arith.subi %289, %c3_i64_146 : i64
    llvm.store %291, %arg1 : i64, !llvm.ptr
    cf.br ^bb110
  ^bb113:  // pred: ^bb114
    %292 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %293 = llvm.getelementptr %292[-7] : (!llvm.ptr) -> !llvm.ptr, i256
    %294 = llvm.load %293 : !llvm.ptr -> i256
    %295 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %294, %295 : i256, !llvm.ptr
    %296 = llvm.getelementptr %295[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %296, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb119
  ^bb114:  // pred: ^bb116
    %c1024_i64_148 = arith.constant 1024 : i64
    %297 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_149 = arith.constant 1 : i64
    %298 = arith.addi %297, %c1_i64_149 : i64
    llvm.store %298, %arg3 : i64, !llvm.ptr
    %c7_i64_150 = arith.constant 7 : i64
    %299 = arith.cmpi ult, %297, %c7_i64_150 : i64
    %300 = arith.cmpi ult, %c1024_i64_148, %298 : i64
    %301 = arith.xori %299, %300 : i1
    %c92_i8_151 = arith.constant 92 : i8
    cf.cond_br %301, ^bb1(%c92_i8_151 : i8), ^bb113
  ^bb115:  // pred: ^bb109
    %302 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_152 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %303 = arith.cmpi uge, %302, %c3_i64_152 : i64
    %c80_i8_153 = arith.constant 80 : i8
    cf.cond_br %303, ^bb116, ^bb1(%c80_i8_153 : i8)
  ^bb116:  // pred: ^bb115
    %304 = arith.subi %302, %c3_i64_152 : i64
    llvm.store %304, %arg1 : i64, !llvm.ptr
    cf.br ^bb114
  ^bb117:  // pred: ^bb118
    %c65535_i256_154 = arith.constant 65535 : i256
    %305 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_154, %305 : i256, !llvm.ptr
    %306 = llvm.getelementptr %305[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %306, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb131
  ^bb118:  // pred: ^bb120
    %c1024_i64_155 = arith.constant 1024 : i64
    %307 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_156 = arith.constant 1 : i64
    %308 = arith.addi %307, %c1_i64_156 : i64
    llvm.store %308, %arg3 : i64, !llvm.ptr
    %309 = arith.cmpi ult, %c1024_i64_155, %308 : i64
    %c92_i8_157 = arith.constant 92 : i8
    cf.cond_br %309, ^bb1(%c92_i8_157 : i8), ^bb117
  ^bb119:  // pred: ^bb113
    %310 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_158 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %311 = arith.cmpi uge, %310, %c3_i64_158 : i64
    %c80_i8_159 = arith.constant 80 : i8
    cf.cond_br %311, ^bb120, ^bb1(%c80_i8_159 : i8)
  ^bb120:  // pred: ^bb119
    %312 = arith.subi %310, %c3_i64_158 : i64
    llvm.store %312, %arg1 : i64, !llvm.ptr
    cf.br ^bb118
  ^bb121:  // pred: ^bb130
    %313 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %314 = llvm.getelementptr %313[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %315 = llvm.load %314 : !llvm.ptr -> i256
    llvm.store %314, %0 : !llvm.ptr, !llvm.ptr
    %316 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %317 = llvm.getelementptr %316[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %318 = llvm.load %317 : !llvm.ptr -> i256
    llvm.store %317, %0 : !llvm.ptr, !llvm.ptr
    %319 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %320 = llvm.getelementptr %319[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %321 = llvm.load %320 : !llvm.ptr -> i256
    llvm.store %320, %0 : !llvm.ptr, !llvm.ptr
    %322 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %323 = llvm.getelementptr %322[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %324 = llvm.load %323 : !llvm.ptr -> i256
    llvm.store %323, %0 : !llvm.ptr, !llvm.ptr
    %325 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %326 = llvm.getelementptr %325[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %327 = llvm.load %326 : !llvm.ptr -> i256
    llvm.store %326, %0 : !llvm.ptr, !llvm.ptr
    %328 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %329 = llvm.getelementptr %328[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %330 = llvm.load %329 : !llvm.ptr -> i256
    llvm.store %329, %0 : !llvm.ptr, !llvm.ptr
    %331 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %332 = llvm.getelementptr %331[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %333 = llvm.load %332 : !llvm.ptr -> i256
    llvm.store %332, %0 : !llvm.ptr, !llvm.ptr
    %c18446744073709551615_i256_160 = arith.constant 18446744073709551615 : i256
    %334 = arith.cmpi sgt, %327, %c18446744073709551615_i256_160 : i256
    %c84_i8_161 = arith.constant 84 : i8
    cf.cond_br %334, ^bb1(%c84_i8_161 : i8), ^bb122
  ^bb122:  // pred: ^bb121
    %335 = arith.trunci %327 : i256 to i64
    %c0_i64_162 = arith.constant 0 : i64
    %336 = arith.cmpi slt, %335, %c0_i64_162 : i64
    %c84_i8_163 = arith.constant 84 : i8
    cf.cond_br %336, ^bb1(%c84_i8_163 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %c0_i64_164 = arith.constant 0 : i64
    %337 = arith.cmpi ne, %335, %c0_i64_164 : i64
    cf.cond_br %337, ^bb168, ^bb124
  ^bb124:  // 2 preds: ^bb123, ^bb172
    %c18446744073709551615_i256_165 = arith.constant 18446744073709551615 : i256
    %338 = arith.cmpi sgt, %333, %c18446744073709551615_i256_165 : i256
    %c84_i8_166 = arith.constant 84 : i8
    cf.cond_br %338, ^bb1(%c84_i8_166 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %339 = arith.trunci %333 : i256 to i64
    %c0_i64_167 = arith.constant 0 : i64
    %340 = arith.cmpi slt, %339, %c0_i64_167 : i64
    %c84_i8_168 = arith.constant 84 : i8
    cf.cond_br %340, ^bb1(%c84_i8_168 : i8), ^bb126
  ^bb126:  // pred: ^bb125
    %c0_i64_169 = arith.constant 0 : i64
    %341 = arith.cmpi ne, %339, %c0_i64_169 : i64
    cf.cond_br %341, ^bb176, ^bb127
  ^bb127:  // 2 preds: ^bb126, ^bb180
    %342 = arith.trunci %324 : i256 to i64
    %343 = arith.trunci %330 : i256 to i64
    %344 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_170 = arith.constant 1 : i256
    %345 = llvm.alloca %c1_i256_170 x i256 : (i256) -> !llvm.ptr
    llvm.store %321, %345 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_171 = arith.constant 1 : i256
    %346 = llvm.alloca %c1_i256_171 x i256 : (i256) -> !llvm.ptr
    llvm.store %315, %346 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_172 = arith.constant 1 : i256
    %347 = llvm.alloca %c1_i256_172 x i256 : (i256) -> !llvm.ptr
    llvm.store %318, %347 {alignment = 1 : i64} : i256, !llvm.ptr
    %c3_i8_173 = arith.constant 3 : i8
    %348 = call @dora_fn_call(%arg0, %346, %347, %345, %342, %335, %343, %339, %344, %c3_i8_173) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %349 = llvm.getelementptr %348[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %350 = llvm.load %349 : !llvm.ptr -> i8
    %351 = llvm.getelementptr %348[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %352 = llvm.load %351 : !llvm.ptr -> i8
    %c0_i8_174 = arith.constant 0 : i8
    %353 = arith.cmpi ne, %352, %c0_i8_174 : i8
    cf.cond_br %353, ^bb1(%352 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %354 = llvm.getelementptr %348[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %355 = llvm.load %354 : !llvm.ptr -> i64
    %356 = llvm.load %arg1 : !llvm.ptr -> i64
    %357 = arith.cmpi ult, %356, %355 : i64
    scf.if %357 {
    } else {
      %542 = arith.subi %356, %355 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_175 = arith.constant 80 : i8
    cf.cond_br %357, ^bb1(%c80_i8_175 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    %358 = arith.extui %350 : i8 to i256
    %359 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %358, %359 : i256, !llvm.ptr
    %360 = llvm.getelementptr %359[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %360, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb133
  ^bb130:  // pred: ^bb132
    %c1024_i64_176 = arith.constant 1024 : i64
    %361 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-6_i64_177 = arith.constant -6 : i64
    %362 = arith.addi %361, %c-6_i64_177 : i64
    llvm.store %362, %arg3 : i64, !llvm.ptr
    %c7_i64_178 = arith.constant 7 : i64
    %363 = arith.cmpi ult, %361, %c7_i64_178 : i64
    %c91_i8_179 = arith.constant 91 : i8
    cf.cond_br %363, ^bb1(%c91_i8_179 : i8), ^bb121
  ^bb131:  // pred: ^bb117
    %364 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_180 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %365 = arith.cmpi uge, %364, %c0_i64_180 : i64
    %c80_i8_181 = arith.constant 80 : i8
    cf.cond_br %365, ^bb132, ^bb1(%c80_i8_181 : i8)
  ^bb132:  // pred: ^bb131
    %366 = arith.subi %364, %c0_i64_180 : i64
    llvm.store %366, %arg1 : i64, !llvm.ptr
    cf.br ^bb130
  ^bb133:  // pred: ^bb129
    %c0_i64_182 = arith.constant 0 : i64
    %c2_i8 = arith.constant 2 : i8
    %367 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_182, %c0_i64_182, %367, %c2_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c2_i8 : i8
  ^bb134:  // pred: ^bb11
    %c18446744073709551615_i256_183 = arith.constant 18446744073709551615 : i256
    %368 = arith.cmpi sgt, %22, %c18446744073709551615_i256_183 : i256
    %c84_i8_184 = arith.constant 84 : i8
    cf.cond_br %368, ^bb1(%c84_i8_184 : i8), ^bb135
  ^bb135:  // pred: ^bb134
    %369 = arith.trunci %22 : i256 to i64
    %c0_i64_185 = arith.constant 0 : i64
    %370 = arith.cmpi slt, %369, %c0_i64_185 : i64
    %c84_i8_186 = arith.constant 84 : i8
    cf.cond_br %370, ^bb1(%c84_i8_186 : i8), ^bb136
  ^bb136:  // pred: ^bb135
    %371 = arith.addi %369, %c32_i64 : i64
    %c0_i64_187 = arith.constant 0 : i64
    %372 = arith.cmpi slt, %371, %c0_i64_187 : i64
    %c84_i8_188 = arith.constant 84 : i8
    cf.cond_br %372, ^bb1(%c84_i8_188 : i8), ^bb137
  ^bb137:  // pred: ^bb136
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_189 = arith.constant 32 : i64
    %373 = arith.addi %371, %c31_i64 : i64
    %374 = arith.divui %373, %c32_i64_189 : i64
    %c32_i64_190 = arith.constant 32 : i64
    %375 = arith.muli %374, %c32_i64_190 : i64
    %376 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_191 = arith.constant 31 : i64
    %c32_i64_192 = arith.constant 32 : i64
    %377 = arith.addi %376, %c31_i64_191 : i64
    %378 = arith.divui %377, %c32_i64_192 : i64
    %379 = arith.muli %378, %c32_i64_190 : i64
    %380 = arith.cmpi ult, %379, %375 : i64
    cf.cond_br %380, ^bb139, ^bb138
  ^bb138:  // 2 preds: ^bb137, ^bb141
    cf.br ^bb12
  ^bb139:  // pred: ^bb137
    %c3_i64_193 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %381 = arith.muli %378, %378 : i64
    %382 = arith.divui %381, %c512_i64 : i64
    %383 = arith.muli %378, %c3_i64_193 : i64
    %384 = arith.addi %382, %383 : i64
    %c3_i64_194 = arith.constant 3 : i64
    %c512_i64_195 = arith.constant 512 : i64
    %385 = arith.muli %374, %374 : i64
    %386 = arith.divui %385, %c512_i64_195 : i64
    %387 = arith.muli %374, %c3_i64_194 : i64
    %388 = arith.addi %386, %387 : i64
    %389 = arith.subi %388, %384 : i64
    %390 = llvm.load %arg1 : !llvm.ptr -> i64
    %391 = arith.cmpi ult, %390, %389 : i64
    scf.if %391 {
    } else {
      %542 = arith.subi %390, %389 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_196 = arith.constant 80 : i8
    cf.cond_br %391, ^bb1(%c80_i8_196 : i8), ^bb140
  ^bb140:  // pred: ^bb139
    %392 = call @dora_fn_extend_memory(%arg0, %375) : (!llvm.ptr, i64) -> !llvm.ptr
    %393 = llvm.getelementptr %392[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %394 = llvm.load %393 : !llvm.ptr -> i8
    %c0_i8_197 = arith.constant 0 : i8
    %395 = arith.cmpi ne, %394, %c0_i8_197 : i8
    cf.cond_br %395, ^bb1(%394 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    cf.br ^bb138
  ^bb142:  // pred: ^bb31
    %c49152_i64 = arith.constant 49152 : i64
    %396 = arith.cmpi ugt, %73, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %396, ^bb1(%c100_i8 : i8), ^bb143
  ^bb143:  // pred: ^bb142
    %c31_i64_198 = arith.constant 31 : i64
    %c32_i64_199 = arith.constant 32 : i64
    %397 = arith.addi %73, %c31_i64_198 : i64
    %398 = arith.divui %397, %c32_i64_199 : i64
    %c2_i64_200 = arith.constant 2 : i64
    %399 = arith.muli %398, %c2_i64_200 : i64
    %400 = llvm.load %arg1 : !llvm.ptr -> i64
    %401 = arith.cmpi ult, %400, %399 : i64
    scf.if %401 {
    } else {
      %542 = arith.subi %400, %399 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_201 = arith.constant 80 : i8
    cf.cond_br %401, ^bb1(%c80_i8_201 : i8), ^bb144
  ^bb144:  // pred: ^bb143
    %c18446744073709551615_i256_202 = arith.constant 18446744073709551615 : i256
    %402 = arith.cmpi sgt, %66, %c18446744073709551615_i256_202 : i256
    %c84_i8_203 = arith.constant 84 : i8
    cf.cond_br %402, ^bb1(%c84_i8_203 : i8), ^bb145
  ^bb145:  // pred: ^bb144
    %403 = arith.trunci %66 : i256 to i64
    %c0_i64_204 = arith.constant 0 : i64
    %404 = arith.cmpi slt, %403, %c0_i64_204 : i64
    %c84_i8_205 = arith.constant 84 : i8
    cf.cond_br %404, ^bb1(%c84_i8_205 : i8), ^bb146
  ^bb146:  // pred: ^bb145
    %405 = arith.addi %403, %73 : i64
    %c0_i64_206 = arith.constant 0 : i64
    %406 = arith.cmpi slt, %405, %c0_i64_206 : i64
    %c84_i8_207 = arith.constant 84 : i8
    cf.cond_br %406, ^bb1(%c84_i8_207 : i8), ^bb147
  ^bb147:  // pred: ^bb146
    %c31_i64_208 = arith.constant 31 : i64
    %c32_i64_209 = arith.constant 32 : i64
    %407 = arith.addi %405, %c31_i64_208 : i64
    %408 = arith.divui %407, %c32_i64_209 : i64
    %c32_i64_210 = arith.constant 32 : i64
    %409 = arith.muli %408, %c32_i64_210 : i64
    %410 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_211 = arith.constant 31 : i64
    %c32_i64_212 = arith.constant 32 : i64
    %411 = arith.addi %410, %c31_i64_211 : i64
    %412 = arith.divui %411, %c32_i64_212 : i64
    %413 = arith.muli %412, %c32_i64_210 : i64
    %414 = arith.cmpi ult, %413, %409 : i64
    cf.cond_br %414, ^bb149, ^bb148
  ^bb148:  // 2 preds: ^bb147, ^bb151
    cf.br ^bb32
  ^bb149:  // pred: ^bb147
    %c3_i64_213 = arith.constant 3 : i64
    %c512_i64_214 = arith.constant 512 : i64
    %415 = arith.muli %412, %412 : i64
    %416 = arith.divui %415, %c512_i64_214 : i64
    %417 = arith.muli %412, %c3_i64_213 : i64
    %418 = arith.addi %416, %417 : i64
    %c3_i64_215 = arith.constant 3 : i64
    %c512_i64_216 = arith.constant 512 : i64
    %419 = arith.muli %408, %408 : i64
    %420 = arith.divui %419, %c512_i64_216 : i64
    %421 = arith.muli %408, %c3_i64_215 : i64
    %422 = arith.addi %420, %421 : i64
    %423 = arith.subi %422, %418 : i64
    %424 = llvm.load %arg1 : !llvm.ptr -> i64
    %425 = arith.cmpi ult, %424, %423 : i64
    scf.if %425 {
    } else {
      %542 = arith.subi %424, %423 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_217 = arith.constant 80 : i8
    cf.cond_br %425, ^bb1(%c80_i8_217 : i8), ^bb150
  ^bb150:  // pred: ^bb149
    %426 = call @dora_fn_extend_memory(%arg0, %409) : (!llvm.ptr, i64) -> !llvm.ptr
    %427 = llvm.getelementptr %426[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %428 = llvm.load %427 : !llvm.ptr -> i8
    %c0_i8_218 = arith.constant 0 : i8
    %429 = arith.cmpi ne, %428, %c0_i8_218 : i8
    cf.cond_br %429, ^bb1(%428 : i8), ^bb151
  ^bb151:  // pred: ^bb150
    cf.br ^bb148
  ^bb152:  // pred: ^bb69
    %c18446744073709551615_i256_219 = arith.constant 18446744073709551615 : i256
    %430 = arith.cmpi sgt, %170, %c18446744073709551615_i256_219 : i256
    %c84_i8_220 = arith.constant 84 : i8
    cf.cond_br %430, ^bb1(%c84_i8_220 : i8), ^bb153
  ^bb153:  // pred: ^bb152
    %431 = arith.trunci %170 : i256 to i64
    %c0_i64_221 = arith.constant 0 : i64
    %432 = arith.cmpi slt, %431, %c0_i64_221 : i64
    %c84_i8_222 = arith.constant 84 : i8
    cf.cond_br %432, ^bb1(%c84_i8_222 : i8), ^bb154
  ^bb154:  // pred: ^bb153
    %433 = arith.addi %431, %181 : i64
    %c0_i64_223 = arith.constant 0 : i64
    %434 = arith.cmpi slt, %433, %c0_i64_223 : i64
    %c84_i8_224 = arith.constant 84 : i8
    cf.cond_br %434, ^bb1(%c84_i8_224 : i8), ^bb155
  ^bb155:  // pred: ^bb154
    %c31_i64_225 = arith.constant 31 : i64
    %c32_i64_226 = arith.constant 32 : i64
    %435 = arith.addi %433, %c31_i64_225 : i64
    %436 = arith.divui %435, %c32_i64_226 : i64
    %c32_i64_227 = arith.constant 32 : i64
    %437 = arith.muli %436, %c32_i64_227 : i64
    %438 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_228 = arith.constant 31 : i64
    %c32_i64_229 = arith.constant 32 : i64
    %439 = arith.addi %438, %c31_i64_228 : i64
    %440 = arith.divui %439, %c32_i64_229 : i64
    %441 = arith.muli %440, %c32_i64_227 : i64
    %442 = arith.cmpi ult, %441, %437 : i64
    cf.cond_br %442, ^bb157, ^bb156
  ^bb156:  // 2 preds: ^bb155, ^bb159
    cf.br ^bb70
  ^bb157:  // pred: ^bb155
    %c3_i64_230 = arith.constant 3 : i64
    %c512_i64_231 = arith.constant 512 : i64
    %443 = arith.muli %440, %440 : i64
    %444 = arith.divui %443, %c512_i64_231 : i64
    %445 = arith.muli %440, %c3_i64_230 : i64
    %446 = arith.addi %444, %445 : i64
    %c3_i64_232 = arith.constant 3 : i64
    %c512_i64_233 = arith.constant 512 : i64
    %447 = arith.muli %436, %436 : i64
    %448 = arith.divui %447, %c512_i64_233 : i64
    %449 = arith.muli %436, %c3_i64_232 : i64
    %450 = arith.addi %448, %449 : i64
    %451 = arith.subi %450, %446 : i64
    %452 = llvm.load %arg1 : !llvm.ptr -> i64
    %453 = arith.cmpi ult, %452, %451 : i64
    scf.if %453 {
    } else {
      %542 = arith.subi %452, %451 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_234 = arith.constant 80 : i8
    cf.cond_br %453, ^bb1(%c80_i8_234 : i8), ^bb158
  ^bb158:  // pred: ^bb157
    %454 = call @dora_fn_extend_memory(%arg0, %437) : (!llvm.ptr, i64) -> !llvm.ptr
    %455 = llvm.getelementptr %454[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %456 = llvm.load %455 : !llvm.ptr -> i8
    %c0_i8_235 = arith.constant 0 : i8
    %457 = arith.cmpi ne, %456, %c0_i8_235 : i8
    cf.cond_br %457, ^bb1(%456 : i8), ^bb159
  ^bb159:  // pred: ^bb158
    cf.br ^bb156
  ^bb160:  // pred: ^bb72
    %c18446744073709551615_i256_236 = arith.constant 18446744073709551615 : i256
    %458 = arith.cmpi sgt, %176, %c18446744073709551615_i256_236 : i256
    %c84_i8_237 = arith.constant 84 : i8
    cf.cond_br %458, ^bb1(%c84_i8_237 : i8), ^bb161
  ^bb161:  // pred: ^bb160
    %459 = arith.trunci %176 : i256 to i64
    %c0_i64_238 = arith.constant 0 : i64
    %460 = arith.cmpi slt, %459, %c0_i64_238 : i64
    %c84_i8_239 = arith.constant 84 : i8
    cf.cond_br %460, ^bb1(%c84_i8_239 : i8), ^bb162
  ^bb162:  // pred: ^bb161
    %461 = arith.addi %459, %185 : i64
    %c0_i64_240 = arith.constant 0 : i64
    %462 = arith.cmpi slt, %461, %c0_i64_240 : i64
    %c84_i8_241 = arith.constant 84 : i8
    cf.cond_br %462, ^bb1(%c84_i8_241 : i8), ^bb163
  ^bb163:  // pred: ^bb162
    %c31_i64_242 = arith.constant 31 : i64
    %c32_i64_243 = arith.constant 32 : i64
    %463 = arith.addi %461, %c31_i64_242 : i64
    %464 = arith.divui %463, %c32_i64_243 : i64
    %c32_i64_244 = arith.constant 32 : i64
    %465 = arith.muli %464, %c32_i64_244 : i64
    %466 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_245 = arith.constant 31 : i64
    %c32_i64_246 = arith.constant 32 : i64
    %467 = arith.addi %466, %c31_i64_245 : i64
    %468 = arith.divui %467, %c32_i64_246 : i64
    %469 = arith.muli %468, %c32_i64_244 : i64
    %470 = arith.cmpi ult, %469, %465 : i64
    cf.cond_br %470, ^bb165, ^bb164
  ^bb164:  // 2 preds: ^bb163, ^bb167
    cf.br ^bb73
  ^bb165:  // pred: ^bb163
    %c3_i64_247 = arith.constant 3 : i64
    %c512_i64_248 = arith.constant 512 : i64
    %471 = arith.muli %468, %468 : i64
    %472 = arith.divui %471, %c512_i64_248 : i64
    %473 = arith.muli %468, %c3_i64_247 : i64
    %474 = arith.addi %472, %473 : i64
    %c3_i64_249 = arith.constant 3 : i64
    %c512_i64_250 = arith.constant 512 : i64
    %475 = arith.muli %464, %464 : i64
    %476 = arith.divui %475, %c512_i64_250 : i64
    %477 = arith.muli %464, %c3_i64_249 : i64
    %478 = arith.addi %476, %477 : i64
    %479 = arith.subi %478, %474 : i64
    %480 = llvm.load %arg1 : !llvm.ptr -> i64
    %481 = arith.cmpi ult, %480, %479 : i64
    scf.if %481 {
    } else {
      %542 = arith.subi %480, %479 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_251 = arith.constant 80 : i8
    cf.cond_br %481, ^bb1(%c80_i8_251 : i8), ^bb166
  ^bb166:  // pred: ^bb165
    %482 = call @dora_fn_extend_memory(%arg0, %465) : (!llvm.ptr, i64) -> !llvm.ptr
    %483 = llvm.getelementptr %482[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %484 = llvm.load %483 : !llvm.ptr -> i8
    %c0_i8_252 = arith.constant 0 : i8
    %485 = arith.cmpi ne, %484, %c0_i8_252 : i8
    cf.cond_br %485, ^bb1(%484 : i8), ^bb167
  ^bb167:  // pred: ^bb166
    cf.br ^bb164
  ^bb168:  // pred: ^bb123
    %c18446744073709551615_i256_253 = arith.constant 18446744073709551615 : i256
    %486 = arith.cmpi sgt, %324, %c18446744073709551615_i256_253 : i256
    %c84_i8_254 = arith.constant 84 : i8
    cf.cond_br %486, ^bb1(%c84_i8_254 : i8), ^bb169
  ^bb169:  // pred: ^bb168
    %487 = arith.trunci %324 : i256 to i64
    %c0_i64_255 = arith.constant 0 : i64
    %488 = arith.cmpi slt, %487, %c0_i64_255 : i64
    %c84_i8_256 = arith.constant 84 : i8
    cf.cond_br %488, ^bb1(%c84_i8_256 : i8), ^bb170
  ^bb170:  // pred: ^bb169
    %489 = arith.addi %487, %335 : i64
    %c0_i64_257 = arith.constant 0 : i64
    %490 = arith.cmpi slt, %489, %c0_i64_257 : i64
    %c84_i8_258 = arith.constant 84 : i8
    cf.cond_br %490, ^bb1(%c84_i8_258 : i8), ^bb171
  ^bb171:  // pred: ^bb170
    %c31_i64_259 = arith.constant 31 : i64
    %c32_i64_260 = arith.constant 32 : i64
    %491 = arith.addi %489, %c31_i64_259 : i64
    %492 = arith.divui %491, %c32_i64_260 : i64
    %c32_i64_261 = arith.constant 32 : i64
    %493 = arith.muli %492, %c32_i64_261 : i64
    %494 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_262 = arith.constant 31 : i64
    %c32_i64_263 = arith.constant 32 : i64
    %495 = arith.addi %494, %c31_i64_262 : i64
    %496 = arith.divui %495, %c32_i64_263 : i64
    %497 = arith.muli %496, %c32_i64_261 : i64
    %498 = arith.cmpi ult, %497, %493 : i64
    cf.cond_br %498, ^bb173, ^bb172
  ^bb172:  // 2 preds: ^bb171, ^bb175
    cf.br ^bb124
  ^bb173:  // pred: ^bb171
    %c3_i64_264 = arith.constant 3 : i64
    %c512_i64_265 = arith.constant 512 : i64
    %499 = arith.muli %496, %496 : i64
    %500 = arith.divui %499, %c512_i64_265 : i64
    %501 = arith.muli %496, %c3_i64_264 : i64
    %502 = arith.addi %500, %501 : i64
    %c3_i64_266 = arith.constant 3 : i64
    %c512_i64_267 = arith.constant 512 : i64
    %503 = arith.muli %492, %492 : i64
    %504 = arith.divui %503, %c512_i64_267 : i64
    %505 = arith.muli %492, %c3_i64_266 : i64
    %506 = arith.addi %504, %505 : i64
    %507 = arith.subi %506, %502 : i64
    %508 = llvm.load %arg1 : !llvm.ptr -> i64
    %509 = arith.cmpi ult, %508, %507 : i64
    scf.if %509 {
    } else {
      %542 = arith.subi %508, %507 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_268 = arith.constant 80 : i8
    cf.cond_br %509, ^bb1(%c80_i8_268 : i8), ^bb174
  ^bb174:  // pred: ^bb173
    %510 = call @dora_fn_extend_memory(%arg0, %493) : (!llvm.ptr, i64) -> !llvm.ptr
    %511 = llvm.getelementptr %510[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %512 = llvm.load %511 : !llvm.ptr -> i8
    %c0_i8_269 = arith.constant 0 : i8
    %513 = arith.cmpi ne, %512, %c0_i8_269 : i8
    cf.cond_br %513, ^bb1(%512 : i8), ^bb175
  ^bb175:  // pred: ^bb174
    cf.br ^bb172
  ^bb176:  // pred: ^bb126
    %c18446744073709551615_i256_270 = arith.constant 18446744073709551615 : i256
    %514 = arith.cmpi sgt, %330, %c18446744073709551615_i256_270 : i256
    %c84_i8_271 = arith.constant 84 : i8
    cf.cond_br %514, ^bb1(%c84_i8_271 : i8), ^bb177
  ^bb177:  // pred: ^bb176
    %515 = arith.trunci %330 : i256 to i64
    %c0_i64_272 = arith.constant 0 : i64
    %516 = arith.cmpi slt, %515, %c0_i64_272 : i64
    %c84_i8_273 = arith.constant 84 : i8
    cf.cond_br %516, ^bb1(%c84_i8_273 : i8), ^bb178
  ^bb178:  // pred: ^bb177
    %517 = arith.addi %515, %339 : i64
    %c0_i64_274 = arith.constant 0 : i64
    %518 = arith.cmpi slt, %517, %c0_i64_274 : i64
    %c84_i8_275 = arith.constant 84 : i8
    cf.cond_br %518, ^bb1(%c84_i8_275 : i8), ^bb179
  ^bb179:  // pred: ^bb178
    %c31_i64_276 = arith.constant 31 : i64
    %c32_i64_277 = arith.constant 32 : i64
    %519 = arith.addi %517, %c31_i64_276 : i64
    %520 = arith.divui %519, %c32_i64_277 : i64
    %c32_i64_278 = arith.constant 32 : i64
    %521 = arith.muli %520, %c32_i64_278 : i64
    %522 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_279 = arith.constant 31 : i64
    %c32_i64_280 = arith.constant 32 : i64
    %523 = arith.addi %522, %c31_i64_279 : i64
    %524 = arith.divui %523, %c32_i64_280 : i64
    %525 = arith.muli %524, %c32_i64_278 : i64
    %526 = arith.cmpi ult, %525, %521 : i64
    cf.cond_br %526, ^bb181, ^bb180
  ^bb180:  // 2 preds: ^bb179, ^bb183
    cf.br ^bb127
  ^bb181:  // pred: ^bb179
    %c3_i64_281 = arith.constant 3 : i64
    %c512_i64_282 = arith.constant 512 : i64
    %527 = arith.muli %524, %524 : i64
    %528 = arith.divui %527, %c512_i64_282 : i64
    %529 = arith.muli %524, %c3_i64_281 : i64
    %530 = arith.addi %528, %529 : i64
    %c3_i64_283 = arith.constant 3 : i64
    %c512_i64_284 = arith.constant 512 : i64
    %531 = arith.muli %520, %520 : i64
    %532 = arith.divui %531, %c512_i64_284 : i64
    %533 = arith.muli %520, %c3_i64_283 : i64
    %534 = arith.addi %532, %533 : i64
    %535 = arith.subi %534, %530 : i64
    %536 = llvm.load %arg1 : !llvm.ptr -> i64
    %537 = arith.cmpi ult, %536, %535 : i64
    scf.if %537 {
    } else {
      %542 = arith.subi %536, %535 : i64
      llvm.store %542, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_285 = arith.constant 80 : i8
    cf.cond_br %537, ^bb1(%c80_i8_285 : i8), ^bb182
  ^bb182:  // pred: ^bb181
    %538 = call @dora_fn_extend_memory(%arg0, %521) : (!llvm.ptr, i64) -> !llvm.ptr
    %539 = llvm.getelementptr %538[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %540 = llvm.load %539 : !llvm.ptr -> i8
    %c0_i8_286 = arith.constant 0 : i8
    %541 = arith.cmpi ne, %540, %c0_i8_286 : i8
    cf.cond_br %541, ^bb1(%540 : i8), ^bb183
  ^bb183:  // pred: ^bb182
    cf.br ^bb180
  }
}
