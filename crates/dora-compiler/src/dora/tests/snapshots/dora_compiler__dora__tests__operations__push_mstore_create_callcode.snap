---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_debug_print(i32)
  func.func private @dora_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_get_calldata_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_get_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_get_chainid(!llvm.ptr) -> i64
  func.func private @dora_store_in_callvalue_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_caller_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_gaslimit(!llvm.ptr) -> i64
  func.func private @dora_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_copy_code_to_memory(!llvm.ptr, i64, i64, i64)
  func.func private @dora_read_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_write_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> i64
  func.func private @dora_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_get_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_coinbase_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_get_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_codesize_from_address(!llvm.ptr, !llvm.ptr) -> i64
  func.func private @dora_get_address_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_get_prevrandao(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> i8
  func.func private @dora_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> i64
  func.func private @dora_copy_ext_code_to_memory(!llvm.ptr, !llvm.ptr, i64, i64, i64)
  func.func private @dora_get_blob_hash_at_index(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_get_block_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_get_code_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> i8
  func.func private @dora_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> i8
  func.func private @dora_get_return_data_size(!llvm.ptr) -> i64
  func.func private @dora_copy_return_data_into_memory(!llvm.ptr, i64, i64, i64)
  func.func private @dora_selfdestruct(!llvm.ptr, !llvm.ptr) -> i64
  func.func private @dora_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_get_calldata_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_get_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    cf.br ^bb3
  ^bb1(%10: i8):  // 8 preds: ^bb2, ^bb5, ^bb10, ^bb11, ^bb20, ^bb21, ^bb33, ^bb34
    %c0_i64_1 = arith.constant 0 : i64
    call @dora_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %10) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %10 : i8
  ^bb2(%11: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %11 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %12 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %13 = llvm.load %12 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %13 : i256, !llvm.ptr
    %14 = llvm.getelementptr %13[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %14, %12 : !llvm.ptr, !llvm.ptr
    cf.br ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %15 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %16 = llvm.load %15 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %16 : i256, !llvm.ptr
    %17 = llvm.getelementptr %16[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %17, %15 : !llvm.ptr, !llvm.ptr
    cf.br ^bb5
  ^bb5:  // pred: ^bb4
    %18 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %19 = llvm.load %18 : !llvm.ptr -> !llvm.ptr
    %20 = llvm.getelementptr %19[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %21 = llvm.load %20 : !llvm.ptr -> i256
    llvm.store %20, %18 : !llvm.ptr, !llvm.ptr
    %22 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    %24 = llvm.getelementptr %23[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %25 = llvm.load %24 : !llvm.ptr -> i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %26 = arith.trunci %21 : i256 to i64
    %c32_i64 = arith.constant 32 : i64
    %27 = arith.addi %26, %c32_i64 : i64
    %c0_i64_2 = arith.constant 0 : i64
    %28 = arith.cmpi slt, %27, %c0_i64_2 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %28, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %29 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %30 = llvm.load %29 : !llvm.ptr -> i64
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_3 = arith.constant 32 : i64
    %31 = arith.addi %27, %c31_i64 : i64
    %32 = arith.divui %31, %c32_i64_3 : i64
    %33 = arith.muli %32, %c32_i64_3 : i64
    %34 = arith.cmpi ult, %30, %33 : i64
    scf.if %34 {
      %263 = func.call @dora_extend_memory(%arg0, %33) : (!llvm.ptr, i64) -> !llvm.ptr
      llvm.store %33, %29 : i64, !llvm.ptr
      %264 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %263, %264 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %35 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %38 = llvm.intr.bswap(%25)  : (i256) -> i256
    llvm.store %38, %37 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb7
  ^bb7:  // pred: ^bb6
    %c17_i256 = arith.constant 17 : i256
    %39 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %40 : i256, !llvm.ptr
    %41 = llvm.getelementptr %40[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    cf.br ^bb8
  ^bb8:  // pred: ^bb7
    %c15_i256 = arith.constant 15 : i256
    %42 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %43 = llvm.load %42 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %43 : i256, !llvm.ptr
    %44 = llvm.getelementptr %43[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %44, %42 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb9:  // pred: ^bb8
    %c0_i256_4 = arith.constant 0 : i256
    %45 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %46 = llvm.load %45 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_4, %46 : i256, !llvm.ptr
    %47 = llvm.getelementptr %46[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %47, %45 : !llvm.ptr, !llvm.ptr
    cf.br ^bb10
  ^bb10:  // pred: ^bb9
    %48 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %49 = llvm.load %48 : !llvm.ptr -> !llvm.ptr
    %50 = llvm.getelementptr %49[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %51 = llvm.load %50 : !llvm.ptr -> i256
    llvm.store %50, %48 : !llvm.ptr, !llvm.ptr
    %52 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %53 = llvm.load %52 : !llvm.ptr -> !llvm.ptr
    %54 = llvm.getelementptr %53[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %55 = llvm.load %54 : !llvm.ptr -> i256
    llvm.store %54, %52 : !llvm.ptr, !llvm.ptr
    %56 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %57 = llvm.load %56 : !llvm.ptr -> !llvm.ptr
    %58 = llvm.getelementptr %57[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %59 = llvm.load %58 : !llvm.ptr -> i256
    llvm.store %58, %56 : !llvm.ptr, !llvm.ptr
    %60 = arith.trunci %55 : i256 to i64
    %61 = arith.trunci %59 : i256 to i64
    %62 = arith.addi %60, %61 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %63 = arith.cmpi slt, %62, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %63, ^bb1(%c84_i8_6 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %64 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %c31_i64_7 = arith.constant 31 : i64
    %c32_i64_8 = arith.constant 32 : i64
    %66 = arith.addi %62, %c31_i64_7 : i64
    %67 = arith.divui %66, %c32_i64_8 : i64
    %68 = arith.muli %67, %c32_i64_8 : i64
    %69 = arith.cmpi ult, %65, %68 : i64
    scf.if %69 {
      %263 = func.call @dora_extend_memory(%arg0, %68) : (!llvm.ptr, i64) -> !llvm.ptr
      llvm.store %68, %64 : i64, !llvm.ptr
      %264 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %263, %264 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %c1_i256 = arith.constant 1 : i256
    %70 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %51, %70 {alignment = 1 : i64} : i256, !llvm.ptr
    %71 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %73 = llvm.alloca %c1_i64 x i64 : (i64) -> !llvm.ptr
    llvm.store %72, %73 {alignment = 1 : i64} : i64, !llvm.ptr
    %74 = call @dora_create(%arg0, %61, %60, %70, %73) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %75 = arith.cmpi ne, %c0_i8, %74 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %75, ^bb1(%c94_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %76 = llvm.load %70 : !llvm.ptr -> i256
    %77 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> !llvm.ptr
    llvm.store %76, %78 : i256, !llvm.ptr
    %79 = llvm.getelementptr %78[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %79, %77 : !llvm.ptr, !llvm.ptr
    cf.br ^bb13
  ^bb13:  // pred: ^bb12
    %c0_i256_9 = arith.constant 0 : i256
    %80 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_9, %81 : i256, !llvm.ptr
    %82 = llvm.getelementptr %81[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %82, %80 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb14:  // pred: ^bb13
    %c0_i256_10 = arith.constant 0 : i256
    %83 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_10, %84 : i256, !llvm.ptr
    %85 = llvm.getelementptr %84[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %85, %83 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb15:  // pred: ^bb14
    %c0_i256_11 = arith.constant 0 : i256
    %86 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %87 = llvm.load %86 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_11, %87 : i256, !llvm.ptr
    %88 = llvm.getelementptr %87[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %88, %86 : !llvm.ptr, !llvm.ptr
    cf.br ^bb16
  ^bb16:  // pred: ^bb15
    %c0_i256_12 = arith.constant 0 : i256
    %89 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %90 = llvm.load %89 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_12, %90 : i256, !llvm.ptr
    %91 = llvm.getelementptr %90[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %91, %89 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb17:  // pred: ^bb16
    %c0_i256_13 = arith.constant 0 : i256
    %92 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_13, %93 : i256, !llvm.ptr
    %94 = llvm.getelementptr %93[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    cf.br ^bb18
  ^bb18:  // pred: ^bb17
    %95 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %96 = llvm.load %95 : !llvm.ptr -> !llvm.ptr
    %97 = llvm.getelementptr %96[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %98 = llvm.load %97 : !llvm.ptr -> i256
    %99 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> !llvm.ptr
    llvm.store %98, %100 : i256, !llvm.ptr
    %101 = llvm.getelementptr %100[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %101, %99 : !llvm.ptr, !llvm.ptr
    cf.br ^bb19
  ^bb19:  // pred: ^bb18
    %c65535_i256 = arith.constant 65535 : i256
    %102 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %103 = llvm.load %102 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %103 : i256, !llvm.ptr
    %104 = llvm.getelementptr %103[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %104, %102 : !llvm.ptr, !llvm.ptr
    cf.br ^bb20
  ^bb20:  // pred: ^bb19
    %105 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %106 = llvm.load %105 : !llvm.ptr -> !llvm.ptr
    %107 = llvm.getelementptr %106[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %108 = llvm.load %107 : !llvm.ptr -> i256
    llvm.store %107, %105 : !llvm.ptr, !llvm.ptr
    %109 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %110 = llvm.load %109 : !llvm.ptr -> !llvm.ptr
    %111 = llvm.getelementptr %110[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %112 = llvm.load %111 : !llvm.ptr -> i256
    llvm.store %111, %109 : !llvm.ptr, !llvm.ptr
    %113 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %114 = llvm.load %113 : !llvm.ptr -> !llvm.ptr
    %115 = llvm.getelementptr %114[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %116 = llvm.load %115 : !llvm.ptr -> i256
    llvm.store %115, %113 : !llvm.ptr, !llvm.ptr
    %117 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %118 = llvm.load %117 : !llvm.ptr -> !llvm.ptr
    %119 = llvm.getelementptr %118[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %120 = llvm.load %119 : !llvm.ptr -> i256
    llvm.store %119, %117 : !llvm.ptr, !llvm.ptr
    %121 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %122 = llvm.load %121 : !llvm.ptr -> !llvm.ptr
    %123 = llvm.getelementptr %122[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %124 = llvm.load %123 : !llvm.ptr -> i256
    llvm.store %123, %121 : !llvm.ptr, !llvm.ptr
    %125 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> !llvm.ptr
    %127 = llvm.getelementptr %126[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %128 = llvm.load %127 : !llvm.ptr -> i256
    llvm.store %127, %125 : !llvm.ptr, !llvm.ptr
    %129 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %130 = llvm.load %129 : !llvm.ptr -> !llvm.ptr
    %131 = llvm.getelementptr %130[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %132 = llvm.load %131 : !llvm.ptr -> i256
    llvm.store %131, %129 : !llvm.ptr, !llvm.ptr
    %133 = llvm.mlir.addressof @dora_ctx_is_static : !llvm.ptr
    %134 = llvm.load %133 : !llvm.ptr -> i1
    %c0_i256_14 = arith.constant 0 : i256
    %135 = arith.cmpi ne, %116, %c0_i256_14 : i256
    %136 = arith.andi %134, %135 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %136, ^bb1(%c86_i8 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %137 = arith.trunci %108 : i256 to i64
    %138 = arith.trunci %120 : i256 to i64
    %139 = arith.trunci %124 : i256 to i64
    %140 = arith.trunci %128 : i256 to i64
    %141 = arith.trunci %132 : i256 to i64
    %142 = arith.addi %138, %139 : i64
    %143 = arith.addi %140, %141 : i64
    %144 = arith.maxui %142, %143 : i64
    %c0_i64_15 = arith.constant 0 : i64
    %145 = arith.cmpi slt, %144, %c0_i64_15 : i64
    %c84_i8_16 = arith.constant 84 : i8
    cf.cond_br %145, ^bb1(%c84_i8_16 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %146 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> i64
    %c31_i64_17 = arith.constant 31 : i64
    %c32_i64_18 = arith.constant 32 : i64
    %148 = arith.addi %144, %c31_i64_17 : i64
    %149 = arith.divui %148, %c32_i64_18 : i64
    %150 = arith.muli %149, %c32_i64_18 : i64
    %151 = arith.cmpi ult, %147, %150 : i64
    scf.if %151 {
      %263 = func.call @dora_extend_memory(%arg0, %150) : (!llvm.ptr, i64) -> !llvm.ptr
      llvm.store %150, %146 : i64, !llvm.ptr
      %264 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %263, %264 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %152 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %c1_i256_19 = arith.constant 1 : i256
    %154 = llvm.alloca %c1_i256_19 x i256 : (i256) -> !llvm.ptr
    llvm.store %116, %154 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_20 = arith.constant 1 : i256
    %155 = llvm.alloca %c1_i256_20 x i256 : (i256) -> !llvm.ptr
    llvm.store %112, %155 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_21 = arith.constant 1 : i64
    %156 = llvm.alloca %c1_i64_21 x i64 : (i64) -> !llvm.ptr
    %c0_i8_22 = arith.constant 0 : i8
    %157 = call @dora_call(%arg0, %137, %155, %154, %138, %139, %140, %141, %153, %156, %c0_i8_22) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> i8
    %158 = llvm.load %156 : !llvm.ptr -> i64
    %159 = arith.extui %157 : i8 to i256
    %160 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    llvm.store %159, %161 : i256, !llvm.ptr
    %162 = llvm.getelementptr %161[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb23:  // pred: ^bb22
    %c1_i256_23 = arith.constant 1 : i256
    %163 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_23, %164 : i256, !llvm.ptr
    %165 = llvm.getelementptr %164[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %165, %163 : !llvm.ptr, !llvm.ptr
    cf.br ^bb24
  ^bb24:  // pred: ^bb23
    %c0_i256_24 = arith.constant 0 : i256
    %166 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_24, %167 : i256, !llvm.ptr
    %168 = llvm.getelementptr %167[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %168, %166 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb25:  // pred: ^bb24
    %169 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %170 = llvm.load %169 : !llvm.ptr -> !llvm.ptr
    %171 = llvm.getelementptr %170[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %172 = llvm.load %171 : !llvm.ptr -> i256
    llvm.store %171, %169 : !llvm.ptr, !llvm.ptr
    %173 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %174 = llvm.load %173 : !llvm.ptr -> !llvm.ptr
    %175 = llvm.getelementptr %174[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %176 = llvm.load %175 : !llvm.ptr -> i256
    llvm.store %175, %173 : !llvm.ptr, !llvm.ptr
    %c1_i256_25 = arith.constant 1 : i256
    %177 = llvm.alloca %c1_i256_25 x i256 : (i256) -> !llvm.ptr
    llvm.store %172, %177 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_26 = arith.constant 1 : i256
    %178 = llvm.alloca %c1_i256_26 x i256 : (i256) -> !llvm.ptr
    llvm.store %176, %178 {alignment = 1 : i64} : i256, !llvm.ptr
    %179 = call @dora_write_storage(%arg0, %177, %178) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> i64
    cf.br ^bb26
  ^bb26:  // pred: ^bb25
    %c0_i256_27 = arith.constant 0 : i256
    %180 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %181 = llvm.load %180 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_27, %181 : i256, !llvm.ptr
    %182 = llvm.getelementptr %181[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %182, %180 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb27:  // pred: ^bb26
    %c0_i256_28 = arith.constant 0 : i256
    %183 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_28, %184 : i256, !llvm.ptr
    %185 = llvm.getelementptr %184[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %185, %183 : !llvm.ptr, !llvm.ptr
    cf.br ^bb28
  ^bb28:  // pred: ^bb27
    %c32_i256 = arith.constant 32 : i256
    %186 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %187 = llvm.load %186 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %187 : i256, !llvm.ptr
    %188 = llvm.getelementptr %187[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %188, %186 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb29:  // pred: ^bb28
    %c0_i256_29 = arith.constant 0 : i256
    %189 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_29, %190 : i256, !llvm.ptr
    %191 = llvm.getelementptr %190[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %191, %189 : !llvm.ptr, !llvm.ptr
    cf.br ^bb30
  ^bb30:  // pred: ^bb29
    %c0_i256_30 = arith.constant 0 : i256
    %192 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_30, %193 : i256, !llvm.ptr
    %194 = llvm.getelementptr %193[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %194, %192 : !llvm.ptr, !llvm.ptr
    cf.br ^bb31
  ^bb31:  // pred: ^bb30
    %195 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %196 = llvm.load %195 : !llvm.ptr -> !llvm.ptr
    %197 = llvm.getelementptr %196[-7] : (!llvm.ptr) -> !llvm.ptr, i256
    %198 = llvm.load %197 : !llvm.ptr -> i256
    %199 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> !llvm.ptr
    llvm.store %198, %200 : i256, !llvm.ptr
    %201 = llvm.getelementptr %200[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %201, %199 : !llvm.ptr, !llvm.ptr
    cf.br ^bb32
  ^bb32:  // pred: ^bb31
    %c65535_i256_31 = arith.constant 65535 : i256
    %202 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %203 = llvm.load %202 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_31, %203 : i256, !llvm.ptr
    %204 = llvm.getelementptr %203[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %204, %202 : !llvm.ptr, !llvm.ptr
    cf.br ^bb33
  ^bb33:  // pred: ^bb32
    %205 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %206 = llvm.load %205 : !llvm.ptr -> !llvm.ptr
    %207 = llvm.getelementptr %206[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %208 = llvm.load %207 : !llvm.ptr -> i256
    llvm.store %207, %205 : !llvm.ptr, !llvm.ptr
    %209 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %210 = llvm.load %209 : !llvm.ptr -> !llvm.ptr
    %211 = llvm.getelementptr %210[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %212 = llvm.load %211 : !llvm.ptr -> i256
    llvm.store %211, %209 : !llvm.ptr, !llvm.ptr
    %213 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %214 = llvm.load %213 : !llvm.ptr -> !llvm.ptr
    %215 = llvm.getelementptr %214[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %216 = llvm.load %215 : !llvm.ptr -> i256
    llvm.store %215, %213 : !llvm.ptr, !llvm.ptr
    %217 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %218 = llvm.load %217 : !llvm.ptr -> !llvm.ptr
    %219 = llvm.getelementptr %218[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %220 = llvm.load %219 : !llvm.ptr -> i256
    llvm.store %219, %217 : !llvm.ptr, !llvm.ptr
    %221 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %222 = llvm.load %221 : !llvm.ptr -> !llvm.ptr
    %223 = llvm.getelementptr %222[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %224 = llvm.load %223 : !llvm.ptr -> i256
    llvm.store %223, %221 : !llvm.ptr, !llvm.ptr
    %225 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %226 = llvm.load %225 : !llvm.ptr -> !llvm.ptr
    %227 = llvm.getelementptr %226[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %228 = llvm.load %227 : !llvm.ptr -> i256
    llvm.store %227, %225 : !llvm.ptr, !llvm.ptr
    %229 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %230 = llvm.load %229 : !llvm.ptr -> !llvm.ptr
    %231 = llvm.getelementptr %230[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %232 = llvm.load %231 : !llvm.ptr -> i256
    llvm.store %231, %229 : !llvm.ptr, !llvm.ptr
    %233 = llvm.mlir.addressof @dora_ctx_is_static : !llvm.ptr
    %234 = llvm.load %233 : !llvm.ptr -> i1
    %c0_i256_32 = arith.constant 0 : i256
    %235 = arith.cmpi ne, %216, %c0_i256_32 : i256
    %236 = arith.andi %234, %235 : i1
    %c86_i8_33 = arith.constant 86 : i8
    cf.cond_br %236, ^bb1(%c86_i8_33 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %237 = arith.trunci %208 : i256 to i64
    %238 = arith.trunci %220 : i256 to i64
    %239 = arith.trunci %224 : i256 to i64
    %240 = arith.trunci %228 : i256 to i64
    %241 = arith.trunci %232 : i256 to i64
    %242 = arith.addi %238, %239 : i64
    %243 = arith.addi %240, %241 : i64
    %244 = arith.maxui %242, %243 : i64
    %c0_i64_34 = arith.constant 0 : i64
    %245 = arith.cmpi slt, %244, %c0_i64_34 : i64
    %c84_i8_35 = arith.constant 84 : i8
    cf.cond_br %245, ^bb1(%c84_i8_35 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %246 = llvm.mlir.addressof @dora_memory_size : !llvm.ptr
    %247 = llvm.load %246 : !llvm.ptr -> i64
    %c31_i64_36 = arith.constant 31 : i64
    %c32_i64_37 = arith.constant 32 : i64
    %248 = arith.addi %244, %c31_i64_36 : i64
    %249 = arith.divui %248, %c32_i64_37 : i64
    %250 = arith.muli %249, %c32_i64_37 : i64
    %251 = arith.cmpi ult, %247, %250 : i64
    scf.if %251 {
      %263 = func.call @dora_extend_memory(%arg0, %250) : (!llvm.ptr, i64) -> !llvm.ptr
      llvm.store %250, %246 : i64, !llvm.ptr
      %264 = llvm.mlir.addressof @dora_memory_ptr : !llvm.ptr
      llvm.store %263, %264 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %252 = llvm.mlir.addressof @dora_gas_counter : !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> i64
    %c1_i256_38 = arith.constant 1 : i256
    %254 = llvm.alloca %c1_i256_38 x i256 : (i256) -> !llvm.ptr
    llvm.store %216, %254 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_39 = arith.constant 1 : i256
    %255 = llvm.alloca %c1_i256_39 x i256 : (i256) -> !llvm.ptr
    llvm.store %212, %255 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_40 = arith.constant 1 : i64
    %256 = llvm.alloca %c1_i64_40 x i64 : (i64) -> !llvm.ptr
    %c0_i8_41 = arith.constant 0 : i8
    %257 = call @dora_call(%arg0, %237, %255, %254, %238, %239, %240, %241, %253, %256, %c0_i8_41) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> i8
    %258 = llvm.load %256 : !llvm.ptr -> i64
    %259 = arith.extui %257 : i8 to i256
    %260 = llvm.mlir.addressof @dora_stack_ptr : !llvm.ptr
    %261 = llvm.load %260 : !llvm.ptr -> !llvm.ptr
    llvm.store %259, %261 : i256, !llvm.ptr
    %262 = llvm.getelementptr %261[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %262, %260 : !llvm.ptr, !llvm.ptr
    cf.br ^bb36
  ^bb36:  // pred: ^bb35
    %c0_i64_42 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    call @dora_write_result(%arg0, %c0_i64_42, %c0_i64_42, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  }
}
