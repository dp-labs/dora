---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_read_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_write_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 41 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36, ^bb37, ^bb38, ^bb39, ^bb40, ^bb41
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c32_i64 = arith.constant 32 : i64
    %37 = arith.addi %36, %c32_i64 : i64
    %c0_i64_4 = arith.constant 0 : i64
    %38 = arith.cmpi slt, %37, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %38, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_5 = arith.constant 32 : i64
    %39 = arith.addi %37, %c31_i64 : i64
    %40 = arith.divui %39, %c32_i64_5 : i64
    %41 = arith.muli %40, %c32_i64_5 : i64
    %42 = call @dora_fn_extend_memory(%arg0, %41) : (!llvm.ptr, i64) -> !llvm.ptr
    %43 = llvm.getelementptr %42[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %44 = llvm.load %43 : !llvm.ptr -> !llvm.ptr
    %45 = llvm.getelementptr %42[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %46 = llvm.load %45 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %47 = arith.cmpi ne, %46, %c0_i8 : i8
    cf.cond_br %47, ^bb1(%46 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %48 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %44, %48 : !llvm.ptr, !llvm.ptr
    %49 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %41, %49 : i64, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %51 = llvm.load %50 : !llvm.ptr -> !llvm.ptr
    %52 = llvm.getelementptr %51[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %53 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %53, %52 {alignment = 1 : i64} : i256, !llvm.ptr
    %54 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_6 = arith.constant 1 : i64
    %55 = arith.addi %54, %c1_i64_6 : i64
    llvm.store %55, %9 : i64, !llvm.ptr
    %56 = arith.cmpi ult, %c1024_i64, %55 : i64
    %c92_i8_7 = arith.constant 92 : i8
    cf.cond_br %56, ^bb1(%c92_i8_7 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %c17_i256 = arith.constant 17 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    %60 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_8 : i64
    llvm.store %61, %9 : i64, !llvm.ptr
    %62 = arith.cmpi ult, %c1024_i64, %61 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c15_i256 = arith.constant 15 : i256
    %63 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %64 : i256, !llvm.ptr
    %65 = llvm.getelementptr %64[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %65, %63 : !llvm.ptr, !llvm.ptr
    %66 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %67 = arith.addi %66, %c1_i64_10 : i64
    llvm.store %67, %9 : i64, !llvm.ptr
    %68 = arith.cmpi ult, %c1024_i64, %67 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %68, ^bb1(%c92_i8_11 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c0_i256_12 = arith.constant 0 : i256
    %69 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_12, %70 : i256, !llvm.ptr
    %71 = llvm.getelementptr %70[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %71, %69 : !llvm.ptr, !llvm.ptr
    %72 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_13 = arith.constant -2 : i64
    %73 = arith.addi %72, %c-2_i64_13 : i64
    llvm.store %73, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %74 = arith.cmpi ult, %72, %c3_i64 : i64
    %c91_i8_14 = arith.constant 91 : i8
    cf.cond_br %74, ^bb1(%c91_i8_14 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %75 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> !llvm.ptr
    %77 = llvm.getelementptr %76[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %78 = llvm.load %77 : !llvm.ptr -> i256
    llvm.store %77, %75 : !llvm.ptr, !llvm.ptr
    %79 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> !llvm.ptr
    %81 = llvm.getelementptr %80[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %82 = llvm.load %81 : !llvm.ptr -> i256
    llvm.store %81, %79 : !llvm.ptr, !llvm.ptr
    %83 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> !llvm.ptr
    %85 = llvm.getelementptr %84[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %86 = llvm.load %85 : !llvm.ptr -> i256
    llvm.store %85, %83 : !llvm.ptr, !llvm.ptr
    %87 = arith.trunci %82 : i256 to i64
    %88 = arith.trunci %86 : i256 to i64
    %89 = arith.addi %87, %88 : i64
    %c0_i64_15 = arith.constant 0 : i64
    %90 = arith.cmpi slt, %89, %c0_i64_15 : i64
    %c84_i8_16 = arith.constant 84 : i8
    cf.cond_br %90, ^bb1(%c84_i8_16 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c31_i64_17 = arith.constant 31 : i64
    %c32_i64_18 = arith.constant 32 : i64
    %91 = arith.addi %89, %c31_i64_17 : i64
    %92 = arith.divui %91, %c32_i64_18 : i64
    %93 = arith.muli %92, %c32_i64_18 : i64
    %94 = call @dora_fn_extend_memory(%arg0, %93) : (!llvm.ptr, i64) -> !llvm.ptr
    %95 = llvm.getelementptr %94[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %96 = llvm.load %95 : !llvm.ptr -> !llvm.ptr
    %97 = llvm.getelementptr %94[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %98 = llvm.load %97 : !llvm.ptr -> i8
    %c0_i8_19 = arith.constant 0 : i8
    %99 = arith.cmpi ne, %98, %c0_i8_19 : i8
    cf.cond_br %99, ^bb1(%98 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %100 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %96, %100 : !llvm.ptr, !llvm.ptr
    %101 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %93, %101 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %102 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %78, %102 {alignment = 1 : i64} : i256, !llvm.ptr
    %103 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> i64
    %c1_i64_20 = arith.constant 1 : i64
    %105 = llvm.alloca %c1_i64_20 x i64 : (i64) -> !llvm.ptr
    llvm.store %104, %105 {alignment = 1 : i64} : i64, !llvm.ptr
    %106 = call @dora_fn_create(%arg0, %88, %87, %102, %105) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %107 = llvm.getelementptr %106[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %108 = llvm.load %107 : !llvm.ptr -> i8
    %109 = llvm.getelementptr %106[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %110 = llvm.load %109 : !llvm.ptr -> i8
    %c0_i8_21 = arith.constant 0 : i8
    %111 = arith.cmpi ne, %110, %c0_i8_21 : i8
    cf.cond_br %111, ^bb1(%110 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %c0_i8_22 = arith.constant 0 : i8
    %112 = arith.cmpi ne, %c0_i8_22, %108 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %112, ^bb1(%c94_i8 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %113 = llvm.load %102 : !llvm.ptr -> i256
    %114 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> !llvm.ptr
    llvm.store %113, %115 : i256, !llvm.ptr
    %116 = llvm.getelementptr %115[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %116, %114 : !llvm.ptr, !llvm.ptr
    %117 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %118 = arith.addi %117, %c1_i64_23 : i64
    llvm.store %118, %9 : i64, !llvm.ptr
    %119 = arith.cmpi ult, %c1024_i64, %118 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %119, ^bb1(%c92_i8_24 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c0_i256_25 = arith.constant 0 : i256
    %120 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %121 = llvm.load %120 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_25, %121 : i256, !llvm.ptr
    %122 = llvm.getelementptr %121[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %122, %120 : !llvm.ptr, !llvm.ptr
    %123 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_26 = arith.constant 1 : i64
    %124 = arith.addi %123, %c1_i64_26 : i64
    llvm.store %124, %9 : i64, !llvm.ptr
    %125 = arith.cmpi ult, %c1024_i64, %124 : i64
    %c92_i8_27 = arith.constant 92 : i8
    cf.cond_br %125, ^bb1(%c92_i8_27 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %c0_i256_28 = arith.constant 0 : i256
    %126 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_28, %127 : i256, !llvm.ptr
    %128 = llvm.getelementptr %127[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %128, %126 : !llvm.ptr, !llvm.ptr
    %129 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_29 = arith.constant 1 : i64
    %130 = arith.addi %129, %c1_i64_29 : i64
    llvm.store %130, %9 : i64, !llvm.ptr
    %131 = arith.cmpi ult, %c1024_i64, %130 : i64
    %c92_i8_30 = arith.constant 92 : i8
    cf.cond_br %131, ^bb1(%c92_i8_30 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %c0_i256_31 = arith.constant 0 : i256
    %132 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_31, %133 : i256, !llvm.ptr
    %134 = llvm.getelementptr %133[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %134, %132 : !llvm.ptr, !llvm.ptr
    %135 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_32 = arith.constant 1 : i64
    %136 = arith.addi %135, %c1_i64_32 : i64
    llvm.store %136, %9 : i64, !llvm.ptr
    %137 = arith.cmpi ult, %c1024_i64, %136 : i64
    %c92_i8_33 = arith.constant 92 : i8
    cf.cond_br %137, ^bb1(%c92_i8_33 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i256_34 = arith.constant 0 : i256
    %138 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %139 = llvm.load %138 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_34, %139 : i256, !llvm.ptr
    %140 = llvm.getelementptr %139[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %140, %138 : !llvm.ptr, !llvm.ptr
    %141 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_35 = arith.constant 1 : i64
    %142 = arith.addi %141, %c1_i64_35 : i64
    llvm.store %142, %9 : i64, !llvm.ptr
    %143 = arith.cmpi ult, %c1024_i64, %142 : i64
    %c92_i8_36 = arith.constant 92 : i8
    cf.cond_br %143, ^bb1(%c92_i8_36 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %c0_i256_37 = arith.constant 0 : i256
    %144 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_37, %145 : i256, !llvm.ptr
    %146 = llvm.getelementptr %145[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %146, %144 : !llvm.ptr, !llvm.ptr
    %147 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_38 = arith.constant 1 : i64
    %148 = arith.addi %147, %c1_i64_38 : i64
    llvm.store %148, %9 : i64, !llvm.ptr
    %149 = arith.cmpi ult, %c1024_i64, %148 : i64
    %c92_i8_39 = arith.constant 92 : i8
    cf.cond_br %149, ^bb1(%c92_i8_39 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %150 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %151 = llvm.load %150 : !llvm.ptr -> !llvm.ptr
    %152 = llvm.getelementptr %151[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %153 = llvm.load %152 : !llvm.ptr -> i256
    %154 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> !llvm.ptr
    llvm.store %153, %155 : i256, !llvm.ptr
    %156 = llvm.getelementptr %155[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %156, %154 : !llvm.ptr, !llvm.ptr
    %157 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %158 = arith.addi %157, %c1_i64_40 : i64
    llvm.store %158, %9 : i64, !llvm.ptr
    %159 = arith.cmpi ult, %c1024_i64, %158 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %159, ^bb1(%c92_i8_41 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c65535_i256 = arith.constant 65535 : i256
    %160 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %161 : i256, !llvm.ptr
    %162 = llvm.getelementptr %161[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    %163 = llvm.load %9 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %164 = arith.addi %163, %c-6_i64 : i64
    llvm.store %164, %9 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %165 = arith.cmpi ult, %163, %c7_i64 : i64
    %c91_i8_42 = arith.constant 91 : i8
    cf.cond_br %165, ^bb1(%c91_i8_42 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %166 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> !llvm.ptr
    %168 = llvm.getelementptr %167[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %169 = llvm.load %168 : !llvm.ptr -> i256
    llvm.store %168, %166 : !llvm.ptr, !llvm.ptr
    %170 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> !llvm.ptr
    %172 = llvm.getelementptr %171[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %173 = llvm.load %172 : !llvm.ptr -> i256
    llvm.store %172, %170 : !llvm.ptr, !llvm.ptr
    %174 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %175 = llvm.load %174 : !llvm.ptr -> !llvm.ptr
    %176 = llvm.getelementptr %175[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %177 = llvm.load %176 : !llvm.ptr -> i256
    llvm.store %176, %174 : !llvm.ptr, !llvm.ptr
    %178 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %179 = llvm.load %178 : !llvm.ptr -> !llvm.ptr
    %180 = llvm.getelementptr %179[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %181 = llvm.load %180 : !llvm.ptr -> i256
    llvm.store %180, %178 : !llvm.ptr, !llvm.ptr
    %182 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %183 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    %184 = llvm.getelementptr %183[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %185 = llvm.load %184 : !llvm.ptr -> i256
    llvm.store %184, %182 : !llvm.ptr, !llvm.ptr
    %186 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %187 = llvm.load %186 : !llvm.ptr -> !llvm.ptr
    %188 = llvm.getelementptr %187[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %189 = llvm.load %188 : !llvm.ptr -> i256
    llvm.store %188, %186 : !llvm.ptr, !llvm.ptr
    %190 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %191 = llvm.load %190 : !llvm.ptr -> !llvm.ptr
    %192 = llvm.getelementptr %191[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %193 = llvm.load %192 : !llvm.ptr -> i256
    llvm.store %192, %190 : !llvm.ptr, !llvm.ptr
    %194 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %195 = llvm.load %194 : !llvm.ptr -> i1
    %c0_i256_43 = arith.constant 0 : i256
    %196 = arith.cmpi ne, %177, %c0_i256_43 : i256
    %197 = arith.andi %195, %196 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %197, ^bb1(%c86_i8 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %198 = arith.trunci %169 : i256 to i64
    %199 = arith.trunci %181 : i256 to i64
    %200 = arith.trunci %185 : i256 to i64
    %201 = arith.trunci %189 : i256 to i64
    %202 = arith.trunci %193 : i256 to i64
    %203 = arith.addi %199, %200 : i64
    %204 = arith.addi %201, %202 : i64
    %205 = arith.maxui %203, %204 : i64
    %c0_i64_44 = arith.constant 0 : i64
    %206 = arith.cmpi slt, %205, %c0_i64_44 : i64
    %c84_i8_45 = arith.constant 84 : i8
    cf.cond_br %206, ^bb1(%c84_i8_45 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %c31_i64_46 = arith.constant 31 : i64
    %c32_i64_47 = arith.constant 32 : i64
    %207 = arith.addi %205, %c31_i64_46 : i64
    %208 = arith.divui %207, %c32_i64_47 : i64
    %209 = arith.muli %208, %c32_i64_47 : i64
    %210 = call @dora_fn_extend_memory(%arg0, %209) : (!llvm.ptr, i64) -> !llvm.ptr
    %211 = llvm.getelementptr %210[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %212 = llvm.load %211 : !llvm.ptr -> !llvm.ptr
    %213 = llvm.getelementptr %210[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %214 = llvm.load %213 : !llvm.ptr -> i8
    %c0_i8_48 = arith.constant 0 : i8
    %215 = arith.cmpi ne, %214, %c0_i8_48 : i8
    cf.cond_br %215, ^bb1(%214 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %216 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %212, %216 : !llvm.ptr, !llvm.ptr
    %217 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %209, %217 : i64, !llvm.ptr
    %218 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %219 = llvm.load %218 : !llvm.ptr -> i64
    %c1_i256_49 = arith.constant 1 : i256
    %220 = llvm.alloca %c1_i256_49 x i256 : (i256) -> !llvm.ptr
    llvm.store %177, %220 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_50 = arith.constant 1 : i256
    %221 = llvm.alloca %c1_i256_50 x i256 : (i256) -> !llvm.ptr
    llvm.store %173, %221 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_51 = arith.constant 1 : i64
    %222 = llvm.alloca %c1_i64_51 x i64 : (i64) -> !llvm.ptr
    %c0_i8_52 = arith.constant 0 : i8
    %223 = call @dora_fn_call(%arg0, %198, %221, %220, %199, %200, %201, %202, %219, %222, %c0_i8_52) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %224 = llvm.getelementptr %223[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %225 = llvm.load %224 : !llvm.ptr -> i8
    %226 = llvm.getelementptr %223[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %227 = llvm.load %226 : !llvm.ptr -> i8
    %c0_i8_53 = arith.constant 0 : i8
    %228 = arith.cmpi ne, %227, %c0_i8_53 : i8
    cf.cond_br %228, ^bb1(%227 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %229 = llvm.load %222 : !llvm.ptr -> i64
    %230 = arith.extui %225 : i8 to i256
    %231 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %232 = llvm.load %231 : !llvm.ptr -> !llvm.ptr
    llvm.store %230, %232 : i256, !llvm.ptr
    %233 = llvm.getelementptr %232[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %233, %231 : !llvm.ptr, !llvm.ptr
    %234 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_54 = arith.constant 1 : i64
    %235 = arith.addi %234, %c1_i64_54 : i64
    llvm.store %235, %9 : i64, !llvm.ptr
    %236 = arith.cmpi ult, %c1024_i64, %235 : i64
    %c92_i8_55 = arith.constant 92 : i8
    cf.cond_br %236, ^bb1(%c92_i8_55 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c1_i256_56 = arith.constant 1 : i256
    %237 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_56, %238 : i256, !llvm.ptr
    %239 = llvm.getelementptr %238[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %239, %237 : !llvm.ptr, !llvm.ptr
    %240 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_57 = arith.constant 1 : i64
    %241 = arith.addi %240, %c1_i64_57 : i64
    llvm.store %241, %9 : i64, !llvm.ptr
    %242 = arith.cmpi ult, %c1024_i64, %241 : i64
    %c92_i8_58 = arith.constant 92 : i8
    cf.cond_br %242, ^bb1(%c92_i8_58 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c0_i256_59 = arith.constant 0 : i256
    %243 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %244 = llvm.load %243 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_59, %244 : i256, !llvm.ptr
    %245 = llvm.getelementptr %244[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %245, %243 : !llvm.ptr, !llvm.ptr
    %246 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_60 = arith.constant -2 : i64
    %247 = arith.addi %246, %c-2_i64_60 : i64
    llvm.store %247, %9 : i64, !llvm.ptr
    %c2_i64_61 = arith.constant 2 : i64
    %248 = arith.cmpi ult, %246, %c2_i64_61 : i64
    %c91_i8_62 = arith.constant 91 : i8
    cf.cond_br %248, ^bb1(%c91_i8_62 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %249 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> !llvm.ptr
    %251 = llvm.getelementptr %250[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %252 = llvm.load %251 : !llvm.ptr -> i256
    llvm.store %251, %249 : !llvm.ptr, !llvm.ptr
    %253 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %254 = llvm.load %253 : !llvm.ptr -> !llvm.ptr
    %255 = llvm.getelementptr %254[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %256 = llvm.load %255 : !llvm.ptr -> i256
    llvm.store %255, %253 : !llvm.ptr, !llvm.ptr
    %c1_i256_63 = arith.constant 1 : i256
    %257 = llvm.alloca %c1_i256_63 x i256 : (i256) -> !llvm.ptr
    llvm.store %252, %257 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_64 = arith.constant 1 : i256
    %258 = llvm.alloca %c1_i256_64 x i256 : (i256) -> !llvm.ptr
    llvm.store %256, %258 {alignment = 1 : i64} : i256, !llvm.ptr
    %259 = call @dora_fn_write_storage(%arg0, %257, %258) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %260 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_65 = arith.constant 1 : i64
    %261 = arith.addi %260, %c1_i64_65 : i64
    llvm.store %261, %9 : i64, !llvm.ptr
    %262 = arith.cmpi ult, %c1024_i64, %261 : i64
    %c92_i8_66 = arith.constant 92 : i8
    cf.cond_br %262, ^bb1(%c92_i8_66 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i256_67 = arith.constant 0 : i256
    %263 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %264 = llvm.load %263 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_67, %264 : i256, !llvm.ptr
    %265 = llvm.getelementptr %264[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %265, %263 : !llvm.ptr, !llvm.ptr
    %266 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_68 = arith.constant 1 : i64
    %267 = arith.addi %266, %c1_i64_68 : i64
    llvm.store %267, %9 : i64, !llvm.ptr
    %268 = arith.cmpi ult, %c1024_i64, %267 : i64
    %c92_i8_69 = arith.constant 92 : i8
    cf.cond_br %268, ^bb1(%c92_i8_69 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i256_70 = arith.constant 0 : i256
    %269 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %270 = llvm.load %269 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_70, %270 : i256, !llvm.ptr
    %271 = llvm.getelementptr %270[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %271, %269 : !llvm.ptr, !llvm.ptr
    %272 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_71 = arith.constant 1 : i64
    %273 = arith.addi %272, %c1_i64_71 : i64
    llvm.store %273, %9 : i64, !llvm.ptr
    %274 = arith.cmpi ult, %c1024_i64, %273 : i64
    %c92_i8_72 = arith.constant 92 : i8
    cf.cond_br %274, ^bb1(%c92_i8_72 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c32_i256 = arith.constant 32 : i256
    %275 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %276 = llvm.load %275 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %276 : i256, !llvm.ptr
    %277 = llvm.getelementptr %276[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %277, %275 : !llvm.ptr, !llvm.ptr
    %278 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %279 = arith.addi %278, %c1_i64_73 : i64
    llvm.store %279, %9 : i64, !llvm.ptr
    %280 = arith.cmpi ult, %c1024_i64, %279 : i64
    %c92_i8_74 = arith.constant 92 : i8
    cf.cond_br %280, ^bb1(%c92_i8_74 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c0_i256_75 = arith.constant 0 : i256
    %281 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %282 = llvm.load %281 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_75, %282 : i256, !llvm.ptr
    %283 = llvm.getelementptr %282[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %283, %281 : !llvm.ptr, !llvm.ptr
    %284 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_76 = arith.constant 1 : i64
    %285 = arith.addi %284, %c1_i64_76 : i64
    llvm.store %285, %9 : i64, !llvm.ptr
    %286 = arith.cmpi ult, %c1024_i64, %285 : i64
    %c92_i8_77 = arith.constant 92 : i8
    cf.cond_br %286, ^bb1(%c92_i8_77 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %c0_i256_78 = arith.constant 0 : i256
    %287 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %288 = llvm.load %287 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_78, %288 : i256, !llvm.ptr
    %289 = llvm.getelementptr %288[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %289, %287 : !llvm.ptr, !llvm.ptr
    %290 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_79 = arith.constant 1 : i64
    %291 = arith.addi %290, %c1_i64_79 : i64
    llvm.store %291, %9 : i64, !llvm.ptr
    %292 = arith.cmpi ult, %c1024_i64, %291 : i64
    %c92_i8_80 = arith.constant 92 : i8
    cf.cond_br %292, ^bb1(%c92_i8_80 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %293 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %294 = llvm.load %293 : !llvm.ptr -> !llvm.ptr
    %295 = llvm.getelementptr %294[-7] : (!llvm.ptr) -> !llvm.ptr, i256
    %296 = llvm.load %295 : !llvm.ptr -> i256
    %297 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %298 = llvm.load %297 : !llvm.ptr -> !llvm.ptr
    llvm.store %296, %298 : i256, !llvm.ptr
    %299 = llvm.getelementptr %298[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %299, %297 : !llvm.ptr, !llvm.ptr
    %300 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_81 = arith.constant 1 : i64
    %301 = arith.addi %300, %c1_i64_81 : i64
    llvm.store %301, %9 : i64, !llvm.ptr
    %302 = arith.cmpi ult, %c1024_i64, %301 : i64
    %c92_i8_82 = arith.constant 92 : i8
    cf.cond_br %302, ^bb1(%c92_i8_82 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %c65535_i256_83 = arith.constant 65535 : i256
    %303 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %304 = llvm.load %303 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_83, %304 : i256, !llvm.ptr
    %305 = llvm.getelementptr %304[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %305, %303 : !llvm.ptr, !llvm.ptr
    %306 = llvm.load %9 : !llvm.ptr -> i64
    %c-6_i64_84 = arith.constant -6 : i64
    %307 = arith.addi %306, %c-6_i64_84 : i64
    llvm.store %307, %9 : i64, !llvm.ptr
    %c7_i64_85 = arith.constant 7 : i64
    %308 = arith.cmpi ult, %306, %c7_i64_85 : i64
    %c91_i8_86 = arith.constant 91 : i8
    cf.cond_br %308, ^bb1(%c91_i8_86 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %309 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %310 = llvm.load %309 : !llvm.ptr -> !llvm.ptr
    %311 = llvm.getelementptr %310[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %312 = llvm.load %311 : !llvm.ptr -> i256
    llvm.store %311, %309 : !llvm.ptr, !llvm.ptr
    %313 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %314 = llvm.load %313 : !llvm.ptr -> !llvm.ptr
    %315 = llvm.getelementptr %314[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %316 = llvm.load %315 : !llvm.ptr -> i256
    llvm.store %315, %313 : !llvm.ptr, !llvm.ptr
    %317 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %318 = llvm.load %317 : !llvm.ptr -> !llvm.ptr
    %319 = llvm.getelementptr %318[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %320 = llvm.load %319 : !llvm.ptr -> i256
    llvm.store %319, %317 : !llvm.ptr, !llvm.ptr
    %321 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %322 = llvm.load %321 : !llvm.ptr -> !llvm.ptr
    %323 = llvm.getelementptr %322[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %324 = llvm.load %323 : !llvm.ptr -> i256
    llvm.store %323, %321 : !llvm.ptr, !llvm.ptr
    %325 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %326 = llvm.load %325 : !llvm.ptr -> !llvm.ptr
    %327 = llvm.getelementptr %326[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %328 = llvm.load %327 : !llvm.ptr -> i256
    llvm.store %327, %325 : !llvm.ptr, !llvm.ptr
    %329 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %330 = llvm.load %329 : !llvm.ptr -> !llvm.ptr
    %331 = llvm.getelementptr %330[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %332 = llvm.load %331 : !llvm.ptr -> i256
    llvm.store %331, %329 : !llvm.ptr, !llvm.ptr
    %333 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %334 = llvm.load %333 : !llvm.ptr -> !llvm.ptr
    %335 = llvm.getelementptr %334[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %336 = llvm.load %335 : !llvm.ptr -> i256
    llvm.store %335, %333 : !llvm.ptr, !llvm.ptr
    %337 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %338 = llvm.load %337 : !llvm.ptr -> i1
    %c0_i256_87 = arith.constant 0 : i256
    %339 = arith.cmpi ne, %320, %c0_i256_87 : i256
    %340 = arith.andi %338, %339 : i1
    %c86_i8_88 = arith.constant 86 : i8
    cf.cond_br %340, ^bb1(%c86_i8_88 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %341 = arith.trunci %312 : i256 to i64
    %342 = arith.trunci %324 : i256 to i64
    %343 = arith.trunci %328 : i256 to i64
    %344 = arith.trunci %332 : i256 to i64
    %345 = arith.trunci %336 : i256 to i64
    %346 = arith.addi %342, %343 : i64
    %347 = arith.addi %344, %345 : i64
    %348 = arith.maxui %346, %347 : i64
    %c0_i64_89 = arith.constant 0 : i64
    %349 = arith.cmpi slt, %348, %c0_i64_89 : i64
    %c84_i8_90 = arith.constant 84 : i8
    cf.cond_br %349, ^bb1(%c84_i8_90 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %c31_i64_91 = arith.constant 31 : i64
    %c32_i64_92 = arith.constant 32 : i64
    %350 = arith.addi %348, %c31_i64_91 : i64
    %351 = arith.divui %350, %c32_i64_92 : i64
    %352 = arith.muli %351, %c32_i64_92 : i64
    %353 = call @dora_fn_extend_memory(%arg0, %352) : (!llvm.ptr, i64) -> !llvm.ptr
    %354 = llvm.getelementptr %353[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %355 = llvm.load %354 : !llvm.ptr -> !llvm.ptr
    %356 = llvm.getelementptr %353[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %357 = llvm.load %356 : !llvm.ptr -> i8
    %c0_i8_93 = arith.constant 0 : i8
    %358 = arith.cmpi ne, %357, %c0_i8_93 : i8
    cf.cond_br %358, ^bb1(%357 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %359 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %355, %359 : !llvm.ptr, !llvm.ptr
    %360 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %352, %360 : i64, !llvm.ptr
    %361 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %362 = llvm.load %361 : !llvm.ptr -> i64
    %c1_i256_94 = arith.constant 1 : i256
    %363 = llvm.alloca %c1_i256_94 x i256 : (i256) -> !llvm.ptr
    llvm.store %320, %363 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_95 = arith.constant 1 : i256
    %364 = llvm.alloca %c1_i256_95 x i256 : (i256) -> !llvm.ptr
    llvm.store %316, %364 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_96 = arith.constant 1 : i64
    %365 = llvm.alloca %c1_i64_96 x i64 : (i64) -> !llvm.ptr
    %c0_i8_97 = arith.constant 0 : i8
    %366 = call @dora_fn_call(%arg0, %341, %364, %363, %342, %343, %344, %345, %362, %365, %c0_i8_97) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %367 = llvm.getelementptr %366[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %368 = llvm.load %367 : !llvm.ptr -> i8
    %369 = llvm.getelementptr %366[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %370 = llvm.load %369 : !llvm.ptr -> i8
    %c0_i8_98 = arith.constant 0 : i8
    %371 = arith.cmpi ne, %370, %c0_i8_98 : i8
    cf.cond_br %371, ^bb1(%370 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %372 = llvm.load %365 : !llvm.ptr -> i64
    %373 = arith.extui %368 : i8 to i256
    %374 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %375 = llvm.load %374 : !llvm.ptr -> !llvm.ptr
    llvm.store %373, %375 : i256, !llvm.ptr
    %376 = llvm.getelementptr %375[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %376, %374 : !llvm.ptr, !llvm.ptr
    cf.br ^bb43
  ^bb43:  // pred: ^bb42
    %c0_i64_99 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %377 = call @dora_fn_write_result(%arg0, %c0_i64_99, %c0_i64_99, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
