---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: !llvm.ptr, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%1: i8):  // 105 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb34, ^bb36, ^bb37, ^bb40, ^bb41, ^bb44, ^bb45, ^bb48, ^bb49, ^bb52, ^bb53, ^bb56, ^bb57, ^bb60, ^bb61, ^bb64, ^bb65, ^bb67, ^bb68, ^bb70, ^bb71, ^bb73, ^bb74, ^bb76, ^bb77, ^bb80, ^bb81, ^bb84, ^bb85, ^bb87, ^bb88, ^bb90, ^bb91, ^bb94, ^bb95, ^bb98, ^bb99, ^bb102, ^bb103, ^bb106, ^bb107, ^bb110, ^bb111, ^bb114, ^bb115, ^bb118, ^bb119, ^bb121, ^bb122, ^bb124, ^bb125, ^bb127, ^bb128, ^bb130, ^bb131, ^bb134, ^bb135, ^bb136, ^bb139, ^bb140, ^bb142, ^bb143, ^bb144, ^bb145, ^bb146, ^bb149, ^bb150, ^bb152, ^bb153, ^bb154, ^bb157, ^bb158, ^bb160, ^bb161, ^bb162, ^bb165, ^bb166, ^bb168, ^bb169, ^bb170, ^bb173, ^bb174, ^bb176, ^bb177, ^bb178, ^bb181, ^bb182
    %c0_i64_0 = arith.constant 0 : i64
    %2 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %2, %1) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %1 : i8
  ^bb2(%3: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %3 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %4 = llvm.load %arg3 : !llvm.ptr -> i64
    %5 = llvm.getelementptr %arg2[%4] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %6 = arith.addi %4, %c1_i64 : i64
    llvm.store %6, %arg3 : i64, !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %5 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %7 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %8 = arith.addi %7, %c1_i64_1 : i64
    %9 = arith.cmpi ult, %c1024_i64, %8 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %9, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %10 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %11 = arith.cmpi uge, %10, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %11, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %12 = arith.subi %10, %c3_i64 : i64
    llvm.store %12, %arg1 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %13 = llvm.load %arg3 : !llvm.ptr -> i64
    %14 = llvm.getelementptr %arg2[%13] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %15 = arith.addi %13, %c1_i64_2 : i64
    llvm.store %15, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %14 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %16 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %17 = arith.addi %16, %c1_i64_4 : i64
    %18 = arith.cmpi ult, %c1024_i64_3, %17 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %18, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %19 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %20 = arith.cmpi uge, %19, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %20, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %21 = arith.subi %19, %c3_i64_6 : i64
    llvm.store %21, %arg1 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %22 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %23 = arith.subi %22, %c1_i64_8 : i64
    %24 = llvm.getelementptr %arg2[%23] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %23, %arg3 : i64, !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> i256
    %26 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_9 = arith.constant 1 : i64
    %27 = arith.subi %26, %c1_i64_9 : i64
    %28 = llvm.getelementptr %arg2[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %27, %arg3 : i64, !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %30 = arith.cmpi ne, %c32_i64, %c0_i64_10 : i64
    cf.cond_br %30, ^bb134, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb138
    %31 = arith.trunci %25 : i256 to i64
    %32 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %35 = llvm.intr.bswap(%29)  : (i256) -> i256
    llvm.store %35, %34 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_11 = arith.constant 1024 : i64
    %36 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %37 = arith.addi %36, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %38 = arith.cmpi ult, %36, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %38, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %39 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %40 = arith.cmpi uge, %39, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %40, ^bb15, ^bb1(%c80_i8_13 : i8)
  ^bb15:  // pred: ^bb14
    %41 = arith.subi %39, %c3_i64_12 : i64
    llvm.store %41, %arg1 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c17_i256 = arith.constant 17 : i256
    %42 = llvm.load %arg3 : !llvm.ptr -> i64
    %43 = llvm.getelementptr %arg2[%42] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_14 = arith.constant 1 : i64
    %44 = arith.addi %42, %c1_i64_14 : i64
    llvm.store %44, %arg3 : i64, !llvm.ptr
    llvm.store %c17_i256, %43 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_15 = arith.constant 1024 : i64
    %45 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_16 = arith.constant 1 : i64
    %46 = arith.addi %45, %c1_i64_16 : i64
    %47 = arith.cmpi ult, %c1024_i64_15, %46 : i64
    %c92_i8_17 = arith.constant 92 : i8
    cf.cond_br %47, ^bb1(%c92_i8_17 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %48 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_18 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %49 = arith.cmpi uge, %48, %c3_i64_18 : i64
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %49, ^bb19, ^bb1(%c80_i8_19 : i8)
  ^bb19:  // pred: ^bb18
    %50 = arith.subi %48, %c3_i64_18 : i64
    llvm.store %50, %arg1 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c15_i256 = arith.constant 15 : i256
    %51 = llvm.load %arg3 : !llvm.ptr -> i64
    %52 = llvm.getelementptr %arg2[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_20 = arith.constant 1 : i64
    %53 = arith.addi %51, %c1_i64_20 : i64
    llvm.store %53, %arg3 : i64, !llvm.ptr
    llvm.store %c15_i256, %52 : i256, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %c1024_i64_21 = arith.constant 1024 : i64
    %54 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_22 = arith.constant 1 : i64
    %55 = arith.addi %54, %c1_i64_22 : i64
    %56 = arith.cmpi ult, %c1024_i64_21, %55 : i64
    %c92_i8_23 = arith.constant 92 : i8
    cf.cond_br %56, ^bb1(%c92_i8_23 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %57 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_24 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %58 = arith.cmpi uge, %57, %c3_i64_24 : i64
    %c80_i8_25 = arith.constant 80 : i8
    cf.cond_br %58, ^bb23, ^bb1(%c80_i8_25 : i8)
  ^bb23:  // pred: ^bb22
    %59 = arith.subi %57, %c3_i64_24 : i64
    llvm.store %59, %arg1 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_26 = arith.constant 0 : i256
    %60 = llvm.load %arg3 : !llvm.ptr -> i64
    %61 = llvm.getelementptr %arg2[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_27 = arith.constant 1 : i64
    %62 = arith.addi %60, %c1_i64_27 : i64
    llvm.store %62, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_26, %61 : i256, !llvm.ptr
    cf.br ^bb37
  ^bb25:  // pred: ^bb27
    %c1024_i64_28 = arith.constant 1024 : i64
    %63 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_29 = arith.constant 1 : i64
    %64 = arith.addi %63, %c1_i64_29 : i64
    %65 = arith.cmpi ult, %c1024_i64_28, %64 : i64
    %c92_i8_30 = arith.constant 92 : i8
    cf.cond_br %65, ^bb1(%c92_i8_30 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %66 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_31 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %67 = arith.cmpi uge, %66, %c3_i64_31 : i64
    %c80_i8_32 = arith.constant 80 : i8
    cf.cond_br %67, ^bb27, ^bb1(%c80_i8_32 : i8)
  ^bb27:  // pred: ^bb26
    %68 = arith.subi %66, %c3_i64_31 : i64
    llvm.store %68, %arg1 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb36
    %69 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_33 = arith.constant 1 : i64
    %70 = arith.subi %69, %c1_i64_33 : i64
    %71 = llvm.getelementptr %arg2[%70] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %70, %arg3 : i64, !llvm.ptr
    %72 = llvm.load %71 : !llvm.ptr -> i256
    %73 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %74 = arith.subi %73, %c1_i64_34 : i64
    %75 = llvm.getelementptr %arg2[%74] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %74, %arg3 : i64, !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> i256
    %77 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_35 = arith.constant 1 : i64
    %78 = arith.subi %77, %c1_i64_35 : i64
    %79 = llvm.getelementptr %arg2[%78] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %78, %arg3 : i64, !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> i256
    %81 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %82 = arith.cmpi ne, %81, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %82, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %83 = arith.cmpi sgt, %80, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %83, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %84 = arith.trunci %80 : i256 to i64
    %c0_i64_36 = arith.constant 0 : i64
    %85 = arith.cmpi slt, %84, %c0_i64_36 : i64
    %c84_i8_37 = arith.constant 84 : i8
    cf.cond_br %85, ^bb1(%c84_i8_37 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i64_38 = arith.constant 0 : i64
    %86 = arith.cmpi ne, %84, %c0_i64_38 : i64
    cf.cond_br %86, ^bb142, ^bb32
  ^bb32:  // 2 preds: ^bb31, ^bb148
    %c32000_i64 = arith.constant 32000 : i64
    %87 = llvm.load %arg1 : !llvm.ptr -> i64
    %88 = arith.cmpi ult, %87, %c32000_i64 : i64
    scf.if %88 {
    } else {
      %620 = arith.subi %87, %c32000_i64 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_39 = arith.constant 80 : i8
    cf.cond_br %88, ^bb1(%c80_i8_39 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c1_i256 = arith.constant 1 : i256
    %89 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %72, %89 {alignment = 1 : i64} : i256, !llvm.ptr
    %90 = llvm.load %arg1 : !llvm.ptr -> i64
    %91 = arith.trunci %76 : i256 to i64
    %92 = call @dora_fn_create(%arg0, %84, %91, %89, %90) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %93 = llvm.getelementptr %92[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %94 = llvm.load %93 : !llvm.ptr -> i8
    %c0_i8_40 = arith.constant 0 : i8
    %95 = arith.cmpi ne, %94, %c0_i8_40 : i8
    cf.cond_br %95, ^bb1(%94 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %96 = llvm.getelementptr %92[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %97 = llvm.load %96 : !llvm.ptr -> i64
    %98 = llvm.load %arg1 : !llvm.ptr -> i64
    %99 = arith.cmpi ult, %98, %97 : i64
    scf.if %99 {
    } else {
      %620 = arith.subi %98, %97 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_41 = arith.constant 80 : i8
    cf.cond_br %99, ^bb1(%c80_i8_41 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %100 = llvm.load %89 : !llvm.ptr -> i256
    %101 = llvm.load %arg3 : !llvm.ptr -> i64
    %102 = llvm.getelementptr %arg2[%101] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_42 = arith.constant 1 : i64
    %103 = arith.addi %101, %c1_i64_42 : i64
    llvm.store %103, %arg3 : i64, !llvm.ptr
    llvm.store %100, %102 : i256, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %c1024_i64_43 = arith.constant 1024 : i64
    %104 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_44 = arith.constant -2 : i64
    %105 = arith.addi %104, %c-2_i64_44 : i64
    %c3_i64_45 = arith.constant 3 : i64
    %106 = arith.cmpi ult, %104, %c3_i64_45 : i64
    %c91_i8_46 = arith.constant 91 : i8
    cf.cond_br %106, ^bb1(%c91_i8_46 : i8), ^bb28
  ^bb37:  // pred: ^bb24
    %107 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_47 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %108 = arith.cmpi uge, %107, %c0_i64_47 : i64
    %c80_i8_48 = arith.constant 80 : i8
    cf.cond_br %108, ^bb38, ^bb1(%c80_i8_48 : i8)
  ^bb38:  // pred: ^bb37
    %109 = arith.subi %107, %c0_i64_47 : i64
    llvm.store %109, %arg1 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_49 = arith.constant 0 : i256
    %110 = llvm.load %arg3 : !llvm.ptr -> i64
    %111 = llvm.getelementptr %arg2[%110] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_50 = arith.constant 1 : i64
    %112 = arith.addi %110, %c1_i64_50 : i64
    llvm.store %112, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_49, %111 : i256, !llvm.ptr
    cf.br ^bb45
  ^bb40:  // pred: ^bb42
    %c1024_i64_51 = arith.constant 1024 : i64
    %113 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %114 = arith.addi %113, %c1_i64_52 : i64
    %115 = arith.cmpi ult, %c1024_i64_51, %114 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %115, ^bb1(%c92_i8_53 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %116 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_54 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %117 = arith.cmpi uge, %116, %c3_i64_54 : i64
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %117, ^bb42, ^bb1(%c80_i8_55 : i8)
  ^bb42:  // pred: ^bb41
    %118 = arith.subi %116, %c3_i64_54 : i64
    llvm.store %118, %arg1 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb44
    %c0_i256_56 = arith.constant 0 : i256
    %119 = llvm.load %arg3 : !llvm.ptr -> i64
    %120 = llvm.getelementptr %arg2[%119] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_57 = arith.constant 1 : i64
    %121 = arith.addi %119, %c1_i64_57 : i64
    llvm.store %121, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_56, %120 : i256, !llvm.ptr
    cf.br ^bb49
  ^bb44:  // pred: ^bb46
    %c1024_i64_58 = arith.constant 1024 : i64
    %122 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %123 = arith.addi %122, %c1_i64_59 : i64
    %124 = arith.cmpi ult, %c1024_i64_58, %123 : i64
    %c92_i8_60 = arith.constant 92 : i8
    cf.cond_br %124, ^bb1(%c92_i8_60 : i8), ^bb43
  ^bb45:  // pred: ^bb39
    %125 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_61 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %126 = arith.cmpi uge, %125, %c3_i64_61 : i64
    %c80_i8_62 = arith.constant 80 : i8
    cf.cond_br %126, ^bb46, ^bb1(%c80_i8_62 : i8)
  ^bb46:  // pred: ^bb45
    %127 = arith.subi %125, %c3_i64_61 : i64
    llvm.store %127, %arg1 : i64, !llvm.ptr
    cf.br ^bb44
  ^bb47:  // pred: ^bb48
    %c0_i256_63 = arith.constant 0 : i256
    %128 = llvm.load %arg3 : !llvm.ptr -> i64
    %129 = llvm.getelementptr %arg2[%128] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_64 = arith.constant 1 : i64
    %130 = arith.addi %128, %c1_i64_64 : i64
    llvm.store %130, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_63, %129 : i256, !llvm.ptr
    cf.br ^bb53
  ^bb48:  // pred: ^bb50
    %c1024_i64_65 = arith.constant 1024 : i64
    %131 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_66 = arith.constant 1 : i64
    %132 = arith.addi %131, %c1_i64_66 : i64
    %133 = arith.cmpi ult, %c1024_i64_65, %132 : i64
    %c92_i8_67 = arith.constant 92 : i8
    cf.cond_br %133, ^bb1(%c92_i8_67 : i8), ^bb47
  ^bb49:  // pred: ^bb43
    %134 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_68 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %135 = arith.cmpi uge, %134, %c3_i64_68 : i64
    %c80_i8_69 = arith.constant 80 : i8
    cf.cond_br %135, ^bb50, ^bb1(%c80_i8_69 : i8)
  ^bb50:  // pred: ^bb49
    %136 = arith.subi %134, %c3_i64_68 : i64
    llvm.store %136, %arg1 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // pred: ^bb52
    %c0_i256_70 = arith.constant 0 : i256
    %137 = llvm.load %arg3 : !llvm.ptr -> i64
    %138 = llvm.getelementptr %arg2[%137] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_71 = arith.constant 1 : i64
    %139 = arith.addi %137, %c1_i64_71 : i64
    llvm.store %139, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_70, %138 : i256, !llvm.ptr
    cf.br ^bb57
  ^bb52:  // pred: ^bb54
    %c1024_i64_72 = arith.constant 1024 : i64
    %140 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %141 = arith.addi %140, %c1_i64_73 : i64
    %142 = arith.cmpi ult, %c1024_i64_72, %141 : i64
    %c92_i8_74 = arith.constant 92 : i8
    cf.cond_br %142, ^bb1(%c92_i8_74 : i8), ^bb51
  ^bb53:  // pred: ^bb47
    %143 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_75 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %144 = arith.cmpi uge, %143, %c3_i64_75 : i64
    %c80_i8_76 = arith.constant 80 : i8
    cf.cond_br %144, ^bb54, ^bb1(%c80_i8_76 : i8)
  ^bb54:  // pred: ^bb53
    %145 = arith.subi %143, %c3_i64_75 : i64
    llvm.store %145, %arg1 : i64, !llvm.ptr
    cf.br ^bb52
  ^bb55:  // pred: ^bb56
    %c0_i256_77 = arith.constant 0 : i256
    %146 = llvm.load %arg3 : !llvm.ptr -> i64
    %147 = llvm.getelementptr %arg2[%146] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_78 = arith.constant 1 : i64
    %148 = arith.addi %146, %c1_i64_78 : i64
    llvm.store %148, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_77, %147 : i256, !llvm.ptr
    cf.br ^bb61
  ^bb56:  // pred: ^bb58
    %c1024_i64_79 = arith.constant 1024 : i64
    %149 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_80 = arith.constant 1 : i64
    %150 = arith.addi %149, %c1_i64_80 : i64
    %151 = arith.cmpi ult, %c1024_i64_79, %150 : i64
    %c92_i8_81 = arith.constant 92 : i8
    cf.cond_br %151, ^bb1(%c92_i8_81 : i8), ^bb55
  ^bb57:  // pred: ^bb51
    %152 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_82 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %153 = arith.cmpi uge, %152, %c3_i64_82 : i64
    %c80_i8_83 = arith.constant 80 : i8
    cf.cond_br %153, ^bb58, ^bb1(%c80_i8_83 : i8)
  ^bb58:  // pred: ^bb57
    %154 = arith.subi %152, %c3_i64_82 : i64
    llvm.store %154, %arg1 : i64, !llvm.ptr
    cf.br ^bb56
  ^bb59:  // pred: ^bb60
    %155 = llvm.load %arg3 : !llvm.ptr -> i64
    %156 = llvm.getelementptr %arg2[%155] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %157 = llvm.getelementptr %156[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %158 = llvm.load %157 : !llvm.ptr -> i256
    %159 = llvm.load %arg3 : !llvm.ptr -> i64
    %160 = llvm.getelementptr %arg2[%159] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_84 = arith.constant 1 : i64
    %161 = arith.addi %159, %c1_i64_84 : i64
    llvm.store %161, %arg3 : i64, !llvm.ptr
    llvm.store %158, %160 : i256, !llvm.ptr
    cf.br ^bb65
  ^bb60:  // pred: ^bb62
    %c1024_i64_85 = arith.constant 1024 : i64
    %162 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_86 = arith.constant 1 : i64
    %163 = arith.addi %162, %c1_i64_86 : i64
    %c6_i64 = arith.constant 6 : i64
    %164 = arith.cmpi ult, %162, %c6_i64 : i64
    %165 = arith.cmpi ult, %c1024_i64_85, %163 : i64
    %166 = arith.xori %164, %165 : i1
    %c92_i8_87 = arith.constant 92 : i8
    cf.cond_br %166, ^bb1(%c92_i8_87 : i8), ^bb59
  ^bb61:  // pred: ^bb55
    %167 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_88 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %168 = arith.cmpi uge, %167, %c3_i64_88 : i64
    %c80_i8_89 = arith.constant 80 : i8
    cf.cond_br %168, ^bb62, ^bb1(%c80_i8_89 : i8)
  ^bb62:  // pred: ^bb61
    %169 = arith.subi %167, %c3_i64_88 : i64
    llvm.store %169, %arg1 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb63:  // pred: ^bb64
    %c65535_i256 = arith.constant 65535 : i256
    %170 = llvm.load %arg3 : !llvm.ptr -> i64
    %171 = llvm.getelementptr %arg2[%170] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_90 = arith.constant 1 : i64
    %172 = arith.addi %170, %c1_i64_90 : i64
    llvm.store %172, %arg3 : i64, !llvm.ptr
    llvm.store %c65535_i256, %171 : i256, !llvm.ptr
    cf.br ^bb77
  ^bb64:  // pred: ^bb66
    %c1024_i64_91 = arith.constant 1024 : i64
    %173 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_92 = arith.constant 1 : i64
    %174 = arith.addi %173, %c1_i64_92 : i64
    %175 = arith.cmpi ult, %c1024_i64_91, %174 : i64
    %c92_i8_93 = arith.constant 92 : i8
    cf.cond_br %175, ^bb1(%c92_i8_93 : i8), ^bb63
  ^bb65:  // pred: ^bb59
    %176 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_94 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %177 = arith.cmpi uge, %176, %c3_i64_94 : i64
    %c80_i8_95 = arith.constant 80 : i8
    cf.cond_br %177, ^bb66, ^bb1(%c80_i8_95 : i8)
  ^bb66:  // pred: ^bb65
    %178 = arith.subi %176, %c3_i64_94 : i64
    llvm.store %178, %arg1 : i64, !llvm.ptr
    cf.br ^bb64
  ^bb67:  // pred: ^bb76
    %179 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_96 = arith.constant 1 : i64
    %180 = arith.subi %179, %c1_i64_96 : i64
    %181 = llvm.getelementptr %arg2[%180] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %180, %arg3 : i64, !llvm.ptr
    %182 = llvm.load %181 : !llvm.ptr -> i256
    %183 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_97 = arith.constant 1 : i64
    %184 = arith.subi %183, %c1_i64_97 : i64
    %185 = llvm.getelementptr %arg2[%184] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %184, %arg3 : i64, !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> i256
    %187 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_98 = arith.constant 1 : i64
    %188 = arith.subi %187, %c1_i64_98 : i64
    %189 = llvm.getelementptr %arg2[%188] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %188, %arg3 : i64, !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> i256
    %191 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_99 = arith.constant 1 : i64
    %192 = arith.subi %191, %c1_i64_99 : i64
    %193 = llvm.getelementptr %arg2[%192] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %192, %arg3 : i64, !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> i256
    %195 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_100 = arith.constant 1 : i64
    %196 = arith.subi %195, %c1_i64_100 : i64
    %197 = llvm.getelementptr %arg2[%196] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %196, %arg3 : i64, !llvm.ptr
    %198 = llvm.load %197 : !llvm.ptr -> i256
    %199 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_101 = arith.constant 1 : i64
    %200 = arith.subi %199, %c1_i64_101 : i64
    %201 = llvm.getelementptr %arg2[%200] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %200, %arg3 : i64, !llvm.ptr
    %202 = llvm.load %201 : !llvm.ptr -> i256
    %203 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_102 = arith.constant 1 : i64
    %204 = arith.subi %203, %c1_i64_102 : i64
    %205 = llvm.getelementptr %arg2[%204] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %204, %arg3 : i64, !llvm.ptr
    %206 = llvm.load %205 : !llvm.ptr -> i256
    %c18446744073709551615_i256_103 = arith.constant 18446744073709551615 : i256
    %207 = arith.cmpi sgt, %198, %c18446744073709551615_i256_103 : i256
    %c84_i8_104 = arith.constant 84 : i8
    cf.cond_br %207, ^bb1(%c84_i8_104 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %208 = arith.trunci %198 : i256 to i64
    %c0_i64_105 = arith.constant 0 : i64
    %209 = arith.cmpi slt, %208, %c0_i64_105 : i64
    %c84_i8_106 = arith.constant 84 : i8
    cf.cond_br %209, ^bb1(%c84_i8_106 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %c0_i64_107 = arith.constant 0 : i64
    %210 = arith.cmpi ne, %208, %c0_i64_107 : i64
    cf.cond_br %210, ^bb152, ^bb70
  ^bb70:  // 2 preds: ^bb69, ^bb156
    %c18446744073709551615_i256_108 = arith.constant 18446744073709551615 : i256
    %211 = arith.cmpi sgt, %206, %c18446744073709551615_i256_108 : i256
    %c84_i8_109 = arith.constant 84 : i8
    cf.cond_br %211, ^bb1(%c84_i8_109 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %212 = arith.trunci %206 : i256 to i64
    %c0_i64_110 = arith.constant 0 : i64
    %213 = arith.cmpi slt, %212, %c0_i64_110 : i64
    %c84_i8_111 = arith.constant 84 : i8
    cf.cond_br %213, ^bb1(%c84_i8_111 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %c0_i64_112 = arith.constant 0 : i64
    %214 = arith.cmpi ne, %212, %c0_i64_112 : i64
    cf.cond_br %214, ^bb160, ^bb73
  ^bb73:  // 2 preds: ^bb72, ^bb164
    %215 = arith.trunci %194 : i256 to i64
    %216 = arith.trunci %202 : i256 to i64
    %217 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_113 = arith.constant 1 : i256
    %218 = llvm.alloca %c1_i256_113 x i256 : (i256) -> !llvm.ptr
    llvm.store %190, %218 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_114 = arith.constant 1 : i256
    %219 = llvm.alloca %c1_i256_114 x i256 : (i256) -> !llvm.ptr
    llvm.store %182, %219 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_115 = arith.constant 1 : i256
    %220 = llvm.alloca %c1_i256_115 x i256 : (i256) -> !llvm.ptr
    llvm.store %186, %220 {alignment = 1 : i64} : i256, !llvm.ptr
    %c3_i8 = arith.constant 3 : i8
    %221 = call @dora_fn_call(%arg0, %219, %220, %218, %215, %208, %216, %212, %217, %c3_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %222 = llvm.getelementptr %221[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %223 = llvm.load %222 : !llvm.ptr -> i8
    %224 = llvm.getelementptr %221[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %225 = llvm.load %224 : !llvm.ptr -> i8
    %c0_i8_116 = arith.constant 0 : i8
    %226 = arith.cmpi ne, %225, %c0_i8_116 : i8
    cf.cond_br %226, ^bb1(%225 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %227 = llvm.getelementptr %221[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %228 = llvm.load %227 : !llvm.ptr -> i64
    %229 = llvm.load %arg1 : !llvm.ptr -> i64
    %230 = arith.cmpi ult, %229, %228 : i64
    scf.if %230 {
    } else {
      %620 = arith.subi %229, %228 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_117 = arith.constant 80 : i8
    cf.cond_br %230, ^bb1(%c80_i8_117 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %231 = arith.extui %223 : i8 to i256
    %232 = llvm.load %arg3 : !llvm.ptr -> i64
    %233 = llvm.getelementptr %arg2[%232] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_118 = arith.constant 1 : i64
    %234 = arith.addi %232, %c1_i64_118 : i64
    llvm.store %234, %arg3 : i64, !llvm.ptr
    llvm.store %231, %233 : i256, !llvm.ptr
    cf.br ^bb81
  ^bb76:  // pred: ^bb78
    %c1024_i64_119 = arith.constant 1024 : i64
    %235 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %236 = arith.addi %235, %c-6_i64 : i64
    %c7_i64 = arith.constant 7 : i64
    %237 = arith.cmpi ult, %235, %c7_i64 : i64
    %c91_i8_120 = arith.constant 91 : i8
    cf.cond_br %237, ^bb1(%c91_i8_120 : i8), ^bb67
  ^bb77:  // pred: ^bb63
    %238 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_121 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %239 = arith.cmpi uge, %238, %c0_i64_121 : i64
    %c80_i8_122 = arith.constant 80 : i8
    cf.cond_br %239, ^bb78, ^bb1(%c80_i8_122 : i8)
  ^bb78:  // pred: ^bb77
    %240 = arith.subi %238, %c0_i64_121 : i64
    llvm.store %240, %arg1 : i64, !llvm.ptr
    cf.br ^bb76
  ^bb79:  // pred: ^bb80
    %c1_i256_123 = arith.constant 1 : i256
    %241 = llvm.load %arg3 : !llvm.ptr -> i64
    %242 = llvm.getelementptr %arg2[%241] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_124 = arith.constant 1 : i64
    %243 = arith.addi %241, %c1_i64_124 : i64
    llvm.store %243, %arg3 : i64, !llvm.ptr
    llvm.store %c1_i256_123, %242 : i256, !llvm.ptr
    cf.br ^bb85
  ^bb80:  // pred: ^bb82
    %c1024_i64_125 = arith.constant 1024 : i64
    %244 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_126 = arith.constant 1 : i64
    %245 = arith.addi %244, %c1_i64_126 : i64
    %246 = arith.cmpi ult, %c1024_i64_125, %245 : i64
    %c92_i8_127 = arith.constant 92 : i8
    cf.cond_br %246, ^bb1(%c92_i8_127 : i8), ^bb79
  ^bb81:  // pred: ^bb75
    %247 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_128 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %248 = arith.cmpi uge, %247, %c3_i64_128 : i64
    %c80_i8_129 = arith.constant 80 : i8
    cf.cond_br %248, ^bb82, ^bb1(%c80_i8_129 : i8)
  ^bb82:  // pred: ^bb81
    %249 = arith.subi %247, %c3_i64_128 : i64
    llvm.store %249, %arg1 : i64, !llvm.ptr
    cf.br ^bb80
  ^bb83:  // pred: ^bb84
    %c0_i256_130 = arith.constant 0 : i256
    %250 = llvm.load %arg3 : !llvm.ptr -> i64
    %251 = llvm.getelementptr %arg2[%250] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_131 = arith.constant 1 : i64
    %252 = arith.addi %250, %c1_i64_131 : i64
    llvm.store %252, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_130, %251 : i256, !llvm.ptr
    cf.br ^bb91
  ^bb84:  // pred: ^bb86
    %c1024_i64_132 = arith.constant 1024 : i64
    %253 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_133 = arith.constant 1 : i64
    %254 = arith.addi %253, %c1_i64_133 : i64
    %255 = arith.cmpi ult, %c1024_i64_132, %254 : i64
    %c92_i8_134 = arith.constant 92 : i8
    cf.cond_br %255, ^bb1(%c92_i8_134 : i8), ^bb83
  ^bb85:  // pred: ^bb79
    %256 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_135 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %257 = arith.cmpi uge, %256, %c3_i64_135 : i64
    %c80_i8_136 = arith.constant 80 : i8
    cf.cond_br %257, ^bb86, ^bb1(%c80_i8_136 : i8)
  ^bb86:  // pred: ^bb85
    %258 = arith.subi %256, %c3_i64_135 : i64
    llvm.store %258, %arg1 : i64, !llvm.ptr
    cf.br ^bb84
  ^bb87:  // pred: ^bb90
    %259 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_137 = arith.constant 1 : i64
    %260 = arith.subi %259, %c1_i64_137 : i64
    %261 = llvm.getelementptr %arg2[%260] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %260, %arg3 : i64, !llvm.ptr
    %262 = llvm.load %261 : !llvm.ptr -> i256
    %263 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_138 = arith.constant 1 : i64
    %264 = arith.subi %263, %c1_i64_138 : i64
    %265 = llvm.getelementptr %arg2[%264] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %264, %arg3 : i64, !llvm.ptr
    %266 = llvm.load %265 : !llvm.ptr -> i256
    %c1_i256_139 = arith.constant 1 : i256
    %267 = llvm.alloca %c1_i256_139 x i256 : (i256) -> !llvm.ptr
    llvm.store %262, %267 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_140 = arith.constant 1 : i256
    %268 = llvm.alloca %c1_i256_140 x i256 : (i256) -> !llvm.ptr
    llvm.store %266, %268 {alignment = 1 : i64} : i256, !llvm.ptr
    %269 = llvm.load %arg1 : !llvm.ptr -> i64
    %270 = call @dora_fn_sstore(%arg0, %267, %268, %269) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
    %271 = llvm.getelementptr %270[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %272 = llvm.load %271 : !llvm.ptr -> i8
    %c0_i8_141 = arith.constant 0 : i8
    %273 = arith.cmpi ne, %272, %c0_i8_141 : i8
    cf.cond_br %273, ^bb1(%272 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %274 = llvm.getelementptr %270[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %275 = llvm.load %274 : !llvm.ptr -> i64
    %276 = llvm.load %arg1 : !llvm.ptr -> i64
    %277 = arith.cmpi ult, %276, %275 : i64
    scf.if %277 {
    } else {
      %620 = arith.subi %276, %275 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_142 = arith.constant 80 : i8
    cf.cond_br %277, ^bb1(%c80_i8_142 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    cf.br ^bb95
  ^bb90:  // pred: ^bb92
    %c1024_i64_143 = arith.constant 1024 : i64
    %278 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_144 = arith.constant -2 : i64
    %279 = arith.addi %278, %c-2_i64_144 : i64
    %c2_i64_145 = arith.constant 2 : i64
    %280 = arith.cmpi ult, %278, %c2_i64_145 : i64
    %c91_i8_146 = arith.constant 91 : i8
    cf.cond_br %280, ^bb1(%c91_i8_146 : i8), ^bb87
  ^bb91:  // pred: ^bb83
    %281 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_147 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %282 = arith.cmpi uge, %281, %c0_i64_147 : i64
    %c80_i8_148 = arith.constant 80 : i8
    cf.cond_br %282, ^bb92, ^bb1(%c80_i8_148 : i8)
  ^bb92:  // pred: ^bb91
    %283 = arith.subi %281, %c0_i64_147 : i64
    llvm.store %283, %arg1 : i64, !llvm.ptr
    cf.br ^bb90
  ^bb93:  // pred: ^bb94
    %c0_i256_149 = arith.constant 0 : i256
    %284 = llvm.load %arg3 : !llvm.ptr -> i64
    %285 = llvm.getelementptr %arg2[%284] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_150 = arith.constant 1 : i64
    %286 = arith.addi %284, %c1_i64_150 : i64
    llvm.store %286, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_149, %285 : i256, !llvm.ptr
    cf.br ^bb99
  ^bb94:  // pred: ^bb96
    %c1024_i64_151 = arith.constant 1024 : i64
    %287 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_152 = arith.constant 1 : i64
    %288 = arith.addi %287, %c1_i64_152 : i64
    %289 = arith.cmpi ult, %c1024_i64_151, %288 : i64
    %c92_i8_153 = arith.constant 92 : i8
    cf.cond_br %289, ^bb1(%c92_i8_153 : i8), ^bb93
  ^bb95:  // pred: ^bb89
    %290 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_154 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %291 = arith.cmpi uge, %290, %c3_i64_154 : i64
    %c80_i8_155 = arith.constant 80 : i8
    cf.cond_br %291, ^bb96, ^bb1(%c80_i8_155 : i8)
  ^bb96:  // pred: ^bb95
    %292 = arith.subi %290, %c3_i64_154 : i64
    llvm.store %292, %arg1 : i64, !llvm.ptr
    cf.br ^bb94
  ^bb97:  // pred: ^bb98
    %c0_i256_156 = arith.constant 0 : i256
    %293 = llvm.load %arg3 : !llvm.ptr -> i64
    %294 = llvm.getelementptr %arg2[%293] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_157 = arith.constant 1 : i64
    %295 = arith.addi %293, %c1_i64_157 : i64
    llvm.store %295, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_156, %294 : i256, !llvm.ptr
    cf.br ^bb103
  ^bb98:  // pred: ^bb100
    %c1024_i64_158 = arith.constant 1024 : i64
    %296 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_159 = arith.constant 1 : i64
    %297 = arith.addi %296, %c1_i64_159 : i64
    %298 = arith.cmpi ult, %c1024_i64_158, %297 : i64
    %c92_i8_160 = arith.constant 92 : i8
    cf.cond_br %298, ^bb1(%c92_i8_160 : i8), ^bb97
  ^bb99:  // pred: ^bb93
    %299 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_161 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %300 = arith.cmpi uge, %299, %c3_i64_161 : i64
    %c80_i8_162 = arith.constant 80 : i8
    cf.cond_br %300, ^bb100, ^bb1(%c80_i8_162 : i8)
  ^bb100:  // pred: ^bb99
    %301 = arith.subi %299, %c3_i64_161 : i64
    llvm.store %301, %arg1 : i64, !llvm.ptr
    cf.br ^bb98
  ^bb101:  // pred: ^bb102
    %c32_i256 = arith.constant 32 : i256
    %302 = llvm.load %arg3 : !llvm.ptr -> i64
    %303 = llvm.getelementptr %arg2[%302] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_163 = arith.constant 1 : i64
    %304 = arith.addi %302, %c1_i64_163 : i64
    llvm.store %304, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256, %303 : i256, !llvm.ptr
    cf.br ^bb107
  ^bb102:  // pred: ^bb104
    %c1024_i64_164 = arith.constant 1024 : i64
    %305 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_165 = arith.constant 1 : i64
    %306 = arith.addi %305, %c1_i64_165 : i64
    %307 = arith.cmpi ult, %c1024_i64_164, %306 : i64
    %c92_i8_166 = arith.constant 92 : i8
    cf.cond_br %307, ^bb1(%c92_i8_166 : i8), ^bb101
  ^bb103:  // pred: ^bb97
    %308 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_167 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %309 = arith.cmpi uge, %308, %c3_i64_167 : i64
    %c80_i8_168 = arith.constant 80 : i8
    cf.cond_br %309, ^bb104, ^bb1(%c80_i8_168 : i8)
  ^bb104:  // pred: ^bb103
    %310 = arith.subi %308, %c3_i64_167 : i64
    llvm.store %310, %arg1 : i64, !llvm.ptr
    cf.br ^bb102
  ^bb105:  // pred: ^bb106
    %c0_i256_169 = arith.constant 0 : i256
    %311 = llvm.load %arg3 : !llvm.ptr -> i64
    %312 = llvm.getelementptr %arg2[%311] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_170 = arith.constant 1 : i64
    %313 = arith.addi %311, %c1_i64_170 : i64
    llvm.store %313, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_169, %312 : i256, !llvm.ptr
    cf.br ^bb111
  ^bb106:  // pred: ^bb108
    %c1024_i64_171 = arith.constant 1024 : i64
    %314 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_172 = arith.constant 1 : i64
    %315 = arith.addi %314, %c1_i64_172 : i64
    %316 = arith.cmpi ult, %c1024_i64_171, %315 : i64
    %c92_i8_173 = arith.constant 92 : i8
    cf.cond_br %316, ^bb1(%c92_i8_173 : i8), ^bb105
  ^bb107:  // pred: ^bb101
    %317 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_174 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %318 = arith.cmpi uge, %317, %c3_i64_174 : i64
    %c80_i8_175 = arith.constant 80 : i8
    cf.cond_br %318, ^bb108, ^bb1(%c80_i8_175 : i8)
  ^bb108:  // pred: ^bb107
    %319 = arith.subi %317, %c3_i64_174 : i64
    llvm.store %319, %arg1 : i64, !llvm.ptr
    cf.br ^bb106
  ^bb109:  // pred: ^bb110
    %c0_i256_176 = arith.constant 0 : i256
    %320 = llvm.load %arg3 : !llvm.ptr -> i64
    %321 = llvm.getelementptr %arg2[%320] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_177 = arith.constant 1 : i64
    %322 = arith.addi %320, %c1_i64_177 : i64
    llvm.store %322, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_176, %321 : i256, !llvm.ptr
    cf.br ^bb115
  ^bb110:  // pred: ^bb112
    %c1024_i64_178 = arith.constant 1024 : i64
    %323 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_179 = arith.constant 1 : i64
    %324 = arith.addi %323, %c1_i64_179 : i64
    %325 = arith.cmpi ult, %c1024_i64_178, %324 : i64
    %c92_i8_180 = arith.constant 92 : i8
    cf.cond_br %325, ^bb1(%c92_i8_180 : i8), ^bb109
  ^bb111:  // pred: ^bb105
    %326 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_181 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %327 = arith.cmpi uge, %326, %c3_i64_181 : i64
    %c80_i8_182 = arith.constant 80 : i8
    cf.cond_br %327, ^bb112, ^bb1(%c80_i8_182 : i8)
  ^bb112:  // pred: ^bb111
    %328 = arith.subi %326, %c3_i64_181 : i64
    llvm.store %328, %arg1 : i64, !llvm.ptr
    cf.br ^bb110
  ^bb113:  // pred: ^bb114
    %329 = llvm.load %arg3 : !llvm.ptr -> i64
    %330 = llvm.getelementptr %arg2[%329] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %331 = llvm.getelementptr %330[-7] : (!llvm.ptr) -> !llvm.ptr, i256
    %332 = llvm.load %331 : !llvm.ptr -> i256
    %333 = llvm.load %arg3 : !llvm.ptr -> i64
    %334 = llvm.getelementptr %arg2[%333] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_183 = arith.constant 1 : i64
    %335 = arith.addi %333, %c1_i64_183 : i64
    llvm.store %335, %arg3 : i64, !llvm.ptr
    llvm.store %332, %334 : i256, !llvm.ptr
    cf.br ^bb119
  ^bb114:  // pred: ^bb116
    %c1024_i64_184 = arith.constant 1024 : i64
    %336 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_185 = arith.constant 1 : i64
    %337 = arith.addi %336, %c1_i64_185 : i64
    %c7_i64_186 = arith.constant 7 : i64
    %338 = arith.cmpi ult, %336, %c7_i64_186 : i64
    %339 = arith.cmpi ult, %c1024_i64_184, %337 : i64
    %340 = arith.xori %338, %339 : i1
    %c92_i8_187 = arith.constant 92 : i8
    cf.cond_br %340, ^bb1(%c92_i8_187 : i8), ^bb113
  ^bb115:  // pred: ^bb109
    %341 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_188 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %342 = arith.cmpi uge, %341, %c3_i64_188 : i64
    %c80_i8_189 = arith.constant 80 : i8
    cf.cond_br %342, ^bb116, ^bb1(%c80_i8_189 : i8)
  ^bb116:  // pred: ^bb115
    %343 = arith.subi %341, %c3_i64_188 : i64
    llvm.store %343, %arg1 : i64, !llvm.ptr
    cf.br ^bb114
  ^bb117:  // pred: ^bb118
    %c65535_i256_190 = arith.constant 65535 : i256
    %344 = llvm.load %arg3 : !llvm.ptr -> i64
    %345 = llvm.getelementptr %arg2[%344] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_191 = arith.constant 1 : i64
    %346 = arith.addi %344, %c1_i64_191 : i64
    llvm.store %346, %arg3 : i64, !llvm.ptr
    llvm.store %c65535_i256_190, %345 : i256, !llvm.ptr
    cf.br ^bb131
  ^bb118:  // pred: ^bb120
    %c1024_i64_192 = arith.constant 1024 : i64
    %347 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_193 = arith.constant 1 : i64
    %348 = arith.addi %347, %c1_i64_193 : i64
    %349 = arith.cmpi ult, %c1024_i64_192, %348 : i64
    %c92_i8_194 = arith.constant 92 : i8
    cf.cond_br %349, ^bb1(%c92_i8_194 : i8), ^bb117
  ^bb119:  // pred: ^bb113
    %350 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_195 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %351 = arith.cmpi uge, %350, %c3_i64_195 : i64
    %c80_i8_196 = arith.constant 80 : i8
    cf.cond_br %351, ^bb120, ^bb1(%c80_i8_196 : i8)
  ^bb120:  // pred: ^bb119
    %352 = arith.subi %350, %c3_i64_195 : i64
    llvm.store %352, %arg1 : i64, !llvm.ptr
    cf.br ^bb118
  ^bb121:  // pred: ^bb130
    %353 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_197 = arith.constant 1 : i64
    %354 = arith.subi %353, %c1_i64_197 : i64
    %355 = llvm.getelementptr %arg2[%354] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %354, %arg3 : i64, !llvm.ptr
    %356 = llvm.load %355 : !llvm.ptr -> i256
    %357 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_198 = arith.constant 1 : i64
    %358 = arith.subi %357, %c1_i64_198 : i64
    %359 = llvm.getelementptr %arg2[%358] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %358, %arg3 : i64, !llvm.ptr
    %360 = llvm.load %359 : !llvm.ptr -> i256
    %361 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_199 = arith.constant 1 : i64
    %362 = arith.subi %361, %c1_i64_199 : i64
    %363 = llvm.getelementptr %arg2[%362] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %362, %arg3 : i64, !llvm.ptr
    %364 = llvm.load %363 : !llvm.ptr -> i256
    %365 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_200 = arith.constant 1 : i64
    %366 = arith.subi %365, %c1_i64_200 : i64
    %367 = llvm.getelementptr %arg2[%366] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %366, %arg3 : i64, !llvm.ptr
    %368 = llvm.load %367 : !llvm.ptr -> i256
    %369 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_201 = arith.constant 1 : i64
    %370 = arith.subi %369, %c1_i64_201 : i64
    %371 = llvm.getelementptr %arg2[%370] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %370, %arg3 : i64, !llvm.ptr
    %372 = llvm.load %371 : !llvm.ptr -> i256
    %373 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_202 = arith.constant 1 : i64
    %374 = arith.subi %373, %c1_i64_202 : i64
    %375 = llvm.getelementptr %arg2[%374] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %374, %arg3 : i64, !llvm.ptr
    %376 = llvm.load %375 : !llvm.ptr -> i256
    %377 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_203 = arith.constant 1 : i64
    %378 = arith.subi %377, %c1_i64_203 : i64
    %379 = llvm.getelementptr %arg2[%378] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %378, %arg3 : i64, !llvm.ptr
    %380 = llvm.load %379 : !llvm.ptr -> i256
    %c18446744073709551615_i256_204 = arith.constant 18446744073709551615 : i256
    %381 = arith.cmpi sgt, %372, %c18446744073709551615_i256_204 : i256
    %c84_i8_205 = arith.constant 84 : i8
    cf.cond_br %381, ^bb1(%c84_i8_205 : i8), ^bb122
  ^bb122:  // pred: ^bb121
    %382 = arith.trunci %372 : i256 to i64
    %c0_i64_206 = arith.constant 0 : i64
    %383 = arith.cmpi slt, %382, %c0_i64_206 : i64
    %c84_i8_207 = arith.constant 84 : i8
    cf.cond_br %383, ^bb1(%c84_i8_207 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %c0_i64_208 = arith.constant 0 : i64
    %384 = arith.cmpi ne, %382, %c0_i64_208 : i64
    cf.cond_br %384, ^bb168, ^bb124
  ^bb124:  // 2 preds: ^bb123, ^bb172
    %c18446744073709551615_i256_209 = arith.constant 18446744073709551615 : i256
    %385 = arith.cmpi sgt, %380, %c18446744073709551615_i256_209 : i256
    %c84_i8_210 = arith.constant 84 : i8
    cf.cond_br %385, ^bb1(%c84_i8_210 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %386 = arith.trunci %380 : i256 to i64
    %c0_i64_211 = arith.constant 0 : i64
    %387 = arith.cmpi slt, %386, %c0_i64_211 : i64
    %c84_i8_212 = arith.constant 84 : i8
    cf.cond_br %387, ^bb1(%c84_i8_212 : i8), ^bb126
  ^bb126:  // pred: ^bb125
    %c0_i64_213 = arith.constant 0 : i64
    %388 = arith.cmpi ne, %386, %c0_i64_213 : i64
    cf.cond_br %388, ^bb176, ^bb127
  ^bb127:  // 2 preds: ^bb126, ^bb180
    %389 = arith.trunci %368 : i256 to i64
    %390 = arith.trunci %376 : i256 to i64
    %391 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_214 = arith.constant 1 : i256
    %392 = llvm.alloca %c1_i256_214 x i256 : (i256) -> !llvm.ptr
    llvm.store %364, %392 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_215 = arith.constant 1 : i256
    %393 = llvm.alloca %c1_i256_215 x i256 : (i256) -> !llvm.ptr
    llvm.store %356, %393 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_216 = arith.constant 1 : i256
    %394 = llvm.alloca %c1_i256_216 x i256 : (i256) -> !llvm.ptr
    llvm.store %360, %394 {alignment = 1 : i64} : i256, !llvm.ptr
    %c3_i8_217 = arith.constant 3 : i8
    %395 = call @dora_fn_call(%arg0, %393, %394, %392, %389, %382, %390, %386, %391, %c3_i8_217) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %396 = llvm.getelementptr %395[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %397 = llvm.load %396 : !llvm.ptr -> i8
    %398 = llvm.getelementptr %395[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %399 = llvm.load %398 : !llvm.ptr -> i8
    %c0_i8_218 = arith.constant 0 : i8
    %400 = arith.cmpi ne, %399, %c0_i8_218 : i8
    cf.cond_br %400, ^bb1(%399 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %401 = llvm.getelementptr %395[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %402 = llvm.load %401 : !llvm.ptr -> i64
    %403 = llvm.load %arg1 : !llvm.ptr -> i64
    %404 = arith.cmpi ult, %403, %402 : i64
    scf.if %404 {
    } else {
      %620 = arith.subi %403, %402 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_219 = arith.constant 80 : i8
    cf.cond_br %404, ^bb1(%c80_i8_219 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    %405 = arith.extui %397 : i8 to i256
    %406 = llvm.load %arg3 : !llvm.ptr -> i64
    %407 = llvm.getelementptr %arg2[%406] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_220 = arith.constant 1 : i64
    %408 = arith.addi %406, %c1_i64_220 : i64
    llvm.store %408, %arg3 : i64, !llvm.ptr
    llvm.store %405, %407 : i256, !llvm.ptr
    cf.br ^bb133
  ^bb130:  // pred: ^bb132
    %c1024_i64_221 = arith.constant 1024 : i64
    %409 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-6_i64_222 = arith.constant -6 : i64
    %410 = arith.addi %409, %c-6_i64_222 : i64
    %c7_i64_223 = arith.constant 7 : i64
    %411 = arith.cmpi ult, %409, %c7_i64_223 : i64
    %c91_i8_224 = arith.constant 91 : i8
    cf.cond_br %411, ^bb1(%c91_i8_224 : i8), ^bb121
  ^bb131:  // pred: ^bb117
    %412 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_225 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %413 = arith.cmpi uge, %412, %c0_i64_225 : i64
    %c80_i8_226 = arith.constant 80 : i8
    cf.cond_br %413, ^bb132, ^bb1(%c80_i8_226 : i8)
  ^bb132:  // pred: ^bb131
    %414 = arith.subi %412, %c0_i64_225 : i64
    llvm.store %414, %arg1 : i64, !llvm.ptr
    cf.br ^bb130
  ^bb133:  // pred: ^bb129
    %c0_i64_227 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %415 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_227, %c0_i64_227, %415, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb134:  // pred: ^bb11
    %c18446744073709551615_i256_228 = arith.constant 18446744073709551615 : i256
    %416 = arith.cmpi sgt, %25, %c18446744073709551615_i256_228 : i256
    %c84_i8_229 = arith.constant 84 : i8
    cf.cond_br %416, ^bb1(%c84_i8_229 : i8), ^bb135
  ^bb135:  // pred: ^bb134
    %417 = arith.trunci %25 : i256 to i64
    %c0_i64_230 = arith.constant 0 : i64
    %418 = arith.cmpi slt, %417, %c0_i64_230 : i64
    %c84_i8_231 = arith.constant 84 : i8
    cf.cond_br %418, ^bb1(%c84_i8_231 : i8), ^bb136
  ^bb136:  // pred: ^bb135
    %419 = arith.addi %417, %c32_i64 : i64
    %c0_i64_232 = arith.constant 0 : i64
    %420 = arith.cmpi slt, %419, %c0_i64_232 : i64
    %c84_i8_233 = arith.constant 84 : i8
    cf.cond_br %420, ^bb1(%c84_i8_233 : i8), ^bb137
  ^bb137:  // pred: ^bb136
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_234 = arith.constant 32 : i64
    %421 = arith.addi %419, %c31_i64 : i64
    %422 = arith.divui %421, %c32_i64_234 : i64
    %c32_i64_235 = arith.constant 32 : i64
    %423 = arith.muli %422, %c32_i64_235 : i64
    %424 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %425 = llvm.load %424 : !llvm.ptr -> i64
    %c31_i64_236 = arith.constant 31 : i64
    %c32_i64_237 = arith.constant 32 : i64
    %426 = arith.addi %425, %c31_i64_236 : i64
    %427 = arith.divui %426, %c32_i64_237 : i64
    %428 = arith.muli %427, %c32_i64_235 : i64
    %429 = arith.cmpi ult, %428, %423 : i64
    cf.cond_br %429, ^bb139, ^bb138
  ^bb138:  // 2 preds: ^bb137, ^bb141
    cf.br ^bb12
  ^bb139:  // pred: ^bb137
    %c3_i64_238 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %430 = arith.muli %427, %427 : i64
    %431 = arith.divui %430, %c512_i64 : i64
    %432 = arith.muli %427, %c3_i64_238 : i64
    %433 = arith.addi %431, %432 : i64
    %c3_i64_239 = arith.constant 3 : i64
    %c512_i64_240 = arith.constant 512 : i64
    %434 = arith.muli %422, %422 : i64
    %435 = arith.divui %434, %c512_i64_240 : i64
    %436 = arith.muli %422, %c3_i64_239 : i64
    %437 = arith.addi %435, %436 : i64
    %438 = arith.subi %437, %433 : i64
    %439 = llvm.load %arg1 : !llvm.ptr -> i64
    %440 = arith.cmpi ult, %439, %438 : i64
    scf.if %440 {
    } else {
      %620 = arith.subi %439, %438 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_241 = arith.constant 80 : i8
    cf.cond_br %440, ^bb1(%c80_i8_241 : i8), ^bb140
  ^bb140:  // pred: ^bb139
    %441 = call @dora_fn_extend_memory(%arg0, %423) : (!llvm.ptr, i64) -> !llvm.ptr
    %442 = llvm.getelementptr %441[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %443 = llvm.load %442 : !llvm.ptr -> !llvm.ptr
    %444 = llvm.getelementptr %441[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %445 = llvm.load %444 : !llvm.ptr -> i8
    %c0_i8_242 = arith.constant 0 : i8
    %446 = arith.cmpi ne, %445, %c0_i8_242 : i8
    cf.cond_br %446, ^bb1(%445 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    %447 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %443, %447 : !llvm.ptr, !llvm.ptr
    %448 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %423, %448 : i64, !llvm.ptr
    cf.br ^bb138
  ^bb142:  // pred: ^bb31
    %c49152_i64 = arith.constant 49152 : i64
    %449 = arith.cmpi ugt, %84, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %449, ^bb1(%c100_i8 : i8), ^bb143
  ^bb143:  // pred: ^bb142
    %c31_i64_243 = arith.constant 31 : i64
    %c32_i64_244 = arith.constant 32 : i64
    %450 = arith.addi %84, %c31_i64_243 : i64
    %451 = arith.divui %450, %c32_i64_244 : i64
    %c2_i64_245 = arith.constant 2 : i64
    %452 = arith.muli %451, %c2_i64_245 : i64
    %453 = llvm.load %arg1 : !llvm.ptr -> i64
    %454 = arith.cmpi ult, %453, %452 : i64
    scf.if %454 {
    } else {
      %620 = arith.subi %453, %452 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_246 = arith.constant 80 : i8
    cf.cond_br %454, ^bb1(%c80_i8_246 : i8), ^bb144
  ^bb144:  // pred: ^bb143
    %c18446744073709551615_i256_247 = arith.constant 18446744073709551615 : i256
    %455 = arith.cmpi sgt, %76, %c18446744073709551615_i256_247 : i256
    %c84_i8_248 = arith.constant 84 : i8
    cf.cond_br %455, ^bb1(%c84_i8_248 : i8), ^bb145
  ^bb145:  // pred: ^bb144
    %456 = arith.trunci %76 : i256 to i64
    %c0_i64_249 = arith.constant 0 : i64
    %457 = arith.cmpi slt, %456, %c0_i64_249 : i64
    %c84_i8_250 = arith.constant 84 : i8
    cf.cond_br %457, ^bb1(%c84_i8_250 : i8), ^bb146
  ^bb146:  // pred: ^bb145
    %458 = arith.addi %456, %84 : i64
    %c0_i64_251 = arith.constant 0 : i64
    %459 = arith.cmpi slt, %458, %c0_i64_251 : i64
    %c84_i8_252 = arith.constant 84 : i8
    cf.cond_br %459, ^bb1(%c84_i8_252 : i8), ^bb147
  ^bb147:  // pred: ^bb146
    %c31_i64_253 = arith.constant 31 : i64
    %c32_i64_254 = arith.constant 32 : i64
    %460 = arith.addi %458, %c31_i64_253 : i64
    %461 = arith.divui %460, %c32_i64_254 : i64
    %c32_i64_255 = arith.constant 32 : i64
    %462 = arith.muli %461, %c32_i64_255 : i64
    %463 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %464 = llvm.load %463 : !llvm.ptr -> i64
    %c31_i64_256 = arith.constant 31 : i64
    %c32_i64_257 = arith.constant 32 : i64
    %465 = arith.addi %464, %c31_i64_256 : i64
    %466 = arith.divui %465, %c32_i64_257 : i64
    %467 = arith.muli %466, %c32_i64_255 : i64
    %468 = arith.cmpi ult, %467, %462 : i64
    cf.cond_br %468, ^bb149, ^bb148
  ^bb148:  // 2 preds: ^bb147, ^bb151
    cf.br ^bb32
  ^bb149:  // pred: ^bb147
    %c3_i64_258 = arith.constant 3 : i64
    %c512_i64_259 = arith.constant 512 : i64
    %469 = arith.muli %466, %466 : i64
    %470 = arith.divui %469, %c512_i64_259 : i64
    %471 = arith.muli %466, %c3_i64_258 : i64
    %472 = arith.addi %470, %471 : i64
    %c3_i64_260 = arith.constant 3 : i64
    %c512_i64_261 = arith.constant 512 : i64
    %473 = arith.muli %461, %461 : i64
    %474 = arith.divui %473, %c512_i64_261 : i64
    %475 = arith.muli %461, %c3_i64_260 : i64
    %476 = arith.addi %474, %475 : i64
    %477 = arith.subi %476, %472 : i64
    %478 = llvm.load %arg1 : !llvm.ptr -> i64
    %479 = arith.cmpi ult, %478, %477 : i64
    scf.if %479 {
    } else {
      %620 = arith.subi %478, %477 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_262 = arith.constant 80 : i8
    cf.cond_br %479, ^bb1(%c80_i8_262 : i8), ^bb150
  ^bb150:  // pred: ^bb149
    %480 = call @dora_fn_extend_memory(%arg0, %462) : (!llvm.ptr, i64) -> !llvm.ptr
    %481 = llvm.getelementptr %480[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %482 = llvm.load %481 : !llvm.ptr -> !llvm.ptr
    %483 = llvm.getelementptr %480[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %484 = llvm.load %483 : !llvm.ptr -> i8
    %c0_i8_263 = arith.constant 0 : i8
    %485 = arith.cmpi ne, %484, %c0_i8_263 : i8
    cf.cond_br %485, ^bb1(%484 : i8), ^bb151
  ^bb151:  // pred: ^bb150
    %486 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %482, %486 : !llvm.ptr, !llvm.ptr
    %487 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %462, %487 : i64, !llvm.ptr
    cf.br ^bb148
  ^bb152:  // pred: ^bb69
    %c18446744073709551615_i256_264 = arith.constant 18446744073709551615 : i256
    %488 = arith.cmpi sgt, %194, %c18446744073709551615_i256_264 : i256
    %c84_i8_265 = arith.constant 84 : i8
    cf.cond_br %488, ^bb1(%c84_i8_265 : i8), ^bb153
  ^bb153:  // pred: ^bb152
    %489 = arith.trunci %194 : i256 to i64
    %c0_i64_266 = arith.constant 0 : i64
    %490 = arith.cmpi slt, %489, %c0_i64_266 : i64
    %c84_i8_267 = arith.constant 84 : i8
    cf.cond_br %490, ^bb1(%c84_i8_267 : i8), ^bb154
  ^bb154:  // pred: ^bb153
    %491 = arith.addi %489, %208 : i64
    %c0_i64_268 = arith.constant 0 : i64
    %492 = arith.cmpi slt, %491, %c0_i64_268 : i64
    %c84_i8_269 = arith.constant 84 : i8
    cf.cond_br %492, ^bb1(%c84_i8_269 : i8), ^bb155
  ^bb155:  // pred: ^bb154
    %c31_i64_270 = arith.constant 31 : i64
    %c32_i64_271 = arith.constant 32 : i64
    %493 = arith.addi %491, %c31_i64_270 : i64
    %494 = arith.divui %493, %c32_i64_271 : i64
    %c32_i64_272 = arith.constant 32 : i64
    %495 = arith.muli %494, %c32_i64_272 : i64
    %496 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %497 = llvm.load %496 : !llvm.ptr -> i64
    %c31_i64_273 = arith.constant 31 : i64
    %c32_i64_274 = arith.constant 32 : i64
    %498 = arith.addi %497, %c31_i64_273 : i64
    %499 = arith.divui %498, %c32_i64_274 : i64
    %500 = arith.muli %499, %c32_i64_272 : i64
    %501 = arith.cmpi ult, %500, %495 : i64
    cf.cond_br %501, ^bb157, ^bb156
  ^bb156:  // 2 preds: ^bb155, ^bb159
    cf.br ^bb70
  ^bb157:  // pred: ^bb155
    %c3_i64_275 = arith.constant 3 : i64
    %c512_i64_276 = arith.constant 512 : i64
    %502 = arith.muli %499, %499 : i64
    %503 = arith.divui %502, %c512_i64_276 : i64
    %504 = arith.muli %499, %c3_i64_275 : i64
    %505 = arith.addi %503, %504 : i64
    %c3_i64_277 = arith.constant 3 : i64
    %c512_i64_278 = arith.constant 512 : i64
    %506 = arith.muli %494, %494 : i64
    %507 = arith.divui %506, %c512_i64_278 : i64
    %508 = arith.muli %494, %c3_i64_277 : i64
    %509 = arith.addi %507, %508 : i64
    %510 = arith.subi %509, %505 : i64
    %511 = llvm.load %arg1 : !llvm.ptr -> i64
    %512 = arith.cmpi ult, %511, %510 : i64
    scf.if %512 {
    } else {
      %620 = arith.subi %511, %510 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_279 = arith.constant 80 : i8
    cf.cond_br %512, ^bb1(%c80_i8_279 : i8), ^bb158
  ^bb158:  // pred: ^bb157
    %513 = call @dora_fn_extend_memory(%arg0, %495) : (!llvm.ptr, i64) -> !llvm.ptr
    %514 = llvm.getelementptr %513[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %515 = llvm.load %514 : !llvm.ptr -> !llvm.ptr
    %516 = llvm.getelementptr %513[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %517 = llvm.load %516 : !llvm.ptr -> i8
    %c0_i8_280 = arith.constant 0 : i8
    %518 = arith.cmpi ne, %517, %c0_i8_280 : i8
    cf.cond_br %518, ^bb1(%517 : i8), ^bb159
  ^bb159:  // pred: ^bb158
    %519 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %515, %519 : !llvm.ptr, !llvm.ptr
    %520 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %495, %520 : i64, !llvm.ptr
    cf.br ^bb156
  ^bb160:  // pred: ^bb72
    %c18446744073709551615_i256_281 = arith.constant 18446744073709551615 : i256
    %521 = arith.cmpi sgt, %202, %c18446744073709551615_i256_281 : i256
    %c84_i8_282 = arith.constant 84 : i8
    cf.cond_br %521, ^bb1(%c84_i8_282 : i8), ^bb161
  ^bb161:  // pred: ^bb160
    %522 = arith.trunci %202 : i256 to i64
    %c0_i64_283 = arith.constant 0 : i64
    %523 = arith.cmpi slt, %522, %c0_i64_283 : i64
    %c84_i8_284 = arith.constant 84 : i8
    cf.cond_br %523, ^bb1(%c84_i8_284 : i8), ^bb162
  ^bb162:  // pred: ^bb161
    %524 = arith.addi %522, %212 : i64
    %c0_i64_285 = arith.constant 0 : i64
    %525 = arith.cmpi slt, %524, %c0_i64_285 : i64
    %c84_i8_286 = arith.constant 84 : i8
    cf.cond_br %525, ^bb1(%c84_i8_286 : i8), ^bb163
  ^bb163:  // pred: ^bb162
    %c31_i64_287 = arith.constant 31 : i64
    %c32_i64_288 = arith.constant 32 : i64
    %526 = arith.addi %524, %c31_i64_287 : i64
    %527 = arith.divui %526, %c32_i64_288 : i64
    %c32_i64_289 = arith.constant 32 : i64
    %528 = arith.muli %527, %c32_i64_289 : i64
    %529 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %530 = llvm.load %529 : !llvm.ptr -> i64
    %c31_i64_290 = arith.constant 31 : i64
    %c32_i64_291 = arith.constant 32 : i64
    %531 = arith.addi %530, %c31_i64_290 : i64
    %532 = arith.divui %531, %c32_i64_291 : i64
    %533 = arith.muli %532, %c32_i64_289 : i64
    %534 = arith.cmpi ult, %533, %528 : i64
    cf.cond_br %534, ^bb165, ^bb164
  ^bb164:  // 2 preds: ^bb163, ^bb167
    cf.br ^bb73
  ^bb165:  // pred: ^bb163
    %c3_i64_292 = arith.constant 3 : i64
    %c512_i64_293 = arith.constant 512 : i64
    %535 = arith.muli %532, %532 : i64
    %536 = arith.divui %535, %c512_i64_293 : i64
    %537 = arith.muli %532, %c3_i64_292 : i64
    %538 = arith.addi %536, %537 : i64
    %c3_i64_294 = arith.constant 3 : i64
    %c512_i64_295 = arith.constant 512 : i64
    %539 = arith.muli %527, %527 : i64
    %540 = arith.divui %539, %c512_i64_295 : i64
    %541 = arith.muli %527, %c3_i64_294 : i64
    %542 = arith.addi %540, %541 : i64
    %543 = arith.subi %542, %538 : i64
    %544 = llvm.load %arg1 : !llvm.ptr -> i64
    %545 = arith.cmpi ult, %544, %543 : i64
    scf.if %545 {
    } else {
      %620 = arith.subi %544, %543 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_296 = arith.constant 80 : i8
    cf.cond_br %545, ^bb1(%c80_i8_296 : i8), ^bb166
  ^bb166:  // pred: ^bb165
    %546 = call @dora_fn_extend_memory(%arg0, %528) : (!llvm.ptr, i64) -> !llvm.ptr
    %547 = llvm.getelementptr %546[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %548 = llvm.load %547 : !llvm.ptr -> !llvm.ptr
    %549 = llvm.getelementptr %546[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %550 = llvm.load %549 : !llvm.ptr -> i8
    %c0_i8_297 = arith.constant 0 : i8
    %551 = arith.cmpi ne, %550, %c0_i8_297 : i8
    cf.cond_br %551, ^bb1(%550 : i8), ^bb167
  ^bb167:  // pred: ^bb166
    %552 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %548, %552 : !llvm.ptr, !llvm.ptr
    %553 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %528, %553 : i64, !llvm.ptr
    cf.br ^bb164
  ^bb168:  // pred: ^bb123
    %c18446744073709551615_i256_298 = arith.constant 18446744073709551615 : i256
    %554 = arith.cmpi sgt, %368, %c18446744073709551615_i256_298 : i256
    %c84_i8_299 = arith.constant 84 : i8
    cf.cond_br %554, ^bb1(%c84_i8_299 : i8), ^bb169
  ^bb169:  // pred: ^bb168
    %555 = arith.trunci %368 : i256 to i64
    %c0_i64_300 = arith.constant 0 : i64
    %556 = arith.cmpi slt, %555, %c0_i64_300 : i64
    %c84_i8_301 = arith.constant 84 : i8
    cf.cond_br %556, ^bb1(%c84_i8_301 : i8), ^bb170
  ^bb170:  // pred: ^bb169
    %557 = arith.addi %555, %382 : i64
    %c0_i64_302 = arith.constant 0 : i64
    %558 = arith.cmpi slt, %557, %c0_i64_302 : i64
    %c84_i8_303 = arith.constant 84 : i8
    cf.cond_br %558, ^bb1(%c84_i8_303 : i8), ^bb171
  ^bb171:  // pred: ^bb170
    %c31_i64_304 = arith.constant 31 : i64
    %c32_i64_305 = arith.constant 32 : i64
    %559 = arith.addi %557, %c31_i64_304 : i64
    %560 = arith.divui %559, %c32_i64_305 : i64
    %c32_i64_306 = arith.constant 32 : i64
    %561 = arith.muli %560, %c32_i64_306 : i64
    %562 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %563 = llvm.load %562 : !llvm.ptr -> i64
    %c31_i64_307 = arith.constant 31 : i64
    %c32_i64_308 = arith.constant 32 : i64
    %564 = arith.addi %563, %c31_i64_307 : i64
    %565 = arith.divui %564, %c32_i64_308 : i64
    %566 = arith.muli %565, %c32_i64_306 : i64
    %567 = arith.cmpi ult, %566, %561 : i64
    cf.cond_br %567, ^bb173, ^bb172
  ^bb172:  // 2 preds: ^bb171, ^bb175
    cf.br ^bb124
  ^bb173:  // pred: ^bb171
    %c3_i64_309 = arith.constant 3 : i64
    %c512_i64_310 = arith.constant 512 : i64
    %568 = arith.muli %565, %565 : i64
    %569 = arith.divui %568, %c512_i64_310 : i64
    %570 = arith.muli %565, %c3_i64_309 : i64
    %571 = arith.addi %569, %570 : i64
    %c3_i64_311 = arith.constant 3 : i64
    %c512_i64_312 = arith.constant 512 : i64
    %572 = arith.muli %560, %560 : i64
    %573 = arith.divui %572, %c512_i64_312 : i64
    %574 = arith.muli %560, %c3_i64_311 : i64
    %575 = arith.addi %573, %574 : i64
    %576 = arith.subi %575, %571 : i64
    %577 = llvm.load %arg1 : !llvm.ptr -> i64
    %578 = arith.cmpi ult, %577, %576 : i64
    scf.if %578 {
    } else {
      %620 = arith.subi %577, %576 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_313 = arith.constant 80 : i8
    cf.cond_br %578, ^bb1(%c80_i8_313 : i8), ^bb174
  ^bb174:  // pred: ^bb173
    %579 = call @dora_fn_extend_memory(%arg0, %561) : (!llvm.ptr, i64) -> !llvm.ptr
    %580 = llvm.getelementptr %579[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %581 = llvm.load %580 : !llvm.ptr -> !llvm.ptr
    %582 = llvm.getelementptr %579[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %583 = llvm.load %582 : !llvm.ptr -> i8
    %c0_i8_314 = arith.constant 0 : i8
    %584 = arith.cmpi ne, %583, %c0_i8_314 : i8
    cf.cond_br %584, ^bb1(%583 : i8), ^bb175
  ^bb175:  // pred: ^bb174
    %585 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %581, %585 : !llvm.ptr, !llvm.ptr
    %586 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %561, %586 : i64, !llvm.ptr
    cf.br ^bb172
  ^bb176:  // pred: ^bb126
    %c18446744073709551615_i256_315 = arith.constant 18446744073709551615 : i256
    %587 = arith.cmpi sgt, %376, %c18446744073709551615_i256_315 : i256
    %c84_i8_316 = arith.constant 84 : i8
    cf.cond_br %587, ^bb1(%c84_i8_316 : i8), ^bb177
  ^bb177:  // pred: ^bb176
    %588 = arith.trunci %376 : i256 to i64
    %c0_i64_317 = arith.constant 0 : i64
    %589 = arith.cmpi slt, %588, %c0_i64_317 : i64
    %c84_i8_318 = arith.constant 84 : i8
    cf.cond_br %589, ^bb1(%c84_i8_318 : i8), ^bb178
  ^bb178:  // pred: ^bb177
    %590 = arith.addi %588, %386 : i64
    %c0_i64_319 = arith.constant 0 : i64
    %591 = arith.cmpi slt, %590, %c0_i64_319 : i64
    %c84_i8_320 = arith.constant 84 : i8
    cf.cond_br %591, ^bb1(%c84_i8_320 : i8), ^bb179
  ^bb179:  // pred: ^bb178
    %c31_i64_321 = arith.constant 31 : i64
    %c32_i64_322 = arith.constant 32 : i64
    %592 = arith.addi %590, %c31_i64_321 : i64
    %593 = arith.divui %592, %c32_i64_322 : i64
    %c32_i64_323 = arith.constant 32 : i64
    %594 = arith.muli %593, %c32_i64_323 : i64
    %595 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %596 = llvm.load %595 : !llvm.ptr -> i64
    %c31_i64_324 = arith.constant 31 : i64
    %c32_i64_325 = arith.constant 32 : i64
    %597 = arith.addi %596, %c31_i64_324 : i64
    %598 = arith.divui %597, %c32_i64_325 : i64
    %599 = arith.muli %598, %c32_i64_323 : i64
    %600 = arith.cmpi ult, %599, %594 : i64
    cf.cond_br %600, ^bb181, ^bb180
  ^bb180:  // 2 preds: ^bb179, ^bb183
    cf.br ^bb127
  ^bb181:  // pred: ^bb179
    %c3_i64_326 = arith.constant 3 : i64
    %c512_i64_327 = arith.constant 512 : i64
    %601 = arith.muli %598, %598 : i64
    %602 = arith.divui %601, %c512_i64_327 : i64
    %603 = arith.muli %598, %c3_i64_326 : i64
    %604 = arith.addi %602, %603 : i64
    %c3_i64_328 = arith.constant 3 : i64
    %c512_i64_329 = arith.constant 512 : i64
    %605 = arith.muli %593, %593 : i64
    %606 = arith.divui %605, %c512_i64_329 : i64
    %607 = arith.muli %593, %c3_i64_328 : i64
    %608 = arith.addi %606, %607 : i64
    %609 = arith.subi %608, %604 : i64
    %610 = llvm.load %arg1 : !llvm.ptr -> i64
    %611 = arith.cmpi ult, %610, %609 : i64
    scf.if %611 {
    } else {
      %620 = arith.subi %610, %609 : i64
      llvm.store %620, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_330 = arith.constant 80 : i8
    cf.cond_br %611, ^bb1(%c80_i8_330 : i8), ^bb182
  ^bb182:  // pred: ^bb181
    %612 = call @dora_fn_extend_memory(%arg0, %594) : (!llvm.ptr, i64) -> !llvm.ptr
    %613 = llvm.getelementptr %612[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %614 = llvm.load %613 : !llvm.ptr -> !llvm.ptr
    %615 = llvm.getelementptr %612[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %616 = llvm.load %615 : !llvm.ptr -> i8
    %c0_i8_331 = arith.constant 0 : i8
    %617 = arith.cmpi ne, %616, %c0_i8_331 : i8
    cf.cond_br %617, ^bb1(%616 : i8), ^bb183
  ^bb183:  // pred: ^bb182
    %618 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %614, %618 : !llvm.ptr, !llvm.ptr
    %619 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %594, %619 : i64, !llvm.ptr
    cf.br ^bb180
  }
}
