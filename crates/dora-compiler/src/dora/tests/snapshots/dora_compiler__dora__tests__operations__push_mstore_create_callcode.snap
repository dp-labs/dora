---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 59 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36, ^bb37, ^bb38, ^bb39, ^bb40, ^bb41, ^bb42, ^bb43, ^bb44, ^bb45, ^bb46, ^bb47, ^bb48, ^bb49, ^bb50, ^bb51, ^bb52, ^bb53, ^bb54, ^bb55, ^bb56, ^bb57, ^bb58, ^bb59
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c0_i64_4 = arith.constant 0 : i64
    %37 = arith.cmpi slt, %36, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %37, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c32_i64 = arith.constant 32 : i64
    %38 = arith.addi %36, %c32_i64 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %39 = arith.cmpi slt, %38, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %39, ^bb1(%c84_i8_6 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_7 = arith.constant 32 : i64
    %40 = arith.addi %38, %c31_i64 : i64
    %41 = arith.divui %40, %c32_i64_7 : i64
    %42 = arith.muli %41, %c32_i64_7 : i64
    %43 = call @dora_fn_extend_memory(%arg0, %42) : (!llvm.ptr, i64) -> !llvm.ptr
    %44 = llvm.getelementptr %43[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %43[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %48 = arith.cmpi ne, %47, %c0_i8 : i8
    cf.cond_br %48, ^bb1(%47 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %49 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %45, %49 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %42, %50 : i64, !llvm.ptr
    %51 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %54, %53 {alignment = 1 : i64} : i256, !llvm.ptr
    %55 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_8 : i64
    llvm.store %56, %9 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64, %56 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c17_i256 = arith.constant 17 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    %61 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_10 : i64
    llvm.store %62, %9 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64, %62 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_11 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c15_i256 = arith.constant 15 : i256
    %64 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %65 : i256, !llvm.ptr
    %66 = llvm.getelementptr %65[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %66, %64 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_12 = arith.constant 1 : i64
    %68 = arith.addi %67, %c1_i64_12 : i64
    llvm.store %68, %9 : i64, !llvm.ptr
    %69 = arith.cmpi ult, %c1024_i64, %68 : i64
    %c92_i8_13 = arith.constant 92 : i8
    cf.cond_br %69, ^bb1(%c92_i8_13 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %c0_i256_14 = arith.constant 0 : i256
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_14, %71 : i256, !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    %73 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_15 = arith.constant -2 : i64
    %74 = arith.addi %73, %c-2_i64_15 : i64
    llvm.store %74, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %75 = arith.cmpi ult, %73, %c3_i64 : i64
    %c91_i8_16 = arith.constant 91 : i8
    cf.cond_br %75, ^bb1(%c91_i8_16 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %76 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %77 = llvm.load %76 : !llvm.ptr -> !llvm.ptr
    %78 = llvm.getelementptr %77[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %79 = llvm.load %78 : !llvm.ptr -> i256
    llvm.store %78, %76 : !llvm.ptr, !llvm.ptr
    %80 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    %82 = llvm.getelementptr %81[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %83 = llvm.load %82 : !llvm.ptr -> i256
    llvm.store %82, %80 : !llvm.ptr, !llvm.ptr
    %84 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> !llvm.ptr
    %86 = llvm.getelementptr %85[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %87 = llvm.load %86 : !llvm.ptr -> i256
    llvm.store %86, %84 : !llvm.ptr, !llvm.ptr
    %88 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %89, ^bb1(%c87_i8 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %90 = arith.trunci %83 : i256 to i64
    %c0_i64_17 = arith.constant 0 : i64
    %91 = arith.cmpi slt, %90, %c0_i64_17 : i64
    %c84_i8_18 = arith.constant 84 : i8
    cf.cond_br %91, ^bb1(%c84_i8_18 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %92 = arith.trunci %87 : i256 to i64
    %c0_i64_19 = arith.constant 0 : i64
    %93 = arith.cmpi slt, %92, %c0_i64_19 : i64
    %c84_i8_20 = arith.constant 84 : i8
    cf.cond_br %93, ^bb1(%c84_i8_20 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %94 = arith.addi %90, %92 : i64
    %c0_i64_21 = arith.constant 0 : i64
    %95 = arith.cmpi slt, %94, %c0_i64_21 : i64
    %c84_i8_22 = arith.constant 84 : i8
    cf.cond_br %95, ^bb1(%c84_i8_22 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c31_i64_23 = arith.constant 31 : i64
    %c32_i64_24 = arith.constant 32 : i64
    %96 = arith.addi %94, %c31_i64_23 : i64
    %97 = arith.divui %96, %c32_i64_24 : i64
    %98 = arith.muli %97, %c32_i64_24 : i64
    %99 = call @dora_fn_extend_memory(%arg0, %98) : (!llvm.ptr, i64) -> !llvm.ptr
    %100 = llvm.getelementptr %99[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    %102 = llvm.getelementptr %99[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %103 = llvm.load %102 : !llvm.ptr -> i8
    %c0_i8_25 = arith.constant 0 : i8
    %104 = arith.cmpi ne, %103, %c0_i8_25 : i8
    cf.cond_br %104, ^bb1(%103 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %105 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %101, %105 : !llvm.ptr, !llvm.ptr
    %106 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %98, %106 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %107 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %79, %107 {alignment = 1 : i64} : i256, !llvm.ptr
    %108 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> i64
    %c1_i64_26 = arith.constant 1 : i64
    %110 = llvm.alloca %c1_i64_26 x i64 : (i64) -> !llvm.ptr
    llvm.store %109, %110 {alignment = 1 : i64} : i64, !llvm.ptr
    %111 = call @dora_fn_create(%arg0, %92, %90, %107, %110) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %112 = llvm.getelementptr %111[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %113 = llvm.load %112 : !llvm.ptr -> i8
    %c0_i8_27 = arith.constant 0 : i8
    %114 = arith.cmpi ne, %113, %c0_i8_27 : i8
    cf.cond_br %114, ^bb1(%113 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %115 = llvm.load %107 : !llvm.ptr -> i256
    %116 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %117 = llvm.load %116 : !llvm.ptr -> !llvm.ptr
    llvm.store %115, %117 : i256, !llvm.ptr
    %118 = llvm.getelementptr %117[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %118, %116 : !llvm.ptr, !llvm.ptr
    %119 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_28 = arith.constant 1 : i64
    %120 = arith.addi %119, %c1_i64_28 : i64
    llvm.store %120, %9 : i64, !llvm.ptr
    %121 = arith.cmpi ult, %c1024_i64, %120 : i64
    %c92_i8_29 = arith.constant 92 : i8
    cf.cond_br %121, ^bb1(%c92_i8_29 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i256_30 = arith.constant 0 : i256
    %122 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_30, %123 : i256, !llvm.ptr
    %124 = llvm.getelementptr %123[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %124, %122 : !llvm.ptr, !llvm.ptr
    %125 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_31 = arith.constant 1 : i64
    %126 = arith.addi %125, %c1_i64_31 : i64
    llvm.store %126, %9 : i64, !llvm.ptr
    %127 = arith.cmpi ult, %c1024_i64, %126 : i64
    %c92_i8_32 = arith.constant 92 : i8
    cf.cond_br %127, ^bb1(%c92_i8_32 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %c0_i256_33 = arith.constant 0 : i256
    %128 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %129 = llvm.load %128 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_33, %129 : i256, !llvm.ptr
    %130 = llvm.getelementptr %129[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %130, %128 : !llvm.ptr, !llvm.ptr
    %131 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %132 = arith.addi %131, %c1_i64_34 : i64
    llvm.store %132, %9 : i64, !llvm.ptr
    %133 = arith.cmpi ult, %c1024_i64, %132 : i64
    %c92_i8_35 = arith.constant 92 : i8
    cf.cond_br %133, ^bb1(%c92_i8_35 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %c0_i256_36 = arith.constant 0 : i256
    %134 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_36, %135 : i256, !llvm.ptr
    %136 = llvm.getelementptr %135[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %136, %134 : !llvm.ptr, !llvm.ptr
    %137 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %138 = arith.addi %137, %c1_i64_37 : i64
    llvm.store %138, %9 : i64, !llvm.ptr
    %139 = arith.cmpi ult, %c1024_i64, %138 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %139, ^bb1(%c92_i8_38 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_39 = arith.constant 0 : i256
    %140 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_39, %141 : i256, !llvm.ptr
    %142 = llvm.getelementptr %141[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %142, %140 : !llvm.ptr, !llvm.ptr
    %143 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %144 = arith.addi %143, %c1_i64_40 : i64
    llvm.store %144, %9 : i64, !llvm.ptr
    %145 = arith.cmpi ult, %c1024_i64, %144 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %145, ^bb1(%c92_i8_41 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i256_42 = arith.constant 0 : i256
    %146 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_42, %147 : i256, !llvm.ptr
    %148 = llvm.getelementptr %147[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %148, %146 : !llvm.ptr, !llvm.ptr
    %149 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %150 = arith.addi %149, %c1_i64_43 : i64
    llvm.store %150, %9 : i64, !llvm.ptr
    %151 = arith.cmpi ult, %c1024_i64, %150 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %151, ^bb1(%c92_i8_44 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %152 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %153 = llvm.load %152 : !llvm.ptr -> !llvm.ptr
    %154 = llvm.getelementptr %153[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %155 = llvm.load %154 : !llvm.ptr -> i256
    %156 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> !llvm.ptr
    llvm.store %155, %157 : i256, !llvm.ptr
    %158 = llvm.getelementptr %157[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %158, %156 : !llvm.ptr, !llvm.ptr
    %159 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_45 = arith.constant 1 : i64
    %160 = arith.addi %159, %c1_i64_45 : i64
    llvm.store %160, %9 : i64, !llvm.ptr
    %161 = arith.cmpi ult, %c1024_i64, %160 : i64
    %c92_i8_46 = arith.constant 92 : i8
    cf.cond_br %161, ^bb1(%c92_i8_46 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %c65535_i256 = arith.constant 65535 : i256
    %162 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %163 = llvm.load %162 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %163 : i256, !llvm.ptr
    %164 = llvm.getelementptr %163[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %164, %162 : !llvm.ptr, !llvm.ptr
    %165 = llvm.load %9 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %166 = arith.addi %165, %c-6_i64 : i64
    llvm.store %166, %9 : i64, !llvm.ptr
    %c7_i64 = arith.constant 7 : i64
    %167 = arith.cmpi ult, %165, %c7_i64 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %167, ^bb1(%c91_i8_47 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %168 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> !llvm.ptr
    %170 = llvm.getelementptr %169[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %171 = llvm.load %170 : !llvm.ptr -> i256
    llvm.store %170, %168 : !llvm.ptr, !llvm.ptr
    %172 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %173 = llvm.load %172 : !llvm.ptr -> !llvm.ptr
    %174 = llvm.getelementptr %173[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %175 = llvm.load %174 : !llvm.ptr -> i256
    llvm.store %174, %172 : !llvm.ptr, !llvm.ptr
    %176 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %177 = llvm.load %176 : !llvm.ptr -> !llvm.ptr
    %178 = llvm.getelementptr %177[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %179 = llvm.load %178 : !llvm.ptr -> i256
    llvm.store %178, %176 : !llvm.ptr, !llvm.ptr
    %180 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %181 = llvm.load %180 : !llvm.ptr -> !llvm.ptr
    %182 = llvm.getelementptr %181[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %183 = llvm.load %182 : !llvm.ptr -> i256
    llvm.store %182, %180 : !llvm.ptr, !llvm.ptr
    %184 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %185 = llvm.load %184 : !llvm.ptr -> !llvm.ptr
    %186 = llvm.getelementptr %185[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %187 = llvm.load %186 : !llvm.ptr -> i256
    llvm.store %186, %184 : !llvm.ptr, !llvm.ptr
    %188 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %189 = llvm.load %188 : !llvm.ptr -> !llvm.ptr
    %190 = llvm.getelementptr %189[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %191 = llvm.load %190 : !llvm.ptr -> i256
    llvm.store %190, %188 : !llvm.ptr, !llvm.ptr
    %192 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> !llvm.ptr
    %194 = llvm.getelementptr %193[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %195 = llvm.load %194 : !llvm.ptr -> i256
    llvm.store %194, %192 : !llvm.ptr, !llvm.ptr
    %196 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %197 = llvm.load %196 : !llvm.ptr -> i1
    %c0_i256_48 = arith.constant 0 : i256
    %198 = arith.cmpi ne, %179, %c0_i256_48 : i256
    %199 = arith.andi %197, %198 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %199, ^bb1(%c86_i8 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %200 = arith.trunci %171 : i256 to i64
    %c0_i64_49 = arith.constant 0 : i64
    %201 = arith.cmpi slt, %200, %c0_i64_49 : i64
    %c84_i8_50 = arith.constant 84 : i8
    cf.cond_br %201, ^bb1(%c84_i8_50 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %202 = arith.trunci %183 : i256 to i64
    %c0_i64_51 = arith.constant 0 : i64
    %203 = arith.cmpi slt, %202, %c0_i64_51 : i64
    %c84_i8_52 = arith.constant 84 : i8
    cf.cond_br %203, ^bb1(%c84_i8_52 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %204 = arith.trunci %187 : i256 to i64
    %c0_i64_53 = arith.constant 0 : i64
    %205 = arith.cmpi slt, %204, %c0_i64_53 : i64
    %c84_i8_54 = arith.constant 84 : i8
    cf.cond_br %205, ^bb1(%c84_i8_54 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %206 = arith.trunci %191 : i256 to i64
    %c0_i64_55 = arith.constant 0 : i64
    %207 = arith.cmpi slt, %206, %c0_i64_55 : i64
    %c84_i8_56 = arith.constant 84 : i8
    cf.cond_br %207, ^bb1(%c84_i8_56 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %208 = arith.trunci %195 : i256 to i64
    %c0_i64_57 = arith.constant 0 : i64
    %209 = arith.cmpi slt, %208, %c0_i64_57 : i64
    %c84_i8_58 = arith.constant 84 : i8
    cf.cond_br %209, ^bb1(%c84_i8_58 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %210 = arith.addi %202, %204 : i64
    %c0_i64_59 = arith.constant 0 : i64
    %211 = arith.cmpi slt, %210, %c0_i64_59 : i64
    %c84_i8_60 = arith.constant 84 : i8
    cf.cond_br %211, ^bb1(%c84_i8_60 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c31_i64_61 = arith.constant 31 : i64
    %c32_i64_62 = arith.constant 32 : i64
    %212 = arith.addi %210, %c31_i64_61 : i64
    %213 = arith.divui %212, %c32_i64_62 : i64
    %214 = arith.muli %213, %c32_i64_62 : i64
    %215 = call @dora_fn_extend_memory(%arg0, %214) : (!llvm.ptr, i64) -> !llvm.ptr
    %216 = llvm.getelementptr %215[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %217 = llvm.load %216 : !llvm.ptr -> !llvm.ptr
    %218 = llvm.getelementptr %215[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %219 = llvm.load %218 : !llvm.ptr -> i8
    %c0_i8_63 = arith.constant 0 : i8
    %220 = arith.cmpi ne, %219, %c0_i8_63 : i8
    cf.cond_br %220, ^bb1(%219 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %221 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %217, %221 : !llvm.ptr, !llvm.ptr
    %222 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %214, %222 : i64, !llvm.ptr
    %223 = arith.addi %206, %208 : i64
    %c0_i64_64 = arith.constant 0 : i64
    %224 = arith.cmpi slt, %223, %c0_i64_64 : i64
    %c84_i8_65 = arith.constant 84 : i8
    cf.cond_br %224, ^bb1(%c84_i8_65 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %c31_i64_66 = arith.constant 31 : i64
    %c32_i64_67 = arith.constant 32 : i64
    %225 = arith.addi %223, %c31_i64_66 : i64
    %226 = arith.divui %225, %c32_i64_67 : i64
    %227 = arith.muli %226, %c32_i64_67 : i64
    %228 = call @dora_fn_extend_memory(%arg0, %227) : (!llvm.ptr, i64) -> !llvm.ptr
    %229 = llvm.getelementptr %228[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %230 = llvm.load %229 : !llvm.ptr -> !llvm.ptr
    %231 = llvm.getelementptr %228[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %232 = llvm.load %231 : !llvm.ptr -> i8
    %c0_i8_68 = arith.constant 0 : i8
    %233 = arith.cmpi ne, %232, %c0_i8_68 : i8
    cf.cond_br %233, ^bb1(%232 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %234 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %230, %234 : !llvm.ptr, !llvm.ptr
    %235 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %227, %235 : i64, !llvm.ptr
    %236 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %237 = llvm.load %236 : !llvm.ptr -> i64
    %c1_i256_69 = arith.constant 1 : i256
    %238 = llvm.alloca %c1_i256_69 x i256 : (i256) -> !llvm.ptr
    llvm.store %179, %238 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_70 = arith.constant 1 : i256
    %239 = llvm.alloca %c1_i256_70 x i256 : (i256) -> !llvm.ptr
    llvm.store %175, %239 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_71 = arith.constant 1 : i64
    %240 = llvm.alloca %c1_i64_71 x i64 : (i64) -> !llvm.ptr
    %c0_i8_72 = arith.constant 0 : i8
    %241 = call @dora_fn_call(%arg0, %200, %239, %238, %202, %204, %206, %208, %237, %240, %c0_i8_72) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %242 = llvm.getelementptr %241[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %243 = llvm.load %242 : !llvm.ptr -> i8
    %244 = llvm.getelementptr %241[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %245 = llvm.load %244 : !llvm.ptr -> i8
    %c0_i8_73 = arith.constant 0 : i8
    %246 = arith.cmpi ne, %245, %c0_i8_73 : i8
    cf.cond_br %246, ^bb1(%245 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %247 = llvm.load %240 : !llvm.ptr -> i64
    %248 = arith.extui %243 : i8 to i256
    %249 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> !llvm.ptr
    llvm.store %248, %250 : i256, !llvm.ptr
    %251 = llvm.getelementptr %250[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %251, %249 : !llvm.ptr, !llvm.ptr
    %252 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_74 = arith.constant 1 : i64
    %253 = arith.addi %252, %c1_i64_74 : i64
    llvm.store %253, %9 : i64, !llvm.ptr
    %254 = arith.cmpi ult, %c1024_i64, %253 : i64
    %c92_i8_75 = arith.constant 92 : i8
    cf.cond_br %254, ^bb1(%c92_i8_75 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %c1_i256_76 = arith.constant 1 : i256
    %255 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %256 = llvm.load %255 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_76, %256 : i256, !llvm.ptr
    %257 = llvm.getelementptr %256[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %257, %255 : !llvm.ptr, !llvm.ptr
    %258 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_77 = arith.constant 1 : i64
    %259 = arith.addi %258, %c1_i64_77 : i64
    llvm.store %259, %9 : i64, !llvm.ptr
    %260 = arith.cmpi ult, %c1024_i64, %259 : i64
    %c92_i8_78 = arith.constant 92 : i8
    cf.cond_br %260, ^bb1(%c92_i8_78 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %c0_i256_79 = arith.constant 0 : i256
    %261 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %262 = llvm.load %261 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_79, %262 : i256, !llvm.ptr
    %263 = llvm.getelementptr %262[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %263, %261 : !llvm.ptr, !llvm.ptr
    %264 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_80 = arith.constant -2 : i64
    %265 = arith.addi %264, %c-2_i64_80 : i64
    llvm.store %265, %9 : i64, !llvm.ptr
    %c2_i64_81 = arith.constant 2 : i64
    %266 = arith.cmpi ult, %264, %c2_i64_81 : i64
    %c91_i8_82 = arith.constant 91 : i8
    cf.cond_br %266, ^bb1(%c91_i8_82 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %267 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %268 = llvm.load %267 : !llvm.ptr -> !llvm.ptr
    %269 = llvm.getelementptr %268[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %270 = llvm.load %269 : !llvm.ptr -> i256
    llvm.store %269, %267 : !llvm.ptr, !llvm.ptr
    %271 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %272 = llvm.load %271 : !llvm.ptr -> !llvm.ptr
    %273 = llvm.getelementptr %272[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %274 = llvm.load %273 : !llvm.ptr -> i256
    llvm.store %273, %271 : !llvm.ptr, !llvm.ptr
    %275 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %276 = llvm.load %275 : !llvm.ptr -> i1
    %c87_i8_83 = arith.constant 87 : i8
    cf.cond_br %276, ^bb1(%c87_i8_83 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %c1_i256_84 = arith.constant 1 : i256
    %277 = llvm.alloca %c1_i256_84 x i256 : (i256) -> !llvm.ptr
    llvm.store %270, %277 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_85 = arith.constant 1 : i256
    %278 = llvm.alloca %c1_i256_85 x i256 : (i256) -> !llvm.ptr
    llvm.store %274, %278 {alignment = 1 : i64} : i256, !llvm.ptr
    %279 = call @dora_fn_sstore(%arg0, %277, %278) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %280 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_86 = arith.constant 1 : i64
    %281 = arith.addi %280, %c1_i64_86 : i64
    llvm.store %281, %9 : i64, !llvm.ptr
    %282 = arith.cmpi ult, %c1024_i64, %281 : i64
    %c92_i8_87 = arith.constant 92 : i8
    cf.cond_br %282, ^bb1(%c92_i8_87 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c0_i256_88 = arith.constant 0 : i256
    %283 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %284 = llvm.load %283 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_88, %284 : i256, !llvm.ptr
    %285 = llvm.getelementptr %284[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %285, %283 : !llvm.ptr, !llvm.ptr
    %286 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_89 = arith.constant 1 : i64
    %287 = arith.addi %286, %c1_i64_89 : i64
    llvm.store %287, %9 : i64, !llvm.ptr
    %288 = arith.cmpi ult, %c1024_i64, %287 : i64
    %c92_i8_90 = arith.constant 92 : i8
    cf.cond_br %288, ^bb1(%c92_i8_90 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %c0_i256_91 = arith.constant 0 : i256
    %289 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %290 = llvm.load %289 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_91, %290 : i256, !llvm.ptr
    %291 = llvm.getelementptr %290[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %291, %289 : !llvm.ptr, !llvm.ptr
    %292 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_92 = arith.constant 1 : i64
    %293 = arith.addi %292, %c1_i64_92 : i64
    llvm.store %293, %9 : i64, !llvm.ptr
    %294 = arith.cmpi ult, %c1024_i64, %293 : i64
    %c92_i8_93 = arith.constant 92 : i8
    cf.cond_br %294, ^bb1(%c92_i8_93 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c32_i256 = arith.constant 32 : i256
    %295 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %296 = llvm.load %295 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %296 : i256, !llvm.ptr
    %297 = llvm.getelementptr %296[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %297, %295 : !llvm.ptr, !llvm.ptr
    %298 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_94 = arith.constant 1 : i64
    %299 = arith.addi %298, %c1_i64_94 : i64
    llvm.store %299, %9 : i64, !llvm.ptr
    %300 = arith.cmpi ult, %c1024_i64, %299 : i64
    %c92_i8_95 = arith.constant 92 : i8
    cf.cond_br %300, ^bb1(%c92_i8_95 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %c0_i256_96 = arith.constant 0 : i256
    %301 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %302 = llvm.load %301 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_96, %302 : i256, !llvm.ptr
    %303 = llvm.getelementptr %302[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %303, %301 : !llvm.ptr, !llvm.ptr
    %304 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_97 = arith.constant 1 : i64
    %305 = arith.addi %304, %c1_i64_97 : i64
    llvm.store %305, %9 : i64, !llvm.ptr
    %306 = arith.cmpi ult, %c1024_i64, %305 : i64
    %c92_i8_98 = arith.constant 92 : i8
    cf.cond_br %306, ^bb1(%c92_i8_98 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c0_i256_99 = arith.constant 0 : i256
    %307 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %308 = llvm.load %307 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_99, %308 : i256, !llvm.ptr
    %309 = llvm.getelementptr %308[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %309, %307 : !llvm.ptr, !llvm.ptr
    %310 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_100 = arith.constant 1 : i64
    %311 = arith.addi %310, %c1_i64_100 : i64
    llvm.store %311, %9 : i64, !llvm.ptr
    %312 = arith.cmpi ult, %c1024_i64, %311 : i64
    %c92_i8_101 = arith.constant 92 : i8
    cf.cond_br %312, ^bb1(%c92_i8_101 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %313 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %314 = llvm.load %313 : !llvm.ptr -> !llvm.ptr
    %315 = llvm.getelementptr %314[-7] : (!llvm.ptr) -> !llvm.ptr, i256
    %316 = llvm.load %315 : !llvm.ptr -> i256
    %317 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %318 = llvm.load %317 : !llvm.ptr -> !llvm.ptr
    llvm.store %316, %318 : i256, !llvm.ptr
    %319 = llvm.getelementptr %318[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %319, %317 : !llvm.ptr, !llvm.ptr
    %320 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_102 = arith.constant 1 : i64
    %321 = arith.addi %320, %c1_i64_102 : i64
    llvm.store %321, %9 : i64, !llvm.ptr
    %322 = arith.cmpi ult, %c1024_i64, %321 : i64
    %c92_i8_103 = arith.constant 92 : i8
    cf.cond_br %322, ^bb1(%c92_i8_103 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %c65535_i256_104 = arith.constant 65535 : i256
    %323 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %324 = llvm.load %323 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_104, %324 : i256, !llvm.ptr
    %325 = llvm.getelementptr %324[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %325, %323 : !llvm.ptr, !llvm.ptr
    %326 = llvm.load %9 : !llvm.ptr -> i64
    %c-6_i64_105 = arith.constant -6 : i64
    %327 = arith.addi %326, %c-6_i64_105 : i64
    llvm.store %327, %9 : i64, !llvm.ptr
    %c7_i64_106 = arith.constant 7 : i64
    %328 = arith.cmpi ult, %326, %c7_i64_106 : i64
    %c91_i8_107 = arith.constant 91 : i8
    cf.cond_br %328, ^bb1(%c91_i8_107 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %329 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %330 = llvm.load %329 : !llvm.ptr -> !llvm.ptr
    %331 = llvm.getelementptr %330[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %332 = llvm.load %331 : !llvm.ptr -> i256
    llvm.store %331, %329 : !llvm.ptr, !llvm.ptr
    %333 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %334 = llvm.load %333 : !llvm.ptr -> !llvm.ptr
    %335 = llvm.getelementptr %334[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %336 = llvm.load %335 : !llvm.ptr -> i256
    llvm.store %335, %333 : !llvm.ptr, !llvm.ptr
    %337 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %338 = llvm.load %337 : !llvm.ptr -> !llvm.ptr
    %339 = llvm.getelementptr %338[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %340 = llvm.load %339 : !llvm.ptr -> i256
    llvm.store %339, %337 : !llvm.ptr, !llvm.ptr
    %341 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %342 = llvm.load %341 : !llvm.ptr -> !llvm.ptr
    %343 = llvm.getelementptr %342[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %344 = llvm.load %343 : !llvm.ptr -> i256
    llvm.store %343, %341 : !llvm.ptr, !llvm.ptr
    %345 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %346 = llvm.load %345 : !llvm.ptr -> !llvm.ptr
    %347 = llvm.getelementptr %346[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %348 = llvm.load %347 : !llvm.ptr -> i256
    llvm.store %347, %345 : !llvm.ptr, !llvm.ptr
    %349 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %350 = llvm.load %349 : !llvm.ptr -> !llvm.ptr
    %351 = llvm.getelementptr %350[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %352 = llvm.load %351 : !llvm.ptr -> i256
    llvm.store %351, %349 : !llvm.ptr, !llvm.ptr
    %353 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %354 = llvm.load %353 : !llvm.ptr -> !llvm.ptr
    %355 = llvm.getelementptr %354[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %356 = llvm.load %355 : !llvm.ptr -> i256
    llvm.store %355, %353 : !llvm.ptr, !llvm.ptr
    %357 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %358 = llvm.load %357 : !llvm.ptr -> i1
    %c0_i256_108 = arith.constant 0 : i256
    %359 = arith.cmpi ne, %340, %c0_i256_108 : i256
    %360 = arith.andi %358, %359 : i1
    %c86_i8_109 = arith.constant 86 : i8
    cf.cond_br %360, ^bb1(%c86_i8_109 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %361 = arith.trunci %332 : i256 to i64
    %c0_i64_110 = arith.constant 0 : i64
    %362 = arith.cmpi slt, %361, %c0_i64_110 : i64
    %c84_i8_111 = arith.constant 84 : i8
    cf.cond_br %362, ^bb1(%c84_i8_111 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %363 = arith.trunci %344 : i256 to i64
    %c0_i64_112 = arith.constant 0 : i64
    %364 = arith.cmpi slt, %363, %c0_i64_112 : i64
    %c84_i8_113 = arith.constant 84 : i8
    cf.cond_br %364, ^bb1(%c84_i8_113 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %365 = arith.trunci %348 : i256 to i64
    %c0_i64_114 = arith.constant 0 : i64
    %366 = arith.cmpi slt, %365, %c0_i64_114 : i64
    %c84_i8_115 = arith.constant 84 : i8
    cf.cond_br %366, ^bb1(%c84_i8_115 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %367 = arith.trunci %352 : i256 to i64
    %c0_i64_116 = arith.constant 0 : i64
    %368 = arith.cmpi slt, %367, %c0_i64_116 : i64
    %c84_i8_117 = arith.constant 84 : i8
    cf.cond_br %368, ^bb1(%c84_i8_117 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %369 = arith.trunci %356 : i256 to i64
    %c0_i64_118 = arith.constant 0 : i64
    %370 = arith.cmpi slt, %369, %c0_i64_118 : i64
    %c84_i8_119 = arith.constant 84 : i8
    cf.cond_br %370, ^bb1(%c84_i8_119 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %371 = arith.addi %363, %365 : i64
    %c0_i64_120 = arith.constant 0 : i64
    %372 = arith.cmpi slt, %371, %c0_i64_120 : i64
    %c84_i8_121 = arith.constant 84 : i8
    cf.cond_br %372, ^bb1(%c84_i8_121 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %c31_i64_122 = arith.constant 31 : i64
    %c32_i64_123 = arith.constant 32 : i64
    %373 = arith.addi %371, %c31_i64_122 : i64
    %374 = arith.divui %373, %c32_i64_123 : i64
    %375 = arith.muli %374, %c32_i64_123 : i64
    %376 = call @dora_fn_extend_memory(%arg0, %375) : (!llvm.ptr, i64) -> !llvm.ptr
    %377 = llvm.getelementptr %376[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %378 = llvm.load %377 : !llvm.ptr -> !llvm.ptr
    %379 = llvm.getelementptr %376[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %380 = llvm.load %379 : !llvm.ptr -> i8
    %c0_i8_124 = arith.constant 0 : i8
    %381 = arith.cmpi ne, %380, %c0_i8_124 : i8
    cf.cond_br %381, ^bb1(%380 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %382 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %378, %382 : !llvm.ptr, !llvm.ptr
    %383 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %375, %383 : i64, !llvm.ptr
    %384 = arith.addi %367, %369 : i64
    %c0_i64_125 = arith.constant 0 : i64
    %385 = arith.cmpi slt, %384, %c0_i64_125 : i64
    %c84_i8_126 = arith.constant 84 : i8
    cf.cond_br %385, ^bb1(%c84_i8_126 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %c31_i64_127 = arith.constant 31 : i64
    %c32_i64_128 = arith.constant 32 : i64
    %386 = arith.addi %384, %c31_i64_127 : i64
    %387 = arith.divui %386, %c32_i64_128 : i64
    %388 = arith.muli %387, %c32_i64_128 : i64
    %389 = call @dora_fn_extend_memory(%arg0, %388) : (!llvm.ptr, i64) -> !llvm.ptr
    %390 = llvm.getelementptr %389[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %391 = llvm.load %390 : !llvm.ptr -> !llvm.ptr
    %392 = llvm.getelementptr %389[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %393 = llvm.load %392 : !llvm.ptr -> i8
    %c0_i8_129 = arith.constant 0 : i8
    %394 = arith.cmpi ne, %393, %c0_i8_129 : i8
    cf.cond_br %394, ^bb1(%393 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %395 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %391, %395 : !llvm.ptr, !llvm.ptr
    %396 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %388, %396 : i64, !llvm.ptr
    %397 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %398 = llvm.load %397 : !llvm.ptr -> i64
    %c1_i256_130 = arith.constant 1 : i256
    %399 = llvm.alloca %c1_i256_130 x i256 : (i256) -> !llvm.ptr
    llvm.store %340, %399 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_131 = arith.constant 1 : i256
    %400 = llvm.alloca %c1_i256_131 x i256 : (i256) -> !llvm.ptr
    llvm.store %336, %400 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_132 = arith.constant 1 : i64
    %401 = llvm.alloca %c1_i64_132 x i64 : (i64) -> !llvm.ptr
    %c0_i8_133 = arith.constant 0 : i8
    %402 = call @dora_fn_call(%arg0, %361, %400, %399, %363, %365, %367, %369, %398, %401, %c0_i8_133) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %403 = llvm.getelementptr %402[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %404 = llvm.load %403 : !llvm.ptr -> i8
    %405 = llvm.getelementptr %402[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %406 = llvm.load %405 : !llvm.ptr -> i8
    %c0_i8_134 = arith.constant 0 : i8
    %407 = arith.cmpi ne, %406, %c0_i8_134 : i8
    cf.cond_br %407, ^bb1(%406 : i8), ^bb60
  ^bb60:  // pred: ^bb59
    %408 = llvm.load %401 : !llvm.ptr -> i64
    %409 = arith.extui %404 : i8 to i256
    %410 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %411 = llvm.load %410 : !llvm.ptr -> !llvm.ptr
    llvm.store %409, %411 : i256, !llvm.ptr
    %412 = llvm.getelementptr %411[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %412, %410 : !llvm.ptr, !llvm.ptr
    cf.br ^bb61
  ^bb61:  // pred: ^bb60
    %c0_i64_135 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %413 = call @dora_fn_write_result(%arg0, %c0_i64_135, %c0_i64_135, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
