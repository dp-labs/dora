---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_read_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_write_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_copy_ext_code_to_memory(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    cf.br ^bb3
  ^bb1(%10: i8):  // 12 preds: ^bb2, ^bb5, ^bb6, ^bb11, ^bb12, ^bb13, ^bb22, ^bb23, ^bb24, ^bb36, ^bb37, ^bb38
    %c0_i64_1 = arith.constant 0 : i64
    %11 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %10) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %10 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    cf.br ^bb5
  ^bb5:  // pred: ^bb4
    %19 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %20 = llvm.load %19 : !llvm.ptr -> !llvm.ptr
    %21 = llvm.getelementptr %20[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %22 = llvm.load %21 : !llvm.ptr -> i256
    llvm.store %21, %19 : !llvm.ptr, !llvm.ptr
    %23 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %24 = llvm.load %23 : !llvm.ptr -> !llvm.ptr
    %25 = llvm.getelementptr %24[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %26 = llvm.load %25 : !llvm.ptr -> i256
    llvm.store %25, %23 : !llvm.ptr, !llvm.ptr
    %27 = arith.trunci %22 : i256 to i64
    %c32_i64 = arith.constant 32 : i64
    %28 = arith.addi %27, %c32_i64 : i64
    %c0_i64_2 = arith.constant 0 : i64
    %29 = arith.cmpi slt, %28, %c0_i64_2 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %29, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_3 = arith.constant 32 : i64
    %30 = arith.addi %28, %c31_i64 : i64
    %31 = arith.divui %30, %c32_i64_3 : i64
    %32 = arith.muli %31, %c32_i64_3 : i64
    %33 = call @dora_fn_extend_memory(%arg0, %32) : (!llvm.ptr, i64) -> !llvm.ptr
    %34 = llvm.getelementptr %33[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %35 = llvm.load %34 : !llvm.ptr -> !llvm.ptr
    %36 = llvm.getelementptr %33[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %37 = llvm.load %36 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %38 = arith.cmpi ne, %37, %c0_i8 : i8
    cf.cond_br %38, ^bb1(%37 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %39 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %35, %39 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %32, %40 : i64, !llvm.ptr
    %41 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %42 = llvm.load %41 : !llvm.ptr -> !llvm.ptr
    %43 = llvm.getelementptr %42[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %44 = llvm.intr.bswap(%26)  : (i256) -> i256
    llvm.store %44, %43 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb8
  ^bb8:  // pred: ^bb7
    %c17_i256 = arith.constant 17 : i256
    %45 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %46 = llvm.load %45 : !llvm.ptr -> !llvm.ptr
    llvm.store %c17_i256, %46 : i256, !llvm.ptr
    %47 = llvm.getelementptr %46[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %47, %45 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb9:  // pred: ^bb8
    %c15_i256 = arith.constant 15 : i256
    %48 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %49 = llvm.load %48 : !llvm.ptr -> !llvm.ptr
    llvm.store %c15_i256, %49 : i256, !llvm.ptr
    %50 = llvm.getelementptr %49[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %50, %48 : !llvm.ptr, !llvm.ptr
    cf.br ^bb10
  ^bb10:  // pred: ^bb9
    %c0_i256_4 = arith.constant 0 : i256
    %51 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_4, %52 : i256, !llvm.ptr
    %53 = llvm.getelementptr %52[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %53, %51 : !llvm.ptr, !llvm.ptr
    cf.br ^bb11
  ^bb11:  // pred: ^bb10
    %54 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %55 = llvm.load %54 : !llvm.ptr -> !llvm.ptr
    %56 = llvm.getelementptr %55[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %57 = llvm.load %56 : !llvm.ptr -> i256
    llvm.store %56, %54 : !llvm.ptr, !llvm.ptr
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    %60 = llvm.getelementptr %59[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %61 = llvm.load %60 : !llvm.ptr -> i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    %62 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %63 = llvm.load %62 : !llvm.ptr -> !llvm.ptr
    %64 = llvm.getelementptr %63[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %65 = llvm.load %64 : !llvm.ptr -> i256
    llvm.store %64, %62 : !llvm.ptr, !llvm.ptr
    %66 = arith.trunci %61 : i256 to i64
    %67 = arith.trunci %65 : i256 to i64
    %68 = arith.addi %66, %67 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %69 = arith.cmpi slt, %68, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %69, ^bb1(%c84_i8_6 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c31_i64_7 = arith.constant 31 : i64
    %c32_i64_8 = arith.constant 32 : i64
    %70 = arith.addi %68, %c31_i64_7 : i64
    %71 = arith.divui %70, %c32_i64_8 : i64
    %72 = arith.muli %71, %c32_i64_8 : i64
    %73 = call @dora_fn_extend_memory(%arg0, %72) : (!llvm.ptr, i64) -> !llvm.ptr
    %74 = llvm.getelementptr %73[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %75 = llvm.load %74 : !llvm.ptr -> !llvm.ptr
    %76 = llvm.getelementptr %73[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %77 = llvm.load %76 : !llvm.ptr -> i8
    %c0_i8_9 = arith.constant 0 : i8
    %78 = arith.cmpi ne, %77, %c0_i8_9 : i8
    cf.cond_br %78, ^bb1(%77 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %79 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %75, %79 : !llvm.ptr, !llvm.ptr
    %80 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %72, %80 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %81 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %57, %81 {alignment = 1 : i64} : i256, !llvm.ptr
    %82 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %83 = llvm.load %82 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %84 = llvm.alloca %c1_i64 x i64 : (i64) -> !llvm.ptr
    llvm.store %83, %84 {alignment = 1 : i64} : i64, !llvm.ptr
    %85 = call @dora_fn_create(%arg0, %67, %66, %81, %84) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %86 = llvm.getelementptr %85[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %87 = llvm.load %86 : !llvm.ptr -> i8
    %c0_i8_10 = arith.constant 0 : i8
    %88 = arith.cmpi ne, %c0_i8_10, %87 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %88, ^bb1(%c94_i8 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %89 = llvm.load %81 : !llvm.ptr -> i256
    %90 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %91 = llvm.load %90 : !llvm.ptr -> !llvm.ptr
    llvm.store %89, %91 : i256, !llvm.ptr
    %92 = llvm.getelementptr %91[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %92, %90 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb15:  // pred: ^bb14
    %c0_i256_11 = arith.constant 0 : i256
    %93 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %94 = llvm.load %93 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_11, %94 : i256, !llvm.ptr
    %95 = llvm.getelementptr %94[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %95, %93 : !llvm.ptr, !llvm.ptr
    cf.br ^bb16
  ^bb16:  // pred: ^bb15
    %c0_i256_12 = arith.constant 0 : i256
    %96 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %97 = llvm.load %96 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_12, %97 : i256, !llvm.ptr
    %98 = llvm.getelementptr %97[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %98, %96 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb17:  // pred: ^bb16
    %c0_i256_13 = arith.constant 0 : i256
    %99 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_13, %100 : i256, !llvm.ptr
    %101 = llvm.getelementptr %100[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %101, %99 : !llvm.ptr, !llvm.ptr
    cf.br ^bb18
  ^bb18:  // pred: ^bb17
    %c0_i256_14 = arith.constant 0 : i256
    %102 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %103 = llvm.load %102 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_14, %103 : i256, !llvm.ptr
    %104 = llvm.getelementptr %103[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %104, %102 : !llvm.ptr, !llvm.ptr
    cf.br ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i256_15 = arith.constant 0 : i256
    %105 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %106 = llvm.load %105 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_15, %106 : i256, !llvm.ptr
    %107 = llvm.getelementptr %106[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %107, %105 : !llvm.ptr, !llvm.ptr
    cf.br ^bb20
  ^bb20:  // pred: ^bb19
    %108 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> !llvm.ptr
    %110 = llvm.getelementptr %109[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %111 = llvm.load %110 : !llvm.ptr -> i256
    %112 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> !llvm.ptr
    llvm.store %111, %113 : i256, !llvm.ptr
    %114 = llvm.getelementptr %113[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %114, %112 : !llvm.ptr, !llvm.ptr
    cf.br ^bb21
  ^bb21:  // pred: ^bb20
    %c65535_i256 = arith.constant 65535 : i256
    %115 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %116 = llvm.load %115 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256, %116 : i256, !llvm.ptr
    %117 = llvm.getelementptr %116[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %117, %115 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb22:  // pred: ^bb21
    %118 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> !llvm.ptr
    %120 = llvm.getelementptr %119[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %121 = llvm.load %120 : !llvm.ptr -> i256
    llvm.store %120, %118 : !llvm.ptr, !llvm.ptr
    %122 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> !llvm.ptr
    %124 = llvm.getelementptr %123[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %125 = llvm.load %124 : !llvm.ptr -> i256
    llvm.store %124, %122 : !llvm.ptr, !llvm.ptr
    %126 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> !llvm.ptr
    %128 = llvm.getelementptr %127[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %129 = llvm.load %128 : !llvm.ptr -> i256
    llvm.store %128, %126 : !llvm.ptr, !llvm.ptr
    %130 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %131 = llvm.load %130 : !llvm.ptr -> !llvm.ptr
    %132 = llvm.getelementptr %131[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %133 = llvm.load %132 : !llvm.ptr -> i256
    llvm.store %132, %130 : !llvm.ptr, !llvm.ptr
    %134 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> !llvm.ptr
    %136 = llvm.getelementptr %135[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %137 = llvm.load %136 : !llvm.ptr -> i256
    llvm.store %136, %134 : !llvm.ptr, !llvm.ptr
    %138 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %139 = llvm.load %138 : !llvm.ptr -> !llvm.ptr
    %140 = llvm.getelementptr %139[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %141 = llvm.load %140 : !llvm.ptr -> i256
    llvm.store %140, %138 : !llvm.ptr, !llvm.ptr
    %142 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> !llvm.ptr
    %144 = llvm.getelementptr %143[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %145 = llvm.load %144 : !llvm.ptr -> i256
    llvm.store %144, %142 : !llvm.ptr, !llvm.ptr
    %146 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> i1
    %c0_i256_16 = arith.constant 0 : i256
    %148 = arith.cmpi ne, %129, %c0_i256_16 : i256
    %149 = arith.andi %147, %148 : i1
    %c86_i8 = arith.constant 86 : i8
    cf.cond_br %149, ^bb1(%c86_i8 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %150 = arith.trunci %121 : i256 to i64
    %151 = arith.trunci %133 : i256 to i64
    %152 = arith.trunci %137 : i256 to i64
    %153 = arith.trunci %141 : i256 to i64
    %154 = arith.trunci %145 : i256 to i64
    %155 = arith.addi %151, %152 : i64
    %156 = arith.addi %153, %154 : i64
    %157 = arith.maxui %155, %156 : i64
    %c0_i64_17 = arith.constant 0 : i64
    %158 = arith.cmpi slt, %157, %c0_i64_17 : i64
    %c84_i8_18 = arith.constant 84 : i8
    cf.cond_br %158, ^bb1(%c84_i8_18 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %c31_i64_19 = arith.constant 31 : i64
    %c32_i64_20 = arith.constant 32 : i64
    %159 = arith.addi %157, %c31_i64_19 : i64
    %160 = arith.divui %159, %c32_i64_20 : i64
    %161 = arith.muli %160, %c32_i64_20 : i64
    %162 = call @dora_fn_extend_memory(%arg0, %161) : (!llvm.ptr, i64) -> !llvm.ptr
    %163 = llvm.getelementptr %162[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %164 = llvm.load %163 : !llvm.ptr -> !llvm.ptr
    %165 = llvm.getelementptr %162[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %166 = llvm.load %165 : !llvm.ptr -> i8
    %c0_i8_21 = arith.constant 0 : i8
    %167 = arith.cmpi ne, %166, %c0_i8_21 : i8
    cf.cond_br %167, ^bb1(%166 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %168 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %164, %168 : !llvm.ptr, !llvm.ptr
    %169 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %161, %169 : i64, !llvm.ptr
    %170 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> i64
    %c1_i256_22 = arith.constant 1 : i256
    %172 = llvm.alloca %c1_i256_22 x i256 : (i256) -> !llvm.ptr
    llvm.store %129, %172 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_23 = arith.constant 1 : i256
    %173 = llvm.alloca %c1_i256_23 x i256 : (i256) -> !llvm.ptr
    llvm.store %125, %173 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_24 = arith.constant 1 : i64
    %174 = llvm.alloca %c1_i64_24 x i64 : (i64) -> !llvm.ptr
    %c0_i8_25 = arith.constant 0 : i8
    %175 = call @dora_fn_call(%arg0, %150, %173, %172, %151, %152, %153, %154, %171, %174, %c0_i8_25) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %176 = llvm.getelementptr %175[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %177 = llvm.load %176 : !llvm.ptr -> i8
    %178 = llvm.load %174 : !llvm.ptr -> i64
    %179 = arith.extui %177 : i8 to i256
    %180 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %181 = llvm.load %180 : !llvm.ptr -> !llvm.ptr
    llvm.store %179, %181 : i256, !llvm.ptr
    %182 = llvm.getelementptr %181[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %182, %180 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb26:  // pred: ^bb25
    %c1_i256_26 = arith.constant 1 : i256
    %183 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1_i256_26, %184 : i256, !llvm.ptr
    %185 = llvm.getelementptr %184[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %185, %183 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb27:  // pred: ^bb26
    %c0_i256_27 = arith.constant 0 : i256
    %186 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %187 = llvm.load %186 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_27, %187 : i256, !llvm.ptr
    %188 = llvm.getelementptr %187[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %188, %186 : !llvm.ptr, !llvm.ptr
    cf.br ^bb28
  ^bb28:  // pred: ^bb27
    %189 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %190 = llvm.load %189 : !llvm.ptr -> !llvm.ptr
    %191 = llvm.getelementptr %190[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %192 = llvm.load %191 : !llvm.ptr -> i256
    llvm.store %191, %189 : !llvm.ptr, !llvm.ptr
    %193 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> !llvm.ptr
    %195 = llvm.getelementptr %194[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %196 = llvm.load %195 : !llvm.ptr -> i256
    llvm.store %195, %193 : !llvm.ptr, !llvm.ptr
    %c1_i256_28 = arith.constant 1 : i256
    %197 = llvm.alloca %c1_i256_28 x i256 : (i256) -> !llvm.ptr
    llvm.store %192, %197 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_29 = arith.constant 1 : i256
    %198 = llvm.alloca %c1_i256_29 x i256 : (i256) -> !llvm.ptr
    llvm.store %196, %198 {alignment = 1 : i64} : i256, !llvm.ptr
    %199 = call @dora_fn_write_storage(%arg0, %197, %198) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    cf.br ^bb29
  ^bb29:  // pred: ^bb28
    %c0_i256_30 = arith.constant 0 : i256
    %200 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %201 = llvm.load %200 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_30, %201 : i256, !llvm.ptr
    %202 = llvm.getelementptr %201[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %202, %200 : !llvm.ptr, !llvm.ptr
    cf.br ^bb30
  ^bb30:  // pred: ^bb29
    %c0_i256_31 = arith.constant 0 : i256
    %203 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %204 = llvm.load %203 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_31, %204 : i256, !llvm.ptr
    %205 = llvm.getelementptr %204[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %205, %203 : !llvm.ptr, !llvm.ptr
    cf.br ^bb31
  ^bb31:  // pred: ^bb30
    %c32_i256 = arith.constant 32 : i256
    %206 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %207 = llvm.load %206 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %207 : i256, !llvm.ptr
    %208 = llvm.getelementptr %207[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %208, %206 : !llvm.ptr, !llvm.ptr
    cf.br ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i256_32 = arith.constant 0 : i256
    %209 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %210 = llvm.load %209 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_32, %210 : i256, !llvm.ptr
    %211 = llvm.getelementptr %210[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %211, %209 : !llvm.ptr, !llvm.ptr
    cf.br ^bb33
  ^bb33:  // pred: ^bb32
    %c0_i256_33 = arith.constant 0 : i256
    %212 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %213 = llvm.load %212 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_33, %213 : i256, !llvm.ptr
    %214 = llvm.getelementptr %213[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %214, %212 : !llvm.ptr, !llvm.ptr
    cf.br ^bb34
  ^bb34:  // pred: ^bb33
    %215 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %216 = llvm.load %215 : !llvm.ptr -> !llvm.ptr
    %217 = llvm.getelementptr %216[-7] : (!llvm.ptr) -> !llvm.ptr, i256
    %218 = llvm.load %217 : !llvm.ptr -> i256
    %219 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %220 = llvm.load %219 : !llvm.ptr -> !llvm.ptr
    llvm.store %218, %220 : i256, !llvm.ptr
    %221 = llvm.getelementptr %220[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %221, %219 : !llvm.ptr, !llvm.ptr
    cf.br ^bb35
  ^bb35:  // pred: ^bb34
    %c65535_i256_34 = arith.constant 65535 : i256
    %222 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> !llvm.ptr
    llvm.store %c65535_i256_34, %223 : i256, !llvm.ptr
    %224 = llvm.getelementptr %223[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %224, %222 : !llvm.ptr, !llvm.ptr
    cf.br ^bb36
  ^bb36:  // pred: ^bb35
    %225 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %226 = llvm.load %225 : !llvm.ptr -> !llvm.ptr
    %227 = llvm.getelementptr %226[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %228 = llvm.load %227 : !llvm.ptr -> i256
    llvm.store %227, %225 : !llvm.ptr, !llvm.ptr
    %229 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %230 = llvm.load %229 : !llvm.ptr -> !llvm.ptr
    %231 = llvm.getelementptr %230[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %232 = llvm.load %231 : !llvm.ptr -> i256
    llvm.store %231, %229 : !llvm.ptr, !llvm.ptr
    %233 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %234 = llvm.load %233 : !llvm.ptr -> !llvm.ptr
    %235 = llvm.getelementptr %234[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %236 = llvm.load %235 : !llvm.ptr -> i256
    llvm.store %235, %233 : !llvm.ptr, !llvm.ptr
    %237 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> !llvm.ptr
    %239 = llvm.getelementptr %238[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %240 = llvm.load %239 : !llvm.ptr -> i256
    llvm.store %239, %237 : !llvm.ptr, !llvm.ptr
    %241 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %242 = llvm.load %241 : !llvm.ptr -> !llvm.ptr
    %243 = llvm.getelementptr %242[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %244 = llvm.load %243 : !llvm.ptr -> i256
    llvm.store %243, %241 : !llvm.ptr, !llvm.ptr
    %245 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %246 = llvm.load %245 : !llvm.ptr -> !llvm.ptr
    %247 = llvm.getelementptr %246[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %248 = llvm.load %247 : !llvm.ptr -> i256
    llvm.store %247, %245 : !llvm.ptr, !llvm.ptr
    %249 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> !llvm.ptr
    %251 = llvm.getelementptr %250[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %252 = llvm.load %251 : !llvm.ptr -> i256
    llvm.store %251, %249 : !llvm.ptr, !llvm.ptr
    %253 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %254 = llvm.load %253 : !llvm.ptr -> i1
    %c0_i256_35 = arith.constant 0 : i256
    %255 = arith.cmpi ne, %236, %c0_i256_35 : i256
    %256 = arith.andi %254, %255 : i1
    %c86_i8_36 = arith.constant 86 : i8
    cf.cond_br %256, ^bb1(%c86_i8_36 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %257 = arith.trunci %228 : i256 to i64
    %258 = arith.trunci %240 : i256 to i64
    %259 = arith.trunci %244 : i256 to i64
    %260 = arith.trunci %248 : i256 to i64
    %261 = arith.trunci %252 : i256 to i64
    %262 = arith.addi %258, %259 : i64
    %263 = arith.addi %260, %261 : i64
    %264 = arith.maxui %262, %263 : i64
    %c0_i64_37 = arith.constant 0 : i64
    %265 = arith.cmpi slt, %264, %c0_i64_37 : i64
    %c84_i8_38 = arith.constant 84 : i8
    cf.cond_br %265, ^bb1(%c84_i8_38 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %c31_i64_39 = arith.constant 31 : i64
    %c32_i64_40 = arith.constant 32 : i64
    %266 = arith.addi %264, %c31_i64_39 : i64
    %267 = arith.divui %266, %c32_i64_40 : i64
    %268 = arith.muli %267, %c32_i64_40 : i64
    %269 = call @dora_fn_extend_memory(%arg0, %268) : (!llvm.ptr, i64) -> !llvm.ptr
    %270 = llvm.getelementptr %269[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %271 = llvm.load %270 : !llvm.ptr -> !llvm.ptr
    %272 = llvm.getelementptr %269[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %273 = llvm.load %272 : !llvm.ptr -> i8
    %c0_i8_41 = arith.constant 0 : i8
    %274 = arith.cmpi ne, %273, %c0_i8_41 : i8
    cf.cond_br %274, ^bb1(%273 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %275 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %271, %275 : !llvm.ptr, !llvm.ptr
    %276 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %268, %276 : i64, !llvm.ptr
    %277 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %278 = llvm.load %277 : !llvm.ptr -> i64
    %c1_i256_42 = arith.constant 1 : i256
    %279 = llvm.alloca %c1_i256_42 x i256 : (i256) -> !llvm.ptr
    llvm.store %236, %279 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_43 = arith.constant 1 : i256
    %280 = llvm.alloca %c1_i256_43 x i256 : (i256) -> !llvm.ptr
    llvm.store %232, %280 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_44 = arith.constant 1 : i64
    %281 = llvm.alloca %c1_i64_44 x i64 : (i64) -> !llvm.ptr
    %c0_i8_45 = arith.constant 0 : i8
    %282 = call @dora_fn_call(%arg0, %257, %280, %279, %258, %259, %260, %261, %278, %281, %c0_i8_45) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %283 = llvm.getelementptr %282[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %284 = llvm.load %283 : !llvm.ptr -> i8
    %285 = llvm.load %281 : !llvm.ptr -> i64
    %286 = arith.extui %284 : i8 to i256
    %287 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %288 = llvm.load %287 : !llvm.ptr -> !llvm.ptr
    llvm.store %286, %288 : i256, !llvm.ptr
    %289 = llvm.getelementptr %288[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %289, %287 : !llvm.ptr, !llvm.ptr
    cf.br ^bb40
  ^bb40:  // pred: ^bb39
    %c0_i64_46 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %290 = call @dora_fn_write_result(%arg0, %c0_i64_46, %c0_i64_46, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
