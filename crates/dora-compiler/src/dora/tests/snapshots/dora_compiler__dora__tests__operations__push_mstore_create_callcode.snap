---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_memory_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_memory_size(!llvm.ptr) -> i64
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: !llvm.ptr, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    cf.br ^bb5
  ^bb1(%0: i8):  // 105 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb34, ^bb36, ^bb37, ^bb40, ^bb41, ^bb44, ^bb45, ^bb48, ^bb49, ^bb52, ^bb53, ^bb56, ^bb57, ^bb60, ^bb61, ^bb64, ^bb65, ^bb67, ^bb68, ^bb70, ^bb71, ^bb73, ^bb74, ^bb76, ^bb77, ^bb80, ^bb81, ^bb84, ^bb85, ^bb87, ^bb88, ^bb90, ^bb91, ^bb94, ^bb95, ^bb98, ^bb99, ^bb102, ^bb103, ^bb106, ^bb107, ^bb110, ^bb111, ^bb114, ^bb115, ^bb118, ^bb119, ^bb121, ^bb122, ^bb124, ^bb125, ^bb127, ^bb128, ^bb130, ^bb131, ^bb134, ^bb135, ^bb136, ^bb139, ^bb140, ^bb142, ^bb143, ^bb144, ^bb145, ^bb146, ^bb149, ^bb150, ^bb152, ^bb153, ^bb154, ^bb157, ^bb158, ^bb160, ^bb161, ^bb162, ^bb165, ^bb166, ^bb168, ^bb169, ^bb170, ^bb173, ^bb174, ^bb176, ^bb177, ^bb178, ^bb181, ^bb182
    %c0_i64 = arith.constant 0 : i64
    %1 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64, %c0_i64, %1, %0) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %0 : i8
  ^bb2(%2: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %2 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c35176690763027899028215972788860354566387_i256 = arith.constant 35176690763027899028215972788860354566387 : i256
    %3 = llvm.load %arg3 : !llvm.ptr -> i64
    %4 = llvm.getelementptr %arg2[%3] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %5 = arith.addi %3, %c1_i64 : i64
    llvm.store %5, %arg3 : i64, !llvm.ptr
    llvm.store %c35176690763027899028215972788860354566387_i256, %4 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %6 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_0 = arith.constant 1 : i64
    %7 = arith.addi %6, %c1_i64_0 : i64
    %8 = arith.cmpi ult, %c1024_i64, %7 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %8, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %9 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %10 = arith.cmpi uge, %9, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %10, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %11 = arith.subi %9, %c3_i64 : i64
    llvm.store %11, %arg1 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %12 = llvm.load %arg3 : !llvm.ptr -> i64
    %13 = llvm.getelementptr %arg2[%12] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_1 = arith.constant 1 : i64
    %14 = arith.addi %12, %c1_i64_1 : i64
    llvm.store %14, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %13 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_2 = arith.constant 1024 : i64
    %15 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %16 = arith.addi %15, %c1_i64_3 : i64
    %17 = arith.cmpi ult, %c1024_i64_2, %16 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %17, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %18 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %19 = arith.cmpi uge, %18, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %19, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %20 = arith.subi %18, %c3_i64_5 : i64
    llvm.store %20, %arg1 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %21 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_7 = arith.constant 1 : i64
    %22 = arith.subi %21, %c1_i64_7 : i64
    %23 = llvm.getelementptr %arg2[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %22, %arg3 : i64, !llvm.ptr
    %24 = llvm.load %23 : !llvm.ptr -> i256
    %25 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %26 = arith.subi %25, %c1_i64_8 : i64
    %27 = llvm.getelementptr %arg2[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %26, %arg3 : i64, !llvm.ptr
    %28 = llvm.load %27 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_9 = arith.constant 0 : i64
    %29 = arith.cmpi ne, %c32_i64, %c0_i64_9 : i64
    cf.cond_br %29, ^bb134, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb138
    %30 = arith.trunci %24 : i256 to i64
    %31 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %32 = llvm.getelementptr %31[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.intr.bswap(%28)  : (i256) -> i256
    llvm.store %33, %32 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_10 = arith.constant 1024 : i64
    %34 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %35 = arith.addi %34, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %36 = arith.cmpi ult, %34, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %36, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %37 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_11 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %38 = arith.cmpi uge, %37, %c3_i64_11 : i64
    %c80_i8_12 = arith.constant 80 : i8
    cf.cond_br %38, ^bb15, ^bb1(%c80_i8_12 : i8)
  ^bb15:  // pred: ^bb14
    %39 = arith.subi %37, %c3_i64_11 : i64
    llvm.store %39, %arg1 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c17_i256 = arith.constant 17 : i256
    %40 = llvm.load %arg3 : !llvm.ptr -> i64
    %41 = llvm.getelementptr %arg2[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_13 = arith.constant 1 : i64
    %42 = arith.addi %40, %c1_i64_13 : i64
    llvm.store %42, %arg3 : i64, !llvm.ptr
    llvm.store %c17_i256, %41 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_14 = arith.constant 1024 : i64
    %43 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_15 = arith.constant 1 : i64
    %44 = arith.addi %43, %c1_i64_15 : i64
    %45 = arith.cmpi ult, %c1024_i64_14, %44 : i64
    %c92_i8_16 = arith.constant 92 : i8
    cf.cond_br %45, ^bb1(%c92_i8_16 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %46 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_17 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %47 = arith.cmpi uge, %46, %c3_i64_17 : i64
    %c80_i8_18 = arith.constant 80 : i8
    cf.cond_br %47, ^bb19, ^bb1(%c80_i8_18 : i8)
  ^bb19:  // pred: ^bb18
    %48 = arith.subi %46, %c3_i64_17 : i64
    llvm.store %48, %arg1 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c15_i256 = arith.constant 15 : i256
    %49 = llvm.load %arg3 : !llvm.ptr -> i64
    %50 = llvm.getelementptr %arg2[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_19 = arith.constant 1 : i64
    %51 = arith.addi %49, %c1_i64_19 : i64
    llvm.store %51, %arg3 : i64, !llvm.ptr
    llvm.store %c15_i256, %50 : i256, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %c1024_i64_20 = arith.constant 1024 : i64
    %52 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_21 = arith.constant 1 : i64
    %53 = arith.addi %52, %c1_i64_21 : i64
    %54 = arith.cmpi ult, %c1024_i64_20, %53 : i64
    %c92_i8_22 = arith.constant 92 : i8
    cf.cond_br %54, ^bb1(%c92_i8_22 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %55 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_23 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %56 = arith.cmpi uge, %55, %c3_i64_23 : i64
    %c80_i8_24 = arith.constant 80 : i8
    cf.cond_br %56, ^bb23, ^bb1(%c80_i8_24 : i8)
  ^bb23:  // pred: ^bb22
    %57 = arith.subi %55, %c3_i64_23 : i64
    llvm.store %57, %arg1 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_25 = arith.constant 0 : i256
    %58 = llvm.load %arg3 : !llvm.ptr -> i64
    %59 = llvm.getelementptr %arg2[%58] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_26 = arith.constant 1 : i64
    %60 = arith.addi %58, %c1_i64_26 : i64
    llvm.store %60, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_25, %59 : i256, !llvm.ptr
    cf.br ^bb37
  ^bb25:  // pred: ^bb27
    %c1024_i64_27 = arith.constant 1024 : i64
    %61 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_28 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_28 : i64
    %63 = arith.cmpi ult, %c1024_i64_27, %62 : i64
    %c92_i8_29 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_29 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %64 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_30 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %65 = arith.cmpi uge, %64, %c3_i64_30 : i64
    %c80_i8_31 = arith.constant 80 : i8
    cf.cond_br %65, ^bb27, ^bb1(%c80_i8_31 : i8)
  ^bb27:  // pred: ^bb26
    %66 = arith.subi %64, %c3_i64_30 : i64
    llvm.store %66, %arg1 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb36
    %67 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_32 = arith.constant 1 : i64
    %68 = arith.subi %67, %c1_i64_32 : i64
    %69 = llvm.getelementptr %arg2[%68] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %68, %arg3 : i64, !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> i256
    %71 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_33 = arith.constant 1 : i64
    %72 = arith.subi %71, %c1_i64_33 : i64
    %73 = llvm.getelementptr %arg2[%72] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %72, %arg3 : i64, !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> i256
    %75 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %76 = arith.subi %75, %c1_i64_34 : i64
    %77 = llvm.getelementptr %arg2[%76] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %76, %arg3 : i64, !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i256
    %79 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %80 = arith.cmpi ne, %79, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %80, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %81 = arith.cmpi sgt, %78, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %81, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %82 = arith.trunci %78 : i256 to i64
    %c0_i64_35 = arith.constant 0 : i64
    %83 = arith.cmpi slt, %82, %c0_i64_35 : i64
    %c84_i8_36 = arith.constant 84 : i8
    cf.cond_br %83, ^bb1(%c84_i8_36 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i64_37 = arith.constant 0 : i64
    %84 = arith.cmpi ne, %82, %c0_i64_37 : i64
    cf.cond_br %84, ^bb142, ^bb32
  ^bb32:  // 2 preds: ^bb31, ^bb148
    %c32000_i64 = arith.constant 32000 : i64
    %85 = llvm.load %arg1 : !llvm.ptr -> i64
    %86 = arith.cmpi ult, %85, %c32000_i64 : i64
    scf.if %86 {
    } else {
      %588 = arith.subi %85, %c32000_i64 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_38 = arith.constant 80 : i8
    cf.cond_br %86, ^bb1(%c80_i8_38 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c1_i256 = arith.constant 1 : i256
    %87 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %70, %87 {alignment = 1 : i64} : i256, !llvm.ptr
    %88 = llvm.load %arg1 : !llvm.ptr -> i64
    %89 = arith.trunci %74 : i256 to i64
    %90 = call @dora_fn_create(%arg0, %82, %89, %87, %88) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %91 = llvm.getelementptr %90[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %92 = llvm.load %91 : !llvm.ptr -> i8
    %c0_i8_39 = arith.constant 0 : i8
    %93 = arith.cmpi ne, %92, %c0_i8_39 : i8
    cf.cond_br %93, ^bb1(%92 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %94 = llvm.getelementptr %90[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %95 = llvm.load %94 : !llvm.ptr -> i64
    %96 = llvm.load %arg1 : !llvm.ptr -> i64
    %97 = arith.cmpi ult, %96, %95 : i64
    scf.if %97 {
    } else {
      %588 = arith.subi %96, %95 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %97, ^bb1(%c80_i8_40 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %98 = llvm.load %87 : !llvm.ptr -> i256
    %99 = llvm.load %arg3 : !llvm.ptr -> i64
    %100 = llvm.getelementptr %arg2[%99] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_41 = arith.constant 1 : i64
    %101 = arith.addi %99, %c1_i64_41 : i64
    llvm.store %101, %arg3 : i64, !llvm.ptr
    llvm.store %98, %100 : i256, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %c1024_i64_42 = arith.constant 1024 : i64
    %102 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_43 = arith.constant -2 : i64
    %103 = arith.addi %102, %c-2_i64_43 : i64
    %c3_i64_44 = arith.constant 3 : i64
    %104 = arith.cmpi ult, %102, %c3_i64_44 : i64
    %c91_i8_45 = arith.constant 91 : i8
    cf.cond_br %104, ^bb1(%c91_i8_45 : i8), ^bb28
  ^bb37:  // pred: ^bb24
    %105 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_46 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %106 = arith.cmpi uge, %105, %c0_i64_46 : i64
    %c80_i8_47 = arith.constant 80 : i8
    cf.cond_br %106, ^bb38, ^bb1(%c80_i8_47 : i8)
  ^bb38:  // pred: ^bb37
    %107 = arith.subi %105, %c0_i64_46 : i64
    llvm.store %107, %arg1 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c0_i256_48 = arith.constant 0 : i256
    %108 = llvm.load %arg3 : !llvm.ptr -> i64
    %109 = llvm.getelementptr %arg2[%108] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_49 = arith.constant 1 : i64
    %110 = arith.addi %108, %c1_i64_49 : i64
    llvm.store %110, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_48, %109 : i256, !llvm.ptr
    cf.br ^bb45
  ^bb40:  // pred: ^bb42
    %c1024_i64_50 = arith.constant 1024 : i64
    %111 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_51 = arith.constant 1 : i64
    %112 = arith.addi %111, %c1_i64_51 : i64
    %113 = arith.cmpi ult, %c1024_i64_50, %112 : i64
    %c92_i8_52 = arith.constant 92 : i8
    cf.cond_br %113, ^bb1(%c92_i8_52 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %114 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_53 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %115 = arith.cmpi uge, %114, %c3_i64_53 : i64
    %c80_i8_54 = arith.constant 80 : i8
    cf.cond_br %115, ^bb42, ^bb1(%c80_i8_54 : i8)
  ^bb42:  // pred: ^bb41
    %116 = arith.subi %114, %c3_i64_53 : i64
    llvm.store %116, %arg1 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb44
    %c0_i256_55 = arith.constant 0 : i256
    %117 = llvm.load %arg3 : !llvm.ptr -> i64
    %118 = llvm.getelementptr %arg2[%117] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_56 = arith.constant 1 : i64
    %119 = arith.addi %117, %c1_i64_56 : i64
    llvm.store %119, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_55, %118 : i256, !llvm.ptr
    cf.br ^bb49
  ^bb44:  // pred: ^bb46
    %c1024_i64_57 = arith.constant 1024 : i64
    %120 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %121 = arith.addi %120, %c1_i64_58 : i64
    %122 = arith.cmpi ult, %c1024_i64_57, %121 : i64
    %c92_i8_59 = arith.constant 92 : i8
    cf.cond_br %122, ^bb1(%c92_i8_59 : i8), ^bb43
  ^bb45:  // pred: ^bb39
    %123 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_60 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %124 = arith.cmpi uge, %123, %c3_i64_60 : i64
    %c80_i8_61 = arith.constant 80 : i8
    cf.cond_br %124, ^bb46, ^bb1(%c80_i8_61 : i8)
  ^bb46:  // pred: ^bb45
    %125 = arith.subi %123, %c3_i64_60 : i64
    llvm.store %125, %arg1 : i64, !llvm.ptr
    cf.br ^bb44
  ^bb47:  // pred: ^bb48
    %c0_i256_62 = arith.constant 0 : i256
    %126 = llvm.load %arg3 : !llvm.ptr -> i64
    %127 = llvm.getelementptr %arg2[%126] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_63 = arith.constant 1 : i64
    %128 = arith.addi %126, %c1_i64_63 : i64
    llvm.store %128, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_62, %127 : i256, !llvm.ptr
    cf.br ^bb53
  ^bb48:  // pred: ^bb50
    %c1024_i64_64 = arith.constant 1024 : i64
    %129 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_65 = arith.constant 1 : i64
    %130 = arith.addi %129, %c1_i64_65 : i64
    %131 = arith.cmpi ult, %c1024_i64_64, %130 : i64
    %c92_i8_66 = arith.constant 92 : i8
    cf.cond_br %131, ^bb1(%c92_i8_66 : i8), ^bb47
  ^bb49:  // pred: ^bb43
    %132 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_67 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %133 = arith.cmpi uge, %132, %c3_i64_67 : i64
    %c80_i8_68 = arith.constant 80 : i8
    cf.cond_br %133, ^bb50, ^bb1(%c80_i8_68 : i8)
  ^bb50:  // pred: ^bb49
    %134 = arith.subi %132, %c3_i64_67 : i64
    llvm.store %134, %arg1 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // pred: ^bb52
    %c0_i256_69 = arith.constant 0 : i256
    %135 = llvm.load %arg3 : !llvm.ptr -> i64
    %136 = llvm.getelementptr %arg2[%135] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_70 = arith.constant 1 : i64
    %137 = arith.addi %135, %c1_i64_70 : i64
    llvm.store %137, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_69, %136 : i256, !llvm.ptr
    cf.br ^bb57
  ^bb52:  // pred: ^bb54
    %c1024_i64_71 = arith.constant 1024 : i64
    %138 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_72 = arith.constant 1 : i64
    %139 = arith.addi %138, %c1_i64_72 : i64
    %140 = arith.cmpi ult, %c1024_i64_71, %139 : i64
    %c92_i8_73 = arith.constant 92 : i8
    cf.cond_br %140, ^bb1(%c92_i8_73 : i8), ^bb51
  ^bb53:  // pred: ^bb47
    %141 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_74 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %142 = arith.cmpi uge, %141, %c3_i64_74 : i64
    %c80_i8_75 = arith.constant 80 : i8
    cf.cond_br %142, ^bb54, ^bb1(%c80_i8_75 : i8)
  ^bb54:  // pred: ^bb53
    %143 = arith.subi %141, %c3_i64_74 : i64
    llvm.store %143, %arg1 : i64, !llvm.ptr
    cf.br ^bb52
  ^bb55:  // pred: ^bb56
    %c0_i256_76 = arith.constant 0 : i256
    %144 = llvm.load %arg3 : !llvm.ptr -> i64
    %145 = llvm.getelementptr %arg2[%144] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_77 = arith.constant 1 : i64
    %146 = arith.addi %144, %c1_i64_77 : i64
    llvm.store %146, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_76, %145 : i256, !llvm.ptr
    cf.br ^bb61
  ^bb56:  // pred: ^bb58
    %c1024_i64_78 = arith.constant 1024 : i64
    %147 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_79 = arith.constant 1 : i64
    %148 = arith.addi %147, %c1_i64_79 : i64
    %149 = arith.cmpi ult, %c1024_i64_78, %148 : i64
    %c92_i8_80 = arith.constant 92 : i8
    cf.cond_br %149, ^bb1(%c92_i8_80 : i8), ^bb55
  ^bb57:  // pred: ^bb51
    %150 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_81 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %151 = arith.cmpi uge, %150, %c3_i64_81 : i64
    %c80_i8_82 = arith.constant 80 : i8
    cf.cond_br %151, ^bb58, ^bb1(%c80_i8_82 : i8)
  ^bb58:  // pred: ^bb57
    %152 = arith.subi %150, %c3_i64_81 : i64
    llvm.store %152, %arg1 : i64, !llvm.ptr
    cf.br ^bb56
  ^bb59:  // pred: ^bb60
    %153 = llvm.load %arg3 : !llvm.ptr -> i64
    %154 = llvm.getelementptr %arg2[%153] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %155 = llvm.getelementptr %154[-6] : (!llvm.ptr) -> !llvm.ptr, i256
    %156 = llvm.load %155 : !llvm.ptr -> i256
    %157 = llvm.load %arg3 : !llvm.ptr -> i64
    %158 = llvm.getelementptr %arg2[%157] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_83 = arith.constant 1 : i64
    %159 = arith.addi %157, %c1_i64_83 : i64
    llvm.store %159, %arg3 : i64, !llvm.ptr
    llvm.store %156, %158 : i256, !llvm.ptr
    cf.br ^bb65
  ^bb60:  // pred: ^bb62
    %c1024_i64_84 = arith.constant 1024 : i64
    %160 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_85 = arith.constant 1 : i64
    %161 = arith.addi %160, %c1_i64_85 : i64
    %c6_i64 = arith.constant 6 : i64
    %162 = arith.cmpi ult, %160, %c6_i64 : i64
    %163 = arith.cmpi ult, %c1024_i64_84, %161 : i64
    %164 = arith.xori %162, %163 : i1
    %c92_i8_86 = arith.constant 92 : i8
    cf.cond_br %164, ^bb1(%c92_i8_86 : i8), ^bb59
  ^bb61:  // pred: ^bb55
    %165 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_87 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %166 = arith.cmpi uge, %165, %c3_i64_87 : i64
    %c80_i8_88 = arith.constant 80 : i8
    cf.cond_br %166, ^bb62, ^bb1(%c80_i8_88 : i8)
  ^bb62:  // pred: ^bb61
    %167 = arith.subi %165, %c3_i64_87 : i64
    llvm.store %167, %arg1 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb63:  // pred: ^bb64
    %c65535_i256 = arith.constant 65535 : i256
    %168 = llvm.load %arg3 : !llvm.ptr -> i64
    %169 = llvm.getelementptr %arg2[%168] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_89 = arith.constant 1 : i64
    %170 = arith.addi %168, %c1_i64_89 : i64
    llvm.store %170, %arg3 : i64, !llvm.ptr
    llvm.store %c65535_i256, %169 : i256, !llvm.ptr
    cf.br ^bb77
  ^bb64:  // pred: ^bb66
    %c1024_i64_90 = arith.constant 1024 : i64
    %171 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_91 = arith.constant 1 : i64
    %172 = arith.addi %171, %c1_i64_91 : i64
    %173 = arith.cmpi ult, %c1024_i64_90, %172 : i64
    %c92_i8_92 = arith.constant 92 : i8
    cf.cond_br %173, ^bb1(%c92_i8_92 : i8), ^bb63
  ^bb65:  // pred: ^bb59
    %174 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_93 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %175 = arith.cmpi uge, %174, %c3_i64_93 : i64
    %c80_i8_94 = arith.constant 80 : i8
    cf.cond_br %175, ^bb66, ^bb1(%c80_i8_94 : i8)
  ^bb66:  // pred: ^bb65
    %176 = arith.subi %174, %c3_i64_93 : i64
    llvm.store %176, %arg1 : i64, !llvm.ptr
    cf.br ^bb64
  ^bb67:  // pred: ^bb76
    %177 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_95 = arith.constant 1 : i64
    %178 = arith.subi %177, %c1_i64_95 : i64
    %179 = llvm.getelementptr %arg2[%178] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %178, %arg3 : i64, !llvm.ptr
    %180 = llvm.load %179 : !llvm.ptr -> i256
    %181 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_96 = arith.constant 1 : i64
    %182 = arith.subi %181, %c1_i64_96 : i64
    %183 = llvm.getelementptr %arg2[%182] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %182, %arg3 : i64, !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> i256
    %185 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_97 = arith.constant 1 : i64
    %186 = arith.subi %185, %c1_i64_97 : i64
    %187 = llvm.getelementptr %arg2[%186] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %186, %arg3 : i64, !llvm.ptr
    %188 = llvm.load %187 : !llvm.ptr -> i256
    %189 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_98 = arith.constant 1 : i64
    %190 = arith.subi %189, %c1_i64_98 : i64
    %191 = llvm.getelementptr %arg2[%190] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %190, %arg3 : i64, !llvm.ptr
    %192 = llvm.load %191 : !llvm.ptr -> i256
    %193 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_99 = arith.constant 1 : i64
    %194 = arith.subi %193, %c1_i64_99 : i64
    %195 = llvm.getelementptr %arg2[%194] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %194, %arg3 : i64, !llvm.ptr
    %196 = llvm.load %195 : !llvm.ptr -> i256
    %197 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_100 = arith.constant 1 : i64
    %198 = arith.subi %197, %c1_i64_100 : i64
    %199 = llvm.getelementptr %arg2[%198] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %198, %arg3 : i64, !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> i256
    %201 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_101 = arith.constant 1 : i64
    %202 = arith.subi %201, %c1_i64_101 : i64
    %203 = llvm.getelementptr %arg2[%202] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %202, %arg3 : i64, !llvm.ptr
    %204 = llvm.load %203 : !llvm.ptr -> i256
    %c18446744073709551615_i256_102 = arith.constant 18446744073709551615 : i256
    %205 = arith.cmpi sgt, %196, %c18446744073709551615_i256_102 : i256
    %c84_i8_103 = arith.constant 84 : i8
    cf.cond_br %205, ^bb1(%c84_i8_103 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %206 = arith.trunci %196 : i256 to i64
    %c0_i64_104 = arith.constant 0 : i64
    %207 = arith.cmpi slt, %206, %c0_i64_104 : i64
    %c84_i8_105 = arith.constant 84 : i8
    cf.cond_br %207, ^bb1(%c84_i8_105 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %c0_i64_106 = arith.constant 0 : i64
    %208 = arith.cmpi ne, %206, %c0_i64_106 : i64
    cf.cond_br %208, ^bb152, ^bb70
  ^bb70:  // 2 preds: ^bb69, ^bb156
    %c18446744073709551615_i256_107 = arith.constant 18446744073709551615 : i256
    %209 = arith.cmpi sgt, %204, %c18446744073709551615_i256_107 : i256
    %c84_i8_108 = arith.constant 84 : i8
    cf.cond_br %209, ^bb1(%c84_i8_108 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %210 = arith.trunci %204 : i256 to i64
    %c0_i64_109 = arith.constant 0 : i64
    %211 = arith.cmpi slt, %210, %c0_i64_109 : i64
    %c84_i8_110 = arith.constant 84 : i8
    cf.cond_br %211, ^bb1(%c84_i8_110 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %c0_i64_111 = arith.constant 0 : i64
    %212 = arith.cmpi ne, %210, %c0_i64_111 : i64
    cf.cond_br %212, ^bb160, ^bb73
  ^bb73:  // 2 preds: ^bb72, ^bb164
    %213 = arith.trunci %192 : i256 to i64
    %214 = arith.trunci %200 : i256 to i64
    %215 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_112 = arith.constant 1 : i256
    %216 = llvm.alloca %c1_i256_112 x i256 : (i256) -> !llvm.ptr
    llvm.store %188, %216 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_113 = arith.constant 1 : i256
    %217 = llvm.alloca %c1_i256_113 x i256 : (i256) -> !llvm.ptr
    llvm.store %180, %217 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_114 = arith.constant 1 : i256
    %218 = llvm.alloca %c1_i256_114 x i256 : (i256) -> !llvm.ptr
    llvm.store %184, %218 {alignment = 1 : i64} : i256, !llvm.ptr
    %c3_i8 = arith.constant 3 : i8
    %219 = call @dora_fn_call(%arg0, %217, %218, %216, %213, %206, %214, %210, %215, %c3_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %220 = llvm.getelementptr %219[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %221 = llvm.load %220 : !llvm.ptr -> i8
    %222 = llvm.getelementptr %219[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %223 = llvm.load %222 : !llvm.ptr -> i8
    %c0_i8_115 = arith.constant 0 : i8
    %224 = arith.cmpi ne, %223, %c0_i8_115 : i8
    cf.cond_br %224, ^bb1(%223 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %225 = llvm.getelementptr %219[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %226 = llvm.load %225 : !llvm.ptr -> i64
    %227 = llvm.load %arg1 : !llvm.ptr -> i64
    %228 = arith.cmpi ult, %227, %226 : i64
    scf.if %228 {
    } else {
      %588 = arith.subi %227, %226 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_116 = arith.constant 80 : i8
    cf.cond_br %228, ^bb1(%c80_i8_116 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %229 = arith.extui %221 : i8 to i256
    %230 = llvm.load %arg3 : !llvm.ptr -> i64
    %231 = llvm.getelementptr %arg2[%230] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_117 = arith.constant 1 : i64
    %232 = arith.addi %230, %c1_i64_117 : i64
    llvm.store %232, %arg3 : i64, !llvm.ptr
    llvm.store %229, %231 : i256, !llvm.ptr
    cf.br ^bb81
  ^bb76:  // pred: ^bb78
    %c1024_i64_118 = arith.constant 1024 : i64
    %233 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-6_i64 = arith.constant -6 : i64
    %234 = arith.addi %233, %c-6_i64 : i64
    %c7_i64 = arith.constant 7 : i64
    %235 = arith.cmpi ult, %233, %c7_i64 : i64
    %c91_i8_119 = arith.constant 91 : i8
    cf.cond_br %235, ^bb1(%c91_i8_119 : i8), ^bb67
  ^bb77:  // pred: ^bb63
    %236 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_120 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %237 = arith.cmpi uge, %236, %c0_i64_120 : i64
    %c80_i8_121 = arith.constant 80 : i8
    cf.cond_br %237, ^bb78, ^bb1(%c80_i8_121 : i8)
  ^bb78:  // pred: ^bb77
    %238 = arith.subi %236, %c0_i64_120 : i64
    llvm.store %238, %arg1 : i64, !llvm.ptr
    cf.br ^bb76
  ^bb79:  // pred: ^bb80
    %c1_i256_122 = arith.constant 1 : i256
    %239 = llvm.load %arg3 : !llvm.ptr -> i64
    %240 = llvm.getelementptr %arg2[%239] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_123 = arith.constant 1 : i64
    %241 = arith.addi %239, %c1_i64_123 : i64
    llvm.store %241, %arg3 : i64, !llvm.ptr
    llvm.store %c1_i256_122, %240 : i256, !llvm.ptr
    cf.br ^bb85
  ^bb80:  // pred: ^bb82
    %c1024_i64_124 = arith.constant 1024 : i64
    %242 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_125 = arith.constant 1 : i64
    %243 = arith.addi %242, %c1_i64_125 : i64
    %244 = arith.cmpi ult, %c1024_i64_124, %243 : i64
    %c92_i8_126 = arith.constant 92 : i8
    cf.cond_br %244, ^bb1(%c92_i8_126 : i8), ^bb79
  ^bb81:  // pred: ^bb75
    %245 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_127 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %246 = arith.cmpi uge, %245, %c3_i64_127 : i64
    %c80_i8_128 = arith.constant 80 : i8
    cf.cond_br %246, ^bb82, ^bb1(%c80_i8_128 : i8)
  ^bb82:  // pred: ^bb81
    %247 = arith.subi %245, %c3_i64_127 : i64
    llvm.store %247, %arg1 : i64, !llvm.ptr
    cf.br ^bb80
  ^bb83:  // pred: ^bb84
    %c0_i256_129 = arith.constant 0 : i256
    %248 = llvm.load %arg3 : !llvm.ptr -> i64
    %249 = llvm.getelementptr %arg2[%248] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_130 = arith.constant 1 : i64
    %250 = arith.addi %248, %c1_i64_130 : i64
    llvm.store %250, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_129, %249 : i256, !llvm.ptr
    cf.br ^bb91
  ^bb84:  // pred: ^bb86
    %c1024_i64_131 = arith.constant 1024 : i64
    %251 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_132 = arith.constant 1 : i64
    %252 = arith.addi %251, %c1_i64_132 : i64
    %253 = arith.cmpi ult, %c1024_i64_131, %252 : i64
    %c92_i8_133 = arith.constant 92 : i8
    cf.cond_br %253, ^bb1(%c92_i8_133 : i8), ^bb83
  ^bb85:  // pred: ^bb79
    %254 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_134 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %255 = arith.cmpi uge, %254, %c3_i64_134 : i64
    %c80_i8_135 = arith.constant 80 : i8
    cf.cond_br %255, ^bb86, ^bb1(%c80_i8_135 : i8)
  ^bb86:  // pred: ^bb85
    %256 = arith.subi %254, %c3_i64_134 : i64
    llvm.store %256, %arg1 : i64, !llvm.ptr
    cf.br ^bb84
  ^bb87:  // pred: ^bb90
    %257 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_136 = arith.constant 1 : i64
    %258 = arith.subi %257, %c1_i64_136 : i64
    %259 = llvm.getelementptr %arg2[%258] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %258, %arg3 : i64, !llvm.ptr
    %260 = llvm.load %259 : !llvm.ptr -> i256
    %261 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_137 = arith.constant 1 : i64
    %262 = arith.subi %261, %c1_i64_137 : i64
    %263 = llvm.getelementptr %arg2[%262] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %262, %arg3 : i64, !llvm.ptr
    %264 = llvm.load %263 : !llvm.ptr -> i256
    %c1_i256_138 = arith.constant 1 : i256
    %265 = llvm.alloca %c1_i256_138 x i256 : (i256) -> !llvm.ptr
    llvm.store %260, %265 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_139 = arith.constant 1 : i256
    %266 = llvm.alloca %c1_i256_139 x i256 : (i256) -> !llvm.ptr
    llvm.store %264, %266 {alignment = 1 : i64} : i256, !llvm.ptr
    %267 = llvm.load %arg1 : !llvm.ptr -> i64
    %268 = call @dora_fn_sstore(%arg0, %265, %266, %267) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
    %269 = llvm.getelementptr %268[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %270 = llvm.load %269 : !llvm.ptr -> i8
    %c0_i8_140 = arith.constant 0 : i8
    %271 = arith.cmpi ne, %270, %c0_i8_140 : i8
    cf.cond_br %271, ^bb1(%270 : i8), ^bb88
  ^bb88:  // pred: ^bb87
    %272 = llvm.getelementptr %268[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %273 = llvm.load %272 : !llvm.ptr -> i64
    %274 = llvm.load %arg1 : !llvm.ptr -> i64
    %275 = arith.cmpi ult, %274, %273 : i64
    scf.if %275 {
    } else {
      %588 = arith.subi %274, %273 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_141 = arith.constant 80 : i8
    cf.cond_br %275, ^bb1(%c80_i8_141 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    cf.br ^bb95
  ^bb90:  // pred: ^bb92
    %c1024_i64_142 = arith.constant 1024 : i64
    %276 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_143 = arith.constant -2 : i64
    %277 = arith.addi %276, %c-2_i64_143 : i64
    %c2_i64_144 = arith.constant 2 : i64
    %278 = arith.cmpi ult, %276, %c2_i64_144 : i64
    %c91_i8_145 = arith.constant 91 : i8
    cf.cond_br %278, ^bb1(%c91_i8_145 : i8), ^bb87
  ^bb91:  // pred: ^bb83
    %279 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_146 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %280 = arith.cmpi uge, %279, %c0_i64_146 : i64
    %c80_i8_147 = arith.constant 80 : i8
    cf.cond_br %280, ^bb92, ^bb1(%c80_i8_147 : i8)
  ^bb92:  // pred: ^bb91
    %281 = arith.subi %279, %c0_i64_146 : i64
    llvm.store %281, %arg1 : i64, !llvm.ptr
    cf.br ^bb90
  ^bb93:  // pred: ^bb94
    %c0_i256_148 = arith.constant 0 : i256
    %282 = llvm.load %arg3 : !llvm.ptr -> i64
    %283 = llvm.getelementptr %arg2[%282] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_149 = arith.constant 1 : i64
    %284 = arith.addi %282, %c1_i64_149 : i64
    llvm.store %284, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_148, %283 : i256, !llvm.ptr
    cf.br ^bb99
  ^bb94:  // pred: ^bb96
    %c1024_i64_150 = arith.constant 1024 : i64
    %285 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_151 = arith.constant 1 : i64
    %286 = arith.addi %285, %c1_i64_151 : i64
    %287 = arith.cmpi ult, %c1024_i64_150, %286 : i64
    %c92_i8_152 = arith.constant 92 : i8
    cf.cond_br %287, ^bb1(%c92_i8_152 : i8), ^bb93
  ^bb95:  // pred: ^bb89
    %288 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_153 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %289 = arith.cmpi uge, %288, %c3_i64_153 : i64
    %c80_i8_154 = arith.constant 80 : i8
    cf.cond_br %289, ^bb96, ^bb1(%c80_i8_154 : i8)
  ^bb96:  // pred: ^bb95
    %290 = arith.subi %288, %c3_i64_153 : i64
    llvm.store %290, %arg1 : i64, !llvm.ptr
    cf.br ^bb94
  ^bb97:  // pred: ^bb98
    %c0_i256_155 = arith.constant 0 : i256
    %291 = llvm.load %arg3 : !llvm.ptr -> i64
    %292 = llvm.getelementptr %arg2[%291] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_156 = arith.constant 1 : i64
    %293 = arith.addi %291, %c1_i64_156 : i64
    llvm.store %293, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_155, %292 : i256, !llvm.ptr
    cf.br ^bb103
  ^bb98:  // pred: ^bb100
    %c1024_i64_157 = arith.constant 1024 : i64
    %294 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_158 = arith.constant 1 : i64
    %295 = arith.addi %294, %c1_i64_158 : i64
    %296 = arith.cmpi ult, %c1024_i64_157, %295 : i64
    %c92_i8_159 = arith.constant 92 : i8
    cf.cond_br %296, ^bb1(%c92_i8_159 : i8), ^bb97
  ^bb99:  // pred: ^bb93
    %297 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_160 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %298 = arith.cmpi uge, %297, %c3_i64_160 : i64
    %c80_i8_161 = arith.constant 80 : i8
    cf.cond_br %298, ^bb100, ^bb1(%c80_i8_161 : i8)
  ^bb100:  // pred: ^bb99
    %299 = arith.subi %297, %c3_i64_160 : i64
    llvm.store %299, %arg1 : i64, !llvm.ptr
    cf.br ^bb98
  ^bb101:  // pred: ^bb102
    %c32_i256 = arith.constant 32 : i256
    %300 = llvm.load %arg3 : !llvm.ptr -> i64
    %301 = llvm.getelementptr %arg2[%300] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_162 = arith.constant 1 : i64
    %302 = arith.addi %300, %c1_i64_162 : i64
    llvm.store %302, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256, %301 : i256, !llvm.ptr
    cf.br ^bb107
  ^bb102:  // pred: ^bb104
    %c1024_i64_163 = arith.constant 1024 : i64
    %303 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_164 = arith.constant 1 : i64
    %304 = arith.addi %303, %c1_i64_164 : i64
    %305 = arith.cmpi ult, %c1024_i64_163, %304 : i64
    %c92_i8_165 = arith.constant 92 : i8
    cf.cond_br %305, ^bb1(%c92_i8_165 : i8), ^bb101
  ^bb103:  // pred: ^bb97
    %306 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_166 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %307 = arith.cmpi uge, %306, %c3_i64_166 : i64
    %c80_i8_167 = arith.constant 80 : i8
    cf.cond_br %307, ^bb104, ^bb1(%c80_i8_167 : i8)
  ^bb104:  // pred: ^bb103
    %308 = arith.subi %306, %c3_i64_166 : i64
    llvm.store %308, %arg1 : i64, !llvm.ptr
    cf.br ^bb102
  ^bb105:  // pred: ^bb106
    %c0_i256_168 = arith.constant 0 : i256
    %309 = llvm.load %arg3 : !llvm.ptr -> i64
    %310 = llvm.getelementptr %arg2[%309] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_169 = arith.constant 1 : i64
    %311 = arith.addi %309, %c1_i64_169 : i64
    llvm.store %311, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_168, %310 : i256, !llvm.ptr
    cf.br ^bb111
  ^bb106:  // pred: ^bb108
    %c1024_i64_170 = arith.constant 1024 : i64
    %312 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_171 = arith.constant 1 : i64
    %313 = arith.addi %312, %c1_i64_171 : i64
    %314 = arith.cmpi ult, %c1024_i64_170, %313 : i64
    %c92_i8_172 = arith.constant 92 : i8
    cf.cond_br %314, ^bb1(%c92_i8_172 : i8), ^bb105
  ^bb107:  // pred: ^bb101
    %315 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_173 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %316 = arith.cmpi uge, %315, %c3_i64_173 : i64
    %c80_i8_174 = arith.constant 80 : i8
    cf.cond_br %316, ^bb108, ^bb1(%c80_i8_174 : i8)
  ^bb108:  // pred: ^bb107
    %317 = arith.subi %315, %c3_i64_173 : i64
    llvm.store %317, %arg1 : i64, !llvm.ptr
    cf.br ^bb106
  ^bb109:  // pred: ^bb110
    %c0_i256_175 = arith.constant 0 : i256
    %318 = llvm.load %arg3 : !llvm.ptr -> i64
    %319 = llvm.getelementptr %arg2[%318] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_176 = arith.constant 1 : i64
    %320 = arith.addi %318, %c1_i64_176 : i64
    llvm.store %320, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_175, %319 : i256, !llvm.ptr
    cf.br ^bb115
  ^bb110:  // pred: ^bb112
    %c1024_i64_177 = arith.constant 1024 : i64
    %321 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_178 = arith.constant 1 : i64
    %322 = arith.addi %321, %c1_i64_178 : i64
    %323 = arith.cmpi ult, %c1024_i64_177, %322 : i64
    %c92_i8_179 = arith.constant 92 : i8
    cf.cond_br %323, ^bb1(%c92_i8_179 : i8), ^bb109
  ^bb111:  // pred: ^bb105
    %324 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_180 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %325 = arith.cmpi uge, %324, %c3_i64_180 : i64
    %c80_i8_181 = arith.constant 80 : i8
    cf.cond_br %325, ^bb112, ^bb1(%c80_i8_181 : i8)
  ^bb112:  // pred: ^bb111
    %326 = arith.subi %324, %c3_i64_180 : i64
    llvm.store %326, %arg1 : i64, !llvm.ptr
    cf.br ^bb110
  ^bb113:  // pred: ^bb114
    %327 = llvm.load %arg3 : !llvm.ptr -> i64
    %328 = llvm.getelementptr %arg2[%327] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %329 = llvm.getelementptr %328[-7] : (!llvm.ptr) -> !llvm.ptr, i256
    %330 = llvm.load %329 : !llvm.ptr -> i256
    %331 = llvm.load %arg3 : !llvm.ptr -> i64
    %332 = llvm.getelementptr %arg2[%331] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_182 = arith.constant 1 : i64
    %333 = arith.addi %331, %c1_i64_182 : i64
    llvm.store %333, %arg3 : i64, !llvm.ptr
    llvm.store %330, %332 : i256, !llvm.ptr
    cf.br ^bb119
  ^bb114:  // pred: ^bb116
    %c1024_i64_183 = arith.constant 1024 : i64
    %334 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_184 = arith.constant 1 : i64
    %335 = arith.addi %334, %c1_i64_184 : i64
    %c7_i64_185 = arith.constant 7 : i64
    %336 = arith.cmpi ult, %334, %c7_i64_185 : i64
    %337 = arith.cmpi ult, %c1024_i64_183, %335 : i64
    %338 = arith.xori %336, %337 : i1
    %c92_i8_186 = arith.constant 92 : i8
    cf.cond_br %338, ^bb1(%c92_i8_186 : i8), ^bb113
  ^bb115:  // pred: ^bb109
    %339 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_187 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %340 = arith.cmpi uge, %339, %c3_i64_187 : i64
    %c80_i8_188 = arith.constant 80 : i8
    cf.cond_br %340, ^bb116, ^bb1(%c80_i8_188 : i8)
  ^bb116:  // pred: ^bb115
    %341 = arith.subi %339, %c3_i64_187 : i64
    llvm.store %341, %arg1 : i64, !llvm.ptr
    cf.br ^bb114
  ^bb117:  // pred: ^bb118
    %c65535_i256_189 = arith.constant 65535 : i256
    %342 = llvm.load %arg3 : !llvm.ptr -> i64
    %343 = llvm.getelementptr %arg2[%342] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_190 = arith.constant 1 : i64
    %344 = arith.addi %342, %c1_i64_190 : i64
    llvm.store %344, %arg3 : i64, !llvm.ptr
    llvm.store %c65535_i256_189, %343 : i256, !llvm.ptr
    cf.br ^bb131
  ^bb118:  // pred: ^bb120
    %c1024_i64_191 = arith.constant 1024 : i64
    %345 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_192 = arith.constant 1 : i64
    %346 = arith.addi %345, %c1_i64_192 : i64
    %347 = arith.cmpi ult, %c1024_i64_191, %346 : i64
    %c92_i8_193 = arith.constant 92 : i8
    cf.cond_br %347, ^bb1(%c92_i8_193 : i8), ^bb117
  ^bb119:  // pred: ^bb113
    %348 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_194 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %349 = arith.cmpi uge, %348, %c3_i64_194 : i64
    %c80_i8_195 = arith.constant 80 : i8
    cf.cond_br %349, ^bb120, ^bb1(%c80_i8_195 : i8)
  ^bb120:  // pred: ^bb119
    %350 = arith.subi %348, %c3_i64_194 : i64
    llvm.store %350, %arg1 : i64, !llvm.ptr
    cf.br ^bb118
  ^bb121:  // pred: ^bb130
    %351 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_196 = arith.constant 1 : i64
    %352 = arith.subi %351, %c1_i64_196 : i64
    %353 = llvm.getelementptr %arg2[%352] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %352, %arg3 : i64, !llvm.ptr
    %354 = llvm.load %353 : !llvm.ptr -> i256
    %355 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_197 = arith.constant 1 : i64
    %356 = arith.subi %355, %c1_i64_197 : i64
    %357 = llvm.getelementptr %arg2[%356] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %356, %arg3 : i64, !llvm.ptr
    %358 = llvm.load %357 : !llvm.ptr -> i256
    %359 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_198 = arith.constant 1 : i64
    %360 = arith.subi %359, %c1_i64_198 : i64
    %361 = llvm.getelementptr %arg2[%360] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %360, %arg3 : i64, !llvm.ptr
    %362 = llvm.load %361 : !llvm.ptr -> i256
    %363 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_199 = arith.constant 1 : i64
    %364 = arith.subi %363, %c1_i64_199 : i64
    %365 = llvm.getelementptr %arg2[%364] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %364, %arg3 : i64, !llvm.ptr
    %366 = llvm.load %365 : !llvm.ptr -> i256
    %367 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_200 = arith.constant 1 : i64
    %368 = arith.subi %367, %c1_i64_200 : i64
    %369 = llvm.getelementptr %arg2[%368] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %368, %arg3 : i64, !llvm.ptr
    %370 = llvm.load %369 : !llvm.ptr -> i256
    %371 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_201 = arith.constant 1 : i64
    %372 = arith.subi %371, %c1_i64_201 : i64
    %373 = llvm.getelementptr %arg2[%372] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %372, %arg3 : i64, !llvm.ptr
    %374 = llvm.load %373 : !llvm.ptr -> i256
    %375 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_202 = arith.constant 1 : i64
    %376 = arith.subi %375, %c1_i64_202 : i64
    %377 = llvm.getelementptr %arg2[%376] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %376, %arg3 : i64, !llvm.ptr
    %378 = llvm.load %377 : !llvm.ptr -> i256
    %c18446744073709551615_i256_203 = arith.constant 18446744073709551615 : i256
    %379 = arith.cmpi sgt, %370, %c18446744073709551615_i256_203 : i256
    %c84_i8_204 = arith.constant 84 : i8
    cf.cond_br %379, ^bb1(%c84_i8_204 : i8), ^bb122
  ^bb122:  // pred: ^bb121
    %380 = arith.trunci %370 : i256 to i64
    %c0_i64_205 = arith.constant 0 : i64
    %381 = arith.cmpi slt, %380, %c0_i64_205 : i64
    %c84_i8_206 = arith.constant 84 : i8
    cf.cond_br %381, ^bb1(%c84_i8_206 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %c0_i64_207 = arith.constant 0 : i64
    %382 = arith.cmpi ne, %380, %c0_i64_207 : i64
    cf.cond_br %382, ^bb168, ^bb124
  ^bb124:  // 2 preds: ^bb123, ^bb172
    %c18446744073709551615_i256_208 = arith.constant 18446744073709551615 : i256
    %383 = arith.cmpi sgt, %378, %c18446744073709551615_i256_208 : i256
    %c84_i8_209 = arith.constant 84 : i8
    cf.cond_br %383, ^bb1(%c84_i8_209 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %384 = arith.trunci %378 : i256 to i64
    %c0_i64_210 = arith.constant 0 : i64
    %385 = arith.cmpi slt, %384, %c0_i64_210 : i64
    %c84_i8_211 = arith.constant 84 : i8
    cf.cond_br %385, ^bb1(%c84_i8_211 : i8), ^bb126
  ^bb126:  // pred: ^bb125
    %c0_i64_212 = arith.constant 0 : i64
    %386 = arith.cmpi ne, %384, %c0_i64_212 : i64
    cf.cond_br %386, ^bb176, ^bb127
  ^bb127:  // 2 preds: ^bb126, ^bb180
    %387 = arith.trunci %366 : i256 to i64
    %388 = arith.trunci %374 : i256 to i64
    %389 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_213 = arith.constant 1 : i256
    %390 = llvm.alloca %c1_i256_213 x i256 : (i256) -> !llvm.ptr
    llvm.store %362, %390 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_214 = arith.constant 1 : i256
    %391 = llvm.alloca %c1_i256_214 x i256 : (i256) -> !llvm.ptr
    llvm.store %354, %391 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_215 = arith.constant 1 : i256
    %392 = llvm.alloca %c1_i256_215 x i256 : (i256) -> !llvm.ptr
    llvm.store %358, %392 {alignment = 1 : i64} : i256, !llvm.ptr
    %c3_i8_216 = arith.constant 3 : i8
    %393 = call @dora_fn_call(%arg0, %391, %392, %390, %387, %380, %388, %384, %389, %c3_i8_216) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %394 = llvm.getelementptr %393[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %395 = llvm.load %394 : !llvm.ptr -> i8
    %396 = llvm.getelementptr %393[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %397 = llvm.load %396 : !llvm.ptr -> i8
    %c0_i8_217 = arith.constant 0 : i8
    %398 = arith.cmpi ne, %397, %c0_i8_217 : i8
    cf.cond_br %398, ^bb1(%397 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %399 = llvm.getelementptr %393[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %400 = llvm.load %399 : !llvm.ptr -> i64
    %401 = llvm.load %arg1 : !llvm.ptr -> i64
    %402 = arith.cmpi ult, %401, %400 : i64
    scf.if %402 {
    } else {
      %588 = arith.subi %401, %400 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_218 = arith.constant 80 : i8
    cf.cond_br %402, ^bb1(%c80_i8_218 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    %403 = arith.extui %395 : i8 to i256
    %404 = llvm.load %arg3 : !llvm.ptr -> i64
    %405 = llvm.getelementptr %arg2[%404] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_219 = arith.constant 1 : i64
    %406 = arith.addi %404, %c1_i64_219 : i64
    llvm.store %406, %arg3 : i64, !llvm.ptr
    llvm.store %403, %405 : i256, !llvm.ptr
    cf.br ^bb133
  ^bb130:  // pred: ^bb132
    %c1024_i64_220 = arith.constant 1024 : i64
    %407 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-6_i64_221 = arith.constant -6 : i64
    %408 = arith.addi %407, %c-6_i64_221 : i64
    %c7_i64_222 = arith.constant 7 : i64
    %409 = arith.cmpi ult, %407, %c7_i64_222 : i64
    %c91_i8_223 = arith.constant 91 : i8
    cf.cond_br %409, ^bb1(%c91_i8_223 : i8), ^bb121
  ^bb131:  // pred: ^bb117
    %410 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_224 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %411 = arith.cmpi uge, %410, %c0_i64_224 : i64
    %c80_i8_225 = arith.constant 80 : i8
    cf.cond_br %411, ^bb132, ^bb1(%c80_i8_225 : i8)
  ^bb132:  // pred: ^bb131
    %412 = arith.subi %410, %c0_i64_224 : i64
    llvm.store %412, %arg1 : i64, !llvm.ptr
    cf.br ^bb130
  ^bb133:  // pred: ^bb129
    %c0_i64_226 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %413 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_226, %c0_i64_226, %413, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb134:  // pred: ^bb11
    %c18446744073709551615_i256_227 = arith.constant 18446744073709551615 : i256
    %414 = arith.cmpi sgt, %24, %c18446744073709551615_i256_227 : i256
    %c84_i8_228 = arith.constant 84 : i8
    cf.cond_br %414, ^bb1(%c84_i8_228 : i8), ^bb135
  ^bb135:  // pred: ^bb134
    %415 = arith.trunci %24 : i256 to i64
    %c0_i64_229 = arith.constant 0 : i64
    %416 = arith.cmpi slt, %415, %c0_i64_229 : i64
    %c84_i8_230 = arith.constant 84 : i8
    cf.cond_br %416, ^bb1(%c84_i8_230 : i8), ^bb136
  ^bb136:  // pred: ^bb135
    %417 = arith.addi %415, %c32_i64 : i64
    %c0_i64_231 = arith.constant 0 : i64
    %418 = arith.cmpi slt, %417, %c0_i64_231 : i64
    %c84_i8_232 = arith.constant 84 : i8
    cf.cond_br %418, ^bb1(%c84_i8_232 : i8), ^bb137
  ^bb137:  // pred: ^bb136
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_233 = arith.constant 32 : i64
    %419 = arith.addi %417, %c31_i64 : i64
    %420 = arith.divui %419, %c32_i64_233 : i64
    %c32_i64_234 = arith.constant 32 : i64
    %421 = arith.muli %420, %c32_i64_234 : i64
    %422 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_235 = arith.constant 31 : i64
    %c32_i64_236 = arith.constant 32 : i64
    %423 = arith.addi %422, %c31_i64_235 : i64
    %424 = arith.divui %423, %c32_i64_236 : i64
    %425 = arith.muli %424, %c32_i64_234 : i64
    %426 = arith.cmpi ult, %425, %421 : i64
    cf.cond_br %426, ^bb139, ^bb138
  ^bb138:  // 2 preds: ^bb137, ^bb141
    cf.br ^bb12
  ^bb139:  // pred: ^bb137
    %c3_i64_237 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %427 = arith.muli %424, %424 : i64
    %428 = arith.divui %427, %c512_i64 : i64
    %429 = arith.muli %424, %c3_i64_237 : i64
    %430 = arith.addi %428, %429 : i64
    %c3_i64_238 = arith.constant 3 : i64
    %c512_i64_239 = arith.constant 512 : i64
    %431 = arith.muli %420, %420 : i64
    %432 = arith.divui %431, %c512_i64_239 : i64
    %433 = arith.muli %420, %c3_i64_238 : i64
    %434 = arith.addi %432, %433 : i64
    %435 = arith.subi %434, %430 : i64
    %436 = llvm.load %arg1 : !llvm.ptr -> i64
    %437 = arith.cmpi ult, %436, %435 : i64
    scf.if %437 {
    } else {
      %588 = arith.subi %436, %435 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_240 = arith.constant 80 : i8
    cf.cond_br %437, ^bb1(%c80_i8_240 : i8), ^bb140
  ^bb140:  // pred: ^bb139
    %438 = call @dora_fn_extend_memory(%arg0, %421) : (!llvm.ptr, i64) -> !llvm.ptr
    %439 = llvm.getelementptr %438[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %440 = llvm.load %439 : !llvm.ptr -> i8
    %c0_i8_241 = arith.constant 0 : i8
    %441 = arith.cmpi ne, %440, %c0_i8_241 : i8
    cf.cond_br %441, ^bb1(%440 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    cf.br ^bb138
  ^bb142:  // pred: ^bb31
    %c49152_i64 = arith.constant 49152 : i64
    %442 = arith.cmpi ugt, %82, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %442, ^bb1(%c100_i8 : i8), ^bb143
  ^bb143:  // pred: ^bb142
    %c31_i64_242 = arith.constant 31 : i64
    %c32_i64_243 = arith.constant 32 : i64
    %443 = arith.addi %82, %c31_i64_242 : i64
    %444 = arith.divui %443, %c32_i64_243 : i64
    %c2_i64_244 = arith.constant 2 : i64
    %445 = arith.muli %444, %c2_i64_244 : i64
    %446 = llvm.load %arg1 : !llvm.ptr -> i64
    %447 = arith.cmpi ult, %446, %445 : i64
    scf.if %447 {
    } else {
      %588 = arith.subi %446, %445 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_245 = arith.constant 80 : i8
    cf.cond_br %447, ^bb1(%c80_i8_245 : i8), ^bb144
  ^bb144:  // pred: ^bb143
    %c18446744073709551615_i256_246 = arith.constant 18446744073709551615 : i256
    %448 = arith.cmpi sgt, %74, %c18446744073709551615_i256_246 : i256
    %c84_i8_247 = arith.constant 84 : i8
    cf.cond_br %448, ^bb1(%c84_i8_247 : i8), ^bb145
  ^bb145:  // pred: ^bb144
    %449 = arith.trunci %74 : i256 to i64
    %c0_i64_248 = arith.constant 0 : i64
    %450 = arith.cmpi slt, %449, %c0_i64_248 : i64
    %c84_i8_249 = arith.constant 84 : i8
    cf.cond_br %450, ^bb1(%c84_i8_249 : i8), ^bb146
  ^bb146:  // pred: ^bb145
    %451 = arith.addi %449, %82 : i64
    %c0_i64_250 = arith.constant 0 : i64
    %452 = arith.cmpi slt, %451, %c0_i64_250 : i64
    %c84_i8_251 = arith.constant 84 : i8
    cf.cond_br %452, ^bb1(%c84_i8_251 : i8), ^bb147
  ^bb147:  // pred: ^bb146
    %c31_i64_252 = arith.constant 31 : i64
    %c32_i64_253 = arith.constant 32 : i64
    %453 = arith.addi %451, %c31_i64_252 : i64
    %454 = arith.divui %453, %c32_i64_253 : i64
    %c32_i64_254 = arith.constant 32 : i64
    %455 = arith.muli %454, %c32_i64_254 : i64
    %456 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_255 = arith.constant 31 : i64
    %c32_i64_256 = arith.constant 32 : i64
    %457 = arith.addi %456, %c31_i64_255 : i64
    %458 = arith.divui %457, %c32_i64_256 : i64
    %459 = arith.muli %458, %c32_i64_254 : i64
    %460 = arith.cmpi ult, %459, %455 : i64
    cf.cond_br %460, ^bb149, ^bb148
  ^bb148:  // 2 preds: ^bb147, ^bb151
    cf.br ^bb32
  ^bb149:  // pred: ^bb147
    %c3_i64_257 = arith.constant 3 : i64
    %c512_i64_258 = arith.constant 512 : i64
    %461 = arith.muli %458, %458 : i64
    %462 = arith.divui %461, %c512_i64_258 : i64
    %463 = arith.muli %458, %c3_i64_257 : i64
    %464 = arith.addi %462, %463 : i64
    %c3_i64_259 = arith.constant 3 : i64
    %c512_i64_260 = arith.constant 512 : i64
    %465 = arith.muli %454, %454 : i64
    %466 = arith.divui %465, %c512_i64_260 : i64
    %467 = arith.muli %454, %c3_i64_259 : i64
    %468 = arith.addi %466, %467 : i64
    %469 = arith.subi %468, %464 : i64
    %470 = llvm.load %arg1 : !llvm.ptr -> i64
    %471 = arith.cmpi ult, %470, %469 : i64
    scf.if %471 {
    } else {
      %588 = arith.subi %470, %469 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_261 = arith.constant 80 : i8
    cf.cond_br %471, ^bb1(%c80_i8_261 : i8), ^bb150
  ^bb150:  // pred: ^bb149
    %472 = call @dora_fn_extend_memory(%arg0, %455) : (!llvm.ptr, i64) -> !llvm.ptr
    %473 = llvm.getelementptr %472[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %474 = llvm.load %473 : !llvm.ptr -> i8
    %c0_i8_262 = arith.constant 0 : i8
    %475 = arith.cmpi ne, %474, %c0_i8_262 : i8
    cf.cond_br %475, ^bb1(%474 : i8), ^bb151
  ^bb151:  // pred: ^bb150
    cf.br ^bb148
  ^bb152:  // pred: ^bb69
    %c18446744073709551615_i256_263 = arith.constant 18446744073709551615 : i256
    %476 = arith.cmpi sgt, %192, %c18446744073709551615_i256_263 : i256
    %c84_i8_264 = arith.constant 84 : i8
    cf.cond_br %476, ^bb1(%c84_i8_264 : i8), ^bb153
  ^bb153:  // pred: ^bb152
    %477 = arith.trunci %192 : i256 to i64
    %c0_i64_265 = arith.constant 0 : i64
    %478 = arith.cmpi slt, %477, %c0_i64_265 : i64
    %c84_i8_266 = arith.constant 84 : i8
    cf.cond_br %478, ^bb1(%c84_i8_266 : i8), ^bb154
  ^bb154:  // pred: ^bb153
    %479 = arith.addi %477, %206 : i64
    %c0_i64_267 = arith.constant 0 : i64
    %480 = arith.cmpi slt, %479, %c0_i64_267 : i64
    %c84_i8_268 = arith.constant 84 : i8
    cf.cond_br %480, ^bb1(%c84_i8_268 : i8), ^bb155
  ^bb155:  // pred: ^bb154
    %c31_i64_269 = arith.constant 31 : i64
    %c32_i64_270 = arith.constant 32 : i64
    %481 = arith.addi %479, %c31_i64_269 : i64
    %482 = arith.divui %481, %c32_i64_270 : i64
    %c32_i64_271 = arith.constant 32 : i64
    %483 = arith.muli %482, %c32_i64_271 : i64
    %484 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_272 = arith.constant 31 : i64
    %c32_i64_273 = arith.constant 32 : i64
    %485 = arith.addi %484, %c31_i64_272 : i64
    %486 = arith.divui %485, %c32_i64_273 : i64
    %487 = arith.muli %486, %c32_i64_271 : i64
    %488 = arith.cmpi ult, %487, %483 : i64
    cf.cond_br %488, ^bb157, ^bb156
  ^bb156:  // 2 preds: ^bb155, ^bb159
    cf.br ^bb70
  ^bb157:  // pred: ^bb155
    %c3_i64_274 = arith.constant 3 : i64
    %c512_i64_275 = arith.constant 512 : i64
    %489 = arith.muli %486, %486 : i64
    %490 = arith.divui %489, %c512_i64_275 : i64
    %491 = arith.muli %486, %c3_i64_274 : i64
    %492 = arith.addi %490, %491 : i64
    %c3_i64_276 = arith.constant 3 : i64
    %c512_i64_277 = arith.constant 512 : i64
    %493 = arith.muli %482, %482 : i64
    %494 = arith.divui %493, %c512_i64_277 : i64
    %495 = arith.muli %482, %c3_i64_276 : i64
    %496 = arith.addi %494, %495 : i64
    %497 = arith.subi %496, %492 : i64
    %498 = llvm.load %arg1 : !llvm.ptr -> i64
    %499 = arith.cmpi ult, %498, %497 : i64
    scf.if %499 {
    } else {
      %588 = arith.subi %498, %497 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_278 = arith.constant 80 : i8
    cf.cond_br %499, ^bb1(%c80_i8_278 : i8), ^bb158
  ^bb158:  // pred: ^bb157
    %500 = call @dora_fn_extend_memory(%arg0, %483) : (!llvm.ptr, i64) -> !llvm.ptr
    %501 = llvm.getelementptr %500[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %502 = llvm.load %501 : !llvm.ptr -> i8
    %c0_i8_279 = arith.constant 0 : i8
    %503 = arith.cmpi ne, %502, %c0_i8_279 : i8
    cf.cond_br %503, ^bb1(%502 : i8), ^bb159
  ^bb159:  // pred: ^bb158
    cf.br ^bb156
  ^bb160:  // pred: ^bb72
    %c18446744073709551615_i256_280 = arith.constant 18446744073709551615 : i256
    %504 = arith.cmpi sgt, %200, %c18446744073709551615_i256_280 : i256
    %c84_i8_281 = arith.constant 84 : i8
    cf.cond_br %504, ^bb1(%c84_i8_281 : i8), ^bb161
  ^bb161:  // pred: ^bb160
    %505 = arith.trunci %200 : i256 to i64
    %c0_i64_282 = arith.constant 0 : i64
    %506 = arith.cmpi slt, %505, %c0_i64_282 : i64
    %c84_i8_283 = arith.constant 84 : i8
    cf.cond_br %506, ^bb1(%c84_i8_283 : i8), ^bb162
  ^bb162:  // pred: ^bb161
    %507 = arith.addi %505, %210 : i64
    %c0_i64_284 = arith.constant 0 : i64
    %508 = arith.cmpi slt, %507, %c0_i64_284 : i64
    %c84_i8_285 = arith.constant 84 : i8
    cf.cond_br %508, ^bb1(%c84_i8_285 : i8), ^bb163
  ^bb163:  // pred: ^bb162
    %c31_i64_286 = arith.constant 31 : i64
    %c32_i64_287 = arith.constant 32 : i64
    %509 = arith.addi %507, %c31_i64_286 : i64
    %510 = arith.divui %509, %c32_i64_287 : i64
    %c32_i64_288 = arith.constant 32 : i64
    %511 = arith.muli %510, %c32_i64_288 : i64
    %512 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_289 = arith.constant 31 : i64
    %c32_i64_290 = arith.constant 32 : i64
    %513 = arith.addi %512, %c31_i64_289 : i64
    %514 = arith.divui %513, %c32_i64_290 : i64
    %515 = arith.muli %514, %c32_i64_288 : i64
    %516 = arith.cmpi ult, %515, %511 : i64
    cf.cond_br %516, ^bb165, ^bb164
  ^bb164:  // 2 preds: ^bb163, ^bb167
    cf.br ^bb73
  ^bb165:  // pred: ^bb163
    %c3_i64_291 = arith.constant 3 : i64
    %c512_i64_292 = arith.constant 512 : i64
    %517 = arith.muli %514, %514 : i64
    %518 = arith.divui %517, %c512_i64_292 : i64
    %519 = arith.muli %514, %c3_i64_291 : i64
    %520 = arith.addi %518, %519 : i64
    %c3_i64_293 = arith.constant 3 : i64
    %c512_i64_294 = arith.constant 512 : i64
    %521 = arith.muli %510, %510 : i64
    %522 = arith.divui %521, %c512_i64_294 : i64
    %523 = arith.muli %510, %c3_i64_293 : i64
    %524 = arith.addi %522, %523 : i64
    %525 = arith.subi %524, %520 : i64
    %526 = llvm.load %arg1 : !llvm.ptr -> i64
    %527 = arith.cmpi ult, %526, %525 : i64
    scf.if %527 {
    } else {
      %588 = arith.subi %526, %525 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_295 = arith.constant 80 : i8
    cf.cond_br %527, ^bb1(%c80_i8_295 : i8), ^bb166
  ^bb166:  // pred: ^bb165
    %528 = call @dora_fn_extend_memory(%arg0, %511) : (!llvm.ptr, i64) -> !llvm.ptr
    %529 = llvm.getelementptr %528[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %530 = llvm.load %529 : !llvm.ptr -> i8
    %c0_i8_296 = arith.constant 0 : i8
    %531 = arith.cmpi ne, %530, %c0_i8_296 : i8
    cf.cond_br %531, ^bb1(%530 : i8), ^bb167
  ^bb167:  // pred: ^bb166
    cf.br ^bb164
  ^bb168:  // pred: ^bb123
    %c18446744073709551615_i256_297 = arith.constant 18446744073709551615 : i256
    %532 = arith.cmpi sgt, %366, %c18446744073709551615_i256_297 : i256
    %c84_i8_298 = arith.constant 84 : i8
    cf.cond_br %532, ^bb1(%c84_i8_298 : i8), ^bb169
  ^bb169:  // pred: ^bb168
    %533 = arith.trunci %366 : i256 to i64
    %c0_i64_299 = arith.constant 0 : i64
    %534 = arith.cmpi slt, %533, %c0_i64_299 : i64
    %c84_i8_300 = arith.constant 84 : i8
    cf.cond_br %534, ^bb1(%c84_i8_300 : i8), ^bb170
  ^bb170:  // pred: ^bb169
    %535 = arith.addi %533, %380 : i64
    %c0_i64_301 = arith.constant 0 : i64
    %536 = arith.cmpi slt, %535, %c0_i64_301 : i64
    %c84_i8_302 = arith.constant 84 : i8
    cf.cond_br %536, ^bb1(%c84_i8_302 : i8), ^bb171
  ^bb171:  // pred: ^bb170
    %c31_i64_303 = arith.constant 31 : i64
    %c32_i64_304 = arith.constant 32 : i64
    %537 = arith.addi %535, %c31_i64_303 : i64
    %538 = arith.divui %537, %c32_i64_304 : i64
    %c32_i64_305 = arith.constant 32 : i64
    %539 = arith.muli %538, %c32_i64_305 : i64
    %540 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_306 = arith.constant 31 : i64
    %c32_i64_307 = arith.constant 32 : i64
    %541 = arith.addi %540, %c31_i64_306 : i64
    %542 = arith.divui %541, %c32_i64_307 : i64
    %543 = arith.muli %542, %c32_i64_305 : i64
    %544 = arith.cmpi ult, %543, %539 : i64
    cf.cond_br %544, ^bb173, ^bb172
  ^bb172:  // 2 preds: ^bb171, ^bb175
    cf.br ^bb124
  ^bb173:  // pred: ^bb171
    %c3_i64_308 = arith.constant 3 : i64
    %c512_i64_309 = arith.constant 512 : i64
    %545 = arith.muli %542, %542 : i64
    %546 = arith.divui %545, %c512_i64_309 : i64
    %547 = arith.muli %542, %c3_i64_308 : i64
    %548 = arith.addi %546, %547 : i64
    %c3_i64_310 = arith.constant 3 : i64
    %c512_i64_311 = arith.constant 512 : i64
    %549 = arith.muli %538, %538 : i64
    %550 = arith.divui %549, %c512_i64_311 : i64
    %551 = arith.muli %538, %c3_i64_310 : i64
    %552 = arith.addi %550, %551 : i64
    %553 = arith.subi %552, %548 : i64
    %554 = llvm.load %arg1 : !llvm.ptr -> i64
    %555 = arith.cmpi ult, %554, %553 : i64
    scf.if %555 {
    } else {
      %588 = arith.subi %554, %553 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_312 = arith.constant 80 : i8
    cf.cond_br %555, ^bb1(%c80_i8_312 : i8), ^bb174
  ^bb174:  // pred: ^bb173
    %556 = call @dora_fn_extend_memory(%arg0, %539) : (!llvm.ptr, i64) -> !llvm.ptr
    %557 = llvm.getelementptr %556[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %558 = llvm.load %557 : !llvm.ptr -> i8
    %c0_i8_313 = arith.constant 0 : i8
    %559 = arith.cmpi ne, %558, %c0_i8_313 : i8
    cf.cond_br %559, ^bb1(%558 : i8), ^bb175
  ^bb175:  // pred: ^bb174
    cf.br ^bb172
  ^bb176:  // pred: ^bb126
    %c18446744073709551615_i256_314 = arith.constant 18446744073709551615 : i256
    %560 = arith.cmpi sgt, %374, %c18446744073709551615_i256_314 : i256
    %c84_i8_315 = arith.constant 84 : i8
    cf.cond_br %560, ^bb1(%c84_i8_315 : i8), ^bb177
  ^bb177:  // pred: ^bb176
    %561 = arith.trunci %374 : i256 to i64
    %c0_i64_316 = arith.constant 0 : i64
    %562 = arith.cmpi slt, %561, %c0_i64_316 : i64
    %c84_i8_317 = arith.constant 84 : i8
    cf.cond_br %562, ^bb1(%c84_i8_317 : i8), ^bb178
  ^bb178:  // pred: ^bb177
    %563 = arith.addi %561, %384 : i64
    %c0_i64_318 = arith.constant 0 : i64
    %564 = arith.cmpi slt, %563, %c0_i64_318 : i64
    %c84_i8_319 = arith.constant 84 : i8
    cf.cond_br %564, ^bb1(%c84_i8_319 : i8), ^bb179
  ^bb179:  // pred: ^bb178
    %c31_i64_320 = arith.constant 31 : i64
    %c32_i64_321 = arith.constant 32 : i64
    %565 = arith.addi %563, %c31_i64_320 : i64
    %566 = arith.divui %565, %c32_i64_321 : i64
    %c32_i64_322 = arith.constant 32 : i64
    %567 = arith.muli %566, %c32_i64_322 : i64
    %568 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_323 = arith.constant 31 : i64
    %c32_i64_324 = arith.constant 32 : i64
    %569 = arith.addi %568, %c31_i64_323 : i64
    %570 = arith.divui %569, %c32_i64_324 : i64
    %571 = arith.muli %570, %c32_i64_322 : i64
    %572 = arith.cmpi ult, %571, %567 : i64
    cf.cond_br %572, ^bb181, ^bb180
  ^bb180:  // 2 preds: ^bb179, ^bb183
    cf.br ^bb127
  ^bb181:  // pred: ^bb179
    %c3_i64_325 = arith.constant 3 : i64
    %c512_i64_326 = arith.constant 512 : i64
    %573 = arith.muli %570, %570 : i64
    %574 = arith.divui %573, %c512_i64_326 : i64
    %575 = arith.muli %570, %c3_i64_325 : i64
    %576 = arith.addi %574, %575 : i64
    %c3_i64_327 = arith.constant 3 : i64
    %c512_i64_328 = arith.constant 512 : i64
    %577 = arith.muli %566, %566 : i64
    %578 = arith.divui %577, %c512_i64_328 : i64
    %579 = arith.muli %566, %c3_i64_327 : i64
    %580 = arith.addi %578, %579 : i64
    %581 = arith.subi %580, %576 : i64
    %582 = llvm.load %arg1 : !llvm.ptr -> i64
    %583 = arith.cmpi ult, %582, %581 : i64
    scf.if %583 {
    } else {
      %588 = arith.subi %582, %581 : i64
      llvm.store %588, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_329 = arith.constant 80 : i8
    cf.cond_br %583, ^bb1(%c80_i8_329 : i8), ^bb182
  ^bb182:  // pred: ^bb181
    %584 = call @dora_fn_extend_memory(%arg0, %567) : (!llvm.ptr, i64) -> !llvm.ptr
    %585 = llvm.getelementptr %584[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %586 = llvm.load %585 : !llvm.ptr -> i8
    %c0_i8_330 = arith.constant 0 : i8
    %587 = arith.cmpi ne, %586, %c0_i8_330 : i8
    cf.cond_br %587, ^bb1(%586 : i8), ^bb183
  ^bb183:  // pred: ^bb182
    cf.br ^bb180
  }
}
