---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 73 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36, ^bb37, ^bb38, ^bb39, ^bb40, ^bb41, ^bb42, ^bb43, ^bb44, ^bb45, ^bb46, ^bb47, ^bb48, ^bb49, ^bb50, ^bb51, ^bb52, ^bb53, ^bb54, ^bb55, ^bb56, ^bb57, ^bb58, ^bb59, ^bb60, ^bb61, ^bb62, ^bb63, ^bb64, ^bb65, ^bb66, ^bb67, ^bb68, ^bb69, ^bb70, ^bb71, ^bb72, ^bb73
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c0_i64_4 = arith.constant 0 : i64
    %37 = arith.cmpi slt, %36, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %37, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c32_i64 = arith.constant 32 : i64
    %38 = arith.addi %36, %c32_i64 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %39 = arith.cmpi slt, %38, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %39, ^bb1(%c84_i8_6 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_7 = arith.constant 32 : i64
    %40 = arith.addi %38, %c31_i64 : i64
    %41 = arith.divui %40, %c32_i64_7 : i64
    %42 = arith.muli %41, %c32_i64_7 : i64
    %43 = call @dora_fn_extend_memory(%arg0, %42) : (!llvm.ptr, i64) -> !llvm.ptr
    %44 = llvm.getelementptr %43[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %43[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %48 = arith.cmpi ne, %47, %c0_i8 : i8
    cf.cond_br %48, ^bb1(%47 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %49 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %45, %49 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %42, %50 : i64, !llvm.ptr
    %51 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %54, %53 {alignment = 1 : i64} : i256, !llvm.ptr
    %55 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_8 : i64
    llvm.store %56, %9 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64, %56 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    %61 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_10 : i64
    llvm.store %62, %9 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64, %62 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_11 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c32_i256 = arith.constant 32 : i256
    %64 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %65 : i256, !llvm.ptr
    %66 = llvm.getelementptr %65[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %66, %64 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_12 = arith.constant -2 : i64
    %68 = arith.addi %67, %c-2_i64_12 : i64
    llvm.store %68, %9 : i64, !llvm.ptr
    %c2_i64_13 = arith.constant 2 : i64
    %69 = arith.cmpi ult, %67, %c2_i64_13 : i64
    %c91_i8_14 = arith.constant 91 : i8
    cf.cond_br %69, ^bb1(%c91_i8_14 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    %72 = llvm.getelementptr %71[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %73 = llvm.load %72 : !llvm.ptr -> i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    %74 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> !llvm.ptr
    %76 = llvm.getelementptr %75[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %77 = llvm.load %76 : !llvm.ptr -> i256
    llvm.store %76, %74 : !llvm.ptr, !llvm.ptr
    %78 = arith.trunci %73 : i256 to i64
    %c0_i64_15 = arith.constant 0 : i64
    %79 = arith.cmpi slt, %78, %c0_i64_15 : i64
    %c84_i8_16 = arith.constant 84 : i8
    cf.cond_br %79, ^bb1(%c84_i8_16 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64_17 = arith.constant 32 : i64
    %80 = arith.addi %78, %c32_i64_17 : i64
    %c0_i64_18 = arith.constant 0 : i64
    %81 = arith.cmpi slt, %80, %c0_i64_18 : i64
    %c84_i8_19 = arith.constant 84 : i8
    cf.cond_br %81, ^bb1(%c84_i8_19 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64_20 = arith.constant 31 : i64
    %c32_i64_21 = arith.constant 32 : i64
    %82 = arith.addi %80, %c31_i64_20 : i64
    %83 = arith.divui %82, %c32_i64_21 : i64
    %84 = arith.muli %83, %c32_i64_21 : i64
    %85 = call @dora_fn_extend_memory(%arg0, %84) : (!llvm.ptr, i64) -> !llvm.ptr
    %86 = llvm.getelementptr %85[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %87 = llvm.load %86 : !llvm.ptr -> !llvm.ptr
    %88 = llvm.getelementptr %85[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %89 = llvm.load %88 : !llvm.ptr -> i8
    %c0_i8_22 = arith.constant 0 : i8
    %90 = arith.cmpi ne, %89, %c0_i8_22 : i8
    cf.cond_br %90, ^bb1(%89 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %91 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %87, %91 : !llvm.ptr, !llvm.ptr
    %92 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %84, %92 : i64, !llvm.ptr
    %93 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %94 = llvm.load %93 : !llvm.ptr -> !llvm.ptr
    %95 = llvm.getelementptr %94[%78] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %96 = llvm.intr.bswap(%77)  : (i256) -> i256
    llvm.store %96, %95 {alignment = 1 : i64} : i256, !llvm.ptr
    %97 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %98 = arith.addi %97, %c1_i64_23 : i64
    llvm.store %98, %9 : i64, !llvm.ptr
    %99 = arith.cmpi ult, %c1024_i64, %98 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %99, ^bb1(%c92_i8_24 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %101 : i256, !llvm.ptr
    %102 = llvm.getelementptr %101[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    %103 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %104 = arith.addi %103, %c1_i64_25 : i64
    llvm.store %104, %9 : i64, !llvm.ptr
    %105 = arith.cmpi ult, %c1024_i64, %104 : i64
    %c92_i8_26 = arith.constant 92 : i8
    cf.cond_br %105, ^bb1(%c92_i8_26 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c64_i256 = arith.constant 64 : i256
    %106 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %107 : i256, !llvm.ptr
    %108 = llvm.getelementptr %107[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %108, %106 : !llvm.ptr, !llvm.ptr
    %109 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_27 = arith.constant -2 : i64
    %110 = arith.addi %109, %c-2_i64_27 : i64
    llvm.store %110, %9 : i64, !llvm.ptr
    %c2_i64_28 = arith.constant 2 : i64
    %111 = arith.cmpi ult, %109, %c2_i64_28 : i64
    %c91_i8_29 = arith.constant 91 : i8
    cf.cond_br %111, ^bb1(%c91_i8_29 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %112 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> !llvm.ptr
    %114 = llvm.getelementptr %113[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %115 = llvm.load %114 : !llvm.ptr -> i256
    llvm.store %114, %112 : !llvm.ptr, !llvm.ptr
    %116 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %117 = llvm.load %116 : !llvm.ptr -> !llvm.ptr
    %118 = llvm.getelementptr %117[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %119 = llvm.load %118 : !llvm.ptr -> i256
    llvm.store %118, %116 : !llvm.ptr, !llvm.ptr
    %120 = arith.trunci %115 : i256 to i64
    %c0_i64_30 = arith.constant 0 : i64
    %121 = arith.cmpi slt, %120, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %121, ^bb1(%c84_i8_31 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %c32_i64_32 = arith.constant 32 : i64
    %122 = arith.addi %120, %c32_i64_32 : i64
    %c0_i64_33 = arith.constant 0 : i64
    %123 = arith.cmpi slt, %122, %c0_i64_33 : i64
    %c84_i8_34 = arith.constant 84 : i8
    cf.cond_br %123, ^bb1(%c84_i8_34 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c31_i64_35 = arith.constant 31 : i64
    %c32_i64_36 = arith.constant 32 : i64
    %124 = arith.addi %122, %c31_i64_35 : i64
    %125 = arith.divui %124, %c32_i64_36 : i64
    %126 = arith.muli %125, %c32_i64_36 : i64
    %127 = call @dora_fn_extend_memory(%arg0, %126) : (!llvm.ptr, i64) -> !llvm.ptr
    %128 = llvm.getelementptr %127[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %129 = llvm.load %128 : !llvm.ptr -> !llvm.ptr
    %130 = llvm.getelementptr %127[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %131 = llvm.load %130 : !llvm.ptr -> i8
    %c0_i8_37 = arith.constant 0 : i8
    %132 = arith.cmpi ne, %131, %c0_i8_37 : i8
    cf.cond_br %132, ^bb1(%131 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %133 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %129, %133 : !llvm.ptr, !llvm.ptr
    %134 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %126, %134 : i64, !llvm.ptr
    %135 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> !llvm.ptr
    %137 = llvm.getelementptr %136[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %138 = llvm.intr.bswap(%119)  : (i256) -> i256
    llvm.store %138, %137 {alignment = 1 : i64} : i256, !llvm.ptr
    %139 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_38 = arith.constant 1 : i64
    %140 = arith.addi %139, %c1_i64_38 : i64
    llvm.store %140, %9 : i64, !llvm.ptr
    %141 = arith.cmpi ult, %c1024_i64, %140 : i64
    %c92_i8_39 = arith.constant 92 : i8
    cf.cond_br %141, ^bb1(%c92_i8_39 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %c77_i256 = arith.constant 77 : i256
    %142 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %143 : i256, !llvm.ptr
    %144 = llvm.getelementptr %143[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %144, %142 : !llvm.ptr, !llvm.ptr
    %145 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %146 = arith.addi %145, %c1_i64_40 : i64
    llvm.store %146, %9 : i64, !llvm.ptr
    %147 = arith.cmpi ult, %c1024_i64, %146 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %147, ^bb1(%c92_i8_41 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_42 = arith.constant 0 : i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_42, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    %151 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %152 = arith.addi %151, %c1_i64_43 : i64
    llvm.store %152, %9 : i64, !llvm.ptr
    %153 = arith.cmpi ult, %c1024_i64, %152 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %153, ^bb1(%c92_i8_44 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i256_45 = arith.constant 0 : i256
    %154 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_45, %155 : i256, !llvm.ptr
    %156 = llvm.getelementptr %155[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %156, %154 : !llvm.ptr, !llvm.ptr
    %157 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_46 = arith.constant -2 : i64
    %158 = arith.addi %157, %c-2_i64_46 : i64
    llvm.store %158, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %159 = arith.cmpi ult, %157, %c3_i64 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %159, ^bb1(%c91_i8_47 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %160 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    %162 = llvm.getelementptr %161[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %163 = llvm.load %162 : !llvm.ptr -> i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    %164 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %165 = llvm.load %164 : !llvm.ptr -> !llvm.ptr
    %166 = llvm.getelementptr %165[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %167 = llvm.load %166 : !llvm.ptr -> i256
    llvm.store %166, %164 : !llvm.ptr, !llvm.ptr
    %168 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> !llvm.ptr
    %170 = llvm.getelementptr %169[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %171 = llvm.load %170 : !llvm.ptr -> i256
    llvm.store %170, %168 : !llvm.ptr, !llvm.ptr
    %172 = arith.trunci %167 : i256 to i64
    %c0_i64_48 = arith.constant 0 : i64
    %173 = arith.cmpi slt, %172, %c0_i64_48 : i64
    %c84_i8_49 = arith.constant 84 : i8
    cf.cond_br %173, ^bb1(%c84_i8_49 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %174 = arith.trunci %171 : i256 to i64
    %c0_i64_50 = arith.constant 0 : i64
    %175 = arith.cmpi slt, %174, %c0_i64_50 : i64
    %c84_i8_51 = arith.constant 84 : i8
    cf.cond_br %175, ^bb1(%c84_i8_51 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %176 = arith.addi %172, %174 : i64
    %c0_i64_52 = arith.constant 0 : i64
    %177 = arith.cmpi slt, %176, %c0_i64_52 : i64
    %c84_i8_53 = arith.constant 84 : i8
    cf.cond_br %177, ^bb1(%c84_i8_53 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %c31_i64_54 = arith.constant 31 : i64
    %c32_i64_55 = arith.constant 32 : i64
    %178 = arith.addi %176, %c31_i64_54 : i64
    %179 = arith.divui %178, %c32_i64_55 : i64
    %180 = arith.muli %179, %c32_i64_55 : i64
    %181 = call @dora_fn_extend_memory(%arg0, %180) : (!llvm.ptr, i64) -> !llvm.ptr
    %182 = llvm.getelementptr %181[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %183 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    %184 = llvm.getelementptr %181[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %185 = llvm.load %184 : !llvm.ptr -> i8
    %c0_i8_56 = arith.constant 0 : i8
    %186 = arith.cmpi ne, %185, %c0_i8_56 : i8
    cf.cond_br %186, ^bb1(%185 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %187 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %183, %187 : !llvm.ptr, !llvm.ptr
    %188 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %180, %188 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %189 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %163, %189 {alignment = 1 : i64} : i256, !llvm.ptr
    %190 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %191 = llvm.load %190 : !llvm.ptr -> i64
    %c1_i64_57 = arith.constant 1 : i64
    %192 = llvm.alloca %c1_i64_57 x i64 : (i64) -> !llvm.ptr
    llvm.store %191, %192 {alignment = 1 : i64} : i64, !llvm.ptr
    %193 = call @dora_fn_create(%arg0, %174, %172, %189, %192) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %194 = llvm.getelementptr %193[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %195 = llvm.load %194 : !llvm.ptr -> i8
    %196 = llvm.getelementptr %193[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %197 = llvm.load %196 : !llvm.ptr -> i8
    %c0_i8_58 = arith.constant 0 : i8
    %198 = arith.cmpi ne, %197, %c0_i8_58 : i8
    cf.cond_br %198, ^bb1(%197 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c0_i8_59 = arith.constant 0 : i8
    %199 = arith.cmpi ne, %c0_i8_59, %195 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %199, ^bb1(%c94_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %200 = llvm.load %189 : !llvm.ptr -> i256
    %201 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %202 = llvm.load %201 : !llvm.ptr -> !llvm.ptr
    llvm.store %200, %202 : i256, !llvm.ptr
    %203 = llvm.getelementptr %202[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %203, %201 : !llvm.ptr, !llvm.ptr
    %204 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_60 = arith.constant 1 : i64
    %205 = arith.addi %204, %c1_i64_60 : i64
    llvm.store %205, %9 : i64, !llvm.ptr
    %206 = arith.cmpi ult, %c1024_i64, %205 : i64
    %c92_i8_61 = arith.constant 92 : i8
    cf.cond_br %206, ^bb1(%c92_i8_61 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i256_62 = arith.constant 0 : i256
    %207 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %208 = llvm.load %207 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_62, %208 : i256, !llvm.ptr
    %209 = llvm.getelementptr %208[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %209, %207 : !llvm.ptr, !llvm.ptr
    %210 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_63 = arith.constant 1 : i64
    %211 = arith.addi %210, %c1_i64_63 : i64
    llvm.store %211, %9 : i64, !llvm.ptr
    %212 = arith.cmpi ult, %c1024_i64, %211 : i64
    %c92_i8_64 = arith.constant 92 : i8
    cf.cond_br %212, ^bb1(%c92_i8_64 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i256_65 = arith.constant 0 : i256
    %213 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %214 = llvm.load %213 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_65, %214 : i256, !llvm.ptr
    %215 = llvm.getelementptr %214[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %215, %213 : !llvm.ptr, !llvm.ptr
    %216 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_66 = arith.constant 1 : i64
    %217 = arith.addi %216, %c1_i64_66 : i64
    llvm.store %217, %9 : i64, !llvm.ptr
    %218 = arith.cmpi ult, %c1024_i64, %217 : i64
    %c92_i8_67 = arith.constant 92 : i8
    cf.cond_br %218, ^bb1(%c92_i8_67 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c0_i256_68 = arith.constant 0 : i256
    %219 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %220 = llvm.load %219 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_68, %220 : i256, !llvm.ptr
    %221 = llvm.getelementptr %220[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %221, %219 : !llvm.ptr, !llvm.ptr
    %222 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_69 = arith.constant 1 : i64
    %223 = arith.addi %222, %c1_i64_69 : i64
    llvm.store %223, %9 : i64, !llvm.ptr
    %224 = arith.cmpi ult, %c1024_i64, %223 : i64
    %c92_i8_70 = arith.constant 92 : i8
    cf.cond_br %224, ^bb1(%c92_i8_70 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c0_i256_71 = arith.constant 0 : i256
    %225 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %226 = llvm.load %225 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_71, %226 : i256, !llvm.ptr
    %227 = llvm.getelementptr %226[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %227, %225 : !llvm.ptr, !llvm.ptr
    %228 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_72 = arith.constant 1 : i64
    %229 = arith.addi %228, %c1_i64_72 : i64
    llvm.store %229, %9 : i64, !llvm.ptr
    %230 = arith.cmpi ult, %c1024_i64, %229 : i64
    %c92_i8_73 = arith.constant 92 : i8
    cf.cond_br %230, ^bb1(%c92_i8_73 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %231 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %232 = llvm.load %231 : !llvm.ptr -> !llvm.ptr
    %233 = llvm.getelementptr %232[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %234 = llvm.load %233 : !llvm.ptr -> i256
    %235 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %236 = llvm.load %235 : !llvm.ptr -> !llvm.ptr
    llvm.store %234, %236 : i256, !llvm.ptr
    %237 = llvm.getelementptr %236[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %237, %235 : !llvm.ptr, !llvm.ptr
    %238 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_74 = arith.constant 1 : i64
    %239 = arith.addi %238, %c1_i64_74 : i64
    llvm.store %239, %9 : i64, !llvm.ptr
    %240 = arith.cmpi ult, %c1024_i64, %239 : i64
    %c92_i8_75 = arith.constant 92 : i8
    cf.cond_br %240, ^bb1(%c92_i8_75 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %241 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %242 = llvm.load %241 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %242 : i256, !llvm.ptr
    %243 = llvm.getelementptr %242[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %243, %241 : !llvm.ptr, !llvm.ptr
    %244 = llvm.load %9 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %245 = arith.addi %244, %c-5_i64 : i64
    llvm.store %245, %9 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %246 = arith.cmpi ult, %244, %c6_i64 : i64
    %c91_i8_76 = arith.constant 91 : i8
    cf.cond_br %246, ^bb1(%c91_i8_76 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %247 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %248 = llvm.load %247 : !llvm.ptr -> !llvm.ptr
    %249 = llvm.getelementptr %248[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %250 = llvm.load %249 : !llvm.ptr -> i256
    llvm.store %249, %247 : !llvm.ptr, !llvm.ptr
    %251 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %252 = llvm.load %251 : !llvm.ptr -> !llvm.ptr
    %253 = llvm.getelementptr %252[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %254 = llvm.load %253 : !llvm.ptr -> i256
    llvm.store %253, %251 : !llvm.ptr, !llvm.ptr
    %255 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %256 = llvm.load %255 : !llvm.ptr -> !llvm.ptr
    %257 = llvm.getelementptr %256[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %258 = llvm.load %257 : !llvm.ptr -> i256
    llvm.store %257, %255 : !llvm.ptr, !llvm.ptr
    %259 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %260 = llvm.load %259 : !llvm.ptr -> !llvm.ptr
    %261 = llvm.getelementptr %260[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %262 = llvm.load %261 : !llvm.ptr -> i256
    llvm.store %261, %259 : !llvm.ptr, !llvm.ptr
    %263 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %264 = llvm.load %263 : !llvm.ptr -> !llvm.ptr
    %265 = llvm.getelementptr %264[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %266 = llvm.load %265 : !llvm.ptr -> i256
    llvm.store %265, %263 : !llvm.ptr, !llvm.ptr
    %267 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %268 = llvm.load %267 : !llvm.ptr -> !llvm.ptr
    %269 = llvm.getelementptr %268[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %270 = llvm.load %269 : !llvm.ptr -> i256
    llvm.store %269, %267 : !llvm.ptr, !llvm.ptr
    %c0_i256_77 = arith.constant 0 : i256
    %271 = arith.trunci %250 : i256 to i64
    %272 = arith.trunci %258 : i256 to i64
    %c0_i64_78 = arith.constant 0 : i64
    %273 = arith.cmpi slt, %272, %c0_i64_78 : i64
    %c84_i8_79 = arith.constant 84 : i8
    cf.cond_br %273, ^bb1(%c84_i8_79 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %274 = arith.trunci %262 : i256 to i64
    %c0_i64_80 = arith.constant 0 : i64
    %275 = arith.cmpi slt, %274, %c0_i64_80 : i64
    %c84_i8_81 = arith.constant 84 : i8
    cf.cond_br %275, ^bb1(%c84_i8_81 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %276 = arith.trunci %266 : i256 to i64
    %c0_i64_82 = arith.constant 0 : i64
    %277 = arith.cmpi slt, %276, %c0_i64_82 : i64
    %c84_i8_83 = arith.constant 84 : i8
    cf.cond_br %277, ^bb1(%c84_i8_83 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %278 = arith.trunci %270 : i256 to i64
    %c0_i64_84 = arith.constant 0 : i64
    %279 = arith.cmpi slt, %278, %c0_i64_84 : i64
    %c84_i8_85 = arith.constant 84 : i8
    cf.cond_br %279, ^bb1(%c84_i8_85 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %280 = arith.addi %272, %274 : i64
    %281 = arith.addi %276, %278 : i64
    %282 = arith.maxui %280, %281 : i64
    %c0_i64_86 = arith.constant 0 : i64
    %283 = arith.cmpi slt, %282, %c0_i64_86 : i64
    %c84_i8_87 = arith.constant 84 : i8
    cf.cond_br %283, ^bb1(%c84_i8_87 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c31_i64_88 = arith.constant 31 : i64
    %c32_i64_89 = arith.constant 32 : i64
    %284 = arith.addi %282, %c31_i64_88 : i64
    %285 = arith.divui %284, %c32_i64_89 : i64
    %286 = arith.muli %285, %c32_i64_89 : i64
    %287 = call @dora_fn_extend_memory(%arg0, %286) : (!llvm.ptr, i64) -> !llvm.ptr
    %288 = llvm.getelementptr %287[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %289 = llvm.load %288 : !llvm.ptr -> !llvm.ptr
    %290 = llvm.getelementptr %287[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %291 = llvm.load %290 : !llvm.ptr -> i8
    %c0_i8_90 = arith.constant 0 : i8
    %292 = arith.cmpi ne, %291, %c0_i8_90 : i8
    cf.cond_br %292, ^bb1(%291 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %293 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %289, %293 : !llvm.ptr, !llvm.ptr
    %294 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %286, %294 : i64, !llvm.ptr
    %295 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %296 = llvm.load %295 : !llvm.ptr -> i64
    %c1_i256_91 = arith.constant 1 : i256
    %297 = llvm.alloca %c1_i256_91 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_77, %297 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_92 = arith.constant 1 : i256
    %298 = llvm.alloca %c1_i256_92 x i256 : (i256) -> !llvm.ptr
    llvm.store %254, %298 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_93 = arith.constant 1 : i64
    %299 = llvm.alloca %c1_i64_93 x i64 : (i64) -> !llvm.ptr
    %c0_i8_94 = arith.constant 0 : i8
    %300 = call @dora_fn_call(%arg0, %271, %298, %297, %272, %274, %276, %278, %296, %299, %c0_i8_94) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %301 = llvm.getelementptr %300[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %302 = llvm.load %301 : !llvm.ptr -> i8
    %303 = llvm.getelementptr %300[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %304 = llvm.load %303 : !llvm.ptr -> i8
    %c0_i8_95 = arith.constant 0 : i8
    %305 = arith.cmpi ne, %304, %c0_i8_95 : i8
    cf.cond_br %305, ^bb1(%304 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %306 = llvm.load %299 : !llvm.ptr -> i64
    %307 = arith.extui %302 : i8 to i256
    %308 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %309 = llvm.load %308 : !llvm.ptr -> !llvm.ptr
    llvm.store %307, %309 : i256, !llvm.ptr
    %310 = llvm.getelementptr %309[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %310, %308 : !llvm.ptr, !llvm.ptr
    %311 = llvm.load %9 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %312 = arith.addi %311, %c-1_i64 : i64
    llvm.store %312, %9 : i64, !llvm.ptr
    %c1_i64_96 = arith.constant 1 : i64
    %313 = arith.cmpi ult, %311, %c1_i64_96 : i64
    %c91_i8_97 = arith.constant 91 : i8
    cf.cond_br %313, ^bb1(%c91_i8_97 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %314 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %315 = llvm.load %314 : !llvm.ptr -> !llvm.ptr
    %316 = llvm.getelementptr %315[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %317 = llvm.load %316 : !llvm.ptr -> i256
    llvm.store %316, %314 : !llvm.ptr, !llvm.ptr
    %318 = llvm.load %9 : !llvm.ptr -> i64
    %c-1_i64_98 = arith.constant -1 : i64
    %319 = arith.addi %318, %c-1_i64_98 : i64
    llvm.store %319, %9 : i64, !llvm.ptr
    %c1_i64_99 = arith.constant 1 : i64
    %320 = arith.cmpi ult, %318, %c1_i64_99 : i64
    %c91_i8_100 = arith.constant 91 : i8
    cf.cond_br %320, ^bb1(%c91_i8_100 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %321 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %322 = llvm.load %321 : !llvm.ptr -> !llvm.ptr
    %323 = llvm.getelementptr %322[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %324 = llvm.load %323 : !llvm.ptr -> i256
    llvm.store %323, %321 : !llvm.ptr, !llvm.ptr
    %325 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_101 = arith.constant 1 : i64
    %326 = arith.addi %325, %c1_i64_101 : i64
    llvm.store %326, %9 : i64, !llvm.ptr
    %327 = arith.cmpi ult, %c1024_i64, %326 : i64
    %c92_i8_102 = arith.constant 92 : i8
    cf.cond_br %327, ^bb1(%c92_i8_102 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %c0_i256_103 = arith.constant 0 : i256
    %328 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %329 = llvm.load %328 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_103, %329 : i256, !llvm.ptr
    %330 = llvm.getelementptr %329[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %330, %328 : !llvm.ptr, !llvm.ptr
    %331 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_104 = arith.constant 1 : i64
    %332 = arith.addi %331, %c1_i64_104 : i64
    llvm.store %332, %9 : i64, !llvm.ptr
    %333 = arith.cmpi ult, %c1024_i64, %332 : i64
    %c92_i8_105 = arith.constant 92 : i8
    cf.cond_br %333, ^bb1(%c92_i8_105 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %c0_i256_106 = arith.constant 0 : i256
    %334 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %335 = llvm.load %334 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_106, %335 : i256, !llvm.ptr
    %336 = llvm.getelementptr %335[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %336, %334 : !llvm.ptr, !llvm.ptr
    %337 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_107 = arith.constant -2 : i64
    %338 = arith.addi %337, %c-2_i64_107 : i64
    llvm.store %338, %9 : i64, !llvm.ptr
    %c2_i64_108 = arith.constant 2 : i64
    %339 = arith.cmpi ult, %337, %c2_i64_108 : i64
    %c91_i8_109 = arith.constant 91 : i8
    cf.cond_br %339, ^bb1(%c91_i8_109 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %340 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %341 = llvm.load %340 : !llvm.ptr -> !llvm.ptr
    %342 = llvm.getelementptr %341[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %343 = llvm.load %342 : !llvm.ptr -> i256
    llvm.store %342, %340 : !llvm.ptr, !llvm.ptr
    %344 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %345 = llvm.load %344 : !llvm.ptr -> !llvm.ptr
    %346 = llvm.getelementptr %345[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %347 = llvm.load %346 : !llvm.ptr -> i256
    llvm.store %346, %344 : !llvm.ptr, !llvm.ptr
    %348 = arith.trunci %343 : i256 to i64
    %c0_i64_110 = arith.constant 0 : i64
    %349 = arith.cmpi slt, %348, %c0_i64_110 : i64
    %c84_i8_111 = arith.constant 84 : i8
    cf.cond_br %349, ^bb1(%c84_i8_111 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %c32_i64_112 = arith.constant 32 : i64
    %350 = arith.addi %348, %c32_i64_112 : i64
    %c0_i64_113 = arith.constant 0 : i64
    %351 = arith.cmpi slt, %350, %c0_i64_113 : i64
    %c84_i8_114 = arith.constant 84 : i8
    cf.cond_br %351, ^bb1(%c84_i8_114 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %c31_i64_115 = arith.constant 31 : i64
    %c32_i64_116 = arith.constant 32 : i64
    %352 = arith.addi %350, %c31_i64_115 : i64
    %353 = arith.divui %352, %c32_i64_116 : i64
    %354 = arith.muli %353, %c32_i64_116 : i64
    %355 = call @dora_fn_extend_memory(%arg0, %354) : (!llvm.ptr, i64) -> !llvm.ptr
    %356 = llvm.getelementptr %355[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %357 = llvm.load %356 : !llvm.ptr -> !llvm.ptr
    %358 = llvm.getelementptr %355[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %359 = llvm.load %358 : !llvm.ptr -> i8
    %c0_i8_117 = arith.constant 0 : i8
    %360 = arith.cmpi ne, %359, %c0_i8_117 : i8
    cf.cond_br %360, ^bb1(%359 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %361 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %357, %361 : !llvm.ptr, !llvm.ptr
    %362 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %354, %362 : i64, !llvm.ptr
    %363 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %364 = llvm.load %363 : !llvm.ptr -> !llvm.ptr
    %365 = llvm.getelementptr %364[%348] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %366 = llvm.intr.bswap(%347)  : (i256) -> i256
    llvm.store %366, %365 {alignment = 1 : i64} : i256, !llvm.ptr
    %367 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_118 = arith.constant 1 : i64
    %368 = arith.addi %367, %c1_i64_118 : i64
    llvm.store %368, %9 : i64, !llvm.ptr
    %369 = arith.cmpi ult, %c1024_i64, %368 : i64
    %c92_i8_119 = arith.constant 92 : i8
    cf.cond_br %369, ^bb1(%c92_i8_119 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %c0_i256_120 = arith.constant 0 : i256
    %370 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %371 = llvm.load %370 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_120, %371 : i256, !llvm.ptr
    %372 = llvm.getelementptr %371[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %372, %370 : !llvm.ptr, !llvm.ptr
    %373 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_121 = arith.constant 1 : i64
    %374 = arith.addi %373, %c1_i64_121 : i64
    llvm.store %374, %9 : i64, !llvm.ptr
    %375 = arith.cmpi ult, %c1024_i64, %374 : i64
    %c92_i8_122 = arith.constant 92 : i8
    cf.cond_br %375, ^bb1(%c92_i8_122 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %c32_i256_123 = arith.constant 32 : i256
    %376 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %377 = llvm.load %376 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_123, %377 : i256, !llvm.ptr
    %378 = llvm.getelementptr %377[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %378, %376 : !llvm.ptr, !llvm.ptr
    %379 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_124 = arith.constant -2 : i64
    %380 = arith.addi %379, %c-2_i64_124 : i64
    llvm.store %380, %9 : i64, !llvm.ptr
    %c2_i64_125 = arith.constant 2 : i64
    %381 = arith.cmpi ult, %379, %c2_i64_125 : i64
    %c91_i8_126 = arith.constant 91 : i8
    cf.cond_br %381, ^bb1(%c91_i8_126 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %382 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %383 = llvm.load %382 : !llvm.ptr -> !llvm.ptr
    %384 = llvm.getelementptr %383[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %385 = llvm.load %384 : !llvm.ptr -> i256
    llvm.store %384, %382 : !llvm.ptr, !llvm.ptr
    %386 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %387 = llvm.load %386 : !llvm.ptr -> !llvm.ptr
    %388 = llvm.getelementptr %387[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %389 = llvm.load %388 : !llvm.ptr -> i256
    llvm.store %388, %386 : !llvm.ptr, !llvm.ptr
    %390 = arith.trunci %385 : i256 to i64
    %c0_i64_127 = arith.constant 0 : i64
    %391 = arith.cmpi slt, %390, %c0_i64_127 : i64
    %c84_i8_128 = arith.constant 84 : i8
    cf.cond_br %391, ^bb1(%c84_i8_128 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %c32_i64_129 = arith.constant 32 : i64
    %392 = arith.addi %390, %c32_i64_129 : i64
    %c0_i64_130 = arith.constant 0 : i64
    %393 = arith.cmpi slt, %392, %c0_i64_130 : i64
    %c84_i8_131 = arith.constant 84 : i8
    cf.cond_br %393, ^bb1(%c84_i8_131 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %c31_i64_132 = arith.constant 31 : i64
    %c32_i64_133 = arith.constant 32 : i64
    %394 = arith.addi %392, %c31_i64_132 : i64
    %395 = arith.divui %394, %c32_i64_133 : i64
    %396 = arith.muli %395, %c32_i64_133 : i64
    %397 = call @dora_fn_extend_memory(%arg0, %396) : (!llvm.ptr, i64) -> !llvm.ptr
    %398 = llvm.getelementptr %397[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %399 = llvm.load %398 : !llvm.ptr -> !llvm.ptr
    %400 = llvm.getelementptr %397[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %401 = llvm.load %400 : !llvm.ptr -> i8
    %c0_i8_134 = arith.constant 0 : i8
    %402 = arith.cmpi ne, %401, %c0_i8_134 : i8
    cf.cond_br %402, ^bb1(%401 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %403 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %399, %403 : !llvm.ptr, !llvm.ptr
    %404 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %396, %404 : i64, !llvm.ptr
    %405 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %406 = llvm.load %405 : !llvm.ptr -> !llvm.ptr
    %407 = llvm.getelementptr %406[%390] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %408 = llvm.intr.bswap(%389)  : (i256) -> i256
    llvm.store %408, %407 {alignment = 1 : i64} : i256, !llvm.ptr
    %409 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_135 = arith.constant 1 : i64
    %410 = arith.addi %409, %c1_i64_135 : i64
    llvm.store %410, %9 : i64, !llvm.ptr
    %411 = arith.cmpi ult, %c1024_i64, %410 : i64
    %c92_i8_136 = arith.constant 92 : i8
    cf.cond_br %411, ^bb1(%c92_i8_136 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %c0_i256_137 = arith.constant 0 : i256
    %412 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %413 = llvm.load %412 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_137, %413 : i256, !llvm.ptr
    %414 = llvm.getelementptr %413[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %414, %412 : !llvm.ptr, !llvm.ptr
    %415 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_138 = arith.constant 1 : i64
    %416 = arith.addi %415, %c1_i64_138 : i64
    llvm.store %416, %9 : i64, !llvm.ptr
    %417 = arith.cmpi ult, %c1024_i64, %416 : i64
    %c92_i8_139 = arith.constant 92 : i8
    cf.cond_br %417, ^bb1(%c92_i8_139 : i8), ^bb60
  ^bb60:  // pred: ^bb59
    %c64_i256_140 = arith.constant 64 : i256
    %418 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %419 = llvm.load %418 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256_140, %419 : i256, !llvm.ptr
    %420 = llvm.getelementptr %419[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %420, %418 : !llvm.ptr, !llvm.ptr
    %421 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_141 = arith.constant -2 : i64
    %422 = arith.addi %421, %c-2_i64_141 : i64
    llvm.store %422, %9 : i64, !llvm.ptr
    %c2_i64_142 = arith.constant 2 : i64
    %423 = arith.cmpi ult, %421, %c2_i64_142 : i64
    %c91_i8_143 = arith.constant 91 : i8
    cf.cond_br %423, ^bb1(%c91_i8_143 : i8), ^bb61
  ^bb61:  // pred: ^bb60
    %424 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %425 = llvm.load %424 : !llvm.ptr -> !llvm.ptr
    %426 = llvm.getelementptr %425[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %427 = llvm.load %426 : !llvm.ptr -> i256
    llvm.store %426, %424 : !llvm.ptr, !llvm.ptr
    %428 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %429 = llvm.load %428 : !llvm.ptr -> !llvm.ptr
    %430 = llvm.getelementptr %429[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %431 = llvm.load %430 : !llvm.ptr -> i256
    llvm.store %430, %428 : !llvm.ptr, !llvm.ptr
    %432 = arith.trunci %427 : i256 to i64
    %c0_i64_144 = arith.constant 0 : i64
    %433 = arith.cmpi slt, %432, %c0_i64_144 : i64
    %c84_i8_145 = arith.constant 84 : i8
    cf.cond_br %433, ^bb1(%c84_i8_145 : i8), ^bb62
  ^bb62:  // pred: ^bb61
    %c32_i64_146 = arith.constant 32 : i64
    %434 = arith.addi %432, %c32_i64_146 : i64
    %c0_i64_147 = arith.constant 0 : i64
    %435 = arith.cmpi slt, %434, %c0_i64_147 : i64
    %c84_i8_148 = arith.constant 84 : i8
    cf.cond_br %435, ^bb1(%c84_i8_148 : i8), ^bb63
  ^bb63:  // pred: ^bb62
    %c31_i64_149 = arith.constant 31 : i64
    %c32_i64_150 = arith.constant 32 : i64
    %436 = arith.addi %434, %c31_i64_149 : i64
    %437 = arith.divui %436, %c32_i64_150 : i64
    %438 = arith.muli %437, %c32_i64_150 : i64
    %439 = call @dora_fn_extend_memory(%arg0, %438) : (!llvm.ptr, i64) -> !llvm.ptr
    %440 = llvm.getelementptr %439[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %441 = llvm.load %440 : !llvm.ptr -> !llvm.ptr
    %442 = llvm.getelementptr %439[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %443 = llvm.load %442 : !llvm.ptr -> i8
    %c0_i8_151 = arith.constant 0 : i8
    %444 = arith.cmpi ne, %443, %c0_i8_151 : i8
    cf.cond_br %444, ^bb1(%443 : i8), ^bb64
  ^bb64:  // pred: ^bb63
    %445 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %441, %445 : !llvm.ptr, !llvm.ptr
    %446 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %438, %446 : i64, !llvm.ptr
    %447 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %448 = llvm.load %447 : !llvm.ptr -> !llvm.ptr
    %449 = llvm.getelementptr %448[%432] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %450 = llvm.intr.bswap(%431)  : (i256) -> i256
    llvm.store %450, %449 {alignment = 1 : i64} : i256, !llvm.ptr
    %451 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_152 = arith.constant 1 : i64
    %452 = arith.addi %451, %c1_i64_152 : i64
    llvm.store %452, %9 : i64, !llvm.ptr
    %453 = arith.cmpi ult, %c1024_i64, %452 : i64
    %c92_i8_153 = arith.constant 92 : i8
    cf.cond_br %453, ^bb1(%c92_i8_153 : i8), ^bb65
  ^bb65:  // pred: ^bb64
    %c32_i256_154 = arith.constant 32 : i256
    %454 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %455 = llvm.load %454 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_154, %455 : i256, !llvm.ptr
    %456 = llvm.getelementptr %455[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %456, %454 : !llvm.ptr, !llvm.ptr
    %457 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_155 = arith.constant 1 : i64
    %458 = arith.addi %457, %c1_i64_155 : i64
    llvm.store %458, %9 : i64, !llvm.ptr
    %459 = arith.cmpi ult, %c1024_i64, %458 : i64
    %c92_i8_156 = arith.constant 92 : i8
    cf.cond_br %459, ^bb1(%c92_i8_156 : i8), ^bb66
  ^bb66:  // pred: ^bb65
    %c0_i256_157 = arith.constant 0 : i256
    %460 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %461 = llvm.load %460 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_157, %461 : i256, !llvm.ptr
    %462 = llvm.getelementptr %461[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %462, %460 : !llvm.ptr, !llvm.ptr
    %463 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_158 = arith.constant 1 : i64
    %464 = arith.addi %463, %c1_i64_158 : i64
    llvm.store %464, %9 : i64, !llvm.ptr
    %465 = arith.cmpi ult, %c1024_i64, %464 : i64
    %c92_i8_159 = arith.constant 92 : i8
    cf.cond_br %465, ^bb1(%c92_i8_159 : i8), ^bb67
  ^bb67:  // pred: ^bb66
    %c0_i256_160 = arith.constant 0 : i256
    %466 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %467 = llvm.load %466 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_160, %467 : i256, !llvm.ptr
    %468 = llvm.getelementptr %467[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %468, %466 : !llvm.ptr, !llvm.ptr
    %469 = llvm.load %9 : !llvm.ptr -> i64
    %c-3_i64 = arith.constant -3 : i64
    %470 = arith.addi %469, %c-3_i64 : i64
    llvm.store %470, %9 : i64, !llvm.ptr
    %c3_i64_161 = arith.constant 3 : i64
    %471 = arith.cmpi ult, %469, %c3_i64_161 : i64
    %c91_i8_162 = arith.constant 91 : i8
    cf.cond_br %471, ^bb1(%c91_i8_162 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %472 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %473 = llvm.load %472 : !llvm.ptr -> !llvm.ptr
    %474 = llvm.getelementptr %473[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %475 = llvm.load %474 : !llvm.ptr -> i256
    llvm.store %474, %472 : !llvm.ptr, !llvm.ptr
    %476 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %477 = llvm.load %476 : !llvm.ptr -> !llvm.ptr
    %478 = llvm.getelementptr %477[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %479 = llvm.load %478 : !llvm.ptr -> i256
    llvm.store %478, %476 : !llvm.ptr, !llvm.ptr
    %480 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %481 = llvm.load %480 : !llvm.ptr -> !llvm.ptr
    %482 = llvm.getelementptr %481[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %483 = llvm.load %482 : !llvm.ptr -> i256
    llvm.store %482, %480 : !llvm.ptr, !llvm.ptr
    %484 = arith.trunci %475 : i256 to i64
    %c0_i64_163 = arith.constant 0 : i64
    %485 = arith.cmpi slt, %484, %c0_i64_163 : i64
    %c84_i8_164 = arith.constant 84 : i8
    cf.cond_br %485, ^bb1(%c84_i8_164 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %486 = arith.trunci %479 : i256 to i64
    %c0_i64_165 = arith.constant 0 : i64
    %487 = arith.cmpi slt, %486, %c0_i64_165 : i64
    %c84_i8_166 = arith.constant 84 : i8
    cf.cond_br %487, ^bb1(%c84_i8_166 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %488 = arith.trunci %483 : i256 to i64
    %c0_i64_167 = arith.constant 0 : i64
    %489 = arith.cmpi slt, %488, %c0_i64_167 : i64
    %c84_i8_168 = arith.constant 84 : i8
    cf.cond_br %489, ^bb1(%c84_i8_168 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %490 = arith.addi %484, %488 : i64
    %c0_i64_169 = arith.constant 0 : i64
    %491 = arith.cmpi slt, %490, %c0_i64_169 : i64
    %c84_i8_170 = arith.constant 84 : i8
    cf.cond_br %491, ^bb1(%c84_i8_170 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %c31_i64_171 = arith.constant 31 : i64
    %c32_i64_172 = arith.constant 32 : i64
    %492 = arith.addi %490, %c31_i64_171 : i64
    %493 = arith.divui %492, %c32_i64_172 : i64
    %494 = arith.muli %493, %c32_i64_172 : i64
    %495 = call @dora_fn_extend_memory(%arg0, %494) : (!llvm.ptr, i64) -> !llvm.ptr
    %496 = llvm.getelementptr %495[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %497 = llvm.load %496 : !llvm.ptr -> !llvm.ptr
    %498 = llvm.getelementptr %495[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %499 = llvm.load %498 : !llvm.ptr -> i8
    %c0_i8_173 = arith.constant 0 : i8
    %500 = arith.cmpi ne, %499, %c0_i8_173 : i8
    cf.cond_br %500, ^bb1(%499 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %501 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %497, %501 : !llvm.ptr, !llvm.ptr
    %502 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %494, %502 : i64, !llvm.ptr
    %503 = call @dora_fn_return_data_copy(%arg0, %484, %486, %488) : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr
    %504 = llvm.getelementptr %503[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %505 = llvm.load %504 : !llvm.ptr -> i8
    %c0_i8_174 = arith.constant 0 : i8
    %506 = arith.cmpi ne, %505, %c0_i8_174 : i8
    cf.cond_br %506, ^bb1(%505 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    cf.br ^bb75
  ^bb75:  // pred: ^bb74
    %c0_i64_175 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %507 = call @dora_fn_write_result(%arg0, %c0_i64_175, %c0_i64_175, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
