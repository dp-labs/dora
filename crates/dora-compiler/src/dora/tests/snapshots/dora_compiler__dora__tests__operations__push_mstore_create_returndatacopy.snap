---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 72 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36, ^bb37, ^bb38, ^bb39, ^bb40, ^bb41, ^bb42, ^bb43, ^bb44, ^bb45, ^bb46, ^bb47, ^bb48, ^bb49, ^bb50, ^bb51, ^bb52, ^bb53, ^bb54, ^bb55, ^bb56, ^bb57, ^bb58, ^bb59, ^bb60, ^bb61, ^bb62, ^bb63, ^bb64, ^bb65, ^bb66, ^bb67, ^bb68, ^bb69, ^bb70, ^bb71, ^bb72
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c0_i64_4 = arith.constant 0 : i64
    %37 = arith.cmpi slt, %36, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %37, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c32_i64 = arith.constant 32 : i64
    %38 = arith.addi %36, %c32_i64 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %39 = arith.cmpi slt, %38, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %39, ^bb1(%c84_i8_6 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_7 = arith.constant 32 : i64
    %40 = arith.addi %38, %c31_i64 : i64
    %41 = arith.divui %40, %c32_i64_7 : i64
    %42 = arith.muli %41, %c32_i64_7 : i64
    %43 = call @dora_fn_extend_memory(%arg0, %42) : (!llvm.ptr, i64) -> !llvm.ptr
    %44 = llvm.getelementptr %43[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %43[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %48 = arith.cmpi ne, %47, %c0_i8 : i8
    cf.cond_br %48, ^bb1(%47 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %49 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %45, %49 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %42, %50 : i64, !llvm.ptr
    %51 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %54, %53 {alignment = 1 : i64} : i256, !llvm.ptr
    %55 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_8 : i64
    llvm.store %56, %9 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64, %56 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    %61 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_10 : i64
    llvm.store %62, %9 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64, %62 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_11 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c32_i256 = arith.constant 32 : i256
    %64 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %65 : i256, !llvm.ptr
    %66 = llvm.getelementptr %65[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %66, %64 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_12 = arith.constant -2 : i64
    %68 = arith.addi %67, %c-2_i64_12 : i64
    llvm.store %68, %9 : i64, !llvm.ptr
    %c2_i64_13 = arith.constant 2 : i64
    %69 = arith.cmpi ult, %67, %c2_i64_13 : i64
    %c91_i8_14 = arith.constant 91 : i8
    cf.cond_br %69, ^bb1(%c91_i8_14 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    %72 = llvm.getelementptr %71[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %73 = llvm.load %72 : !llvm.ptr -> i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    %74 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> !llvm.ptr
    %76 = llvm.getelementptr %75[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %77 = llvm.load %76 : !llvm.ptr -> i256
    llvm.store %76, %74 : !llvm.ptr, !llvm.ptr
    %78 = arith.trunci %73 : i256 to i64
    %c0_i64_15 = arith.constant 0 : i64
    %79 = arith.cmpi slt, %78, %c0_i64_15 : i64
    %c84_i8_16 = arith.constant 84 : i8
    cf.cond_br %79, ^bb1(%c84_i8_16 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64_17 = arith.constant 32 : i64
    %80 = arith.addi %78, %c32_i64_17 : i64
    %c0_i64_18 = arith.constant 0 : i64
    %81 = arith.cmpi slt, %80, %c0_i64_18 : i64
    %c84_i8_19 = arith.constant 84 : i8
    cf.cond_br %81, ^bb1(%c84_i8_19 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64_20 = arith.constant 31 : i64
    %c32_i64_21 = arith.constant 32 : i64
    %82 = arith.addi %80, %c31_i64_20 : i64
    %83 = arith.divui %82, %c32_i64_21 : i64
    %84 = arith.muli %83, %c32_i64_21 : i64
    %85 = call @dora_fn_extend_memory(%arg0, %84) : (!llvm.ptr, i64) -> !llvm.ptr
    %86 = llvm.getelementptr %85[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %87 = llvm.load %86 : !llvm.ptr -> !llvm.ptr
    %88 = llvm.getelementptr %85[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %89 = llvm.load %88 : !llvm.ptr -> i8
    %c0_i8_22 = arith.constant 0 : i8
    %90 = arith.cmpi ne, %89, %c0_i8_22 : i8
    cf.cond_br %90, ^bb1(%89 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %91 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %87, %91 : !llvm.ptr, !llvm.ptr
    %92 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %84, %92 : i64, !llvm.ptr
    %93 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %94 = llvm.load %93 : !llvm.ptr -> !llvm.ptr
    %95 = llvm.getelementptr %94[%78] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %96 = llvm.intr.bswap(%77)  : (i256) -> i256
    llvm.store %96, %95 {alignment = 1 : i64} : i256, !llvm.ptr
    %97 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %98 = arith.addi %97, %c1_i64_23 : i64
    llvm.store %98, %9 : i64, !llvm.ptr
    %99 = arith.cmpi ult, %c1024_i64, %98 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %99, ^bb1(%c92_i8_24 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %101 : i256, !llvm.ptr
    %102 = llvm.getelementptr %101[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    %103 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %104 = arith.addi %103, %c1_i64_25 : i64
    llvm.store %104, %9 : i64, !llvm.ptr
    %105 = arith.cmpi ult, %c1024_i64, %104 : i64
    %c92_i8_26 = arith.constant 92 : i8
    cf.cond_br %105, ^bb1(%c92_i8_26 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c64_i256 = arith.constant 64 : i256
    %106 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %107 : i256, !llvm.ptr
    %108 = llvm.getelementptr %107[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %108, %106 : !llvm.ptr, !llvm.ptr
    %109 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_27 = arith.constant -2 : i64
    %110 = arith.addi %109, %c-2_i64_27 : i64
    llvm.store %110, %9 : i64, !llvm.ptr
    %c2_i64_28 = arith.constant 2 : i64
    %111 = arith.cmpi ult, %109, %c2_i64_28 : i64
    %c91_i8_29 = arith.constant 91 : i8
    cf.cond_br %111, ^bb1(%c91_i8_29 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %112 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> !llvm.ptr
    %114 = llvm.getelementptr %113[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %115 = llvm.load %114 : !llvm.ptr -> i256
    llvm.store %114, %112 : !llvm.ptr, !llvm.ptr
    %116 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %117 = llvm.load %116 : !llvm.ptr -> !llvm.ptr
    %118 = llvm.getelementptr %117[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %119 = llvm.load %118 : !llvm.ptr -> i256
    llvm.store %118, %116 : !llvm.ptr, !llvm.ptr
    %120 = arith.trunci %115 : i256 to i64
    %c0_i64_30 = arith.constant 0 : i64
    %121 = arith.cmpi slt, %120, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %121, ^bb1(%c84_i8_31 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %c32_i64_32 = arith.constant 32 : i64
    %122 = arith.addi %120, %c32_i64_32 : i64
    %c0_i64_33 = arith.constant 0 : i64
    %123 = arith.cmpi slt, %122, %c0_i64_33 : i64
    %c84_i8_34 = arith.constant 84 : i8
    cf.cond_br %123, ^bb1(%c84_i8_34 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c31_i64_35 = arith.constant 31 : i64
    %c32_i64_36 = arith.constant 32 : i64
    %124 = arith.addi %122, %c31_i64_35 : i64
    %125 = arith.divui %124, %c32_i64_36 : i64
    %126 = arith.muli %125, %c32_i64_36 : i64
    %127 = call @dora_fn_extend_memory(%arg0, %126) : (!llvm.ptr, i64) -> !llvm.ptr
    %128 = llvm.getelementptr %127[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %129 = llvm.load %128 : !llvm.ptr -> !llvm.ptr
    %130 = llvm.getelementptr %127[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %131 = llvm.load %130 : !llvm.ptr -> i8
    %c0_i8_37 = arith.constant 0 : i8
    %132 = arith.cmpi ne, %131, %c0_i8_37 : i8
    cf.cond_br %132, ^bb1(%131 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %133 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %129, %133 : !llvm.ptr, !llvm.ptr
    %134 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %126, %134 : i64, !llvm.ptr
    %135 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> !llvm.ptr
    %137 = llvm.getelementptr %136[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %138 = llvm.intr.bswap(%119)  : (i256) -> i256
    llvm.store %138, %137 {alignment = 1 : i64} : i256, !llvm.ptr
    %139 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_38 = arith.constant 1 : i64
    %140 = arith.addi %139, %c1_i64_38 : i64
    llvm.store %140, %9 : i64, !llvm.ptr
    %141 = arith.cmpi ult, %c1024_i64, %140 : i64
    %c92_i8_39 = arith.constant 92 : i8
    cf.cond_br %141, ^bb1(%c92_i8_39 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %c77_i256 = arith.constant 77 : i256
    %142 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %143 : i256, !llvm.ptr
    %144 = llvm.getelementptr %143[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %144, %142 : !llvm.ptr, !llvm.ptr
    %145 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %146 = arith.addi %145, %c1_i64_40 : i64
    llvm.store %146, %9 : i64, !llvm.ptr
    %147 = arith.cmpi ult, %c1024_i64, %146 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %147, ^bb1(%c92_i8_41 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_42 = arith.constant 0 : i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_42, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    %151 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %152 = arith.addi %151, %c1_i64_43 : i64
    llvm.store %152, %9 : i64, !llvm.ptr
    %153 = arith.cmpi ult, %c1024_i64, %152 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %153, ^bb1(%c92_i8_44 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i256_45 = arith.constant 0 : i256
    %154 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_45, %155 : i256, !llvm.ptr
    %156 = llvm.getelementptr %155[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %156, %154 : !llvm.ptr, !llvm.ptr
    %157 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_46 = arith.constant -2 : i64
    %158 = arith.addi %157, %c-2_i64_46 : i64
    llvm.store %158, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %159 = arith.cmpi ult, %157, %c3_i64 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %159, ^bb1(%c91_i8_47 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %160 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    %162 = llvm.getelementptr %161[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %163 = llvm.load %162 : !llvm.ptr -> i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    %164 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %165 = llvm.load %164 : !llvm.ptr -> !llvm.ptr
    %166 = llvm.getelementptr %165[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %167 = llvm.load %166 : !llvm.ptr -> i256
    llvm.store %166, %164 : !llvm.ptr, !llvm.ptr
    %168 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> !llvm.ptr
    %170 = llvm.getelementptr %169[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %171 = llvm.load %170 : !llvm.ptr -> i256
    llvm.store %170, %168 : !llvm.ptr, !llvm.ptr
    %172 = arith.trunci %167 : i256 to i64
    %c0_i64_48 = arith.constant 0 : i64
    %173 = arith.cmpi slt, %172, %c0_i64_48 : i64
    %c84_i8_49 = arith.constant 84 : i8
    cf.cond_br %173, ^bb1(%c84_i8_49 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %174 = arith.trunci %171 : i256 to i64
    %c0_i64_50 = arith.constant 0 : i64
    %175 = arith.cmpi slt, %174, %c0_i64_50 : i64
    %c84_i8_51 = arith.constant 84 : i8
    cf.cond_br %175, ^bb1(%c84_i8_51 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %176 = arith.addi %172, %174 : i64
    %c0_i64_52 = arith.constant 0 : i64
    %177 = arith.cmpi slt, %176, %c0_i64_52 : i64
    %c84_i8_53 = arith.constant 84 : i8
    cf.cond_br %177, ^bb1(%c84_i8_53 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %c31_i64_54 = arith.constant 31 : i64
    %c32_i64_55 = arith.constant 32 : i64
    %178 = arith.addi %176, %c31_i64_54 : i64
    %179 = arith.divui %178, %c32_i64_55 : i64
    %180 = arith.muli %179, %c32_i64_55 : i64
    %181 = call @dora_fn_extend_memory(%arg0, %180) : (!llvm.ptr, i64) -> !llvm.ptr
    %182 = llvm.getelementptr %181[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %183 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    %184 = llvm.getelementptr %181[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %185 = llvm.load %184 : !llvm.ptr -> i8
    %c0_i8_56 = arith.constant 0 : i8
    %186 = arith.cmpi ne, %185, %c0_i8_56 : i8
    cf.cond_br %186, ^bb1(%185 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %187 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %183, %187 : !llvm.ptr, !llvm.ptr
    %188 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %180, %188 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %189 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %163, %189 {alignment = 1 : i64} : i256, !llvm.ptr
    %190 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %191 = llvm.load %190 : !llvm.ptr -> i64
    %c1_i64_57 = arith.constant 1 : i64
    %192 = llvm.alloca %c1_i64_57 x i64 : (i64) -> !llvm.ptr
    llvm.store %191, %192 {alignment = 1 : i64} : i64, !llvm.ptr
    %193 = call @dora_fn_create(%arg0, %174, %172, %189, %192) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %194 = llvm.getelementptr %193[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %195 = llvm.load %194 : !llvm.ptr -> i8
    %c0_i8_58 = arith.constant 0 : i8
    %196 = arith.cmpi ne, %195, %c0_i8_58 : i8
    cf.cond_br %196, ^bb1(%195 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %197 = llvm.load %189 : !llvm.ptr -> i256
    %198 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %199 = llvm.load %198 : !llvm.ptr -> !llvm.ptr
    llvm.store %197, %199 : i256, !llvm.ptr
    %200 = llvm.getelementptr %199[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %200, %198 : !llvm.ptr, !llvm.ptr
    %201 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %202 = arith.addi %201, %c1_i64_59 : i64
    llvm.store %202, %9 : i64, !llvm.ptr
    %203 = arith.cmpi ult, %c1024_i64, %202 : i64
    %c92_i8_60 = arith.constant 92 : i8
    cf.cond_br %203, ^bb1(%c92_i8_60 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %c0_i256_61 = arith.constant 0 : i256
    %204 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_61, %205 : i256, !llvm.ptr
    %206 = llvm.getelementptr %205[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %206, %204 : !llvm.ptr, !llvm.ptr
    %207 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_62 = arith.constant 1 : i64
    %208 = arith.addi %207, %c1_i64_62 : i64
    llvm.store %208, %9 : i64, !llvm.ptr
    %209 = arith.cmpi ult, %c1024_i64, %208 : i64
    %c92_i8_63 = arith.constant 92 : i8
    cf.cond_br %209, ^bb1(%c92_i8_63 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i256_64 = arith.constant 0 : i256
    %210 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %211 = llvm.load %210 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_64, %211 : i256, !llvm.ptr
    %212 = llvm.getelementptr %211[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %212, %210 : !llvm.ptr, !llvm.ptr
    %213 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_65 = arith.constant 1 : i64
    %214 = arith.addi %213, %c1_i64_65 : i64
    llvm.store %214, %9 : i64, !llvm.ptr
    %215 = arith.cmpi ult, %c1024_i64, %214 : i64
    %c92_i8_66 = arith.constant 92 : i8
    cf.cond_br %215, ^bb1(%c92_i8_66 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i256_67 = arith.constant 0 : i256
    %216 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %217 = llvm.load %216 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_67, %217 : i256, !llvm.ptr
    %218 = llvm.getelementptr %217[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %218, %216 : !llvm.ptr, !llvm.ptr
    %219 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_68 = arith.constant 1 : i64
    %220 = arith.addi %219, %c1_i64_68 : i64
    llvm.store %220, %9 : i64, !llvm.ptr
    %221 = arith.cmpi ult, %c1024_i64, %220 : i64
    %c92_i8_69 = arith.constant 92 : i8
    cf.cond_br %221, ^bb1(%c92_i8_69 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c0_i256_70 = arith.constant 0 : i256
    %222 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_70, %223 : i256, !llvm.ptr
    %224 = llvm.getelementptr %223[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %224, %222 : !llvm.ptr, !llvm.ptr
    %225 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_71 = arith.constant 1 : i64
    %226 = arith.addi %225, %c1_i64_71 : i64
    llvm.store %226, %9 : i64, !llvm.ptr
    %227 = arith.cmpi ult, %c1024_i64, %226 : i64
    %c92_i8_72 = arith.constant 92 : i8
    cf.cond_br %227, ^bb1(%c92_i8_72 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %228 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %229 = llvm.load %228 : !llvm.ptr -> !llvm.ptr
    %230 = llvm.getelementptr %229[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %231 = llvm.load %230 : !llvm.ptr -> i256
    %232 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %233 = llvm.load %232 : !llvm.ptr -> !llvm.ptr
    llvm.store %231, %233 : i256, !llvm.ptr
    %234 = llvm.getelementptr %233[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %234, %232 : !llvm.ptr, !llvm.ptr
    %235 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %236 = arith.addi %235, %c1_i64_73 : i64
    llvm.store %236, %9 : i64, !llvm.ptr
    %237 = arith.cmpi ult, %c1024_i64, %236 : i64
    %c92_i8_74 = arith.constant 92 : i8
    cf.cond_br %237, ^bb1(%c92_i8_74 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %238 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %239 = llvm.load %238 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %239 : i256, !llvm.ptr
    %240 = llvm.getelementptr %239[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %240, %238 : !llvm.ptr, !llvm.ptr
    %241 = llvm.load %9 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %242 = arith.addi %241, %c-5_i64 : i64
    llvm.store %242, %9 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %243 = arith.cmpi ult, %241, %c6_i64 : i64
    %c91_i8_75 = arith.constant 91 : i8
    cf.cond_br %243, ^bb1(%c91_i8_75 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %244 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %245 = llvm.load %244 : !llvm.ptr -> !llvm.ptr
    %246 = llvm.getelementptr %245[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %247 = llvm.load %246 : !llvm.ptr -> i256
    llvm.store %246, %244 : !llvm.ptr, !llvm.ptr
    %248 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %249 = llvm.load %248 : !llvm.ptr -> !llvm.ptr
    %250 = llvm.getelementptr %249[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %251 = llvm.load %250 : !llvm.ptr -> i256
    llvm.store %250, %248 : !llvm.ptr, !llvm.ptr
    %252 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> !llvm.ptr
    %254 = llvm.getelementptr %253[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %255 = llvm.load %254 : !llvm.ptr -> i256
    llvm.store %254, %252 : !llvm.ptr, !llvm.ptr
    %256 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %257 = llvm.load %256 : !llvm.ptr -> !llvm.ptr
    %258 = llvm.getelementptr %257[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %259 = llvm.load %258 : !llvm.ptr -> i256
    llvm.store %258, %256 : !llvm.ptr, !llvm.ptr
    %260 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %261 = llvm.load %260 : !llvm.ptr -> !llvm.ptr
    %262 = llvm.getelementptr %261[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %263 = llvm.load %262 : !llvm.ptr -> i256
    llvm.store %262, %260 : !llvm.ptr, !llvm.ptr
    %264 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %265 = llvm.load %264 : !llvm.ptr -> !llvm.ptr
    %266 = llvm.getelementptr %265[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %267 = llvm.load %266 : !llvm.ptr -> i256
    llvm.store %266, %264 : !llvm.ptr, !llvm.ptr
    %c0_i256_76 = arith.constant 0 : i256
    %268 = arith.trunci %247 : i256 to i64
    %269 = arith.trunci %255 : i256 to i64
    %c0_i64_77 = arith.constant 0 : i64
    %270 = arith.cmpi slt, %269, %c0_i64_77 : i64
    %c84_i8_78 = arith.constant 84 : i8
    cf.cond_br %270, ^bb1(%c84_i8_78 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %271 = arith.trunci %259 : i256 to i64
    %c0_i64_79 = arith.constant 0 : i64
    %272 = arith.cmpi slt, %271, %c0_i64_79 : i64
    %c84_i8_80 = arith.constant 84 : i8
    cf.cond_br %272, ^bb1(%c84_i8_80 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %273 = arith.trunci %263 : i256 to i64
    %c0_i64_81 = arith.constant 0 : i64
    %274 = arith.cmpi slt, %273, %c0_i64_81 : i64
    %c84_i8_82 = arith.constant 84 : i8
    cf.cond_br %274, ^bb1(%c84_i8_82 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %275 = arith.trunci %267 : i256 to i64
    %c0_i64_83 = arith.constant 0 : i64
    %276 = arith.cmpi slt, %275, %c0_i64_83 : i64
    %c84_i8_84 = arith.constant 84 : i8
    cf.cond_br %276, ^bb1(%c84_i8_84 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %277 = arith.addi %269, %271 : i64
    %278 = arith.addi %273, %275 : i64
    %279 = arith.maxui %277, %278 : i64
    %c0_i64_85 = arith.constant 0 : i64
    %280 = arith.cmpi slt, %279, %c0_i64_85 : i64
    %c84_i8_86 = arith.constant 84 : i8
    cf.cond_br %280, ^bb1(%c84_i8_86 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %c31_i64_87 = arith.constant 31 : i64
    %c32_i64_88 = arith.constant 32 : i64
    %281 = arith.addi %279, %c31_i64_87 : i64
    %282 = arith.divui %281, %c32_i64_88 : i64
    %283 = arith.muli %282, %c32_i64_88 : i64
    %284 = call @dora_fn_extend_memory(%arg0, %283) : (!llvm.ptr, i64) -> !llvm.ptr
    %285 = llvm.getelementptr %284[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %286 = llvm.load %285 : !llvm.ptr -> !llvm.ptr
    %287 = llvm.getelementptr %284[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %288 = llvm.load %287 : !llvm.ptr -> i8
    %c0_i8_89 = arith.constant 0 : i8
    %289 = arith.cmpi ne, %288, %c0_i8_89 : i8
    cf.cond_br %289, ^bb1(%288 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %290 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %286, %290 : !llvm.ptr, !llvm.ptr
    %291 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %283, %291 : i64, !llvm.ptr
    %292 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %293 = llvm.load %292 : !llvm.ptr -> i64
    %c1_i256_90 = arith.constant 1 : i256
    %294 = llvm.alloca %c1_i256_90 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_76, %294 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_91 = arith.constant 1 : i256
    %295 = llvm.alloca %c1_i256_91 x i256 : (i256) -> !llvm.ptr
    llvm.store %251, %295 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_92 = arith.constant 1 : i64
    %296 = llvm.alloca %c1_i64_92 x i64 : (i64) -> !llvm.ptr
    %c0_i8_93 = arith.constant 0 : i8
    %297 = call @dora_fn_call(%arg0, %268, %295, %294, %269, %271, %273, %275, %293, %296, %c0_i8_93) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %298 = llvm.getelementptr %297[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %299 = llvm.load %298 : !llvm.ptr -> i8
    %300 = llvm.getelementptr %297[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %301 = llvm.load %300 : !llvm.ptr -> i8
    %c0_i8_94 = arith.constant 0 : i8
    %302 = arith.cmpi ne, %301, %c0_i8_94 : i8
    cf.cond_br %302, ^bb1(%301 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %303 = llvm.load %296 : !llvm.ptr -> i64
    %304 = arith.extui %299 : i8 to i256
    %305 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %306 = llvm.load %305 : !llvm.ptr -> !llvm.ptr
    llvm.store %304, %306 : i256, !llvm.ptr
    %307 = llvm.getelementptr %306[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %307, %305 : !llvm.ptr, !llvm.ptr
    %308 = llvm.load %9 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %309 = arith.addi %308, %c-1_i64 : i64
    llvm.store %309, %9 : i64, !llvm.ptr
    %c1_i64_95 = arith.constant 1 : i64
    %310 = arith.cmpi ult, %308, %c1_i64_95 : i64
    %c91_i8_96 = arith.constant 91 : i8
    cf.cond_br %310, ^bb1(%c91_i8_96 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %311 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %312 = llvm.load %311 : !llvm.ptr -> !llvm.ptr
    %313 = llvm.getelementptr %312[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %314 = llvm.load %313 : !llvm.ptr -> i256
    llvm.store %313, %311 : !llvm.ptr, !llvm.ptr
    %315 = llvm.load %9 : !llvm.ptr -> i64
    %c-1_i64_97 = arith.constant -1 : i64
    %316 = arith.addi %315, %c-1_i64_97 : i64
    llvm.store %316, %9 : i64, !llvm.ptr
    %c1_i64_98 = arith.constant 1 : i64
    %317 = arith.cmpi ult, %315, %c1_i64_98 : i64
    %c91_i8_99 = arith.constant 91 : i8
    cf.cond_br %317, ^bb1(%c91_i8_99 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %318 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %319 = llvm.load %318 : !llvm.ptr -> !llvm.ptr
    %320 = llvm.getelementptr %319[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %321 = llvm.load %320 : !llvm.ptr -> i256
    llvm.store %320, %318 : !llvm.ptr, !llvm.ptr
    %322 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_100 = arith.constant 1 : i64
    %323 = arith.addi %322, %c1_i64_100 : i64
    llvm.store %323, %9 : i64, !llvm.ptr
    %324 = arith.cmpi ult, %c1024_i64, %323 : i64
    %c92_i8_101 = arith.constant 92 : i8
    cf.cond_br %324, ^bb1(%c92_i8_101 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c0_i256_102 = arith.constant 0 : i256
    %325 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %326 = llvm.load %325 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_102, %326 : i256, !llvm.ptr
    %327 = llvm.getelementptr %326[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %327, %325 : !llvm.ptr, !llvm.ptr
    %328 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_103 = arith.constant 1 : i64
    %329 = arith.addi %328, %c1_i64_103 : i64
    llvm.store %329, %9 : i64, !llvm.ptr
    %330 = arith.cmpi ult, %c1024_i64, %329 : i64
    %c92_i8_104 = arith.constant 92 : i8
    cf.cond_br %330, ^bb1(%c92_i8_104 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %c0_i256_105 = arith.constant 0 : i256
    %331 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %332 = llvm.load %331 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_105, %332 : i256, !llvm.ptr
    %333 = llvm.getelementptr %332[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %333, %331 : !llvm.ptr, !llvm.ptr
    %334 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_106 = arith.constant -2 : i64
    %335 = arith.addi %334, %c-2_i64_106 : i64
    llvm.store %335, %9 : i64, !llvm.ptr
    %c2_i64_107 = arith.constant 2 : i64
    %336 = arith.cmpi ult, %334, %c2_i64_107 : i64
    %c91_i8_108 = arith.constant 91 : i8
    cf.cond_br %336, ^bb1(%c91_i8_108 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %337 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %338 = llvm.load %337 : !llvm.ptr -> !llvm.ptr
    %339 = llvm.getelementptr %338[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %340 = llvm.load %339 : !llvm.ptr -> i256
    llvm.store %339, %337 : !llvm.ptr, !llvm.ptr
    %341 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %342 = llvm.load %341 : !llvm.ptr -> !llvm.ptr
    %343 = llvm.getelementptr %342[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %344 = llvm.load %343 : !llvm.ptr -> i256
    llvm.store %343, %341 : !llvm.ptr, !llvm.ptr
    %345 = arith.trunci %340 : i256 to i64
    %c0_i64_109 = arith.constant 0 : i64
    %346 = arith.cmpi slt, %345, %c0_i64_109 : i64
    %c84_i8_110 = arith.constant 84 : i8
    cf.cond_br %346, ^bb1(%c84_i8_110 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %c32_i64_111 = arith.constant 32 : i64
    %347 = arith.addi %345, %c32_i64_111 : i64
    %c0_i64_112 = arith.constant 0 : i64
    %348 = arith.cmpi slt, %347, %c0_i64_112 : i64
    %c84_i8_113 = arith.constant 84 : i8
    cf.cond_br %348, ^bb1(%c84_i8_113 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %c31_i64_114 = arith.constant 31 : i64
    %c32_i64_115 = arith.constant 32 : i64
    %349 = arith.addi %347, %c31_i64_114 : i64
    %350 = arith.divui %349, %c32_i64_115 : i64
    %351 = arith.muli %350, %c32_i64_115 : i64
    %352 = call @dora_fn_extend_memory(%arg0, %351) : (!llvm.ptr, i64) -> !llvm.ptr
    %353 = llvm.getelementptr %352[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %354 = llvm.load %353 : !llvm.ptr -> !llvm.ptr
    %355 = llvm.getelementptr %352[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %356 = llvm.load %355 : !llvm.ptr -> i8
    %c0_i8_116 = arith.constant 0 : i8
    %357 = arith.cmpi ne, %356, %c0_i8_116 : i8
    cf.cond_br %357, ^bb1(%356 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %358 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %354, %358 : !llvm.ptr, !llvm.ptr
    %359 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %351, %359 : i64, !llvm.ptr
    %360 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %361 = llvm.load %360 : !llvm.ptr -> !llvm.ptr
    %362 = llvm.getelementptr %361[%345] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %363 = llvm.intr.bswap(%344)  : (i256) -> i256
    llvm.store %363, %362 {alignment = 1 : i64} : i256, !llvm.ptr
    %364 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_117 = arith.constant 1 : i64
    %365 = arith.addi %364, %c1_i64_117 : i64
    llvm.store %365, %9 : i64, !llvm.ptr
    %366 = arith.cmpi ult, %c1024_i64, %365 : i64
    %c92_i8_118 = arith.constant 92 : i8
    cf.cond_br %366, ^bb1(%c92_i8_118 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %c0_i256_119 = arith.constant 0 : i256
    %367 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %368 = llvm.load %367 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_119, %368 : i256, !llvm.ptr
    %369 = llvm.getelementptr %368[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %369, %367 : !llvm.ptr, !llvm.ptr
    %370 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_120 = arith.constant 1 : i64
    %371 = arith.addi %370, %c1_i64_120 : i64
    llvm.store %371, %9 : i64, !llvm.ptr
    %372 = arith.cmpi ult, %c1024_i64, %371 : i64
    %c92_i8_121 = arith.constant 92 : i8
    cf.cond_br %372, ^bb1(%c92_i8_121 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %c32_i256_122 = arith.constant 32 : i256
    %373 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %374 = llvm.load %373 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_122, %374 : i256, !llvm.ptr
    %375 = llvm.getelementptr %374[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %375, %373 : !llvm.ptr, !llvm.ptr
    %376 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_123 = arith.constant -2 : i64
    %377 = arith.addi %376, %c-2_i64_123 : i64
    llvm.store %377, %9 : i64, !llvm.ptr
    %c2_i64_124 = arith.constant 2 : i64
    %378 = arith.cmpi ult, %376, %c2_i64_124 : i64
    %c91_i8_125 = arith.constant 91 : i8
    cf.cond_br %378, ^bb1(%c91_i8_125 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %379 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %380 = llvm.load %379 : !llvm.ptr -> !llvm.ptr
    %381 = llvm.getelementptr %380[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %382 = llvm.load %381 : !llvm.ptr -> i256
    llvm.store %381, %379 : !llvm.ptr, !llvm.ptr
    %383 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %384 = llvm.load %383 : !llvm.ptr -> !llvm.ptr
    %385 = llvm.getelementptr %384[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %386 = llvm.load %385 : !llvm.ptr -> i256
    llvm.store %385, %383 : !llvm.ptr, !llvm.ptr
    %387 = arith.trunci %382 : i256 to i64
    %c0_i64_126 = arith.constant 0 : i64
    %388 = arith.cmpi slt, %387, %c0_i64_126 : i64
    %c84_i8_127 = arith.constant 84 : i8
    cf.cond_br %388, ^bb1(%c84_i8_127 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %c32_i64_128 = arith.constant 32 : i64
    %389 = arith.addi %387, %c32_i64_128 : i64
    %c0_i64_129 = arith.constant 0 : i64
    %390 = arith.cmpi slt, %389, %c0_i64_129 : i64
    %c84_i8_130 = arith.constant 84 : i8
    cf.cond_br %390, ^bb1(%c84_i8_130 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %c31_i64_131 = arith.constant 31 : i64
    %c32_i64_132 = arith.constant 32 : i64
    %391 = arith.addi %389, %c31_i64_131 : i64
    %392 = arith.divui %391, %c32_i64_132 : i64
    %393 = arith.muli %392, %c32_i64_132 : i64
    %394 = call @dora_fn_extend_memory(%arg0, %393) : (!llvm.ptr, i64) -> !llvm.ptr
    %395 = llvm.getelementptr %394[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %396 = llvm.load %395 : !llvm.ptr -> !llvm.ptr
    %397 = llvm.getelementptr %394[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %398 = llvm.load %397 : !llvm.ptr -> i8
    %c0_i8_133 = arith.constant 0 : i8
    %399 = arith.cmpi ne, %398, %c0_i8_133 : i8
    cf.cond_br %399, ^bb1(%398 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %400 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %396, %400 : !llvm.ptr, !llvm.ptr
    %401 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %393, %401 : i64, !llvm.ptr
    %402 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %403 = llvm.load %402 : !llvm.ptr -> !llvm.ptr
    %404 = llvm.getelementptr %403[%387] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %405 = llvm.intr.bswap(%386)  : (i256) -> i256
    llvm.store %405, %404 {alignment = 1 : i64} : i256, !llvm.ptr
    %406 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_134 = arith.constant 1 : i64
    %407 = arith.addi %406, %c1_i64_134 : i64
    llvm.store %407, %9 : i64, !llvm.ptr
    %408 = arith.cmpi ult, %c1024_i64, %407 : i64
    %c92_i8_135 = arith.constant 92 : i8
    cf.cond_br %408, ^bb1(%c92_i8_135 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %c0_i256_136 = arith.constant 0 : i256
    %409 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %410 = llvm.load %409 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_136, %410 : i256, !llvm.ptr
    %411 = llvm.getelementptr %410[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %411, %409 : !llvm.ptr, !llvm.ptr
    %412 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_137 = arith.constant 1 : i64
    %413 = arith.addi %412, %c1_i64_137 : i64
    llvm.store %413, %9 : i64, !llvm.ptr
    %414 = arith.cmpi ult, %c1024_i64, %413 : i64
    %c92_i8_138 = arith.constant 92 : i8
    cf.cond_br %414, ^bb1(%c92_i8_138 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %c64_i256_139 = arith.constant 64 : i256
    %415 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %416 = llvm.load %415 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256_139, %416 : i256, !llvm.ptr
    %417 = llvm.getelementptr %416[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %417, %415 : !llvm.ptr, !llvm.ptr
    %418 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_140 = arith.constant -2 : i64
    %419 = arith.addi %418, %c-2_i64_140 : i64
    llvm.store %419, %9 : i64, !llvm.ptr
    %c2_i64_141 = arith.constant 2 : i64
    %420 = arith.cmpi ult, %418, %c2_i64_141 : i64
    %c91_i8_142 = arith.constant 91 : i8
    cf.cond_br %420, ^bb1(%c91_i8_142 : i8), ^bb60
  ^bb60:  // pred: ^bb59
    %421 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %422 = llvm.load %421 : !llvm.ptr -> !llvm.ptr
    %423 = llvm.getelementptr %422[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %424 = llvm.load %423 : !llvm.ptr -> i256
    llvm.store %423, %421 : !llvm.ptr, !llvm.ptr
    %425 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %426 = llvm.load %425 : !llvm.ptr -> !llvm.ptr
    %427 = llvm.getelementptr %426[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %428 = llvm.load %427 : !llvm.ptr -> i256
    llvm.store %427, %425 : !llvm.ptr, !llvm.ptr
    %429 = arith.trunci %424 : i256 to i64
    %c0_i64_143 = arith.constant 0 : i64
    %430 = arith.cmpi slt, %429, %c0_i64_143 : i64
    %c84_i8_144 = arith.constant 84 : i8
    cf.cond_br %430, ^bb1(%c84_i8_144 : i8), ^bb61
  ^bb61:  // pred: ^bb60
    %c32_i64_145 = arith.constant 32 : i64
    %431 = arith.addi %429, %c32_i64_145 : i64
    %c0_i64_146 = arith.constant 0 : i64
    %432 = arith.cmpi slt, %431, %c0_i64_146 : i64
    %c84_i8_147 = arith.constant 84 : i8
    cf.cond_br %432, ^bb1(%c84_i8_147 : i8), ^bb62
  ^bb62:  // pred: ^bb61
    %c31_i64_148 = arith.constant 31 : i64
    %c32_i64_149 = arith.constant 32 : i64
    %433 = arith.addi %431, %c31_i64_148 : i64
    %434 = arith.divui %433, %c32_i64_149 : i64
    %435 = arith.muli %434, %c32_i64_149 : i64
    %436 = call @dora_fn_extend_memory(%arg0, %435) : (!llvm.ptr, i64) -> !llvm.ptr
    %437 = llvm.getelementptr %436[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %438 = llvm.load %437 : !llvm.ptr -> !llvm.ptr
    %439 = llvm.getelementptr %436[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %440 = llvm.load %439 : !llvm.ptr -> i8
    %c0_i8_150 = arith.constant 0 : i8
    %441 = arith.cmpi ne, %440, %c0_i8_150 : i8
    cf.cond_br %441, ^bb1(%440 : i8), ^bb63
  ^bb63:  // pred: ^bb62
    %442 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %438, %442 : !llvm.ptr, !llvm.ptr
    %443 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %435, %443 : i64, !llvm.ptr
    %444 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %445 = llvm.load %444 : !llvm.ptr -> !llvm.ptr
    %446 = llvm.getelementptr %445[%429] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %447 = llvm.intr.bswap(%428)  : (i256) -> i256
    llvm.store %447, %446 {alignment = 1 : i64} : i256, !llvm.ptr
    %448 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_151 = arith.constant 1 : i64
    %449 = arith.addi %448, %c1_i64_151 : i64
    llvm.store %449, %9 : i64, !llvm.ptr
    %450 = arith.cmpi ult, %c1024_i64, %449 : i64
    %c92_i8_152 = arith.constant 92 : i8
    cf.cond_br %450, ^bb1(%c92_i8_152 : i8), ^bb64
  ^bb64:  // pred: ^bb63
    %c32_i256_153 = arith.constant 32 : i256
    %451 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %452 = llvm.load %451 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_153, %452 : i256, !llvm.ptr
    %453 = llvm.getelementptr %452[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %453, %451 : !llvm.ptr, !llvm.ptr
    %454 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_154 = arith.constant 1 : i64
    %455 = arith.addi %454, %c1_i64_154 : i64
    llvm.store %455, %9 : i64, !llvm.ptr
    %456 = arith.cmpi ult, %c1024_i64, %455 : i64
    %c92_i8_155 = arith.constant 92 : i8
    cf.cond_br %456, ^bb1(%c92_i8_155 : i8), ^bb65
  ^bb65:  // pred: ^bb64
    %c0_i256_156 = arith.constant 0 : i256
    %457 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %458 = llvm.load %457 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_156, %458 : i256, !llvm.ptr
    %459 = llvm.getelementptr %458[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %459, %457 : !llvm.ptr, !llvm.ptr
    %460 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_157 = arith.constant 1 : i64
    %461 = arith.addi %460, %c1_i64_157 : i64
    llvm.store %461, %9 : i64, !llvm.ptr
    %462 = arith.cmpi ult, %c1024_i64, %461 : i64
    %c92_i8_158 = arith.constant 92 : i8
    cf.cond_br %462, ^bb1(%c92_i8_158 : i8), ^bb66
  ^bb66:  // pred: ^bb65
    %c0_i256_159 = arith.constant 0 : i256
    %463 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %464 = llvm.load %463 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_159, %464 : i256, !llvm.ptr
    %465 = llvm.getelementptr %464[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %465, %463 : !llvm.ptr, !llvm.ptr
    %466 = llvm.load %9 : !llvm.ptr -> i64
    %c-3_i64 = arith.constant -3 : i64
    %467 = arith.addi %466, %c-3_i64 : i64
    llvm.store %467, %9 : i64, !llvm.ptr
    %c3_i64_160 = arith.constant 3 : i64
    %468 = arith.cmpi ult, %466, %c3_i64_160 : i64
    %c91_i8_161 = arith.constant 91 : i8
    cf.cond_br %468, ^bb1(%c91_i8_161 : i8), ^bb67
  ^bb67:  // pred: ^bb66
    %469 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %470 = llvm.load %469 : !llvm.ptr -> !llvm.ptr
    %471 = llvm.getelementptr %470[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %472 = llvm.load %471 : !llvm.ptr -> i256
    llvm.store %471, %469 : !llvm.ptr, !llvm.ptr
    %473 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %474 = llvm.load %473 : !llvm.ptr -> !llvm.ptr
    %475 = llvm.getelementptr %474[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %476 = llvm.load %475 : !llvm.ptr -> i256
    llvm.store %475, %473 : !llvm.ptr, !llvm.ptr
    %477 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %478 = llvm.load %477 : !llvm.ptr -> !llvm.ptr
    %479 = llvm.getelementptr %478[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %480 = llvm.load %479 : !llvm.ptr -> i256
    llvm.store %479, %477 : !llvm.ptr, !llvm.ptr
    %481 = arith.trunci %472 : i256 to i64
    %c0_i64_162 = arith.constant 0 : i64
    %482 = arith.cmpi slt, %481, %c0_i64_162 : i64
    %c84_i8_163 = arith.constant 84 : i8
    cf.cond_br %482, ^bb1(%c84_i8_163 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %483 = arith.trunci %476 : i256 to i64
    %c0_i64_164 = arith.constant 0 : i64
    %484 = arith.cmpi slt, %483, %c0_i64_164 : i64
    %c84_i8_165 = arith.constant 84 : i8
    cf.cond_br %484, ^bb1(%c84_i8_165 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %485 = arith.trunci %480 : i256 to i64
    %c0_i64_166 = arith.constant 0 : i64
    %486 = arith.cmpi slt, %485, %c0_i64_166 : i64
    %c84_i8_167 = arith.constant 84 : i8
    cf.cond_br %486, ^bb1(%c84_i8_167 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %487 = arith.addi %481, %485 : i64
    %c0_i64_168 = arith.constant 0 : i64
    %488 = arith.cmpi slt, %487, %c0_i64_168 : i64
    %c84_i8_169 = arith.constant 84 : i8
    cf.cond_br %488, ^bb1(%c84_i8_169 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %c31_i64_170 = arith.constant 31 : i64
    %c32_i64_171 = arith.constant 32 : i64
    %489 = arith.addi %487, %c31_i64_170 : i64
    %490 = arith.divui %489, %c32_i64_171 : i64
    %491 = arith.muli %490, %c32_i64_171 : i64
    %492 = call @dora_fn_extend_memory(%arg0, %491) : (!llvm.ptr, i64) -> !llvm.ptr
    %493 = llvm.getelementptr %492[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %494 = llvm.load %493 : !llvm.ptr -> !llvm.ptr
    %495 = llvm.getelementptr %492[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %496 = llvm.load %495 : !llvm.ptr -> i8
    %c0_i8_172 = arith.constant 0 : i8
    %497 = arith.cmpi ne, %496, %c0_i8_172 : i8
    cf.cond_br %497, ^bb1(%496 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %498 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %494, %498 : !llvm.ptr, !llvm.ptr
    %499 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %491, %499 : i64, !llvm.ptr
    %500 = call @dora_fn_return_data_copy(%arg0, %481, %483, %485) : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr
    %501 = llvm.getelementptr %500[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %502 = llvm.load %501 : !llvm.ptr -> i8
    %c0_i8_173 = arith.constant 0 : i8
    %503 = arith.cmpi ne, %502, %c0_i8_173 : i8
    cf.cond_br %503, ^bb1(%502 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    cf.br ^bb74
  ^bb74:  // pred: ^bb73
    %c0_i64_174 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %504 = call @dora_fn_write_result(%arg0, %c0_i64_174, %c0_i64_174, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
