---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 127 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb14, ^bb15, ^bb18, ^bb19, ^bb22, ^bb23, ^bb25, ^bb28, ^bb29, ^bb32, ^bb33, ^bb36, ^bb37, ^bb39, ^bb42, ^bb43, ^bb46, ^bb47, ^bb50, ^bb51, ^bb54, ^bb55, ^bb57, ^bb58, ^bb59, ^bb61, ^bb62, ^bb63, ^bb65, ^bb66, ^bb69, ^bb70, ^bb73, ^bb74, ^bb77, ^bb78, ^bb81, ^bb82, ^bb85, ^bb86, ^bb89, ^bb90, ^bb92, ^bb93, ^bb94, ^bb95, ^bb96, ^bb99, ^bb100, ^bb102, ^bb103, ^bb106, ^bb107, ^bb110, ^bb111, ^bb114, ^bb115, ^bb118, ^bb119, ^bb121, ^bb124, ^bb125, ^bb128, ^bb129, ^bb132, ^bb133, ^bb135, ^bb138, ^bb139, ^bb142, ^bb143, ^bb146, ^bb147, ^bb149, ^bb152, ^bb153, ^bb156, ^bb157, ^bb160, ^bb161, ^bb164, ^bb165, ^bb167, ^bb168, ^bb169, ^bb170, ^bb172, ^bb174, ^bb175, ^bb178, ^bb179, ^bb180, ^bb182, ^bb183, ^bb184, ^bb186, ^bb187, ^bb188, ^bb190, ^bb191, ^bb192, ^bb193, ^bb194, ^bb196, ^bb197, ^bb198, ^bb200, ^bb201, ^bb202, ^bb204, ^bb205, ^bb206, ^bb208, ^bb209, ^bb210, ^bb212, ^bb213, ^bb214, ^bb216, ^bb217, ^bb218
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb14
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %46 = arith.cmpi ne, %c32_i64, %c0_i64_8 : i64
    cf.cond_br %46, ^bb178, ^bb13
  ^bb13:  // 2 preds: ^bb12, ^bb181
    %47 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> !llvm.ptr
    %49 = llvm.getelementptr %48[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %50 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %50, %49 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb19
  ^bb14:  // pred: ^bb16
    %51 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_9 = arith.constant 1024 : i64
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %53 = arith.addi %52, %c-2_i64 : i64
    llvm.store %53, %51 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %54 = arith.cmpi ult, %52, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %54, ^bb1(%c91_i8 : i8), ^bb11
  ^bb15:  // pred: ^bb7
    %55 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %56 = llvm.load %55 : !llvm.ptr -> i64
    %c3_i64_10 = arith.constant 3 : i64
    %57 = arith.cmpi uge, %56, %c3_i64_10 : i64
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %57, ^bb16, ^bb1(%c80_i8_11 : i8)
  ^bb16:  // pred: ^bb15
    %58 = arith.subi %56, %c3_i64_10 : i64
    llvm.store %58, %55 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb17:  // pred: ^bb18
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %59 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %60 = llvm.load %59 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %60 : i256, !llvm.ptr
    %61 = llvm.getelementptr %60[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %61, %59 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb18:  // pred: ^bb20
    %62 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_12 = arith.constant 1024 : i64
    %63 = llvm.load %62 : !llvm.ptr -> i64
    %c1_i64_13 = arith.constant 1 : i64
    %64 = arith.addi %63, %c1_i64_13 : i64
    llvm.store %64, %62 : i64, !llvm.ptr
    %65 = arith.cmpi ult, %c1024_i64_12, %64 : i64
    %c92_i8_14 = arith.constant 92 : i8
    cf.cond_br %65, ^bb1(%c92_i8_14 : i8), ^bb17
  ^bb19:  // pred: ^bb13
    %66 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %67 = llvm.load %66 : !llvm.ptr -> i64
    %c3_i64_15 = arith.constant 3 : i64
    %68 = arith.cmpi uge, %67, %c3_i64_15 : i64
    %c80_i8_16 = arith.constant 80 : i8
    cf.cond_br %68, ^bb20, ^bb1(%c80_i8_16 : i8)
  ^bb20:  // pred: ^bb19
    %69 = arith.subi %67, %c3_i64_15 : i64
    llvm.store %69, %66 : i64, !llvm.ptr
    cf.br ^bb18
  ^bb21:  // pred: ^bb22
    %c32_i256 = arith.constant 32 : i256
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %71 : i256, !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb22:  // pred: ^bb24
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_17 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c1_i64_18 = arith.constant 1 : i64
    %75 = arith.addi %74, %c1_i64_18 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %76 = arith.cmpi ult, %c1024_i64_17, %75 : i64
    %c92_i8_19 = arith.constant 92 : i8
    cf.cond_br %76, ^bb1(%c92_i8_19 : i8), ^bb21
  ^bb23:  // pred: ^bb17
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_20 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_20 : i64
    %c80_i8_21 = arith.constant 80 : i8
    cf.cond_br %79, ^bb24, ^bb1(%c80_i8_21 : i8)
  ^bb24:  // pred: ^bb23
    %80 = arith.subi %78, %c3_i64_20 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb22
  ^bb25:  // pred: ^bb28
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    %83 = llvm.getelementptr %82[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %84 = llvm.load %83 : !llvm.ptr -> i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    %85 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %86 = llvm.load %85 : !llvm.ptr -> !llvm.ptr
    %87 = llvm.getelementptr %86[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %88 = llvm.load %87 : !llvm.ptr -> i256
    llvm.store %87, %85 : !llvm.ptr, !llvm.ptr
    %89 = arith.trunci %84 : i256 to i64
    %c0_i64_22 = arith.constant 0 : i64
    %90 = arith.cmpi slt, %89, %c0_i64_22 : i64
    %c84_i8_23 = arith.constant 84 : i8
    cf.cond_br %90, ^bb1(%c84_i8_23 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %c32_i64_24 = arith.constant 32 : i64
    %c0_i64_25 = arith.constant 0 : i64
    %91 = arith.cmpi ne, %c32_i64_24, %c0_i64_25 : i64
    cf.cond_br %91, ^bb182, ^bb27
  ^bb27:  // 2 preds: ^bb26, ^bb185
    %92 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    %94 = llvm.getelementptr %93[%89] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %95 = llvm.intr.bswap(%88)  : (i256) -> i256
    llvm.store %95, %94 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb33
  ^bb28:  // pred: ^bb30
    %96 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_26 = arith.constant 1024 : i64
    %97 = llvm.load %96 : !llvm.ptr -> i64
    %c-2_i64_27 = arith.constant -2 : i64
    %98 = arith.addi %97, %c-2_i64_27 : i64
    llvm.store %98, %96 : i64, !llvm.ptr
    %c2_i64_28 = arith.constant 2 : i64
    %99 = arith.cmpi ult, %97, %c2_i64_28 : i64
    %c91_i8_29 = arith.constant 91 : i8
    cf.cond_br %99, ^bb1(%c91_i8_29 : i8), ^bb25
  ^bb29:  // pred: ^bb21
    %100 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> i64
    %c3_i64_30 = arith.constant 3 : i64
    %102 = arith.cmpi uge, %101, %c3_i64_30 : i64
    %c80_i8_31 = arith.constant 80 : i8
    cf.cond_br %102, ^bb30, ^bb1(%c80_i8_31 : i8)
  ^bb30:  // pred: ^bb29
    %103 = arith.subi %101, %c3_i64_30 : i64
    llvm.store %103, %100 : i64, !llvm.ptr
    cf.br ^bb28
  ^bb31:  // pred: ^bb32
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %104 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %105 : i256, !llvm.ptr
    %106 = llvm.getelementptr %105[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %106, %104 : !llvm.ptr, !llvm.ptr
    cf.br ^bb37
  ^bb32:  // pred: ^bb34
    %107 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_32 = arith.constant 1024 : i64
    %108 = llvm.load %107 : !llvm.ptr -> i64
    %c1_i64_33 = arith.constant 1 : i64
    %109 = arith.addi %108, %c1_i64_33 : i64
    llvm.store %109, %107 : i64, !llvm.ptr
    %110 = arith.cmpi ult, %c1024_i64_32, %109 : i64
    %c92_i8_34 = arith.constant 92 : i8
    cf.cond_br %110, ^bb1(%c92_i8_34 : i8), ^bb31
  ^bb33:  // pred: ^bb27
    %111 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> i64
    %c3_i64_35 = arith.constant 3 : i64
    %113 = arith.cmpi uge, %112, %c3_i64_35 : i64
    %c80_i8_36 = arith.constant 80 : i8
    cf.cond_br %113, ^bb34, ^bb1(%c80_i8_36 : i8)
  ^bb34:  // pred: ^bb33
    %114 = arith.subi %112, %c3_i64_35 : i64
    llvm.store %114, %111 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb36
    %c64_i256 = arith.constant 64 : i256
    %115 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %116 = llvm.load %115 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %116 : i256, !llvm.ptr
    %117 = llvm.getelementptr %116[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %117, %115 : !llvm.ptr, !llvm.ptr
    cf.br ^bb43
  ^bb36:  // pred: ^bb38
    %118 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_37 = arith.constant 1024 : i64
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c1_i64_38 = arith.constant 1 : i64
    %120 = arith.addi %119, %c1_i64_38 : i64
    llvm.store %120, %118 : i64, !llvm.ptr
    %121 = arith.cmpi ult, %c1024_i64_37, %120 : i64
    %c92_i8_39 = arith.constant 92 : i8
    cf.cond_br %121, ^bb1(%c92_i8_39 : i8), ^bb35
  ^bb37:  // pred: ^bb31
    %122 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %c3_i64_40 = arith.constant 3 : i64
    %124 = arith.cmpi uge, %123, %c3_i64_40 : i64
    %c80_i8_41 = arith.constant 80 : i8
    cf.cond_br %124, ^bb38, ^bb1(%c80_i8_41 : i8)
  ^bb38:  // pred: ^bb37
    %125 = arith.subi %123, %c3_i64_40 : i64
    llvm.store %125, %122 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb42
    %126 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> !llvm.ptr
    %128 = llvm.getelementptr %127[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %129 = llvm.load %128 : !llvm.ptr -> i256
    llvm.store %128, %126 : !llvm.ptr, !llvm.ptr
    %130 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %131 = llvm.load %130 : !llvm.ptr -> !llvm.ptr
    %132 = llvm.getelementptr %131[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %133 = llvm.load %132 : !llvm.ptr -> i256
    llvm.store %132, %130 : !llvm.ptr, !llvm.ptr
    %134 = arith.trunci %129 : i256 to i64
    %c0_i64_42 = arith.constant 0 : i64
    %135 = arith.cmpi slt, %134, %c0_i64_42 : i64
    %c84_i8_43 = arith.constant 84 : i8
    cf.cond_br %135, ^bb1(%c84_i8_43 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %c32_i64_44 = arith.constant 32 : i64
    %c0_i64_45 = arith.constant 0 : i64
    %136 = arith.cmpi ne, %c32_i64_44, %c0_i64_45 : i64
    cf.cond_br %136, ^bb186, ^bb41
  ^bb41:  // 2 preds: ^bb40, ^bb189
    %137 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %138 = llvm.load %137 : !llvm.ptr -> !llvm.ptr
    %139 = llvm.getelementptr %138[%134] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %140 = llvm.intr.bswap(%133)  : (i256) -> i256
    llvm.store %140, %139 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb47
  ^bb42:  // pred: ^bb44
    %141 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_46 = arith.constant 1024 : i64
    %142 = llvm.load %141 : !llvm.ptr -> i64
    %c-2_i64_47 = arith.constant -2 : i64
    %143 = arith.addi %142, %c-2_i64_47 : i64
    llvm.store %143, %141 : i64, !llvm.ptr
    %c2_i64_48 = arith.constant 2 : i64
    %144 = arith.cmpi ult, %142, %c2_i64_48 : i64
    %c91_i8_49 = arith.constant 91 : i8
    cf.cond_br %144, ^bb1(%c91_i8_49 : i8), ^bb39
  ^bb43:  // pred: ^bb35
    %145 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> i64
    %c3_i64_50 = arith.constant 3 : i64
    %147 = arith.cmpi uge, %146, %c3_i64_50 : i64
    %c80_i8_51 = arith.constant 80 : i8
    cf.cond_br %147, ^bb44, ^bb1(%c80_i8_51 : i8)
  ^bb44:  // pred: ^bb43
    %148 = arith.subi %146, %c3_i64_50 : i64
    llvm.store %148, %145 : i64, !llvm.ptr
    cf.br ^bb42
  ^bb45:  // pred: ^bb46
    %c77_i256 = arith.constant 77 : i256
    %149 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %150 : i256, !llvm.ptr
    %151 = llvm.getelementptr %150[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %151, %149 : !llvm.ptr, !llvm.ptr
    cf.br ^bb51
  ^bb46:  // pred: ^bb48
    %152 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_52 = arith.constant 1024 : i64
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %c1_i64_53 = arith.constant 1 : i64
    %154 = arith.addi %153, %c1_i64_53 : i64
    llvm.store %154, %152 : i64, !llvm.ptr
    %155 = arith.cmpi ult, %c1024_i64_52, %154 : i64
    %c92_i8_54 = arith.constant 92 : i8
    cf.cond_br %155, ^bb1(%c92_i8_54 : i8), ^bb45
  ^bb47:  // pred: ^bb41
    %156 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> i64
    %c3_i64_55 = arith.constant 3 : i64
    %158 = arith.cmpi uge, %157, %c3_i64_55 : i64
    %c80_i8_56 = arith.constant 80 : i8
    cf.cond_br %158, ^bb48, ^bb1(%c80_i8_56 : i8)
  ^bb48:  // pred: ^bb47
    %159 = arith.subi %157, %c3_i64_55 : i64
    llvm.store %159, %156 : i64, !llvm.ptr
    cf.br ^bb46
  ^bb49:  // pred: ^bb50
    %c0_i256_57 = arith.constant 0 : i256
    %160 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_57, %161 : i256, !llvm.ptr
    %162 = llvm.getelementptr %161[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    cf.br ^bb55
  ^bb50:  // pred: ^bb52
    %163 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_58 = arith.constant 1024 : i64
    %164 = llvm.load %163 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %165 = arith.addi %164, %c1_i64_59 : i64
    llvm.store %165, %163 : i64, !llvm.ptr
    %166 = arith.cmpi ult, %c1024_i64_58, %165 : i64
    %c92_i8_60 = arith.constant 92 : i8
    cf.cond_br %166, ^bb1(%c92_i8_60 : i8), ^bb49
  ^bb51:  // pred: ^bb45
    %167 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %168 = llvm.load %167 : !llvm.ptr -> i64
    %c3_i64_61 = arith.constant 3 : i64
    %169 = arith.cmpi uge, %168, %c3_i64_61 : i64
    %c80_i8_62 = arith.constant 80 : i8
    cf.cond_br %169, ^bb52, ^bb1(%c80_i8_62 : i8)
  ^bb52:  // pred: ^bb51
    %170 = arith.subi %168, %c3_i64_61 : i64
    llvm.store %170, %167 : i64, !llvm.ptr
    cf.br ^bb50
  ^bb53:  // pred: ^bb54
    %c0_i256_63 = arith.constant 0 : i256
    %171 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %172 = llvm.load %171 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_63, %172 : i256, !llvm.ptr
    %173 = llvm.getelementptr %172[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %173, %171 : !llvm.ptr, !llvm.ptr
    cf.br ^bb66
  ^bb54:  // pred: ^bb56
    %174 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_64 = arith.constant 1024 : i64
    %175 = llvm.load %174 : !llvm.ptr -> i64
    %c1_i64_65 = arith.constant 1 : i64
    %176 = arith.addi %175, %c1_i64_65 : i64
    llvm.store %176, %174 : i64, !llvm.ptr
    %177 = arith.cmpi ult, %c1024_i64_64, %176 : i64
    %c92_i8_66 = arith.constant 92 : i8
    cf.cond_br %177, ^bb1(%c92_i8_66 : i8), ^bb53
  ^bb55:  // pred: ^bb49
    %178 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %179 = llvm.load %178 : !llvm.ptr -> i64
    %c3_i64_67 = arith.constant 3 : i64
    %180 = arith.cmpi uge, %179, %c3_i64_67 : i64
    %c80_i8_68 = arith.constant 80 : i8
    cf.cond_br %180, ^bb56, ^bb1(%c80_i8_68 : i8)
  ^bb56:  // pred: ^bb55
    %181 = arith.subi %179, %c3_i64_67 : i64
    llvm.store %181, %178 : i64, !llvm.ptr
    cf.br ^bb54
  ^bb57:  // pred: ^bb65
    %182 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %183 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    %184 = llvm.getelementptr %183[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %185 = llvm.load %184 : !llvm.ptr -> i256
    llvm.store %184, %182 : !llvm.ptr, !llvm.ptr
    %186 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %187 = llvm.load %186 : !llvm.ptr -> !llvm.ptr
    %188 = llvm.getelementptr %187[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %189 = llvm.load %188 : !llvm.ptr -> i256
    llvm.store %188, %186 : !llvm.ptr, !llvm.ptr
    %190 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %191 = llvm.load %190 : !llvm.ptr -> !llvm.ptr
    %192 = llvm.getelementptr %191[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %193 = llvm.load %192 : !llvm.ptr -> i256
    llvm.store %192, %190 : !llvm.ptr, !llvm.ptr
    %194 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %195 = llvm.load %194 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %195, ^bb1(%c87_i8 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %196 = arith.trunci %189 : i256 to i64
    %c0_i64_69 = arith.constant 0 : i64
    %197 = arith.cmpi slt, %196, %c0_i64_69 : i64
    %c84_i8_70 = arith.constant 84 : i8
    cf.cond_br %197, ^bb1(%c84_i8_70 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %198 = arith.trunci %193 : i256 to i64
    %c0_i64_71 = arith.constant 0 : i64
    %199 = arith.cmpi slt, %198, %c0_i64_71 : i64
    %c84_i8_72 = arith.constant 84 : i8
    cf.cond_br %199, ^bb1(%c84_i8_72 : i8), ^bb60
  ^bb60:  // pred: ^bb59
    %c0_i64_73 = arith.constant 0 : i64
    %200 = arith.cmpi ne, %198, %c0_i64_73 : i64
    cf.cond_br %200, ^bb190, ^bb61
  ^bb61:  // 2 preds: ^bb60, ^bb195
    %c32000_i64 = arith.constant 32000 : i64
    %201 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %202 = llvm.load %201 : !llvm.ptr -> i64
    %203 = arith.cmpi ult, %202, %c32000_i64 : i64
    scf.if %203 {
    } else {
      %830 = arith.subi %202, %c32000_i64 : i64
      llvm.store %830, %201 : i64, !llvm.ptr
    }
    %c80_i8_74 = arith.constant 80 : i8
    cf.cond_br %203, ^bb1(%c80_i8_74 : i8), ^bb62
  ^bb62:  // pred: ^bb61
    %c1_i256 = arith.constant 1 : i256
    %204 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %185, %204 {alignment = 1 : i64} : i256, !llvm.ptr
    %205 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %206 = llvm.load %205 : !llvm.ptr -> i64
    %207 = call @dora_fn_create(%arg0, %198, %196, %204, %206) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %208 = llvm.getelementptr %207[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %209 = llvm.load %208 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %210 = arith.cmpi ne, %209, %c0_i8 : i8
    cf.cond_br %210, ^bb1(%209 : i8), ^bb63
  ^bb63:  // pred: ^bb62
    %211 = llvm.getelementptr %207[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %212 = llvm.load %211 : !llvm.ptr -> i64
    %213 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %214 = llvm.load %213 : !llvm.ptr -> i64
    %215 = arith.cmpi ult, %214, %212 : i64
    scf.if %215 {
    } else {
      %830 = arith.subi %214, %212 : i64
      llvm.store %830, %213 : i64, !llvm.ptr
    }
    %c80_i8_75 = arith.constant 80 : i8
    cf.cond_br %215, ^bb1(%c80_i8_75 : i8), ^bb64
  ^bb64:  // pred: ^bb63
    %216 = llvm.load %204 : !llvm.ptr -> i256
    %217 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %218 = llvm.load %217 : !llvm.ptr -> !llvm.ptr
    llvm.store %216, %218 : i256, !llvm.ptr
    %219 = llvm.getelementptr %218[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %219, %217 : !llvm.ptr, !llvm.ptr
    cf.br ^bb70
  ^bb65:  // pred: ^bb67
    %220 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_76 = arith.constant 1024 : i64
    %221 = llvm.load %220 : !llvm.ptr -> i64
    %c-2_i64_77 = arith.constant -2 : i64
    %222 = arith.addi %221, %c-2_i64_77 : i64
    llvm.store %222, %220 : i64, !llvm.ptr
    %c3_i64_78 = arith.constant 3 : i64
    %223 = arith.cmpi ult, %221, %c3_i64_78 : i64
    %c91_i8_79 = arith.constant 91 : i8
    cf.cond_br %223, ^bb1(%c91_i8_79 : i8), ^bb57
  ^bb66:  // pred: ^bb53
    %224 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %225 = llvm.load %224 : !llvm.ptr -> i64
    %c0_i64_80 = arith.constant 0 : i64
    %226 = arith.cmpi uge, %225, %c0_i64_80 : i64
    %c80_i8_81 = arith.constant 80 : i8
    cf.cond_br %226, ^bb67, ^bb1(%c80_i8_81 : i8)
  ^bb67:  // pred: ^bb66
    %227 = arith.subi %225, %c0_i64_80 : i64
    llvm.store %227, %224 : i64, !llvm.ptr
    cf.br ^bb65
  ^bb68:  // pred: ^bb69
    %c0_i256_82 = arith.constant 0 : i256
    %228 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %229 = llvm.load %228 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_82, %229 : i256, !llvm.ptr
    %230 = llvm.getelementptr %229[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %230, %228 : !llvm.ptr, !llvm.ptr
    cf.br ^bb74
  ^bb69:  // pred: ^bb71
    %231 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_83 = arith.constant 1024 : i64
    %232 = llvm.load %231 : !llvm.ptr -> i64
    %c1_i64_84 = arith.constant 1 : i64
    %233 = arith.addi %232, %c1_i64_84 : i64
    llvm.store %233, %231 : i64, !llvm.ptr
    %234 = arith.cmpi ult, %c1024_i64_83, %233 : i64
    %c92_i8_85 = arith.constant 92 : i8
    cf.cond_br %234, ^bb1(%c92_i8_85 : i8), ^bb68
  ^bb70:  // pred: ^bb64
    %235 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %236 = llvm.load %235 : !llvm.ptr -> i64
    %c3_i64_86 = arith.constant 3 : i64
    %237 = arith.cmpi uge, %236, %c3_i64_86 : i64
    %c80_i8_87 = arith.constant 80 : i8
    cf.cond_br %237, ^bb71, ^bb1(%c80_i8_87 : i8)
  ^bb71:  // pred: ^bb70
    %238 = arith.subi %236, %c3_i64_86 : i64
    llvm.store %238, %235 : i64, !llvm.ptr
    cf.br ^bb69
  ^bb72:  // pred: ^bb73
    %c0_i256_88 = arith.constant 0 : i256
    %239 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %240 = llvm.load %239 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_88, %240 : i256, !llvm.ptr
    %241 = llvm.getelementptr %240[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %241, %239 : !llvm.ptr, !llvm.ptr
    cf.br ^bb78
  ^bb73:  // pred: ^bb75
    %242 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_89 = arith.constant 1024 : i64
    %243 = llvm.load %242 : !llvm.ptr -> i64
    %c1_i64_90 = arith.constant 1 : i64
    %244 = arith.addi %243, %c1_i64_90 : i64
    llvm.store %244, %242 : i64, !llvm.ptr
    %245 = arith.cmpi ult, %c1024_i64_89, %244 : i64
    %c92_i8_91 = arith.constant 92 : i8
    cf.cond_br %245, ^bb1(%c92_i8_91 : i8), ^bb72
  ^bb74:  // pred: ^bb68
    %246 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %247 = llvm.load %246 : !llvm.ptr -> i64
    %c3_i64_92 = arith.constant 3 : i64
    %248 = arith.cmpi uge, %247, %c3_i64_92 : i64
    %c80_i8_93 = arith.constant 80 : i8
    cf.cond_br %248, ^bb75, ^bb1(%c80_i8_93 : i8)
  ^bb75:  // pred: ^bb74
    %249 = arith.subi %247, %c3_i64_92 : i64
    llvm.store %249, %246 : i64, !llvm.ptr
    cf.br ^bb73
  ^bb76:  // pred: ^bb77
    %c0_i256_94 = arith.constant 0 : i256
    %250 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %251 = llvm.load %250 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_94, %251 : i256, !llvm.ptr
    %252 = llvm.getelementptr %251[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %252, %250 : !llvm.ptr, !llvm.ptr
    cf.br ^bb82
  ^bb77:  // pred: ^bb79
    %253 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_95 = arith.constant 1024 : i64
    %254 = llvm.load %253 : !llvm.ptr -> i64
    %c1_i64_96 = arith.constant 1 : i64
    %255 = arith.addi %254, %c1_i64_96 : i64
    llvm.store %255, %253 : i64, !llvm.ptr
    %256 = arith.cmpi ult, %c1024_i64_95, %255 : i64
    %c92_i8_97 = arith.constant 92 : i8
    cf.cond_br %256, ^bb1(%c92_i8_97 : i8), ^bb76
  ^bb78:  // pred: ^bb72
    %257 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %258 = llvm.load %257 : !llvm.ptr -> i64
    %c3_i64_98 = arith.constant 3 : i64
    %259 = arith.cmpi uge, %258, %c3_i64_98 : i64
    %c80_i8_99 = arith.constant 80 : i8
    cf.cond_br %259, ^bb79, ^bb1(%c80_i8_99 : i8)
  ^bb79:  // pred: ^bb78
    %260 = arith.subi %258, %c3_i64_98 : i64
    llvm.store %260, %257 : i64, !llvm.ptr
    cf.br ^bb77
  ^bb80:  // pred: ^bb81
    %c0_i256_100 = arith.constant 0 : i256
    %261 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %262 = llvm.load %261 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_100, %262 : i256, !llvm.ptr
    %263 = llvm.getelementptr %262[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %263, %261 : !llvm.ptr, !llvm.ptr
    cf.br ^bb86
  ^bb81:  // pred: ^bb83
    %264 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_101 = arith.constant 1024 : i64
    %265 = llvm.load %264 : !llvm.ptr -> i64
    %c1_i64_102 = arith.constant 1 : i64
    %266 = arith.addi %265, %c1_i64_102 : i64
    llvm.store %266, %264 : i64, !llvm.ptr
    %267 = arith.cmpi ult, %c1024_i64_101, %266 : i64
    %c92_i8_103 = arith.constant 92 : i8
    cf.cond_br %267, ^bb1(%c92_i8_103 : i8), ^bb80
  ^bb82:  // pred: ^bb76
    %268 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %269 = llvm.load %268 : !llvm.ptr -> i64
    %c3_i64_104 = arith.constant 3 : i64
    %270 = arith.cmpi uge, %269, %c3_i64_104 : i64
    %c80_i8_105 = arith.constant 80 : i8
    cf.cond_br %270, ^bb83, ^bb1(%c80_i8_105 : i8)
  ^bb83:  // pred: ^bb82
    %271 = arith.subi %269, %c3_i64_104 : i64
    llvm.store %271, %268 : i64, !llvm.ptr
    cf.br ^bb81
  ^bb84:  // pred: ^bb85
    %272 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %273 = llvm.load %272 : !llvm.ptr -> !llvm.ptr
    %274 = llvm.getelementptr %273[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %275 = llvm.load %274 : !llvm.ptr -> i256
    %276 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %277 = llvm.load %276 : !llvm.ptr -> !llvm.ptr
    llvm.store %275, %277 : i256, !llvm.ptr
    %278 = llvm.getelementptr %277[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %278, %276 : !llvm.ptr, !llvm.ptr
    cf.br ^bb90
  ^bb85:  // pred: ^bb87
    %279 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_106 = arith.constant 1024 : i64
    %280 = llvm.load %279 : !llvm.ptr -> i64
    %c1_i64_107 = arith.constant 1 : i64
    %281 = arith.addi %280, %c1_i64_107 : i64
    llvm.store %281, %279 : i64, !llvm.ptr
    %282 = arith.cmpi ult, %c1024_i64_106, %281 : i64
    %c92_i8_108 = arith.constant 92 : i8
    cf.cond_br %282, ^bb1(%c92_i8_108 : i8), ^bb84
  ^bb86:  // pred: ^bb80
    %283 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %284 = llvm.load %283 : !llvm.ptr -> i64
    %c3_i64_109 = arith.constant 3 : i64
    %285 = arith.cmpi uge, %284, %c3_i64_109 : i64
    %c80_i8_110 = arith.constant 80 : i8
    cf.cond_br %285, ^bb87, ^bb1(%c80_i8_110 : i8)
  ^bb87:  // pred: ^bb86
    %286 = arith.subi %284, %c3_i64_109 : i64
    llvm.store %286, %283 : i64, !llvm.ptr
    cf.br ^bb85
  ^bb88:  // pred: ^bb89
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %287 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %288 = llvm.load %287 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %288 : i256, !llvm.ptr
    %289 = llvm.getelementptr %288[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %289, %287 : !llvm.ptr, !llvm.ptr
    cf.br ^bb103
  ^bb89:  // pred: ^bb91
    %290 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_111 = arith.constant 1024 : i64
    %291 = llvm.load %290 : !llvm.ptr -> i64
    %c1_i64_112 = arith.constant 1 : i64
    %292 = arith.addi %291, %c1_i64_112 : i64
    llvm.store %292, %290 : i64, !llvm.ptr
    %293 = arith.cmpi ult, %c1024_i64_111, %292 : i64
    %c92_i8_113 = arith.constant 92 : i8
    cf.cond_br %293, ^bb1(%c92_i8_113 : i8), ^bb88
  ^bb90:  // pred: ^bb84
    %294 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %295 = llvm.load %294 : !llvm.ptr -> i64
    %c3_i64_114 = arith.constant 3 : i64
    %296 = arith.cmpi uge, %295, %c3_i64_114 : i64
    %c80_i8_115 = arith.constant 80 : i8
    cf.cond_br %296, ^bb91, ^bb1(%c80_i8_115 : i8)
  ^bb91:  // pred: ^bb90
    %297 = arith.subi %295, %c3_i64_114 : i64
    llvm.store %297, %294 : i64, !llvm.ptr
    cf.br ^bb89
  ^bb92:  // pred: ^bb102
    %298 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %299 = llvm.load %298 : !llvm.ptr -> !llvm.ptr
    %300 = llvm.getelementptr %299[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %301 = llvm.load %300 : !llvm.ptr -> i256
    llvm.store %300, %298 : !llvm.ptr, !llvm.ptr
    %302 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %303 = llvm.load %302 : !llvm.ptr -> !llvm.ptr
    %304 = llvm.getelementptr %303[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %305 = llvm.load %304 : !llvm.ptr -> i256
    llvm.store %304, %302 : !llvm.ptr, !llvm.ptr
    %306 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %307 = llvm.load %306 : !llvm.ptr -> !llvm.ptr
    %308 = llvm.getelementptr %307[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %309 = llvm.load %308 : !llvm.ptr -> i256
    llvm.store %308, %306 : !llvm.ptr, !llvm.ptr
    %310 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %311 = llvm.load %310 : !llvm.ptr -> !llvm.ptr
    %312 = llvm.getelementptr %311[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %313 = llvm.load %312 : !llvm.ptr -> i256
    llvm.store %312, %310 : !llvm.ptr, !llvm.ptr
    %314 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %315 = llvm.load %314 : !llvm.ptr -> !llvm.ptr
    %316 = llvm.getelementptr %315[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %317 = llvm.load %316 : !llvm.ptr -> i256
    llvm.store %316, %314 : !llvm.ptr, !llvm.ptr
    %318 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %319 = llvm.load %318 : !llvm.ptr -> !llvm.ptr
    %320 = llvm.getelementptr %319[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %321 = llvm.load %320 : !llvm.ptr -> i256
    llvm.store %320, %318 : !llvm.ptr, !llvm.ptr
    %c0_i256_116 = arith.constant 0 : i256
    %322 = arith.trunci %301 : i256 to i64
    %c0_i64_117 = arith.constant 0 : i64
    %323 = arith.cmpi slt, %322, %c0_i64_117 : i64
    %c84_i8_118 = arith.constant 84 : i8
    cf.cond_br %323, ^bb1(%c84_i8_118 : i8), ^bb93
  ^bb93:  // pred: ^bb92
    %324 = arith.trunci %309 : i256 to i64
    %c0_i64_119 = arith.constant 0 : i64
    %325 = arith.cmpi slt, %324, %c0_i64_119 : i64
    %c84_i8_120 = arith.constant 84 : i8
    cf.cond_br %325, ^bb1(%c84_i8_120 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %326 = arith.trunci %313 : i256 to i64
    %c0_i64_121 = arith.constant 0 : i64
    %327 = arith.cmpi slt, %326, %c0_i64_121 : i64
    %c84_i8_122 = arith.constant 84 : i8
    cf.cond_br %327, ^bb1(%c84_i8_122 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %328 = arith.trunci %317 : i256 to i64
    %c0_i64_123 = arith.constant 0 : i64
    %329 = arith.cmpi slt, %328, %c0_i64_123 : i64
    %c84_i8_124 = arith.constant 84 : i8
    cf.cond_br %329, ^bb1(%c84_i8_124 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %330 = arith.trunci %321 : i256 to i64
    %c0_i64_125 = arith.constant 0 : i64
    %331 = arith.cmpi slt, %330, %c0_i64_125 : i64
    %c84_i8_126 = arith.constant 84 : i8
    cf.cond_br %331, ^bb1(%c84_i8_126 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %c0_i64_127 = arith.constant 0 : i64
    %332 = arith.cmpi ne, %326, %c0_i64_127 : i64
    cf.cond_br %332, ^bb196, ^bb98
  ^bb98:  // 2 preds: ^bb97, ^bb199
    %c0_i64_128 = arith.constant 0 : i64
    %333 = arith.cmpi ne, %330, %c0_i64_128 : i64
    cf.cond_br %333, ^bb200, ^bb99
  ^bb99:  // 2 preds: ^bb98, ^bb203
    %334 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %335 = llvm.load %334 : !llvm.ptr -> i64
    %c1_i256_129 = arith.constant 1 : i256
    %336 = llvm.alloca %c1_i256_129 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_116, %336 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_130 = arith.constant 1 : i256
    %337 = llvm.alloca %c1_i256_130 x i256 : (i256) -> !llvm.ptr
    llvm.store %305, %337 {alignment = 1 : i64} : i256, !llvm.ptr
    %c2_i8 = arith.constant 2 : i8
    %338 = call @dora_fn_call(%arg0, %322, %337, %336, %324, %326, %328, %330, %335, %c2_i8) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %339 = llvm.getelementptr %338[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %340 = llvm.load %339 : !llvm.ptr -> i8
    %341 = llvm.getelementptr %338[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %342 = llvm.load %341 : !llvm.ptr -> i8
    %c0_i8_131 = arith.constant 0 : i8
    %343 = arith.cmpi ne, %342, %c0_i8_131 : i8
    cf.cond_br %343, ^bb1(%342 : i8), ^bb100
  ^bb100:  // pred: ^bb99
    %344 = llvm.getelementptr %338[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %345 = llvm.load %344 : !llvm.ptr -> i64
    %346 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %347 = llvm.load %346 : !llvm.ptr -> i64
    %348 = arith.cmpi ult, %347, %345 : i64
    scf.if %348 {
    } else {
      %830 = arith.subi %347, %345 : i64
      llvm.store %830, %346 : i64, !llvm.ptr
    }
    %c80_i8_132 = arith.constant 80 : i8
    cf.cond_br %348, ^bb1(%c80_i8_132 : i8), ^bb101
  ^bb101:  // pred: ^bb100
    %349 = arith.extui %340 : i8 to i256
    %350 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %351 = llvm.load %350 : !llvm.ptr -> !llvm.ptr
    llvm.store %349, %351 : i256, !llvm.ptr
    %352 = llvm.getelementptr %351[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %352, %350 : !llvm.ptr, !llvm.ptr
    cf.br ^bb107
  ^bb102:  // pred: ^bb104
    %353 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_133 = arith.constant 1024 : i64
    %354 = llvm.load %353 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %355 = arith.addi %354, %c-5_i64 : i64
    llvm.store %355, %353 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %356 = arith.cmpi ult, %354, %c6_i64 : i64
    %c91_i8_134 = arith.constant 91 : i8
    cf.cond_br %356, ^bb1(%c91_i8_134 : i8), ^bb92
  ^bb103:  // pred: ^bb88
    %357 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %358 = llvm.load %357 : !llvm.ptr -> i64
    %c0_i64_135 = arith.constant 0 : i64
    %359 = arith.cmpi uge, %358, %c0_i64_135 : i64
    %c80_i8_136 = arith.constant 80 : i8
    cf.cond_br %359, ^bb104, ^bb1(%c80_i8_136 : i8)
  ^bb104:  // pred: ^bb103
    %360 = arith.subi %358, %c0_i64_135 : i64
    llvm.store %360, %357 : i64, !llvm.ptr
    cf.br ^bb102
  ^bb105:  // pred: ^bb106
    %361 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %362 = llvm.load %361 : !llvm.ptr -> !llvm.ptr
    %363 = llvm.getelementptr %362[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %364 = llvm.load %363 : !llvm.ptr -> i256
    llvm.store %363, %361 : !llvm.ptr, !llvm.ptr
    cf.br ^bb111
  ^bb106:  // pred: ^bb108
    %365 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_137 = arith.constant 1024 : i64
    %366 = llvm.load %365 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %367 = arith.addi %366, %c-1_i64 : i64
    llvm.store %367, %365 : i64, !llvm.ptr
    %c1_i64_138 = arith.constant 1 : i64
    %368 = arith.cmpi ult, %366, %c1_i64_138 : i64
    %c91_i8_139 = arith.constant 91 : i8
    cf.cond_br %368, ^bb1(%c91_i8_139 : i8), ^bb105
  ^bb107:  // pred: ^bb101
    %369 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %370 = llvm.load %369 : !llvm.ptr -> i64
    %c2_i64_140 = arith.constant 2 : i64
    %371 = arith.cmpi uge, %370, %c2_i64_140 : i64
    %c80_i8_141 = arith.constant 80 : i8
    cf.cond_br %371, ^bb108, ^bb1(%c80_i8_141 : i8)
  ^bb108:  // pred: ^bb107
    %372 = arith.subi %370, %c2_i64_140 : i64
    llvm.store %372, %369 : i64, !llvm.ptr
    cf.br ^bb106
  ^bb109:  // pred: ^bb110
    %373 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %374 = llvm.load %373 : !llvm.ptr -> !llvm.ptr
    %375 = llvm.getelementptr %374[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %376 = llvm.load %375 : !llvm.ptr -> i256
    llvm.store %375, %373 : !llvm.ptr, !llvm.ptr
    cf.br ^bb115
  ^bb110:  // pred: ^bb112
    %377 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_142 = arith.constant 1024 : i64
    %378 = llvm.load %377 : !llvm.ptr -> i64
    %c-1_i64_143 = arith.constant -1 : i64
    %379 = arith.addi %378, %c-1_i64_143 : i64
    llvm.store %379, %377 : i64, !llvm.ptr
    %c1_i64_144 = arith.constant 1 : i64
    %380 = arith.cmpi ult, %378, %c1_i64_144 : i64
    %c91_i8_145 = arith.constant 91 : i8
    cf.cond_br %380, ^bb1(%c91_i8_145 : i8), ^bb109
  ^bb111:  // pred: ^bb105
    %381 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %382 = llvm.load %381 : !llvm.ptr -> i64
    %c2_i64_146 = arith.constant 2 : i64
    %383 = arith.cmpi uge, %382, %c2_i64_146 : i64
    %c80_i8_147 = arith.constant 80 : i8
    cf.cond_br %383, ^bb112, ^bb1(%c80_i8_147 : i8)
  ^bb112:  // pred: ^bb111
    %384 = arith.subi %382, %c2_i64_146 : i64
    llvm.store %384, %381 : i64, !llvm.ptr
    cf.br ^bb110
  ^bb113:  // pred: ^bb114
    %c0_i256_148 = arith.constant 0 : i256
    %385 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %386 = llvm.load %385 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_148, %386 : i256, !llvm.ptr
    %387 = llvm.getelementptr %386[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %387, %385 : !llvm.ptr, !llvm.ptr
    cf.br ^bb119
  ^bb114:  // pred: ^bb116
    %388 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_149 = arith.constant 1024 : i64
    %389 = llvm.load %388 : !llvm.ptr -> i64
    %c1_i64_150 = arith.constant 1 : i64
    %390 = arith.addi %389, %c1_i64_150 : i64
    llvm.store %390, %388 : i64, !llvm.ptr
    %391 = arith.cmpi ult, %c1024_i64_149, %390 : i64
    %c92_i8_151 = arith.constant 92 : i8
    cf.cond_br %391, ^bb1(%c92_i8_151 : i8), ^bb113
  ^bb115:  // pred: ^bb109
    %392 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %393 = llvm.load %392 : !llvm.ptr -> i64
    %c3_i64_152 = arith.constant 3 : i64
    %394 = arith.cmpi uge, %393, %c3_i64_152 : i64
    %c80_i8_153 = arith.constant 80 : i8
    cf.cond_br %394, ^bb116, ^bb1(%c80_i8_153 : i8)
  ^bb116:  // pred: ^bb115
    %395 = arith.subi %393, %c3_i64_152 : i64
    llvm.store %395, %392 : i64, !llvm.ptr
    cf.br ^bb114
  ^bb117:  // pred: ^bb118
    %c0_i256_154 = arith.constant 0 : i256
    %396 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %397 = llvm.load %396 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_154, %397 : i256, !llvm.ptr
    %398 = llvm.getelementptr %397[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %398, %396 : !llvm.ptr, !llvm.ptr
    cf.br ^bb125
  ^bb118:  // pred: ^bb120
    %399 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_155 = arith.constant 1024 : i64
    %400 = llvm.load %399 : !llvm.ptr -> i64
    %c1_i64_156 = arith.constant 1 : i64
    %401 = arith.addi %400, %c1_i64_156 : i64
    llvm.store %401, %399 : i64, !llvm.ptr
    %402 = arith.cmpi ult, %c1024_i64_155, %401 : i64
    %c92_i8_157 = arith.constant 92 : i8
    cf.cond_br %402, ^bb1(%c92_i8_157 : i8), ^bb117
  ^bb119:  // pred: ^bb113
    %403 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %404 = llvm.load %403 : !llvm.ptr -> i64
    %c3_i64_158 = arith.constant 3 : i64
    %405 = arith.cmpi uge, %404, %c3_i64_158 : i64
    %c80_i8_159 = arith.constant 80 : i8
    cf.cond_br %405, ^bb120, ^bb1(%c80_i8_159 : i8)
  ^bb120:  // pred: ^bb119
    %406 = arith.subi %404, %c3_i64_158 : i64
    llvm.store %406, %403 : i64, !llvm.ptr
    cf.br ^bb118
  ^bb121:  // pred: ^bb124
    %407 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %408 = llvm.load %407 : !llvm.ptr -> !llvm.ptr
    %409 = llvm.getelementptr %408[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %410 = llvm.load %409 : !llvm.ptr -> i256
    llvm.store %409, %407 : !llvm.ptr, !llvm.ptr
    %411 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %412 = llvm.load %411 : !llvm.ptr -> !llvm.ptr
    %413 = llvm.getelementptr %412[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %414 = llvm.load %413 : !llvm.ptr -> i256
    llvm.store %413, %411 : !llvm.ptr, !llvm.ptr
    %415 = arith.trunci %410 : i256 to i64
    %c0_i64_160 = arith.constant 0 : i64
    %416 = arith.cmpi slt, %415, %c0_i64_160 : i64
    %c84_i8_161 = arith.constant 84 : i8
    cf.cond_br %416, ^bb1(%c84_i8_161 : i8), ^bb122
  ^bb122:  // pred: ^bb121
    %c32_i64_162 = arith.constant 32 : i64
    %c0_i64_163 = arith.constant 0 : i64
    %417 = arith.cmpi ne, %c32_i64_162, %c0_i64_163 : i64
    cf.cond_br %417, ^bb204, ^bb123
  ^bb123:  // 2 preds: ^bb122, ^bb207
    %418 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %419 = llvm.load %418 : !llvm.ptr -> !llvm.ptr
    %420 = llvm.getelementptr %419[%415] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %421 = llvm.intr.bswap(%414)  : (i256) -> i256
    llvm.store %421, %420 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb129
  ^bb124:  // pred: ^bb126
    %422 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_164 = arith.constant 1024 : i64
    %423 = llvm.load %422 : !llvm.ptr -> i64
    %c-2_i64_165 = arith.constant -2 : i64
    %424 = arith.addi %423, %c-2_i64_165 : i64
    llvm.store %424, %422 : i64, !llvm.ptr
    %c2_i64_166 = arith.constant 2 : i64
    %425 = arith.cmpi ult, %423, %c2_i64_166 : i64
    %c91_i8_167 = arith.constant 91 : i8
    cf.cond_br %425, ^bb1(%c91_i8_167 : i8), ^bb121
  ^bb125:  // pred: ^bb117
    %426 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %427 = llvm.load %426 : !llvm.ptr -> i64
    %c3_i64_168 = arith.constant 3 : i64
    %428 = arith.cmpi uge, %427, %c3_i64_168 : i64
    %c80_i8_169 = arith.constant 80 : i8
    cf.cond_br %428, ^bb126, ^bb1(%c80_i8_169 : i8)
  ^bb126:  // pred: ^bb125
    %429 = arith.subi %427, %c3_i64_168 : i64
    llvm.store %429, %426 : i64, !llvm.ptr
    cf.br ^bb124
  ^bb127:  // pred: ^bb128
    %c0_i256_170 = arith.constant 0 : i256
    %430 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %431 = llvm.load %430 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_170, %431 : i256, !llvm.ptr
    %432 = llvm.getelementptr %431[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %432, %430 : !llvm.ptr, !llvm.ptr
    cf.br ^bb133
  ^bb128:  // pred: ^bb130
    %433 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_171 = arith.constant 1024 : i64
    %434 = llvm.load %433 : !llvm.ptr -> i64
    %c1_i64_172 = arith.constant 1 : i64
    %435 = arith.addi %434, %c1_i64_172 : i64
    llvm.store %435, %433 : i64, !llvm.ptr
    %436 = arith.cmpi ult, %c1024_i64_171, %435 : i64
    %c92_i8_173 = arith.constant 92 : i8
    cf.cond_br %436, ^bb1(%c92_i8_173 : i8), ^bb127
  ^bb129:  // pred: ^bb123
    %437 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %438 = llvm.load %437 : !llvm.ptr -> i64
    %c3_i64_174 = arith.constant 3 : i64
    %439 = arith.cmpi uge, %438, %c3_i64_174 : i64
    %c80_i8_175 = arith.constant 80 : i8
    cf.cond_br %439, ^bb130, ^bb1(%c80_i8_175 : i8)
  ^bb130:  // pred: ^bb129
    %440 = arith.subi %438, %c3_i64_174 : i64
    llvm.store %440, %437 : i64, !llvm.ptr
    cf.br ^bb128
  ^bb131:  // pred: ^bb132
    %c32_i256_176 = arith.constant 32 : i256
    %441 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %442 = llvm.load %441 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_176, %442 : i256, !llvm.ptr
    %443 = llvm.getelementptr %442[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %443, %441 : !llvm.ptr, !llvm.ptr
    cf.br ^bb139
  ^bb132:  // pred: ^bb134
    %444 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_177 = arith.constant 1024 : i64
    %445 = llvm.load %444 : !llvm.ptr -> i64
    %c1_i64_178 = arith.constant 1 : i64
    %446 = arith.addi %445, %c1_i64_178 : i64
    llvm.store %446, %444 : i64, !llvm.ptr
    %447 = arith.cmpi ult, %c1024_i64_177, %446 : i64
    %c92_i8_179 = arith.constant 92 : i8
    cf.cond_br %447, ^bb1(%c92_i8_179 : i8), ^bb131
  ^bb133:  // pred: ^bb127
    %448 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %449 = llvm.load %448 : !llvm.ptr -> i64
    %c3_i64_180 = arith.constant 3 : i64
    %450 = arith.cmpi uge, %449, %c3_i64_180 : i64
    %c80_i8_181 = arith.constant 80 : i8
    cf.cond_br %450, ^bb134, ^bb1(%c80_i8_181 : i8)
  ^bb134:  // pred: ^bb133
    %451 = arith.subi %449, %c3_i64_180 : i64
    llvm.store %451, %448 : i64, !llvm.ptr
    cf.br ^bb132
  ^bb135:  // pred: ^bb138
    %452 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %453 = llvm.load %452 : !llvm.ptr -> !llvm.ptr
    %454 = llvm.getelementptr %453[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %455 = llvm.load %454 : !llvm.ptr -> i256
    llvm.store %454, %452 : !llvm.ptr, !llvm.ptr
    %456 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %457 = llvm.load %456 : !llvm.ptr -> !llvm.ptr
    %458 = llvm.getelementptr %457[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %459 = llvm.load %458 : !llvm.ptr -> i256
    llvm.store %458, %456 : !llvm.ptr, !llvm.ptr
    %460 = arith.trunci %455 : i256 to i64
    %c0_i64_182 = arith.constant 0 : i64
    %461 = arith.cmpi slt, %460, %c0_i64_182 : i64
    %c84_i8_183 = arith.constant 84 : i8
    cf.cond_br %461, ^bb1(%c84_i8_183 : i8), ^bb136
  ^bb136:  // pred: ^bb135
    %c32_i64_184 = arith.constant 32 : i64
    %c0_i64_185 = arith.constant 0 : i64
    %462 = arith.cmpi ne, %c32_i64_184, %c0_i64_185 : i64
    cf.cond_br %462, ^bb208, ^bb137
  ^bb137:  // 2 preds: ^bb136, ^bb211
    %463 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %464 = llvm.load %463 : !llvm.ptr -> !llvm.ptr
    %465 = llvm.getelementptr %464[%460] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %466 = llvm.intr.bswap(%459)  : (i256) -> i256
    llvm.store %466, %465 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb143
  ^bb138:  // pred: ^bb140
    %467 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_186 = arith.constant 1024 : i64
    %468 = llvm.load %467 : !llvm.ptr -> i64
    %c-2_i64_187 = arith.constant -2 : i64
    %469 = arith.addi %468, %c-2_i64_187 : i64
    llvm.store %469, %467 : i64, !llvm.ptr
    %c2_i64_188 = arith.constant 2 : i64
    %470 = arith.cmpi ult, %468, %c2_i64_188 : i64
    %c91_i8_189 = arith.constant 91 : i8
    cf.cond_br %470, ^bb1(%c91_i8_189 : i8), ^bb135
  ^bb139:  // pred: ^bb131
    %471 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %472 = llvm.load %471 : !llvm.ptr -> i64
    %c3_i64_190 = arith.constant 3 : i64
    %473 = arith.cmpi uge, %472, %c3_i64_190 : i64
    %c80_i8_191 = arith.constant 80 : i8
    cf.cond_br %473, ^bb140, ^bb1(%c80_i8_191 : i8)
  ^bb140:  // pred: ^bb139
    %474 = arith.subi %472, %c3_i64_190 : i64
    llvm.store %474, %471 : i64, !llvm.ptr
    cf.br ^bb138
  ^bb141:  // pred: ^bb142
    %c0_i256_192 = arith.constant 0 : i256
    %475 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %476 = llvm.load %475 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_192, %476 : i256, !llvm.ptr
    %477 = llvm.getelementptr %476[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %477, %475 : !llvm.ptr, !llvm.ptr
    cf.br ^bb147
  ^bb142:  // pred: ^bb144
    %478 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_193 = arith.constant 1024 : i64
    %479 = llvm.load %478 : !llvm.ptr -> i64
    %c1_i64_194 = arith.constant 1 : i64
    %480 = arith.addi %479, %c1_i64_194 : i64
    llvm.store %480, %478 : i64, !llvm.ptr
    %481 = arith.cmpi ult, %c1024_i64_193, %480 : i64
    %c92_i8_195 = arith.constant 92 : i8
    cf.cond_br %481, ^bb1(%c92_i8_195 : i8), ^bb141
  ^bb143:  // pred: ^bb137
    %482 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %483 = llvm.load %482 : !llvm.ptr -> i64
    %c3_i64_196 = arith.constant 3 : i64
    %484 = arith.cmpi uge, %483, %c3_i64_196 : i64
    %c80_i8_197 = arith.constant 80 : i8
    cf.cond_br %484, ^bb144, ^bb1(%c80_i8_197 : i8)
  ^bb144:  // pred: ^bb143
    %485 = arith.subi %483, %c3_i64_196 : i64
    llvm.store %485, %482 : i64, !llvm.ptr
    cf.br ^bb142
  ^bb145:  // pred: ^bb146
    %c64_i256_198 = arith.constant 64 : i256
    %486 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %487 = llvm.load %486 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256_198, %487 : i256, !llvm.ptr
    %488 = llvm.getelementptr %487[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %488, %486 : !llvm.ptr, !llvm.ptr
    cf.br ^bb153
  ^bb146:  // pred: ^bb148
    %489 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_199 = arith.constant 1024 : i64
    %490 = llvm.load %489 : !llvm.ptr -> i64
    %c1_i64_200 = arith.constant 1 : i64
    %491 = arith.addi %490, %c1_i64_200 : i64
    llvm.store %491, %489 : i64, !llvm.ptr
    %492 = arith.cmpi ult, %c1024_i64_199, %491 : i64
    %c92_i8_201 = arith.constant 92 : i8
    cf.cond_br %492, ^bb1(%c92_i8_201 : i8), ^bb145
  ^bb147:  // pred: ^bb141
    %493 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %494 = llvm.load %493 : !llvm.ptr -> i64
    %c3_i64_202 = arith.constant 3 : i64
    %495 = arith.cmpi uge, %494, %c3_i64_202 : i64
    %c80_i8_203 = arith.constant 80 : i8
    cf.cond_br %495, ^bb148, ^bb1(%c80_i8_203 : i8)
  ^bb148:  // pred: ^bb147
    %496 = arith.subi %494, %c3_i64_202 : i64
    llvm.store %496, %493 : i64, !llvm.ptr
    cf.br ^bb146
  ^bb149:  // pred: ^bb152
    %497 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %498 = llvm.load %497 : !llvm.ptr -> !llvm.ptr
    %499 = llvm.getelementptr %498[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %500 = llvm.load %499 : !llvm.ptr -> i256
    llvm.store %499, %497 : !llvm.ptr, !llvm.ptr
    %501 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %502 = llvm.load %501 : !llvm.ptr -> !llvm.ptr
    %503 = llvm.getelementptr %502[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %504 = llvm.load %503 : !llvm.ptr -> i256
    llvm.store %503, %501 : !llvm.ptr, !llvm.ptr
    %505 = arith.trunci %500 : i256 to i64
    %c0_i64_204 = arith.constant 0 : i64
    %506 = arith.cmpi slt, %505, %c0_i64_204 : i64
    %c84_i8_205 = arith.constant 84 : i8
    cf.cond_br %506, ^bb1(%c84_i8_205 : i8), ^bb150
  ^bb150:  // pred: ^bb149
    %c32_i64_206 = arith.constant 32 : i64
    %c0_i64_207 = arith.constant 0 : i64
    %507 = arith.cmpi ne, %c32_i64_206, %c0_i64_207 : i64
    cf.cond_br %507, ^bb212, ^bb151
  ^bb151:  // 2 preds: ^bb150, ^bb215
    %508 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %509 = llvm.load %508 : !llvm.ptr -> !llvm.ptr
    %510 = llvm.getelementptr %509[%505] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %511 = llvm.intr.bswap(%504)  : (i256) -> i256
    llvm.store %511, %510 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb157
  ^bb152:  // pred: ^bb154
    %512 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_208 = arith.constant 1024 : i64
    %513 = llvm.load %512 : !llvm.ptr -> i64
    %c-2_i64_209 = arith.constant -2 : i64
    %514 = arith.addi %513, %c-2_i64_209 : i64
    llvm.store %514, %512 : i64, !llvm.ptr
    %c2_i64_210 = arith.constant 2 : i64
    %515 = arith.cmpi ult, %513, %c2_i64_210 : i64
    %c91_i8_211 = arith.constant 91 : i8
    cf.cond_br %515, ^bb1(%c91_i8_211 : i8), ^bb149
  ^bb153:  // pred: ^bb145
    %516 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %517 = llvm.load %516 : !llvm.ptr -> i64
    %c3_i64_212 = arith.constant 3 : i64
    %518 = arith.cmpi uge, %517, %c3_i64_212 : i64
    %c80_i8_213 = arith.constant 80 : i8
    cf.cond_br %518, ^bb154, ^bb1(%c80_i8_213 : i8)
  ^bb154:  // pred: ^bb153
    %519 = arith.subi %517, %c3_i64_212 : i64
    llvm.store %519, %516 : i64, !llvm.ptr
    cf.br ^bb152
  ^bb155:  // pred: ^bb156
    %c32_i256_214 = arith.constant 32 : i256
    %520 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %521 = llvm.load %520 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_214, %521 : i256, !llvm.ptr
    %522 = llvm.getelementptr %521[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %522, %520 : !llvm.ptr, !llvm.ptr
    cf.br ^bb161
  ^bb156:  // pred: ^bb158
    %523 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_215 = arith.constant 1024 : i64
    %524 = llvm.load %523 : !llvm.ptr -> i64
    %c1_i64_216 = arith.constant 1 : i64
    %525 = arith.addi %524, %c1_i64_216 : i64
    llvm.store %525, %523 : i64, !llvm.ptr
    %526 = arith.cmpi ult, %c1024_i64_215, %525 : i64
    %c92_i8_217 = arith.constant 92 : i8
    cf.cond_br %526, ^bb1(%c92_i8_217 : i8), ^bb155
  ^bb157:  // pred: ^bb151
    %527 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %528 = llvm.load %527 : !llvm.ptr -> i64
    %c3_i64_218 = arith.constant 3 : i64
    %529 = arith.cmpi uge, %528, %c3_i64_218 : i64
    %c80_i8_219 = arith.constant 80 : i8
    cf.cond_br %529, ^bb158, ^bb1(%c80_i8_219 : i8)
  ^bb158:  // pred: ^bb157
    %530 = arith.subi %528, %c3_i64_218 : i64
    llvm.store %530, %527 : i64, !llvm.ptr
    cf.br ^bb156
  ^bb159:  // pred: ^bb160
    %c0_i256_220 = arith.constant 0 : i256
    %531 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %532 = llvm.load %531 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_220, %532 : i256, !llvm.ptr
    %533 = llvm.getelementptr %532[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %533, %531 : !llvm.ptr, !llvm.ptr
    cf.br ^bb165
  ^bb160:  // pred: ^bb162
    %534 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_221 = arith.constant 1024 : i64
    %535 = llvm.load %534 : !llvm.ptr -> i64
    %c1_i64_222 = arith.constant 1 : i64
    %536 = arith.addi %535, %c1_i64_222 : i64
    llvm.store %536, %534 : i64, !llvm.ptr
    %537 = arith.cmpi ult, %c1024_i64_221, %536 : i64
    %c92_i8_223 = arith.constant 92 : i8
    cf.cond_br %537, ^bb1(%c92_i8_223 : i8), ^bb159
  ^bb161:  // pred: ^bb155
    %538 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %539 = llvm.load %538 : !llvm.ptr -> i64
    %c3_i64_224 = arith.constant 3 : i64
    %540 = arith.cmpi uge, %539, %c3_i64_224 : i64
    %c80_i8_225 = arith.constant 80 : i8
    cf.cond_br %540, ^bb162, ^bb1(%c80_i8_225 : i8)
  ^bb162:  // pred: ^bb161
    %541 = arith.subi %539, %c3_i64_224 : i64
    llvm.store %541, %538 : i64, !llvm.ptr
    cf.br ^bb160
  ^bb163:  // pred: ^bb164
    %c0_i256_226 = arith.constant 0 : i256
    %542 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %543 = llvm.load %542 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_226, %543 : i256, !llvm.ptr
    %544 = llvm.getelementptr %543[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %544, %542 : !llvm.ptr, !llvm.ptr
    cf.br ^bb175
  ^bb164:  // pred: ^bb166
    %545 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_227 = arith.constant 1024 : i64
    %546 = llvm.load %545 : !llvm.ptr -> i64
    %c1_i64_228 = arith.constant 1 : i64
    %547 = arith.addi %546, %c1_i64_228 : i64
    llvm.store %547, %545 : i64, !llvm.ptr
    %548 = arith.cmpi ult, %c1024_i64_227, %547 : i64
    %c92_i8_229 = arith.constant 92 : i8
    cf.cond_br %548, ^bb1(%c92_i8_229 : i8), ^bb163
  ^bb165:  // pred: ^bb159
    %549 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %550 = llvm.load %549 : !llvm.ptr -> i64
    %c3_i64_230 = arith.constant 3 : i64
    %551 = arith.cmpi uge, %550, %c3_i64_230 : i64
    %c80_i8_231 = arith.constant 80 : i8
    cf.cond_br %551, ^bb166, ^bb1(%c80_i8_231 : i8)
  ^bb166:  // pred: ^bb165
    %552 = arith.subi %550, %c3_i64_230 : i64
    llvm.store %552, %549 : i64, !llvm.ptr
    cf.br ^bb164
  ^bb167:  // pred: ^bb174
    %553 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %554 = llvm.load %553 : !llvm.ptr -> !llvm.ptr
    %555 = llvm.getelementptr %554[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %556 = llvm.load %555 : !llvm.ptr -> i256
    llvm.store %555, %553 : !llvm.ptr, !llvm.ptr
    %557 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %558 = llvm.load %557 : !llvm.ptr -> !llvm.ptr
    %559 = llvm.getelementptr %558[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %560 = llvm.load %559 : !llvm.ptr -> i256
    llvm.store %559, %557 : !llvm.ptr, !llvm.ptr
    %561 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %562 = llvm.load %561 : !llvm.ptr -> !llvm.ptr
    %563 = llvm.getelementptr %562[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %564 = llvm.load %563 : !llvm.ptr -> i256
    llvm.store %563, %561 : !llvm.ptr, !llvm.ptr
    %565 = arith.trunci %564 : i256 to i64
    %c0_i64_232 = arith.constant 0 : i64
    %566 = arith.cmpi slt, %565, %c0_i64_232 : i64
    %c84_i8_233 = arith.constant 84 : i8
    cf.cond_br %566, ^bb1(%c84_i8_233 : i8), ^bb168
  ^bb168:  // pred: ^bb167
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_234 = arith.constant 32 : i64
    %567 = arith.addi %565, %c31_i64 : i64
    %568 = arith.divui %567, %c32_i64_234 : i64
    %c3_i64_235 = arith.constant 3 : i64
    %569 = arith.muli %568, %c3_i64_235 : i64
    %570 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %571 = llvm.load %570 : !llvm.ptr -> i64
    %572 = arith.cmpi ult, %571, %569 : i64
    scf.if %572 {
    } else {
      %830 = arith.subi %571, %569 : i64
      llvm.store %830, %570 : i64, !llvm.ptr
    }
    %c80_i8_236 = arith.constant 80 : i8
    cf.cond_br %572, ^bb1(%c80_i8_236 : i8), ^bb169
  ^bb169:  // pred: ^bb168
    %573 = arith.trunci %556 : i256 to i64
    %c0_i64_237 = arith.constant 0 : i64
    %574 = arith.cmpi slt, %573, %c0_i64_237 : i64
    %c84_i8_238 = arith.constant 84 : i8
    cf.cond_br %574, ^bb1(%c84_i8_238 : i8), ^bb170
  ^bb170:  // pred: ^bb169
    %575 = arith.trunci %560 : i256 to i64
    %c0_i64_239 = arith.constant 0 : i64
    %576 = arith.cmpi slt, %575, %c0_i64_239 : i64
    %c84_i8_240 = arith.constant 84 : i8
    cf.cond_br %576, ^bb1(%c84_i8_240 : i8), ^bb171
  ^bb171:  // pred: ^bb170
    %c0_i64_241 = arith.constant 0 : i64
    %577 = arith.cmpi ne, %565, %c0_i64_241 : i64
    cf.cond_br %577, ^bb216, ^bb172
  ^bb172:  // 2 preds: ^bb171, ^bb219
    %578 = call @dora_fn_returndata_copy(%arg0, %573, %575, %565) : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr
    %579 = llvm.getelementptr %578[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %580 = llvm.load %579 : !llvm.ptr -> i8
    %c0_i8_242 = arith.constant 0 : i8
    %581 = arith.cmpi ne, %580, %c0_i8_242 : i8
    cf.cond_br %581, ^bb1(%580 : i8), ^bb173
  ^bb173:  // pred: ^bb172
    cf.br ^bb177
  ^bb174:  // pred: ^bb176
    %582 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_243 = arith.constant 1024 : i64
    %583 = llvm.load %582 : !llvm.ptr -> i64
    %c-3_i64 = arith.constant -3 : i64
    %584 = arith.addi %583, %c-3_i64 : i64
    llvm.store %584, %582 : i64, !llvm.ptr
    %c3_i64_244 = arith.constant 3 : i64
    %585 = arith.cmpi ult, %583, %c3_i64_244 : i64
    %c91_i8_245 = arith.constant 91 : i8
    cf.cond_br %585, ^bb1(%c91_i8_245 : i8), ^bb167
  ^bb175:  // pred: ^bb163
    %586 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %587 = llvm.load %586 : !llvm.ptr -> i64
    %c3_i64_246 = arith.constant 3 : i64
    %588 = arith.cmpi uge, %587, %c3_i64_246 : i64
    %c80_i8_247 = arith.constant 80 : i8
    cf.cond_br %588, ^bb176, ^bb1(%c80_i8_247 : i8)
  ^bb176:  // pred: ^bb175
    %589 = arith.subi %587, %c3_i64_246 : i64
    llvm.store %589, %586 : i64, !llvm.ptr
    cf.br ^bb174
  ^bb177:  // pred: ^bb173
    %c0_i64_248 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %590 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %591 = llvm.load %590 : !llvm.ptr -> i64
    %592 = call @dora_fn_write_result(%arg0, %c0_i64_248, %c0_i64_248, %591, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb178:  // pred: ^bb12
    %593 = arith.addi %44, %c32_i64 : i64
    %c0_i64_249 = arith.constant 0 : i64
    %594 = arith.cmpi slt, %593, %c0_i64_249 : i64
    %c84_i8_250 = arith.constant 84 : i8
    cf.cond_br %594, ^bb1(%c84_i8_250 : i8), ^bb179
  ^bb179:  // pred: ^bb178
    %c31_i64_251 = arith.constant 31 : i64
    %c32_i64_252 = arith.constant 32 : i64
    %595 = arith.addi %593, %c31_i64_251 : i64
    %596 = arith.divui %595, %c32_i64_252 : i64
    %c32_i64_253 = arith.constant 32 : i64
    %597 = arith.muli %596, %c32_i64_253 : i64
    %598 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %599 = llvm.load %598 : !llvm.ptr -> i64
    %c31_i64_254 = arith.constant 31 : i64
    %c32_i64_255 = arith.constant 32 : i64
    %600 = arith.addi %599, %c31_i64_254 : i64
    %601 = arith.divui %600, %c32_i64_255 : i64
    %602 = arith.muli %601, %c32_i64_253 : i64
    %603 = arith.cmpi ult, %602, %597 : i64
    %604 = scf.if %603 -> (i64) {
      %c3_i64_343 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %830 = arith.muli %601, %601 : i64
      %831 = arith.divui %830, %c512_i64 : i64
      %832 = arith.muli %601, %c3_i64_343 : i64
      %833 = arith.addi %831, %832 : i64
      %c3_i64_344 = arith.constant 3 : i64
      %c512_i64_345 = arith.constant 512 : i64
      %834 = arith.muli %596, %596 : i64
      %835 = arith.divui %834, %c512_i64_345 : i64
      %836 = arith.muli %596, %c3_i64_344 : i64
      %837 = arith.addi %835, %836 : i64
      %838 = arith.subi %837, %833 : i64
      scf.yield %838 : i64
    } else {
      %c0_i64_343 = arith.constant 0 : i64
      scf.yield %c0_i64_343 : i64
    }
    %605 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %606 = llvm.load %605 : !llvm.ptr -> i64
    %607 = arith.cmpi ult, %606, %604 : i64
    scf.if %607 {
    } else {
      %830 = arith.subi %606, %604 : i64
      llvm.store %830, %605 : i64, !llvm.ptr
    }
    %c80_i8_256 = arith.constant 80 : i8
    cf.cond_br %607, ^bb1(%c80_i8_256 : i8), ^bb180
  ^bb180:  // pred: ^bb179
    %608 = call @dora_fn_extend_memory(%arg0, %597) : (!llvm.ptr, i64) -> !llvm.ptr
    %609 = llvm.getelementptr %608[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %610 = llvm.load %609 : !llvm.ptr -> !llvm.ptr
    %611 = llvm.getelementptr %608[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %612 = llvm.load %611 : !llvm.ptr -> i8
    %c0_i8_257 = arith.constant 0 : i8
    %613 = arith.cmpi ne, %612, %c0_i8_257 : i8
    cf.cond_br %613, ^bb1(%612 : i8), ^bb181
  ^bb181:  // pred: ^bb180
    %614 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %610, %614 : !llvm.ptr, !llvm.ptr
    %615 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %597, %615 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb182:  // pred: ^bb26
    %616 = arith.addi %89, %c32_i64_24 : i64
    %c0_i64_258 = arith.constant 0 : i64
    %617 = arith.cmpi slt, %616, %c0_i64_258 : i64
    %c84_i8_259 = arith.constant 84 : i8
    cf.cond_br %617, ^bb1(%c84_i8_259 : i8), ^bb183
  ^bb183:  // pred: ^bb182
    %c31_i64_260 = arith.constant 31 : i64
    %c32_i64_261 = arith.constant 32 : i64
    %618 = arith.addi %616, %c31_i64_260 : i64
    %619 = arith.divui %618, %c32_i64_261 : i64
    %c32_i64_262 = arith.constant 32 : i64
    %620 = arith.muli %619, %c32_i64_262 : i64
    %621 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %622 = llvm.load %621 : !llvm.ptr -> i64
    %c31_i64_263 = arith.constant 31 : i64
    %c32_i64_264 = arith.constant 32 : i64
    %623 = arith.addi %622, %c31_i64_263 : i64
    %624 = arith.divui %623, %c32_i64_264 : i64
    %625 = arith.muli %624, %c32_i64_262 : i64
    %626 = arith.cmpi ult, %625, %620 : i64
    %627 = scf.if %626 -> (i64) {
      %c3_i64_343 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %830 = arith.muli %624, %624 : i64
      %831 = arith.divui %830, %c512_i64 : i64
      %832 = arith.muli %624, %c3_i64_343 : i64
      %833 = arith.addi %831, %832 : i64
      %c3_i64_344 = arith.constant 3 : i64
      %c512_i64_345 = arith.constant 512 : i64
      %834 = arith.muli %619, %619 : i64
      %835 = arith.divui %834, %c512_i64_345 : i64
      %836 = arith.muli %619, %c3_i64_344 : i64
      %837 = arith.addi %835, %836 : i64
      %838 = arith.subi %837, %833 : i64
      scf.yield %838 : i64
    } else {
      %c0_i64_343 = arith.constant 0 : i64
      scf.yield %c0_i64_343 : i64
    }
    %628 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %629 = llvm.load %628 : !llvm.ptr -> i64
    %630 = arith.cmpi ult, %629, %627 : i64
    scf.if %630 {
    } else {
      %830 = arith.subi %629, %627 : i64
      llvm.store %830, %628 : i64, !llvm.ptr
    }
    %c80_i8_265 = arith.constant 80 : i8
    cf.cond_br %630, ^bb1(%c80_i8_265 : i8), ^bb184
  ^bb184:  // pred: ^bb183
    %631 = call @dora_fn_extend_memory(%arg0, %620) : (!llvm.ptr, i64) -> !llvm.ptr
    %632 = llvm.getelementptr %631[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %633 = llvm.load %632 : !llvm.ptr -> !llvm.ptr
    %634 = llvm.getelementptr %631[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %635 = llvm.load %634 : !llvm.ptr -> i8
    %c0_i8_266 = arith.constant 0 : i8
    %636 = arith.cmpi ne, %635, %c0_i8_266 : i8
    cf.cond_br %636, ^bb1(%635 : i8), ^bb185
  ^bb185:  // pred: ^bb184
    %637 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %633, %637 : !llvm.ptr, !llvm.ptr
    %638 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %620, %638 : i64, !llvm.ptr
    cf.br ^bb27
  ^bb186:  // pred: ^bb40
    %639 = arith.addi %134, %c32_i64_44 : i64
    %c0_i64_267 = arith.constant 0 : i64
    %640 = arith.cmpi slt, %639, %c0_i64_267 : i64
    %c84_i8_268 = arith.constant 84 : i8
    cf.cond_br %640, ^bb1(%c84_i8_268 : i8), ^bb187
  ^bb187:  // pred: ^bb186
    %c31_i64_269 = arith.constant 31 : i64
    %c32_i64_270 = arith.constant 32 : i64
    %641 = arith.addi %639, %c31_i64_269 : i64
    %642 = arith.divui %641, %c32_i64_270 : i64
    %c32_i64_271 = arith.constant 32 : i64
    %643 = arith.muli %642, %c32_i64_271 : i64
    %644 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %645 = llvm.load %644 : !llvm.ptr -> i64
    %c31_i64_272 = arith.constant 31 : i64
    %c32_i64_273 = arith.constant 32 : i64
    %646 = arith.addi %645, %c31_i64_272 : i64
    %647 = arith.divui %646, %c32_i64_273 : i64
    %648 = arith.muli %647, %c32_i64_271 : i64
    %649 = arith.cmpi ult, %648, %643 : i64
    %650 = scf.if %649 -> (i64) {
      %c3_i64_343 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %830 = arith.muli %647, %647 : i64
      %831 = arith.divui %830, %c512_i64 : i64
      %832 = arith.muli %647, %c3_i64_343 : i64
      %833 = arith.addi %831, %832 : i64
      %c3_i64_344 = arith.constant 3 : i64
      %c512_i64_345 = arith.constant 512 : i64
      %834 = arith.muli %642, %642 : i64
      %835 = arith.divui %834, %c512_i64_345 : i64
      %836 = arith.muli %642, %c3_i64_344 : i64
      %837 = arith.addi %835, %836 : i64
      %838 = arith.subi %837, %833 : i64
      scf.yield %838 : i64
    } else {
      %c0_i64_343 = arith.constant 0 : i64
      scf.yield %c0_i64_343 : i64
    }
    %651 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %652 = llvm.load %651 : !llvm.ptr -> i64
    %653 = arith.cmpi ult, %652, %650 : i64
    scf.if %653 {
    } else {
      %830 = arith.subi %652, %650 : i64
      llvm.store %830, %651 : i64, !llvm.ptr
    }
    %c80_i8_274 = arith.constant 80 : i8
    cf.cond_br %653, ^bb1(%c80_i8_274 : i8), ^bb188
  ^bb188:  // pred: ^bb187
    %654 = call @dora_fn_extend_memory(%arg0, %643) : (!llvm.ptr, i64) -> !llvm.ptr
    %655 = llvm.getelementptr %654[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %656 = llvm.load %655 : !llvm.ptr -> !llvm.ptr
    %657 = llvm.getelementptr %654[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %658 = llvm.load %657 : !llvm.ptr -> i8
    %c0_i8_275 = arith.constant 0 : i8
    %659 = arith.cmpi ne, %658, %c0_i8_275 : i8
    cf.cond_br %659, ^bb1(%658 : i8), ^bb189
  ^bb189:  // pred: ^bb188
    %660 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %656, %660 : !llvm.ptr, !llvm.ptr
    %661 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %643, %661 : i64, !llvm.ptr
    cf.br ^bb41
  ^bb190:  // pred: ^bb60
    %c49152_i64 = arith.constant 49152 : i64
    %662 = arith.cmpi ugt, %198, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %662, ^bb1(%c100_i8 : i8), ^bb191
  ^bb191:  // pred: ^bb190
    %c31_i64_276 = arith.constant 31 : i64
    %c32_i64_277 = arith.constant 32 : i64
    %663 = arith.addi %198, %c31_i64_276 : i64
    %664 = arith.divui %663, %c32_i64_277 : i64
    %c2_i64_278 = arith.constant 2 : i64
    %665 = arith.muli %664, %c2_i64_278 : i64
    %666 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %667 = llvm.load %666 : !llvm.ptr -> i64
    %668 = arith.cmpi ult, %667, %665 : i64
    scf.if %668 {
    } else {
      %830 = arith.subi %667, %665 : i64
      llvm.store %830, %666 : i64, !llvm.ptr
    }
    %c80_i8_279 = arith.constant 80 : i8
    cf.cond_br %668, ^bb1(%c80_i8_279 : i8), ^bb192
  ^bb192:  // pred: ^bb191
    %669 = arith.addi %196, %198 : i64
    %c0_i64_280 = arith.constant 0 : i64
    %670 = arith.cmpi slt, %669, %c0_i64_280 : i64
    %c84_i8_281 = arith.constant 84 : i8
    cf.cond_br %670, ^bb1(%c84_i8_281 : i8), ^bb193
  ^bb193:  // pred: ^bb192
    %c31_i64_282 = arith.constant 31 : i64
    %c32_i64_283 = arith.constant 32 : i64
    %671 = arith.addi %669, %c31_i64_282 : i64
    %672 = arith.divui %671, %c32_i64_283 : i64
    %c32_i64_284 = arith.constant 32 : i64
    %673 = arith.muli %672, %c32_i64_284 : i64
    %674 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %675 = llvm.load %674 : !llvm.ptr -> i64
    %c31_i64_285 = arith.constant 31 : i64
    %c32_i64_286 = arith.constant 32 : i64
    %676 = arith.addi %675, %c31_i64_285 : i64
    %677 = arith.divui %676, %c32_i64_286 : i64
    %678 = arith.muli %677, %c32_i64_284 : i64
    %679 = arith.cmpi ult, %678, %673 : i64
    %680 = scf.if %679 -> (i64) {
      %c3_i64_343 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %830 = arith.muli %677, %677 : i64
      %831 = arith.divui %830, %c512_i64 : i64
      %832 = arith.muli %677, %c3_i64_343 : i64
      %833 = arith.addi %831, %832 : i64
      %c3_i64_344 = arith.constant 3 : i64
      %c512_i64_345 = arith.constant 512 : i64
      %834 = arith.muli %672, %672 : i64
      %835 = arith.divui %834, %c512_i64_345 : i64
      %836 = arith.muli %672, %c3_i64_344 : i64
      %837 = arith.addi %835, %836 : i64
      %838 = arith.subi %837, %833 : i64
      scf.yield %838 : i64
    } else {
      %c0_i64_343 = arith.constant 0 : i64
      scf.yield %c0_i64_343 : i64
    }
    %681 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %682 = llvm.load %681 : !llvm.ptr -> i64
    %683 = arith.cmpi ult, %682, %680 : i64
    scf.if %683 {
    } else {
      %830 = arith.subi %682, %680 : i64
      llvm.store %830, %681 : i64, !llvm.ptr
    }
    %c80_i8_287 = arith.constant 80 : i8
    cf.cond_br %683, ^bb1(%c80_i8_287 : i8), ^bb194
  ^bb194:  // pred: ^bb193
    %684 = call @dora_fn_extend_memory(%arg0, %673) : (!llvm.ptr, i64) -> !llvm.ptr
    %685 = llvm.getelementptr %684[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %686 = llvm.load %685 : !llvm.ptr -> !llvm.ptr
    %687 = llvm.getelementptr %684[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %688 = llvm.load %687 : !llvm.ptr -> i8
    %c0_i8_288 = arith.constant 0 : i8
    %689 = arith.cmpi ne, %688, %c0_i8_288 : i8
    cf.cond_br %689, ^bb1(%688 : i8), ^bb195
  ^bb195:  // pred: ^bb194
    %690 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %686, %690 : !llvm.ptr, !llvm.ptr
    %691 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %673, %691 : i64, !llvm.ptr
    cf.br ^bb61
  ^bb196:  // pred: ^bb97
    %692 = arith.addi %324, %326 : i64
    %c0_i64_289 = arith.constant 0 : i64
    %693 = arith.cmpi slt, %692, %c0_i64_289 : i64
    %c84_i8_290 = arith.constant 84 : i8
    cf.cond_br %693, ^bb1(%c84_i8_290 : i8), ^bb197
  ^bb197:  // pred: ^bb196
    %c31_i64_291 = arith.constant 31 : i64
    %c32_i64_292 = arith.constant 32 : i64
    %694 = arith.addi %692, %c31_i64_291 : i64
    %695 = arith.divui %694, %c32_i64_292 : i64
    %c32_i64_293 = arith.constant 32 : i64
    %696 = arith.muli %695, %c32_i64_293 : i64
    %697 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %698 = llvm.load %697 : !llvm.ptr -> i64
    %c31_i64_294 = arith.constant 31 : i64
    %c32_i64_295 = arith.constant 32 : i64
    %699 = arith.addi %698, %c31_i64_294 : i64
    %700 = arith.divui %699, %c32_i64_295 : i64
    %701 = arith.muli %700, %c32_i64_293 : i64
    %702 = arith.cmpi ult, %701, %696 : i64
    %703 = scf.if %702 -> (i64) {
      %c3_i64_343 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %830 = arith.muli %700, %700 : i64
      %831 = arith.divui %830, %c512_i64 : i64
      %832 = arith.muli %700, %c3_i64_343 : i64
      %833 = arith.addi %831, %832 : i64
      %c3_i64_344 = arith.constant 3 : i64
      %c512_i64_345 = arith.constant 512 : i64
      %834 = arith.muli %695, %695 : i64
      %835 = arith.divui %834, %c512_i64_345 : i64
      %836 = arith.muli %695, %c3_i64_344 : i64
      %837 = arith.addi %835, %836 : i64
      %838 = arith.subi %837, %833 : i64
      scf.yield %838 : i64
    } else {
      %c0_i64_343 = arith.constant 0 : i64
      scf.yield %c0_i64_343 : i64
    }
    %704 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %705 = llvm.load %704 : !llvm.ptr -> i64
    %706 = arith.cmpi ult, %705, %703 : i64
    scf.if %706 {
    } else {
      %830 = arith.subi %705, %703 : i64
      llvm.store %830, %704 : i64, !llvm.ptr
    }
    %c80_i8_296 = arith.constant 80 : i8
    cf.cond_br %706, ^bb1(%c80_i8_296 : i8), ^bb198
  ^bb198:  // pred: ^bb197
    %707 = call @dora_fn_extend_memory(%arg0, %696) : (!llvm.ptr, i64) -> !llvm.ptr
    %708 = llvm.getelementptr %707[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %709 = llvm.load %708 : !llvm.ptr -> !llvm.ptr
    %710 = llvm.getelementptr %707[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %711 = llvm.load %710 : !llvm.ptr -> i8
    %c0_i8_297 = arith.constant 0 : i8
    %712 = arith.cmpi ne, %711, %c0_i8_297 : i8
    cf.cond_br %712, ^bb1(%711 : i8), ^bb199
  ^bb199:  // pred: ^bb198
    %713 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %709, %713 : !llvm.ptr, !llvm.ptr
    %714 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %696, %714 : i64, !llvm.ptr
    cf.br ^bb98
  ^bb200:  // pred: ^bb98
    %715 = arith.addi %328, %330 : i64
    %c0_i64_298 = arith.constant 0 : i64
    %716 = arith.cmpi slt, %715, %c0_i64_298 : i64
    %c84_i8_299 = arith.constant 84 : i8
    cf.cond_br %716, ^bb1(%c84_i8_299 : i8), ^bb201
  ^bb201:  // pred: ^bb200
    %c31_i64_300 = arith.constant 31 : i64
    %c32_i64_301 = arith.constant 32 : i64
    %717 = arith.addi %715, %c31_i64_300 : i64
    %718 = arith.divui %717, %c32_i64_301 : i64
    %c32_i64_302 = arith.constant 32 : i64
    %719 = arith.muli %718, %c32_i64_302 : i64
    %720 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %721 = llvm.load %720 : !llvm.ptr -> i64
    %c31_i64_303 = arith.constant 31 : i64
    %c32_i64_304 = arith.constant 32 : i64
    %722 = arith.addi %721, %c31_i64_303 : i64
    %723 = arith.divui %722, %c32_i64_304 : i64
    %724 = arith.muli %723, %c32_i64_302 : i64
    %725 = arith.cmpi ult, %724, %719 : i64
    %726 = scf.if %725 -> (i64) {
      %c3_i64_343 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %830 = arith.muli %723, %723 : i64
      %831 = arith.divui %830, %c512_i64 : i64
      %832 = arith.muli %723, %c3_i64_343 : i64
      %833 = arith.addi %831, %832 : i64
      %c3_i64_344 = arith.constant 3 : i64
      %c512_i64_345 = arith.constant 512 : i64
      %834 = arith.muli %718, %718 : i64
      %835 = arith.divui %834, %c512_i64_345 : i64
      %836 = arith.muli %718, %c3_i64_344 : i64
      %837 = arith.addi %835, %836 : i64
      %838 = arith.subi %837, %833 : i64
      scf.yield %838 : i64
    } else {
      %c0_i64_343 = arith.constant 0 : i64
      scf.yield %c0_i64_343 : i64
    }
    %727 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %728 = llvm.load %727 : !llvm.ptr -> i64
    %729 = arith.cmpi ult, %728, %726 : i64
    scf.if %729 {
    } else {
      %830 = arith.subi %728, %726 : i64
      llvm.store %830, %727 : i64, !llvm.ptr
    }
    %c80_i8_305 = arith.constant 80 : i8
    cf.cond_br %729, ^bb1(%c80_i8_305 : i8), ^bb202
  ^bb202:  // pred: ^bb201
    %730 = call @dora_fn_extend_memory(%arg0, %719) : (!llvm.ptr, i64) -> !llvm.ptr
    %731 = llvm.getelementptr %730[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %732 = llvm.load %731 : !llvm.ptr -> !llvm.ptr
    %733 = llvm.getelementptr %730[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %734 = llvm.load %733 : !llvm.ptr -> i8
    %c0_i8_306 = arith.constant 0 : i8
    %735 = arith.cmpi ne, %734, %c0_i8_306 : i8
    cf.cond_br %735, ^bb1(%734 : i8), ^bb203
  ^bb203:  // pred: ^bb202
    %736 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %732, %736 : !llvm.ptr, !llvm.ptr
    %737 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %719, %737 : i64, !llvm.ptr
    cf.br ^bb99
  ^bb204:  // pred: ^bb122
    %738 = arith.addi %415, %c32_i64_162 : i64
    %c0_i64_307 = arith.constant 0 : i64
    %739 = arith.cmpi slt, %738, %c0_i64_307 : i64
    %c84_i8_308 = arith.constant 84 : i8
    cf.cond_br %739, ^bb1(%c84_i8_308 : i8), ^bb205
  ^bb205:  // pred: ^bb204
    %c31_i64_309 = arith.constant 31 : i64
    %c32_i64_310 = arith.constant 32 : i64
    %740 = arith.addi %738, %c31_i64_309 : i64
    %741 = arith.divui %740, %c32_i64_310 : i64
    %c32_i64_311 = arith.constant 32 : i64
    %742 = arith.muli %741, %c32_i64_311 : i64
    %743 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %744 = llvm.load %743 : !llvm.ptr -> i64
    %c31_i64_312 = arith.constant 31 : i64
    %c32_i64_313 = arith.constant 32 : i64
    %745 = arith.addi %744, %c31_i64_312 : i64
    %746 = arith.divui %745, %c32_i64_313 : i64
    %747 = arith.muli %746, %c32_i64_311 : i64
    %748 = arith.cmpi ult, %747, %742 : i64
    %749 = scf.if %748 -> (i64) {
      %c3_i64_343 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %830 = arith.muli %746, %746 : i64
      %831 = arith.divui %830, %c512_i64 : i64
      %832 = arith.muli %746, %c3_i64_343 : i64
      %833 = arith.addi %831, %832 : i64
      %c3_i64_344 = arith.constant 3 : i64
      %c512_i64_345 = arith.constant 512 : i64
      %834 = arith.muli %741, %741 : i64
      %835 = arith.divui %834, %c512_i64_345 : i64
      %836 = arith.muli %741, %c3_i64_344 : i64
      %837 = arith.addi %835, %836 : i64
      %838 = arith.subi %837, %833 : i64
      scf.yield %838 : i64
    } else {
      %c0_i64_343 = arith.constant 0 : i64
      scf.yield %c0_i64_343 : i64
    }
    %750 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %751 = llvm.load %750 : !llvm.ptr -> i64
    %752 = arith.cmpi ult, %751, %749 : i64
    scf.if %752 {
    } else {
      %830 = arith.subi %751, %749 : i64
      llvm.store %830, %750 : i64, !llvm.ptr
    }
    %c80_i8_314 = arith.constant 80 : i8
    cf.cond_br %752, ^bb1(%c80_i8_314 : i8), ^bb206
  ^bb206:  // pred: ^bb205
    %753 = call @dora_fn_extend_memory(%arg0, %742) : (!llvm.ptr, i64) -> !llvm.ptr
    %754 = llvm.getelementptr %753[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %755 = llvm.load %754 : !llvm.ptr -> !llvm.ptr
    %756 = llvm.getelementptr %753[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %757 = llvm.load %756 : !llvm.ptr -> i8
    %c0_i8_315 = arith.constant 0 : i8
    %758 = arith.cmpi ne, %757, %c0_i8_315 : i8
    cf.cond_br %758, ^bb1(%757 : i8), ^bb207
  ^bb207:  // pred: ^bb206
    %759 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %755, %759 : !llvm.ptr, !llvm.ptr
    %760 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %742, %760 : i64, !llvm.ptr
    cf.br ^bb123
  ^bb208:  // pred: ^bb136
    %761 = arith.addi %460, %c32_i64_184 : i64
    %c0_i64_316 = arith.constant 0 : i64
    %762 = arith.cmpi slt, %761, %c0_i64_316 : i64
    %c84_i8_317 = arith.constant 84 : i8
    cf.cond_br %762, ^bb1(%c84_i8_317 : i8), ^bb209
  ^bb209:  // pred: ^bb208
    %c31_i64_318 = arith.constant 31 : i64
    %c32_i64_319 = arith.constant 32 : i64
    %763 = arith.addi %761, %c31_i64_318 : i64
    %764 = arith.divui %763, %c32_i64_319 : i64
    %c32_i64_320 = arith.constant 32 : i64
    %765 = arith.muli %764, %c32_i64_320 : i64
    %766 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %767 = llvm.load %766 : !llvm.ptr -> i64
    %c31_i64_321 = arith.constant 31 : i64
    %c32_i64_322 = arith.constant 32 : i64
    %768 = arith.addi %767, %c31_i64_321 : i64
    %769 = arith.divui %768, %c32_i64_322 : i64
    %770 = arith.muli %769, %c32_i64_320 : i64
    %771 = arith.cmpi ult, %770, %765 : i64
    %772 = scf.if %771 -> (i64) {
      %c3_i64_343 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %830 = arith.muli %769, %769 : i64
      %831 = arith.divui %830, %c512_i64 : i64
      %832 = arith.muli %769, %c3_i64_343 : i64
      %833 = arith.addi %831, %832 : i64
      %c3_i64_344 = arith.constant 3 : i64
      %c512_i64_345 = arith.constant 512 : i64
      %834 = arith.muli %764, %764 : i64
      %835 = arith.divui %834, %c512_i64_345 : i64
      %836 = arith.muli %764, %c3_i64_344 : i64
      %837 = arith.addi %835, %836 : i64
      %838 = arith.subi %837, %833 : i64
      scf.yield %838 : i64
    } else {
      %c0_i64_343 = arith.constant 0 : i64
      scf.yield %c0_i64_343 : i64
    }
    %773 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %774 = llvm.load %773 : !llvm.ptr -> i64
    %775 = arith.cmpi ult, %774, %772 : i64
    scf.if %775 {
    } else {
      %830 = arith.subi %774, %772 : i64
      llvm.store %830, %773 : i64, !llvm.ptr
    }
    %c80_i8_323 = arith.constant 80 : i8
    cf.cond_br %775, ^bb1(%c80_i8_323 : i8), ^bb210
  ^bb210:  // pred: ^bb209
    %776 = call @dora_fn_extend_memory(%arg0, %765) : (!llvm.ptr, i64) -> !llvm.ptr
    %777 = llvm.getelementptr %776[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %778 = llvm.load %777 : !llvm.ptr -> !llvm.ptr
    %779 = llvm.getelementptr %776[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %780 = llvm.load %779 : !llvm.ptr -> i8
    %c0_i8_324 = arith.constant 0 : i8
    %781 = arith.cmpi ne, %780, %c0_i8_324 : i8
    cf.cond_br %781, ^bb1(%780 : i8), ^bb211
  ^bb211:  // pred: ^bb210
    %782 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %778, %782 : !llvm.ptr, !llvm.ptr
    %783 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %765, %783 : i64, !llvm.ptr
    cf.br ^bb137
  ^bb212:  // pred: ^bb150
    %784 = arith.addi %505, %c32_i64_206 : i64
    %c0_i64_325 = arith.constant 0 : i64
    %785 = arith.cmpi slt, %784, %c0_i64_325 : i64
    %c84_i8_326 = arith.constant 84 : i8
    cf.cond_br %785, ^bb1(%c84_i8_326 : i8), ^bb213
  ^bb213:  // pred: ^bb212
    %c31_i64_327 = arith.constant 31 : i64
    %c32_i64_328 = arith.constant 32 : i64
    %786 = arith.addi %784, %c31_i64_327 : i64
    %787 = arith.divui %786, %c32_i64_328 : i64
    %c32_i64_329 = arith.constant 32 : i64
    %788 = arith.muli %787, %c32_i64_329 : i64
    %789 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %790 = llvm.load %789 : !llvm.ptr -> i64
    %c31_i64_330 = arith.constant 31 : i64
    %c32_i64_331 = arith.constant 32 : i64
    %791 = arith.addi %790, %c31_i64_330 : i64
    %792 = arith.divui %791, %c32_i64_331 : i64
    %793 = arith.muli %792, %c32_i64_329 : i64
    %794 = arith.cmpi ult, %793, %788 : i64
    %795 = scf.if %794 -> (i64) {
      %c3_i64_343 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %830 = arith.muli %792, %792 : i64
      %831 = arith.divui %830, %c512_i64 : i64
      %832 = arith.muli %792, %c3_i64_343 : i64
      %833 = arith.addi %831, %832 : i64
      %c3_i64_344 = arith.constant 3 : i64
      %c512_i64_345 = arith.constant 512 : i64
      %834 = arith.muli %787, %787 : i64
      %835 = arith.divui %834, %c512_i64_345 : i64
      %836 = arith.muli %787, %c3_i64_344 : i64
      %837 = arith.addi %835, %836 : i64
      %838 = arith.subi %837, %833 : i64
      scf.yield %838 : i64
    } else {
      %c0_i64_343 = arith.constant 0 : i64
      scf.yield %c0_i64_343 : i64
    }
    %796 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %797 = llvm.load %796 : !llvm.ptr -> i64
    %798 = arith.cmpi ult, %797, %795 : i64
    scf.if %798 {
    } else {
      %830 = arith.subi %797, %795 : i64
      llvm.store %830, %796 : i64, !llvm.ptr
    }
    %c80_i8_332 = arith.constant 80 : i8
    cf.cond_br %798, ^bb1(%c80_i8_332 : i8), ^bb214
  ^bb214:  // pred: ^bb213
    %799 = call @dora_fn_extend_memory(%arg0, %788) : (!llvm.ptr, i64) -> !llvm.ptr
    %800 = llvm.getelementptr %799[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %801 = llvm.load %800 : !llvm.ptr -> !llvm.ptr
    %802 = llvm.getelementptr %799[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %803 = llvm.load %802 : !llvm.ptr -> i8
    %c0_i8_333 = arith.constant 0 : i8
    %804 = arith.cmpi ne, %803, %c0_i8_333 : i8
    cf.cond_br %804, ^bb1(%803 : i8), ^bb215
  ^bb215:  // pred: ^bb214
    %805 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %801, %805 : !llvm.ptr, !llvm.ptr
    %806 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %788, %806 : i64, !llvm.ptr
    cf.br ^bb151
  ^bb216:  // pred: ^bb171
    %807 = arith.addi %573, %565 : i64
    %c0_i64_334 = arith.constant 0 : i64
    %808 = arith.cmpi slt, %807, %c0_i64_334 : i64
    %c84_i8_335 = arith.constant 84 : i8
    cf.cond_br %808, ^bb1(%c84_i8_335 : i8), ^bb217
  ^bb217:  // pred: ^bb216
    %c31_i64_336 = arith.constant 31 : i64
    %c32_i64_337 = arith.constant 32 : i64
    %809 = arith.addi %807, %c31_i64_336 : i64
    %810 = arith.divui %809, %c32_i64_337 : i64
    %c32_i64_338 = arith.constant 32 : i64
    %811 = arith.muli %810, %c32_i64_338 : i64
    %812 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %813 = llvm.load %812 : !llvm.ptr -> i64
    %c31_i64_339 = arith.constant 31 : i64
    %c32_i64_340 = arith.constant 32 : i64
    %814 = arith.addi %813, %c31_i64_339 : i64
    %815 = arith.divui %814, %c32_i64_340 : i64
    %816 = arith.muli %815, %c32_i64_338 : i64
    %817 = arith.cmpi ult, %816, %811 : i64
    %818 = scf.if %817 -> (i64) {
      %c3_i64_343 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %830 = arith.muli %815, %815 : i64
      %831 = arith.divui %830, %c512_i64 : i64
      %832 = arith.muli %815, %c3_i64_343 : i64
      %833 = arith.addi %831, %832 : i64
      %c3_i64_344 = arith.constant 3 : i64
      %c512_i64_345 = arith.constant 512 : i64
      %834 = arith.muli %810, %810 : i64
      %835 = arith.divui %834, %c512_i64_345 : i64
      %836 = arith.muli %810, %c3_i64_344 : i64
      %837 = arith.addi %835, %836 : i64
      %838 = arith.subi %837, %833 : i64
      scf.yield %838 : i64
    } else {
      %c0_i64_343 = arith.constant 0 : i64
      scf.yield %c0_i64_343 : i64
    }
    %819 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %820 = llvm.load %819 : !llvm.ptr -> i64
    %821 = arith.cmpi ult, %820, %818 : i64
    scf.if %821 {
    } else {
      %830 = arith.subi %820, %818 : i64
      llvm.store %830, %819 : i64, !llvm.ptr
    }
    %c80_i8_341 = arith.constant 80 : i8
    cf.cond_br %821, ^bb1(%c80_i8_341 : i8), ^bb218
  ^bb218:  // pred: ^bb217
    %822 = call @dora_fn_extend_memory(%arg0, %811) : (!llvm.ptr, i64) -> !llvm.ptr
    %823 = llvm.getelementptr %822[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %824 = llvm.load %823 : !llvm.ptr -> !llvm.ptr
    %825 = llvm.getelementptr %822[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %826 = llvm.load %825 : !llvm.ptr -> i8
    %c0_i8_342 = arith.constant 0 : i8
    %827 = arith.cmpi ne, %826, %c0_i8_342 : i8
    cf.cond_br %827, ^bb1(%826 : i8), ^bb219
  ^bb219:  // pred: ^bb218
    %828 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %824, %828 : !llvm.ptr, !llvm.ptr
    %829 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %811, %829 : i64, !llvm.ptr
    cf.br ^bb172
  }
}
