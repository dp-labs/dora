---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_read_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_write_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 55 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36, ^bb37, ^bb38, ^bb39, ^bb40, ^bb41, ^bb42, ^bb43, ^bb44, ^bb45, ^bb46, ^bb47, ^bb48, ^bb49, ^bb50, ^bb51, ^bb52, ^bb53, ^bb54, ^bb55
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c32_i64 = arith.constant 32 : i64
    %37 = arith.addi %36, %c32_i64 : i64
    %c0_i64_4 = arith.constant 0 : i64
    %38 = arith.cmpi slt, %37, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %38, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_5 = arith.constant 32 : i64
    %39 = arith.addi %37, %c31_i64 : i64
    %40 = arith.divui %39, %c32_i64_5 : i64
    %41 = arith.muli %40, %c32_i64_5 : i64
    %42 = call @dora_fn_extend_memory(%arg0, %41) : (!llvm.ptr, i64) -> !llvm.ptr
    %43 = llvm.getelementptr %42[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %44 = llvm.load %43 : !llvm.ptr -> !llvm.ptr
    %45 = llvm.getelementptr %42[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %46 = llvm.load %45 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %47 = arith.cmpi ne, %46, %c0_i8 : i8
    cf.cond_br %47, ^bb1(%46 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %48 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %44, %48 : !llvm.ptr, !llvm.ptr
    %49 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %41, %49 : i64, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %51 = llvm.load %50 : !llvm.ptr -> !llvm.ptr
    %52 = llvm.getelementptr %51[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %53 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %53, %52 {alignment = 1 : i64} : i256, !llvm.ptr
    %54 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_6 = arith.constant 1 : i64
    %55 = arith.addi %54, %c1_i64_6 : i64
    llvm.store %55, %9 : i64, !llvm.ptr
    %56 = arith.cmpi ult, %c1024_i64, %55 : i64
    %c92_i8_7 = arith.constant 92 : i8
    cf.cond_br %56, ^bb1(%c92_i8_7 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    %60 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_8 : i64
    llvm.store %61, %9 : i64, !llvm.ptr
    %62 = arith.cmpi ult, %c1024_i64, %61 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c32_i256 = arith.constant 32 : i256
    %63 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %64 : i256, !llvm.ptr
    %65 = llvm.getelementptr %64[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %65, %63 : !llvm.ptr, !llvm.ptr
    %66 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_10 = arith.constant -2 : i64
    %67 = arith.addi %66, %c-2_i64_10 : i64
    llvm.store %67, %9 : i64, !llvm.ptr
    %c2_i64_11 = arith.constant 2 : i64
    %68 = arith.cmpi ult, %66, %c2_i64_11 : i64
    %c91_i8_12 = arith.constant 91 : i8
    cf.cond_br %68, ^bb1(%c91_i8_12 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %69 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.getelementptr %70[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %72 = llvm.load %71 : !llvm.ptr -> i256
    llvm.store %71, %69 : !llvm.ptr, !llvm.ptr
    %73 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> !llvm.ptr
    %75 = llvm.getelementptr %74[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %76 = llvm.load %75 : !llvm.ptr -> i256
    llvm.store %75, %73 : !llvm.ptr, !llvm.ptr
    %77 = arith.trunci %72 : i256 to i64
    %c32_i64_13 = arith.constant 32 : i64
    %78 = arith.addi %77, %c32_i64_13 : i64
    %c0_i64_14 = arith.constant 0 : i64
    %79 = arith.cmpi slt, %78, %c0_i64_14 : i64
    %c84_i8_15 = arith.constant 84 : i8
    cf.cond_br %79, ^bb1(%c84_i8_15 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %c31_i64_16 = arith.constant 31 : i64
    %c32_i64_17 = arith.constant 32 : i64
    %80 = arith.addi %78, %c31_i64_16 : i64
    %81 = arith.divui %80, %c32_i64_17 : i64
    %82 = arith.muli %81, %c32_i64_17 : i64
    %83 = call @dora_fn_extend_memory(%arg0, %82) : (!llvm.ptr, i64) -> !llvm.ptr
    %84 = llvm.getelementptr %83[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %85 = llvm.load %84 : !llvm.ptr -> !llvm.ptr
    %86 = llvm.getelementptr %83[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %87 = llvm.load %86 : !llvm.ptr -> i8
    %c0_i8_18 = arith.constant 0 : i8
    %88 = arith.cmpi ne, %87, %c0_i8_18 : i8
    cf.cond_br %88, ^bb1(%87 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %89 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %85, %89 : !llvm.ptr, !llvm.ptr
    %90 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %82, %90 : i64, !llvm.ptr
    %91 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %92 = llvm.load %91 : !llvm.ptr -> !llvm.ptr
    %93 = llvm.getelementptr %92[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %94 = llvm.intr.bswap(%76)  : (i256) -> i256
    llvm.store %94, %93 {alignment = 1 : i64} : i256, !llvm.ptr
    %95 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %96 = arith.addi %95, %c1_i64_19 : i64
    llvm.store %96, %9 : i64, !llvm.ptr
    %97 = arith.cmpi ult, %c1024_i64, %96 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %97, ^bb1(%c92_i8_20 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %98 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %99 : i256, !llvm.ptr
    %100 = llvm.getelementptr %99[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %100, %98 : !llvm.ptr, !llvm.ptr
    %101 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_21 = arith.constant 1 : i64
    %102 = arith.addi %101, %c1_i64_21 : i64
    llvm.store %102, %9 : i64, !llvm.ptr
    %103 = arith.cmpi ult, %c1024_i64, %102 : i64
    %c92_i8_22 = arith.constant 92 : i8
    cf.cond_br %103, ^bb1(%c92_i8_22 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %c64_i256 = arith.constant 64 : i256
    %104 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %105 : i256, !llvm.ptr
    %106 = llvm.getelementptr %105[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %106, %104 : !llvm.ptr, !llvm.ptr
    %107 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_23 = arith.constant -2 : i64
    %108 = arith.addi %107, %c-2_i64_23 : i64
    llvm.store %108, %9 : i64, !llvm.ptr
    %c2_i64_24 = arith.constant 2 : i64
    %109 = arith.cmpi ult, %107, %c2_i64_24 : i64
    %c91_i8_25 = arith.constant 91 : i8
    cf.cond_br %109, ^bb1(%c91_i8_25 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %110 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> !llvm.ptr
    %112 = llvm.getelementptr %111[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %113 = llvm.load %112 : !llvm.ptr -> i256
    llvm.store %112, %110 : !llvm.ptr, !llvm.ptr
    %114 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> !llvm.ptr
    %116 = llvm.getelementptr %115[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %117 = llvm.load %116 : !llvm.ptr -> i256
    llvm.store %116, %114 : !llvm.ptr, !llvm.ptr
    %118 = arith.trunci %113 : i256 to i64
    %c32_i64_26 = arith.constant 32 : i64
    %119 = arith.addi %118, %c32_i64_26 : i64
    %c0_i64_27 = arith.constant 0 : i64
    %120 = arith.cmpi slt, %119, %c0_i64_27 : i64
    %c84_i8_28 = arith.constant 84 : i8
    cf.cond_br %120, ^bb1(%c84_i8_28 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c31_i64_29 = arith.constant 31 : i64
    %c32_i64_30 = arith.constant 32 : i64
    %121 = arith.addi %119, %c31_i64_29 : i64
    %122 = arith.divui %121, %c32_i64_30 : i64
    %123 = arith.muli %122, %c32_i64_30 : i64
    %124 = call @dora_fn_extend_memory(%arg0, %123) : (!llvm.ptr, i64) -> !llvm.ptr
    %125 = llvm.getelementptr %124[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %126 = llvm.load %125 : !llvm.ptr -> !llvm.ptr
    %127 = llvm.getelementptr %124[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %128 = llvm.load %127 : !llvm.ptr -> i8
    %c0_i8_31 = arith.constant 0 : i8
    %129 = arith.cmpi ne, %128, %c0_i8_31 : i8
    cf.cond_br %129, ^bb1(%128 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %130 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %126, %130 : !llvm.ptr, !llvm.ptr
    %131 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %123, %131 : i64, !llvm.ptr
    %132 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> !llvm.ptr
    %134 = llvm.getelementptr %133[%118] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %135 = llvm.intr.bswap(%117)  : (i256) -> i256
    llvm.store %135, %134 {alignment = 1 : i64} : i256, !llvm.ptr
    %136 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_32 = arith.constant 1 : i64
    %137 = arith.addi %136, %c1_i64_32 : i64
    llvm.store %137, %9 : i64, !llvm.ptr
    %138 = arith.cmpi ult, %c1024_i64, %137 : i64
    %c92_i8_33 = arith.constant 92 : i8
    cf.cond_br %138, ^bb1(%c92_i8_33 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %c77_i256 = arith.constant 77 : i256
    %139 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %140 = llvm.load %139 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %140 : i256, !llvm.ptr
    %141 = llvm.getelementptr %140[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %141, %139 : !llvm.ptr, !llvm.ptr
    %142 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %143 = arith.addi %142, %c1_i64_34 : i64
    llvm.store %143, %9 : i64, !llvm.ptr
    %144 = arith.cmpi ult, %c1024_i64, %143 : i64
    %c92_i8_35 = arith.constant 92 : i8
    cf.cond_br %144, ^bb1(%c92_i8_35 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i256_36 = arith.constant 0 : i256
    %145 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_36, %146 : i256, !llvm.ptr
    %147 = llvm.getelementptr %146[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %147, %145 : !llvm.ptr, !llvm.ptr
    %148 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %149 = arith.addi %148, %c1_i64_37 : i64
    llvm.store %149, %9 : i64, !llvm.ptr
    %150 = arith.cmpi ult, %c1024_i64, %149 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %150, ^bb1(%c92_i8_38 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %c0_i256_39 = arith.constant 0 : i256
    %151 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %152 = llvm.load %151 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_39, %152 : i256, !llvm.ptr
    %153 = llvm.getelementptr %152[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %153, %151 : !llvm.ptr, !llvm.ptr
    %154 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_40 = arith.constant -2 : i64
    %155 = arith.addi %154, %c-2_i64_40 : i64
    llvm.store %155, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %156 = arith.cmpi ult, %154, %c3_i64 : i64
    %c91_i8_41 = arith.constant 91 : i8
    cf.cond_br %156, ^bb1(%c91_i8_41 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %157 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %158 = llvm.load %157 : !llvm.ptr -> !llvm.ptr
    %159 = llvm.getelementptr %158[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %160 = llvm.load %159 : !llvm.ptr -> i256
    llvm.store %159, %157 : !llvm.ptr, !llvm.ptr
    %161 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %162 = llvm.load %161 : !llvm.ptr -> !llvm.ptr
    %163 = llvm.getelementptr %162[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %164 = llvm.load %163 : !llvm.ptr -> i256
    llvm.store %163, %161 : !llvm.ptr, !llvm.ptr
    %165 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %166 = llvm.load %165 : !llvm.ptr -> !llvm.ptr
    %167 = llvm.getelementptr %166[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %168 = llvm.load %167 : !llvm.ptr -> i256
    llvm.store %167, %165 : !llvm.ptr, !llvm.ptr
    %169 = arith.trunci %164 : i256 to i64
    %170 = arith.trunci %168 : i256 to i64
    %171 = arith.addi %169, %170 : i64
    %c0_i64_42 = arith.constant 0 : i64
    %172 = arith.cmpi slt, %171, %c0_i64_42 : i64
    %c84_i8_43 = arith.constant 84 : i8
    cf.cond_br %172, ^bb1(%c84_i8_43 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c31_i64_44 = arith.constant 31 : i64
    %c32_i64_45 = arith.constant 32 : i64
    %173 = arith.addi %171, %c31_i64_44 : i64
    %174 = arith.divui %173, %c32_i64_45 : i64
    %175 = arith.muli %174, %c32_i64_45 : i64
    %176 = call @dora_fn_extend_memory(%arg0, %175) : (!llvm.ptr, i64) -> !llvm.ptr
    %177 = llvm.getelementptr %176[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %178 = llvm.load %177 : !llvm.ptr -> !llvm.ptr
    %179 = llvm.getelementptr %176[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %180 = llvm.load %179 : !llvm.ptr -> i8
    %c0_i8_46 = arith.constant 0 : i8
    %181 = arith.cmpi ne, %180, %c0_i8_46 : i8
    cf.cond_br %181, ^bb1(%180 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %182 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %178, %182 : !llvm.ptr, !llvm.ptr
    %183 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %175, %183 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %184 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %160, %184 {alignment = 1 : i64} : i256, !llvm.ptr
    %185 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> i64
    %c1_i64_47 = arith.constant 1 : i64
    %187 = llvm.alloca %c1_i64_47 x i64 : (i64) -> !llvm.ptr
    llvm.store %186, %187 {alignment = 1 : i64} : i64, !llvm.ptr
    %188 = call @dora_fn_create(%arg0, %170, %169, %184, %187) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %189 = llvm.getelementptr %188[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %190 = llvm.load %189 : !llvm.ptr -> i8
    %c0_i8_48 = arith.constant 0 : i8
    %191 = arith.cmpi ne, %c0_i8_48, %190 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %191, ^bb1(%c94_i8 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %192 = llvm.load %184 : !llvm.ptr -> i256
    %193 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %194 = llvm.load %193 : !llvm.ptr -> !llvm.ptr
    llvm.store %192, %194 : i256, !llvm.ptr
    %195 = llvm.getelementptr %194[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %195, %193 : !llvm.ptr, !llvm.ptr
    %196 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_49 = arith.constant 1 : i64
    %197 = arith.addi %196, %c1_i64_49 : i64
    llvm.store %197, %9 : i64, !llvm.ptr
    %198 = arith.cmpi ult, %c1024_i64, %197 : i64
    %c92_i8_50 = arith.constant 92 : i8
    cf.cond_br %198, ^bb1(%c92_i8_50 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %c0_i256_51 = arith.constant 0 : i256
    %199 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_51, %200 : i256, !llvm.ptr
    %201 = llvm.getelementptr %200[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %201, %199 : !llvm.ptr, !llvm.ptr
    %202 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %203 = arith.addi %202, %c1_i64_52 : i64
    llvm.store %203, %9 : i64, !llvm.ptr
    %204 = arith.cmpi ult, %c1024_i64, %203 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %204, ^bb1(%c92_i8_53 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %c0_i256_54 = arith.constant 0 : i256
    %205 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %206 = llvm.load %205 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_54, %206 : i256, !llvm.ptr
    %207 = llvm.getelementptr %206[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %207, %205 : !llvm.ptr, !llvm.ptr
    %208 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_55 = arith.constant 1 : i64
    %209 = arith.addi %208, %c1_i64_55 : i64
    llvm.store %209, %9 : i64, !llvm.ptr
    %210 = arith.cmpi ult, %c1024_i64, %209 : i64
    %c92_i8_56 = arith.constant 92 : i8
    cf.cond_br %210, ^bb1(%c92_i8_56 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %c0_i256_57 = arith.constant 0 : i256
    %211 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %212 = llvm.load %211 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_57, %212 : i256, !llvm.ptr
    %213 = llvm.getelementptr %212[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %213, %211 : !llvm.ptr, !llvm.ptr
    %214 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_58 = arith.constant 1 : i64
    %215 = arith.addi %214, %c1_i64_58 : i64
    llvm.store %215, %9 : i64, !llvm.ptr
    %216 = arith.cmpi ult, %c1024_i64, %215 : i64
    %c92_i8_59 = arith.constant 92 : i8
    cf.cond_br %216, ^bb1(%c92_i8_59 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c0_i256_60 = arith.constant 0 : i256
    %217 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %218 = llvm.load %217 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_60, %218 : i256, !llvm.ptr
    %219 = llvm.getelementptr %218[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %219, %217 : !llvm.ptr, !llvm.ptr
    %220 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_61 = arith.constant 1 : i64
    %221 = arith.addi %220, %c1_i64_61 : i64
    llvm.store %221, %9 : i64, !llvm.ptr
    %222 = arith.cmpi ult, %c1024_i64, %221 : i64
    %c92_i8_62 = arith.constant 92 : i8
    cf.cond_br %222, ^bb1(%c92_i8_62 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %223 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %224 = llvm.load %223 : !llvm.ptr -> !llvm.ptr
    %225 = llvm.getelementptr %224[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %226 = llvm.load %225 : !llvm.ptr -> i256
    %227 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %228 = llvm.load %227 : !llvm.ptr -> !llvm.ptr
    llvm.store %226, %228 : i256, !llvm.ptr
    %229 = llvm.getelementptr %228[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %229, %227 : !llvm.ptr, !llvm.ptr
    %230 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_63 = arith.constant 1 : i64
    %231 = arith.addi %230, %c1_i64_63 : i64
    llvm.store %231, %9 : i64, !llvm.ptr
    %232 = arith.cmpi ult, %c1024_i64, %231 : i64
    %c92_i8_64 = arith.constant 92 : i8
    cf.cond_br %232, ^bb1(%c92_i8_64 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %233 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %234 = llvm.load %233 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %234 : i256, !llvm.ptr
    %235 = llvm.getelementptr %234[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %235, %233 : !llvm.ptr, !llvm.ptr
    %236 = llvm.load %9 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %237 = arith.addi %236, %c-5_i64 : i64
    llvm.store %237, %9 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %238 = arith.cmpi ult, %236, %c6_i64 : i64
    %c91_i8_65 = arith.constant 91 : i8
    cf.cond_br %238, ^bb1(%c91_i8_65 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %239 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %240 = llvm.load %239 : !llvm.ptr -> !llvm.ptr
    %241 = llvm.getelementptr %240[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %242 = llvm.load %241 : !llvm.ptr -> i256
    llvm.store %241, %239 : !llvm.ptr, !llvm.ptr
    %243 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %244 = llvm.load %243 : !llvm.ptr -> !llvm.ptr
    %245 = llvm.getelementptr %244[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %246 = llvm.load %245 : !llvm.ptr -> i256
    llvm.store %245, %243 : !llvm.ptr, !llvm.ptr
    %247 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %248 = llvm.load %247 : !llvm.ptr -> !llvm.ptr
    %249 = llvm.getelementptr %248[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %250 = llvm.load %249 : !llvm.ptr -> i256
    llvm.store %249, %247 : !llvm.ptr, !llvm.ptr
    %251 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %252 = llvm.load %251 : !llvm.ptr -> !llvm.ptr
    %253 = llvm.getelementptr %252[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %254 = llvm.load %253 : !llvm.ptr -> i256
    llvm.store %253, %251 : !llvm.ptr, !llvm.ptr
    %255 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %256 = llvm.load %255 : !llvm.ptr -> !llvm.ptr
    %257 = llvm.getelementptr %256[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %258 = llvm.load %257 : !llvm.ptr -> i256
    llvm.store %257, %255 : !llvm.ptr, !llvm.ptr
    %259 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %260 = llvm.load %259 : !llvm.ptr -> !llvm.ptr
    %261 = llvm.getelementptr %260[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %262 = llvm.load %261 : !llvm.ptr -> i256
    llvm.store %261, %259 : !llvm.ptr, !llvm.ptr
    %c0_i256_66 = arith.constant 0 : i256
    %263 = arith.trunci %242 : i256 to i64
    %264 = arith.trunci %250 : i256 to i64
    %265 = arith.trunci %254 : i256 to i64
    %266 = arith.trunci %258 : i256 to i64
    %267 = arith.trunci %262 : i256 to i64
    %268 = arith.addi %264, %265 : i64
    %269 = arith.addi %266, %267 : i64
    %270 = arith.maxui %268, %269 : i64
    %c0_i64_67 = arith.constant 0 : i64
    %271 = arith.cmpi slt, %270, %c0_i64_67 : i64
    %c84_i8_68 = arith.constant 84 : i8
    cf.cond_br %271, ^bb1(%c84_i8_68 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c31_i64_69 = arith.constant 31 : i64
    %c32_i64_70 = arith.constant 32 : i64
    %272 = arith.addi %270, %c31_i64_69 : i64
    %273 = arith.divui %272, %c32_i64_70 : i64
    %274 = arith.muli %273, %c32_i64_70 : i64
    %275 = call @dora_fn_extend_memory(%arg0, %274) : (!llvm.ptr, i64) -> !llvm.ptr
    %276 = llvm.getelementptr %275[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %277 = llvm.load %276 : !llvm.ptr -> !llvm.ptr
    %278 = llvm.getelementptr %275[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %279 = llvm.load %278 : !llvm.ptr -> i8
    %c0_i8_71 = arith.constant 0 : i8
    %280 = arith.cmpi ne, %279, %c0_i8_71 : i8
    cf.cond_br %280, ^bb1(%279 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %281 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %277, %281 : !llvm.ptr, !llvm.ptr
    %282 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %274, %282 : i64, !llvm.ptr
    %283 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %284 = llvm.load %283 : !llvm.ptr -> i64
    %c1_i256_72 = arith.constant 1 : i256
    %285 = llvm.alloca %c1_i256_72 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_66, %285 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_73 = arith.constant 1 : i256
    %286 = llvm.alloca %c1_i256_73 x i256 : (i256) -> !llvm.ptr
    llvm.store %246, %286 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_74 = arith.constant 1 : i64
    %287 = llvm.alloca %c1_i64_74 x i64 : (i64) -> !llvm.ptr
    %c0_i8_75 = arith.constant 0 : i8
    %288 = call @dora_fn_call(%arg0, %263, %286, %285, %264, %265, %266, %267, %284, %287, %c0_i8_75) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %289 = llvm.getelementptr %288[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %290 = llvm.load %289 : !llvm.ptr -> i8
    %291 = llvm.load %287 : !llvm.ptr -> i64
    %292 = arith.extui %290 : i8 to i256
    %293 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %294 = llvm.load %293 : !llvm.ptr -> !llvm.ptr
    llvm.store %292, %294 : i256, !llvm.ptr
    %295 = llvm.getelementptr %294[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %295, %293 : !llvm.ptr, !llvm.ptr
    %296 = llvm.load %9 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %297 = arith.addi %296, %c-1_i64 : i64
    llvm.store %297, %9 : i64, !llvm.ptr
    %c1_i64_76 = arith.constant 1 : i64
    %298 = arith.cmpi ult, %296, %c1_i64_76 : i64
    %c91_i8_77 = arith.constant 91 : i8
    cf.cond_br %298, ^bb1(%c91_i8_77 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %299 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %300 = llvm.load %299 : !llvm.ptr -> !llvm.ptr
    %301 = llvm.getelementptr %300[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %302 = llvm.load %301 : !llvm.ptr -> i256
    llvm.store %301, %299 : !llvm.ptr, !llvm.ptr
    %303 = llvm.load %9 : !llvm.ptr -> i64
    %c-1_i64_78 = arith.constant -1 : i64
    %304 = arith.addi %303, %c-1_i64_78 : i64
    llvm.store %304, %9 : i64, !llvm.ptr
    %c1_i64_79 = arith.constant 1 : i64
    %305 = arith.cmpi ult, %303, %c1_i64_79 : i64
    %c91_i8_80 = arith.constant 91 : i8
    cf.cond_br %305, ^bb1(%c91_i8_80 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %306 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %307 = llvm.load %306 : !llvm.ptr -> !llvm.ptr
    %308 = llvm.getelementptr %307[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %309 = llvm.load %308 : !llvm.ptr -> i256
    llvm.store %308, %306 : !llvm.ptr, !llvm.ptr
    %310 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_81 = arith.constant 1 : i64
    %311 = arith.addi %310, %c1_i64_81 : i64
    llvm.store %311, %9 : i64, !llvm.ptr
    %312 = arith.cmpi ult, %c1024_i64, %311 : i64
    %c92_i8_82 = arith.constant 92 : i8
    cf.cond_br %312, ^bb1(%c92_i8_82 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %c0_i256_83 = arith.constant 0 : i256
    %313 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %314 = llvm.load %313 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_83, %314 : i256, !llvm.ptr
    %315 = llvm.getelementptr %314[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %315, %313 : !llvm.ptr, !llvm.ptr
    %316 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_84 = arith.constant 1 : i64
    %317 = arith.addi %316, %c1_i64_84 : i64
    llvm.store %317, %9 : i64, !llvm.ptr
    %318 = arith.cmpi ult, %c1024_i64, %317 : i64
    %c92_i8_85 = arith.constant 92 : i8
    cf.cond_br %318, ^bb1(%c92_i8_85 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %c0_i256_86 = arith.constant 0 : i256
    %319 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %320 = llvm.load %319 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_86, %320 : i256, !llvm.ptr
    %321 = llvm.getelementptr %320[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %321, %319 : !llvm.ptr, !llvm.ptr
    %322 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_87 = arith.constant -2 : i64
    %323 = arith.addi %322, %c-2_i64_87 : i64
    llvm.store %323, %9 : i64, !llvm.ptr
    %c2_i64_88 = arith.constant 2 : i64
    %324 = arith.cmpi ult, %322, %c2_i64_88 : i64
    %c91_i8_89 = arith.constant 91 : i8
    cf.cond_br %324, ^bb1(%c91_i8_89 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %325 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %326 = llvm.load %325 : !llvm.ptr -> !llvm.ptr
    %327 = llvm.getelementptr %326[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %328 = llvm.load %327 : !llvm.ptr -> i256
    llvm.store %327, %325 : !llvm.ptr, !llvm.ptr
    %329 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %330 = llvm.load %329 : !llvm.ptr -> !llvm.ptr
    %331 = llvm.getelementptr %330[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %332 = llvm.load %331 : !llvm.ptr -> i256
    llvm.store %331, %329 : !llvm.ptr, !llvm.ptr
    %333 = arith.trunci %328 : i256 to i64
    %c32_i64_90 = arith.constant 32 : i64
    %334 = arith.addi %333, %c32_i64_90 : i64
    %c0_i64_91 = arith.constant 0 : i64
    %335 = arith.cmpi slt, %334, %c0_i64_91 : i64
    %c84_i8_92 = arith.constant 84 : i8
    cf.cond_br %335, ^bb1(%c84_i8_92 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %c31_i64_93 = arith.constant 31 : i64
    %c32_i64_94 = arith.constant 32 : i64
    %336 = arith.addi %334, %c31_i64_93 : i64
    %337 = arith.divui %336, %c32_i64_94 : i64
    %338 = arith.muli %337, %c32_i64_94 : i64
    %339 = call @dora_fn_extend_memory(%arg0, %338) : (!llvm.ptr, i64) -> !llvm.ptr
    %340 = llvm.getelementptr %339[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %341 = llvm.load %340 : !llvm.ptr -> !llvm.ptr
    %342 = llvm.getelementptr %339[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %343 = llvm.load %342 : !llvm.ptr -> i8
    %c0_i8_95 = arith.constant 0 : i8
    %344 = arith.cmpi ne, %343, %c0_i8_95 : i8
    cf.cond_br %344, ^bb1(%343 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %345 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %341, %345 : !llvm.ptr, !llvm.ptr
    %346 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %338, %346 : i64, !llvm.ptr
    %347 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %348 = llvm.load %347 : !llvm.ptr -> !llvm.ptr
    %349 = llvm.getelementptr %348[%333] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %350 = llvm.intr.bswap(%332)  : (i256) -> i256
    llvm.store %350, %349 {alignment = 1 : i64} : i256, !llvm.ptr
    %351 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_96 = arith.constant 1 : i64
    %352 = arith.addi %351, %c1_i64_96 : i64
    llvm.store %352, %9 : i64, !llvm.ptr
    %353 = arith.cmpi ult, %c1024_i64, %352 : i64
    %c92_i8_97 = arith.constant 92 : i8
    cf.cond_br %353, ^bb1(%c92_i8_97 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %c0_i256_98 = arith.constant 0 : i256
    %354 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %355 = llvm.load %354 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_98, %355 : i256, !llvm.ptr
    %356 = llvm.getelementptr %355[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %356, %354 : !llvm.ptr, !llvm.ptr
    %357 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_99 = arith.constant 1 : i64
    %358 = arith.addi %357, %c1_i64_99 : i64
    llvm.store %358, %9 : i64, !llvm.ptr
    %359 = arith.cmpi ult, %c1024_i64, %358 : i64
    %c92_i8_100 = arith.constant 92 : i8
    cf.cond_br %359, ^bb1(%c92_i8_100 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c32_i256_101 = arith.constant 32 : i256
    %360 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %361 = llvm.load %360 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_101, %361 : i256, !llvm.ptr
    %362 = llvm.getelementptr %361[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %362, %360 : !llvm.ptr, !llvm.ptr
    %363 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_102 = arith.constant -2 : i64
    %364 = arith.addi %363, %c-2_i64_102 : i64
    llvm.store %364, %9 : i64, !llvm.ptr
    %c2_i64_103 = arith.constant 2 : i64
    %365 = arith.cmpi ult, %363, %c2_i64_103 : i64
    %c91_i8_104 = arith.constant 91 : i8
    cf.cond_br %365, ^bb1(%c91_i8_104 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %366 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %367 = llvm.load %366 : !llvm.ptr -> !llvm.ptr
    %368 = llvm.getelementptr %367[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %369 = llvm.load %368 : !llvm.ptr -> i256
    llvm.store %368, %366 : !llvm.ptr, !llvm.ptr
    %370 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %371 = llvm.load %370 : !llvm.ptr -> !llvm.ptr
    %372 = llvm.getelementptr %371[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %373 = llvm.load %372 : !llvm.ptr -> i256
    llvm.store %372, %370 : !llvm.ptr, !llvm.ptr
    %374 = arith.trunci %369 : i256 to i64
    %c32_i64_105 = arith.constant 32 : i64
    %375 = arith.addi %374, %c32_i64_105 : i64
    %c0_i64_106 = arith.constant 0 : i64
    %376 = arith.cmpi slt, %375, %c0_i64_106 : i64
    %c84_i8_107 = arith.constant 84 : i8
    cf.cond_br %376, ^bb1(%c84_i8_107 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c31_i64_108 = arith.constant 31 : i64
    %c32_i64_109 = arith.constant 32 : i64
    %377 = arith.addi %375, %c31_i64_108 : i64
    %378 = arith.divui %377, %c32_i64_109 : i64
    %379 = arith.muli %378, %c32_i64_109 : i64
    %380 = call @dora_fn_extend_memory(%arg0, %379) : (!llvm.ptr, i64) -> !llvm.ptr
    %381 = llvm.getelementptr %380[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %382 = llvm.load %381 : !llvm.ptr -> !llvm.ptr
    %383 = llvm.getelementptr %380[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %384 = llvm.load %383 : !llvm.ptr -> i8
    %c0_i8_110 = arith.constant 0 : i8
    %385 = arith.cmpi ne, %384, %c0_i8_110 : i8
    cf.cond_br %385, ^bb1(%384 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %386 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %382, %386 : !llvm.ptr, !llvm.ptr
    %387 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %379, %387 : i64, !llvm.ptr
    %388 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %389 = llvm.load %388 : !llvm.ptr -> !llvm.ptr
    %390 = llvm.getelementptr %389[%374] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %391 = llvm.intr.bswap(%373)  : (i256) -> i256
    llvm.store %391, %390 {alignment = 1 : i64} : i256, !llvm.ptr
    %392 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_111 = arith.constant 1 : i64
    %393 = arith.addi %392, %c1_i64_111 : i64
    llvm.store %393, %9 : i64, !llvm.ptr
    %394 = arith.cmpi ult, %c1024_i64, %393 : i64
    %c92_i8_112 = arith.constant 92 : i8
    cf.cond_br %394, ^bb1(%c92_i8_112 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c0_i256_113 = arith.constant 0 : i256
    %395 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %396 = llvm.load %395 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_113, %396 : i256, !llvm.ptr
    %397 = llvm.getelementptr %396[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %397, %395 : !llvm.ptr, !llvm.ptr
    %398 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_114 = arith.constant 1 : i64
    %399 = arith.addi %398, %c1_i64_114 : i64
    llvm.store %399, %9 : i64, !llvm.ptr
    %400 = arith.cmpi ult, %c1024_i64, %399 : i64
    %c92_i8_115 = arith.constant 92 : i8
    cf.cond_br %400, ^bb1(%c92_i8_115 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %c64_i256_116 = arith.constant 64 : i256
    %401 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %402 = llvm.load %401 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256_116, %402 : i256, !llvm.ptr
    %403 = llvm.getelementptr %402[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %403, %401 : !llvm.ptr, !llvm.ptr
    %404 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_117 = arith.constant -2 : i64
    %405 = arith.addi %404, %c-2_i64_117 : i64
    llvm.store %405, %9 : i64, !llvm.ptr
    %c2_i64_118 = arith.constant 2 : i64
    %406 = arith.cmpi ult, %404, %c2_i64_118 : i64
    %c91_i8_119 = arith.constant 91 : i8
    cf.cond_br %406, ^bb1(%c91_i8_119 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %407 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %408 = llvm.load %407 : !llvm.ptr -> !llvm.ptr
    %409 = llvm.getelementptr %408[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %410 = llvm.load %409 : !llvm.ptr -> i256
    llvm.store %409, %407 : !llvm.ptr, !llvm.ptr
    %411 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %412 = llvm.load %411 : !llvm.ptr -> !llvm.ptr
    %413 = llvm.getelementptr %412[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %414 = llvm.load %413 : !llvm.ptr -> i256
    llvm.store %413, %411 : !llvm.ptr, !llvm.ptr
    %415 = arith.trunci %410 : i256 to i64
    %c32_i64_120 = arith.constant 32 : i64
    %416 = arith.addi %415, %c32_i64_120 : i64
    %c0_i64_121 = arith.constant 0 : i64
    %417 = arith.cmpi slt, %416, %c0_i64_121 : i64
    %c84_i8_122 = arith.constant 84 : i8
    cf.cond_br %417, ^bb1(%c84_i8_122 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %c31_i64_123 = arith.constant 31 : i64
    %c32_i64_124 = arith.constant 32 : i64
    %418 = arith.addi %416, %c31_i64_123 : i64
    %419 = arith.divui %418, %c32_i64_124 : i64
    %420 = arith.muli %419, %c32_i64_124 : i64
    %421 = call @dora_fn_extend_memory(%arg0, %420) : (!llvm.ptr, i64) -> !llvm.ptr
    %422 = llvm.getelementptr %421[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %423 = llvm.load %422 : !llvm.ptr -> !llvm.ptr
    %424 = llvm.getelementptr %421[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %425 = llvm.load %424 : !llvm.ptr -> i8
    %c0_i8_125 = arith.constant 0 : i8
    %426 = arith.cmpi ne, %425, %c0_i8_125 : i8
    cf.cond_br %426, ^bb1(%425 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %427 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %423, %427 : !llvm.ptr, !llvm.ptr
    %428 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %420, %428 : i64, !llvm.ptr
    %429 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %430 = llvm.load %429 : !llvm.ptr -> !llvm.ptr
    %431 = llvm.getelementptr %430[%415] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %432 = llvm.intr.bswap(%414)  : (i256) -> i256
    llvm.store %432, %431 {alignment = 1 : i64} : i256, !llvm.ptr
    %433 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_126 = arith.constant 1 : i64
    %434 = arith.addi %433, %c1_i64_126 : i64
    llvm.store %434, %9 : i64, !llvm.ptr
    %435 = arith.cmpi ult, %c1024_i64, %434 : i64
    %c92_i8_127 = arith.constant 92 : i8
    cf.cond_br %435, ^bb1(%c92_i8_127 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %c32_i256_128 = arith.constant 32 : i256
    %436 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %437 = llvm.load %436 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_128, %437 : i256, !llvm.ptr
    %438 = llvm.getelementptr %437[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %438, %436 : !llvm.ptr, !llvm.ptr
    %439 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_129 = arith.constant 1 : i64
    %440 = arith.addi %439, %c1_i64_129 : i64
    llvm.store %440, %9 : i64, !llvm.ptr
    %441 = arith.cmpi ult, %c1024_i64, %440 : i64
    %c92_i8_130 = arith.constant 92 : i8
    cf.cond_br %441, ^bb1(%c92_i8_130 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %c0_i256_131 = arith.constant 0 : i256
    %442 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %443 = llvm.load %442 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_131, %443 : i256, !llvm.ptr
    %444 = llvm.getelementptr %443[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %444, %442 : !llvm.ptr, !llvm.ptr
    %445 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_132 = arith.constant 1 : i64
    %446 = arith.addi %445, %c1_i64_132 : i64
    llvm.store %446, %9 : i64, !llvm.ptr
    %447 = arith.cmpi ult, %c1024_i64, %446 : i64
    %c92_i8_133 = arith.constant 92 : i8
    cf.cond_br %447, ^bb1(%c92_i8_133 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %c0_i256_134 = arith.constant 0 : i256
    %448 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %449 = llvm.load %448 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_134, %449 : i256, !llvm.ptr
    %450 = llvm.getelementptr %449[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %450, %448 : !llvm.ptr, !llvm.ptr
    %451 = llvm.load %9 : !llvm.ptr -> i64
    %c-3_i64 = arith.constant -3 : i64
    %452 = arith.addi %451, %c-3_i64 : i64
    llvm.store %452, %9 : i64, !llvm.ptr
    %c3_i64_135 = arith.constant 3 : i64
    %453 = arith.cmpi ult, %451, %c3_i64_135 : i64
    %c91_i8_136 = arith.constant 91 : i8
    cf.cond_br %453, ^bb1(%c91_i8_136 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %454 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %455 = llvm.load %454 : !llvm.ptr -> !llvm.ptr
    %456 = llvm.getelementptr %455[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %457 = llvm.load %456 : !llvm.ptr -> i256
    llvm.store %456, %454 : !llvm.ptr, !llvm.ptr
    %458 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %459 = llvm.load %458 : !llvm.ptr -> !llvm.ptr
    %460 = llvm.getelementptr %459[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %461 = llvm.load %460 : !llvm.ptr -> i256
    llvm.store %460, %458 : !llvm.ptr, !llvm.ptr
    %462 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %463 = llvm.load %462 : !llvm.ptr -> !llvm.ptr
    %464 = llvm.getelementptr %463[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %465 = llvm.load %464 : !llvm.ptr -> i256
    llvm.store %464, %462 : !llvm.ptr, !llvm.ptr
    %466 = arith.trunci %457 : i256 to i64
    %467 = arith.trunci %461 : i256 to i64
    %468 = arith.trunci %465 : i256 to i64
    %469 = arith.addi %466, %468 : i64
    %c0_i64_137 = arith.constant 0 : i64
    %470 = arith.cmpi slt, %469, %c0_i64_137 : i64
    %c84_i8_138 = arith.constant 84 : i8
    cf.cond_br %470, ^bb1(%c84_i8_138 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %c31_i64_139 = arith.constant 31 : i64
    %c32_i64_140 = arith.constant 32 : i64
    %471 = arith.addi %469, %c31_i64_139 : i64
    %472 = arith.divui %471, %c32_i64_140 : i64
    %473 = arith.muli %472, %c32_i64_140 : i64
    %474 = call @dora_fn_extend_memory(%arg0, %473) : (!llvm.ptr, i64) -> !llvm.ptr
    %475 = llvm.getelementptr %474[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %476 = llvm.load %475 : !llvm.ptr -> !llvm.ptr
    %477 = llvm.getelementptr %474[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %478 = llvm.load %477 : !llvm.ptr -> i8
    %c0_i8_141 = arith.constant 0 : i8
    %479 = arith.cmpi ne, %478, %c0_i8_141 : i8
    cf.cond_br %479, ^bb1(%478 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %480 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %476, %480 : !llvm.ptr, !llvm.ptr
    %481 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %473, %481 : i64, !llvm.ptr
    %482 = call @dora_fn_return_data_copy(%arg0, %466, %467, %468) : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr
    cf.br ^bb57
  ^bb57:  // pred: ^bb56
    %c0_i64_142 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %483 = call @dora_fn_write_result(%arg0, %c0_i64_142, %c0_i64_142, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
