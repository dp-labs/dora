---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_read_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_write_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_copy_ext_code_to_memory(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    cf.br ^bb3
  ^bb1(%10: i8):  // 11 preds: ^bb2, ^bb5, ^bb9, ^bb13, ^bb18, ^bb19, ^bb27, ^bb33, ^bb37, ^bb41, ^bb46
    %c0_i64_1 = arith.constant 0 : i64
    %11 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %10) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %10 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    cf.br ^bb5
  ^bb5:  // pred: ^bb4
    %19 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %20 = llvm.load %19 : !llvm.ptr -> !llvm.ptr
    %21 = llvm.getelementptr %20[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %22 = llvm.load %21 : !llvm.ptr -> i256
    llvm.store %21, %19 : !llvm.ptr, !llvm.ptr
    %23 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %24 = llvm.load %23 : !llvm.ptr -> !llvm.ptr
    %25 = llvm.getelementptr %24[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %26 = llvm.load %25 : !llvm.ptr -> i256
    llvm.store %25, %23 : !llvm.ptr, !llvm.ptr
    %27 = arith.trunci %22 : i256 to i64
    %c32_i64 = arith.constant 32 : i64
    %28 = arith.addi %27, %c32_i64 : i64
    %c0_i64_2 = arith.constant 0 : i64
    %29 = arith.cmpi slt, %28, %c0_i64_2 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %29, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %30 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %31 = llvm.load %30 : !llvm.ptr -> i64
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_3 = arith.constant 32 : i64
    %32 = arith.addi %28, %c31_i64 : i64
    %33 = arith.divui %32, %c32_i64_3 : i64
    %34 = arith.muli %33, %c32_i64_3 : i64
    %35 = arith.cmpi ult, %31, %34 : i64
    scf.if %35 {
      %334 = func.call @dora_fn_extend_memory(%arg0, %34) : (!llvm.ptr, i64) -> !llvm.ptr
      %335 = llvm.getelementptr %334[16] : (!llvm.ptr) -> !llvm.ptr, i8
      %336 = llvm.load %335 : !llvm.ptr -> !llvm.ptr
      llvm.store %34, %30 : i64, !llvm.ptr
      %337 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
      llvm.store %336, %337 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %36 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %39 = llvm.intr.bswap(%26)  : (i256) -> i256
    llvm.store %39, %38 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb7
  ^bb7:  // pred: ^bb6
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %41 : i256, !llvm.ptr
    %42 = llvm.getelementptr %41[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    cf.br ^bb8
  ^bb8:  // pred: ^bb7
    %c32_i256 = arith.constant 32 : i256
    %43 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %44 = llvm.load %43 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %44 : i256, !llvm.ptr
    %45 = llvm.getelementptr %44[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %45, %43 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb9:  // pred: ^bb8
    %46 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %47 = llvm.load %46 : !llvm.ptr -> !llvm.ptr
    %48 = llvm.getelementptr %47[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %49 = llvm.load %48 : !llvm.ptr -> i256
    llvm.store %48, %46 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %51 = llvm.load %50 : !llvm.ptr -> !llvm.ptr
    %52 = llvm.getelementptr %51[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %53 = llvm.load %52 : !llvm.ptr -> i256
    llvm.store %52, %50 : !llvm.ptr, !llvm.ptr
    %54 = arith.trunci %49 : i256 to i64
    %c32_i64_4 = arith.constant 32 : i64
    %55 = arith.addi %54, %c32_i64_4 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %56 = arith.cmpi slt, %55, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %56, ^bb1(%c84_i8_6 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %57 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> i64
    %c31_i64_7 = arith.constant 31 : i64
    %c32_i64_8 = arith.constant 32 : i64
    %59 = arith.addi %55, %c31_i64_7 : i64
    %60 = arith.divui %59, %c32_i64_8 : i64
    %61 = arith.muli %60, %c32_i64_8 : i64
    %62 = arith.cmpi ult, %58, %61 : i64
    scf.if %62 {
      %334 = func.call @dora_fn_extend_memory(%arg0, %61) : (!llvm.ptr, i64) -> !llvm.ptr
      %335 = llvm.getelementptr %334[16] : (!llvm.ptr) -> !llvm.ptr, i8
      %336 = llvm.load %335 : !llvm.ptr -> !llvm.ptr
      llvm.store %61, %57 : i64, !llvm.ptr
      %337 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
      llvm.store %336, %337 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %63 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> !llvm.ptr
    %65 = llvm.getelementptr %64[%54] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %66 = llvm.intr.bswap(%53)  : (i256) -> i256
    llvm.store %66, %65 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb11
  ^bb11:  // pred: ^bb10
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %67 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %68 : i256, !llvm.ptr
    %69 = llvm.getelementptr %68[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %69, %67 : !llvm.ptr, !llvm.ptr
    cf.br ^bb12
  ^bb12:  // pred: ^bb11
    %c64_i256 = arith.constant 64 : i256
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %71 : i256, !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    cf.br ^bb13
  ^bb13:  // pred: ^bb12
    %73 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> !llvm.ptr
    %75 = llvm.getelementptr %74[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %76 = llvm.load %75 : !llvm.ptr -> i256
    llvm.store %75, %73 : !llvm.ptr, !llvm.ptr
    %77 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> !llvm.ptr
    %79 = llvm.getelementptr %78[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %80 = llvm.load %79 : !llvm.ptr -> i256
    llvm.store %79, %77 : !llvm.ptr, !llvm.ptr
    %81 = arith.trunci %76 : i256 to i64
    %c32_i64_9 = arith.constant 32 : i64
    %82 = arith.addi %81, %c32_i64_9 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %83 = arith.cmpi slt, %82, %c0_i64_10 : i64
    %c84_i8_11 = arith.constant 84 : i8
    cf.cond_br %83, ^bb1(%c84_i8_11 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %84 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c31_i64_12 = arith.constant 31 : i64
    %c32_i64_13 = arith.constant 32 : i64
    %86 = arith.addi %82, %c31_i64_12 : i64
    %87 = arith.divui %86, %c32_i64_13 : i64
    %88 = arith.muli %87, %c32_i64_13 : i64
    %89 = arith.cmpi ult, %85, %88 : i64
    scf.if %89 {
      %334 = func.call @dora_fn_extend_memory(%arg0, %88) : (!llvm.ptr, i64) -> !llvm.ptr
      %335 = llvm.getelementptr %334[16] : (!llvm.ptr) -> !llvm.ptr, i8
      %336 = llvm.load %335 : !llvm.ptr -> !llvm.ptr
      llvm.store %88, %84 : i64, !llvm.ptr
      %337 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
      llvm.store %336, %337 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %90 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %91 = llvm.load %90 : !llvm.ptr -> !llvm.ptr
    %92 = llvm.getelementptr %91[%81] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %93 = llvm.intr.bswap(%80)  : (i256) -> i256
    llvm.store %93, %92 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb15
  ^bb15:  // pred: ^bb14
    %c77_i256 = arith.constant 77 : i256
    %94 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %95 = llvm.load %94 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %95 : i256, !llvm.ptr
    %96 = llvm.getelementptr %95[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %96, %94 : !llvm.ptr, !llvm.ptr
    cf.br ^bb16
  ^bb16:  // pred: ^bb15
    %c0_i256_14 = arith.constant 0 : i256
    %97 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %98 = llvm.load %97 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_14, %98 : i256, !llvm.ptr
    %99 = llvm.getelementptr %98[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %99, %97 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb17:  // pred: ^bb16
    %c0_i256_15 = arith.constant 0 : i256
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_15, %101 : i256, !llvm.ptr
    %102 = llvm.getelementptr %101[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    cf.br ^bb18
  ^bb18:  // pred: ^bb17
    %103 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> !llvm.ptr
    %105 = llvm.getelementptr %104[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %106 = llvm.load %105 : !llvm.ptr -> i256
    llvm.store %105, %103 : !llvm.ptr, !llvm.ptr
    %107 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> !llvm.ptr
    %109 = llvm.getelementptr %108[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %110 = llvm.load %109 : !llvm.ptr -> i256
    llvm.store %109, %107 : !llvm.ptr, !llvm.ptr
    %111 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> !llvm.ptr
    %113 = llvm.getelementptr %112[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %114 = llvm.load %113 : !llvm.ptr -> i256
    llvm.store %113, %111 : !llvm.ptr, !llvm.ptr
    %115 = arith.trunci %110 : i256 to i64
    %116 = arith.trunci %114 : i256 to i64
    %117 = arith.addi %115, %116 : i64
    %c0_i64_16 = arith.constant 0 : i64
    %118 = arith.cmpi slt, %117, %c0_i64_16 : i64
    %c84_i8_17 = arith.constant 84 : i8
    cf.cond_br %118, ^bb1(%c84_i8_17 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %119 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %120 = llvm.load %119 : !llvm.ptr -> i64
    %c31_i64_18 = arith.constant 31 : i64
    %c32_i64_19 = arith.constant 32 : i64
    %121 = arith.addi %117, %c31_i64_18 : i64
    %122 = arith.divui %121, %c32_i64_19 : i64
    %123 = arith.muli %122, %c32_i64_19 : i64
    %124 = arith.cmpi ult, %120, %123 : i64
    scf.if %124 {
      %334 = func.call @dora_fn_extend_memory(%arg0, %123) : (!llvm.ptr, i64) -> !llvm.ptr
      %335 = llvm.getelementptr %334[16] : (!llvm.ptr) -> !llvm.ptr, i8
      %336 = llvm.load %335 : !llvm.ptr -> !llvm.ptr
      llvm.store %123, %119 : i64, !llvm.ptr
      %337 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
      llvm.store %336, %337 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %c1_i256 = arith.constant 1 : i256
    %125 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %106, %125 {alignment = 1 : i64} : i256, !llvm.ptr
    %126 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %128 = llvm.alloca %c1_i64 x i64 : (i64) -> !llvm.ptr
    llvm.store %127, %128 {alignment = 1 : i64} : i64, !llvm.ptr
    %129 = call @dora_fn_create(%arg0, %116, %115, %125, %128) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %130 = llvm.getelementptr %129[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %131 = llvm.load %130 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %132 = arith.cmpi ne, %c0_i8, %131 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %132, ^bb1(%c94_i8 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %133 = llvm.load %125 : !llvm.ptr -> i256
    %134 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> !llvm.ptr
    llvm.store %133, %135 : i256, !llvm.ptr
    %136 = llvm.getelementptr %135[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %136, %134 : !llvm.ptr, !llvm.ptr
    cf.br ^bb21
  ^bb21:  // pred: ^bb20
    %c0_i256_20 = arith.constant 0 : i256
    %137 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %138 = llvm.load %137 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_20, %138 : i256, !llvm.ptr
    %139 = llvm.getelementptr %138[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %139, %137 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_21 = arith.constant 0 : i256
    %140 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_21, %141 : i256, !llvm.ptr
    %142 = llvm.getelementptr %141[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %142, %140 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i256_22 = arith.constant 0 : i256
    %143 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %144 = llvm.load %143 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_22, %144 : i256, !llvm.ptr
    %145 = llvm.getelementptr %144[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %145, %143 : !llvm.ptr, !llvm.ptr
    cf.br ^bb24
  ^bb24:  // pred: ^bb23
    %c0_i256_23 = arith.constant 0 : i256
    %146 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_23, %147 : i256, !llvm.ptr
    %148 = llvm.getelementptr %147[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %148, %146 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb25:  // pred: ^bb24
    %149 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> !llvm.ptr
    %151 = llvm.getelementptr %150[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %152 = llvm.load %151 : !llvm.ptr -> i256
    %153 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %154 = llvm.load %153 : !llvm.ptr -> !llvm.ptr
    llvm.store %152, %154 : i256, !llvm.ptr
    %155 = llvm.getelementptr %154[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %155, %153 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb26:  // pred: ^bb25
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %156 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %157 = llvm.load %156 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %157 : i256, !llvm.ptr
    %158 = llvm.getelementptr %157[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %158, %156 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb27:  // pred: ^bb26
    %159 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> !llvm.ptr
    %161 = llvm.getelementptr %160[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %162 = llvm.load %161 : !llvm.ptr -> i256
    llvm.store %161, %159 : !llvm.ptr, !llvm.ptr
    %163 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> !llvm.ptr
    %165 = llvm.getelementptr %164[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %166 = llvm.load %165 : !llvm.ptr -> i256
    llvm.store %165, %163 : !llvm.ptr, !llvm.ptr
    %167 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %168 = llvm.load %167 : !llvm.ptr -> !llvm.ptr
    %169 = llvm.getelementptr %168[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %170 = llvm.load %169 : !llvm.ptr -> i256
    llvm.store %169, %167 : !llvm.ptr, !llvm.ptr
    %171 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %172 = llvm.load %171 : !llvm.ptr -> !llvm.ptr
    %173 = llvm.getelementptr %172[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %174 = llvm.load %173 : !llvm.ptr -> i256
    llvm.store %173, %171 : !llvm.ptr, !llvm.ptr
    %175 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %176 = llvm.load %175 : !llvm.ptr -> !llvm.ptr
    %177 = llvm.getelementptr %176[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %178 = llvm.load %177 : !llvm.ptr -> i256
    llvm.store %177, %175 : !llvm.ptr, !llvm.ptr
    %179 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %180 = llvm.load %179 : !llvm.ptr -> !llvm.ptr
    %181 = llvm.getelementptr %180[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %182 = llvm.load %181 : !llvm.ptr -> i256
    llvm.store %181, %179 : !llvm.ptr, !llvm.ptr
    %c0_i256_24 = arith.constant 0 : i256
    %183 = arith.trunci %162 : i256 to i64
    %184 = arith.trunci %170 : i256 to i64
    %185 = arith.trunci %174 : i256 to i64
    %186 = arith.trunci %178 : i256 to i64
    %187 = arith.trunci %182 : i256 to i64
    %188 = arith.addi %184, %185 : i64
    %189 = arith.addi %186, %187 : i64
    %190 = arith.maxui %188, %189 : i64
    %c0_i64_25 = arith.constant 0 : i64
    %191 = arith.cmpi slt, %190, %c0_i64_25 : i64
    %c84_i8_26 = arith.constant 84 : i8
    cf.cond_br %191, ^bb1(%c84_i8_26 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %192 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> i64
    %c31_i64_27 = arith.constant 31 : i64
    %c32_i64_28 = arith.constant 32 : i64
    %194 = arith.addi %190, %c31_i64_27 : i64
    %195 = arith.divui %194, %c32_i64_28 : i64
    %196 = arith.muli %195, %c32_i64_28 : i64
    %197 = arith.cmpi ult, %193, %196 : i64
    scf.if %197 {
      %334 = func.call @dora_fn_extend_memory(%arg0, %196) : (!llvm.ptr, i64) -> !llvm.ptr
      %335 = llvm.getelementptr %334[16] : (!llvm.ptr) -> !llvm.ptr, i8
      %336 = llvm.load %335 : !llvm.ptr -> !llvm.ptr
      llvm.store %196, %192 : i64, !llvm.ptr
      %337 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
      llvm.store %336, %337 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %198 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %199 = llvm.load %198 : !llvm.ptr -> i64
    %c1_i256_29 = arith.constant 1 : i256
    %200 = llvm.alloca %c1_i256_29 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_24, %200 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_30 = arith.constant 1 : i256
    %201 = llvm.alloca %c1_i256_30 x i256 : (i256) -> !llvm.ptr
    llvm.store %166, %201 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_31 = arith.constant 1 : i64
    %202 = llvm.alloca %c1_i64_31 x i64 : (i64) -> !llvm.ptr
    %c0_i8_32 = arith.constant 0 : i8
    %203 = call @dora_fn_call(%arg0, %183, %201, %200, %184, %185, %186, %187, %199, %202, %c0_i8_32) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %204 = llvm.getelementptr %203[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %205 = llvm.load %204 : !llvm.ptr -> i8
    %206 = llvm.load %202 : !llvm.ptr -> i64
    %207 = arith.extui %205 : i8 to i256
    %208 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %209 = llvm.load %208 : !llvm.ptr -> !llvm.ptr
    llvm.store %207, %209 : i256, !llvm.ptr
    %210 = llvm.getelementptr %209[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %210, %208 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb29:  // pred: ^bb28
    %211 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %212 = llvm.load %211 : !llvm.ptr -> !llvm.ptr
    %213 = llvm.getelementptr %212[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %214 = llvm.load %213 : !llvm.ptr -> i256
    llvm.store %213, %211 : !llvm.ptr, !llvm.ptr
    cf.br ^bb30
  ^bb30:  // pred: ^bb29
    %215 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %216 = llvm.load %215 : !llvm.ptr -> !llvm.ptr
    %217 = llvm.getelementptr %216[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %218 = llvm.load %217 : !llvm.ptr -> i256
    llvm.store %217, %215 : !llvm.ptr, !llvm.ptr
    cf.br ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i256_33 = arith.constant 0 : i256
    %219 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %220 = llvm.load %219 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_33, %220 : i256, !llvm.ptr
    %221 = llvm.getelementptr %220[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %221, %219 : !llvm.ptr, !llvm.ptr
    cf.br ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i256_34 = arith.constant 0 : i256
    %222 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_34, %223 : i256, !llvm.ptr
    %224 = llvm.getelementptr %223[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %224, %222 : !llvm.ptr, !llvm.ptr
    cf.br ^bb33
  ^bb33:  // pred: ^bb32
    %225 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %226 = llvm.load %225 : !llvm.ptr -> !llvm.ptr
    %227 = llvm.getelementptr %226[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %228 = llvm.load %227 : !llvm.ptr -> i256
    llvm.store %227, %225 : !llvm.ptr, !llvm.ptr
    %229 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %230 = llvm.load %229 : !llvm.ptr -> !llvm.ptr
    %231 = llvm.getelementptr %230[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %232 = llvm.load %231 : !llvm.ptr -> i256
    llvm.store %231, %229 : !llvm.ptr, !llvm.ptr
    %233 = arith.trunci %228 : i256 to i64
    %c32_i64_35 = arith.constant 32 : i64
    %234 = arith.addi %233, %c32_i64_35 : i64
    %c0_i64_36 = arith.constant 0 : i64
    %235 = arith.cmpi slt, %234, %c0_i64_36 : i64
    %c84_i8_37 = arith.constant 84 : i8
    cf.cond_br %235, ^bb1(%c84_i8_37 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %236 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %237 = llvm.load %236 : !llvm.ptr -> i64
    %c31_i64_38 = arith.constant 31 : i64
    %c32_i64_39 = arith.constant 32 : i64
    %238 = arith.addi %234, %c31_i64_38 : i64
    %239 = arith.divui %238, %c32_i64_39 : i64
    %240 = arith.muli %239, %c32_i64_39 : i64
    %241 = arith.cmpi ult, %237, %240 : i64
    scf.if %241 {
      %334 = func.call @dora_fn_extend_memory(%arg0, %240) : (!llvm.ptr, i64) -> !llvm.ptr
      %335 = llvm.getelementptr %334[16] : (!llvm.ptr) -> !llvm.ptr, i8
      %336 = llvm.load %335 : !llvm.ptr -> !llvm.ptr
      llvm.store %240, %236 : i64, !llvm.ptr
      %337 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
      llvm.store %336, %337 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %242 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %243 = llvm.load %242 : !llvm.ptr -> !llvm.ptr
    %244 = llvm.getelementptr %243[%233] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %245 = llvm.intr.bswap(%232)  : (i256) -> i256
    llvm.store %245, %244 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb35
  ^bb35:  // pred: ^bb34
    %c0_i256_40 = arith.constant 0 : i256
    %246 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %247 = llvm.load %246 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_40, %247 : i256, !llvm.ptr
    %248 = llvm.getelementptr %247[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %248, %246 : !llvm.ptr, !llvm.ptr
    cf.br ^bb36
  ^bb36:  // pred: ^bb35
    %c32_i256_41 = arith.constant 32 : i256
    %249 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_41, %250 : i256, !llvm.ptr
    %251 = llvm.getelementptr %250[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %251, %249 : !llvm.ptr, !llvm.ptr
    cf.br ^bb37
  ^bb37:  // pred: ^bb36
    %252 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> !llvm.ptr
    %254 = llvm.getelementptr %253[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %255 = llvm.load %254 : !llvm.ptr -> i256
    llvm.store %254, %252 : !llvm.ptr, !llvm.ptr
    %256 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %257 = llvm.load %256 : !llvm.ptr -> !llvm.ptr
    %258 = llvm.getelementptr %257[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %259 = llvm.load %258 : !llvm.ptr -> i256
    llvm.store %258, %256 : !llvm.ptr, !llvm.ptr
    %260 = arith.trunci %255 : i256 to i64
    %c32_i64_42 = arith.constant 32 : i64
    %261 = arith.addi %260, %c32_i64_42 : i64
    %c0_i64_43 = arith.constant 0 : i64
    %262 = arith.cmpi slt, %261, %c0_i64_43 : i64
    %c84_i8_44 = arith.constant 84 : i8
    cf.cond_br %262, ^bb1(%c84_i8_44 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %263 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %264 = llvm.load %263 : !llvm.ptr -> i64
    %c31_i64_45 = arith.constant 31 : i64
    %c32_i64_46 = arith.constant 32 : i64
    %265 = arith.addi %261, %c31_i64_45 : i64
    %266 = arith.divui %265, %c32_i64_46 : i64
    %267 = arith.muli %266, %c32_i64_46 : i64
    %268 = arith.cmpi ult, %264, %267 : i64
    scf.if %268 {
      %334 = func.call @dora_fn_extend_memory(%arg0, %267) : (!llvm.ptr, i64) -> !llvm.ptr
      %335 = llvm.getelementptr %334[16] : (!llvm.ptr) -> !llvm.ptr, i8
      %336 = llvm.load %335 : !llvm.ptr -> !llvm.ptr
      llvm.store %267, %263 : i64, !llvm.ptr
      %337 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
      llvm.store %336, %337 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %269 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %270 = llvm.load %269 : !llvm.ptr -> !llvm.ptr
    %271 = llvm.getelementptr %270[%260] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %272 = llvm.intr.bswap(%259)  : (i256) -> i256
    llvm.store %272, %271 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb39
  ^bb39:  // pred: ^bb38
    %c0_i256_47 = arith.constant 0 : i256
    %273 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %274 = llvm.load %273 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_47, %274 : i256, !llvm.ptr
    %275 = llvm.getelementptr %274[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %275, %273 : !llvm.ptr, !llvm.ptr
    cf.br ^bb40
  ^bb40:  // pred: ^bb39
    %c64_i256_48 = arith.constant 64 : i256
    %276 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %277 = llvm.load %276 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256_48, %277 : i256, !llvm.ptr
    %278 = llvm.getelementptr %277[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %278, %276 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb41:  // pred: ^bb40
    %279 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %280 = llvm.load %279 : !llvm.ptr -> !llvm.ptr
    %281 = llvm.getelementptr %280[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %282 = llvm.load %281 : !llvm.ptr -> i256
    llvm.store %281, %279 : !llvm.ptr, !llvm.ptr
    %283 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %284 = llvm.load %283 : !llvm.ptr -> !llvm.ptr
    %285 = llvm.getelementptr %284[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %286 = llvm.load %285 : !llvm.ptr -> i256
    llvm.store %285, %283 : !llvm.ptr, !llvm.ptr
    %287 = arith.trunci %282 : i256 to i64
    %c32_i64_49 = arith.constant 32 : i64
    %288 = arith.addi %287, %c32_i64_49 : i64
    %c0_i64_50 = arith.constant 0 : i64
    %289 = arith.cmpi slt, %288, %c0_i64_50 : i64
    %c84_i8_51 = arith.constant 84 : i8
    cf.cond_br %289, ^bb1(%c84_i8_51 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %290 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %291 = llvm.load %290 : !llvm.ptr -> i64
    %c31_i64_52 = arith.constant 31 : i64
    %c32_i64_53 = arith.constant 32 : i64
    %292 = arith.addi %288, %c31_i64_52 : i64
    %293 = arith.divui %292, %c32_i64_53 : i64
    %294 = arith.muli %293, %c32_i64_53 : i64
    %295 = arith.cmpi ult, %291, %294 : i64
    scf.if %295 {
      %334 = func.call @dora_fn_extend_memory(%arg0, %294) : (!llvm.ptr, i64) -> !llvm.ptr
      %335 = llvm.getelementptr %334[16] : (!llvm.ptr) -> !llvm.ptr, i8
      %336 = llvm.load %335 : !llvm.ptr -> !llvm.ptr
      llvm.store %294, %290 : i64, !llvm.ptr
      %337 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
      llvm.store %336, %337 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %296 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %297 = llvm.load %296 : !llvm.ptr -> !llvm.ptr
    %298 = llvm.getelementptr %297[%287] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %299 = llvm.intr.bswap(%286)  : (i256) -> i256
    llvm.store %299, %298 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb43
  ^bb43:  // pred: ^bb42
    %c32_i256_54 = arith.constant 32 : i256
    %300 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %301 = llvm.load %300 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_54, %301 : i256, !llvm.ptr
    %302 = llvm.getelementptr %301[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %302, %300 : !llvm.ptr, !llvm.ptr
    cf.br ^bb44
  ^bb44:  // pred: ^bb43
    %c0_i256_55 = arith.constant 0 : i256
    %303 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %304 = llvm.load %303 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_55, %304 : i256, !llvm.ptr
    %305 = llvm.getelementptr %304[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %305, %303 : !llvm.ptr, !llvm.ptr
    cf.br ^bb45
  ^bb45:  // pred: ^bb44
    %c0_i256_56 = arith.constant 0 : i256
    %306 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %307 = llvm.load %306 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_56, %307 : i256, !llvm.ptr
    %308 = llvm.getelementptr %307[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %308, %306 : !llvm.ptr, !llvm.ptr
    cf.br ^bb46
  ^bb46:  // pred: ^bb45
    %309 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %310 = llvm.load %309 : !llvm.ptr -> !llvm.ptr
    %311 = llvm.getelementptr %310[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %312 = llvm.load %311 : !llvm.ptr -> i256
    llvm.store %311, %309 : !llvm.ptr, !llvm.ptr
    %313 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %314 = llvm.load %313 : !llvm.ptr -> !llvm.ptr
    %315 = llvm.getelementptr %314[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %316 = llvm.load %315 : !llvm.ptr -> i256
    llvm.store %315, %313 : !llvm.ptr, !llvm.ptr
    %317 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %318 = llvm.load %317 : !llvm.ptr -> !llvm.ptr
    %319 = llvm.getelementptr %318[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %320 = llvm.load %319 : !llvm.ptr -> i256
    llvm.store %319, %317 : !llvm.ptr, !llvm.ptr
    %321 = arith.trunci %312 : i256 to i64
    %322 = arith.trunci %316 : i256 to i64
    %323 = arith.trunci %320 : i256 to i64
    %324 = arith.addi %321, %323 : i64
    %c0_i64_57 = arith.constant 0 : i64
    %325 = arith.cmpi slt, %324, %c0_i64_57 : i64
    %c84_i8_58 = arith.constant 84 : i8
    cf.cond_br %325, ^bb1(%c84_i8_58 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %326 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %327 = llvm.load %326 : !llvm.ptr -> i64
    %c31_i64_59 = arith.constant 31 : i64
    %c32_i64_60 = arith.constant 32 : i64
    %328 = arith.addi %324, %c31_i64_59 : i64
    %329 = arith.divui %328, %c32_i64_60 : i64
    %330 = arith.muli %329, %c32_i64_60 : i64
    %331 = arith.cmpi ult, %327, %330 : i64
    scf.if %331 {
      %334 = func.call @dora_fn_extend_memory(%arg0, %330) : (!llvm.ptr, i64) -> !llvm.ptr
      %335 = llvm.getelementptr %334[16] : (!llvm.ptr) -> !llvm.ptr, i8
      %336 = llvm.load %335 : !llvm.ptr -> !llvm.ptr
      llvm.store %330, %326 : i64, !llvm.ptr
      %337 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
      llvm.store %336, %337 : !llvm.ptr, !llvm.ptr
    } else {
    }
    %332 = call @dora_fn_return_data_copy(%arg0, %321, %322, %323) : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr
    cf.br ^bb48
  ^bb48:  // pred: ^bb47
    %c0_i64_61 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %333 = call @dora_fn_write_result(%arg0, %c0_i64_61, %c0_i64_61, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
