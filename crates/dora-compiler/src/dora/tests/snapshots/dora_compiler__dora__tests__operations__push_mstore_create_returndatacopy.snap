---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_read_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_write_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 57 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36, ^bb37, ^bb38, ^bb39, ^bb40, ^bb41, ^bb42, ^bb43, ^bb44, ^bb45, ^bb46, ^bb47, ^bb48, ^bb49, ^bb50, ^bb51, ^bb52, ^bb53, ^bb54, ^bb55, ^bb56, ^bb57
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c32_i64 = arith.constant 32 : i64
    %37 = arith.addi %36, %c32_i64 : i64
    %c0_i64_4 = arith.constant 0 : i64
    %38 = arith.cmpi slt, %37, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %38, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_5 = arith.constant 32 : i64
    %39 = arith.addi %37, %c31_i64 : i64
    %40 = arith.divui %39, %c32_i64_5 : i64
    %41 = arith.muli %40, %c32_i64_5 : i64
    %42 = call @dora_fn_extend_memory(%arg0, %41) : (!llvm.ptr, i64) -> !llvm.ptr
    %43 = llvm.getelementptr %42[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %44 = llvm.load %43 : !llvm.ptr -> !llvm.ptr
    %45 = llvm.getelementptr %42[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %46 = llvm.load %45 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %47 = arith.cmpi ne, %46, %c0_i8 : i8
    cf.cond_br %47, ^bb1(%46 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %48 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %44, %48 : !llvm.ptr, !llvm.ptr
    %49 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %41, %49 : i64, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %51 = llvm.load %50 : !llvm.ptr -> !llvm.ptr
    %52 = llvm.getelementptr %51[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %53 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %53, %52 {alignment = 1 : i64} : i256, !llvm.ptr
    %54 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_6 = arith.constant 1 : i64
    %55 = arith.addi %54, %c1_i64_6 : i64
    llvm.store %55, %9 : i64, !llvm.ptr
    %56 = arith.cmpi ult, %c1024_i64, %55 : i64
    %c92_i8_7 = arith.constant 92 : i8
    cf.cond_br %56, ^bb1(%c92_i8_7 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    %60 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_8 : i64
    llvm.store %61, %9 : i64, !llvm.ptr
    %62 = arith.cmpi ult, %c1024_i64, %61 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c32_i256 = arith.constant 32 : i256
    %63 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %64 : i256, !llvm.ptr
    %65 = llvm.getelementptr %64[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %65, %63 : !llvm.ptr, !llvm.ptr
    %66 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_10 = arith.constant -2 : i64
    %67 = arith.addi %66, %c-2_i64_10 : i64
    llvm.store %67, %9 : i64, !llvm.ptr
    %c2_i64_11 = arith.constant 2 : i64
    %68 = arith.cmpi ult, %66, %c2_i64_11 : i64
    %c91_i8_12 = arith.constant 91 : i8
    cf.cond_br %68, ^bb1(%c91_i8_12 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %69 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.getelementptr %70[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %72 = llvm.load %71 : !llvm.ptr -> i256
    llvm.store %71, %69 : !llvm.ptr, !llvm.ptr
    %73 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> !llvm.ptr
    %75 = llvm.getelementptr %74[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %76 = llvm.load %75 : !llvm.ptr -> i256
    llvm.store %75, %73 : !llvm.ptr, !llvm.ptr
    %77 = arith.trunci %72 : i256 to i64
    %c32_i64_13 = arith.constant 32 : i64
    %78 = arith.addi %77, %c32_i64_13 : i64
    %c0_i64_14 = arith.constant 0 : i64
    %79 = arith.cmpi slt, %78, %c0_i64_14 : i64
    %c84_i8_15 = arith.constant 84 : i8
    cf.cond_br %79, ^bb1(%c84_i8_15 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %c31_i64_16 = arith.constant 31 : i64
    %c32_i64_17 = arith.constant 32 : i64
    %80 = arith.addi %78, %c31_i64_16 : i64
    %81 = arith.divui %80, %c32_i64_17 : i64
    %82 = arith.muli %81, %c32_i64_17 : i64
    %83 = call @dora_fn_extend_memory(%arg0, %82) : (!llvm.ptr, i64) -> !llvm.ptr
    %84 = llvm.getelementptr %83[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %85 = llvm.load %84 : !llvm.ptr -> !llvm.ptr
    %86 = llvm.getelementptr %83[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %87 = llvm.load %86 : !llvm.ptr -> i8
    %c0_i8_18 = arith.constant 0 : i8
    %88 = arith.cmpi ne, %87, %c0_i8_18 : i8
    cf.cond_br %88, ^bb1(%87 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %89 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %85, %89 : !llvm.ptr, !llvm.ptr
    %90 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %82, %90 : i64, !llvm.ptr
    %91 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %92 = llvm.load %91 : !llvm.ptr -> !llvm.ptr
    %93 = llvm.getelementptr %92[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %94 = llvm.intr.bswap(%76)  : (i256) -> i256
    llvm.store %94, %93 {alignment = 1 : i64} : i256, !llvm.ptr
    %95 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %96 = arith.addi %95, %c1_i64_19 : i64
    llvm.store %96, %9 : i64, !llvm.ptr
    %97 = arith.cmpi ult, %c1024_i64, %96 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %97, ^bb1(%c92_i8_20 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %98 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %99 : i256, !llvm.ptr
    %100 = llvm.getelementptr %99[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %100, %98 : !llvm.ptr, !llvm.ptr
    %101 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_21 = arith.constant 1 : i64
    %102 = arith.addi %101, %c1_i64_21 : i64
    llvm.store %102, %9 : i64, !llvm.ptr
    %103 = arith.cmpi ult, %c1024_i64, %102 : i64
    %c92_i8_22 = arith.constant 92 : i8
    cf.cond_br %103, ^bb1(%c92_i8_22 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %c64_i256 = arith.constant 64 : i256
    %104 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %105 : i256, !llvm.ptr
    %106 = llvm.getelementptr %105[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %106, %104 : !llvm.ptr, !llvm.ptr
    %107 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_23 = arith.constant -2 : i64
    %108 = arith.addi %107, %c-2_i64_23 : i64
    llvm.store %108, %9 : i64, !llvm.ptr
    %c2_i64_24 = arith.constant 2 : i64
    %109 = arith.cmpi ult, %107, %c2_i64_24 : i64
    %c91_i8_25 = arith.constant 91 : i8
    cf.cond_br %109, ^bb1(%c91_i8_25 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %110 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> !llvm.ptr
    %112 = llvm.getelementptr %111[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %113 = llvm.load %112 : !llvm.ptr -> i256
    llvm.store %112, %110 : !llvm.ptr, !llvm.ptr
    %114 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %115 = llvm.load %114 : !llvm.ptr -> !llvm.ptr
    %116 = llvm.getelementptr %115[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %117 = llvm.load %116 : !llvm.ptr -> i256
    llvm.store %116, %114 : !llvm.ptr, !llvm.ptr
    %118 = arith.trunci %113 : i256 to i64
    %c32_i64_26 = arith.constant 32 : i64
    %119 = arith.addi %118, %c32_i64_26 : i64
    %c0_i64_27 = arith.constant 0 : i64
    %120 = arith.cmpi slt, %119, %c0_i64_27 : i64
    %c84_i8_28 = arith.constant 84 : i8
    cf.cond_br %120, ^bb1(%c84_i8_28 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c31_i64_29 = arith.constant 31 : i64
    %c32_i64_30 = arith.constant 32 : i64
    %121 = arith.addi %119, %c31_i64_29 : i64
    %122 = arith.divui %121, %c32_i64_30 : i64
    %123 = arith.muli %122, %c32_i64_30 : i64
    %124 = call @dora_fn_extend_memory(%arg0, %123) : (!llvm.ptr, i64) -> !llvm.ptr
    %125 = llvm.getelementptr %124[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %126 = llvm.load %125 : !llvm.ptr -> !llvm.ptr
    %127 = llvm.getelementptr %124[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %128 = llvm.load %127 : !llvm.ptr -> i8
    %c0_i8_31 = arith.constant 0 : i8
    %129 = arith.cmpi ne, %128, %c0_i8_31 : i8
    cf.cond_br %129, ^bb1(%128 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %130 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %126, %130 : !llvm.ptr, !llvm.ptr
    %131 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %123, %131 : i64, !llvm.ptr
    %132 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> !llvm.ptr
    %134 = llvm.getelementptr %133[%118] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %135 = llvm.intr.bswap(%117)  : (i256) -> i256
    llvm.store %135, %134 {alignment = 1 : i64} : i256, !llvm.ptr
    %136 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_32 = arith.constant 1 : i64
    %137 = arith.addi %136, %c1_i64_32 : i64
    llvm.store %137, %9 : i64, !llvm.ptr
    %138 = arith.cmpi ult, %c1024_i64, %137 : i64
    %c92_i8_33 = arith.constant 92 : i8
    cf.cond_br %138, ^bb1(%c92_i8_33 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %c77_i256 = arith.constant 77 : i256
    %139 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %140 = llvm.load %139 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %140 : i256, !llvm.ptr
    %141 = llvm.getelementptr %140[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %141, %139 : !llvm.ptr, !llvm.ptr
    %142 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %143 = arith.addi %142, %c1_i64_34 : i64
    llvm.store %143, %9 : i64, !llvm.ptr
    %144 = arith.cmpi ult, %c1024_i64, %143 : i64
    %c92_i8_35 = arith.constant 92 : i8
    cf.cond_br %144, ^bb1(%c92_i8_35 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i256_36 = arith.constant 0 : i256
    %145 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %146 = llvm.load %145 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_36, %146 : i256, !llvm.ptr
    %147 = llvm.getelementptr %146[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %147, %145 : !llvm.ptr, !llvm.ptr
    %148 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %149 = arith.addi %148, %c1_i64_37 : i64
    llvm.store %149, %9 : i64, !llvm.ptr
    %150 = arith.cmpi ult, %c1024_i64, %149 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %150, ^bb1(%c92_i8_38 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %c0_i256_39 = arith.constant 0 : i256
    %151 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %152 = llvm.load %151 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_39, %152 : i256, !llvm.ptr
    %153 = llvm.getelementptr %152[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %153, %151 : !llvm.ptr, !llvm.ptr
    %154 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_40 = arith.constant -2 : i64
    %155 = arith.addi %154, %c-2_i64_40 : i64
    llvm.store %155, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %156 = arith.cmpi ult, %154, %c3_i64 : i64
    %c91_i8_41 = arith.constant 91 : i8
    cf.cond_br %156, ^bb1(%c91_i8_41 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %157 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %158 = llvm.load %157 : !llvm.ptr -> !llvm.ptr
    %159 = llvm.getelementptr %158[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %160 = llvm.load %159 : !llvm.ptr -> i256
    llvm.store %159, %157 : !llvm.ptr, !llvm.ptr
    %161 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %162 = llvm.load %161 : !llvm.ptr -> !llvm.ptr
    %163 = llvm.getelementptr %162[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %164 = llvm.load %163 : !llvm.ptr -> i256
    llvm.store %163, %161 : !llvm.ptr, !llvm.ptr
    %165 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %166 = llvm.load %165 : !llvm.ptr -> !llvm.ptr
    %167 = llvm.getelementptr %166[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %168 = llvm.load %167 : !llvm.ptr -> i256
    llvm.store %167, %165 : !llvm.ptr, !llvm.ptr
    %169 = arith.trunci %164 : i256 to i64
    %170 = arith.trunci %168 : i256 to i64
    %171 = arith.addi %169, %170 : i64
    %c0_i64_42 = arith.constant 0 : i64
    %172 = arith.cmpi slt, %171, %c0_i64_42 : i64
    %c84_i8_43 = arith.constant 84 : i8
    cf.cond_br %172, ^bb1(%c84_i8_43 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c31_i64_44 = arith.constant 31 : i64
    %c32_i64_45 = arith.constant 32 : i64
    %173 = arith.addi %171, %c31_i64_44 : i64
    %174 = arith.divui %173, %c32_i64_45 : i64
    %175 = arith.muli %174, %c32_i64_45 : i64
    %176 = call @dora_fn_extend_memory(%arg0, %175) : (!llvm.ptr, i64) -> !llvm.ptr
    %177 = llvm.getelementptr %176[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %178 = llvm.load %177 : !llvm.ptr -> !llvm.ptr
    %179 = llvm.getelementptr %176[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %180 = llvm.load %179 : !llvm.ptr -> i8
    %c0_i8_46 = arith.constant 0 : i8
    %181 = arith.cmpi ne, %180, %c0_i8_46 : i8
    cf.cond_br %181, ^bb1(%180 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %182 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %178, %182 : !llvm.ptr, !llvm.ptr
    %183 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %175, %183 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %184 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %160, %184 {alignment = 1 : i64} : i256, !llvm.ptr
    %185 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> i64
    %c1_i64_47 = arith.constant 1 : i64
    %187 = llvm.alloca %c1_i64_47 x i64 : (i64) -> !llvm.ptr
    llvm.store %186, %187 {alignment = 1 : i64} : i64, !llvm.ptr
    %188 = call @dora_fn_create(%arg0, %170, %169, %184, %187) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %189 = llvm.getelementptr %188[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %190 = llvm.load %189 : !llvm.ptr -> i8
    %191 = llvm.getelementptr %188[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %192 = llvm.load %191 : !llvm.ptr -> i8
    %c0_i8_48 = arith.constant 0 : i8
    %193 = arith.cmpi ne, %192, %c0_i8_48 : i8
    cf.cond_br %193, ^bb1(%192 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %c0_i8_49 = arith.constant 0 : i8
    %194 = arith.cmpi ne, %c0_i8_49, %190 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %194, ^bb1(%c94_i8 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %195 = llvm.load %184 : !llvm.ptr -> i256
    %196 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %197 = llvm.load %196 : !llvm.ptr -> !llvm.ptr
    llvm.store %195, %197 : i256, !llvm.ptr
    %198 = llvm.getelementptr %197[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %198, %196 : !llvm.ptr, !llvm.ptr
    %199 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_50 = arith.constant 1 : i64
    %200 = arith.addi %199, %c1_i64_50 : i64
    llvm.store %200, %9 : i64, !llvm.ptr
    %201 = arith.cmpi ult, %c1024_i64, %200 : i64
    %c92_i8_51 = arith.constant 92 : i8
    cf.cond_br %201, ^bb1(%c92_i8_51 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %c0_i256_52 = arith.constant 0 : i256
    %202 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %203 = llvm.load %202 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_52, %203 : i256, !llvm.ptr
    %204 = llvm.getelementptr %203[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %204, %202 : !llvm.ptr, !llvm.ptr
    %205 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_53 = arith.constant 1 : i64
    %206 = arith.addi %205, %c1_i64_53 : i64
    llvm.store %206, %9 : i64, !llvm.ptr
    %207 = arith.cmpi ult, %c1024_i64, %206 : i64
    %c92_i8_54 = arith.constant 92 : i8
    cf.cond_br %207, ^bb1(%c92_i8_54 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %c0_i256_55 = arith.constant 0 : i256
    %208 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %209 = llvm.load %208 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_55, %209 : i256, !llvm.ptr
    %210 = llvm.getelementptr %209[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %210, %208 : !llvm.ptr, !llvm.ptr
    %211 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_56 = arith.constant 1 : i64
    %212 = arith.addi %211, %c1_i64_56 : i64
    llvm.store %212, %9 : i64, !llvm.ptr
    %213 = arith.cmpi ult, %c1024_i64, %212 : i64
    %c92_i8_57 = arith.constant 92 : i8
    cf.cond_br %213, ^bb1(%c92_i8_57 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c0_i256_58 = arith.constant 0 : i256
    %214 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %215 = llvm.load %214 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_58, %215 : i256, !llvm.ptr
    %216 = llvm.getelementptr %215[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %216, %214 : !llvm.ptr, !llvm.ptr
    %217 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %218 = arith.addi %217, %c1_i64_59 : i64
    llvm.store %218, %9 : i64, !llvm.ptr
    %219 = arith.cmpi ult, %c1024_i64, %218 : i64
    %c92_i8_60 = arith.constant 92 : i8
    cf.cond_br %219, ^bb1(%c92_i8_60 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c0_i256_61 = arith.constant 0 : i256
    %220 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %221 = llvm.load %220 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_61, %221 : i256, !llvm.ptr
    %222 = llvm.getelementptr %221[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %222, %220 : !llvm.ptr, !llvm.ptr
    %223 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_62 = arith.constant 1 : i64
    %224 = arith.addi %223, %c1_i64_62 : i64
    llvm.store %224, %9 : i64, !llvm.ptr
    %225 = arith.cmpi ult, %c1024_i64, %224 : i64
    %c92_i8_63 = arith.constant 92 : i8
    cf.cond_br %225, ^bb1(%c92_i8_63 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %226 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %227 = llvm.load %226 : !llvm.ptr -> !llvm.ptr
    %228 = llvm.getelementptr %227[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %229 = llvm.load %228 : !llvm.ptr -> i256
    %230 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %231 = llvm.load %230 : !llvm.ptr -> !llvm.ptr
    llvm.store %229, %231 : i256, !llvm.ptr
    %232 = llvm.getelementptr %231[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %232, %230 : !llvm.ptr, !llvm.ptr
    %233 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_64 = arith.constant 1 : i64
    %234 = arith.addi %233, %c1_i64_64 : i64
    llvm.store %234, %9 : i64, !llvm.ptr
    %235 = arith.cmpi ult, %c1024_i64, %234 : i64
    %c92_i8_65 = arith.constant 92 : i8
    cf.cond_br %235, ^bb1(%c92_i8_65 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %236 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %237 = llvm.load %236 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %237 : i256, !llvm.ptr
    %238 = llvm.getelementptr %237[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %238, %236 : !llvm.ptr, !llvm.ptr
    %239 = llvm.load %9 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %240 = arith.addi %239, %c-5_i64 : i64
    llvm.store %240, %9 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %241 = arith.cmpi ult, %239, %c6_i64 : i64
    %c91_i8_66 = arith.constant 91 : i8
    cf.cond_br %241, ^bb1(%c91_i8_66 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %242 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %243 = llvm.load %242 : !llvm.ptr -> !llvm.ptr
    %244 = llvm.getelementptr %243[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %245 = llvm.load %244 : !llvm.ptr -> i256
    llvm.store %244, %242 : !llvm.ptr, !llvm.ptr
    %246 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %247 = llvm.load %246 : !llvm.ptr -> !llvm.ptr
    %248 = llvm.getelementptr %247[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %249 = llvm.load %248 : !llvm.ptr -> i256
    llvm.store %248, %246 : !llvm.ptr, !llvm.ptr
    %250 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %251 = llvm.load %250 : !llvm.ptr -> !llvm.ptr
    %252 = llvm.getelementptr %251[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %253 = llvm.load %252 : !llvm.ptr -> i256
    llvm.store %252, %250 : !llvm.ptr, !llvm.ptr
    %254 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %255 = llvm.load %254 : !llvm.ptr -> !llvm.ptr
    %256 = llvm.getelementptr %255[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %257 = llvm.load %256 : !llvm.ptr -> i256
    llvm.store %256, %254 : !llvm.ptr, !llvm.ptr
    %258 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %259 = llvm.load %258 : !llvm.ptr -> !llvm.ptr
    %260 = llvm.getelementptr %259[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %261 = llvm.load %260 : !llvm.ptr -> i256
    llvm.store %260, %258 : !llvm.ptr, !llvm.ptr
    %262 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %263 = llvm.load %262 : !llvm.ptr -> !llvm.ptr
    %264 = llvm.getelementptr %263[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %265 = llvm.load %264 : !llvm.ptr -> i256
    llvm.store %264, %262 : !llvm.ptr, !llvm.ptr
    %c0_i256_67 = arith.constant 0 : i256
    %266 = arith.trunci %245 : i256 to i64
    %267 = arith.trunci %253 : i256 to i64
    %268 = arith.trunci %257 : i256 to i64
    %269 = arith.trunci %261 : i256 to i64
    %270 = arith.trunci %265 : i256 to i64
    %271 = arith.addi %267, %268 : i64
    %272 = arith.addi %269, %270 : i64
    %273 = arith.maxui %271, %272 : i64
    %c0_i64_68 = arith.constant 0 : i64
    %274 = arith.cmpi slt, %273, %c0_i64_68 : i64
    %c84_i8_69 = arith.constant 84 : i8
    cf.cond_br %274, ^bb1(%c84_i8_69 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c31_i64_70 = arith.constant 31 : i64
    %c32_i64_71 = arith.constant 32 : i64
    %275 = arith.addi %273, %c31_i64_70 : i64
    %276 = arith.divui %275, %c32_i64_71 : i64
    %277 = arith.muli %276, %c32_i64_71 : i64
    %278 = call @dora_fn_extend_memory(%arg0, %277) : (!llvm.ptr, i64) -> !llvm.ptr
    %279 = llvm.getelementptr %278[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %280 = llvm.load %279 : !llvm.ptr -> !llvm.ptr
    %281 = llvm.getelementptr %278[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %282 = llvm.load %281 : !llvm.ptr -> i8
    %c0_i8_72 = arith.constant 0 : i8
    %283 = arith.cmpi ne, %282, %c0_i8_72 : i8
    cf.cond_br %283, ^bb1(%282 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %284 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %280, %284 : !llvm.ptr, !llvm.ptr
    %285 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %277, %285 : i64, !llvm.ptr
    %286 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %287 = llvm.load %286 : !llvm.ptr -> i64
    %c1_i256_73 = arith.constant 1 : i256
    %288 = llvm.alloca %c1_i256_73 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_67, %288 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_74 = arith.constant 1 : i256
    %289 = llvm.alloca %c1_i256_74 x i256 : (i256) -> !llvm.ptr
    llvm.store %249, %289 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_75 = arith.constant 1 : i64
    %290 = llvm.alloca %c1_i64_75 x i64 : (i64) -> !llvm.ptr
    %c0_i8_76 = arith.constant 0 : i8
    %291 = call @dora_fn_call(%arg0, %266, %289, %288, %267, %268, %269, %270, %287, %290, %c0_i8_76) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %292 = llvm.getelementptr %291[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %293 = llvm.load %292 : !llvm.ptr -> i8
    %294 = llvm.getelementptr %291[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %295 = llvm.load %294 : !llvm.ptr -> i8
    %c0_i8_77 = arith.constant 0 : i8
    %296 = arith.cmpi ne, %295, %c0_i8_77 : i8
    cf.cond_br %296, ^bb1(%295 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %297 = llvm.load %290 : !llvm.ptr -> i64
    %298 = arith.extui %293 : i8 to i256
    %299 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %300 = llvm.load %299 : !llvm.ptr -> !llvm.ptr
    llvm.store %298, %300 : i256, !llvm.ptr
    %301 = llvm.getelementptr %300[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %301, %299 : !llvm.ptr, !llvm.ptr
    %302 = llvm.load %9 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %303 = arith.addi %302, %c-1_i64 : i64
    llvm.store %303, %9 : i64, !llvm.ptr
    %c1_i64_78 = arith.constant 1 : i64
    %304 = arith.cmpi ult, %302, %c1_i64_78 : i64
    %c91_i8_79 = arith.constant 91 : i8
    cf.cond_br %304, ^bb1(%c91_i8_79 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %305 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %306 = llvm.load %305 : !llvm.ptr -> !llvm.ptr
    %307 = llvm.getelementptr %306[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %308 = llvm.load %307 : !llvm.ptr -> i256
    llvm.store %307, %305 : !llvm.ptr, !llvm.ptr
    %309 = llvm.load %9 : !llvm.ptr -> i64
    %c-1_i64_80 = arith.constant -1 : i64
    %310 = arith.addi %309, %c-1_i64_80 : i64
    llvm.store %310, %9 : i64, !llvm.ptr
    %c1_i64_81 = arith.constant 1 : i64
    %311 = arith.cmpi ult, %309, %c1_i64_81 : i64
    %c91_i8_82 = arith.constant 91 : i8
    cf.cond_br %311, ^bb1(%c91_i8_82 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %312 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %313 = llvm.load %312 : !llvm.ptr -> !llvm.ptr
    %314 = llvm.getelementptr %313[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %315 = llvm.load %314 : !llvm.ptr -> i256
    llvm.store %314, %312 : !llvm.ptr, !llvm.ptr
    %316 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_83 = arith.constant 1 : i64
    %317 = arith.addi %316, %c1_i64_83 : i64
    llvm.store %317, %9 : i64, !llvm.ptr
    %318 = arith.cmpi ult, %c1024_i64, %317 : i64
    %c92_i8_84 = arith.constant 92 : i8
    cf.cond_br %318, ^bb1(%c92_i8_84 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %c0_i256_85 = arith.constant 0 : i256
    %319 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %320 = llvm.load %319 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_85, %320 : i256, !llvm.ptr
    %321 = llvm.getelementptr %320[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %321, %319 : !llvm.ptr, !llvm.ptr
    %322 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_86 = arith.constant 1 : i64
    %323 = arith.addi %322, %c1_i64_86 : i64
    llvm.store %323, %9 : i64, !llvm.ptr
    %324 = arith.cmpi ult, %c1024_i64, %323 : i64
    %c92_i8_87 = arith.constant 92 : i8
    cf.cond_br %324, ^bb1(%c92_i8_87 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %c0_i256_88 = arith.constant 0 : i256
    %325 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %326 = llvm.load %325 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_88, %326 : i256, !llvm.ptr
    %327 = llvm.getelementptr %326[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %327, %325 : !llvm.ptr, !llvm.ptr
    %328 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_89 = arith.constant -2 : i64
    %329 = arith.addi %328, %c-2_i64_89 : i64
    llvm.store %329, %9 : i64, !llvm.ptr
    %c2_i64_90 = arith.constant 2 : i64
    %330 = arith.cmpi ult, %328, %c2_i64_90 : i64
    %c91_i8_91 = arith.constant 91 : i8
    cf.cond_br %330, ^bb1(%c91_i8_91 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %331 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %332 = llvm.load %331 : !llvm.ptr -> !llvm.ptr
    %333 = llvm.getelementptr %332[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %334 = llvm.load %333 : !llvm.ptr -> i256
    llvm.store %333, %331 : !llvm.ptr, !llvm.ptr
    %335 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %336 = llvm.load %335 : !llvm.ptr -> !llvm.ptr
    %337 = llvm.getelementptr %336[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %338 = llvm.load %337 : !llvm.ptr -> i256
    llvm.store %337, %335 : !llvm.ptr, !llvm.ptr
    %339 = arith.trunci %334 : i256 to i64
    %c32_i64_92 = arith.constant 32 : i64
    %340 = arith.addi %339, %c32_i64_92 : i64
    %c0_i64_93 = arith.constant 0 : i64
    %341 = arith.cmpi slt, %340, %c0_i64_93 : i64
    %c84_i8_94 = arith.constant 84 : i8
    cf.cond_br %341, ^bb1(%c84_i8_94 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %c31_i64_95 = arith.constant 31 : i64
    %c32_i64_96 = arith.constant 32 : i64
    %342 = arith.addi %340, %c31_i64_95 : i64
    %343 = arith.divui %342, %c32_i64_96 : i64
    %344 = arith.muli %343, %c32_i64_96 : i64
    %345 = call @dora_fn_extend_memory(%arg0, %344) : (!llvm.ptr, i64) -> !llvm.ptr
    %346 = llvm.getelementptr %345[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %347 = llvm.load %346 : !llvm.ptr -> !llvm.ptr
    %348 = llvm.getelementptr %345[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %349 = llvm.load %348 : !llvm.ptr -> i8
    %c0_i8_97 = arith.constant 0 : i8
    %350 = arith.cmpi ne, %349, %c0_i8_97 : i8
    cf.cond_br %350, ^bb1(%349 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %351 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %347, %351 : !llvm.ptr, !llvm.ptr
    %352 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %344, %352 : i64, !llvm.ptr
    %353 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %354 = llvm.load %353 : !llvm.ptr -> !llvm.ptr
    %355 = llvm.getelementptr %354[%339] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %356 = llvm.intr.bswap(%338)  : (i256) -> i256
    llvm.store %356, %355 {alignment = 1 : i64} : i256, !llvm.ptr
    %357 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_98 = arith.constant 1 : i64
    %358 = arith.addi %357, %c1_i64_98 : i64
    llvm.store %358, %9 : i64, !llvm.ptr
    %359 = arith.cmpi ult, %c1024_i64, %358 : i64
    %c92_i8_99 = arith.constant 92 : i8
    cf.cond_br %359, ^bb1(%c92_i8_99 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %c0_i256_100 = arith.constant 0 : i256
    %360 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %361 = llvm.load %360 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_100, %361 : i256, !llvm.ptr
    %362 = llvm.getelementptr %361[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %362, %360 : !llvm.ptr, !llvm.ptr
    %363 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_101 = arith.constant 1 : i64
    %364 = arith.addi %363, %c1_i64_101 : i64
    llvm.store %364, %9 : i64, !llvm.ptr
    %365 = arith.cmpi ult, %c1024_i64, %364 : i64
    %c92_i8_102 = arith.constant 92 : i8
    cf.cond_br %365, ^bb1(%c92_i8_102 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c32_i256_103 = arith.constant 32 : i256
    %366 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %367 = llvm.load %366 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_103, %367 : i256, !llvm.ptr
    %368 = llvm.getelementptr %367[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %368, %366 : !llvm.ptr, !llvm.ptr
    %369 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_104 = arith.constant -2 : i64
    %370 = arith.addi %369, %c-2_i64_104 : i64
    llvm.store %370, %9 : i64, !llvm.ptr
    %c2_i64_105 = arith.constant 2 : i64
    %371 = arith.cmpi ult, %369, %c2_i64_105 : i64
    %c91_i8_106 = arith.constant 91 : i8
    cf.cond_br %371, ^bb1(%c91_i8_106 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %372 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %373 = llvm.load %372 : !llvm.ptr -> !llvm.ptr
    %374 = llvm.getelementptr %373[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %375 = llvm.load %374 : !llvm.ptr -> i256
    llvm.store %374, %372 : !llvm.ptr, !llvm.ptr
    %376 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %377 = llvm.load %376 : !llvm.ptr -> !llvm.ptr
    %378 = llvm.getelementptr %377[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %379 = llvm.load %378 : !llvm.ptr -> i256
    llvm.store %378, %376 : !llvm.ptr, !llvm.ptr
    %380 = arith.trunci %375 : i256 to i64
    %c32_i64_107 = arith.constant 32 : i64
    %381 = arith.addi %380, %c32_i64_107 : i64
    %c0_i64_108 = arith.constant 0 : i64
    %382 = arith.cmpi slt, %381, %c0_i64_108 : i64
    %c84_i8_109 = arith.constant 84 : i8
    cf.cond_br %382, ^bb1(%c84_i8_109 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c31_i64_110 = arith.constant 31 : i64
    %c32_i64_111 = arith.constant 32 : i64
    %383 = arith.addi %381, %c31_i64_110 : i64
    %384 = arith.divui %383, %c32_i64_111 : i64
    %385 = arith.muli %384, %c32_i64_111 : i64
    %386 = call @dora_fn_extend_memory(%arg0, %385) : (!llvm.ptr, i64) -> !llvm.ptr
    %387 = llvm.getelementptr %386[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %388 = llvm.load %387 : !llvm.ptr -> !llvm.ptr
    %389 = llvm.getelementptr %386[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %390 = llvm.load %389 : !llvm.ptr -> i8
    %c0_i8_112 = arith.constant 0 : i8
    %391 = arith.cmpi ne, %390, %c0_i8_112 : i8
    cf.cond_br %391, ^bb1(%390 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %392 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %388, %392 : !llvm.ptr, !llvm.ptr
    %393 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %385, %393 : i64, !llvm.ptr
    %394 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %395 = llvm.load %394 : !llvm.ptr -> !llvm.ptr
    %396 = llvm.getelementptr %395[%380] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %397 = llvm.intr.bswap(%379)  : (i256) -> i256
    llvm.store %397, %396 {alignment = 1 : i64} : i256, !llvm.ptr
    %398 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_113 = arith.constant 1 : i64
    %399 = arith.addi %398, %c1_i64_113 : i64
    llvm.store %399, %9 : i64, !llvm.ptr
    %400 = arith.cmpi ult, %c1024_i64, %399 : i64
    %c92_i8_114 = arith.constant 92 : i8
    cf.cond_br %400, ^bb1(%c92_i8_114 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %c0_i256_115 = arith.constant 0 : i256
    %401 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %402 = llvm.load %401 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_115, %402 : i256, !llvm.ptr
    %403 = llvm.getelementptr %402[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %403, %401 : !llvm.ptr, !llvm.ptr
    %404 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_116 = arith.constant 1 : i64
    %405 = arith.addi %404, %c1_i64_116 : i64
    llvm.store %405, %9 : i64, !llvm.ptr
    %406 = arith.cmpi ult, %c1024_i64, %405 : i64
    %c92_i8_117 = arith.constant 92 : i8
    cf.cond_br %406, ^bb1(%c92_i8_117 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %c64_i256_118 = arith.constant 64 : i256
    %407 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %408 = llvm.load %407 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256_118, %408 : i256, !llvm.ptr
    %409 = llvm.getelementptr %408[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %409, %407 : !llvm.ptr, !llvm.ptr
    %410 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_119 = arith.constant -2 : i64
    %411 = arith.addi %410, %c-2_i64_119 : i64
    llvm.store %411, %9 : i64, !llvm.ptr
    %c2_i64_120 = arith.constant 2 : i64
    %412 = arith.cmpi ult, %410, %c2_i64_120 : i64
    %c91_i8_121 = arith.constant 91 : i8
    cf.cond_br %412, ^bb1(%c91_i8_121 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %413 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %414 = llvm.load %413 : !llvm.ptr -> !llvm.ptr
    %415 = llvm.getelementptr %414[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %416 = llvm.load %415 : !llvm.ptr -> i256
    llvm.store %415, %413 : !llvm.ptr, !llvm.ptr
    %417 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %418 = llvm.load %417 : !llvm.ptr -> !llvm.ptr
    %419 = llvm.getelementptr %418[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %420 = llvm.load %419 : !llvm.ptr -> i256
    llvm.store %419, %417 : !llvm.ptr, !llvm.ptr
    %421 = arith.trunci %416 : i256 to i64
    %c32_i64_122 = arith.constant 32 : i64
    %422 = arith.addi %421, %c32_i64_122 : i64
    %c0_i64_123 = arith.constant 0 : i64
    %423 = arith.cmpi slt, %422, %c0_i64_123 : i64
    %c84_i8_124 = arith.constant 84 : i8
    cf.cond_br %423, ^bb1(%c84_i8_124 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %c31_i64_125 = arith.constant 31 : i64
    %c32_i64_126 = arith.constant 32 : i64
    %424 = arith.addi %422, %c31_i64_125 : i64
    %425 = arith.divui %424, %c32_i64_126 : i64
    %426 = arith.muli %425, %c32_i64_126 : i64
    %427 = call @dora_fn_extend_memory(%arg0, %426) : (!llvm.ptr, i64) -> !llvm.ptr
    %428 = llvm.getelementptr %427[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %429 = llvm.load %428 : !llvm.ptr -> !llvm.ptr
    %430 = llvm.getelementptr %427[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %431 = llvm.load %430 : !llvm.ptr -> i8
    %c0_i8_127 = arith.constant 0 : i8
    %432 = arith.cmpi ne, %431, %c0_i8_127 : i8
    cf.cond_br %432, ^bb1(%431 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %433 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %429, %433 : !llvm.ptr, !llvm.ptr
    %434 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %426, %434 : i64, !llvm.ptr
    %435 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %436 = llvm.load %435 : !llvm.ptr -> !llvm.ptr
    %437 = llvm.getelementptr %436[%421] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %438 = llvm.intr.bswap(%420)  : (i256) -> i256
    llvm.store %438, %437 {alignment = 1 : i64} : i256, !llvm.ptr
    %439 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_128 = arith.constant 1 : i64
    %440 = arith.addi %439, %c1_i64_128 : i64
    llvm.store %440, %9 : i64, !llvm.ptr
    %441 = arith.cmpi ult, %c1024_i64, %440 : i64
    %c92_i8_129 = arith.constant 92 : i8
    cf.cond_br %441, ^bb1(%c92_i8_129 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %c32_i256_130 = arith.constant 32 : i256
    %442 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %443 = llvm.load %442 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_130, %443 : i256, !llvm.ptr
    %444 = llvm.getelementptr %443[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %444, %442 : !llvm.ptr, !llvm.ptr
    %445 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_131 = arith.constant 1 : i64
    %446 = arith.addi %445, %c1_i64_131 : i64
    llvm.store %446, %9 : i64, !llvm.ptr
    %447 = arith.cmpi ult, %c1024_i64, %446 : i64
    %c92_i8_132 = arith.constant 92 : i8
    cf.cond_br %447, ^bb1(%c92_i8_132 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %c0_i256_133 = arith.constant 0 : i256
    %448 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %449 = llvm.load %448 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_133, %449 : i256, !llvm.ptr
    %450 = llvm.getelementptr %449[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %450, %448 : !llvm.ptr, !llvm.ptr
    %451 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_134 = arith.constant 1 : i64
    %452 = arith.addi %451, %c1_i64_134 : i64
    llvm.store %452, %9 : i64, !llvm.ptr
    %453 = arith.cmpi ult, %c1024_i64, %452 : i64
    %c92_i8_135 = arith.constant 92 : i8
    cf.cond_br %453, ^bb1(%c92_i8_135 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %c0_i256_136 = arith.constant 0 : i256
    %454 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %455 = llvm.load %454 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_136, %455 : i256, !llvm.ptr
    %456 = llvm.getelementptr %455[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %456, %454 : !llvm.ptr, !llvm.ptr
    %457 = llvm.load %9 : !llvm.ptr -> i64
    %c-3_i64 = arith.constant -3 : i64
    %458 = arith.addi %457, %c-3_i64 : i64
    llvm.store %458, %9 : i64, !llvm.ptr
    %c3_i64_137 = arith.constant 3 : i64
    %459 = arith.cmpi ult, %457, %c3_i64_137 : i64
    %c91_i8_138 = arith.constant 91 : i8
    cf.cond_br %459, ^bb1(%c91_i8_138 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %460 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %461 = llvm.load %460 : !llvm.ptr -> !llvm.ptr
    %462 = llvm.getelementptr %461[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %463 = llvm.load %462 : !llvm.ptr -> i256
    llvm.store %462, %460 : !llvm.ptr, !llvm.ptr
    %464 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %465 = llvm.load %464 : !llvm.ptr -> !llvm.ptr
    %466 = llvm.getelementptr %465[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %467 = llvm.load %466 : !llvm.ptr -> i256
    llvm.store %466, %464 : !llvm.ptr, !llvm.ptr
    %468 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %469 = llvm.load %468 : !llvm.ptr -> !llvm.ptr
    %470 = llvm.getelementptr %469[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %471 = llvm.load %470 : !llvm.ptr -> i256
    llvm.store %470, %468 : !llvm.ptr, !llvm.ptr
    %472 = arith.trunci %463 : i256 to i64
    %473 = arith.trunci %467 : i256 to i64
    %474 = arith.trunci %471 : i256 to i64
    %475 = arith.addi %472, %474 : i64
    %c0_i64_139 = arith.constant 0 : i64
    %476 = arith.cmpi slt, %475, %c0_i64_139 : i64
    %c84_i8_140 = arith.constant 84 : i8
    cf.cond_br %476, ^bb1(%c84_i8_140 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %c31_i64_141 = arith.constant 31 : i64
    %c32_i64_142 = arith.constant 32 : i64
    %477 = arith.addi %475, %c31_i64_141 : i64
    %478 = arith.divui %477, %c32_i64_142 : i64
    %479 = arith.muli %478, %c32_i64_142 : i64
    %480 = call @dora_fn_extend_memory(%arg0, %479) : (!llvm.ptr, i64) -> !llvm.ptr
    %481 = llvm.getelementptr %480[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %482 = llvm.load %481 : !llvm.ptr -> !llvm.ptr
    %483 = llvm.getelementptr %480[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %484 = llvm.load %483 : !llvm.ptr -> i8
    %c0_i8_143 = arith.constant 0 : i8
    %485 = arith.cmpi ne, %484, %c0_i8_143 : i8
    cf.cond_br %485, ^bb1(%484 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %486 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %482, %486 : !llvm.ptr, !llvm.ptr
    %487 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %479, %487 : i64, !llvm.ptr
    %488 = call @dora_fn_return_data_copy(%arg0, %472, %473, %474) : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr
    cf.br ^bb59
  ^bb59:  // pred: ^bb58
    %c0_i64_144 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %489 = call @dora_fn_write_result(%arg0, %c0_i64_144, %c0_i64_144, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
