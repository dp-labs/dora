---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 125 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb13, ^bb14, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb27, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb36, ^bb37, ^bb40, ^bb41, ^bb43, ^bb44, ^bb45, ^bb46, ^bb48, ^bb49, ^bb52, ^bb53, ^bb56, ^bb57, ^bb60, ^bb61, ^bb63, ^bb64, ^bb65, ^bb67, ^bb68, ^bb70, ^bb71, ^bb74, ^bb75, ^bb78, ^bb79, ^bb82, ^bb83, ^bb86, ^bb87, ^bb90, ^bb91, ^bb94, ^bb95, ^bb97, ^bb98, ^bb99, ^bb100, ^bb101, ^bb102, ^bb103, ^bb104, ^bb105, ^bb106, ^bb107, ^bb108, ^bb110, ^bb111, ^bb114, ^bb115, ^bb118, ^bb119, ^bb122, ^bb123, ^bb126, ^bb127, ^bb129, ^bb130, ^bb131, ^bb132, ^bb134, ^bb135, ^bb138, ^bb139, ^bb142, ^bb143, ^bb145, ^bb146, ^bb147, ^bb148, ^bb150, ^bb151, ^bb154, ^bb155, ^bb158, ^bb159, ^bb161, ^bb162, ^bb163, ^bb164, ^bb166, ^bb167, ^bb170, ^bb171, ^bb174, ^bb175, ^bb178, ^bb179, ^bb181, ^bb182, ^bb183, ^bb184, ^bb185, ^bb186, ^bb187, ^bb188, ^bb190, ^bb191, ^bb194, ^bb195, ^bb196, ^bb197, ^bb198
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb16
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %46 = arith.addi %44, %c32_i64 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %47 = arith.cmpi slt, %46, %c0_i64_8 : i64
    %c84_i8_9 = arith.constant 84 : i8
    cf.cond_br %47, ^bb1(%c84_i8_9 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_10 = arith.constant 32 : i64
    %48 = arith.addi %46, %c31_i64 : i64
    %49 = arith.divui %48, %c32_i64_10 : i64
    %c32_i64_11 = arith.constant 32 : i64
    %50 = arith.muli %49, %c32_i64_11 : i64
    %51 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c31_i64_12 = arith.constant 31 : i64
    %c32_i64_13 = arith.constant 32 : i64
    %53 = arith.addi %52, %c31_i64_12 : i64
    %54 = arith.divui %53, %c32_i64_13 : i64
    %55 = arith.muli %54, %c32_i64_11 : i64
    %56 = arith.cmpi ult, %55, %50 : i64
    %57 = scf.if %56 -> (i64) {
      %c3_i64_335 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %814 = arith.muli %54, %54 : i64
      %815 = arith.divui %814, %c512_i64 : i64
      %816 = arith.muli %54, %c3_i64_335 : i64
      %817 = arith.addi %815, %816 : i64
      %c3_i64_336 = arith.constant 3 : i64
      %c512_i64_337 = arith.constant 512 : i64
      %818 = arith.muli %49, %49 : i64
      %819 = arith.divui %818, %c512_i64_337 : i64
      %820 = arith.muli %49, %c3_i64_336 : i64
      %821 = arith.addi %819, %820 : i64
      %822 = arith.subi %821, %817 : i64
      scf.yield %822 : i64
    } else {
      %c0_i64_335 = arith.constant 0 : i64
      scf.yield %c0_i64_335 : i64
    }
    %58 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %60 = arith.cmpi ult, %59, %57 : i64
    scf.if %60 {
    } else {
      %814 = arith.subi %59, %57 : i64
      llvm.store %814, %58 : i64, !llvm.ptr
    }
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %60, ^bb1(%c80_i8_14 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %61 = call @dora_fn_extend_memory(%arg0, %50) : (!llvm.ptr, i64) -> !llvm.ptr
    %62 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %63 = llvm.load %62 : !llvm.ptr -> !llvm.ptr
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %66 = arith.cmpi ne, %65, %c0_i8 : i8
    cf.cond_br %66, ^bb1(%65 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %67 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %63, %67 : !llvm.ptr, !llvm.ptr
    %68 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %50, %68 : i64, !llvm.ptr
    %69 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.getelementptr %70[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %72, %71 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_15 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %75 = arith.addi %74, %c-2_i64 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %76 = arith.cmpi ult, %74, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %76, ^bb1(%c91_i8 : i8), ^bb11
  ^bb17:  // pred: ^bb7
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %79, ^bb18, ^bb1(%c80_i8_17 : i8)
  ^bb18:  // pred: ^bb17
    %80 = arith.subi %78, %c3_i64_16 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %86 = arith.addi %85, %c1_i64_19 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %c1024_i64_18, %86 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %87, ^bb1(%c92_i8_20 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_21 = arith.constant 3 : i64
    %90 = arith.cmpi uge, %89, %c3_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %90, ^bb22, ^bb1(%c80_i8_22 : i8)
  ^bb22:  // pred: ^bb21
    %91 = arith.subi %89, %c3_i64_21 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c32_i256 = arith.constant 32 : i256
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %93 : i256, !llvm.ptr
    %94 = llvm.getelementptr %93[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    cf.br ^bb33
  ^bb24:  // pred: ^bb26
    %95 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %97 = arith.addi %96, %c1_i64_24 : i64
    llvm.store %97, %95 : i64, !llvm.ptr
    %98 = arith.cmpi ult, %c1024_i64_23, %97 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %98, ^bb1(%c92_i8_25 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    %101 = arith.cmpi uge, %100, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %101, ^bb26, ^bb1(%c80_i8_27 : i8)
  ^bb26:  // pred: ^bb25
    %102 = arith.subi %100, %c3_i64_26 : i64
    llvm.store %102, %99 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb32
    %103 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> !llvm.ptr
    %105 = llvm.getelementptr %104[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %106 = llvm.load %105 : !llvm.ptr -> i256
    llvm.store %105, %103 : !llvm.ptr, !llvm.ptr
    %107 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> !llvm.ptr
    %109 = llvm.getelementptr %108[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %110 = llvm.load %109 : !llvm.ptr -> i256
    llvm.store %109, %107 : !llvm.ptr, !llvm.ptr
    %111 = arith.trunci %106 : i256 to i64
    %c0_i64_28 = arith.constant 0 : i64
    %112 = arith.cmpi slt, %111, %c0_i64_28 : i64
    %c84_i8_29 = arith.constant 84 : i8
    cf.cond_br %112, ^bb1(%c84_i8_29 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c32_i64_30 = arith.constant 32 : i64
    %113 = arith.addi %111, %c32_i64_30 : i64
    %c0_i64_31 = arith.constant 0 : i64
    %114 = arith.cmpi slt, %113, %c0_i64_31 : i64
    %c84_i8_32 = arith.constant 84 : i8
    cf.cond_br %114, ^bb1(%c84_i8_32 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c31_i64_33 = arith.constant 31 : i64
    %c32_i64_34 = arith.constant 32 : i64
    %115 = arith.addi %113, %c31_i64_33 : i64
    %116 = arith.divui %115, %c32_i64_34 : i64
    %c32_i64_35 = arith.constant 32 : i64
    %117 = arith.muli %116, %c32_i64_35 : i64
    %118 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c31_i64_36 = arith.constant 31 : i64
    %c32_i64_37 = arith.constant 32 : i64
    %120 = arith.addi %119, %c31_i64_36 : i64
    %121 = arith.divui %120, %c32_i64_37 : i64
    %122 = arith.muli %121, %c32_i64_35 : i64
    %123 = arith.cmpi ult, %122, %117 : i64
    %124 = scf.if %123 -> (i64) {
      %c3_i64_335 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %814 = arith.muli %121, %121 : i64
      %815 = arith.divui %814, %c512_i64 : i64
      %816 = arith.muli %121, %c3_i64_335 : i64
      %817 = arith.addi %815, %816 : i64
      %c3_i64_336 = arith.constant 3 : i64
      %c512_i64_337 = arith.constant 512 : i64
      %818 = arith.muli %116, %116 : i64
      %819 = arith.divui %818, %c512_i64_337 : i64
      %820 = arith.muli %116, %c3_i64_336 : i64
      %821 = arith.addi %819, %820 : i64
      %822 = arith.subi %821, %817 : i64
      scf.yield %822 : i64
    } else {
      %c0_i64_335 = arith.constant 0 : i64
      scf.yield %c0_i64_335 : i64
    }
    %125 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> i64
    %127 = arith.cmpi ult, %126, %124 : i64
    scf.if %127 {
    } else {
      %814 = arith.subi %126, %124 : i64
      llvm.store %814, %125 : i64, !llvm.ptr
    }
    %c80_i8_38 = arith.constant 80 : i8
    cf.cond_br %127, ^bb1(%c80_i8_38 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %128 = call @dora_fn_extend_memory(%arg0, %117) : (!llvm.ptr, i64) -> !llvm.ptr
    %129 = llvm.getelementptr %128[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %130 = llvm.load %129 : !llvm.ptr -> !llvm.ptr
    %131 = llvm.getelementptr %128[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %132 = llvm.load %131 : !llvm.ptr -> i8
    %c0_i8_39 = arith.constant 0 : i8
    %133 = arith.cmpi ne, %132, %c0_i8_39 : i8
    cf.cond_br %133, ^bb1(%132 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %134 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %130, %134 : !llvm.ptr, !llvm.ptr
    %135 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %117, %135 : i64, !llvm.ptr
    %136 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %137[%111] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %139 = llvm.intr.bswap(%110)  : (i256) -> i256
    llvm.store %139, %138 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb37
  ^bb32:  // pred: ^bb34
    %140 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_40 = arith.constant 1024 : i64
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %c-2_i64_41 = arith.constant -2 : i64
    %142 = arith.addi %141, %c-2_i64_41 : i64
    llvm.store %142, %140 : i64, !llvm.ptr
    %c2_i64_42 = arith.constant 2 : i64
    %143 = arith.cmpi ult, %141, %c2_i64_42 : i64
    %c91_i8_43 = arith.constant 91 : i8
    cf.cond_br %143, ^bb1(%c91_i8_43 : i8), ^bb27
  ^bb33:  // pred: ^bb23
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c3_i64_44 = arith.constant 3 : i64
    %146 = arith.cmpi uge, %145, %c3_i64_44 : i64
    %c80_i8_45 = arith.constant 80 : i8
    cf.cond_br %146, ^bb34, ^bb1(%c80_i8_45 : i8)
  ^bb34:  // pred: ^bb33
    %147 = arith.subi %145, %c3_i64_44 : i64
    llvm.store %147, %144 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb36
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %151 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_46 = arith.constant 1024 : i64
    %152 = llvm.load %151 : !llvm.ptr -> i64
    %c1_i64_47 = arith.constant 1 : i64
    %153 = arith.addi %152, %c1_i64_47 : i64
    llvm.store %153, %151 : i64, !llvm.ptr
    %154 = arith.cmpi ult, %c1024_i64_46, %153 : i64
    %c92_i8_48 = arith.constant 92 : i8
    cf.cond_br %154, ^bb1(%c92_i8_48 : i8), ^bb35
  ^bb37:  // pred: ^bb31
    %155 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %156 = llvm.load %155 : !llvm.ptr -> i64
    %c3_i64_49 = arith.constant 3 : i64
    %157 = arith.cmpi uge, %156, %c3_i64_49 : i64
    %c80_i8_50 = arith.constant 80 : i8
    cf.cond_br %157, ^bb38, ^bb1(%c80_i8_50 : i8)
  ^bb38:  // pred: ^bb37
    %158 = arith.subi %156, %c3_i64_49 : i64
    llvm.store %158, %155 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c64_i256 = arith.constant 64 : i256
    %159 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %160 : i256, !llvm.ptr
    %161 = llvm.getelementptr %160[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %161, %159 : !llvm.ptr, !llvm.ptr
    cf.br ^bb49
  ^bb40:  // pred: ^bb42
    %162 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_51 = arith.constant 1024 : i64
    %163 = llvm.load %162 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %164 = arith.addi %163, %c1_i64_52 : i64
    llvm.store %164, %162 : i64, !llvm.ptr
    %165 = arith.cmpi ult, %c1024_i64_51, %164 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %165, ^bb1(%c92_i8_53 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %166 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> i64
    %c3_i64_54 = arith.constant 3 : i64
    %168 = arith.cmpi uge, %167, %c3_i64_54 : i64
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %168, ^bb42, ^bb1(%c80_i8_55 : i8)
  ^bb42:  // pred: ^bb41
    %169 = arith.subi %167, %c3_i64_54 : i64
    llvm.store %169, %166 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb48
    %170 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> !llvm.ptr
    %172 = llvm.getelementptr %171[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %173 = llvm.load %172 : !llvm.ptr -> i256
    llvm.store %172, %170 : !llvm.ptr, !llvm.ptr
    %174 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %175 = llvm.load %174 : !llvm.ptr -> !llvm.ptr
    %176 = llvm.getelementptr %175[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %177 = llvm.load %176 : !llvm.ptr -> i256
    llvm.store %176, %174 : !llvm.ptr, !llvm.ptr
    %178 = arith.trunci %173 : i256 to i64
    %c0_i64_56 = arith.constant 0 : i64
    %179 = arith.cmpi slt, %178, %c0_i64_56 : i64
    %c84_i8_57 = arith.constant 84 : i8
    cf.cond_br %179, ^bb1(%c84_i8_57 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c32_i64_58 = arith.constant 32 : i64
    %180 = arith.addi %178, %c32_i64_58 : i64
    %c0_i64_59 = arith.constant 0 : i64
    %181 = arith.cmpi slt, %180, %c0_i64_59 : i64
    %c84_i8_60 = arith.constant 84 : i8
    cf.cond_br %181, ^bb1(%c84_i8_60 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %c31_i64_61 = arith.constant 31 : i64
    %c32_i64_62 = arith.constant 32 : i64
    %182 = arith.addi %180, %c31_i64_61 : i64
    %183 = arith.divui %182, %c32_i64_62 : i64
    %c32_i64_63 = arith.constant 32 : i64
    %184 = arith.muli %183, %c32_i64_63 : i64
    %185 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> i64
    %c31_i64_64 = arith.constant 31 : i64
    %c32_i64_65 = arith.constant 32 : i64
    %187 = arith.addi %186, %c31_i64_64 : i64
    %188 = arith.divui %187, %c32_i64_65 : i64
    %189 = arith.muli %188, %c32_i64_63 : i64
    %190 = arith.cmpi ult, %189, %184 : i64
    %191 = scf.if %190 -> (i64) {
      %c3_i64_335 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %814 = arith.muli %188, %188 : i64
      %815 = arith.divui %814, %c512_i64 : i64
      %816 = arith.muli %188, %c3_i64_335 : i64
      %817 = arith.addi %815, %816 : i64
      %c3_i64_336 = arith.constant 3 : i64
      %c512_i64_337 = arith.constant 512 : i64
      %818 = arith.muli %183, %183 : i64
      %819 = arith.divui %818, %c512_i64_337 : i64
      %820 = arith.muli %183, %c3_i64_336 : i64
      %821 = arith.addi %819, %820 : i64
      %822 = arith.subi %821, %817 : i64
      scf.yield %822 : i64
    } else {
      %c0_i64_335 = arith.constant 0 : i64
      scf.yield %c0_i64_335 : i64
    }
    %192 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> i64
    %194 = arith.cmpi ult, %193, %191 : i64
    scf.if %194 {
    } else {
      %814 = arith.subi %193, %191 : i64
      llvm.store %814, %192 : i64, !llvm.ptr
    }
    %c80_i8_66 = arith.constant 80 : i8
    cf.cond_br %194, ^bb1(%c80_i8_66 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %195 = call @dora_fn_extend_memory(%arg0, %184) : (!llvm.ptr, i64) -> !llvm.ptr
    %196 = llvm.getelementptr %195[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %197 = llvm.load %196 : !llvm.ptr -> !llvm.ptr
    %198 = llvm.getelementptr %195[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %199 = llvm.load %198 : !llvm.ptr -> i8
    %c0_i8_67 = arith.constant 0 : i8
    %200 = arith.cmpi ne, %199, %c0_i8_67 : i8
    cf.cond_br %200, ^bb1(%199 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %201 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %197, %201 : !llvm.ptr, !llvm.ptr
    %202 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %184, %202 : i64, !llvm.ptr
    %203 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %204 = llvm.load %203 : !llvm.ptr -> !llvm.ptr
    %205 = llvm.getelementptr %204[%178] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %206 = llvm.intr.bswap(%177)  : (i256) -> i256
    llvm.store %206, %205 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb53
  ^bb48:  // pred: ^bb50
    %207 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_68 = arith.constant 1024 : i64
    %208 = llvm.load %207 : !llvm.ptr -> i64
    %c-2_i64_69 = arith.constant -2 : i64
    %209 = arith.addi %208, %c-2_i64_69 : i64
    llvm.store %209, %207 : i64, !llvm.ptr
    %c2_i64_70 = arith.constant 2 : i64
    %210 = arith.cmpi ult, %208, %c2_i64_70 : i64
    %c91_i8_71 = arith.constant 91 : i8
    cf.cond_br %210, ^bb1(%c91_i8_71 : i8), ^bb43
  ^bb49:  // pred: ^bb39
    %211 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %212 = llvm.load %211 : !llvm.ptr -> i64
    %c3_i64_72 = arith.constant 3 : i64
    %213 = arith.cmpi uge, %212, %c3_i64_72 : i64
    %c80_i8_73 = arith.constant 80 : i8
    cf.cond_br %213, ^bb50, ^bb1(%c80_i8_73 : i8)
  ^bb50:  // pred: ^bb49
    %214 = arith.subi %212, %c3_i64_72 : i64
    llvm.store %214, %211 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // pred: ^bb52
    %c77_i256 = arith.constant 77 : i256
    %215 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %216 = llvm.load %215 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %216 : i256, !llvm.ptr
    %217 = llvm.getelementptr %216[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %217, %215 : !llvm.ptr, !llvm.ptr
    cf.br ^bb57
  ^bb52:  // pred: ^bb54
    %218 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_74 = arith.constant 1024 : i64
    %219 = llvm.load %218 : !llvm.ptr -> i64
    %c1_i64_75 = arith.constant 1 : i64
    %220 = arith.addi %219, %c1_i64_75 : i64
    llvm.store %220, %218 : i64, !llvm.ptr
    %221 = arith.cmpi ult, %c1024_i64_74, %220 : i64
    %c92_i8_76 = arith.constant 92 : i8
    cf.cond_br %221, ^bb1(%c92_i8_76 : i8), ^bb51
  ^bb53:  // pred: ^bb47
    %222 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> i64
    %c3_i64_77 = arith.constant 3 : i64
    %224 = arith.cmpi uge, %223, %c3_i64_77 : i64
    %c80_i8_78 = arith.constant 80 : i8
    cf.cond_br %224, ^bb54, ^bb1(%c80_i8_78 : i8)
  ^bb54:  // pred: ^bb53
    %225 = arith.subi %223, %c3_i64_77 : i64
    llvm.store %225, %222 : i64, !llvm.ptr
    cf.br ^bb52
  ^bb55:  // pred: ^bb56
    %c0_i256_79 = arith.constant 0 : i256
    %226 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %227 = llvm.load %226 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_79, %227 : i256, !llvm.ptr
    %228 = llvm.getelementptr %227[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %228, %226 : !llvm.ptr, !llvm.ptr
    cf.br ^bb61
  ^bb56:  // pred: ^bb58
    %229 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_80 = arith.constant 1024 : i64
    %230 = llvm.load %229 : !llvm.ptr -> i64
    %c1_i64_81 = arith.constant 1 : i64
    %231 = arith.addi %230, %c1_i64_81 : i64
    llvm.store %231, %229 : i64, !llvm.ptr
    %232 = arith.cmpi ult, %c1024_i64_80, %231 : i64
    %c92_i8_82 = arith.constant 92 : i8
    cf.cond_br %232, ^bb1(%c92_i8_82 : i8), ^bb55
  ^bb57:  // pred: ^bb51
    %233 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %234 = llvm.load %233 : !llvm.ptr -> i64
    %c3_i64_83 = arith.constant 3 : i64
    %235 = arith.cmpi uge, %234, %c3_i64_83 : i64
    %c80_i8_84 = arith.constant 80 : i8
    cf.cond_br %235, ^bb58, ^bb1(%c80_i8_84 : i8)
  ^bb58:  // pred: ^bb57
    %236 = arith.subi %234, %c3_i64_83 : i64
    llvm.store %236, %233 : i64, !llvm.ptr
    cf.br ^bb56
  ^bb59:  // pred: ^bb60
    %c0_i256_85 = arith.constant 0 : i256
    %237 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_85, %238 : i256, !llvm.ptr
    %239 = llvm.getelementptr %238[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %239, %237 : !llvm.ptr, !llvm.ptr
    cf.br ^bb71
  ^bb60:  // pred: ^bb62
    %240 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_86 = arith.constant 1024 : i64
    %241 = llvm.load %240 : !llvm.ptr -> i64
    %c1_i64_87 = arith.constant 1 : i64
    %242 = arith.addi %241, %c1_i64_87 : i64
    llvm.store %242, %240 : i64, !llvm.ptr
    %243 = arith.cmpi ult, %c1024_i64_86, %242 : i64
    %c92_i8_88 = arith.constant 92 : i8
    cf.cond_br %243, ^bb1(%c92_i8_88 : i8), ^bb59
  ^bb61:  // pred: ^bb55
    %244 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %245 = llvm.load %244 : !llvm.ptr -> i64
    %c3_i64_89 = arith.constant 3 : i64
    %246 = arith.cmpi uge, %245, %c3_i64_89 : i64
    %c80_i8_90 = arith.constant 80 : i8
    cf.cond_br %246, ^bb62, ^bb1(%c80_i8_90 : i8)
  ^bb62:  // pred: ^bb61
    %247 = arith.subi %245, %c3_i64_89 : i64
    llvm.store %247, %244 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb63:  // pred: ^bb70
    %248 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %249 = llvm.load %248 : !llvm.ptr -> !llvm.ptr
    %250 = llvm.getelementptr %249[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %251 = llvm.load %250 : !llvm.ptr -> i256
    llvm.store %250, %248 : !llvm.ptr, !llvm.ptr
    %252 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> !llvm.ptr
    %254 = llvm.getelementptr %253[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %255 = llvm.load %254 : !llvm.ptr -> i256
    llvm.store %254, %252 : !llvm.ptr, !llvm.ptr
    %256 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %257 = llvm.load %256 : !llvm.ptr -> !llvm.ptr
    %258 = llvm.getelementptr %257[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %259 = llvm.load %258 : !llvm.ptr -> i256
    llvm.store %258, %256 : !llvm.ptr, !llvm.ptr
    %260 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %261 = llvm.load %260 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %261, ^bb1(%c87_i8 : i8), ^bb64
  ^bb64:  // pred: ^bb63
    %262 = arith.trunci %255 : i256 to i64
    %c0_i64_91 = arith.constant 0 : i64
    %263 = arith.cmpi slt, %262, %c0_i64_91 : i64
    %c84_i8_92 = arith.constant 84 : i8
    cf.cond_br %263, ^bb1(%c84_i8_92 : i8), ^bb65
  ^bb65:  // pred: ^bb64
    %264 = arith.trunci %259 : i256 to i64
    %c0_i64_93 = arith.constant 0 : i64
    %265 = arith.cmpi slt, %264, %c0_i64_93 : i64
    %c84_i8_94 = arith.constant 84 : i8
    cf.cond_br %265, ^bb1(%c84_i8_94 : i8), ^bb66
  ^bb66:  // pred: ^bb65
    %c0_i64_95 = arith.constant 0 : i64
    %266 = arith.cmpi ne, %264, %c0_i64_95 : i64
    cf.cond_br %266, ^bb194, ^bb67
  ^bb67:  // 2 preds: ^bb66, ^bb199
    %c32000_i64 = arith.constant 32000 : i64
    %267 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %268 = llvm.load %267 : !llvm.ptr -> i64
    %269 = arith.cmpi ult, %268, %c32000_i64 : i64
    scf.if %269 {
    } else {
      %814 = arith.subi %268, %c32000_i64 : i64
      llvm.store %814, %267 : i64, !llvm.ptr
    }
    %c80_i8_96 = arith.constant 80 : i8
    cf.cond_br %269, ^bb1(%c80_i8_96 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %c1_i256 = arith.constant 1 : i256
    %270 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %251, %270 {alignment = 1 : i64} : i256, !llvm.ptr
    %271 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %272 = llvm.load %271 : !llvm.ptr -> i64
    %c1_i64_97 = arith.constant 1 : i64
    %273 = llvm.alloca %c1_i64_97 x i64 : (i64) -> !llvm.ptr
    llvm.store %272, %273 {alignment = 1 : i64} : i64, !llvm.ptr
    %274 = call @dora_fn_create(%arg0, %264, %262, %270, %273) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %275 = llvm.getelementptr %274[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %276 = llvm.load %275 : !llvm.ptr -> i8
    %c0_i8_98 = arith.constant 0 : i8
    %277 = arith.cmpi ne, %276, %c0_i8_98 : i8
    cf.cond_br %277, ^bb1(%276 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %278 = llvm.load %270 : !llvm.ptr -> i256
    %279 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %280 = llvm.load %279 : !llvm.ptr -> !llvm.ptr
    llvm.store %278, %280 : i256, !llvm.ptr
    %281 = llvm.getelementptr %280[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %281, %279 : !llvm.ptr, !llvm.ptr
    cf.br ^bb75
  ^bb70:  // pred: ^bb72
    %282 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_99 = arith.constant 1024 : i64
    %283 = llvm.load %282 : !llvm.ptr -> i64
    %c-2_i64_100 = arith.constant -2 : i64
    %284 = arith.addi %283, %c-2_i64_100 : i64
    llvm.store %284, %282 : i64, !llvm.ptr
    %c3_i64_101 = arith.constant 3 : i64
    %285 = arith.cmpi ult, %283, %c3_i64_101 : i64
    %c91_i8_102 = arith.constant 91 : i8
    cf.cond_br %285, ^bb1(%c91_i8_102 : i8), ^bb63
  ^bb71:  // pred: ^bb59
    %286 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %287 = llvm.load %286 : !llvm.ptr -> i64
    %c0_i64_103 = arith.constant 0 : i64
    %288 = arith.cmpi uge, %287, %c0_i64_103 : i64
    %c80_i8_104 = arith.constant 80 : i8
    cf.cond_br %288, ^bb72, ^bb1(%c80_i8_104 : i8)
  ^bb72:  // pred: ^bb71
    %289 = arith.subi %287, %c0_i64_103 : i64
    llvm.store %289, %286 : i64, !llvm.ptr
    cf.br ^bb70
  ^bb73:  // pred: ^bb74
    %c0_i256_105 = arith.constant 0 : i256
    %290 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %291 = llvm.load %290 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_105, %291 : i256, !llvm.ptr
    %292 = llvm.getelementptr %291[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %292, %290 : !llvm.ptr, !llvm.ptr
    cf.br ^bb79
  ^bb74:  // pred: ^bb76
    %293 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_106 = arith.constant 1024 : i64
    %294 = llvm.load %293 : !llvm.ptr -> i64
    %c1_i64_107 = arith.constant 1 : i64
    %295 = arith.addi %294, %c1_i64_107 : i64
    llvm.store %295, %293 : i64, !llvm.ptr
    %296 = arith.cmpi ult, %c1024_i64_106, %295 : i64
    %c92_i8_108 = arith.constant 92 : i8
    cf.cond_br %296, ^bb1(%c92_i8_108 : i8), ^bb73
  ^bb75:  // pred: ^bb69
    %297 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %298 = llvm.load %297 : !llvm.ptr -> i64
    %c3_i64_109 = arith.constant 3 : i64
    %299 = arith.cmpi uge, %298, %c3_i64_109 : i64
    %c80_i8_110 = arith.constant 80 : i8
    cf.cond_br %299, ^bb76, ^bb1(%c80_i8_110 : i8)
  ^bb76:  // pred: ^bb75
    %300 = arith.subi %298, %c3_i64_109 : i64
    llvm.store %300, %297 : i64, !llvm.ptr
    cf.br ^bb74
  ^bb77:  // pred: ^bb78
    %c0_i256_111 = arith.constant 0 : i256
    %301 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %302 = llvm.load %301 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_111, %302 : i256, !llvm.ptr
    %303 = llvm.getelementptr %302[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %303, %301 : !llvm.ptr, !llvm.ptr
    cf.br ^bb83
  ^bb78:  // pred: ^bb80
    %304 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_112 = arith.constant 1024 : i64
    %305 = llvm.load %304 : !llvm.ptr -> i64
    %c1_i64_113 = arith.constant 1 : i64
    %306 = arith.addi %305, %c1_i64_113 : i64
    llvm.store %306, %304 : i64, !llvm.ptr
    %307 = arith.cmpi ult, %c1024_i64_112, %306 : i64
    %c92_i8_114 = arith.constant 92 : i8
    cf.cond_br %307, ^bb1(%c92_i8_114 : i8), ^bb77
  ^bb79:  // pred: ^bb73
    %308 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %309 = llvm.load %308 : !llvm.ptr -> i64
    %c3_i64_115 = arith.constant 3 : i64
    %310 = arith.cmpi uge, %309, %c3_i64_115 : i64
    %c80_i8_116 = arith.constant 80 : i8
    cf.cond_br %310, ^bb80, ^bb1(%c80_i8_116 : i8)
  ^bb80:  // pred: ^bb79
    %311 = arith.subi %309, %c3_i64_115 : i64
    llvm.store %311, %308 : i64, !llvm.ptr
    cf.br ^bb78
  ^bb81:  // pred: ^bb82
    %c0_i256_117 = arith.constant 0 : i256
    %312 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %313 = llvm.load %312 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_117, %313 : i256, !llvm.ptr
    %314 = llvm.getelementptr %313[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %314, %312 : !llvm.ptr, !llvm.ptr
    cf.br ^bb87
  ^bb82:  // pred: ^bb84
    %315 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_118 = arith.constant 1024 : i64
    %316 = llvm.load %315 : !llvm.ptr -> i64
    %c1_i64_119 = arith.constant 1 : i64
    %317 = arith.addi %316, %c1_i64_119 : i64
    llvm.store %317, %315 : i64, !llvm.ptr
    %318 = arith.cmpi ult, %c1024_i64_118, %317 : i64
    %c92_i8_120 = arith.constant 92 : i8
    cf.cond_br %318, ^bb1(%c92_i8_120 : i8), ^bb81
  ^bb83:  // pred: ^bb77
    %319 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %320 = llvm.load %319 : !llvm.ptr -> i64
    %c3_i64_121 = arith.constant 3 : i64
    %321 = arith.cmpi uge, %320, %c3_i64_121 : i64
    %c80_i8_122 = arith.constant 80 : i8
    cf.cond_br %321, ^bb84, ^bb1(%c80_i8_122 : i8)
  ^bb84:  // pred: ^bb83
    %322 = arith.subi %320, %c3_i64_121 : i64
    llvm.store %322, %319 : i64, !llvm.ptr
    cf.br ^bb82
  ^bb85:  // pred: ^bb86
    %c0_i256_123 = arith.constant 0 : i256
    %323 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %324 = llvm.load %323 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_123, %324 : i256, !llvm.ptr
    %325 = llvm.getelementptr %324[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %325, %323 : !llvm.ptr, !llvm.ptr
    cf.br ^bb91
  ^bb86:  // pred: ^bb88
    %326 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_124 = arith.constant 1024 : i64
    %327 = llvm.load %326 : !llvm.ptr -> i64
    %c1_i64_125 = arith.constant 1 : i64
    %328 = arith.addi %327, %c1_i64_125 : i64
    llvm.store %328, %326 : i64, !llvm.ptr
    %329 = arith.cmpi ult, %c1024_i64_124, %328 : i64
    %c92_i8_126 = arith.constant 92 : i8
    cf.cond_br %329, ^bb1(%c92_i8_126 : i8), ^bb85
  ^bb87:  // pred: ^bb81
    %330 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %331 = llvm.load %330 : !llvm.ptr -> i64
    %c3_i64_127 = arith.constant 3 : i64
    %332 = arith.cmpi uge, %331, %c3_i64_127 : i64
    %c80_i8_128 = arith.constant 80 : i8
    cf.cond_br %332, ^bb88, ^bb1(%c80_i8_128 : i8)
  ^bb88:  // pred: ^bb87
    %333 = arith.subi %331, %c3_i64_127 : i64
    llvm.store %333, %330 : i64, !llvm.ptr
    cf.br ^bb86
  ^bb89:  // pred: ^bb90
    %334 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %335 = llvm.load %334 : !llvm.ptr -> !llvm.ptr
    %336 = llvm.getelementptr %335[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %337 = llvm.load %336 : !llvm.ptr -> i256
    %338 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %339 = llvm.load %338 : !llvm.ptr -> !llvm.ptr
    llvm.store %337, %339 : i256, !llvm.ptr
    %340 = llvm.getelementptr %339[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %340, %338 : !llvm.ptr, !llvm.ptr
    cf.br ^bb95
  ^bb90:  // pred: ^bb92
    %341 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_129 = arith.constant 1024 : i64
    %342 = llvm.load %341 : !llvm.ptr -> i64
    %c1_i64_130 = arith.constant 1 : i64
    %343 = arith.addi %342, %c1_i64_130 : i64
    llvm.store %343, %341 : i64, !llvm.ptr
    %344 = arith.cmpi ult, %c1024_i64_129, %343 : i64
    %c92_i8_131 = arith.constant 92 : i8
    cf.cond_br %344, ^bb1(%c92_i8_131 : i8), ^bb89
  ^bb91:  // pred: ^bb85
    %345 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %346 = llvm.load %345 : !llvm.ptr -> i64
    %c3_i64_132 = arith.constant 3 : i64
    %347 = arith.cmpi uge, %346, %c3_i64_132 : i64
    %c80_i8_133 = arith.constant 80 : i8
    cf.cond_br %347, ^bb92, ^bb1(%c80_i8_133 : i8)
  ^bb92:  // pred: ^bb91
    %348 = arith.subi %346, %c3_i64_132 : i64
    llvm.store %348, %345 : i64, !llvm.ptr
    cf.br ^bb90
  ^bb93:  // pred: ^bb94
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %349 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %350 = llvm.load %349 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %350 : i256, !llvm.ptr
    %351 = llvm.getelementptr %350[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %351, %349 : !llvm.ptr, !llvm.ptr
    cf.br ^bb111
  ^bb94:  // pred: ^bb96
    %352 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_134 = arith.constant 1024 : i64
    %353 = llvm.load %352 : !llvm.ptr -> i64
    %c1_i64_135 = arith.constant 1 : i64
    %354 = arith.addi %353, %c1_i64_135 : i64
    llvm.store %354, %352 : i64, !llvm.ptr
    %355 = arith.cmpi ult, %c1024_i64_134, %354 : i64
    %c92_i8_136 = arith.constant 92 : i8
    cf.cond_br %355, ^bb1(%c92_i8_136 : i8), ^bb93
  ^bb95:  // pred: ^bb89
    %356 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %357 = llvm.load %356 : !llvm.ptr -> i64
    %c3_i64_137 = arith.constant 3 : i64
    %358 = arith.cmpi uge, %357, %c3_i64_137 : i64
    %c80_i8_138 = arith.constant 80 : i8
    cf.cond_br %358, ^bb96, ^bb1(%c80_i8_138 : i8)
  ^bb96:  // pred: ^bb95
    %359 = arith.subi %357, %c3_i64_137 : i64
    llvm.store %359, %356 : i64, !llvm.ptr
    cf.br ^bb94
  ^bb97:  // pred: ^bb110
    %360 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %361 = llvm.load %360 : !llvm.ptr -> !llvm.ptr
    %362 = llvm.getelementptr %361[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %363 = llvm.load %362 : !llvm.ptr -> i256
    llvm.store %362, %360 : !llvm.ptr, !llvm.ptr
    %364 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %365 = llvm.load %364 : !llvm.ptr -> !llvm.ptr
    %366 = llvm.getelementptr %365[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %367 = llvm.load %366 : !llvm.ptr -> i256
    llvm.store %366, %364 : !llvm.ptr, !llvm.ptr
    %368 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %369 = llvm.load %368 : !llvm.ptr -> !llvm.ptr
    %370 = llvm.getelementptr %369[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %371 = llvm.load %370 : !llvm.ptr -> i256
    llvm.store %370, %368 : !llvm.ptr, !llvm.ptr
    %372 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %373 = llvm.load %372 : !llvm.ptr -> !llvm.ptr
    %374 = llvm.getelementptr %373[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %375 = llvm.load %374 : !llvm.ptr -> i256
    llvm.store %374, %372 : !llvm.ptr, !llvm.ptr
    %376 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %377 = llvm.load %376 : !llvm.ptr -> !llvm.ptr
    %378 = llvm.getelementptr %377[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %379 = llvm.load %378 : !llvm.ptr -> i256
    llvm.store %378, %376 : !llvm.ptr, !llvm.ptr
    %380 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %381 = llvm.load %380 : !llvm.ptr -> !llvm.ptr
    %382 = llvm.getelementptr %381[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %383 = llvm.load %382 : !llvm.ptr -> i256
    llvm.store %382, %380 : !llvm.ptr, !llvm.ptr
    %c0_i256_139 = arith.constant 0 : i256
    %384 = arith.trunci %363 : i256 to i64
    %c0_i64_140 = arith.constant 0 : i64
    %385 = arith.cmpi slt, %384, %c0_i64_140 : i64
    %c84_i8_141 = arith.constant 84 : i8
    cf.cond_br %385, ^bb1(%c84_i8_141 : i8), ^bb98
  ^bb98:  // pred: ^bb97
    %386 = arith.trunci %371 : i256 to i64
    %c0_i64_142 = arith.constant 0 : i64
    %387 = arith.cmpi slt, %386, %c0_i64_142 : i64
    %c84_i8_143 = arith.constant 84 : i8
    cf.cond_br %387, ^bb1(%c84_i8_143 : i8), ^bb99
  ^bb99:  // pred: ^bb98
    %388 = arith.trunci %375 : i256 to i64
    %c0_i64_144 = arith.constant 0 : i64
    %389 = arith.cmpi slt, %388, %c0_i64_144 : i64
    %c84_i8_145 = arith.constant 84 : i8
    cf.cond_br %389, ^bb1(%c84_i8_145 : i8), ^bb100
  ^bb100:  // pred: ^bb99
    %390 = arith.trunci %379 : i256 to i64
    %c0_i64_146 = arith.constant 0 : i64
    %391 = arith.cmpi slt, %390, %c0_i64_146 : i64
    %c84_i8_147 = arith.constant 84 : i8
    cf.cond_br %391, ^bb1(%c84_i8_147 : i8), ^bb101
  ^bb101:  // pred: ^bb100
    %392 = arith.trunci %383 : i256 to i64
    %c0_i64_148 = arith.constant 0 : i64
    %393 = arith.cmpi slt, %392, %c0_i64_148 : i64
    %c84_i8_149 = arith.constant 84 : i8
    cf.cond_br %393, ^bb1(%c84_i8_149 : i8), ^bb102
  ^bb102:  // pred: ^bb101
    %394 = arith.addi %386, %388 : i64
    %c0_i64_150 = arith.constant 0 : i64
    %395 = arith.cmpi slt, %394, %c0_i64_150 : i64
    %c84_i8_151 = arith.constant 84 : i8
    cf.cond_br %395, ^bb1(%c84_i8_151 : i8), ^bb103
  ^bb103:  // pred: ^bb102
    %c31_i64_152 = arith.constant 31 : i64
    %c32_i64_153 = arith.constant 32 : i64
    %396 = arith.addi %394, %c31_i64_152 : i64
    %397 = arith.divui %396, %c32_i64_153 : i64
    %c32_i64_154 = arith.constant 32 : i64
    %398 = arith.muli %397, %c32_i64_154 : i64
    %399 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %400 = llvm.load %399 : !llvm.ptr -> i64
    %c31_i64_155 = arith.constant 31 : i64
    %c32_i64_156 = arith.constant 32 : i64
    %401 = arith.addi %400, %c31_i64_155 : i64
    %402 = arith.divui %401, %c32_i64_156 : i64
    %403 = arith.muli %402, %c32_i64_154 : i64
    %404 = arith.cmpi ult, %403, %398 : i64
    %405 = scf.if %404 -> (i64) {
      %c3_i64_335 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %814 = arith.muli %402, %402 : i64
      %815 = arith.divui %814, %c512_i64 : i64
      %816 = arith.muli %402, %c3_i64_335 : i64
      %817 = arith.addi %815, %816 : i64
      %c3_i64_336 = arith.constant 3 : i64
      %c512_i64_337 = arith.constant 512 : i64
      %818 = arith.muli %397, %397 : i64
      %819 = arith.divui %818, %c512_i64_337 : i64
      %820 = arith.muli %397, %c3_i64_336 : i64
      %821 = arith.addi %819, %820 : i64
      %822 = arith.subi %821, %817 : i64
      scf.yield %822 : i64
    } else {
      %c0_i64_335 = arith.constant 0 : i64
      scf.yield %c0_i64_335 : i64
    }
    %406 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %407 = llvm.load %406 : !llvm.ptr -> i64
    %408 = arith.cmpi ult, %407, %405 : i64
    scf.if %408 {
    } else {
      %814 = arith.subi %407, %405 : i64
      llvm.store %814, %406 : i64, !llvm.ptr
    }
    %c80_i8_157 = arith.constant 80 : i8
    cf.cond_br %408, ^bb1(%c80_i8_157 : i8), ^bb104
  ^bb104:  // pred: ^bb103
    %409 = call @dora_fn_extend_memory(%arg0, %398) : (!llvm.ptr, i64) -> !llvm.ptr
    %410 = llvm.getelementptr %409[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %411 = llvm.load %410 : !llvm.ptr -> !llvm.ptr
    %412 = llvm.getelementptr %409[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %413 = llvm.load %412 : !llvm.ptr -> i8
    %c0_i8_158 = arith.constant 0 : i8
    %414 = arith.cmpi ne, %413, %c0_i8_158 : i8
    cf.cond_br %414, ^bb1(%413 : i8), ^bb105
  ^bb105:  // pred: ^bb104
    %415 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %411, %415 : !llvm.ptr, !llvm.ptr
    %416 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %398, %416 : i64, !llvm.ptr
    %417 = arith.addi %390, %392 : i64
    %c0_i64_159 = arith.constant 0 : i64
    %418 = arith.cmpi slt, %417, %c0_i64_159 : i64
    %c84_i8_160 = arith.constant 84 : i8
    cf.cond_br %418, ^bb1(%c84_i8_160 : i8), ^bb106
  ^bb106:  // pred: ^bb105
    %c31_i64_161 = arith.constant 31 : i64
    %c32_i64_162 = arith.constant 32 : i64
    %419 = arith.addi %417, %c31_i64_161 : i64
    %420 = arith.divui %419, %c32_i64_162 : i64
    %c32_i64_163 = arith.constant 32 : i64
    %421 = arith.muli %420, %c32_i64_163 : i64
    %422 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %423 = llvm.load %422 : !llvm.ptr -> i64
    %c31_i64_164 = arith.constant 31 : i64
    %c32_i64_165 = arith.constant 32 : i64
    %424 = arith.addi %423, %c31_i64_164 : i64
    %425 = arith.divui %424, %c32_i64_165 : i64
    %426 = arith.muli %425, %c32_i64_163 : i64
    %427 = arith.cmpi ult, %426, %421 : i64
    %428 = scf.if %427 -> (i64) {
      %c3_i64_335 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %814 = arith.muli %425, %425 : i64
      %815 = arith.divui %814, %c512_i64 : i64
      %816 = arith.muli %425, %c3_i64_335 : i64
      %817 = arith.addi %815, %816 : i64
      %c3_i64_336 = arith.constant 3 : i64
      %c512_i64_337 = arith.constant 512 : i64
      %818 = arith.muli %420, %420 : i64
      %819 = arith.divui %818, %c512_i64_337 : i64
      %820 = arith.muli %420, %c3_i64_336 : i64
      %821 = arith.addi %819, %820 : i64
      %822 = arith.subi %821, %817 : i64
      scf.yield %822 : i64
    } else {
      %c0_i64_335 = arith.constant 0 : i64
      scf.yield %c0_i64_335 : i64
    }
    %429 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %430 = llvm.load %429 : !llvm.ptr -> i64
    %431 = arith.cmpi ult, %430, %428 : i64
    scf.if %431 {
    } else {
      %814 = arith.subi %430, %428 : i64
      llvm.store %814, %429 : i64, !llvm.ptr
    }
    %c80_i8_166 = arith.constant 80 : i8
    cf.cond_br %431, ^bb1(%c80_i8_166 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %432 = call @dora_fn_extend_memory(%arg0, %421) : (!llvm.ptr, i64) -> !llvm.ptr
    %433 = llvm.getelementptr %432[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %434 = llvm.load %433 : !llvm.ptr -> !llvm.ptr
    %435 = llvm.getelementptr %432[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %436 = llvm.load %435 : !llvm.ptr -> i8
    %c0_i8_167 = arith.constant 0 : i8
    %437 = arith.cmpi ne, %436, %c0_i8_167 : i8
    cf.cond_br %437, ^bb1(%436 : i8), ^bb108
  ^bb108:  // pred: ^bb107
    %438 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %434, %438 : !llvm.ptr, !llvm.ptr
    %439 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %421, %439 : i64, !llvm.ptr
    %440 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %441 = llvm.load %440 : !llvm.ptr -> i64
    %c1_i256_168 = arith.constant 1 : i256
    %442 = llvm.alloca %c1_i256_168 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_139, %442 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_169 = arith.constant 1 : i256
    %443 = llvm.alloca %c1_i256_169 x i256 : (i256) -> !llvm.ptr
    llvm.store %367, %443 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_170 = arith.constant 1 : i64
    %444 = llvm.alloca %c1_i64_170 x i64 : (i64) -> !llvm.ptr
    %c0_i8_171 = arith.constant 0 : i8
    %445 = call @dora_fn_call(%arg0, %384, %443, %442, %386, %388, %390, %392, %441, %444, %c0_i8_171) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %446 = llvm.getelementptr %445[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %447 = llvm.load %446 : !llvm.ptr -> i8
    %448 = llvm.getelementptr %445[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %449 = llvm.load %448 : !llvm.ptr -> i8
    %c0_i8_172 = arith.constant 0 : i8
    %450 = arith.cmpi ne, %449, %c0_i8_172 : i8
    cf.cond_br %450, ^bb1(%449 : i8), ^bb109
  ^bb109:  // pred: ^bb108
    %451 = llvm.load %444 : !llvm.ptr -> i64
    %452 = arith.extui %447 : i8 to i256
    %453 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %454 = llvm.load %453 : !llvm.ptr -> !llvm.ptr
    llvm.store %452, %454 : i256, !llvm.ptr
    %455 = llvm.getelementptr %454[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %455, %453 : !llvm.ptr, !llvm.ptr
    cf.br ^bb115
  ^bb110:  // pred: ^bb112
    %456 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_173 = arith.constant 1024 : i64
    %457 = llvm.load %456 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %458 = arith.addi %457, %c-5_i64 : i64
    llvm.store %458, %456 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %459 = arith.cmpi ult, %457, %c6_i64 : i64
    %c91_i8_174 = arith.constant 91 : i8
    cf.cond_br %459, ^bb1(%c91_i8_174 : i8), ^bb97
  ^bb111:  // pred: ^bb93
    %460 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %461 = llvm.load %460 : !llvm.ptr -> i64
    %c0_i64_175 = arith.constant 0 : i64
    %462 = arith.cmpi uge, %461, %c0_i64_175 : i64
    %c80_i8_176 = arith.constant 80 : i8
    cf.cond_br %462, ^bb112, ^bb1(%c80_i8_176 : i8)
  ^bb112:  // pred: ^bb111
    %463 = arith.subi %461, %c0_i64_175 : i64
    llvm.store %463, %460 : i64, !llvm.ptr
    cf.br ^bb110
  ^bb113:  // pred: ^bb114
    %464 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %465 = llvm.load %464 : !llvm.ptr -> !llvm.ptr
    %466 = llvm.getelementptr %465[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %467 = llvm.load %466 : !llvm.ptr -> i256
    llvm.store %466, %464 : !llvm.ptr, !llvm.ptr
    cf.br ^bb119
  ^bb114:  // pred: ^bb116
    %468 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_177 = arith.constant 1024 : i64
    %469 = llvm.load %468 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %470 = arith.addi %469, %c-1_i64 : i64
    llvm.store %470, %468 : i64, !llvm.ptr
    %c1_i64_178 = arith.constant 1 : i64
    %471 = arith.cmpi ult, %469, %c1_i64_178 : i64
    %c91_i8_179 = arith.constant 91 : i8
    cf.cond_br %471, ^bb1(%c91_i8_179 : i8), ^bb113
  ^bb115:  // pred: ^bb109
    %472 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %473 = llvm.load %472 : !llvm.ptr -> i64
    %c2_i64_180 = arith.constant 2 : i64
    %474 = arith.cmpi uge, %473, %c2_i64_180 : i64
    %c80_i8_181 = arith.constant 80 : i8
    cf.cond_br %474, ^bb116, ^bb1(%c80_i8_181 : i8)
  ^bb116:  // pred: ^bb115
    %475 = arith.subi %473, %c2_i64_180 : i64
    llvm.store %475, %472 : i64, !llvm.ptr
    cf.br ^bb114
  ^bb117:  // pred: ^bb118
    %476 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %477 = llvm.load %476 : !llvm.ptr -> !llvm.ptr
    %478 = llvm.getelementptr %477[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %479 = llvm.load %478 : !llvm.ptr -> i256
    llvm.store %478, %476 : !llvm.ptr, !llvm.ptr
    cf.br ^bb123
  ^bb118:  // pred: ^bb120
    %480 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_182 = arith.constant 1024 : i64
    %481 = llvm.load %480 : !llvm.ptr -> i64
    %c-1_i64_183 = arith.constant -1 : i64
    %482 = arith.addi %481, %c-1_i64_183 : i64
    llvm.store %482, %480 : i64, !llvm.ptr
    %c1_i64_184 = arith.constant 1 : i64
    %483 = arith.cmpi ult, %481, %c1_i64_184 : i64
    %c91_i8_185 = arith.constant 91 : i8
    cf.cond_br %483, ^bb1(%c91_i8_185 : i8), ^bb117
  ^bb119:  // pred: ^bb113
    %484 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %485 = llvm.load %484 : !llvm.ptr -> i64
    %c2_i64_186 = arith.constant 2 : i64
    %486 = arith.cmpi uge, %485, %c2_i64_186 : i64
    %c80_i8_187 = arith.constant 80 : i8
    cf.cond_br %486, ^bb120, ^bb1(%c80_i8_187 : i8)
  ^bb120:  // pred: ^bb119
    %487 = arith.subi %485, %c2_i64_186 : i64
    llvm.store %487, %484 : i64, !llvm.ptr
    cf.br ^bb118
  ^bb121:  // pred: ^bb122
    %c0_i256_188 = arith.constant 0 : i256
    %488 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %489 = llvm.load %488 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_188, %489 : i256, !llvm.ptr
    %490 = llvm.getelementptr %489[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %490, %488 : !llvm.ptr, !llvm.ptr
    cf.br ^bb127
  ^bb122:  // pred: ^bb124
    %491 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_189 = arith.constant 1024 : i64
    %492 = llvm.load %491 : !llvm.ptr -> i64
    %c1_i64_190 = arith.constant 1 : i64
    %493 = arith.addi %492, %c1_i64_190 : i64
    llvm.store %493, %491 : i64, !llvm.ptr
    %494 = arith.cmpi ult, %c1024_i64_189, %493 : i64
    %c92_i8_191 = arith.constant 92 : i8
    cf.cond_br %494, ^bb1(%c92_i8_191 : i8), ^bb121
  ^bb123:  // pred: ^bb117
    %495 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %496 = llvm.load %495 : !llvm.ptr -> i64
    %c3_i64_192 = arith.constant 3 : i64
    %497 = arith.cmpi uge, %496, %c3_i64_192 : i64
    %c80_i8_193 = arith.constant 80 : i8
    cf.cond_br %497, ^bb124, ^bb1(%c80_i8_193 : i8)
  ^bb124:  // pred: ^bb123
    %498 = arith.subi %496, %c3_i64_192 : i64
    llvm.store %498, %495 : i64, !llvm.ptr
    cf.br ^bb122
  ^bb125:  // pred: ^bb126
    %c0_i256_194 = arith.constant 0 : i256
    %499 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %500 = llvm.load %499 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_194, %500 : i256, !llvm.ptr
    %501 = llvm.getelementptr %500[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %501, %499 : !llvm.ptr, !llvm.ptr
    cf.br ^bb135
  ^bb126:  // pred: ^bb128
    %502 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_195 = arith.constant 1024 : i64
    %503 = llvm.load %502 : !llvm.ptr -> i64
    %c1_i64_196 = arith.constant 1 : i64
    %504 = arith.addi %503, %c1_i64_196 : i64
    llvm.store %504, %502 : i64, !llvm.ptr
    %505 = arith.cmpi ult, %c1024_i64_195, %504 : i64
    %c92_i8_197 = arith.constant 92 : i8
    cf.cond_br %505, ^bb1(%c92_i8_197 : i8), ^bb125
  ^bb127:  // pred: ^bb121
    %506 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %507 = llvm.load %506 : !llvm.ptr -> i64
    %c3_i64_198 = arith.constant 3 : i64
    %508 = arith.cmpi uge, %507, %c3_i64_198 : i64
    %c80_i8_199 = arith.constant 80 : i8
    cf.cond_br %508, ^bb128, ^bb1(%c80_i8_199 : i8)
  ^bb128:  // pred: ^bb127
    %509 = arith.subi %507, %c3_i64_198 : i64
    llvm.store %509, %506 : i64, !llvm.ptr
    cf.br ^bb126
  ^bb129:  // pred: ^bb134
    %510 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %511 = llvm.load %510 : !llvm.ptr -> !llvm.ptr
    %512 = llvm.getelementptr %511[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %513 = llvm.load %512 : !llvm.ptr -> i256
    llvm.store %512, %510 : !llvm.ptr, !llvm.ptr
    %514 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %515 = llvm.load %514 : !llvm.ptr -> !llvm.ptr
    %516 = llvm.getelementptr %515[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %517 = llvm.load %516 : !llvm.ptr -> i256
    llvm.store %516, %514 : !llvm.ptr, !llvm.ptr
    %518 = arith.trunci %513 : i256 to i64
    %c0_i64_200 = arith.constant 0 : i64
    %519 = arith.cmpi slt, %518, %c0_i64_200 : i64
    %c84_i8_201 = arith.constant 84 : i8
    cf.cond_br %519, ^bb1(%c84_i8_201 : i8), ^bb130
  ^bb130:  // pred: ^bb129
    %c32_i64_202 = arith.constant 32 : i64
    %520 = arith.addi %518, %c32_i64_202 : i64
    %c0_i64_203 = arith.constant 0 : i64
    %521 = arith.cmpi slt, %520, %c0_i64_203 : i64
    %c84_i8_204 = arith.constant 84 : i8
    cf.cond_br %521, ^bb1(%c84_i8_204 : i8), ^bb131
  ^bb131:  // pred: ^bb130
    %c31_i64_205 = arith.constant 31 : i64
    %c32_i64_206 = arith.constant 32 : i64
    %522 = arith.addi %520, %c31_i64_205 : i64
    %523 = arith.divui %522, %c32_i64_206 : i64
    %c32_i64_207 = arith.constant 32 : i64
    %524 = arith.muli %523, %c32_i64_207 : i64
    %525 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %526 = llvm.load %525 : !llvm.ptr -> i64
    %c31_i64_208 = arith.constant 31 : i64
    %c32_i64_209 = arith.constant 32 : i64
    %527 = arith.addi %526, %c31_i64_208 : i64
    %528 = arith.divui %527, %c32_i64_209 : i64
    %529 = arith.muli %528, %c32_i64_207 : i64
    %530 = arith.cmpi ult, %529, %524 : i64
    %531 = scf.if %530 -> (i64) {
      %c3_i64_335 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %814 = arith.muli %528, %528 : i64
      %815 = arith.divui %814, %c512_i64 : i64
      %816 = arith.muli %528, %c3_i64_335 : i64
      %817 = arith.addi %815, %816 : i64
      %c3_i64_336 = arith.constant 3 : i64
      %c512_i64_337 = arith.constant 512 : i64
      %818 = arith.muli %523, %523 : i64
      %819 = arith.divui %818, %c512_i64_337 : i64
      %820 = arith.muli %523, %c3_i64_336 : i64
      %821 = arith.addi %819, %820 : i64
      %822 = arith.subi %821, %817 : i64
      scf.yield %822 : i64
    } else {
      %c0_i64_335 = arith.constant 0 : i64
      scf.yield %c0_i64_335 : i64
    }
    %532 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %533 = llvm.load %532 : !llvm.ptr -> i64
    %534 = arith.cmpi ult, %533, %531 : i64
    scf.if %534 {
    } else {
      %814 = arith.subi %533, %531 : i64
      llvm.store %814, %532 : i64, !llvm.ptr
    }
    %c80_i8_210 = arith.constant 80 : i8
    cf.cond_br %534, ^bb1(%c80_i8_210 : i8), ^bb132
  ^bb132:  // pred: ^bb131
    %535 = call @dora_fn_extend_memory(%arg0, %524) : (!llvm.ptr, i64) -> !llvm.ptr
    %536 = llvm.getelementptr %535[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %537 = llvm.load %536 : !llvm.ptr -> !llvm.ptr
    %538 = llvm.getelementptr %535[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %539 = llvm.load %538 : !llvm.ptr -> i8
    %c0_i8_211 = arith.constant 0 : i8
    %540 = arith.cmpi ne, %539, %c0_i8_211 : i8
    cf.cond_br %540, ^bb1(%539 : i8), ^bb133
  ^bb133:  // pred: ^bb132
    %541 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %537, %541 : !llvm.ptr, !llvm.ptr
    %542 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %524, %542 : i64, !llvm.ptr
    %543 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %544 = llvm.load %543 : !llvm.ptr -> !llvm.ptr
    %545 = llvm.getelementptr %544[%518] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %546 = llvm.intr.bswap(%517)  : (i256) -> i256
    llvm.store %546, %545 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb139
  ^bb134:  // pred: ^bb136
    %547 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_212 = arith.constant 1024 : i64
    %548 = llvm.load %547 : !llvm.ptr -> i64
    %c-2_i64_213 = arith.constant -2 : i64
    %549 = arith.addi %548, %c-2_i64_213 : i64
    llvm.store %549, %547 : i64, !llvm.ptr
    %c2_i64_214 = arith.constant 2 : i64
    %550 = arith.cmpi ult, %548, %c2_i64_214 : i64
    %c91_i8_215 = arith.constant 91 : i8
    cf.cond_br %550, ^bb1(%c91_i8_215 : i8), ^bb129
  ^bb135:  // pred: ^bb125
    %551 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %552 = llvm.load %551 : !llvm.ptr -> i64
    %c3_i64_216 = arith.constant 3 : i64
    %553 = arith.cmpi uge, %552, %c3_i64_216 : i64
    %c80_i8_217 = arith.constant 80 : i8
    cf.cond_br %553, ^bb136, ^bb1(%c80_i8_217 : i8)
  ^bb136:  // pred: ^bb135
    %554 = arith.subi %552, %c3_i64_216 : i64
    llvm.store %554, %551 : i64, !llvm.ptr
    cf.br ^bb134
  ^bb137:  // pred: ^bb138
    %c0_i256_218 = arith.constant 0 : i256
    %555 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %556 = llvm.load %555 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_218, %556 : i256, !llvm.ptr
    %557 = llvm.getelementptr %556[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %557, %555 : !llvm.ptr, !llvm.ptr
    cf.br ^bb143
  ^bb138:  // pred: ^bb140
    %558 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_219 = arith.constant 1024 : i64
    %559 = llvm.load %558 : !llvm.ptr -> i64
    %c1_i64_220 = arith.constant 1 : i64
    %560 = arith.addi %559, %c1_i64_220 : i64
    llvm.store %560, %558 : i64, !llvm.ptr
    %561 = arith.cmpi ult, %c1024_i64_219, %560 : i64
    %c92_i8_221 = arith.constant 92 : i8
    cf.cond_br %561, ^bb1(%c92_i8_221 : i8), ^bb137
  ^bb139:  // pred: ^bb133
    %562 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %563 = llvm.load %562 : !llvm.ptr -> i64
    %c3_i64_222 = arith.constant 3 : i64
    %564 = arith.cmpi uge, %563, %c3_i64_222 : i64
    %c80_i8_223 = arith.constant 80 : i8
    cf.cond_br %564, ^bb140, ^bb1(%c80_i8_223 : i8)
  ^bb140:  // pred: ^bb139
    %565 = arith.subi %563, %c3_i64_222 : i64
    llvm.store %565, %562 : i64, !llvm.ptr
    cf.br ^bb138
  ^bb141:  // pred: ^bb142
    %c32_i256_224 = arith.constant 32 : i256
    %566 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %567 = llvm.load %566 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_224, %567 : i256, !llvm.ptr
    %568 = llvm.getelementptr %567[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %568, %566 : !llvm.ptr, !llvm.ptr
    cf.br ^bb151
  ^bb142:  // pred: ^bb144
    %569 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_225 = arith.constant 1024 : i64
    %570 = llvm.load %569 : !llvm.ptr -> i64
    %c1_i64_226 = arith.constant 1 : i64
    %571 = arith.addi %570, %c1_i64_226 : i64
    llvm.store %571, %569 : i64, !llvm.ptr
    %572 = arith.cmpi ult, %c1024_i64_225, %571 : i64
    %c92_i8_227 = arith.constant 92 : i8
    cf.cond_br %572, ^bb1(%c92_i8_227 : i8), ^bb141
  ^bb143:  // pred: ^bb137
    %573 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %574 = llvm.load %573 : !llvm.ptr -> i64
    %c3_i64_228 = arith.constant 3 : i64
    %575 = arith.cmpi uge, %574, %c3_i64_228 : i64
    %c80_i8_229 = arith.constant 80 : i8
    cf.cond_br %575, ^bb144, ^bb1(%c80_i8_229 : i8)
  ^bb144:  // pred: ^bb143
    %576 = arith.subi %574, %c3_i64_228 : i64
    llvm.store %576, %573 : i64, !llvm.ptr
    cf.br ^bb142
  ^bb145:  // pred: ^bb150
    %577 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %578 = llvm.load %577 : !llvm.ptr -> !llvm.ptr
    %579 = llvm.getelementptr %578[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %580 = llvm.load %579 : !llvm.ptr -> i256
    llvm.store %579, %577 : !llvm.ptr, !llvm.ptr
    %581 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %582 = llvm.load %581 : !llvm.ptr -> !llvm.ptr
    %583 = llvm.getelementptr %582[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %584 = llvm.load %583 : !llvm.ptr -> i256
    llvm.store %583, %581 : !llvm.ptr, !llvm.ptr
    %585 = arith.trunci %580 : i256 to i64
    %c0_i64_230 = arith.constant 0 : i64
    %586 = arith.cmpi slt, %585, %c0_i64_230 : i64
    %c84_i8_231 = arith.constant 84 : i8
    cf.cond_br %586, ^bb1(%c84_i8_231 : i8), ^bb146
  ^bb146:  // pred: ^bb145
    %c32_i64_232 = arith.constant 32 : i64
    %587 = arith.addi %585, %c32_i64_232 : i64
    %c0_i64_233 = arith.constant 0 : i64
    %588 = arith.cmpi slt, %587, %c0_i64_233 : i64
    %c84_i8_234 = arith.constant 84 : i8
    cf.cond_br %588, ^bb1(%c84_i8_234 : i8), ^bb147
  ^bb147:  // pred: ^bb146
    %c31_i64_235 = arith.constant 31 : i64
    %c32_i64_236 = arith.constant 32 : i64
    %589 = arith.addi %587, %c31_i64_235 : i64
    %590 = arith.divui %589, %c32_i64_236 : i64
    %c32_i64_237 = arith.constant 32 : i64
    %591 = arith.muli %590, %c32_i64_237 : i64
    %592 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %593 = llvm.load %592 : !llvm.ptr -> i64
    %c31_i64_238 = arith.constant 31 : i64
    %c32_i64_239 = arith.constant 32 : i64
    %594 = arith.addi %593, %c31_i64_238 : i64
    %595 = arith.divui %594, %c32_i64_239 : i64
    %596 = arith.muli %595, %c32_i64_237 : i64
    %597 = arith.cmpi ult, %596, %591 : i64
    %598 = scf.if %597 -> (i64) {
      %c3_i64_335 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %814 = arith.muli %595, %595 : i64
      %815 = arith.divui %814, %c512_i64 : i64
      %816 = arith.muli %595, %c3_i64_335 : i64
      %817 = arith.addi %815, %816 : i64
      %c3_i64_336 = arith.constant 3 : i64
      %c512_i64_337 = arith.constant 512 : i64
      %818 = arith.muli %590, %590 : i64
      %819 = arith.divui %818, %c512_i64_337 : i64
      %820 = arith.muli %590, %c3_i64_336 : i64
      %821 = arith.addi %819, %820 : i64
      %822 = arith.subi %821, %817 : i64
      scf.yield %822 : i64
    } else {
      %c0_i64_335 = arith.constant 0 : i64
      scf.yield %c0_i64_335 : i64
    }
    %599 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %600 = llvm.load %599 : !llvm.ptr -> i64
    %601 = arith.cmpi ult, %600, %598 : i64
    scf.if %601 {
    } else {
      %814 = arith.subi %600, %598 : i64
      llvm.store %814, %599 : i64, !llvm.ptr
    }
    %c80_i8_240 = arith.constant 80 : i8
    cf.cond_br %601, ^bb1(%c80_i8_240 : i8), ^bb148
  ^bb148:  // pred: ^bb147
    %602 = call @dora_fn_extend_memory(%arg0, %591) : (!llvm.ptr, i64) -> !llvm.ptr
    %603 = llvm.getelementptr %602[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %604 = llvm.load %603 : !llvm.ptr -> !llvm.ptr
    %605 = llvm.getelementptr %602[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %606 = llvm.load %605 : !llvm.ptr -> i8
    %c0_i8_241 = arith.constant 0 : i8
    %607 = arith.cmpi ne, %606, %c0_i8_241 : i8
    cf.cond_br %607, ^bb1(%606 : i8), ^bb149
  ^bb149:  // pred: ^bb148
    %608 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %604, %608 : !llvm.ptr, !llvm.ptr
    %609 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %591, %609 : i64, !llvm.ptr
    %610 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %611 = llvm.load %610 : !llvm.ptr -> !llvm.ptr
    %612 = llvm.getelementptr %611[%585] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %613 = llvm.intr.bswap(%584)  : (i256) -> i256
    llvm.store %613, %612 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb155
  ^bb150:  // pred: ^bb152
    %614 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_242 = arith.constant 1024 : i64
    %615 = llvm.load %614 : !llvm.ptr -> i64
    %c-2_i64_243 = arith.constant -2 : i64
    %616 = arith.addi %615, %c-2_i64_243 : i64
    llvm.store %616, %614 : i64, !llvm.ptr
    %c2_i64_244 = arith.constant 2 : i64
    %617 = arith.cmpi ult, %615, %c2_i64_244 : i64
    %c91_i8_245 = arith.constant 91 : i8
    cf.cond_br %617, ^bb1(%c91_i8_245 : i8), ^bb145
  ^bb151:  // pred: ^bb141
    %618 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %619 = llvm.load %618 : !llvm.ptr -> i64
    %c3_i64_246 = arith.constant 3 : i64
    %620 = arith.cmpi uge, %619, %c3_i64_246 : i64
    %c80_i8_247 = arith.constant 80 : i8
    cf.cond_br %620, ^bb152, ^bb1(%c80_i8_247 : i8)
  ^bb152:  // pred: ^bb151
    %621 = arith.subi %619, %c3_i64_246 : i64
    llvm.store %621, %618 : i64, !llvm.ptr
    cf.br ^bb150
  ^bb153:  // pred: ^bb154
    %c0_i256_248 = arith.constant 0 : i256
    %622 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %623 = llvm.load %622 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_248, %623 : i256, !llvm.ptr
    %624 = llvm.getelementptr %623[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %624, %622 : !llvm.ptr, !llvm.ptr
    cf.br ^bb159
  ^bb154:  // pred: ^bb156
    %625 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_249 = arith.constant 1024 : i64
    %626 = llvm.load %625 : !llvm.ptr -> i64
    %c1_i64_250 = arith.constant 1 : i64
    %627 = arith.addi %626, %c1_i64_250 : i64
    llvm.store %627, %625 : i64, !llvm.ptr
    %628 = arith.cmpi ult, %c1024_i64_249, %627 : i64
    %c92_i8_251 = arith.constant 92 : i8
    cf.cond_br %628, ^bb1(%c92_i8_251 : i8), ^bb153
  ^bb155:  // pred: ^bb149
    %629 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %630 = llvm.load %629 : !llvm.ptr -> i64
    %c3_i64_252 = arith.constant 3 : i64
    %631 = arith.cmpi uge, %630, %c3_i64_252 : i64
    %c80_i8_253 = arith.constant 80 : i8
    cf.cond_br %631, ^bb156, ^bb1(%c80_i8_253 : i8)
  ^bb156:  // pred: ^bb155
    %632 = arith.subi %630, %c3_i64_252 : i64
    llvm.store %632, %629 : i64, !llvm.ptr
    cf.br ^bb154
  ^bb157:  // pred: ^bb158
    %c64_i256_254 = arith.constant 64 : i256
    %633 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %634 = llvm.load %633 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256_254, %634 : i256, !llvm.ptr
    %635 = llvm.getelementptr %634[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %635, %633 : !llvm.ptr, !llvm.ptr
    cf.br ^bb167
  ^bb158:  // pred: ^bb160
    %636 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_255 = arith.constant 1024 : i64
    %637 = llvm.load %636 : !llvm.ptr -> i64
    %c1_i64_256 = arith.constant 1 : i64
    %638 = arith.addi %637, %c1_i64_256 : i64
    llvm.store %638, %636 : i64, !llvm.ptr
    %639 = arith.cmpi ult, %c1024_i64_255, %638 : i64
    %c92_i8_257 = arith.constant 92 : i8
    cf.cond_br %639, ^bb1(%c92_i8_257 : i8), ^bb157
  ^bb159:  // pred: ^bb153
    %640 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %641 = llvm.load %640 : !llvm.ptr -> i64
    %c3_i64_258 = arith.constant 3 : i64
    %642 = arith.cmpi uge, %641, %c3_i64_258 : i64
    %c80_i8_259 = arith.constant 80 : i8
    cf.cond_br %642, ^bb160, ^bb1(%c80_i8_259 : i8)
  ^bb160:  // pred: ^bb159
    %643 = arith.subi %641, %c3_i64_258 : i64
    llvm.store %643, %640 : i64, !llvm.ptr
    cf.br ^bb158
  ^bb161:  // pred: ^bb166
    %644 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %645 = llvm.load %644 : !llvm.ptr -> !llvm.ptr
    %646 = llvm.getelementptr %645[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %647 = llvm.load %646 : !llvm.ptr -> i256
    llvm.store %646, %644 : !llvm.ptr, !llvm.ptr
    %648 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %649 = llvm.load %648 : !llvm.ptr -> !llvm.ptr
    %650 = llvm.getelementptr %649[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %651 = llvm.load %650 : !llvm.ptr -> i256
    llvm.store %650, %648 : !llvm.ptr, !llvm.ptr
    %652 = arith.trunci %647 : i256 to i64
    %c0_i64_260 = arith.constant 0 : i64
    %653 = arith.cmpi slt, %652, %c0_i64_260 : i64
    %c84_i8_261 = arith.constant 84 : i8
    cf.cond_br %653, ^bb1(%c84_i8_261 : i8), ^bb162
  ^bb162:  // pred: ^bb161
    %c32_i64_262 = arith.constant 32 : i64
    %654 = arith.addi %652, %c32_i64_262 : i64
    %c0_i64_263 = arith.constant 0 : i64
    %655 = arith.cmpi slt, %654, %c0_i64_263 : i64
    %c84_i8_264 = arith.constant 84 : i8
    cf.cond_br %655, ^bb1(%c84_i8_264 : i8), ^bb163
  ^bb163:  // pred: ^bb162
    %c31_i64_265 = arith.constant 31 : i64
    %c32_i64_266 = arith.constant 32 : i64
    %656 = arith.addi %654, %c31_i64_265 : i64
    %657 = arith.divui %656, %c32_i64_266 : i64
    %c32_i64_267 = arith.constant 32 : i64
    %658 = arith.muli %657, %c32_i64_267 : i64
    %659 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %660 = llvm.load %659 : !llvm.ptr -> i64
    %c31_i64_268 = arith.constant 31 : i64
    %c32_i64_269 = arith.constant 32 : i64
    %661 = arith.addi %660, %c31_i64_268 : i64
    %662 = arith.divui %661, %c32_i64_269 : i64
    %663 = arith.muli %662, %c32_i64_267 : i64
    %664 = arith.cmpi ult, %663, %658 : i64
    %665 = scf.if %664 -> (i64) {
      %c3_i64_335 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %814 = arith.muli %662, %662 : i64
      %815 = arith.divui %814, %c512_i64 : i64
      %816 = arith.muli %662, %c3_i64_335 : i64
      %817 = arith.addi %815, %816 : i64
      %c3_i64_336 = arith.constant 3 : i64
      %c512_i64_337 = arith.constant 512 : i64
      %818 = arith.muli %657, %657 : i64
      %819 = arith.divui %818, %c512_i64_337 : i64
      %820 = arith.muli %657, %c3_i64_336 : i64
      %821 = arith.addi %819, %820 : i64
      %822 = arith.subi %821, %817 : i64
      scf.yield %822 : i64
    } else {
      %c0_i64_335 = arith.constant 0 : i64
      scf.yield %c0_i64_335 : i64
    }
    %666 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %667 = llvm.load %666 : !llvm.ptr -> i64
    %668 = arith.cmpi ult, %667, %665 : i64
    scf.if %668 {
    } else {
      %814 = arith.subi %667, %665 : i64
      llvm.store %814, %666 : i64, !llvm.ptr
    }
    %c80_i8_270 = arith.constant 80 : i8
    cf.cond_br %668, ^bb1(%c80_i8_270 : i8), ^bb164
  ^bb164:  // pred: ^bb163
    %669 = call @dora_fn_extend_memory(%arg0, %658) : (!llvm.ptr, i64) -> !llvm.ptr
    %670 = llvm.getelementptr %669[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %671 = llvm.load %670 : !llvm.ptr -> !llvm.ptr
    %672 = llvm.getelementptr %669[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %673 = llvm.load %672 : !llvm.ptr -> i8
    %c0_i8_271 = arith.constant 0 : i8
    %674 = arith.cmpi ne, %673, %c0_i8_271 : i8
    cf.cond_br %674, ^bb1(%673 : i8), ^bb165
  ^bb165:  // pred: ^bb164
    %675 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %671, %675 : !llvm.ptr, !llvm.ptr
    %676 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %658, %676 : i64, !llvm.ptr
    %677 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %678 = llvm.load %677 : !llvm.ptr -> !llvm.ptr
    %679 = llvm.getelementptr %678[%652] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %680 = llvm.intr.bswap(%651)  : (i256) -> i256
    llvm.store %680, %679 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb171
  ^bb166:  // pred: ^bb168
    %681 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_272 = arith.constant 1024 : i64
    %682 = llvm.load %681 : !llvm.ptr -> i64
    %c-2_i64_273 = arith.constant -2 : i64
    %683 = arith.addi %682, %c-2_i64_273 : i64
    llvm.store %683, %681 : i64, !llvm.ptr
    %c2_i64_274 = arith.constant 2 : i64
    %684 = arith.cmpi ult, %682, %c2_i64_274 : i64
    %c91_i8_275 = arith.constant 91 : i8
    cf.cond_br %684, ^bb1(%c91_i8_275 : i8), ^bb161
  ^bb167:  // pred: ^bb157
    %685 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %686 = llvm.load %685 : !llvm.ptr -> i64
    %c3_i64_276 = arith.constant 3 : i64
    %687 = arith.cmpi uge, %686, %c3_i64_276 : i64
    %c80_i8_277 = arith.constant 80 : i8
    cf.cond_br %687, ^bb168, ^bb1(%c80_i8_277 : i8)
  ^bb168:  // pred: ^bb167
    %688 = arith.subi %686, %c3_i64_276 : i64
    llvm.store %688, %685 : i64, !llvm.ptr
    cf.br ^bb166
  ^bb169:  // pred: ^bb170
    %c32_i256_278 = arith.constant 32 : i256
    %689 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %690 = llvm.load %689 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_278, %690 : i256, !llvm.ptr
    %691 = llvm.getelementptr %690[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %691, %689 : !llvm.ptr, !llvm.ptr
    cf.br ^bb175
  ^bb170:  // pred: ^bb172
    %692 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_279 = arith.constant 1024 : i64
    %693 = llvm.load %692 : !llvm.ptr -> i64
    %c1_i64_280 = arith.constant 1 : i64
    %694 = arith.addi %693, %c1_i64_280 : i64
    llvm.store %694, %692 : i64, !llvm.ptr
    %695 = arith.cmpi ult, %c1024_i64_279, %694 : i64
    %c92_i8_281 = arith.constant 92 : i8
    cf.cond_br %695, ^bb1(%c92_i8_281 : i8), ^bb169
  ^bb171:  // pred: ^bb165
    %696 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %697 = llvm.load %696 : !llvm.ptr -> i64
    %c3_i64_282 = arith.constant 3 : i64
    %698 = arith.cmpi uge, %697, %c3_i64_282 : i64
    %c80_i8_283 = arith.constant 80 : i8
    cf.cond_br %698, ^bb172, ^bb1(%c80_i8_283 : i8)
  ^bb172:  // pred: ^bb171
    %699 = arith.subi %697, %c3_i64_282 : i64
    llvm.store %699, %696 : i64, !llvm.ptr
    cf.br ^bb170
  ^bb173:  // pred: ^bb174
    %c0_i256_284 = arith.constant 0 : i256
    %700 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %701 = llvm.load %700 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_284, %701 : i256, !llvm.ptr
    %702 = llvm.getelementptr %701[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %702, %700 : !llvm.ptr, !llvm.ptr
    cf.br ^bb179
  ^bb174:  // pred: ^bb176
    %703 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_285 = arith.constant 1024 : i64
    %704 = llvm.load %703 : !llvm.ptr -> i64
    %c1_i64_286 = arith.constant 1 : i64
    %705 = arith.addi %704, %c1_i64_286 : i64
    llvm.store %705, %703 : i64, !llvm.ptr
    %706 = arith.cmpi ult, %c1024_i64_285, %705 : i64
    %c92_i8_287 = arith.constant 92 : i8
    cf.cond_br %706, ^bb1(%c92_i8_287 : i8), ^bb173
  ^bb175:  // pred: ^bb169
    %707 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %708 = llvm.load %707 : !llvm.ptr -> i64
    %c3_i64_288 = arith.constant 3 : i64
    %709 = arith.cmpi uge, %708, %c3_i64_288 : i64
    %c80_i8_289 = arith.constant 80 : i8
    cf.cond_br %709, ^bb176, ^bb1(%c80_i8_289 : i8)
  ^bb176:  // pred: ^bb175
    %710 = arith.subi %708, %c3_i64_288 : i64
    llvm.store %710, %707 : i64, !llvm.ptr
    cf.br ^bb174
  ^bb177:  // pred: ^bb178
    %c0_i256_290 = arith.constant 0 : i256
    %711 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %712 = llvm.load %711 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_290, %712 : i256, !llvm.ptr
    %713 = llvm.getelementptr %712[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %713, %711 : !llvm.ptr, !llvm.ptr
    cf.br ^bb191
  ^bb178:  // pred: ^bb180
    %714 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_291 = arith.constant 1024 : i64
    %715 = llvm.load %714 : !llvm.ptr -> i64
    %c1_i64_292 = arith.constant 1 : i64
    %716 = arith.addi %715, %c1_i64_292 : i64
    llvm.store %716, %714 : i64, !llvm.ptr
    %717 = arith.cmpi ult, %c1024_i64_291, %716 : i64
    %c92_i8_293 = arith.constant 92 : i8
    cf.cond_br %717, ^bb1(%c92_i8_293 : i8), ^bb177
  ^bb179:  // pred: ^bb173
    %718 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %719 = llvm.load %718 : !llvm.ptr -> i64
    %c3_i64_294 = arith.constant 3 : i64
    %720 = arith.cmpi uge, %719, %c3_i64_294 : i64
    %c80_i8_295 = arith.constant 80 : i8
    cf.cond_br %720, ^bb180, ^bb1(%c80_i8_295 : i8)
  ^bb180:  // pred: ^bb179
    %721 = arith.subi %719, %c3_i64_294 : i64
    llvm.store %721, %718 : i64, !llvm.ptr
    cf.br ^bb178
  ^bb181:  // pred: ^bb190
    %722 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %723 = llvm.load %722 : !llvm.ptr -> !llvm.ptr
    %724 = llvm.getelementptr %723[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %725 = llvm.load %724 : !llvm.ptr -> i256
    llvm.store %724, %722 : !llvm.ptr, !llvm.ptr
    %726 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %727 = llvm.load %726 : !llvm.ptr -> !llvm.ptr
    %728 = llvm.getelementptr %727[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %729 = llvm.load %728 : !llvm.ptr -> i256
    llvm.store %728, %726 : !llvm.ptr, !llvm.ptr
    %730 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %731 = llvm.load %730 : !llvm.ptr -> !llvm.ptr
    %732 = llvm.getelementptr %731[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %733 = llvm.load %732 : !llvm.ptr -> i256
    llvm.store %732, %730 : !llvm.ptr, !llvm.ptr
    %734 = arith.trunci %733 : i256 to i64
    %c0_i64_296 = arith.constant 0 : i64
    %735 = arith.cmpi slt, %734, %c0_i64_296 : i64
    %c84_i8_297 = arith.constant 84 : i8
    cf.cond_br %735, ^bb1(%c84_i8_297 : i8), ^bb182
  ^bb182:  // pred: ^bb181
    %c31_i64_298 = arith.constant 31 : i64
    %c32_i64_299 = arith.constant 32 : i64
    %736 = arith.addi %734, %c31_i64_298 : i64
    %737 = arith.divui %736, %c32_i64_299 : i64
    %c3_i64_300 = arith.constant 3 : i64
    %738 = arith.muli %737, %c3_i64_300 : i64
    %739 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %740 = llvm.load %739 : !llvm.ptr -> i64
    %741 = arith.cmpi ult, %740, %738 : i64
    scf.if %741 {
    } else {
      %814 = arith.subi %740, %738 : i64
      llvm.store %814, %739 : i64, !llvm.ptr
    }
    %c80_i8_301 = arith.constant 80 : i8
    cf.cond_br %741, ^bb1(%c80_i8_301 : i8), ^bb183
  ^bb183:  // pred: ^bb182
    %742 = arith.trunci %725 : i256 to i64
    %c0_i64_302 = arith.constant 0 : i64
    %743 = arith.cmpi slt, %742, %c0_i64_302 : i64
    %c84_i8_303 = arith.constant 84 : i8
    cf.cond_br %743, ^bb1(%c84_i8_303 : i8), ^bb184
  ^bb184:  // pred: ^bb183
    %744 = arith.trunci %729 : i256 to i64
    %c0_i64_304 = arith.constant 0 : i64
    %745 = arith.cmpi slt, %744, %c0_i64_304 : i64
    %c84_i8_305 = arith.constant 84 : i8
    cf.cond_br %745, ^bb1(%c84_i8_305 : i8), ^bb185
  ^bb185:  // pred: ^bb184
    %746 = arith.addi %742, %734 : i64
    %c0_i64_306 = arith.constant 0 : i64
    %747 = arith.cmpi slt, %746, %c0_i64_306 : i64
    %c84_i8_307 = arith.constant 84 : i8
    cf.cond_br %747, ^bb1(%c84_i8_307 : i8), ^bb186
  ^bb186:  // pred: ^bb185
    %c31_i64_308 = arith.constant 31 : i64
    %c32_i64_309 = arith.constant 32 : i64
    %748 = arith.addi %746, %c31_i64_308 : i64
    %749 = arith.divui %748, %c32_i64_309 : i64
    %c32_i64_310 = arith.constant 32 : i64
    %750 = arith.muli %749, %c32_i64_310 : i64
    %751 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %752 = llvm.load %751 : !llvm.ptr -> i64
    %c31_i64_311 = arith.constant 31 : i64
    %c32_i64_312 = arith.constant 32 : i64
    %753 = arith.addi %752, %c31_i64_311 : i64
    %754 = arith.divui %753, %c32_i64_312 : i64
    %755 = arith.muli %754, %c32_i64_310 : i64
    %756 = arith.cmpi ult, %755, %750 : i64
    %757 = scf.if %756 -> (i64) {
      %c3_i64_335 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %814 = arith.muli %754, %754 : i64
      %815 = arith.divui %814, %c512_i64 : i64
      %816 = arith.muli %754, %c3_i64_335 : i64
      %817 = arith.addi %815, %816 : i64
      %c3_i64_336 = arith.constant 3 : i64
      %c512_i64_337 = arith.constant 512 : i64
      %818 = arith.muli %749, %749 : i64
      %819 = arith.divui %818, %c512_i64_337 : i64
      %820 = arith.muli %749, %c3_i64_336 : i64
      %821 = arith.addi %819, %820 : i64
      %822 = arith.subi %821, %817 : i64
      scf.yield %822 : i64
    } else {
      %c0_i64_335 = arith.constant 0 : i64
      scf.yield %c0_i64_335 : i64
    }
    %758 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %759 = llvm.load %758 : !llvm.ptr -> i64
    %760 = arith.cmpi ult, %759, %757 : i64
    scf.if %760 {
    } else {
      %814 = arith.subi %759, %757 : i64
      llvm.store %814, %758 : i64, !llvm.ptr
    }
    %c80_i8_313 = arith.constant 80 : i8
    cf.cond_br %760, ^bb1(%c80_i8_313 : i8), ^bb187
  ^bb187:  // pred: ^bb186
    %761 = call @dora_fn_extend_memory(%arg0, %750) : (!llvm.ptr, i64) -> !llvm.ptr
    %762 = llvm.getelementptr %761[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %763 = llvm.load %762 : !llvm.ptr -> !llvm.ptr
    %764 = llvm.getelementptr %761[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %765 = llvm.load %764 : !llvm.ptr -> i8
    %c0_i8_314 = arith.constant 0 : i8
    %766 = arith.cmpi ne, %765, %c0_i8_314 : i8
    cf.cond_br %766, ^bb1(%765 : i8), ^bb188
  ^bb188:  // pred: ^bb187
    %767 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %763, %767 : !llvm.ptr, !llvm.ptr
    %768 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %750, %768 : i64, !llvm.ptr
    %769 = call @dora_fn_return_data_copy(%arg0, %742, %744, %734) : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr
    %770 = llvm.getelementptr %769[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %771 = llvm.load %770 : !llvm.ptr -> i8
    %c0_i8_315 = arith.constant 0 : i8
    %772 = arith.cmpi ne, %771, %c0_i8_315 : i8
    cf.cond_br %772, ^bb1(%771 : i8), ^bb189
  ^bb189:  // pred: ^bb188
    cf.br ^bb193
  ^bb190:  // pred: ^bb192
    %773 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_316 = arith.constant 1024 : i64
    %774 = llvm.load %773 : !llvm.ptr -> i64
    %c-3_i64 = arith.constant -3 : i64
    %775 = arith.addi %774, %c-3_i64 : i64
    llvm.store %775, %773 : i64, !llvm.ptr
    %c3_i64_317 = arith.constant 3 : i64
    %776 = arith.cmpi ult, %774, %c3_i64_317 : i64
    %c91_i8_318 = arith.constant 91 : i8
    cf.cond_br %776, ^bb1(%c91_i8_318 : i8), ^bb181
  ^bb191:  // pred: ^bb177
    %777 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %778 = llvm.load %777 : !llvm.ptr -> i64
    %c3_i64_319 = arith.constant 3 : i64
    %779 = arith.cmpi uge, %778, %c3_i64_319 : i64
    %c80_i8_320 = arith.constant 80 : i8
    cf.cond_br %779, ^bb192, ^bb1(%c80_i8_320 : i8)
  ^bb192:  // pred: ^bb191
    %780 = arith.subi %778, %c3_i64_319 : i64
    llvm.store %780, %777 : i64, !llvm.ptr
    cf.br ^bb190
  ^bb193:  // pred: ^bb189
    %c0_i64_321 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %781 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %782 = llvm.load %781 : !llvm.ptr -> i64
    %783 = call @dora_fn_write_result(%arg0, %c0_i64_321, %c0_i64_321, %782, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb194:  // pred: ^bb66
    %c49152_i64 = arith.constant 49152 : i64
    %784 = arith.cmpi ugt, %264, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %784, ^bb1(%c100_i8 : i8), ^bb195
  ^bb195:  // pred: ^bb194
    %c31_i64_322 = arith.constant 31 : i64
    %c32_i64_323 = arith.constant 32 : i64
    %785 = arith.addi %264, %c31_i64_322 : i64
    %786 = arith.divui %785, %c32_i64_323 : i64
    %c2_i64_324 = arith.constant 2 : i64
    %787 = arith.muli %786, %c2_i64_324 : i64
    %788 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %789 = llvm.load %788 : !llvm.ptr -> i64
    %790 = arith.cmpi ult, %789, %787 : i64
    scf.if %790 {
    } else {
      %814 = arith.subi %789, %787 : i64
      llvm.store %814, %788 : i64, !llvm.ptr
    }
    %c80_i8_325 = arith.constant 80 : i8
    cf.cond_br %790, ^bb1(%c80_i8_325 : i8), ^bb196
  ^bb196:  // pred: ^bb195
    %791 = arith.addi %262, %264 : i64
    %c0_i64_326 = arith.constant 0 : i64
    %792 = arith.cmpi slt, %791, %c0_i64_326 : i64
    %c84_i8_327 = arith.constant 84 : i8
    cf.cond_br %792, ^bb1(%c84_i8_327 : i8), ^bb197
  ^bb197:  // pred: ^bb196
    %c31_i64_328 = arith.constant 31 : i64
    %c32_i64_329 = arith.constant 32 : i64
    %793 = arith.addi %791, %c31_i64_328 : i64
    %794 = arith.divui %793, %c32_i64_329 : i64
    %c32_i64_330 = arith.constant 32 : i64
    %795 = arith.muli %794, %c32_i64_330 : i64
    %796 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %797 = llvm.load %796 : !llvm.ptr -> i64
    %c31_i64_331 = arith.constant 31 : i64
    %c32_i64_332 = arith.constant 32 : i64
    %798 = arith.addi %797, %c31_i64_331 : i64
    %799 = arith.divui %798, %c32_i64_332 : i64
    %800 = arith.muli %799, %c32_i64_330 : i64
    %801 = arith.cmpi ult, %800, %795 : i64
    %802 = scf.if %801 -> (i64) {
      %c3_i64_335 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %814 = arith.muli %799, %799 : i64
      %815 = arith.divui %814, %c512_i64 : i64
      %816 = arith.muli %799, %c3_i64_335 : i64
      %817 = arith.addi %815, %816 : i64
      %c3_i64_336 = arith.constant 3 : i64
      %c512_i64_337 = arith.constant 512 : i64
      %818 = arith.muli %794, %794 : i64
      %819 = arith.divui %818, %c512_i64_337 : i64
      %820 = arith.muli %794, %c3_i64_336 : i64
      %821 = arith.addi %819, %820 : i64
      %822 = arith.subi %821, %817 : i64
      scf.yield %822 : i64
    } else {
      %c0_i64_335 = arith.constant 0 : i64
      scf.yield %c0_i64_335 : i64
    }
    %803 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %804 = llvm.load %803 : !llvm.ptr -> i64
    %805 = arith.cmpi ult, %804, %802 : i64
    scf.if %805 {
    } else {
      %814 = arith.subi %804, %802 : i64
      llvm.store %814, %803 : i64, !llvm.ptr
    }
    %c80_i8_333 = arith.constant 80 : i8
    cf.cond_br %805, ^bb1(%c80_i8_333 : i8), ^bb198
  ^bb198:  // pred: ^bb197
    %806 = call @dora_fn_extend_memory(%arg0, %795) : (!llvm.ptr, i64) -> !llvm.ptr
    %807 = llvm.getelementptr %806[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %808 = llvm.load %807 : !llvm.ptr -> !llvm.ptr
    %809 = llvm.getelementptr %806[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %810 = llvm.load %809 : !llvm.ptr -> i8
    %c0_i8_334 = arith.constant 0 : i8
    %811 = arith.cmpi ne, %810, %c0_i8_334 : i8
    cf.cond_br %811, ^bb1(%810 : i8), ^bb199
  ^bb199:  // pred: ^bb198
    %812 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %808, %812 : !llvm.ptr, !llvm.ptr
    %813 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %795, %813 : i64, !llvm.ptr
    cf.br ^bb67
  }
}
