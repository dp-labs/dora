---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_memory_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_memory_size(!llvm.ptr) -> i64
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: !llvm.ptr, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    cf.br ^bb5
  ^bb1(%0: i8):  // 139 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb39, ^bb40, ^bb43, ^bb44, ^bb47, ^bb48, ^bb51, ^bb52, ^bb54, ^bb55, ^bb56, ^bb58, ^bb59, ^bb60, ^bb62, ^bb63, ^bb66, ^bb67, ^bb70, ^bb71, ^bb74, ^bb75, ^bb78, ^bb79, ^bb82, ^bb83, ^bb86, ^bb87, ^bb89, ^bb90, ^bb92, ^bb93, ^bb95, ^bb96, ^bb98, ^bb99, ^bb102, ^bb103, ^bb106, ^bb107, ^bb110, ^bb111, ^bb114, ^bb115, ^bb119, ^bb120, ^bb123, ^bb124, ^bb127, ^bb128, ^bb132, ^bb133, ^bb136, ^bb137, ^bb140, ^bb141, ^bb145, ^bb146, ^bb149, ^bb150, ^bb153, ^bb154, ^bb157, ^bb158, ^bb160, ^bb161, ^bb162, ^bb164, ^bb166, ^bb167, ^bb170, ^bb171, ^bb172, ^bb175, ^bb176, ^bb178, ^bb179, ^bb180, ^bb183, ^bb184, ^bb186, ^bb187, ^bb188, ^bb191, ^bb192, ^bb194, ^bb195, ^bb196, ^bb197, ^bb198, ^bb201, ^bb202, ^bb204, ^bb205, ^bb206, ^bb209, ^bb210, ^bb212, ^bb213, ^bb214, ^bb217, ^bb218, ^bb220, ^bb221, ^bb222, ^bb225, ^bb226, ^bb228, ^bb229, ^bb230, ^bb233, ^bb234, ^bb236, ^bb237, ^bb238, ^bb241, ^bb242, ^bb244, ^bb245, ^bb246, ^bb249, ^bb250
    %c0_i64 = arith.constant 0 : i64
    %1 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64, %c0_i64, %1, %0) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %0 : i8
  ^bb2(%2: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %2 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %3 = llvm.load %arg3 : !llvm.ptr -> i64
    %4 = llvm.getelementptr %arg2[%3] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %5 = arith.addi %3, %c1_i64 : i64
    llvm.store %5, %arg3 : i64, !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %4 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %6 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_0 = arith.constant 1 : i64
    %7 = arith.addi %6, %c1_i64_0 : i64
    %8 = arith.cmpi ult, %c1024_i64, %7 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %8, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %9 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %10 = arith.cmpi uge, %9, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %10, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %11 = arith.subi %9, %c3_i64 : i64
    llvm.store %11, %arg1 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %12 = llvm.load %arg3 : !llvm.ptr -> i64
    %13 = llvm.getelementptr %arg2[%12] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_1 = arith.constant 1 : i64
    %14 = arith.addi %12, %c1_i64_1 : i64
    llvm.store %14, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %13 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_2 = arith.constant 1024 : i64
    %15 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %16 = arith.addi %15, %c1_i64_3 : i64
    %17 = arith.cmpi ult, %c1024_i64_2, %16 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %17, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %18 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %19 = arith.cmpi uge, %18, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %19, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %20 = arith.subi %18, %c3_i64_5 : i64
    llvm.store %20, %arg1 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %21 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_7 = arith.constant 1 : i64
    %22 = arith.subi %21, %c1_i64_7 : i64
    %23 = llvm.getelementptr %arg2[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %22, %arg3 : i64, !llvm.ptr
    %24 = llvm.load %23 : !llvm.ptr -> i256
    %25 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %26 = arith.subi %25, %c1_i64_8 : i64
    %27 = llvm.getelementptr %arg2[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %26, %arg3 : i64, !llvm.ptr
    %28 = llvm.load %27 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_9 = arith.constant 0 : i64
    %29 = arith.cmpi ne, %c32_i64, %c0_i64_9 : i64
    cf.cond_br %29, ^bb170, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb174
    %30 = arith.trunci %24 : i256 to i64
    %31 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %32 = llvm.getelementptr %31[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.intr.bswap(%28)  : (i256) -> i256
    llvm.store %33, %32 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_10 = arith.constant 1024 : i64
    %34 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %35 = arith.addi %34, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %36 = arith.cmpi ult, %34, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %36, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %37 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_11 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %38 = arith.cmpi uge, %37, %c3_i64_11 : i64
    %c80_i8_12 = arith.constant 80 : i8
    cf.cond_br %38, ^bb15, ^bb1(%c80_i8_12 : i8)
  ^bb15:  // pred: ^bb14
    %39 = arith.subi %37, %c3_i64_11 : i64
    llvm.store %39, %arg1 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %40 = llvm.load %arg3 : !llvm.ptr -> i64
    %41 = llvm.getelementptr %arg2[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_13 = arith.constant 1 : i64
    %42 = arith.addi %40, %c1_i64_13 : i64
    llvm.store %42, %arg3 : i64, !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %41 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_14 = arith.constant 1024 : i64
    %43 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_15 = arith.constant 1 : i64
    %44 = arith.addi %43, %c1_i64_15 : i64
    %45 = arith.cmpi ult, %c1024_i64_14, %44 : i64
    %c92_i8_16 = arith.constant 92 : i8
    cf.cond_br %45, ^bb1(%c92_i8_16 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %46 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_17 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %47 = arith.cmpi uge, %46, %c3_i64_17 : i64
    %c80_i8_18 = arith.constant 80 : i8
    cf.cond_br %47, ^bb19, ^bb1(%c80_i8_18 : i8)
  ^bb19:  // pred: ^bb18
    %48 = arith.subi %46, %c3_i64_17 : i64
    llvm.store %48, %arg1 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c32_i256 = arith.constant 32 : i256
    %49 = llvm.load %arg3 : !llvm.ptr -> i64
    %50 = llvm.getelementptr %arg2[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_19 = arith.constant 1 : i64
    %51 = arith.addi %49, %c1_i64_19 : i64
    llvm.store %51, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256, %50 : i256, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %c1024_i64_20 = arith.constant 1024 : i64
    %52 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_21 = arith.constant 1 : i64
    %53 = arith.addi %52, %c1_i64_21 : i64
    %54 = arith.cmpi ult, %c1024_i64_20, %53 : i64
    %c92_i8_22 = arith.constant 92 : i8
    cf.cond_br %54, ^bb1(%c92_i8_22 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %55 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_23 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %56 = arith.cmpi uge, %55, %c3_i64_23 : i64
    %c80_i8_24 = arith.constant 80 : i8
    cf.cond_br %56, ^bb23, ^bb1(%c80_i8_24 : i8)
  ^bb23:  // pred: ^bb22
    %57 = arith.subi %55, %c3_i64_23 : i64
    llvm.store %57, %arg1 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %58 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %59 = arith.subi %58, %c1_i64_25 : i64
    %60 = llvm.getelementptr %arg2[%59] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %59, %arg3 : i64, !llvm.ptr
    %61 = llvm.load %60 : !llvm.ptr -> i256
    %62 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_26 = arith.constant 1 : i64
    %63 = arith.subi %62, %c1_i64_26 : i64
    %64 = llvm.getelementptr %arg2[%63] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %63, %arg3 : i64, !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i256
    %c32_i64_27 = arith.constant 32 : i64
    %c0_i64_28 = arith.constant 0 : i64
    %66 = arith.cmpi ne, %c32_i64_27, %c0_i64_28 : i64
    cf.cond_br %66, ^bb178, ^bb25
  ^bb25:  // 2 preds: ^bb24, ^bb182
    %67 = arith.trunci %61 : i256 to i64
    %68 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %69 = llvm.getelementptr %68[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %70 = llvm.intr.bswap(%65)  : (i256) -> i256
    llvm.store %70, %69 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %c1024_i64_29 = arith.constant 1024 : i64
    %71 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_30 = arith.constant -2 : i64
    %72 = arith.addi %71, %c-2_i64_30 : i64
    %c2_i64_31 = arith.constant 2 : i64
    %73 = arith.cmpi ult, %71, %c2_i64_31 : i64
    %c91_i8_32 = arith.constant 91 : i8
    cf.cond_br %73, ^bb1(%c91_i8_32 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %74 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_33 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %75 = arith.cmpi uge, %74, %c3_i64_33 : i64
    %c80_i8_34 = arith.constant 80 : i8
    cf.cond_br %75, ^bb28, ^bb1(%c80_i8_34 : i8)
  ^bb28:  // pred: ^bb27
    %76 = arith.subi %74, %c3_i64_33 : i64
    llvm.store %76, %arg1 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %77 = llvm.load %arg3 : !llvm.ptr -> i64
    %78 = llvm.getelementptr %arg2[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_35 = arith.constant 1 : i64
    %79 = arith.addi %77, %c1_i64_35 : i64
    llvm.store %79, %arg3 : i64, !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %78 : i256, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %c1024_i64_36 = arith.constant 1024 : i64
    %80 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %81 = arith.addi %80, %c1_i64_37 : i64
    %82 = arith.cmpi ult, %c1024_i64_36, %81 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %82, ^bb1(%c92_i8_38 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %83 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_39 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %84 = arith.cmpi uge, %83, %c3_i64_39 : i64
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %84, ^bb32, ^bb1(%c80_i8_40 : i8)
  ^bb32:  // pred: ^bb31
    %85 = arith.subi %83, %c3_i64_39 : i64
    llvm.store %85, %arg1 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %c64_i256 = arith.constant 64 : i256
    %86 = llvm.load %arg3 : !llvm.ptr -> i64
    %87 = llvm.getelementptr %arg2[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_41 = arith.constant 1 : i64
    %88 = arith.addi %86, %c1_i64_41 : i64
    llvm.store %88, %arg3 : i64, !llvm.ptr
    llvm.store %c64_i256, %87 : i256, !llvm.ptr
    cf.br ^bb40
  ^bb34:  // pred: ^bb36
    %c1024_i64_42 = arith.constant 1024 : i64
    %89 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %90 = arith.addi %89, %c1_i64_43 : i64
    %91 = arith.cmpi ult, %c1024_i64_42, %90 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %91, ^bb1(%c92_i8_44 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %92 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %93 = arith.cmpi uge, %92, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %93, ^bb36, ^bb1(%c80_i8_46 : i8)
  ^bb36:  // pred: ^bb35
    %94 = arith.subi %92, %c3_i64_45 : i64
    llvm.store %94, %arg1 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb39
    %95 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_47 = arith.constant 1 : i64
    %96 = arith.subi %95, %c1_i64_47 : i64
    %97 = llvm.getelementptr %arg2[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %96, %arg3 : i64, !llvm.ptr
    %98 = llvm.load %97 : !llvm.ptr -> i256
    %99 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_48 = arith.constant 1 : i64
    %100 = arith.subi %99, %c1_i64_48 : i64
    %101 = llvm.getelementptr %arg2[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %100, %arg3 : i64, !llvm.ptr
    %102 = llvm.load %101 : !llvm.ptr -> i256
    %c32_i64_49 = arith.constant 32 : i64
    %c0_i64_50 = arith.constant 0 : i64
    %103 = arith.cmpi ne, %c32_i64_49, %c0_i64_50 : i64
    cf.cond_br %103, ^bb186, ^bb38
  ^bb38:  // 2 preds: ^bb37, ^bb190
    %104 = arith.trunci %98 : i256 to i64
    %105 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %106 = llvm.getelementptr %105[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %107 = llvm.intr.bswap(%102)  : (i256) -> i256
    llvm.store %107, %106 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb44
  ^bb39:  // pred: ^bb41
    %c1024_i64_51 = arith.constant 1024 : i64
    %108 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_52 = arith.constant -2 : i64
    %109 = arith.addi %108, %c-2_i64_52 : i64
    %c2_i64_53 = arith.constant 2 : i64
    %110 = arith.cmpi ult, %108, %c2_i64_53 : i64
    %c91_i8_54 = arith.constant 91 : i8
    cf.cond_br %110, ^bb1(%c91_i8_54 : i8), ^bb37
  ^bb40:  // pred: ^bb33
    %111 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_55 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %112 = arith.cmpi uge, %111, %c3_i64_55 : i64
    %c80_i8_56 = arith.constant 80 : i8
    cf.cond_br %112, ^bb41, ^bb1(%c80_i8_56 : i8)
  ^bb41:  // pred: ^bb40
    %113 = arith.subi %111, %c3_i64_55 : i64
    llvm.store %113, %arg1 : i64, !llvm.ptr
    cf.br ^bb39
  ^bb42:  // pred: ^bb43
    %c77_i256 = arith.constant 77 : i256
    %114 = llvm.load %arg3 : !llvm.ptr -> i64
    %115 = llvm.getelementptr %arg2[%114] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_57 = arith.constant 1 : i64
    %116 = arith.addi %114, %c1_i64_57 : i64
    llvm.store %116, %arg3 : i64, !llvm.ptr
    llvm.store %c77_i256, %115 : i256, !llvm.ptr
    cf.br ^bb48
  ^bb43:  // pred: ^bb45
    %c1024_i64_58 = arith.constant 1024 : i64
    %117 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %118 = arith.addi %117, %c1_i64_59 : i64
    %119 = arith.cmpi ult, %c1024_i64_58, %118 : i64
    %c92_i8_60 = arith.constant 92 : i8
    cf.cond_br %119, ^bb1(%c92_i8_60 : i8), ^bb42
  ^bb44:  // pred: ^bb38
    %120 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_61 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %121 = arith.cmpi uge, %120, %c3_i64_61 : i64
    %c80_i8_62 = arith.constant 80 : i8
    cf.cond_br %121, ^bb45, ^bb1(%c80_i8_62 : i8)
  ^bb45:  // pred: ^bb44
    %122 = arith.subi %120, %c3_i64_61 : i64
    llvm.store %122, %arg1 : i64, !llvm.ptr
    cf.br ^bb43
  ^bb46:  // pred: ^bb47
    %c0_i256_63 = arith.constant 0 : i256
    %123 = llvm.load %arg3 : !llvm.ptr -> i64
    %124 = llvm.getelementptr %arg2[%123] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_64 = arith.constant 1 : i64
    %125 = arith.addi %123, %c1_i64_64 : i64
    llvm.store %125, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_63, %124 : i256, !llvm.ptr
    cf.br ^bb52
  ^bb47:  // pred: ^bb49
    %c1024_i64_65 = arith.constant 1024 : i64
    %126 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_66 = arith.constant 1 : i64
    %127 = arith.addi %126, %c1_i64_66 : i64
    %128 = arith.cmpi ult, %c1024_i64_65, %127 : i64
    %c92_i8_67 = arith.constant 92 : i8
    cf.cond_br %128, ^bb1(%c92_i8_67 : i8), ^bb46
  ^bb48:  // pred: ^bb42
    %129 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_68 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %130 = arith.cmpi uge, %129, %c3_i64_68 : i64
    %c80_i8_69 = arith.constant 80 : i8
    cf.cond_br %130, ^bb49, ^bb1(%c80_i8_69 : i8)
  ^bb49:  // pred: ^bb48
    %131 = arith.subi %129, %c3_i64_68 : i64
    llvm.store %131, %arg1 : i64, !llvm.ptr
    cf.br ^bb47
  ^bb50:  // pred: ^bb51
    %c0_i256_70 = arith.constant 0 : i256
    %132 = llvm.load %arg3 : !llvm.ptr -> i64
    %133 = llvm.getelementptr %arg2[%132] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_71 = arith.constant 1 : i64
    %134 = arith.addi %132, %c1_i64_71 : i64
    llvm.store %134, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_70, %133 : i256, !llvm.ptr
    cf.br ^bb63
  ^bb51:  // pred: ^bb53
    %c1024_i64_72 = arith.constant 1024 : i64
    %135 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %136 = arith.addi %135, %c1_i64_73 : i64
    %137 = arith.cmpi ult, %c1024_i64_72, %136 : i64
    %c92_i8_74 = arith.constant 92 : i8
    cf.cond_br %137, ^bb1(%c92_i8_74 : i8), ^bb50
  ^bb52:  // pred: ^bb46
    %138 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_75 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %139 = arith.cmpi uge, %138, %c3_i64_75 : i64
    %c80_i8_76 = arith.constant 80 : i8
    cf.cond_br %139, ^bb53, ^bb1(%c80_i8_76 : i8)
  ^bb53:  // pred: ^bb52
    %140 = arith.subi %138, %c3_i64_75 : i64
    llvm.store %140, %arg1 : i64, !llvm.ptr
    cf.br ^bb51
  ^bb54:  // pred: ^bb62
    %141 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_77 = arith.constant 1 : i64
    %142 = arith.subi %141, %c1_i64_77 : i64
    %143 = llvm.getelementptr %arg2[%142] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %142, %arg3 : i64, !llvm.ptr
    %144 = llvm.load %143 : !llvm.ptr -> i256
    %145 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_78 = arith.constant 1 : i64
    %146 = arith.subi %145, %c1_i64_78 : i64
    %147 = llvm.getelementptr %arg2[%146] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %146, %arg3 : i64, !llvm.ptr
    %148 = llvm.load %147 : !llvm.ptr -> i256
    %149 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_79 = arith.constant 1 : i64
    %150 = arith.subi %149, %c1_i64_79 : i64
    %151 = llvm.getelementptr %arg2[%150] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %150, %arg3 : i64, !llvm.ptr
    %152 = llvm.load %151 : !llvm.ptr -> i256
    %153 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %154 = arith.cmpi ne, %153, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %154, ^bb1(%c87_i8 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %155 = arith.cmpi sgt, %152, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %155, ^bb1(%c84_i8 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %156 = arith.trunci %152 : i256 to i64
    %c0_i64_80 = arith.constant 0 : i64
    %157 = arith.cmpi slt, %156, %c0_i64_80 : i64
    %c84_i8_81 = arith.constant 84 : i8
    cf.cond_br %157, ^bb1(%c84_i8_81 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %c0_i64_82 = arith.constant 0 : i64
    %158 = arith.cmpi ne, %156, %c0_i64_82 : i64
    cf.cond_br %158, ^bb194, ^bb58
  ^bb58:  // 2 preds: ^bb57, ^bb200
    %c32000_i64 = arith.constant 32000 : i64
    %159 = llvm.load %arg1 : !llvm.ptr -> i64
    %160 = arith.cmpi ult, %159, %c32000_i64 : i64
    scf.if %160 {
    } else {
      %778 = arith.subi %159, %c32000_i64 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_83 = arith.constant 80 : i8
    cf.cond_br %160, ^bb1(%c80_i8_83 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %c1_i256 = arith.constant 1 : i256
    %161 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %144, %161 {alignment = 1 : i64} : i256, !llvm.ptr
    %162 = llvm.load %arg1 : !llvm.ptr -> i64
    %163 = arith.trunci %148 : i256 to i64
    %164 = call @dora_fn_create(%arg0, %156, %163, %161, %162) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %165 = llvm.getelementptr %164[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %166 = llvm.load %165 : !llvm.ptr -> i8
    %c0_i8_84 = arith.constant 0 : i8
    %167 = arith.cmpi ne, %166, %c0_i8_84 : i8
    cf.cond_br %167, ^bb1(%166 : i8), ^bb60
  ^bb60:  // pred: ^bb59
    %168 = llvm.getelementptr %164[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %169 = llvm.load %168 : !llvm.ptr -> i64
    %170 = llvm.load %arg1 : !llvm.ptr -> i64
    %171 = arith.cmpi ult, %170, %169 : i64
    scf.if %171 {
    } else {
      %778 = arith.subi %170, %169 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_85 = arith.constant 80 : i8
    cf.cond_br %171, ^bb1(%c80_i8_85 : i8), ^bb61
  ^bb61:  // pred: ^bb60
    %172 = llvm.load %161 : !llvm.ptr -> i256
    %173 = llvm.load %arg3 : !llvm.ptr -> i64
    %174 = llvm.getelementptr %arg2[%173] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_86 = arith.constant 1 : i64
    %175 = arith.addi %173, %c1_i64_86 : i64
    llvm.store %175, %arg3 : i64, !llvm.ptr
    llvm.store %172, %174 : i256, !llvm.ptr
    cf.br ^bb67
  ^bb62:  // pred: ^bb64
    %c1024_i64_87 = arith.constant 1024 : i64
    %176 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_88 = arith.constant -2 : i64
    %177 = arith.addi %176, %c-2_i64_88 : i64
    %c3_i64_89 = arith.constant 3 : i64
    %178 = arith.cmpi ult, %176, %c3_i64_89 : i64
    %c91_i8_90 = arith.constant 91 : i8
    cf.cond_br %178, ^bb1(%c91_i8_90 : i8), ^bb54
  ^bb63:  // pred: ^bb50
    %179 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_91 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %180 = arith.cmpi uge, %179, %c0_i64_91 : i64
    %c80_i8_92 = arith.constant 80 : i8
    cf.cond_br %180, ^bb64, ^bb1(%c80_i8_92 : i8)
  ^bb64:  // pred: ^bb63
    %181 = arith.subi %179, %c0_i64_91 : i64
    llvm.store %181, %arg1 : i64, !llvm.ptr
    cf.br ^bb62
  ^bb65:  // pred: ^bb66
    %c0_i256_93 = arith.constant 0 : i256
    %182 = llvm.load %arg3 : !llvm.ptr -> i64
    %183 = llvm.getelementptr %arg2[%182] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_94 = arith.constant 1 : i64
    %184 = arith.addi %182, %c1_i64_94 : i64
    llvm.store %184, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_93, %183 : i256, !llvm.ptr
    cf.br ^bb71
  ^bb66:  // pred: ^bb68
    %c1024_i64_95 = arith.constant 1024 : i64
    %185 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_96 = arith.constant 1 : i64
    %186 = arith.addi %185, %c1_i64_96 : i64
    %187 = arith.cmpi ult, %c1024_i64_95, %186 : i64
    %c92_i8_97 = arith.constant 92 : i8
    cf.cond_br %187, ^bb1(%c92_i8_97 : i8), ^bb65
  ^bb67:  // pred: ^bb61
    %188 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_98 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %189 = arith.cmpi uge, %188, %c3_i64_98 : i64
    %c80_i8_99 = arith.constant 80 : i8
    cf.cond_br %189, ^bb68, ^bb1(%c80_i8_99 : i8)
  ^bb68:  // pred: ^bb67
    %190 = arith.subi %188, %c3_i64_98 : i64
    llvm.store %190, %arg1 : i64, !llvm.ptr
    cf.br ^bb66
  ^bb69:  // pred: ^bb70
    %c0_i256_100 = arith.constant 0 : i256
    %191 = llvm.load %arg3 : !llvm.ptr -> i64
    %192 = llvm.getelementptr %arg2[%191] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_101 = arith.constant 1 : i64
    %193 = arith.addi %191, %c1_i64_101 : i64
    llvm.store %193, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_100, %192 : i256, !llvm.ptr
    cf.br ^bb75
  ^bb70:  // pred: ^bb72
    %c1024_i64_102 = arith.constant 1024 : i64
    %194 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_103 = arith.constant 1 : i64
    %195 = arith.addi %194, %c1_i64_103 : i64
    %196 = arith.cmpi ult, %c1024_i64_102, %195 : i64
    %c92_i8_104 = arith.constant 92 : i8
    cf.cond_br %196, ^bb1(%c92_i8_104 : i8), ^bb69
  ^bb71:  // pred: ^bb65
    %197 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_105 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %198 = arith.cmpi uge, %197, %c3_i64_105 : i64
    %c80_i8_106 = arith.constant 80 : i8
    cf.cond_br %198, ^bb72, ^bb1(%c80_i8_106 : i8)
  ^bb72:  // pred: ^bb71
    %199 = arith.subi %197, %c3_i64_105 : i64
    llvm.store %199, %arg1 : i64, !llvm.ptr
    cf.br ^bb70
  ^bb73:  // pred: ^bb74
    %c0_i256_107 = arith.constant 0 : i256
    %200 = llvm.load %arg3 : !llvm.ptr -> i64
    %201 = llvm.getelementptr %arg2[%200] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_108 = arith.constant 1 : i64
    %202 = arith.addi %200, %c1_i64_108 : i64
    llvm.store %202, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_107, %201 : i256, !llvm.ptr
    cf.br ^bb79
  ^bb74:  // pred: ^bb76
    %c1024_i64_109 = arith.constant 1024 : i64
    %203 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_110 = arith.constant 1 : i64
    %204 = arith.addi %203, %c1_i64_110 : i64
    %205 = arith.cmpi ult, %c1024_i64_109, %204 : i64
    %c92_i8_111 = arith.constant 92 : i8
    cf.cond_br %205, ^bb1(%c92_i8_111 : i8), ^bb73
  ^bb75:  // pred: ^bb69
    %206 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_112 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %207 = arith.cmpi uge, %206, %c3_i64_112 : i64
    %c80_i8_113 = arith.constant 80 : i8
    cf.cond_br %207, ^bb76, ^bb1(%c80_i8_113 : i8)
  ^bb76:  // pred: ^bb75
    %208 = arith.subi %206, %c3_i64_112 : i64
    llvm.store %208, %arg1 : i64, !llvm.ptr
    cf.br ^bb74
  ^bb77:  // pred: ^bb78
    %c0_i256_114 = arith.constant 0 : i256
    %209 = llvm.load %arg3 : !llvm.ptr -> i64
    %210 = llvm.getelementptr %arg2[%209] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_115 = arith.constant 1 : i64
    %211 = arith.addi %209, %c1_i64_115 : i64
    llvm.store %211, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_114, %210 : i256, !llvm.ptr
    cf.br ^bb83
  ^bb78:  // pred: ^bb80
    %c1024_i64_116 = arith.constant 1024 : i64
    %212 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_117 = arith.constant 1 : i64
    %213 = arith.addi %212, %c1_i64_117 : i64
    %214 = arith.cmpi ult, %c1024_i64_116, %213 : i64
    %c92_i8_118 = arith.constant 92 : i8
    cf.cond_br %214, ^bb1(%c92_i8_118 : i8), ^bb77
  ^bb79:  // pred: ^bb73
    %215 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_119 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %216 = arith.cmpi uge, %215, %c3_i64_119 : i64
    %c80_i8_120 = arith.constant 80 : i8
    cf.cond_br %216, ^bb80, ^bb1(%c80_i8_120 : i8)
  ^bb80:  // pred: ^bb79
    %217 = arith.subi %215, %c3_i64_119 : i64
    llvm.store %217, %arg1 : i64, !llvm.ptr
    cf.br ^bb78
  ^bb81:  // pred: ^bb82
    %218 = llvm.load %arg3 : !llvm.ptr -> i64
    %219 = llvm.getelementptr %arg2[%218] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %220 = llvm.getelementptr %219[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %221 = llvm.load %220 : !llvm.ptr -> i256
    %222 = llvm.load %arg3 : !llvm.ptr -> i64
    %223 = llvm.getelementptr %arg2[%222] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_121 = arith.constant 1 : i64
    %224 = arith.addi %222, %c1_i64_121 : i64
    llvm.store %224, %arg3 : i64, !llvm.ptr
    llvm.store %221, %223 : i256, !llvm.ptr
    cf.br ^bb87
  ^bb82:  // pred: ^bb84
    %c1024_i64_122 = arith.constant 1024 : i64
    %225 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_123 = arith.constant 1 : i64
    %226 = arith.addi %225, %c1_i64_123 : i64
    %c5_i64 = arith.constant 5 : i64
    %227 = arith.cmpi ult, %225, %c5_i64 : i64
    %228 = arith.cmpi ult, %c1024_i64_122, %226 : i64
    %229 = arith.xori %227, %228 : i1
    %c92_i8_124 = arith.constant 92 : i8
    cf.cond_br %229, ^bb1(%c92_i8_124 : i8), ^bb81
  ^bb83:  // pred: ^bb77
    %230 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_125 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %231 = arith.cmpi uge, %230, %c3_i64_125 : i64
    %c80_i8_126 = arith.constant 80 : i8
    cf.cond_br %231, ^bb84, ^bb1(%c80_i8_126 : i8)
  ^bb84:  // pred: ^bb83
    %232 = arith.subi %230, %c3_i64_125 : i64
    llvm.store %232, %arg1 : i64, !llvm.ptr
    cf.br ^bb82
  ^bb85:  // pred: ^bb86
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %233 = llvm.load %arg3 : !llvm.ptr -> i64
    %234 = llvm.getelementptr %arg2[%233] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_127 = arith.constant 1 : i64
    %235 = arith.addi %233, %c1_i64_127 : i64
    llvm.store %235, %arg3 : i64, !llvm.ptr
    llvm.store %c4294967295_i256, %234 : i256, !llvm.ptr
    cf.br ^bb99
  ^bb86:  // pred: ^bb88
    %c1024_i64_128 = arith.constant 1024 : i64
    %236 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_129 = arith.constant 1 : i64
    %237 = arith.addi %236, %c1_i64_129 : i64
    %238 = arith.cmpi ult, %c1024_i64_128, %237 : i64
    %c92_i8_130 = arith.constant 92 : i8
    cf.cond_br %238, ^bb1(%c92_i8_130 : i8), ^bb85
  ^bb87:  // pred: ^bb81
    %239 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_131 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %240 = arith.cmpi uge, %239, %c3_i64_131 : i64
    %c80_i8_132 = arith.constant 80 : i8
    cf.cond_br %240, ^bb88, ^bb1(%c80_i8_132 : i8)
  ^bb88:  // pred: ^bb87
    %241 = arith.subi %239, %c3_i64_131 : i64
    llvm.store %241, %arg1 : i64, !llvm.ptr
    cf.br ^bb86
  ^bb89:  // pred: ^bb98
    %242 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_133 = arith.constant 1 : i64
    %243 = arith.subi %242, %c1_i64_133 : i64
    %244 = llvm.getelementptr %arg2[%243] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %243, %arg3 : i64, !llvm.ptr
    %245 = llvm.load %244 : !llvm.ptr -> i256
    %246 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_134 = arith.constant 1 : i64
    %247 = arith.subi %246, %c1_i64_134 : i64
    %248 = llvm.getelementptr %arg2[%247] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %247, %arg3 : i64, !llvm.ptr
    %249 = llvm.load %248 : !llvm.ptr -> i256
    %250 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_135 = arith.constant 1 : i64
    %251 = arith.subi %250, %c1_i64_135 : i64
    %252 = llvm.getelementptr %arg2[%251] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %251, %arg3 : i64, !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> i256
    %254 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_136 = arith.constant 1 : i64
    %255 = arith.subi %254, %c1_i64_136 : i64
    %256 = llvm.getelementptr %arg2[%255] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %255, %arg3 : i64, !llvm.ptr
    %257 = llvm.load %256 : !llvm.ptr -> i256
    %258 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_137 = arith.constant 1 : i64
    %259 = arith.subi %258, %c1_i64_137 : i64
    %260 = llvm.getelementptr %arg2[%259] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %259, %arg3 : i64, !llvm.ptr
    %261 = llvm.load %260 : !llvm.ptr -> i256
    %262 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_138 = arith.constant 1 : i64
    %263 = arith.subi %262, %c1_i64_138 : i64
    %264 = llvm.getelementptr %arg2[%263] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %263, %arg3 : i64, !llvm.ptr
    %265 = llvm.load %264 : !llvm.ptr -> i256
    %c0_i256_139 = arith.constant 0 : i256
    %c18446744073709551615_i256_140 = arith.constant 18446744073709551615 : i256
    %266 = arith.cmpi sgt, %257, %c18446744073709551615_i256_140 : i256
    %c84_i8_141 = arith.constant 84 : i8
    cf.cond_br %266, ^bb1(%c84_i8_141 : i8), ^bb90
  ^bb90:  // pred: ^bb89
    %267 = arith.trunci %257 : i256 to i64
    %c0_i64_142 = arith.constant 0 : i64
    %268 = arith.cmpi slt, %267, %c0_i64_142 : i64
    %c84_i8_143 = arith.constant 84 : i8
    cf.cond_br %268, ^bb1(%c84_i8_143 : i8), ^bb91
  ^bb91:  // pred: ^bb90
    %c0_i64_144 = arith.constant 0 : i64
    %269 = arith.cmpi ne, %267, %c0_i64_144 : i64
    cf.cond_br %269, ^bb204, ^bb92
  ^bb92:  // 2 preds: ^bb91, ^bb208
    %c18446744073709551615_i256_145 = arith.constant 18446744073709551615 : i256
    %270 = arith.cmpi sgt, %265, %c18446744073709551615_i256_145 : i256
    %c84_i8_146 = arith.constant 84 : i8
    cf.cond_br %270, ^bb1(%c84_i8_146 : i8), ^bb93
  ^bb93:  // pred: ^bb92
    %271 = arith.trunci %265 : i256 to i64
    %c0_i64_147 = arith.constant 0 : i64
    %272 = arith.cmpi slt, %271, %c0_i64_147 : i64
    %c84_i8_148 = arith.constant 84 : i8
    cf.cond_br %272, ^bb1(%c84_i8_148 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %c0_i64_149 = arith.constant 0 : i64
    %273 = arith.cmpi ne, %271, %c0_i64_149 : i64
    cf.cond_br %273, ^bb212, ^bb95
  ^bb95:  // 2 preds: ^bb94, ^bb216
    %274 = arith.trunci %253 : i256 to i64
    %275 = arith.trunci %261 : i256 to i64
    %276 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_150 = arith.constant 1 : i256
    %277 = llvm.alloca %c1_i256_150 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_139, %277 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_151 = arith.constant 1 : i256
    %278 = llvm.alloca %c1_i256_151 x i256 : (i256) -> !llvm.ptr
    llvm.store %245, %278 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_152 = arith.constant 1 : i256
    %279 = llvm.alloca %c1_i256_152 x i256 : (i256) -> !llvm.ptr
    llvm.store %249, %279 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i8 = arith.constant 1 : i8
    %280 = call @dora_fn_call(%arg0, %278, %279, %277, %274, %267, %275, %271, %276, %c1_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %281 = llvm.getelementptr %280[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %282 = llvm.load %281 : !llvm.ptr -> i8
    %283 = llvm.getelementptr %280[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %284 = llvm.load %283 : !llvm.ptr -> i8
    %c0_i8_153 = arith.constant 0 : i8
    %285 = arith.cmpi ne, %284, %c0_i8_153 : i8
    cf.cond_br %285, ^bb1(%284 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %286 = llvm.getelementptr %280[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %287 = llvm.load %286 : !llvm.ptr -> i64
    %288 = llvm.load %arg1 : !llvm.ptr -> i64
    %289 = arith.cmpi ult, %288, %287 : i64
    scf.if %289 {
    } else {
      %778 = arith.subi %288, %287 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_154 = arith.constant 80 : i8
    cf.cond_br %289, ^bb1(%c80_i8_154 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %290 = arith.extui %282 : i8 to i256
    %291 = llvm.load %arg3 : !llvm.ptr -> i64
    %292 = llvm.getelementptr %arg2[%291] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_155 = arith.constant 1 : i64
    %293 = arith.addi %291, %c1_i64_155 : i64
    llvm.store %293, %arg3 : i64, !llvm.ptr
    llvm.store %290, %292 : i256, !llvm.ptr
    cf.br ^bb103
  ^bb98:  // pred: ^bb100
    %c1024_i64_156 = arith.constant 1024 : i64
    %294 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %295 = arith.addi %294, %c-5_i64 : i64
    %c6_i64 = arith.constant 6 : i64
    %296 = arith.cmpi ult, %294, %c6_i64 : i64
    %c91_i8_157 = arith.constant 91 : i8
    cf.cond_br %296, ^bb1(%c91_i8_157 : i8), ^bb89
  ^bb99:  // pred: ^bb85
    %297 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_158 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %298 = arith.cmpi uge, %297, %c0_i64_158 : i64
    %c80_i8_159 = arith.constant 80 : i8
    cf.cond_br %298, ^bb100, ^bb1(%c80_i8_159 : i8)
  ^bb100:  // pred: ^bb99
    %299 = arith.subi %297, %c0_i64_158 : i64
    llvm.store %299, %arg1 : i64, !llvm.ptr
    cf.br ^bb98
  ^bb101:  // pred: ^bb102
    %300 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_160 = arith.constant 1 : i64
    %301 = arith.subi %300, %c1_i64_160 : i64
    %302 = llvm.getelementptr %arg2[%301] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %301, %arg3 : i64, !llvm.ptr
    %303 = llvm.load %302 : !llvm.ptr -> i256
    cf.br ^bb107
  ^bb102:  // pred: ^bb104
    %c1024_i64_161 = arith.constant 1024 : i64
    %304 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %305 = arith.addi %304, %c-1_i64 : i64
    %c1_i64_162 = arith.constant 1 : i64
    %306 = arith.cmpi ult, %304, %c1_i64_162 : i64
    %c91_i8_163 = arith.constant 91 : i8
    cf.cond_br %306, ^bb1(%c91_i8_163 : i8), ^bb101
  ^bb103:  // pred: ^bb97
    %307 = llvm.load %arg1 : !llvm.ptr -> i64
    %c2_i64_164 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %308 = arith.cmpi uge, %307, %c2_i64_164 : i64
    %c80_i8_165 = arith.constant 80 : i8
    cf.cond_br %308, ^bb104, ^bb1(%c80_i8_165 : i8)
  ^bb104:  // pred: ^bb103
    %309 = arith.subi %307, %c2_i64_164 : i64
    llvm.store %309, %arg1 : i64, !llvm.ptr
    cf.br ^bb102
  ^bb105:  // pred: ^bb106
    %310 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_166 = arith.constant 1 : i64
    %311 = arith.subi %310, %c1_i64_166 : i64
    %312 = llvm.getelementptr %arg2[%311] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %311, %arg3 : i64, !llvm.ptr
    %313 = llvm.load %312 : !llvm.ptr -> i256
    cf.br ^bb111
  ^bb106:  // pred: ^bb108
    %c1024_i64_167 = arith.constant 1024 : i64
    %314 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-1_i64_168 = arith.constant -1 : i64
    %315 = arith.addi %314, %c-1_i64_168 : i64
    %c1_i64_169 = arith.constant 1 : i64
    %316 = arith.cmpi ult, %314, %c1_i64_169 : i64
    %c91_i8_170 = arith.constant 91 : i8
    cf.cond_br %316, ^bb1(%c91_i8_170 : i8), ^bb105
  ^bb107:  // pred: ^bb101
    %317 = llvm.load %arg1 : !llvm.ptr -> i64
    %c2_i64_171 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %318 = arith.cmpi uge, %317, %c2_i64_171 : i64
    %c80_i8_172 = arith.constant 80 : i8
    cf.cond_br %318, ^bb108, ^bb1(%c80_i8_172 : i8)
  ^bb108:  // pred: ^bb107
    %319 = arith.subi %317, %c2_i64_171 : i64
    llvm.store %319, %arg1 : i64, !llvm.ptr
    cf.br ^bb106
  ^bb109:  // pred: ^bb110
    %c0_i256_173 = arith.constant 0 : i256
    %320 = llvm.load %arg3 : !llvm.ptr -> i64
    %321 = llvm.getelementptr %arg2[%320] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_174 = arith.constant 1 : i64
    %322 = arith.addi %320, %c1_i64_174 : i64
    llvm.store %322, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_173, %321 : i256, !llvm.ptr
    cf.br ^bb115
  ^bb110:  // pred: ^bb112
    %c1024_i64_175 = arith.constant 1024 : i64
    %323 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_176 = arith.constant 1 : i64
    %324 = arith.addi %323, %c1_i64_176 : i64
    %325 = arith.cmpi ult, %c1024_i64_175, %324 : i64
    %c92_i8_177 = arith.constant 92 : i8
    cf.cond_br %325, ^bb1(%c92_i8_177 : i8), ^bb109
  ^bb111:  // pred: ^bb105
    %326 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_178 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %327 = arith.cmpi uge, %326, %c3_i64_178 : i64
    %c80_i8_179 = arith.constant 80 : i8
    cf.cond_br %327, ^bb112, ^bb1(%c80_i8_179 : i8)
  ^bb112:  // pred: ^bb111
    %328 = arith.subi %326, %c3_i64_178 : i64
    llvm.store %328, %arg1 : i64, !llvm.ptr
    cf.br ^bb110
  ^bb113:  // pred: ^bb114
    %c0_i256_180 = arith.constant 0 : i256
    %329 = llvm.load %arg3 : !llvm.ptr -> i64
    %330 = llvm.getelementptr %arg2[%329] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_181 = arith.constant 1 : i64
    %331 = arith.addi %329, %c1_i64_181 : i64
    llvm.store %331, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_180, %330 : i256, !llvm.ptr
    cf.br ^bb120
  ^bb114:  // pred: ^bb116
    %c1024_i64_182 = arith.constant 1024 : i64
    %332 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_183 = arith.constant 1 : i64
    %333 = arith.addi %332, %c1_i64_183 : i64
    %334 = arith.cmpi ult, %c1024_i64_182, %333 : i64
    %c92_i8_184 = arith.constant 92 : i8
    cf.cond_br %334, ^bb1(%c92_i8_184 : i8), ^bb113
  ^bb115:  // pred: ^bb109
    %335 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_185 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %336 = arith.cmpi uge, %335, %c3_i64_185 : i64
    %c80_i8_186 = arith.constant 80 : i8
    cf.cond_br %336, ^bb116, ^bb1(%c80_i8_186 : i8)
  ^bb116:  // pred: ^bb115
    %337 = arith.subi %335, %c3_i64_185 : i64
    llvm.store %337, %arg1 : i64, !llvm.ptr
    cf.br ^bb114
  ^bb117:  // pred: ^bb119
    %338 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_187 = arith.constant 1 : i64
    %339 = arith.subi %338, %c1_i64_187 : i64
    %340 = llvm.getelementptr %arg2[%339] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %339, %arg3 : i64, !llvm.ptr
    %341 = llvm.load %340 : !llvm.ptr -> i256
    %342 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_188 = arith.constant 1 : i64
    %343 = arith.subi %342, %c1_i64_188 : i64
    %344 = llvm.getelementptr %arg2[%343] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %343, %arg3 : i64, !llvm.ptr
    %345 = llvm.load %344 : !llvm.ptr -> i256
    %c32_i64_189 = arith.constant 32 : i64
    %c0_i64_190 = arith.constant 0 : i64
    %346 = arith.cmpi ne, %c32_i64_189, %c0_i64_190 : i64
    cf.cond_br %346, ^bb220, ^bb118
  ^bb118:  // 2 preds: ^bb117, ^bb224
    %347 = arith.trunci %341 : i256 to i64
    %348 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %349 = llvm.getelementptr %348[%347] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %350 = llvm.intr.bswap(%345)  : (i256) -> i256
    llvm.store %350, %349 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb124
  ^bb119:  // pred: ^bb121
    %c1024_i64_191 = arith.constant 1024 : i64
    %351 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_192 = arith.constant -2 : i64
    %352 = arith.addi %351, %c-2_i64_192 : i64
    %c2_i64_193 = arith.constant 2 : i64
    %353 = arith.cmpi ult, %351, %c2_i64_193 : i64
    %c91_i8_194 = arith.constant 91 : i8
    cf.cond_br %353, ^bb1(%c91_i8_194 : i8), ^bb117
  ^bb120:  // pred: ^bb113
    %354 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_195 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %355 = arith.cmpi uge, %354, %c3_i64_195 : i64
    %c80_i8_196 = arith.constant 80 : i8
    cf.cond_br %355, ^bb121, ^bb1(%c80_i8_196 : i8)
  ^bb121:  // pred: ^bb120
    %356 = arith.subi %354, %c3_i64_195 : i64
    llvm.store %356, %arg1 : i64, !llvm.ptr
    cf.br ^bb119
  ^bb122:  // pred: ^bb123
    %c0_i256_197 = arith.constant 0 : i256
    %357 = llvm.load %arg3 : !llvm.ptr -> i64
    %358 = llvm.getelementptr %arg2[%357] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_198 = arith.constant 1 : i64
    %359 = arith.addi %357, %c1_i64_198 : i64
    llvm.store %359, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_197, %358 : i256, !llvm.ptr
    cf.br ^bb128
  ^bb123:  // pred: ^bb125
    %c1024_i64_199 = arith.constant 1024 : i64
    %360 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_200 = arith.constant 1 : i64
    %361 = arith.addi %360, %c1_i64_200 : i64
    %362 = arith.cmpi ult, %c1024_i64_199, %361 : i64
    %c92_i8_201 = arith.constant 92 : i8
    cf.cond_br %362, ^bb1(%c92_i8_201 : i8), ^bb122
  ^bb124:  // pred: ^bb118
    %363 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_202 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %364 = arith.cmpi uge, %363, %c3_i64_202 : i64
    %c80_i8_203 = arith.constant 80 : i8
    cf.cond_br %364, ^bb125, ^bb1(%c80_i8_203 : i8)
  ^bb125:  // pred: ^bb124
    %365 = arith.subi %363, %c3_i64_202 : i64
    llvm.store %365, %arg1 : i64, !llvm.ptr
    cf.br ^bb123
  ^bb126:  // pred: ^bb127
    %c32_i256_204 = arith.constant 32 : i256
    %366 = llvm.load %arg3 : !llvm.ptr -> i64
    %367 = llvm.getelementptr %arg2[%366] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_205 = arith.constant 1 : i64
    %368 = arith.addi %366, %c1_i64_205 : i64
    llvm.store %368, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256_204, %367 : i256, !llvm.ptr
    cf.br ^bb133
  ^bb127:  // pred: ^bb129
    %c1024_i64_206 = arith.constant 1024 : i64
    %369 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_207 = arith.constant 1 : i64
    %370 = arith.addi %369, %c1_i64_207 : i64
    %371 = arith.cmpi ult, %c1024_i64_206, %370 : i64
    %c92_i8_208 = arith.constant 92 : i8
    cf.cond_br %371, ^bb1(%c92_i8_208 : i8), ^bb126
  ^bb128:  // pred: ^bb122
    %372 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_209 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %373 = arith.cmpi uge, %372, %c3_i64_209 : i64
    %c80_i8_210 = arith.constant 80 : i8
    cf.cond_br %373, ^bb129, ^bb1(%c80_i8_210 : i8)
  ^bb129:  // pred: ^bb128
    %374 = arith.subi %372, %c3_i64_209 : i64
    llvm.store %374, %arg1 : i64, !llvm.ptr
    cf.br ^bb127
  ^bb130:  // pred: ^bb132
    %375 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_211 = arith.constant 1 : i64
    %376 = arith.subi %375, %c1_i64_211 : i64
    %377 = llvm.getelementptr %arg2[%376] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %376, %arg3 : i64, !llvm.ptr
    %378 = llvm.load %377 : !llvm.ptr -> i256
    %379 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_212 = arith.constant 1 : i64
    %380 = arith.subi %379, %c1_i64_212 : i64
    %381 = llvm.getelementptr %arg2[%380] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %380, %arg3 : i64, !llvm.ptr
    %382 = llvm.load %381 : !llvm.ptr -> i256
    %c32_i64_213 = arith.constant 32 : i64
    %c0_i64_214 = arith.constant 0 : i64
    %383 = arith.cmpi ne, %c32_i64_213, %c0_i64_214 : i64
    cf.cond_br %383, ^bb228, ^bb131
  ^bb131:  // 2 preds: ^bb130, ^bb232
    %384 = arith.trunci %378 : i256 to i64
    %385 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %386 = llvm.getelementptr %385[%384] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %387 = llvm.intr.bswap(%382)  : (i256) -> i256
    llvm.store %387, %386 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb137
  ^bb132:  // pred: ^bb134
    %c1024_i64_215 = arith.constant 1024 : i64
    %388 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_216 = arith.constant -2 : i64
    %389 = arith.addi %388, %c-2_i64_216 : i64
    %c2_i64_217 = arith.constant 2 : i64
    %390 = arith.cmpi ult, %388, %c2_i64_217 : i64
    %c91_i8_218 = arith.constant 91 : i8
    cf.cond_br %390, ^bb1(%c91_i8_218 : i8), ^bb130
  ^bb133:  // pred: ^bb126
    %391 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_219 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %392 = arith.cmpi uge, %391, %c3_i64_219 : i64
    %c80_i8_220 = arith.constant 80 : i8
    cf.cond_br %392, ^bb134, ^bb1(%c80_i8_220 : i8)
  ^bb134:  // pred: ^bb133
    %393 = arith.subi %391, %c3_i64_219 : i64
    llvm.store %393, %arg1 : i64, !llvm.ptr
    cf.br ^bb132
  ^bb135:  // pred: ^bb136
    %c0_i256_221 = arith.constant 0 : i256
    %394 = llvm.load %arg3 : !llvm.ptr -> i64
    %395 = llvm.getelementptr %arg2[%394] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_222 = arith.constant 1 : i64
    %396 = arith.addi %394, %c1_i64_222 : i64
    llvm.store %396, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_221, %395 : i256, !llvm.ptr
    cf.br ^bb141
  ^bb136:  // pred: ^bb138
    %c1024_i64_223 = arith.constant 1024 : i64
    %397 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_224 = arith.constant 1 : i64
    %398 = arith.addi %397, %c1_i64_224 : i64
    %399 = arith.cmpi ult, %c1024_i64_223, %398 : i64
    %c92_i8_225 = arith.constant 92 : i8
    cf.cond_br %399, ^bb1(%c92_i8_225 : i8), ^bb135
  ^bb137:  // pred: ^bb131
    %400 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_226 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %401 = arith.cmpi uge, %400, %c3_i64_226 : i64
    %c80_i8_227 = arith.constant 80 : i8
    cf.cond_br %401, ^bb138, ^bb1(%c80_i8_227 : i8)
  ^bb138:  // pred: ^bb137
    %402 = arith.subi %400, %c3_i64_226 : i64
    llvm.store %402, %arg1 : i64, !llvm.ptr
    cf.br ^bb136
  ^bb139:  // pred: ^bb140
    %c64_i256_228 = arith.constant 64 : i256
    %403 = llvm.load %arg3 : !llvm.ptr -> i64
    %404 = llvm.getelementptr %arg2[%403] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_229 = arith.constant 1 : i64
    %405 = arith.addi %403, %c1_i64_229 : i64
    llvm.store %405, %arg3 : i64, !llvm.ptr
    llvm.store %c64_i256_228, %404 : i256, !llvm.ptr
    cf.br ^bb146
  ^bb140:  // pred: ^bb142
    %c1024_i64_230 = arith.constant 1024 : i64
    %406 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_231 = arith.constant 1 : i64
    %407 = arith.addi %406, %c1_i64_231 : i64
    %408 = arith.cmpi ult, %c1024_i64_230, %407 : i64
    %c92_i8_232 = arith.constant 92 : i8
    cf.cond_br %408, ^bb1(%c92_i8_232 : i8), ^bb139
  ^bb141:  // pred: ^bb135
    %409 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_233 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %410 = arith.cmpi uge, %409, %c3_i64_233 : i64
    %c80_i8_234 = arith.constant 80 : i8
    cf.cond_br %410, ^bb142, ^bb1(%c80_i8_234 : i8)
  ^bb142:  // pred: ^bb141
    %411 = arith.subi %409, %c3_i64_233 : i64
    llvm.store %411, %arg1 : i64, !llvm.ptr
    cf.br ^bb140
  ^bb143:  // pred: ^bb145
    %412 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_235 = arith.constant 1 : i64
    %413 = arith.subi %412, %c1_i64_235 : i64
    %414 = llvm.getelementptr %arg2[%413] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %413, %arg3 : i64, !llvm.ptr
    %415 = llvm.load %414 : !llvm.ptr -> i256
    %416 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_236 = arith.constant 1 : i64
    %417 = arith.subi %416, %c1_i64_236 : i64
    %418 = llvm.getelementptr %arg2[%417] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %417, %arg3 : i64, !llvm.ptr
    %419 = llvm.load %418 : !llvm.ptr -> i256
    %c32_i64_237 = arith.constant 32 : i64
    %c0_i64_238 = arith.constant 0 : i64
    %420 = arith.cmpi ne, %c32_i64_237, %c0_i64_238 : i64
    cf.cond_br %420, ^bb236, ^bb144
  ^bb144:  // 2 preds: ^bb143, ^bb240
    %421 = arith.trunci %415 : i256 to i64
    %422 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %423 = llvm.getelementptr %422[%421] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %424 = llvm.intr.bswap(%419)  : (i256) -> i256
    llvm.store %424, %423 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb150
  ^bb145:  // pred: ^bb147
    %c1024_i64_239 = arith.constant 1024 : i64
    %425 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_240 = arith.constant -2 : i64
    %426 = arith.addi %425, %c-2_i64_240 : i64
    %c2_i64_241 = arith.constant 2 : i64
    %427 = arith.cmpi ult, %425, %c2_i64_241 : i64
    %c91_i8_242 = arith.constant 91 : i8
    cf.cond_br %427, ^bb1(%c91_i8_242 : i8), ^bb143
  ^bb146:  // pred: ^bb139
    %428 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_243 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %429 = arith.cmpi uge, %428, %c3_i64_243 : i64
    %c80_i8_244 = arith.constant 80 : i8
    cf.cond_br %429, ^bb147, ^bb1(%c80_i8_244 : i8)
  ^bb147:  // pred: ^bb146
    %430 = arith.subi %428, %c3_i64_243 : i64
    llvm.store %430, %arg1 : i64, !llvm.ptr
    cf.br ^bb145
  ^bb148:  // pred: ^bb149
    %c32_i256_245 = arith.constant 32 : i256
    %431 = llvm.load %arg3 : !llvm.ptr -> i64
    %432 = llvm.getelementptr %arg2[%431] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_246 = arith.constant 1 : i64
    %433 = arith.addi %431, %c1_i64_246 : i64
    llvm.store %433, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256_245, %432 : i256, !llvm.ptr
    cf.br ^bb154
  ^bb149:  // pred: ^bb151
    %c1024_i64_247 = arith.constant 1024 : i64
    %434 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_248 = arith.constant 1 : i64
    %435 = arith.addi %434, %c1_i64_248 : i64
    %436 = arith.cmpi ult, %c1024_i64_247, %435 : i64
    %c92_i8_249 = arith.constant 92 : i8
    cf.cond_br %436, ^bb1(%c92_i8_249 : i8), ^bb148
  ^bb150:  // pred: ^bb144
    %437 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_250 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %438 = arith.cmpi uge, %437, %c3_i64_250 : i64
    %c80_i8_251 = arith.constant 80 : i8
    cf.cond_br %438, ^bb151, ^bb1(%c80_i8_251 : i8)
  ^bb151:  // pred: ^bb150
    %439 = arith.subi %437, %c3_i64_250 : i64
    llvm.store %439, %arg1 : i64, !llvm.ptr
    cf.br ^bb149
  ^bb152:  // pred: ^bb153
    %c0_i256_252 = arith.constant 0 : i256
    %440 = llvm.load %arg3 : !llvm.ptr -> i64
    %441 = llvm.getelementptr %arg2[%440] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_253 = arith.constant 1 : i64
    %442 = arith.addi %440, %c1_i64_253 : i64
    llvm.store %442, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_252, %441 : i256, !llvm.ptr
    cf.br ^bb158
  ^bb153:  // pred: ^bb155
    %c1024_i64_254 = arith.constant 1024 : i64
    %443 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_255 = arith.constant 1 : i64
    %444 = arith.addi %443, %c1_i64_255 : i64
    %445 = arith.cmpi ult, %c1024_i64_254, %444 : i64
    %c92_i8_256 = arith.constant 92 : i8
    cf.cond_br %445, ^bb1(%c92_i8_256 : i8), ^bb152
  ^bb154:  // pred: ^bb148
    %446 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_257 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %447 = arith.cmpi uge, %446, %c3_i64_257 : i64
    %c80_i8_258 = arith.constant 80 : i8
    cf.cond_br %447, ^bb155, ^bb1(%c80_i8_258 : i8)
  ^bb155:  // pred: ^bb154
    %448 = arith.subi %446, %c3_i64_257 : i64
    llvm.store %448, %arg1 : i64, !llvm.ptr
    cf.br ^bb153
  ^bb156:  // pred: ^bb157
    %c0_i256_259 = arith.constant 0 : i256
    %449 = llvm.load %arg3 : !llvm.ptr -> i64
    %450 = llvm.getelementptr %arg2[%449] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_260 = arith.constant 1 : i64
    %451 = arith.addi %449, %c1_i64_260 : i64
    llvm.store %451, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_259, %450 : i256, !llvm.ptr
    cf.br ^bb167
  ^bb157:  // pred: ^bb159
    %c1024_i64_261 = arith.constant 1024 : i64
    %452 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_262 = arith.constant 1 : i64
    %453 = arith.addi %452, %c1_i64_262 : i64
    %454 = arith.cmpi ult, %c1024_i64_261, %453 : i64
    %c92_i8_263 = arith.constant 92 : i8
    cf.cond_br %454, ^bb1(%c92_i8_263 : i8), ^bb156
  ^bb158:  // pred: ^bb152
    %455 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_264 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %456 = arith.cmpi uge, %455, %c3_i64_264 : i64
    %c80_i8_265 = arith.constant 80 : i8
    cf.cond_br %456, ^bb159, ^bb1(%c80_i8_265 : i8)
  ^bb159:  // pred: ^bb158
    %457 = arith.subi %455, %c3_i64_264 : i64
    llvm.store %457, %arg1 : i64, !llvm.ptr
    cf.br ^bb157
  ^bb160:  // pred: ^bb166
    %458 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_266 = arith.constant 1 : i64
    %459 = arith.subi %458, %c1_i64_266 : i64
    %460 = llvm.getelementptr %arg2[%459] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %459, %arg3 : i64, !llvm.ptr
    %461 = llvm.load %460 : !llvm.ptr -> i256
    %462 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_267 = arith.constant 1 : i64
    %463 = arith.subi %462, %c1_i64_267 : i64
    %464 = llvm.getelementptr %arg2[%463] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %463, %arg3 : i64, !llvm.ptr
    %465 = llvm.load %464 : !llvm.ptr -> i256
    %466 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_268 = arith.constant 1 : i64
    %467 = arith.subi %466, %c1_i64_268 : i64
    %468 = llvm.getelementptr %arg2[%467] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %467, %arg3 : i64, !llvm.ptr
    %469 = llvm.load %468 : !llvm.ptr -> i256
    %c18446744073709551615_i256_269 = arith.constant 18446744073709551615 : i256
    %470 = arith.cmpi sgt, %469, %c18446744073709551615_i256_269 : i256
    %c84_i8_270 = arith.constant 84 : i8
    cf.cond_br %470, ^bb1(%c84_i8_270 : i8), ^bb161
  ^bb161:  // pred: ^bb160
    %471 = arith.trunci %469 : i256 to i64
    %c0_i64_271 = arith.constant 0 : i64
    %472 = arith.cmpi slt, %471, %c0_i64_271 : i64
    %c84_i8_272 = arith.constant 84 : i8
    cf.cond_br %472, ^bb1(%c84_i8_272 : i8), ^bb162
  ^bb162:  // pred: ^bb161
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_273 = arith.constant 32 : i64
    %473 = arith.addi %471, %c31_i64 : i64
    %474 = arith.divui %473, %c32_i64_273 : i64
    %c3_i64_274 = arith.constant 3 : i64
    %475 = arith.muli %474, %c3_i64_274 : i64
    %476 = llvm.load %arg1 : !llvm.ptr -> i64
    %477 = arith.cmpi ult, %476, %475 : i64
    scf.if %477 {
    } else {
      %778 = arith.subi %476, %475 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_275 = arith.constant 80 : i8
    cf.cond_br %477, ^bb1(%c80_i8_275 : i8), ^bb163
  ^bb163:  // pred: ^bb162
    %c1_i256_276 = arith.constant 1 : i256
    %478 = llvm.alloca %c1_i256_276 x i256 : (i256) -> !llvm.ptr
    llvm.store %465, %478 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i64_277 = arith.constant 0 : i64
    %479 = arith.cmpi ne, %471, %c0_i64_277 : i64
    cf.cond_br %479, ^bb244, ^bb164
  ^bb164:  // 2 preds: ^bb163, ^bb248
    %480 = arith.trunci %461 : i256 to i64
    %481 = call @dora_fn_returndata_copy(%arg0, %480, %478, %471) : (!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
    %482 = llvm.getelementptr %481[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %483 = llvm.load %482 : !llvm.ptr -> i8
    %c0_i8_278 = arith.constant 0 : i8
    %484 = arith.cmpi ne, %483, %c0_i8_278 : i8
    cf.cond_br %484, ^bb1(%483 : i8), ^bb165
  ^bb165:  // pred: ^bb164
    cf.br ^bb169
  ^bb166:  // pred: ^bb168
    %c1024_i64_279 = arith.constant 1024 : i64
    %485 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-3_i64 = arith.constant -3 : i64
    %486 = arith.addi %485, %c-3_i64 : i64
    %c3_i64_280 = arith.constant 3 : i64
    %487 = arith.cmpi ult, %485, %c3_i64_280 : i64
    %c91_i8_281 = arith.constant 91 : i8
    cf.cond_br %487, ^bb1(%c91_i8_281 : i8), ^bb160
  ^bb167:  // pred: ^bb156
    %488 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_282 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %489 = arith.cmpi uge, %488, %c3_i64_282 : i64
    %c80_i8_283 = arith.constant 80 : i8
    cf.cond_br %489, ^bb168, ^bb1(%c80_i8_283 : i8)
  ^bb168:  // pred: ^bb167
    %490 = arith.subi %488, %c3_i64_282 : i64
    llvm.store %490, %arg1 : i64, !llvm.ptr
    cf.br ^bb166
  ^bb169:  // pred: ^bb165
    %c0_i64_284 = arith.constant 0 : i64
    %c1_i8_285 = arith.constant 1 : i8
    %491 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_284, %c0_i64_284, %491, %c1_i8_285) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8_285 : i8
  ^bb170:  // pred: ^bb11
    %c18446744073709551615_i256_286 = arith.constant 18446744073709551615 : i256
    %492 = arith.cmpi sgt, %24, %c18446744073709551615_i256_286 : i256
    %c84_i8_287 = arith.constant 84 : i8
    cf.cond_br %492, ^bb1(%c84_i8_287 : i8), ^bb171
  ^bb171:  // pred: ^bb170
    %493 = arith.trunci %24 : i256 to i64
    %c0_i64_288 = arith.constant 0 : i64
    %494 = arith.cmpi slt, %493, %c0_i64_288 : i64
    %c84_i8_289 = arith.constant 84 : i8
    cf.cond_br %494, ^bb1(%c84_i8_289 : i8), ^bb172
  ^bb172:  // pred: ^bb171
    %495 = arith.addi %493, %c32_i64 : i64
    %c0_i64_290 = arith.constant 0 : i64
    %496 = arith.cmpi slt, %495, %c0_i64_290 : i64
    %c84_i8_291 = arith.constant 84 : i8
    cf.cond_br %496, ^bb1(%c84_i8_291 : i8), ^bb173
  ^bb173:  // pred: ^bb172
    %c31_i64_292 = arith.constant 31 : i64
    %c32_i64_293 = arith.constant 32 : i64
    %497 = arith.addi %495, %c31_i64_292 : i64
    %498 = arith.divui %497, %c32_i64_293 : i64
    %c32_i64_294 = arith.constant 32 : i64
    %499 = arith.muli %498, %c32_i64_294 : i64
    %500 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_295 = arith.constant 31 : i64
    %c32_i64_296 = arith.constant 32 : i64
    %501 = arith.addi %500, %c31_i64_295 : i64
    %502 = arith.divui %501, %c32_i64_296 : i64
    %503 = arith.muli %502, %c32_i64_294 : i64
    %504 = arith.cmpi ult, %503, %499 : i64
    cf.cond_br %504, ^bb175, ^bb174
  ^bb174:  // 2 preds: ^bb173, ^bb177
    cf.br ^bb12
  ^bb175:  // pred: ^bb173
    %c3_i64_297 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %505 = arith.muli %502, %502 : i64
    %506 = arith.divui %505, %c512_i64 : i64
    %507 = arith.muli %502, %c3_i64_297 : i64
    %508 = arith.addi %506, %507 : i64
    %c3_i64_298 = arith.constant 3 : i64
    %c512_i64_299 = arith.constant 512 : i64
    %509 = arith.muli %498, %498 : i64
    %510 = arith.divui %509, %c512_i64_299 : i64
    %511 = arith.muli %498, %c3_i64_298 : i64
    %512 = arith.addi %510, %511 : i64
    %513 = arith.subi %512, %508 : i64
    %514 = llvm.load %arg1 : !llvm.ptr -> i64
    %515 = arith.cmpi ult, %514, %513 : i64
    scf.if %515 {
    } else {
      %778 = arith.subi %514, %513 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_300 = arith.constant 80 : i8
    cf.cond_br %515, ^bb1(%c80_i8_300 : i8), ^bb176
  ^bb176:  // pred: ^bb175
    %516 = call @dora_fn_extend_memory(%arg0, %499) : (!llvm.ptr, i64) -> !llvm.ptr
    %517 = llvm.getelementptr %516[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %518 = llvm.load %517 : !llvm.ptr -> i8
    %c0_i8_301 = arith.constant 0 : i8
    %519 = arith.cmpi ne, %518, %c0_i8_301 : i8
    cf.cond_br %519, ^bb1(%518 : i8), ^bb177
  ^bb177:  // pred: ^bb176
    cf.br ^bb174
  ^bb178:  // pred: ^bb24
    %c18446744073709551615_i256_302 = arith.constant 18446744073709551615 : i256
    %520 = arith.cmpi sgt, %61, %c18446744073709551615_i256_302 : i256
    %c84_i8_303 = arith.constant 84 : i8
    cf.cond_br %520, ^bb1(%c84_i8_303 : i8), ^bb179
  ^bb179:  // pred: ^bb178
    %521 = arith.trunci %61 : i256 to i64
    %c0_i64_304 = arith.constant 0 : i64
    %522 = arith.cmpi slt, %521, %c0_i64_304 : i64
    %c84_i8_305 = arith.constant 84 : i8
    cf.cond_br %522, ^bb1(%c84_i8_305 : i8), ^bb180
  ^bb180:  // pred: ^bb179
    %523 = arith.addi %521, %c32_i64_27 : i64
    %c0_i64_306 = arith.constant 0 : i64
    %524 = arith.cmpi slt, %523, %c0_i64_306 : i64
    %c84_i8_307 = arith.constant 84 : i8
    cf.cond_br %524, ^bb1(%c84_i8_307 : i8), ^bb181
  ^bb181:  // pred: ^bb180
    %c31_i64_308 = arith.constant 31 : i64
    %c32_i64_309 = arith.constant 32 : i64
    %525 = arith.addi %523, %c31_i64_308 : i64
    %526 = arith.divui %525, %c32_i64_309 : i64
    %c32_i64_310 = arith.constant 32 : i64
    %527 = arith.muli %526, %c32_i64_310 : i64
    %528 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_311 = arith.constant 31 : i64
    %c32_i64_312 = arith.constant 32 : i64
    %529 = arith.addi %528, %c31_i64_311 : i64
    %530 = arith.divui %529, %c32_i64_312 : i64
    %531 = arith.muli %530, %c32_i64_310 : i64
    %532 = arith.cmpi ult, %531, %527 : i64
    cf.cond_br %532, ^bb183, ^bb182
  ^bb182:  // 2 preds: ^bb181, ^bb185
    cf.br ^bb25
  ^bb183:  // pred: ^bb181
    %c3_i64_313 = arith.constant 3 : i64
    %c512_i64_314 = arith.constant 512 : i64
    %533 = arith.muli %530, %530 : i64
    %534 = arith.divui %533, %c512_i64_314 : i64
    %535 = arith.muli %530, %c3_i64_313 : i64
    %536 = arith.addi %534, %535 : i64
    %c3_i64_315 = arith.constant 3 : i64
    %c512_i64_316 = arith.constant 512 : i64
    %537 = arith.muli %526, %526 : i64
    %538 = arith.divui %537, %c512_i64_316 : i64
    %539 = arith.muli %526, %c3_i64_315 : i64
    %540 = arith.addi %538, %539 : i64
    %541 = arith.subi %540, %536 : i64
    %542 = llvm.load %arg1 : !llvm.ptr -> i64
    %543 = arith.cmpi ult, %542, %541 : i64
    scf.if %543 {
    } else {
      %778 = arith.subi %542, %541 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_317 = arith.constant 80 : i8
    cf.cond_br %543, ^bb1(%c80_i8_317 : i8), ^bb184
  ^bb184:  // pred: ^bb183
    %544 = call @dora_fn_extend_memory(%arg0, %527) : (!llvm.ptr, i64) -> !llvm.ptr
    %545 = llvm.getelementptr %544[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %546 = llvm.load %545 : !llvm.ptr -> i8
    %c0_i8_318 = arith.constant 0 : i8
    %547 = arith.cmpi ne, %546, %c0_i8_318 : i8
    cf.cond_br %547, ^bb1(%546 : i8), ^bb185
  ^bb185:  // pred: ^bb184
    cf.br ^bb182
  ^bb186:  // pred: ^bb37
    %c18446744073709551615_i256_319 = arith.constant 18446744073709551615 : i256
    %548 = arith.cmpi sgt, %98, %c18446744073709551615_i256_319 : i256
    %c84_i8_320 = arith.constant 84 : i8
    cf.cond_br %548, ^bb1(%c84_i8_320 : i8), ^bb187
  ^bb187:  // pred: ^bb186
    %549 = arith.trunci %98 : i256 to i64
    %c0_i64_321 = arith.constant 0 : i64
    %550 = arith.cmpi slt, %549, %c0_i64_321 : i64
    %c84_i8_322 = arith.constant 84 : i8
    cf.cond_br %550, ^bb1(%c84_i8_322 : i8), ^bb188
  ^bb188:  // pred: ^bb187
    %551 = arith.addi %549, %c32_i64_49 : i64
    %c0_i64_323 = arith.constant 0 : i64
    %552 = arith.cmpi slt, %551, %c0_i64_323 : i64
    %c84_i8_324 = arith.constant 84 : i8
    cf.cond_br %552, ^bb1(%c84_i8_324 : i8), ^bb189
  ^bb189:  // pred: ^bb188
    %c31_i64_325 = arith.constant 31 : i64
    %c32_i64_326 = arith.constant 32 : i64
    %553 = arith.addi %551, %c31_i64_325 : i64
    %554 = arith.divui %553, %c32_i64_326 : i64
    %c32_i64_327 = arith.constant 32 : i64
    %555 = arith.muli %554, %c32_i64_327 : i64
    %556 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_328 = arith.constant 31 : i64
    %c32_i64_329 = arith.constant 32 : i64
    %557 = arith.addi %556, %c31_i64_328 : i64
    %558 = arith.divui %557, %c32_i64_329 : i64
    %559 = arith.muli %558, %c32_i64_327 : i64
    %560 = arith.cmpi ult, %559, %555 : i64
    cf.cond_br %560, ^bb191, ^bb190
  ^bb190:  // 2 preds: ^bb189, ^bb193
    cf.br ^bb38
  ^bb191:  // pred: ^bb189
    %c3_i64_330 = arith.constant 3 : i64
    %c512_i64_331 = arith.constant 512 : i64
    %561 = arith.muli %558, %558 : i64
    %562 = arith.divui %561, %c512_i64_331 : i64
    %563 = arith.muli %558, %c3_i64_330 : i64
    %564 = arith.addi %562, %563 : i64
    %c3_i64_332 = arith.constant 3 : i64
    %c512_i64_333 = arith.constant 512 : i64
    %565 = arith.muli %554, %554 : i64
    %566 = arith.divui %565, %c512_i64_333 : i64
    %567 = arith.muli %554, %c3_i64_332 : i64
    %568 = arith.addi %566, %567 : i64
    %569 = arith.subi %568, %564 : i64
    %570 = llvm.load %arg1 : !llvm.ptr -> i64
    %571 = arith.cmpi ult, %570, %569 : i64
    scf.if %571 {
    } else {
      %778 = arith.subi %570, %569 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_334 = arith.constant 80 : i8
    cf.cond_br %571, ^bb1(%c80_i8_334 : i8), ^bb192
  ^bb192:  // pred: ^bb191
    %572 = call @dora_fn_extend_memory(%arg0, %555) : (!llvm.ptr, i64) -> !llvm.ptr
    %573 = llvm.getelementptr %572[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %574 = llvm.load %573 : !llvm.ptr -> i8
    %c0_i8_335 = arith.constant 0 : i8
    %575 = arith.cmpi ne, %574, %c0_i8_335 : i8
    cf.cond_br %575, ^bb1(%574 : i8), ^bb193
  ^bb193:  // pred: ^bb192
    cf.br ^bb190
  ^bb194:  // pred: ^bb57
    %c49152_i64 = arith.constant 49152 : i64
    %576 = arith.cmpi ugt, %156, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %576, ^bb1(%c100_i8 : i8), ^bb195
  ^bb195:  // pred: ^bb194
    %c31_i64_336 = arith.constant 31 : i64
    %c32_i64_337 = arith.constant 32 : i64
    %577 = arith.addi %156, %c31_i64_336 : i64
    %578 = arith.divui %577, %c32_i64_337 : i64
    %c2_i64_338 = arith.constant 2 : i64
    %579 = arith.muli %578, %c2_i64_338 : i64
    %580 = llvm.load %arg1 : !llvm.ptr -> i64
    %581 = arith.cmpi ult, %580, %579 : i64
    scf.if %581 {
    } else {
      %778 = arith.subi %580, %579 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_339 = arith.constant 80 : i8
    cf.cond_br %581, ^bb1(%c80_i8_339 : i8), ^bb196
  ^bb196:  // pred: ^bb195
    %c18446744073709551615_i256_340 = arith.constant 18446744073709551615 : i256
    %582 = arith.cmpi sgt, %148, %c18446744073709551615_i256_340 : i256
    %c84_i8_341 = arith.constant 84 : i8
    cf.cond_br %582, ^bb1(%c84_i8_341 : i8), ^bb197
  ^bb197:  // pred: ^bb196
    %583 = arith.trunci %148 : i256 to i64
    %c0_i64_342 = arith.constant 0 : i64
    %584 = arith.cmpi slt, %583, %c0_i64_342 : i64
    %c84_i8_343 = arith.constant 84 : i8
    cf.cond_br %584, ^bb1(%c84_i8_343 : i8), ^bb198
  ^bb198:  // pred: ^bb197
    %585 = arith.addi %583, %156 : i64
    %c0_i64_344 = arith.constant 0 : i64
    %586 = arith.cmpi slt, %585, %c0_i64_344 : i64
    %c84_i8_345 = arith.constant 84 : i8
    cf.cond_br %586, ^bb1(%c84_i8_345 : i8), ^bb199
  ^bb199:  // pred: ^bb198
    %c31_i64_346 = arith.constant 31 : i64
    %c32_i64_347 = arith.constant 32 : i64
    %587 = arith.addi %585, %c31_i64_346 : i64
    %588 = arith.divui %587, %c32_i64_347 : i64
    %c32_i64_348 = arith.constant 32 : i64
    %589 = arith.muli %588, %c32_i64_348 : i64
    %590 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_349 = arith.constant 31 : i64
    %c32_i64_350 = arith.constant 32 : i64
    %591 = arith.addi %590, %c31_i64_349 : i64
    %592 = arith.divui %591, %c32_i64_350 : i64
    %593 = arith.muli %592, %c32_i64_348 : i64
    %594 = arith.cmpi ult, %593, %589 : i64
    cf.cond_br %594, ^bb201, ^bb200
  ^bb200:  // 2 preds: ^bb199, ^bb203
    cf.br ^bb58
  ^bb201:  // pred: ^bb199
    %c3_i64_351 = arith.constant 3 : i64
    %c512_i64_352 = arith.constant 512 : i64
    %595 = arith.muli %592, %592 : i64
    %596 = arith.divui %595, %c512_i64_352 : i64
    %597 = arith.muli %592, %c3_i64_351 : i64
    %598 = arith.addi %596, %597 : i64
    %c3_i64_353 = arith.constant 3 : i64
    %c512_i64_354 = arith.constant 512 : i64
    %599 = arith.muli %588, %588 : i64
    %600 = arith.divui %599, %c512_i64_354 : i64
    %601 = arith.muli %588, %c3_i64_353 : i64
    %602 = arith.addi %600, %601 : i64
    %603 = arith.subi %602, %598 : i64
    %604 = llvm.load %arg1 : !llvm.ptr -> i64
    %605 = arith.cmpi ult, %604, %603 : i64
    scf.if %605 {
    } else {
      %778 = arith.subi %604, %603 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_355 = arith.constant 80 : i8
    cf.cond_br %605, ^bb1(%c80_i8_355 : i8), ^bb202
  ^bb202:  // pred: ^bb201
    %606 = call @dora_fn_extend_memory(%arg0, %589) : (!llvm.ptr, i64) -> !llvm.ptr
    %607 = llvm.getelementptr %606[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %608 = llvm.load %607 : !llvm.ptr -> i8
    %c0_i8_356 = arith.constant 0 : i8
    %609 = arith.cmpi ne, %608, %c0_i8_356 : i8
    cf.cond_br %609, ^bb1(%608 : i8), ^bb203
  ^bb203:  // pred: ^bb202
    cf.br ^bb200
  ^bb204:  // pred: ^bb91
    %c18446744073709551615_i256_357 = arith.constant 18446744073709551615 : i256
    %610 = arith.cmpi sgt, %253, %c18446744073709551615_i256_357 : i256
    %c84_i8_358 = arith.constant 84 : i8
    cf.cond_br %610, ^bb1(%c84_i8_358 : i8), ^bb205
  ^bb205:  // pred: ^bb204
    %611 = arith.trunci %253 : i256 to i64
    %c0_i64_359 = arith.constant 0 : i64
    %612 = arith.cmpi slt, %611, %c0_i64_359 : i64
    %c84_i8_360 = arith.constant 84 : i8
    cf.cond_br %612, ^bb1(%c84_i8_360 : i8), ^bb206
  ^bb206:  // pred: ^bb205
    %613 = arith.addi %611, %267 : i64
    %c0_i64_361 = arith.constant 0 : i64
    %614 = arith.cmpi slt, %613, %c0_i64_361 : i64
    %c84_i8_362 = arith.constant 84 : i8
    cf.cond_br %614, ^bb1(%c84_i8_362 : i8), ^bb207
  ^bb207:  // pred: ^bb206
    %c31_i64_363 = arith.constant 31 : i64
    %c32_i64_364 = arith.constant 32 : i64
    %615 = arith.addi %613, %c31_i64_363 : i64
    %616 = arith.divui %615, %c32_i64_364 : i64
    %c32_i64_365 = arith.constant 32 : i64
    %617 = arith.muli %616, %c32_i64_365 : i64
    %618 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_366 = arith.constant 31 : i64
    %c32_i64_367 = arith.constant 32 : i64
    %619 = arith.addi %618, %c31_i64_366 : i64
    %620 = arith.divui %619, %c32_i64_367 : i64
    %621 = arith.muli %620, %c32_i64_365 : i64
    %622 = arith.cmpi ult, %621, %617 : i64
    cf.cond_br %622, ^bb209, ^bb208
  ^bb208:  // 2 preds: ^bb207, ^bb211
    cf.br ^bb92
  ^bb209:  // pred: ^bb207
    %c3_i64_368 = arith.constant 3 : i64
    %c512_i64_369 = arith.constant 512 : i64
    %623 = arith.muli %620, %620 : i64
    %624 = arith.divui %623, %c512_i64_369 : i64
    %625 = arith.muli %620, %c3_i64_368 : i64
    %626 = arith.addi %624, %625 : i64
    %c3_i64_370 = arith.constant 3 : i64
    %c512_i64_371 = arith.constant 512 : i64
    %627 = arith.muli %616, %616 : i64
    %628 = arith.divui %627, %c512_i64_371 : i64
    %629 = arith.muli %616, %c3_i64_370 : i64
    %630 = arith.addi %628, %629 : i64
    %631 = arith.subi %630, %626 : i64
    %632 = llvm.load %arg1 : !llvm.ptr -> i64
    %633 = arith.cmpi ult, %632, %631 : i64
    scf.if %633 {
    } else {
      %778 = arith.subi %632, %631 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_372 = arith.constant 80 : i8
    cf.cond_br %633, ^bb1(%c80_i8_372 : i8), ^bb210
  ^bb210:  // pred: ^bb209
    %634 = call @dora_fn_extend_memory(%arg0, %617) : (!llvm.ptr, i64) -> !llvm.ptr
    %635 = llvm.getelementptr %634[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %636 = llvm.load %635 : !llvm.ptr -> i8
    %c0_i8_373 = arith.constant 0 : i8
    %637 = arith.cmpi ne, %636, %c0_i8_373 : i8
    cf.cond_br %637, ^bb1(%636 : i8), ^bb211
  ^bb211:  // pred: ^bb210
    cf.br ^bb208
  ^bb212:  // pred: ^bb94
    %c18446744073709551615_i256_374 = arith.constant 18446744073709551615 : i256
    %638 = arith.cmpi sgt, %261, %c18446744073709551615_i256_374 : i256
    %c84_i8_375 = arith.constant 84 : i8
    cf.cond_br %638, ^bb1(%c84_i8_375 : i8), ^bb213
  ^bb213:  // pred: ^bb212
    %639 = arith.trunci %261 : i256 to i64
    %c0_i64_376 = arith.constant 0 : i64
    %640 = arith.cmpi slt, %639, %c0_i64_376 : i64
    %c84_i8_377 = arith.constant 84 : i8
    cf.cond_br %640, ^bb1(%c84_i8_377 : i8), ^bb214
  ^bb214:  // pred: ^bb213
    %641 = arith.addi %639, %271 : i64
    %c0_i64_378 = arith.constant 0 : i64
    %642 = arith.cmpi slt, %641, %c0_i64_378 : i64
    %c84_i8_379 = arith.constant 84 : i8
    cf.cond_br %642, ^bb1(%c84_i8_379 : i8), ^bb215
  ^bb215:  // pred: ^bb214
    %c31_i64_380 = arith.constant 31 : i64
    %c32_i64_381 = arith.constant 32 : i64
    %643 = arith.addi %641, %c31_i64_380 : i64
    %644 = arith.divui %643, %c32_i64_381 : i64
    %c32_i64_382 = arith.constant 32 : i64
    %645 = arith.muli %644, %c32_i64_382 : i64
    %646 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_383 = arith.constant 31 : i64
    %c32_i64_384 = arith.constant 32 : i64
    %647 = arith.addi %646, %c31_i64_383 : i64
    %648 = arith.divui %647, %c32_i64_384 : i64
    %649 = arith.muli %648, %c32_i64_382 : i64
    %650 = arith.cmpi ult, %649, %645 : i64
    cf.cond_br %650, ^bb217, ^bb216
  ^bb216:  // 2 preds: ^bb215, ^bb219
    cf.br ^bb95
  ^bb217:  // pred: ^bb215
    %c3_i64_385 = arith.constant 3 : i64
    %c512_i64_386 = arith.constant 512 : i64
    %651 = arith.muli %648, %648 : i64
    %652 = arith.divui %651, %c512_i64_386 : i64
    %653 = arith.muli %648, %c3_i64_385 : i64
    %654 = arith.addi %652, %653 : i64
    %c3_i64_387 = arith.constant 3 : i64
    %c512_i64_388 = arith.constant 512 : i64
    %655 = arith.muli %644, %644 : i64
    %656 = arith.divui %655, %c512_i64_388 : i64
    %657 = arith.muli %644, %c3_i64_387 : i64
    %658 = arith.addi %656, %657 : i64
    %659 = arith.subi %658, %654 : i64
    %660 = llvm.load %arg1 : !llvm.ptr -> i64
    %661 = arith.cmpi ult, %660, %659 : i64
    scf.if %661 {
    } else {
      %778 = arith.subi %660, %659 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_389 = arith.constant 80 : i8
    cf.cond_br %661, ^bb1(%c80_i8_389 : i8), ^bb218
  ^bb218:  // pred: ^bb217
    %662 = call @dora_fn_extend_memory(%arg0, %645) : (!llvm.ptr, i64) -> !llvm.ptr
    %663 = llvm.getelementptr %662[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %664 = llvm.load %663 : !llvm.ptr -> i8
    %c0_i8_390 = arith.constant 0 : i8
    %665 = arith.cmpi ne, %664, %c0_i8_390 : i8
    cf.cond_br %665, ^bb1(%664 : i8), ^bb219
  ^bb219:  // pred: ^bb218
    cf.br ^bb216
  ^bb220:  // pred: ^bb117
    %c18446744073709551615_i256_391 = arith.constant 18446744073709551615 : i256
    %666 = arith.cmpi sgt, %341, %c18446744073709551615_i256_391 : i256
    %c84_i8_392 = arith.constant 84 : i8
    cf.cond_br %666, ^bb1(%c84_i8_392 : i8), ^bb221
  ^bb221:  // pred: ^bb220
    %667 = arith.trunci %341 : i256 to i64
    %c0_i64_393 = arith.constant 0 : i64
    %668 = arith.cmpi slt, %667, %c0_i64_393 : i64
    %c84_i8_394 = arith.constant 84 : i8
    cf.cond_br %668, ^bb1(%c84_i8_394 : i8), ^bb222
  ^bb222:  // pred: ^bb221
    %669 = arith.addi %667, %c32_i64_189 : i64
    %c0_i64_395 = arith.constant 0 : i64
    %670 = arith.cmpi slt, %669, %c0_i64_395 : i64
    %c84_i8_396 = arith.constant 84 : i8
    cf.cond_br %670, ^bb1(%c84_i8_396 : i8), ^bb223
  ^bb223:  // pred: ^bb222
    %c31_i64_397 = arith.constant 31 : i64
    %c32_i64_398 = arith.constant 32 : i64
    %671 = arith.addi %669, %c31_i64_397 : i64
    %672 = arith.divui %671, %c32_i64_398 : i64
    %c32_i64_399 = arith.constant 32 : i64
    %673 = arith.muli %672, %c32_i64_399 : i64
    %674 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_400 = arith.constant 31 : i64
    %c32_i64_401 = arith.constant 32 : i64
    %675 = arith.addi %674, %c31_i64_400 : i64
    %676 = arith.divui %675, %c32_i64_401 : i64
    %677 = arith.muli %676, %c32_i64_399 : i64
    %678 = arith.cmpi ult, %677, %673 : i64
    cf.cond_br %678, ^bb225, ^bb224
  ^bb224:  // 2 preds: ^bb223, ^bb227
    cf.br ^bb118
  ^bb225:  // pred: ^bb223
    %c3_i64_402 = arith.constant 3 : i64
    %c512_i64_403 = arith.constant 512 : i64
    %679 = arith.muli %676, %676 : i64
    %680 = arith.divui %679, %c512_i64_403 : i64
    %681 = arith.muli %676, %c3_i64_402 : i64
    %682 = arith.addi %680, %681 : i64
    %c3_i64_404 = arith.constant 3 : i64
    %c512_i64_405 = arith.constant 512 : i64
    %683 = arith.muli %672, %672 : i64
    %684 = arith.divui %683, %c512_i64_405 : i64
    %685 = arith.muli %672, %c3_i64_404 : i64
    %686 = arith.addi %684, %685 : i64
    %687 = arith.subi %686, %682 : i64
    %688 = llvm.load %arg1 : !llvm.ptr -> i64
    %689 = arith.cmpi ult, %688, %687 : i64
    scf.if %689 {
    } else {
      %778 = arith.subi %688, %687 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_406 = arith.constant 80 : i8
    cf.cond_br %689, ^bb1(%c80_i8_406 : i8), ^bb226
  ^bb226:  // pred: ^bb225
    %690 = call @dora_fn_extend_memory(%arg0, %673) : (!llvm.ptr, i64) -> !llvm.ptr
    %691 = llvm.getelementptr %690[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %692 = llvm.load %691 : !llvm.ptr -> i8
    %c0_i8_407 = arith.constant 0 : i8
    %693 = arith.cmpi ne, %692, %c0_i8_407 : i8
    cf.cond_br %693, ^bb1(%692 : i8), ^bb227
  ^bb227:  // pred: ^bb226
    cf.br ^bb224
  ^bb228:  // pred: ^bb130
    %c18446744073709551615_i256_408 = arith.constant 18446744073709551615 : i256
    %694 = arith.cmpi sgt, %378, %c18446744073709551615_i256_408 : i256
    %c84_i8_409 = arith.constant 84 : i8
    cf.cond_br %694, ^bb1(%c84_i8_409 : i8), ^bb229
  ^bb229:  // pred: ^bb228
    %695 = arith.trunci %378 : i256 to i64
    %c0_i64_410 = arith.constant 0 : i64
    %696 = arith.cmpi slt, %695, %c0_i64_410 : i64
    %c84_i8_411 = arith.constant 84 : i8
    cf.cond_br %696, ^bb1(%c84_i8_411 : i8), ^bb230
  ^bb230:  // pred: ^bb229
    %697 = arith.addi %695, %c32_i64_213 : i64
    %c0_i64_412 = arith.constant 0 : i64
    %698 = arith.cmpi slt, %697, %c0_i64_412 : i64
    %c84_i8_413 = arith.constant 84 : i8
    cf.cond_br %698, ^bb1(%c84_i8_413 : i8), ^bb231
  ^bb231:  // pred: ^bb230
    %c31_i64_414 = arith.constant 31 : i64
    %c32_i64_415 = arith.constant 32 : i64
    %699 = arith.addi %697, %c31_i64_414 : i64
    %700 = arith.divui %699, %c32_i64_415 : i64
    %c32_i64_416 = arith.constant 32 : i64
    %701 = arith.muli %700, %c32_i64_416 : i64
    %702 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_417 = arith.constant 31 : i64
    %c32_i64_418 = arith.constant 32 : i64
    %703 = arith.addi %702, %c31_i64_417 : i64
    %704 = arith.divui %703, %c32_i64_418 : i64
    %705 = arith.muli %704, %c32_i64_416 : i64
    %706 = arith.cmpi ult, %705, %701 : i64
    cf.cond_br %706, ^bb233, ^bb232
  ^bb232:  // 2 preds: ^bb231, ^bb235
    cf.br ^bb131
  ^bb233:  // pred: ^bb231
    %c3_i64_419 = arith.constant 3 : i64
    %c512_i64_420 = arith.constant 512 : i64
    %707 = arith.muli %704, %704 : i64
    %708 = arith.divui %707, %c512_i64_420 : i64
    %709 = arith.muli %704, %c3_i64_419 : i64
    %710 = arith.addi %708, %709 : i64
    %c3_i64_421 = arith.constant 3 : i64
    %c512_i64_422 = arith.constant 512 : i64
    %711 = arith.muli %700, %700 : i64
    %712 = arith.divui %711, %c512_i64_422 : i64
    %713 = arith.muli %700, %c3_i64_421 : i64
    %714 = arith.addi %712, %713 : i64
    %715 = arith.subi %714, %710 : i64
    %716 = llvm.load %arg1 : !llvm.ptr -> i64
    %717 = arith.cmpi ult, %716, %715 : i64
    scf.if %717 {
    } else {
      %778 = arith.subi %716, %715 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_423 = arith.constant 80 : i8
    cf.cond_br %717, ^bb1(%c80_i8_423 : i8), ^bb234
  ^bb234:  // pred: ^bb233
    %718 = call @dora_fn_extend_memory(%arg0, %701) : (!llvm.ptr, i64) -> !llvm.ptr
    %719 = llvm.getelementptr %718[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %720 = llvm.load %719 : !llvm.ptr -> i8
    %c0_i8_424 = arith.constant 0 : i8
    %721 = arith.cmpi ne, %720, %c0_i8_424 : i8
    cf.cond_br %721, ^bb1(%720 : i8), ^bb235
  ^bb235:  // pred: ^bb234
    cf.br ^bb232
  ^bb236:  // pred: ^bb143
    %c18446744073709551615_i256_425 = arith.constant 18446744073709551615 : i256
    %722 = arith.cmpi sgt, %415, %c18446744073709551615_i256_425 : i256
    %c84_i8_426 = arith.constant 84 : i8
    cf.cond_br %722, ^bb1(%c84_i8_426 : i8), ^bb237
  ^bb237:  // pred: ^bb236
    %723 = arith.trunci %415 : i256 to i64
    %c0_i64_427 = arith.constant 0 : i64
    %724 = arith.cmpi slt, %723, %c0_i64_427 : i64
    %c84_i8_428 = arith.constant 84 : i8
    cf.cond_br %724, ^bb1(%c84_i8_428 : i8), ^bb238
  ^bb238:  // pred: ^bb237
    %725 = arith.addi %723, %c32_i64_237 : i64
    %c0_i64_429 = arith.constant 0 : i64
    %726 = arith.cmpi slt, %725, %c0_i64_429 : i64
    %c84_i8_430 = arith.constant 84 : i8
    cf.cond_br %726, ^bb1(%c84_i8_430 : i8), ^bb239
  ^bb239:  // pred: ^bb238
    %c31_i64_431 = arith.constant 31 : i64
    %c32_i64_432 = arith.constant 32 : i64
    %727 = arith.addi %725, %c31_i64_431 : i64
    %728 = arith.divui %727, %c32_i64_432 : i64
    %c32_i64_433 = arith.constant 32 : i64
    %729 = arith.muli %728, %c32_i64_433 : i64
    %730 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_434 = arith.constant 31 : i64
    %c32_i64_435 = arith.constant 32 : i64
    %731 = arith.addi %730, %c31_i64_434 : i64
    %732 = arith.divui %731, %c32_i64_435 : i64
    %733 = arith.muli %732, %c32_i64_433 : i64
    %734 = arith.cmpi ult, %733, %729 : i64
    cf.cond_br %734, ^bb241, ^bb240
  ^bb240:  // 2 preds: ^bb239, ^bb243
    cf.br ^bb144
  ^bb241:  // pred: ^bb239
    %c3_i64_436 = arith.constant 3 : i64
    %c512_i64_437 = arith.constant 512 : i64
    %735 = arith.muli %732, %732 : i64
    %736 = arith.divui %735, %c512_i64_437 : i64
    %737 = arith.muli %732, %c3_i64_436 : i64
    %738 = arith.addi %736, %737 : i64
    %c3_i64_438 = arith.constant 3 : i64
    %c512_i64_439 = arith.constant 512 : i64
    %739 = arith.muli %728, %728 : i64
    %740 = arith.divui %739, %c512_i64_439 : i64
    %741 = arith.muli %728, %c3_i64_438 : i64
    %742 = arith.addi %740, %741 : i64
    %743 = arith.subi %742, %738 : i64
    %744 = llvm.load %arg1 : !llvm.ptr -> i64
    %745 = arith.cmpi ult, %744, %743 : i64
    scf.if %745 {
    } else {
      %778 = arith.subi %744, %743 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_440 = arith.constant 80 : i8
    cf.cond_br %745, ^bb1(%c80_i8_440 : i8), ^bb242
  ^bb242:  // pred: ^bb241
    %746 = call @dora_fn_extend_memory(%arg0, %729) : (!llvm.ptr, i64) -> !llvm.ptr
    %747 = llvm.getelementptr %746[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %748 = llvm.load %747 : !llvm.ptr -> i8
    %c0_i8_441 = arith.constant 0 : i8
    %749 = arith.cmpi ne, %748, %c0_i8_441 : i8
    cf.cond_br %749, ^bb1(%748 : i8), ^bb243
  ^bb243:  // pred: ^bb242
    cf.br ^bb240
  ^bb244:  // pred: ^bb163
    %c18446744073709551615_i256_442 = arith.constant 18446744073709551615 : i256
    %750 = arith.cmpi sgt, %461, %c18446744073709551615_i256_442 : i256
    %c84_i8_443 = arith.constant 84 : i8
    cf.cond_br %750, ^bb1(%c84_i8_443 : i8), ^bb245
  ^bb245:  // pred: ^bb244
    %751 = arith.trunci %461 : i256 to i64
    %c0_i64_444 = arith.constant 0 : i64
    %752 = arith.cmpi slt, %751, %c0_i64_444 : i64
    %c84_i8_445 = arith.constant 84 : i8
    cf.cond_br %752, ^bb1(%c84_i8_445 : i8), ^bb246
  ^bb246:  // pred: ^bb245
    %753 = arith.addi %751, %471 : i64
    %c0_i64_446 = arith.constant 0 : i64
    %754 = arith.cmpi slt, %753, %c0_i64_446 : i64
    %c84_i8_447 = arith.constant 84 : i8
    cf.cond_br %754, ^bb1(%c84_i8_447 : i8), ^bb247
  ^bb247:  // pred: ^bb246
    %c31_i64_448 = arith.constant 31 : i64
    %c32_i64_449 = arith.constant 32 : i64
    %755 = arith.addi %753, %c31_i64_448 : i64
    %756 = arith.divui %755, %c32_i64_449 : i64
    %c32_i64_450 = arith.constant 32 : i64
    %757 = arith.muli %756, %c32_i64_450 : i64
    %758 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_451 = arith.constant 31 : i64
    %c32_i64_452 = arith.constant 32 : i64
    %759 = arith.addi %758, %c31_i64_451 : i64
    %760 = arith.divui %759, %c32_i64_452 : i64
    %761 = arith.muli %760, %c32_i64_450 : i64
    %762 = arith.cmpi ult, %761, %757 : i64
    cf.cond_br %762, ^bb249, ^bb248
  ^bb248:  // 2 preds: ^bb247, ^bb251
    cf.br ^bb164
  ^bb249:  // pred: ^bb247
    %c3_i64_453 = arith.constant 3 : i64
    %c512_i64_454 = arith.constant 512 : i64
    %763 = arith.muli %760, %760 : i64
    %764 = arith.divui %763, %c512_i64_454 : i64
    %765 = arith.muli %760, %c3_i64_453 : i64
    %766 = arith.addi %764, %765 : i64
    %c3_i64_455 = arith.constant 3 : i64
    %c512_i64_456 = arith.constant 512 : i64
    %767 = arith.muli %756, %756 : i64
    %768 = arith.divui %767, %c512_i64_456 : i64
    %769 = arith.muli %756, %c3_i64_455 : i64
    %770 = arith.addi %768, %769 : i64
    %771 = arith.subi %770, %766 : i64
    %772 = llvm.load %arg1 : !llvm.ptr -> i64
    %773 = arith.cmpi ult, %772, %771 : i64
    scf.if %773 {
    } else {
      %778 = arith.subi %772, %771 : i64
      llvm.store %778, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_457 = arith.constant 80 : i8
    cf.cond_br %773, ^bb1(%c80_i8_457 : i8), ^bb250
  ^bb250:  // pred: ^bb249
    %774 = call @dora_fn_extend_memory(%arg0, %757) : (!llvm.ptr, i64) -> !llvm.ptr
    %775 = llvm.getelementptr %774[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %776 = llvm.load %775 : !llvm.ptr -> i8
    %c0_i8_458 = arith.constant 0 : i8
    %777 = arith.cmpi ne, %776, %c0_i8_458 : i8
    cf.cond_br %777, ^bb1(%776 : i8), ^bb251
  ^bb251:  // pred: ^bb250
    cf.br ^bb248
  }
}
