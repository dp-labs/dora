---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 76 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36, ^bb37, ^bb38, ^bb39, ^bb40, ^bb41, ^bb42, ^bb43, ^bb44, ^bb45, ^bb46, ^bb47, ^bb48, ^bb49, ^bb50, ^bb51, ^bb52, ^bb53, ^bb54, ^bb55, ^bb56, ^bb57, ^bb58, ^bb59, ^bb60, ^bb61, ^bb62, ^bb63, ^bb64, ^bb65, ^bb66, ^bb67, ^bb68, ^bb69, ^bb70, ^bb71, ^bb72, ^bb73, ^bb74, ^bb75, ^bb76
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c0_i64_4 = arith.constant 0 : i64
    %37 = arith.cmpi slt, %36, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %37, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c32_i64 = arith.constant 32 : i64
    %38 = arith.addi %36, %c32_i64 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %39 = arith.cmpi slt, %38, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %39, ^bb1(%c84_i8_6 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_7 = arith.constant 32 : i64
    %40 = arith.addi %38, %c31_i64 : i64
    %41 = arith.divui %40, %c32_i64_7 : i64
    %42 = arith.muli %41, %c32_i64_7 : i64
    %43 = call @dora_fn_extend_memory(%arg0, %42) : (!llvm.ptr, i64) -> !llvm.ptr
    %44 = llvm.getelementptr %43[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %43[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %48 = arith.cmpi ne, %47, %c0_i8 : i8
    cf.cond_br %48, ^bb1(%47 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %49 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %45, %49 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %42, %50 : i64, !llvm.ptr
    %51 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %54, %53 {alignment = 1 : i64} : i256, !llvm.ptr
    %55 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_8 : i64
    llvm.store %56, %9 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64, %56 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    %61 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_10 : i64
    llvm.store %62, %9 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64, %62 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_11 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c32_i256 = arith.constant 32 : i256
    %64 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %65 : i256, !llvm.ptr
    %66 = llvm.getelementptr %65[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %66, %64 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_12 = arith.constant -2 : i64
    %68 = arith.addi %67, %c-2_i64_12 : i64
    llvm.store %68, %9 : i64, !llvm.ptr
    %c2_i64_13 = arith.constant 2 : i64
    %69 = arith.cmpi ult, %67, %c2_i64_13 : i64
    %c91_i8_14 = arith.constant 91 : i8
    cf.cond_br %69, ^bb1(%c91_i8_14 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    %72 = llvm.getelementptr %71[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %73 = llvm.load %72 : !llvm.ptr -> i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    %74 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> !llvm.ptr
    %76 = llvm.getelementptr %75[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %77 = llvm.load %76 : !llvm.ptr -> i256
    llvm.store %76, %74 : !llvm.ptr, !llvm.ptr
    %78 = arith.trunci %73 : i256 to i64
    %c0_i64_15 = arith.constant 0 : i64
    %79 = arith.cmpi slt, %78, %c0_i64_15 : i64
    %c84_i8_16 = arith.constant 84 : i8
    cf.cond_br %79, ^bb1(%c84_i8_16 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64_17 = arith.constant 32 : i64
    %80 = arith.addi %78, %c32_i64_17 : i64
    %c0_i64_18 = arith.constant 0 : i64
    %81 = arith.cmpi slt, %80, %c0_i64_18 : i64
    %c84_i8_19 = arith.constant 84 : i8
    cf.cond_br %81, ^bb1(%c84_i8_19 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64_20 = arith.constant 31 : i64
    %c32_i64_21 = arith.constant 32 : i64
    %82 = arith.addi %80, %c31_i64_20 : i64
    %83 = arith.divui %82, %c32_i64_21 : i64
    %84 = arith.muli %83, %c32_i64_21 : i64
    %85 = call @dora_fn_extend_memory(%arg0, %84) : (!llvm.ptr, i64) -> !llvm.ptr
    %86 = llvm.getelementptr %85[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %87 = llvm.load %86 : !llvm.ptr -> !llvm.ptr
    %88 = llvm.getelementptr %85[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %89 = llvm.load %88 : !llvm.ptr -> i8
    %c0_i8_22 = arith.constant 0 : i8
    %90 = arith.cmpi ne, %89, %c0_i8_22 : i8
    cf.cond_br %90, ^bb1(%89 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %91 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %87, %91 : !llvm.ptr, !llvm.ptr
    %92 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %84, %92 : i64, !llvm.ptr
    %93 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %94 = llvm.load %93 : !llvm.ptr -> !llvm.ptr
    %95 = llvm.getelementptr %94[%78] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %96 = llvm.intr.bswap(%77)  : (i256) -> i256
    llvm.store %96, %95 {alignment = 1 : i64} : i256, !llvm.ptr
    %97 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %98 = arith.addi %97, %c1_i64_23 : i64
    llvm.store %98, %9 : i64, !llvm.ptr
    %99 = arith.cmpi ult, %c1024_i64, %98 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %99, ^bb1(%c92_i8_24 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %101 : i256, !llvm.ptr
    %102 = llvm.getelementptr %101[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    %103 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %104 = arith.addi %103, %c1_i64_25 : i64
    llvm.store %104, %9 : i64, !llvm.ptr
    %105 = arith.cmpi ult, %c1024_i64, %104 : i64
    %c92_i8_26 = arith.constant 92 : i8
    cf.cond_br %105, ^bb1(%c92_i8_26 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c64_i256 = arith.constant 64 : i256
    %106 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %107 : i256, !llvm.ptr
    %108 = llvm.getelementptr %107[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %108, %106 : !llvm.ptr, !llvm.ptr
    %109 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_27 = arith.constant -2 : i64
    %110 = arith.addi %109, %c-2_i64_27 : i64
    llvm.store %110, %9 : i64, !llvm.ptr
    %c2_i64_28 = arith.constant 2 : i64
    %111 = arith.cmpi ult, %109, %c2_i64_28 : i64
    %c91_i8_29 = arith.constant 91 : i8
    cf.cond_br %111, ^bb1(%c91_i8_29 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %112 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> !llvm.ptr
    %114 = llvm.getelementptr %113[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %115 = llvm.load %114 : !llvm.ptr -> i256
    llvm.store %114, %112 : !llvm.ptr, !llvm.ptr
    %116 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %117 = llvm.load %116 : !llvm.ptr -> !llvm.ptr
    %118 = llvm.getelementptr %117[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %119 = llvm.load %118 : !llvm.ptr -> i256
    llvm.store %118, %116 : !llvm.ptr, !llvm.ptr
    %120 = arith.trunci %115 : i256 to i64
    %c0_i64_30 = arith.constant 0 : i64
    %121 = arith.cmpi slt, %120, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %121, ^bb1(%c84_i8_31 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %c32_i64_32 = arith.constant 32 : i64
    %122 = arith.addi %120, %c32_i64_32 : i64
    %c0_i64_33 = arith.constant 0 : i64
    %123 = arith.cmpi slt, %122, %c0_i64_33 : i64
    %c84_i8_34 = arith.constant 84 : i8
    cf.cond_br %123, ^bb1(%c84_i8_34 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c31_i64_35 = arith.constant 31 : i64
    %c32_i64_36 = arith.constant 32 : i64
    %124 = arith.addi %122, %c31_i64_35 : i64
    %125 = arith.divui %124, %c32_i64_36 : i64
    %126 = arith.muli %125, %c32_i64_36 : i64
    %127 = call @dora_fn_extend_memory(%arg0, %126) : (!llvm.ptr, i64) -> !llvm.ptr
    %128 = llvm.getelementptr %127[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %129 = llvm.load %128 : !llvm.ptr -> !llvm.ptr
    %130 = llvm.getelementptr %127[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %131 = llvm.load %130 : !llvm.ptr -> i8
    %c0_i8_37 = arith.constant 0 : i8
    %132 = arith.cmpi ne, %131, %c0_i8_37 : i8
    cf.cond_br %132, ^bb1(%131 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %133 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %129, %133 : !llvm.ptr, !llvm.ptr
    %134 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %126, %134 : i64, !llvm.ptr
    %135 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> !llvm.ptr
    %137 = llvm.getelementptr %136[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %138 = llvm.intr.bswap(%119)  : (i256) -> i256
    llvm.store %138, %137 {alignment = 1 : i64} : i256, !llvm.ptr
    %139 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_38 = arith.constant 1 : i64
    %140 = arith.addi %139, %c1_i64_38 : i64
    llvm.store %140, %9 : i64, !llvm.ptr
    %141 = arith.cmpi ult, %c1024_i64, %140 : i64
    %c92_i8_39 = arith.constant 92 : i8
    cf.cond_br %141, ^bb1(%c92_i8_39 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %c77_i256 = arith.constant 77 : i256
    %142 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %143 : i256, !llvm.ptr
    %144 = llvm.getelementptr %143[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %144, %142 : !llvm.ptr, !llvm.ptr
    %145 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %146 = arith.addi %145, %c1_i64_40 : i64
    llvm.store %146, %9 : i64, !llvm.ptr
    %147 = arith.cmpi ult, %c1024_i64, %146 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %147, ^bb1(%c92_i8_41 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_42 = arith.constant 0 : i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_42, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    %151 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %152 = arith.addi %151, %c1_i64_43 : i64
    llvm.store %152, %9 : i64, !llvm.ptr
    %153 = arith.cmpi ult, %c1024_i64, %152 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %153, ^bb1(%c92_i8_44 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i256_45 = arith.constant 0 : i256
    %154 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_45, %155 : i256, !llvm.ptr
    %156 = llvm.getelementptr %155[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %156, %154 : !llvm.ptr, !llvm.ptr
    %157 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_46 = arith.constant -2 : i64
    %158 = arith.addi %157, %c-2_i64_46 : i64
    llvm.store %158, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %159 = arith.cmpi ult, %157, %c3_i64 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %159, ^bb1(%c91_i8_47 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %160 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    %162 = llvm.getelementptr %161[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %163 = llvm.load %162 : !llvm.ptr -> i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    %164 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %165 = llvm.load %164 : !llvm.ptr -> !llvm.ptr
    %166 = llvm.getelementptr %165[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %167 = llvm.load %166 : !llvm.ptr -> i256
    llvm.store %166, %164 : !llvm.ptr, !llvm.ptr
    %168 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> !llvm.ptr
    %170 = llvm.getelementptr %169[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %171 = llvm.load %170 : !llvm.ptr -> i256
    llvm.store %170, %168 : !llvm.ptr, !llvm.ptr
    %172 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %173 = llvm.load %172 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %173, ^bb1(%c87_i8 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %174 = arith.trunci %167 : i256 to i64
    %c0_i64_48 = arith.constant 0 : i64
    %175 = arith.cmpi slt, %174, %c0_i64_48 : i64
    %c84_i8_49 = arith.constant 84 : i8
    cf.cond_br %175, ^bb1(%c84_i8_49 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %176 = arith.trunci %171 : i256 to i64
    %c0_i64_50 = arith.constant 0 : i64
    %177 = arith.cmpi slt, %176, %c0_i64_50 : i64
    %c84_i8_51 = arith.constant 84 : i8
    cf.cond_br %177, ^bb1(%c84_i8_51 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %178 = arith.addi %174, %176 : i64
    %c0_i64_52 = arith.constant 0 : i64
    %179 = arith.cmpi slt, %178, %c0_i64_52 : i64
    %c84_i8_53 = arith.constant 84 : i8
    cf.cond_br %179, ^bb1(%c84_i8_53 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c31_i64_54 = arith.constant 31 : i64
    %c32_i64_55 = arith.constant 32 : i64
    %180 = arith.addi %178, %c31_i64_54 : i64
    %181 = arith.divui %180, %c32_i64_55 : i64
    %182 = arith.muli %181, %c32_i64_55 : i64
    %183 = call @dora_fn_extend_memory(%arg0, %182) : (!llvm.ptr, i64) -> !llvm.ptr
    %184 = llvm.getelementptr %183[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %185 = llvm.load %184 : !llvm.ptr -> !llvm.ptr
    %186 = llvm.getelementptr %183[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %187 = llvm.load %186 : !llvm.ptr -> i8
    %c0_i8_56 = arith.constant 0 : i8
    %188 = arith.cmpi ne, %187, %c0_i8_56 : i8
    cf.cond_br %188, ^bb1(%187 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %189 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %185, %189 : !llvm.ptr, !llvm.ptr
    %190 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %182, %190 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %191 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %163, %191 {alignment = 1 : i64} : i256, !llvm.ptr
    %192 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> i64
    %c1_i64_57 = arith.constant 1 : i64
    %194 = llvm.alloca %c1_i64_57 x i64 : (i64) -> !llvm.ptr
    llvm.store %193, %194 {alignment = 1 : i64} : i64, !llvm.ptr
    %195 = call @dora_fn_create(%arg0, %176, %174, %191, %194) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %196 = llvm.getelementptr %195[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %197 = llvm.load %196 : !llvm.ptr -> i8
    %c0_i8_58 = arith.constant 0 : i8
    %198 = arith.cmpi ne, %197, %c0_i8_58 : i8
    cf.cond_br %198, ^bb1(%197 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %199 = llvm.load %191 : !llvm.ptr -> i256
    %200 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %201 = llvm.load %200 : !llvm.ptr -> !llvm.ptr
    llvm.store %199, %201 : i256, !llvm.ptr
    %202 = llvm.getelementptr %201[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %202, %200 : !llvm.ptr, !llvm.ptr
    %203 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %204 = arith.addi %203, %c1_i64_59 : i64
    llvm.store %204, %9 : i64, !llvm.ptr
    %205 = arith.cmpi ult, %c1024_i64, %204 : i64
    %c92_i8_60 = arith.constant 92 : i8
    cf.cond_br %205, ^bb1(%c92_i8_60 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i256_61 = arith.constant 0 : i256
    %206 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %207 = llvm.load %206 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_61, %207 : i256, !llvm.ptr
    %208 = llvm.getelementptr %207[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %208, %206 : !llvm.ptr, !llvm.ptr
    %209 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_62 = arith.constant 1 : i64
    %210 = arith.addi %209, %c1_i64_62 : i64
    llvm.store %210, %9 : i64, !llvm.ptr
    %211 = arith.cmpi ult, %c1024_i64, %210 : i64
    %c92_i8_63 = arith.constant 92 : i8
    cf.cond_br %211, ^bb1(%c92_i8_63 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i256_64 = arith.constant 0 : i256
    %212 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %213 = llvm.load %212 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_64, %213 : i256, !llvm.ptr
    %214 = llvm.getelementptr %213[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %214, %212 : !llvm.ptr, !llvm.ptr
    %215 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_65 = arith.constant 1 : i64
    %216 = arith.addi %215, %c1_i64_65 : i64
    llvm.store %216, %9 : i64, !llvm.ptr
    %217 = arith.cmpi ult, %c1024_i64, %216 : i64
    %c92_i8_66 = arith.constant 92 : i8
    cf.cond_br %217, ^bb1(%c92_i8_66 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c0_i256_67 = arith.constant 0 : i256
    %218 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %219 = llvm.load %218 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_67, %219 : i256, !llvm.ptr
    %220 = llvm.getelementptr %219[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %220, %218 : !llvm.ptr, !llvm.ptr
    %221 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_68 = arith.constant 1 : i64
    %222 = arith.addi %221, %c1_i64_68 : i64
    llvm.store %222, %9 : i64, !llvm.ptr
    %223 = arith.cmpi ult, %c1024_i64, %222 : i64
    %c92_i8_69 = arith.constant 92 : i8
    cf.cond_br %223, ^bb1(%c92_i8_69 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c0_i256_70 = arith.constant 0 : i256
    %224 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %225 = llvm.load %224 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_70, %225 : i256, !llvm.ptr
    %226 = llvm.getelementptr %225[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %226, %224 : !llvm.ptr, !llvm.ptr
    %227 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_71 = arith.constant 1 : i64
    %228 = arith.addi %227, %c1_i64_71 : i64
    llvm.store %228, %9 : i64, !llvm.ptr
    %229 = arith.cmpi ult, %c1024_i64, %228 : i64
    %c92_i8_72 = arith.constant 92 : i8
    cf.cond_br %229, ^bb1(%c92_i8_72 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %230 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %231 = llvm.load %230 : !llvm.ptr -> !llvm.ptr
    %232 = llvm.getelementptr %231[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %233 = llvm.load %232 : !llvm.ptr -> i256
    %234 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %235 = llvm.load %234 : !llvm.ptr -> !llvm.ptr
    llvm.store %233, %235 : i256, !llvm.ptr
    %236 = llvm.getelementptr %235[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %236, %234 : !llvm.ptr, !llvm.ptr
    %237 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %238 = arith.addi %237, %c1_i64_73 : i64
    llvm.store %238, %9 : i64, !llvm.ptr
    %239 = arith.cmpi ult, %c1024_i64, %238 : i64
    %c92_i8_74 = arith.constant 92 : i8
    cf.cond_br %239, ^bb1(%c92_i8_74 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %240 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %241 = llvm.load %240 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %241 : i256, !llvm.ptr
    %242 = llvm.getelementptr %241[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %242, %240 : !llvm.ptr, !llvm.ptr
    %243 = llvm.load %9 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %244 = arith.addi %243, %c-5_i64 : i64
    llvm.store %244, %9 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %245 = arith.cmpi ult, %243, %c6_i64 : i64
    %c91_i8_75 = arith.constant 91 : i8
    cf.cond_br %245, ^bb1(%c91_i8_75 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %246 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %247 = llvm.load %246 : !llvm.ptr -> !llvm.ptr
    %248 = llvm.getelementptr %247[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %249 = llvm.load %248 : !llvm.ptr -> i256
    llvm.store %248, %246 : !llvm.ptr, !llvm.ptr
    %250 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %251 = llvm.load %250 : !llvm.ptr -> !llvm.ptr
    %252 = llvm.getelementptr %251[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %253 = llvm.load %252 : !llvm.ptr -> i256
    llvm.store %252, %250 : !llvm.ptr, !llvm.ptr
    %254 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %255 = llvm.load %254 : !llvm.ptr -> !llvm.ptr
    %256 = llvm.getelementptr %255[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %257 = llvm.load %256 : !llvm.ptr -> i256
    llvm.store %256, %254 : !llvm.ptr, !llvm.ptr
    %258 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %259 = llvm.load %258 : !llvm.ptr -> !llvm.ptr
    %260 = llvm.getelementptr %259[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %261 = llvm.load %260 : !llvm.ptr -> i256
    llvm.store %260, %258 : !llvm.ptr, !llvm.ptr
    %262 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %263 = llvm.load %262 : !llvm.ptr -> !llvm.ptr
    %264 = llvm.getelementptr %263[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %265 = llvm.load %264 : !llvm.ptr -> i256
    llvm.store %264, %262 : !llvm.ptr, !llvm.ptr
    %266 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %267 = llvm.load %266 : !llvm.ptr -> !llvm.ptr
    %268 = llvm.getelementptr %267[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %269 = llvm.load %268 : !llvm.ptr -> i256
    llvm.store %268, %266 : !llvm.ptr, !llvm.ptr
    %c0_i256_76 = arith.constant 0 : i256
    %270 = arith.trunci %249 : i256 to i64
    %c0_i64_77 = arith.constant 0 : i64
    %271 = arith.cmpi slt, %270, %c0_i64_77 : i64
    %c84_i8_78 = arith.constant 84 : i8
    cf.cond_br %271, ^bb1(%c84_i8_78 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %272 = arith.trunci %257 : i256 to i64
    %c0_i64_79 = arith.constant 0 : i64
    %273 = arith.cmpi slt, %272, %c0_i64_79 : i64
    %c84_i8_80 = arith.constant 84 : i8
    cf.cond_br %273, ^bb1(%c84_i8_80 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %274 = arith.trunci %261 : i256 to i64
    %c0_i64_81 = arith.constant 0 : i64
    %275 = arith.cmpi slt, %274, %c0_i64_81 : i64
    %c84_i8_82 = arith.constant 84 : i8
    cf.cond_br %275, ^bb1(%c84_i8_82 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %276 = arith.trunci %265 : i256 to i64
    %c0_i64_83 = arith.constant 0 : i64
    %277 = arith.cmpi slt, %276, %c0_i64_83 : i64
    %c84_i8_84 = arith.constant 84 : i8
    cf.cond_br %277, ^bb1(%c84_i8_84 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %278 = arith.trunci %269 : i256 to i64
    %c0_i64_85 = arith.constant 0 : i64
    %279 = arith.cmpi slt, %278, %c0_i64_85 : i64
    %c84_i8_86 = arith.constant 84 : i8
    cf.cond_br %279, ^bb1(%c84_i8_86 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %280 = arith.addi %272, %274 : i64
    %c0_i64_87 = arith.constant 0 : i64
    %281 = arith.cmpi slt, %280, %c0_i64_87 : i64
    %c84_i8_88 = arith.constant 84 : i8
    cf.cond_br %281, ^bb1(%c84_i8_88 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %c31_i64_89 = arith.constant 31 : i64
    %c32_i64_90 = arith.constant 32 : i64
    %282 = arith.addi %280, %c31_i64_89 : i64
    %283 = arith.divui %282, %c32_i64_90 : i64
    %284 = arith.muli %283, %c32_i64_90 : i64
    %285 = call @dora_fn_extend_memory(%arg0, %284) : (!llvm.ptr, i64) -> !llvm.ptr
    %286 = llvm.getelementptr %285[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %287 = llvm.load %286 : !llvm.ptr -> !llvm.ptr
    %288 = llvm.getelementptr %285[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %289 = llvm.load %288 : !llvm.ptr -> i8
    %c0_i8_91 = arith.constant 0 : i8
    %290 = arith.cmpi ne, %289, %c0_i8_91 : i8
    cf.cond_br %290, ^bb1(%289 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %291 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %287, %291 : !llvm.ptr, !llvm.ptr
    %292 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %284, %292 : i64, !llvm.ptr
    %293 = arith.addi %276, %278 : i64
    %c0_i64_92 = arith.constant 0 : i64
    %294 = arith.cmpi slt, %293, %c0_i64_92 : i64
    %c84_i8_93 = arith.constant 84 : i8
    cf.cond_br %294, ^bb1(%c84_i8_93 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %c31_i64_94 = arith.constant 31 : i64
    %c32_i64_95 = arith.constant 32 : i64
    %295 = arith.addi %293, %c31_i64_94 : i64
    %296 = arith.divui %295, %c32_i64_95 : i64
    %297 = arith.muli %296, %c32_i64_95 : i64
    %298 = call @dora_fn_extend_memory(%arg0, %297) : (!llvm.ptr, i64) -> !llvm.ptr
    %299 = llvm.getelementptr %298[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %300 = llvm.load %299 : !llvm.ptr -> !llvm.ptr
    %301 = llvm.getelementptr %298[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %302 = llvm.load %301 : !llvm.ptr -> i8
    %c0_i8_96 = arith.constant 0 : i8
    %303 = arith.cmpi ne, %302, %c0_i8_96 : i8
    cf.cond_br %303, ^bb1(%302 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %304 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %300, %304 : !llvm.ptr, !llvm.ptr
    %305 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %297, %305 : i64, !llvm.ptr
    %306 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %307 = llvm.load %306 : !llvm.ptr -> i64
    %c1_i256_97 = arith.constant 1 : i256
    %308 = llvm.alloca %c1_i256_97 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_76, %308 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_98 = arith.constant 1 : i256
    %309 = llvm.alloca %c1_i256_98 x i256 : (i256) -> !llvm.ptr
    llvm.store %253, %309 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_99 = arith.constant 1 : i64
    %310 = llvm.alloca %c1_i64_99 x i64 : (i64) -> !llvm.ptr
    %c0_i8_100 = arith.constant 0 : i8
    %311 = call @dora_fn_call(%arg0, %270, %309, %308, %272, %274, %276, %278, %307, %310, %c0_i8_100) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %312 = llvm.getelementptr %311[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %313 = llvm.load %312 : !llvm.ptr -> i8
    %314 = llvm.getelementptr %311[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %315 = llvm.load %314 : !llvm.ptr -> i8
    %c0_i8_101 = arith.constant 0 : i8
    %316 = arith.cmpi ne, %315, %c0_i8_101 : i8
    cf.cond_br %316, ^bb1(%315 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %317 = llvm.load %310 : !llvm.ptr -> i64
    %318 = arith.extui %313 : i8 to i256
    %319 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %320 = llvm.load %319 : !llvm.ptr -> !llvm.ptr
    llvm.store %318, %320 : i256, !llvm.ptr
    %321 = llvm.getelementptr %320[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %321, %319 : !llvm.ptr, !llvm.ptr
    %322 = llvm.load %9 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %323 = arith.addi %322, %c-1_i64 : i64
    llvm.store %323, %9 : i64, !llvm.ptr
    %c1_i64_102 = arith.constant 1 : i64
    %324 = arith.cmpi ult, %322, %c1_i64_102 : i64
    %c91_i8_103 = arith.constant 91 : i8
    cf.cond_br %324, ^bb1(%c91_i8_103 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %325 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %326 = llvm.load %325 : !llvm.ptr -> !llvm.ptr
    %327 = llvm.getelementptr %326[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %328 = llvm.load %327 : !llvm.ptr -> i256
    llvm.store %327, %325 : !llvm.ptr, !llvm.ptr
    %329 = llvm.load %9 : !llvm.ptr -> i64
    %c-1_i64_104 = arith.constant -1 : i64
    %330 = arith.addi %329, %c-1_i64_104 : i64
    llvm.store %330, %9 : i64, !llvm.ptr
    %c1_i64_105 = arith.constant 1 : i64
    %331 = arith.cmpi ult, %329, %c1_i64_105 : i64
    %c91_i8_106 = arith.constant 91 : i8
    cf.cond_br %331, ^bb1(%c91_i8_106 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %332 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %333 = llvm.load %332 : !llvm.ptr -> !llvm.ptr
    %334 = llvm.getelementptr %333[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %335 = llvm.load %334 : !llvm.ptr -> i256
    llvm.store %334, %332 : !llvm.ptr, !llvm.ptr
    %336 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_107 = arith.constant 1 : i64
    %337 = arith.addi %336, %c1_i64_107 : i64
    llvm.store %337, %9 : i64, !llvm.ptr
    %338 = arith.cmpi ult, %c1024_i64, %337 : i64
    %c92_i8_108 = arith.constant 92 : i8
    cf.cond_br %338, ^bb1(%c92_i8_108 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %c0_i256_109 = arith.constant 0 : i256
    %339 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %340 = llvm.load %339 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_109, %340 : i256, !llvm.ptr
    %341 = llvm.getelementptr %340[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %341, %339 : !llvm.ptr, !llvm.ptr
    %342 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_110 = arith.constant 1 : i64
    %343 = arith.addi %342, %c1_i64_110 : i64
    llvm.store %343, %9 : i64, !llvm.ptr
    %344 = arith.cmpi ult, %c1024_i64, %343 : i64
    %c92_i8_111 = arith.constant 92 : i8
    cf.cond_br %344, ^bb1(%c92_i8_111 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %c0_i256_112 = arith.constant 0 : i256
    %345 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %346 = llvm.load %345 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_112, %346 : i256, !llvm.ptr
    %347 = llvm.getelementptr %346[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %347, %345 : !llvm.ptr, !llvm.ptr
    %348 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_113 = arith.constant -2 : i64
    %349 = arith.addi %348, %c-2_i64_113 : i64
    llvm.store %349, %9 : i64, !llvm.ptr
    %c2_i64_114 = arith.constant 2 : i64
    %350 = arith.cmpi ult, %348, %c2_i64_114 : i64
    %c91_i8_115 = arith.constant 91 : i8
    cf.cond_br %350, ^bb1(%c91_i8_115 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %351 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %352 = llvm.load %351 : !llvm.ptr -> !llvm.ptr
    %353 = llvm.getelementptr %352[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %354 = llvm.load %353 : !llvm.ptr -> i256
    llvm.store %353, %351 : !llvm.ptr, !llvm.ptr
    %355 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %356 = llvm.load %355 : !llvm.ptr -> !llvm.ptr
    %357 = llvm.getelementptr %356[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %358 = llvm.load %357 : !llvm.ptr -> i256
    llvm.store %357, %355 : !llvm.ptr, !llvm.ptr
    %359 = arith.trunci %354 : i256 to i64
    %c0_i64_116 = arith.constant 0 : i64
    %360 = arith.cmpi slt, %359, %c0_i64_116 : i64
    %c84_i8_117 = arith.constant 84 : i8
    cf.cond_br %360, ^bb1(%c84_i8_117 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %c32_i64_118 = arith.constant 32 : i64
    %361 = arith.addi %359, %c32_i64_118 : i64
    %c0_i64_119 = arith.constant 0 : i64
    %362 = arith.cmpi slt, %361, %c0_i64_119 : i64
    %c84_i8_120 = arith.constant 84 : i8
    cf.cond_br %362, ^bb1(%c84_i8_120 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %c31_i64_121 = arith.constant 31 : i64
    %c32_i64_122 = arith.constant 32 : i64
    %363 = arith.addi %361, %c31_i64_121 : i64
    %364 = arith.divui %363, %c32_i64_122 : i64
    %365 = arith.muli %364, %c32_i64_122 : i64
    %366 = call @dora_fn_extend_memory(%arg0, %365) : (!llvm.ptr, i64) -> !llvm.ptr
    %367 = llvm.getelementptr %366[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %368 = llvm.load %367 : !llvm.ptr -> !llvm.ptr
    %369 = llvm.getelementptr %366[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %370 = llvm.load %369 : !llvm.ptr -> i8
    %c0_i8_123 = arith.constant 0 : i8
    %371 = arith.cmpi ne, %370, %c0_i8_123 : i8
    cf.cond_br %371, ^bb1(%370 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %372 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %368, %372 : !llvm.ptr, !llvm.ptr
    %373 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %365, %373 : i64, !llvm.ptr
    %374 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %375 = llvm.load %374 : !llvm.ptr -> !llvm.ptr
    %376 = llvm.getelementptr %375[%359] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %377 = llvm.intr.bswap(%358)  : (i256) -> i256
    llvm.store %377, %376 {alignment = 1 : i64} : i256, !llvm.ptr
    %378 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_124 = arith.constant 1 : i64
    %379 = arith.addi %378, %c1_i64_124 : i64
    llvm.store %379, %9 : i64, !llvm.ptr
    %380 = arith.cmpi ult, %c1024_i64, %379 : i64
    %c92_i8_125 = arith.constant 92 : i8
    cf.cond_br %380, ^bb1(%c92_i8_125 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %c0_i256_126 = arith.constant 0 : i256
    %381 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %382 = llvm.load %381 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_126, %382 : i256, !llvm.ptr
    %383 = llvm.getelementptr %382[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %383, %381 : !llvm.ptr, !llvm.ptr
    %384 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_127 = arith.constant 1 : i64
    %385 = arith.addi %384, %c1_i64_127 : i64
    llvm.store %385, %9 : i64, !llvm.ptr
    %386 = arith.cmpi ult, %c1024_i64, %385 : i64
    %c92_i8_128 = arith.constant 92 : i8
    cf.cond_br %386, ^bb1(%c92_i8_128 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %c32_i256_129 = arith.constant 32 : i256
    %387 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %388 = llvm.load %387 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_129, %388 : i256, !llvm.ptr
    %389 = llvm.getelementptr %388[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %389, %387 : !llvm.ptr, !llvm.ptr
    %390 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_130 = arith.constant -2 : i64
    %391 = arith.addi %390, %c-2_i64_130 : i64
    llvm.store %391, %9 : i64, !llvm.ptr
    %c2_i64_131 = arith.constant 2 : i64
    %392 = arith.cmpi ult, %390, %c2_i64_131 : i64
    %c91_i8_132 = arith.constant 91 : i8
    cf.cond_br %392, ^bb1(%c91_i8_132 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %393 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %394 = llvm.load %393 : !llvm.ptr -> !llvm.ptr
    %395 = llvm.getelementptr %394[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %396 = llvm.load %395 : !llvm.ptr -> i256
    llvm.store %395, %393 : !llvm.ptr, !llvm.ptr
    %397 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %398 = llvm.load %397 : !llvm.ptr -> !llvm.ptr
    %399 = llvm.getelementptr %398[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %400 = llvm.load %399 : !llvm.ptr -> i256
    llvm.store %399, %397 : !llvm.ptr, !llvm.ptr
    %401 = arith.trunci %396 : i256 to i64
    %c0_i64_133 = arith.constant 0 : i64
    %402 = arith.cmpi slt, %401, %c0_i64_133 : i64
    %c84_i8_134 = arith.constant 84 : i8
    cf.cond_br %402, ^bb1(%c84_i8_134 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %c32_i64_135 = arith.constant 32 : i64
    %403 = arith.addi %401, %c32_i64_135 : i64
    %c0_i64_136 = arith.constant 0 : i64
    %404 = arith.cmpi slt, %403, %c0_i64_136 : i64
    %c84_i8_137 = arith.constant 84 : i8
    cf.cond_br %404, ^bb1(%c84_i8_137 : i8), ^bb60
  ^bb60:  // pred: ^bb59
    %c31_i64_138 = arith.constant 31 : i64
    %c32_i64_139 = arith.constant 32 : i64
    %405 = arith.addi %403, %c31_i64_138 : i64
    %406 = arith.divui %405, %c32_i64_139 : i64
    %407 = arith.muli %406, %c32_i64_139 : i64
    %408 = call @dora_fn_extend_memory(%arg0, %407) : (!llvm.ptr, i64) -> !llvm.ptr
    %409 = llvm.getelementptr %408[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %410 = llvm.load %409 : !llvm.ptr -> !llvm.ptr
    %411 = llvm.getelementptr %408[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %412 = llvm.load %411 : !llvm.ptr -> i8
    %c0_i8_140 = arith.constant 0 : i8
    %413 = arith.cmpi ne, %412, %c0_i8_140 : i8
    cf.cond_br %413, ^bb1(%412 : i8), ^bb61
  ^bb61:  // pred: ^bb60
    %414 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %410, %414 : !llvm.ptr, !llvm.ptr
    %415 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %407, %415 : i64, !llvm.ptr
    %416 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %417 = llvm.load %416 : !llvm.ptr -> !llvm.ptr
    %418 = llvm.getelementptr %417[%401] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %419 = llvm.intr.bswap(%400)  : (i256) -> i256
    llvm.store %419, %418 {alignment = 1 : i64} : i256, !llvm.ptr
    %420 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_141 = arith.constant 1 : i64
    %421 = arith.addi %420, %c1_i64_141 : i64
    llvm.store %421, %9 : i64, !llvm.ptr
    %422 = arith.cmpi ult, %c1024_i64, %421 : i64
    %c92_i8_142 = arith.constant 92 : i8
    cf.cond_br %422, ^bb1(%c92_i8_142 : i8), ^bb62
  ^bb62:  // pred: ^bb61
    %c0_i256_143 = arith.constant 0 : i256
    %423 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %424 = llvm.load %423 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_143, %424 : i256, !llvm.ptr
    %425 = llvm.getelementptr %424[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %425, %423 : !llvm.ptr, !llvm.ptr
    %426 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_144 = arith.constant 1 : i64
    %427 = arith.addi %426, %c1_i64_144 : i64
    llvm.store %427, %9 : i64, !llvm.ptr
    %428 = arith.cmpi ult, %c1024_i64, %427 : i64
    %c92_i8_145 = arith.constant 92 : i8
    cf.cond_br %428, ^bb1(%c92_i8_145 : i8), ^bb63
  ^bb63:  // pred: ^bb62
    %c64_i256_146 = arith.constant 64 : i256
    %429 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %430 = llvm.load %429 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256_146, %430 : i256, !llvm.ptr
    %431 = llvm.getelementptr %430[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %431, %429 : !llvm.ptr, !llvm.ptr
    %432 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_147 = arith.constant -2 : i64
    %433 = arith.addi %432, %c-2_i64_147 : i64
    llvm.store %433, %9 : i64, !llvm.ptr
    %c2_i64_148 = arith.constant 2 : i64
    %434 = arith.cmpi ult, %432, %c2_i64_148 : i64
    %c91_i8_149 = arith.constant 91 : i8
    cf.cond_br %434, ^bb1(%c91_i8_149 : i8), ^bb64
  ^bb64:  // pred: ^bb63
    %435 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %436 = llvm.load %435 : !llvm.ptr -> !llvm.ptr
    %437 = llvm.getelementptr %436[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %438 = llvm.load %437 : !llvm.ptr -> i256
    llvm.store %437, %435 : !llvm.ptr, !llvm.ptr
    %439 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %440 = llvm.load %439 : !llvm.ptr -> !llvm.ptr
    %441 = llvm.getelementptr %440[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %442 = llvm.load %441 : !llvm.ptr -> i256
    llvm.store %441, %439 : !llvm.ptr, !llvm.ptr
    %443 = arith.trunci %438 : i256 to i64
    %c0_i64_150 = arith.constant 0 : i64
    %444 = arith.cmpi slt, %443, %c0_i64_150 : i64
    %c84_i8_151 = arith.constant 84 : i8
    cf.cond_br %444, ^bb1(%c84_i8_151 : i8), ^bb65
  ^bb65:  // pred: ^bb64
    %c32_i64_152 = arith.constant 32 : i64
    %445 = arith.addi %443, %c32_i64_152 : i64
    %c0_i64_153 = arith.constant 0 : i64
    %446 = arith.cmpi slt, %445, %c0_i64_153 : i64
    %c84_i8_154 = arith.constant 84 : i8
    cf.cond_br %446, ^bb1(%c84_i8_154 : i8), ^bb66
  ^bb66:  // pred: ^bb65
    %c31_i64_155 = arith.constant 31 : i64
    %c32_i64_156 = arith.constant 32 : i64
    %447 = arith.addi %445, %c31_i64_155 : i64
    %448 = arith.divui %447, %c32_i64_156 : i64
    %449 = arith.muli %448, %c32_i64_156 : i64
    %450 = call @dora_fn_extend_memory(%arg0, %449) : (!llvm.ptr, i64) -> !llvm.ptr
    %451 = llvm.getelementptr %450[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %452 = llvm.load %451 : !llvm.ptr -> !llvm.ptr
    %453 = llvm.getelementptr %450[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %454 = llvm.load %453 : !llvm.ptr -> i8
    %c0_i8_157 = arith.constant 0 : i8
    %455 = arith.cmpi ne, %454, %c0_i8_157 : i8
    cf.cond_br %455, ^bb1(%454 : i8), ^bb67
  ^bb67:  // pred: ^bb66
    %456 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %452, %456 : !llvm.ptr, !llvm.ptr
    %457 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %449, %457 : i64, !llvm.ptr
    %458 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %459 = llvm.load %458 : !llvm.ptr -> !llvm.ptr
    %460 = llvm.getelementptr %459[%443] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %461 = llvm.intr.bswap(%442)  : (i256) -> i256
    llvm.store %461, %460 {alignment = 1 : i64} : i256, !llvm.ptr
    %462 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_158 = arith.constant 1 : i64
    %463 = arith.addi %462, %c1_i64_158 : i64
    llvm.store %463, %9 : i64, !llvm.ptr
    %464 = arith.cmpi ult, %c1024_i64, %463 : i64
    %c92_i8_159 = arith.constant 92 : i8
    cf.cond_br %464, ^bb1(%c92_i8_159 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %c32_i256_160 = arith.constant 32 : i256
    %465 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %466 = llvm.load %465 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256_160, %466 : i256, !llvm.ptr
    %467 = llvm.getelementptr %466[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %467, %465 : !llvm.ptr, !llvm.ptr
    %468 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_161 = arith.constant 1 : i64
    %469 = arith.addi %468, %c1_i64_161 : i64
    llvm.store %469, %9 : i64, !llvm.ptr
    %470 = arith.cmpi ult, %c1024_i64, %469 : i64
    %c92_i8_162 = arith.constant 92 : i8
    cf.cond_br %470, ^bb1(%c92_i8_162 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %c0_i256_163 = arith.constant 0 : i256
    %471 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %472 = llvm.load %471 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_163, %472 : i256, !llvm.ptr
    %473 = llvm.getelementptr %472[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %473, %471 : !llvm.ptr, !llvm.ptr
    %474 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_164 = arith.constant 1 : i64
    %475 = arith.addi %474, %c1_i64_164 : i64
    llvm.store %475, %9 : i64, !llvm.ptr
    %476 = arith.cmpi ult, %c1024_i64, %475 : i64
    %c92_i8_165 = arith.constant 92 : i8
    cf.cond_br %476, ^bb1(%c92_i8_165 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %c0_i256_166 = arith.constant 0 : i256
    %477 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %478 = llvm.load %477 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_166, %478 : i256, !llvm.ptr
    %479 = llvm.getelementptr %478[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %479, %477 : !llvm.ptr, !llvm.ptr
    %480 = llvm.load %9 : !llvm.ptr -> i64
    %c-3_i64 = arith.constant -3 : i64
    %481 = arith.addi %480, %c-3_i64 : i64
    llvm.store %481, %9 : i64, !llvm.ptr
    %c3_i64_167 = arith.constant 3 : i64
    %482 = arith.cmpi ult, %480, %c3_i64_167 : i64
    %c91_i8_168 = arith.constant 91 : i8
    cf.cond_br %482, ^bb1(%c91_i8_168 : i8), ^bb71
  ^bb71:  // pred: ^bb70
    %483 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %484 = llvm.load %483 : !llvm.ptr -> !llvm.ptr
    %485 = llvm.getelementptr %484[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %486 = llvm.load %485 : !llvm.ptr -> i256
    llvm.store %485, %483 : !llvm.ptr, !llvm.ptr
    %487 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %488 = llvm.load %487 : !llvm.ptr -> !llvm.ptr
    %489 = llvm.getelementptr %488[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %490 = llvm.load %489 : !llvm.ptr -> i256
    llvm.store %489, %487 : !llvm.ptr, !llvm.ptr
    %491 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %492 = llvm.load %491 : !llvm.ptr -> !llvm.ptr
    %493 = llvm.getelementptr %492[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %494 = llvm.load %493 : !llvm.ptr -> i256
    llvm.store %493, %491 : !llvm.ptr, !llvm.ptr
    %495 = arith.trunci %486 : i256 to i64
    %c0_i64_169 = arith.constant 0 : i64
    %496 = arith.cmpi slt, %495, %c0_i64_169 : i64
    %c84_i8_170 = arith.constant 84 : i8
    cf.cond_br %496, ^bb1(%c84_i8_170 : i8), ^bb72
  ^bb72:  // pred: ^bb71
    %497 = arith.trunci %490 : i256 to i64
    %c0_i64_171 = arith.constant 0 : i64
    %498 = arith.cmpi slt, %497, %c0_i64_171 : i64
    %c84_i8_172 = arith.constant 84 : i8
    cf.cond_br %498, ^bb1(%c84_i8_172 : i8), ^bb73
  ^bb73:  // pred: ^bb72
    %499 = arith.trunci %494 : i256 to i64
    %c0_i64_173 = arith.constant 0 : i64
    %500 = arith.cmpi slt, %499, %c0_i64_173 : i64
    %c84_i8_174 = arith.constant 84 : i8
    cf.cond_br %500, ^bb1(%c84_i8_174 : i8), ^bb74
  ^bb74:  // pred: ^bb73
    %501 = arith.addi %495, %499 : i64
    %c0_i64_175 = arith.constant 0 : i64
    %502 = arith.cmpi slt, %501, %c0_i64_175 : i64
    %c84_i8_176 = arith.constant 84 : i8
    cf.cond_br %502, ^bb1(%c84_i8_176 : i8), ^bb75
  ^bb75:  // pred: ^bb74
    %c31_i64_177 = arith.constant 31 : i64
    %c32_i64_178 = arith.constant 32 : i64
    %503 = arith.addi %501, %c31_i64_177 : i64
    %504 = arith.divui %503, %c32_i64_178 : i64
    %505 = arith.muli %504, %c32_i64_178 : i64
    %506 = call @dora_fn_extend_memory(%arg0, %505) : (!llvm.ptr, i64) -> !llvm.ptr
    %507 = llvm.getelementptr %506[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %508 = llvm.load %507 : !llvm.ptr -> !llvm.ptr
    %509 = llvm.getelementptr %506[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %510 = llvm.load %509 : !llvm.ptr -> i8
    %c0_i8_179 = arith.constant 0 : i8
    %511 = arith.cmpi ne, %510, %c0_i8_179 : i8
    cf.cond_br %511, ^bb1(%510 : i8), ^bb76
  ^bb76:  // pred: ^bb75
    %512 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %508, %512 : !llvm.ptr, !llvm.ptr
    %513 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %505, %513 : i64, !llvm.ptr
    %514 = call @dora_fn_return_data_copy(%arg0, %495, %497, %499) : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr
    %515 = llvm.getelementptr %514[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %516 = llvm.load %515 : !llvm.ptr -> i8
    %c0_i8_180 = arith.constant 0 : i8
    %517 = arith.cmpi ne, %516, %c0_i8_180 : i8
    cf.cond_br %517, ^bb1(%516 : i8), ^bb77
  ^bb77:  // pred: ^bb76
    cf.br ^bb78
  ^bb78:  // pred: ^bb77
    %c0_i64_181 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %518 = call @dora_fn_write_result(%arg0, %c0_i64_181, %c0_i64_181, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
