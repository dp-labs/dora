---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 36 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb34, ^bb36, ^bb37, ^bb39, ^bb41, ^bb42, ^bb45, ^bb46, ^bb47, ^bb50, ^bb51, ^bb53, ^bb54, ^bb55, ^bb56, ^bb57, ^bb60, ^bb61
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c7922816251414904634880670302451_i256 = arith.constant 7922816251414904634880670302451 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c7922816251414904634880670302451_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %43 = arith.cmpi ne, %c32_i64, %c0_i64_7 : i64
    cf.cond_br %43, ^bb45, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb49
    %44 = arith.trunci %38 : i256 to i64
    %45 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %46 = llvm.load %45 : !llvm.ptr -> !llvm.ptr
    %47 = llvm.getelementptr %46[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %48 = llvm.intr.bswap(%42)  : (i256) -> i256
    llvm.store %48, %47 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %49 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_8 = arith.constant 1024 : i64
    %50 = llvm.load %49 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %51 = arith.addi %50, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    llvm.store %51, %49 : i64, !llvm.ptr
    %52 = arith.cmpi ult, %50, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %52, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %53 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %c3_i64_9 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %55 = arith.cmpi uge, %54, %c3_i64_9 : i64
    %c80_i8_10 = arith.constant 80 : i8
    cf.cond_br %55, ^bb15, ^bb1(%c80_i8_10 : i8)
  ^bb15:  // pred: ^bb14
    %56 = arith.subi %54, %c3_i64_9 : i64
    llvm.store %56, %53 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c13_i256 = arith.constant 13 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c13_i256, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %60 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_11 = arith.constant 1024 : i64
    %61 = llvm.load %60 : !llvm.ptr -> i64
    %c1_i64_12 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_12 : i64
    llvm.store %62, %60 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64_11, %62 : i64
    %c92_i8_13 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_13 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %64 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %c3_i64_14 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %66 = arith.cmpi uge, %65, %c3_i64_14 : i64
    %c80_i8_15 = arith.constant 80 : i8
    cf.cond_br %66, ^bb19, ^bb1(%c80_i8_15 : i8)
  ^bb19:  // pred: ^bb18
    %67 = arith.subi %65, %c3_i64_14 : i64
    llvm.store %67, %64 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c0_i256_16 = arith.constant 0 : i256
    %68 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %69 = llvm.load %68 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_16, %69 : i256, !llvm.ptr
    %70 = llvm.getelementptr %69[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %70, %68 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %71 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_17 = arith.constant 1024 : i64
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c1_i64_18 = arith.constant 1 : i64
    %73 = arith.addi %72, %c1_i64_18 : i64
    llvm.store %73, %71 : i64, !llvm.ptr
    %74 = arith.cmpi ult, %c1024_i64_17, %73 : i64
    %c92_i8_19 = arith.constant 92 : i8
    cf.cond_br %74, ^bb1(%c92_i8_19 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %75 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> i64
    %c3_i64_20 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %77 = arith.cmpi uge, %76, %c3_i64_20 : i64
    %c80_i8_21 = arith.constant 80 : i8
    cf.cond_br %77, ^bb23, ^bb1(%c80_i8_21 : i8)
  ^bb23:  // pred: ^bb22
    %78 = arith.subi %76, %c3_i64_20 : i64
    llvm.store %78, %75 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_22 = arith.constant 0 : i256
    %79 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_22, %80 : i256, !llvm.ptr
    %81 = llvm.getelementptr %80[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %81, %79 : !llvm.ptr, !llvm.ptr
    cf.br ^bb37
  ^bb25:  // pred: ^bb27
    %82 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %83 = llvm.load %82 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %84 = arith.addi %83, %c1_i64_24 : i64
    llvm.store %84, %82 : i64, !llvm.ptr
    %85 = arith.cmpi ult, %c1024_i64_23, %84 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %85, ^bb1(%c92_i8_25 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %86 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %87 = llvm.load %86 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %88 = arith.cmpi uge, %87, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %88, ^bb27, ^bb1(%c80_i8_27 : i8)
  ^bb27:  // pred: ^bb26
    %89 = arith.subi %87, %c3_i64_26 : i64
    llvm.store %89, %86 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb36
    %90 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %91 = llvm.load %90 : !llvm.ptr -> !llvm.ptr
    %92 = llvm.getelementptr %91[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %93 = llvm.load %92 : !llvm.ptr -> i256
    llvm.store %92, %90 : !llvm.ptr, !llvm.ptr
    %94 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %95 = llvm.load %94 : !llvm.ptr -> !llvm.ptr
    %96 = llvm.getelementptr %95[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %97 = llvm.load %96 : !llvm.ptr -> i256
    llvm.store %96, %94 : !llvm.ptr, !llvm.ptr
    %98 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> !llvm.ptr
    %100 = llvm.getelementptr %99[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %101 = llvm.load %100 : !llvm.ptr -> i256
    llvm.store %100, %98 : !llvm.ptr, !llvm.ptr
    %102 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %103 = arith.cmpi ne, %102, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %103, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %104 = arith.cmpi sgt, %101, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %104, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %105 = arith.trunci %101 : i256 to i64
    %c0_i64_28 = arith.constant 0 : i64
    %106 = arith.cmpi slt, %105, %c0_i64_28 : i64
    %c84_i8_29 = arith.constant 84 : i8
    cf.cond_br %106, ^bb1(%c84_i8_29 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i64_30 = arith.constant 0 : i64
    %107 = arith.cmpi ne, %105, %c0_i64_30 : i64
    cf.cond_br %107, ^bb53, ^bb32
  ^bb32:  // 2 preds: ^bb31, ^bb59
    %c32000_i64 = arith.constant 32000 : i64
    %108 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> i64
    %110 = arith.cmpi ult, %109, %c32000_i64 : i64
    scf.if %110 {
    } else {
      %236 = arith.subi %109, %c32000_i64 : i64
      llvm.store %236, %108 : i64, !llvm.ptr
    }
    %c80_i8_31 = arith.constant 80 : i8
    cf.cond_br %110, ^bb1(%c80_i8_31 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c1_i256 = arith.constant 1 : i256
    %111 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %93, %111 {alignment = 1 : i64} : i256, !llvm.ptr
    %112 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> i64
    %114 = arith.trunci %97 : i256 to i64
    %115 = call @dora_fn_create(%arg0, %105, %114, %111, %113) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %116 = llvm.getelementptr %115[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %117 = llvm.load %116 : !llvm.ptr -> i8
    %c0_i8_32 = arith.constant 0 : i8
    %118 = arith.cmpi ne, %117, %c0_i8_32 : i8
    cf.cond_br %118, ^bb1(%117 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %119 = llvm.getelementptr %115[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %120 = llvm.load %119 : !llvm.ptr -> i64
    %121 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %122 = llvm.load %121 : !llvm.ptr -> i64
    %123 = arith.cmpi ult, %122, %120 : i64
    scf.if %123 {
    } else {
      %236 = arith.subi %122, %120 : i64
      llvm.store %236, %121 : i64, !llvm.ptr
    }
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %123, ^bb1(%c80_i8_33 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %124 = llvm.load %111 : !llvm.ptr -> i256
    %125 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> !llvm.ptr
    llvm.store %124, %126 : i256, !llvm.ptr
    %127 = llvm.getelementptr %126[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %127, %125 : !llvm.ptr, !llvm.ptr
    cf.br ^bb42
  ^bb36:  // pred: ^bb38
    %128 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_34 = arith.constant 1024 : i64
    %129 = llvm.load %128 : !llvm.ptr -> i64
    %c-2_i64_35 = arith.constant -2 : i64
    %130 = arith.addi %129, %c-2_i64_35 : i64
    %c3_i64_36 = arith.constant 3 : i64
    llvm.store %130, %128 : i64, !llvm.ptr
    %131 = arith.cmpi ult, %129, %c3_i64_36 : i64
    %c91_i8_37 = arith.constant 91 : i8
    cf.cond_br %131, ^bb1(%c91_i8_37 : i8), ^bb28
  ^bb37:  // pred: ^bb24
    %132 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %133 = llvm.load %132 : !llvm.ptr -> i64
    %c0_i64_38 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %134 = arith.cmpi uge, %133, %c0_i64_38 : i64
    %c80_i8_39 = arith.constant 80 : i8
    cf.cond_br %134, ^bb38, ^bb1(%c80_i8_39 : i8)
  ^bb38:  // pred: ^bb37
    %135 = arith.subi %133, %c0_i64_38 : i64
    llvm.store %135, %132 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb41
    %136 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %137[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %139 = llvm.load %138 : !llvm.ptr -> i256
    llvm.store %138, %136 : !llvm.ptr, !llvm.ptr
    %c1_i256_40 = arith.constant 1 : i256
    %140 = llvm.alloca %c1_i256_40 x i256 : (i256) -> !llvm.ptr
    llvm.store %139, %140 {alignment = 1 : i64} : i256, !llvm.ptr
    %141 = call @dora_fn_ext_code_hash(%arg0, %140) : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %142 = llvm.getelementptr %141[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %143 = llvm.load %142 : !llvm.ptr -> i64
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %146 = arith.cmpi ult, %145, %143 : i64
    scf.if %146 {
    } else {
      %236 = arith.subi %145, %143 : i64
      llvm.store %236, %144 : i64, !llvm.ptr
    }
    %c80_i8_41 = arith.constant 80 : i8
    cf.cond_br %146, ^bb1(%c80_i8_41 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %147 = llvm.load %140 : !llvm.ptr -> i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %147, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    cf.br ^bb44
  ^bb41:  // pred: ^bb43
    %151 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_42 = arith.constant 1024 : i64
    %152 = llvm.load %151 : !llvm.ptr -> i64
    %c0_i64_43 = arith.constant 0 : i64
    %153 = arith.addi %152, %c0_i64_43 : i64
    %c1_i64_44 = arith.constant 1 : i64
    llvm.store %153, %151 : i64, !llvm.ptr
    %154 = arith.cmpi ult, %152, %c1_i64_44 : i64
    %c91_i8_45 = arith.constant 91 : i8
    cf.cond_br %154, ^bb1(%c91_i8_45 : i8), ^bb39
  ^bb42:  // pred: ^bb35
    %155 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %156 = llvm.load %155 : !llvm.ptr -> i64
    %c0_i64_46 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %157 = arith.cmpi uge, %156, %c0_i64_46 : i64
    %c80_i8_47 = arith.constant 80 : i8
    cf.cond_br %157, ^bb43, ^bb1(%c80_i8_47 : i8)
  ^bb43:  // pred: ^bb42
    %158 = arith.subi %156, %c0_i64_46 : i64
    llvm.store %158, %155 : i64, !llvm.ptr
    cf.br ^bb41
  ^bb44:  // pred: ^bb40
    %c0_i64_48 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %159 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_48, %c0_i64_48, %160, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb45:  // pred: ^bb11
    %c18446744073709551615_i256_49 = arith.constant 18446744073709551615 : i256
    %161 = arith.cmpi sgt, %38, %c18446744073709551615_i256_49 : i256
    %c84_i8_50 = arith.constant 84 : i8
    cf.cond_br %161, ^bb1(%c84_i8_50 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %162 = arith.trunci %38 : i256 to i64
    %c0_i64_51 = arith.constant 0 : i64
    %163 = arith.cmpi slt, %162, %c0_i64_51 : i64
    %c84_i8_52 = arith.constant 84 : i8
    cf.cond_br %163, ^bb1(%c84_i8_52 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %164 = arith.addi %162, %c32_i64 : i64
    %c0_i64_53 = arith.constant 0 : i64
    %165 = arith.cmpi slt, %164, %c0_i64_53 : i64
    %c84_i8_54 = arith.constant 84 : i8
    cf.cond_br %165, ^bb1(%c84_i8_54 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_55 = arith.constant 32 : i64
    %166 = arith.addi %164, %c31_i64 : i64
    %167 = arith.divui %166, %c32_i64_55 : i64
    %c32_i64_56 = arith.constant 32 : i64
    %168 = arith.muli %167, %c32_i64_56 : i64
    %169 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %170 = llvm.load %169 : !llvm.ptr -> i64
    %c31_i64_57 = arith.constant 31 : i64
    %c32_i64_58 = arith.constant 32 : i64
    %171 = arith.addi %170, %c31_i64_57 : i64
    %172 = arith.divui %171, %c32_i64_58 : i64
    %173 = arith.muli %172, %c32_i64_56 : i64
    %174 = arith.cmpi ult, %173, %168 : i64
    cf.cond_br %174, ^bb50, ^bb49
  ^bb49:  // 2 preds: ^bb48, ^bb52
    cf.br ^bb12
  ^bb50:  // pred: ^bb48
    %c3_i64_59 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %175 = arith.muli %172, %172 : i64
    %176 = arith.divui %175, %c512_i64 : i64
    %177 = arith.muli %172, %c3_i64_59 : i64
    %178 = arith.addi %176, %177 : i64
    %c3_i64_60 = arith.constant 3 : i64
    %c512_i64_61 = arith.constant 512 : i64
    %179 = arith.muli %167, %167 : i64
    %180 = arith.divui %179, %c512_i64_61 : i64
    %181 = arith.muli %167, %c3_i64_60 : i64
    %182 = arith.addi %180, %181 : i64
    %183 = arith.subi %182, %178 : i64
    %184 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %185 = llvm.load %184 : !llvm.ptr -> i64
    %186 = arith.cmpi ult, %185, %183 : i64
    scf.if %186 {
    } else {
      %236 = arith.subi %185, %183 : i64
      llvm.store %236, %184 : i64, !llvm.ptr
    }
    %c80_i8_62 = arith.constant 80 : i8
    cf.cond_br %186, ^bb1(%c80_i8_62 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %187 = call @dora_fn_extend_memory(%arg0, %168) : (!llvm.ptr, i64) -> !llvm.ptr
    %188 = llvm.getelementptr %187[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %189 = llvm.load %188 : !llvm.ptr -> !llvm.ptr
    %190 = llvm.getelementptr %187[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %191 = llvm.load %190 : !llvm.ptr -> i8
    %c0_i8_63 = arith.constant 0 : i8
    %192 = arith.cmpi ne, %191, %c0_i8_63 : i8
    cf.cond_br %192, ^bb1(%191 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %193 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %189, %193 : !llvm.ptr, !llvm.ptr
    %194 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %168, %194 : i64, !llvm.ptr
    cf.br ^bb49
  ^bb53:  // pred: ^bb31
    %c49152_i64 = arith.constant 49152 : i64
    %195 = arith.cmpi ugt, %105, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %195, ^bb1(%c100_i8 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %c31_i64_64 = arith.constant 31 : i64
    %c32_i64_65 = arith.constant 32 : i64
    %196 = arith.addi %105, %c31_i64_64 : i64
    %197 = arith.divui %196, %c32_i64_65 : i64
    %c2_i64_66 = arith.constant 2 : i64
    %198 = arith.muli %197, %c2_i64_66 : i64
    %199 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> i64
    %201 = arith.cmpi ult, %200, %198 : i64
    scf.if %201 {
    } else {
      %236 = arith.subi %200, %198 : i64
      llvm.store %236, %199 : i64, !llvm.ptr
    }
    %c80_i8_67 = arith.constant 80 : i8
    cf.cond_br %201, ^bb1(%c80_i8_67 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %c18446744073709551615_i256_68 = arith.constant 18446744073709551615 : i256
    %202 = arith.cmpi sgt, %97, %c18446744073709551615_i256_68 : i256
    %c84_i8_69 = arith.constant 84 : i8
    cf.cond_br %202, ^bb1(%c84_i8_69 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %203 = arith.trunci %97 : i256 to i64
    %c0_i64_70 = arith.constant 0 : i64
    %204 = arith.cmpi slt, %203, %c0_i64_70 : i64
    %c84_i8_71 = arith.constant 84 : i8
    cf.cond_br %204, ^bb1(%c84_i8_71 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %205 = arith.addi %203, %105 : i64
    %c0_i64_72 = arith.constant 0 : i64
    %206 = arith.cmpi slt, %205, %c0_i64_72 : i64
    %c84_i8_73 = arith.constant 84 : i8
    cf.cond_br %206, ^bb1(%c84_i8_73 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %c31_i64_74 = arith.constant 31 : i64
    %c32_i64_75 = arith.constant 32 : i64
    %207 = arith.addi %205, %c31_i64_74 : i64
    %208 = arith.divui %207, %c32_i64_75 : i64
    %c32_i64_76 = arith.constant 32 : i64
    %209 = arith.muli %208, %c32_i64_76 : i64
    %210 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %211 = llvm.load %210 : !llvm.ptr -> i64
    %c31_i64_77 = arith.constant 31 : i64
    %c32_i64_78 = arith.constant 32 : i64
    %212 = arith.addi %211, %c31_i64_77 : i64
    %213 = arith.divui %212, %c32_i64_78 : i64
    %214 = arith.muli %213, %c32_i64_76 : i64
    %215 = arith.cmpi ult, %214, %209 : i64
    cf.cond_br %215, ^bb60, ^bb59
  ^bb59:  // 2 preds: ^bb58, ^bb62
    cf.br ^bb32
  ^bb60:  // pred: ^bb58
    %c3_i64_79 = arith.constant 3 : i64
    %c512_i64_80 = arith.constant 512 : i64
    %216 = arith.muli %213, %213 : i64
    %217 = arith.divui %216, %c512_i64_80 : i64
    %218 = arith.muli %213, %c3_i64_79 : i64
    %219 = arith.addi %217, %218 : i64
    %c3_i64_81 = arith.constant 3 : i64
    %c512_i64_82 = arith.constant 512 : i64
    %220 = arith.muli %208, %208 : i64
    %221 = arith.divui %220, %c512_i64_82 : i64
    %222 = arith.muli %208, %c3_i64_81 : i64
    %223 = arith.addi %221, %222 : i64
    %224 = arith.subi %223, %219 : i64
    %225 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %226 = llvm.load %225 : !llvm.ptr -> i64
    %227 = arith.cmpi ult, %226, %224 : i64
    scf.if %227 {
    } else {
      %236 = arith.subi %226, %224 : i64
      llvm.store %236, %225 : i64, !llvm.ptr
    }
    %c80_i8_83 = arith.constant 80 : i8
    cf.cond_br %227, ^bb1(%c80_i8_83 : i8), ^bb61
  ^bb61:  // pred: ^bb60
    %228 = call @dora_fn_extend_memory(%arg0, %209) : (!llvm.ptr, i64) -> !llvm.ptr
    %229 = llvm.getelementptr %228[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %230 = llvm.load %229 : !llvm.ptr -> !llvm.ptr
    %231 = llvm.getelementptr %228[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %232 = llvm.load %231 : !llvm.ptr -> i8
    %c0_i8_84 = arith.constant 0 : i8
    %233 = arith.cmpi ne, %232, %c0_i8_84 : i8
    cf.cond_br %233, ^bb1(%232 : i8), ^bb62
  ^bb62:  // pred: ^bb61
    %234 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %230, %234 : !llvm.ptr, !llvm.ptr
    %235 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %209, %235 : i64, !llvm.ptr
    cf.br ^bb59
  }
}
