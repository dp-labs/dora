---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    %1 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %2 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %1, %2 : !llvm.ptr, !llvm.ptr
    %3 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %4 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %3, %4 : i64, !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %5 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%6: i8):  // 36 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb34, ^bb36, ^bb37, ^bb39, ^bb41, ^bb42, ^bb45, ^bb46, ^bb47, ^bb50, ^bb51, ^bb53, ^bb54, ^bb55, ^bb56, ^bb57, ^bb60, ^bb61
    %c0_i64_0 = arith.constant 0 : i64
    %7 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %8 = llvm.load %7 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %8, %6) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %6 : i8
  ^bb2(%9: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %9 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c7922816251414904634880670302451_i256 = arith.constant 7922816251414904634880670302451 : i256
    %10 = llvm.load %arg3 : !llvm.ptr -> i64
    %11 = llvm.getelementptr %arg2[%10] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %12 = arith.addi %10, %c1_i64 : i64
    llvm.store %12, %arg3 : i64, !llvm.ptr
    llvm.store %c7922816251414904634880670302451_i256, %11 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %13 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %14 = arith.addi %13, %c1_i64_1 : i64
    %15 = arith.cmpi ult, %c1024_i64, %14 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %15, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %16 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %18 = arith.cmpi uge, %17, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %18, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %19 = arith.subi %17, %c3_i64 : i64
    llvm.store %19, %16 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %20 = llvm.load %arg3 : !llvm.ptr -> i64
    %21 = llvm.getelementptr %arg2[%20] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %22 = arith.addi %20, %c1_i64_2 : i64
    llvm.store %22, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %21 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %23 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %24 = arith.addi %23, %c1_i64_4 : i64
    %25 = arith.cmpi ult, %c1024_i64_3, %24 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %25, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %26 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %27 = llvm.load %26 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %28 = arith.cmpi uge, %27, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %28, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %29 = arith.subi %27, %c3_i64_6 : i64
    llvm.store %29, %26 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %30 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %31 = arith.subi %30, %c1_i64_8 : i64
    %32 = llvm.getelementptr %arg2[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %31, %arg3 : i64, !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i256
    %34 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_9 = arith.constant 1 : i64
    %35 = arith.subi %34, %c1_i64_9 : i64
    %36 = llvm.getelementptr %arg2[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %35, %arg3 : i64, !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %38 = arith.cmpi ne, %c32_i64, %c0_i64_10 : i64
    cf.cond_br %38, ^bb45, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb49
    %39 = arith.trunci %33 : i256 to i64
    %40 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[%39] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %43 = llvm.intr.bswap(%37)  : (i256) -> i256
    llvm.store %43, %42 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_11 = arith.constant 1024 : i64
    %44 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %45 = arith.addi %44, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %46 = arith.cmpi ult, %44, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %46, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %47 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %49 = arith.cmpi uge, %48, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %49, ^bb15, ^bb1(%c80_i8_13 : i8)
  ^bb15:  // pred: ^bb14
    %50 = arith.subi %48, %c3_i64_12 : i64
    llvm.store %50, %47 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c13_i256 = arith.constant 13 : i256
    %51 = llvm.load %arg3 : !llvm.ptr -> i64
    %52 = llvm.getelementptr %arg2[%51] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_14 = arith.constant 1 : i64
    %53 = arith.addi %51, %c1_i64_14 : i64
    llvm.store %53, %arg3 : i64, !llvm.ptr
    llvm.store %c13_i256, %52 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_15 = arith.constant 1024 : i64
    %54 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_16 = arith.constant 1 : i64
    %55 = arith.addi %54, %c1_i64_16 : i64
    %56 = arith.cmpi ult, %c1024_i64_15, %55 : i64
    %c92_i8_17 = arith.constant 92 : i8
    cf.cond_br %56, ^bb1(%c92_i8_17 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %57 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> i64
    %c3_i64_18 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %59 = arith.cmpi uge, %58, %c3_i64_18 : i64
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %59, ^bb19, ^bb1(%c80_i8_19 : i8)
  ^bb19:  // pred: ^bb18
    %60 = arith.subi %58, %c3_i64_18 : i64
    llvm.store %60, %57 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c0_i256_20 = arith.constant 0 : i256
    %61 = llvm.load %arg3 : !llvm.ptr -> i64
    %62 = llvm.getelementptr %arg2[%61] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_21 = arith.constant 1 : i64
    %63 = arith.addi %61, %c1_i64_21 : i64
    llvm.store %63, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_20, %62 : i256, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %c1024_i64_22 = arith.constant 1024 : i64
    %64 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %65 = arith.addi %64, %c1_i64_23 : i64
    %66 = arith.cmpi ult, %c1024_i64_22, %65 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %66, ^bb1(%c92_i8_24 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %67 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %69 = arith.cmpi uge, %68, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %69, ^bb23, ^bb1(%c80_i8_26 : i8)
  ^bb23:  // pred: ^bb22
    %70 = arith.subi %68, %c3_i64_25 : i64
    llvm.store %70, %67 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_27 = arith.constant 0 : i256
    %71 = llvm.load %arg3 : !llvm.ptr -> i64
    %72 = llvm.getelementptr %arg2[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_28 = arith.constant 1 : i64
    %73 = arith.addi %71, %c1_i64_28 : i64
    llvm.store %73, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_27, %72 : i256, !llvm.ptr
    cf.br ^bb37
  ^bb25:  // pred: ^bb27
    %c1024_i64_29 = arith.constant 1024 : i64
    %74 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_30 = arith.constant 1 : i64
    %75 = arith.addi %74, %c1_i64_30 : i64
    %76 = arith.cmpi ult, %c1024_i64_29, %75 : i64
    %c92_i8_31 = arith.constant 92 : i8
    cf.cond_br %76, ^bb1(%c92_i8_31 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_32 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %79 = arith.cmpi uge, %78, %c3_i64_32 : i64
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %79, ^bb27, ^bb1(%c80_i8_33 : i8)
  ^bb27:  // pred: ^bb26
    %80 = arith.subi %78, %c3_i64_32 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb36
    %81 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %82 = arith.subi %81, %c1_i64_34 : i64
    %83 = llvm.getelementptr %arg2[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %82, %arg3 : i64, !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> i256
    %85 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_35 = arith.constant 1 : i64
    %86 = arith.subi %85, %c1_i64_35 : i64
    %87 = llvm.getelementptr %arg2[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %86, %arg3 : i64, !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> i256
    %89 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_36 = arith.constant 1 : i64
    %90 = arith.subi %89, %c1_i64_36 : i64
    %91 = llvm.getelementptr %arg2[%90] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %90, %arg3 : i64, !llvm.ptr
    %92 = llvm.load %91 : !llvm.ptr -> i256
    %93 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %94 = arith.cmpi ne, %93, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %94, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %95 = arith.cmpi sgt, %92, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %95, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %96 = arith.trunci %92 : i256 to i64
    %c0_i64_37 = arith.constant 0 : i64
    %97 = arith.cmpi slt, %96, %c0_i64_37 : i64
    %c84_i8_38 = arith.constant 84 : i8
    cf.cond_br %97, ^bb1(%c84_i8_38 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i64_39 = arith.constant 0 : i64
    %98 = arith.cmpi ne, %96, %c0_i64_39 : i64
    cf.cond_br %98, ^bb53, ^bb32
  ^bb32:  // 2 preds: ^bb31, ^bb59
    %c32000_i64 = arith.constant 32000 : i64
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %101 = arith.cmpi ult, %100, %c32000_i64 : i64
    scf.if %101 {
    } else {
      %225 = arith.subi %100, %c32000_i64 : i64
      llvm.store %225, %99 : i64, !llvm.ptr
    }
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %101, ^bb1(%c80_i8_40 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c1_i256 = arith.constant 1 : i256
    %102 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %84, %102 {alignment = 1 : i64} : i256, !llvm.ptr
    %103 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> i64
    %105 = arith.trunci %88 : i256 to i64
    %106 = call @dora_fn_create(%arg0, %96, %105, %102, %104) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %107 = llvm.getelementptr %106[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %108 = llvm.load %107 : !llvm.ptr -> i8
    %c0_i8_41 = arith.constant 0 : i8
    %109 = arith.cmpi ne, %108, %c0_i8_41 : i8
    cf.cond_br %109, ^bb1(%108 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %110 = llvm.getelementptr %106[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %111 = llvm.load %110 : !llvm.ptr -> i64
    %112 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> i64
    %114 = arith.cmpi ult, %113, %111 : i64
    scf.if %114 {
    } else {
      %225 = arith.subi %113, %111 : i64
      llvm.store %225, %112 : i64, !llvm.ptr
    }
    %c80_i8_42 = arith.constant 80 : i8
    cf.cond_br %114, ^bb1(%c80_i8_42 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %115 = llvm.load %102 : !llvm.ptr -> i256
    %116 = llvm.load %arg3 : !llvm.ptr -> i64
    %117 = llvm.getelementptr %arg2[%116] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_43 = arith.constant 1 : i64
    %118 = arith.addi %116, %c1_i64_43 : i64
    llvm.store %118, %arg3 : i64, !llvm.ptr
    llvm.store %115, %117 : i256, !llvm.ptr
    cf.br ^bb42
  ^bb36:  // pred: ^bb38
    %c1024_i64_44 = arith.constant 1024 : i64
    %119 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_45 = arith.constant -2 : i64
    %120 = arith.addi %119, %c-2_i64_45 : i64
    %c3_i64_46 = arith.constant 3 : i64
    %121 = arith.cmpi ult, %119, %c3_i64_46 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %121, ^bb1(%c91_i8_47 : i8), ^bb28
  ^bb37:  // pred: ^bb24
    %122 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %c0_i64_48 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %124 = arith.cmpi uge, %123, %c0_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %124, ^bb38, ^bb1(%c80_i8_49 : i8)
  ^bb38:  // pred: ^bb37
    %125 = arith.subi %123, %c0_i64_48 : i64
    llvm.store %125, %122 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb41
    %126 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_50 = arith.constant 1 : i64
    %127 = arith.subi %126, %c1_i64_50 : i64
    %128 = llvm.getelementptr %arg2[%127] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %127, %arg3 : i64, !llvm.ptr
    %129 = llvm.load %128 : !llvm.ptr -> i256
    %c1_i256_51 = arith.constant 1 : i256
    %130 = llvm.alloca %c1_i256_51 x i256 : (i256) -> !llvm.ptr
    llvm.store %129, %130 {alignment = 1 : i64} : i256, !llvm.ptr
    %131 = call @dora_fn_ext_code_hash(%arg0, %130) : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %132 = llvm.getelementptr %131[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %133 = llvm.load %132 : !llvm.ptr -> i64
    %134 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> i64
    %136 = arith.cmpi ult, %135, %133 : i64
    scf.if %136 {
    } else {
      %225 = arith.subi %135, %133 : i64
      llvm.store %225, %134 : i64, !llvm.ptr
    }
    %c80_i8_52 = arith.constant 80 : i8
    cf.cond_br %136, ^bb1(%c80_i8_52 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %137 = llvm.load %130 : !llvm.ptr -> i256
    %138 = llvm.load %arg3 : !llvm.ptr -> i64
    %139 = llvm.getelementptr %arg2[%138] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_53 = arith.constant 1 : i64
    %140 = arith.addi %138, %c1_i64_53 : i64
    llvm.store %140, %arg3 : i64, !llvm.ptr
    llvm.store %137, %139 : i256, !llvm.ptr
    cf.br ^bb44
  ^bb41:  // pred: ^bb43
    %c1024_i64_54 = arith.constant 1024 : i64
    %141 = llvm.load %arg3 : !llvm.ptr -> i64
    %c0_i64_55 = arith.constant 0 : i64
    %142 = arith.addi %141, %c0_i64_55 : i64
    %c1_i64_56 = arith.constant 1 : i64
    %143 = arith.cmpi ult, %141, %c1_i64_56 : i64
    %c91_i8_57 = arith.constant 91 : i8
    cf.cond_br %143, ^bb1(%c91_i8_57 : i8), ^bb39
  ^bb42:  // pred: ^bb35
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c0_i64_58 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %146 = arith.cmpi uge, %145, %c0_i64_58 : i64
    %c80_i8_59 = arith.constant 80 : i8
    cf.cond_br %146, ^bb43, ^bb1(%c80_i8_59 : i8)
  ^bb43:  // pred: ^bb42
    %147 = arith.subi %145, %c0_i64_58 : i64
    llvm.store %147, %144 : i64, !llvm.ptr
    cf.br ^bb41
  ^bb44:  // pred: ^bb40
    %c0_i64_60 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %148 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_60, %c0_i64_60, %149, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb45:  // pred: ^bb11
    %c18446744073709551615_i256_61 = arith.constant 18446744073709551615 : i256
    %150 = arith.cmpi sgt, %33, %c18446744073709551615_i256_61 : i256
    %c84_i8_62 = arith.constant 84 : i8
    cf.cond_br %150, ^bb1(%c84_i8_62 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %151 = arith.trunci %33 : i256 to i64
    %c0_i64_63 = arith.constant 0 : i64
    %152 = arith.cmpi slt, %151, %c0_i64_63 : i64
    %c84_i8_64 = arith.constant 84 : i8
    cf.cond_br %152, ^bb1(%c84_i8_64 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %153 = arith.addi %151, %c32_i64 : i64
    %c0_i64_65 = arith.constant 0 : i64
    %154 = arith.cmpi slt, %153, %c0_i64_65 : i64
    %c84_i8_66 = arith.constant 84 : i8
    cf.cond_br %154, ^bb1(%c84_i8_66 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_67 = arith.constant 32 : i64
    %155 = arith.addi %153, %c31_i64 : i64
    %156 = arith.divui %155, %c32_i64_67 : i64
    %c32_i64_68 = arith.constant 32 : i64
    %157 = arith.muli %156, %c32_i64_68 : i64
    %158 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %159 = llvm.load %158 : !llvm.ptr -> i64
    %c31_i64_69 = arith.constant 31 : i64
    %c32_i64_70 = arith.constant 32 : i64
    %160 = arith.addi %159, %c31_i64_69 : i64
    %161 = arith.divui %160, %c32_i64_70 : i64
    %162 = arith.muli %161, %c32_i64_68 : i64
    %163 = arith.cmpi ult, %162, %157 : i64
    cf.cond_br %163, ^bb50, ^bb49
  ^bb49:  // 2 preds: ^bb48, ^bb52
    cf.br ^bb12
  ^bb50:  // pred: ^bb48
    %c3_i64_71 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %164 = arith.muli %161, %161 : i64
    %165 = arith.divui %164, %c512_i64 : i64
    %166 = arith.muli %161, %c3_i64_71 : i64
    %167 = arith.addi %165, %166 : i64
    %c3_i64_72 = arith.constant 3 : i64
    %c512_i64_73 = arith.constant 512 : i64
    %168 = arith.muli %156, %156 : i64
    %169 = arith.divui %168, %c512_i64_73 : i64
    %170 = arith.muli %156, %c3_i64_72 : i64
    %171 = arith.addi %169, %170 : i64
    %172 = arith.subi %171, %167 : i64
    %173 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %174 = llvm.load %173 : !llvm.ptr -> i64
    %175 = arith.cmpi ult, %174, %172 : i64
    scf.if %175 {
    } else {
      %225 = arith.subi %174, %172 : i64
      llvm.store %225, %173 : i64, !llvm.ptr
    }
    %c80_i8_74 = arith.constant 80 : i8
    cf.cond_br %175, ^bb1(%c80_i8_74 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %176 = call @dora_fn_extend_memory(%arg0, %157) : (!llvm.ptr, i64) -> !llvm.ptr
    %177 = llvm.getelementptr %176[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %178 = llvm.load %177 : !llvm.ptr -> !llvm.ptr
    %179 = llvm.getelementptr %176[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %180 = llvm.load %179 : !llvm.ptr -> i8
    %c0_i8_75 = arith.constant 0 : i8
    %181 = arith.cmpi ne, %180, %c0_i8_75 : i8
    cf.cond_br %181, ^bb1(%180 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %182 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %178, %182 : !llvm.ptr, !llvm.ptr
    %183 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %157, %183 : i64, !llvm.ptr
    cf.br ^bb49
  ^bb53:  // pred: ^bb31
    %c49152_i64 = arith.constant 49152 : i64
    %184 = arith.cmpi ugt, %96, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %184, ^bb1(%c100_i8 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %c31_i64_76 = arith.constant 31 : i64
    %c32_i64_77 = arith.constant 32 : i64
    %185 = arith.addi %96, %c31_i64_76 : i64
    %186 = arith.divui %185, %c32_i64_77 : i64
    %c2_i64_78 = arith.constant 2 : i64
    %187 = arith.muli %186, %c2_i64_78 : i64
    %188 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %189 = llvm.load %188 : !llvm.ptr -> i64
    %190 = arith.cmpi ult, %189, %187 : i64
    scf.if %190 {
    } else {
      %225 = arith.subi %189, %187 : i64
      llvm.store %225, %188 : i64, !llvm.ptr
    }
    %c80_i8_79 = arith.constant 80 : i8
    cf.cond_br %190, ^bb1(%c80_i8_79 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %c18446744073709551615_i256_80 = arith.constant 18446744073709551615 : i256
    %191 = arith.cmpi sgt, %88, %c18446744073709551615_i256_80 : i256
    %c84_i8_81 = arith.constant 84 : i8
    cf.cond_br %191, ^bb1(%c84_i8_81 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %192 = arith.trunci %88 : i256 to i64
    %c0_i64_82 = arith.constant 0 : i64
    %193 = arith.cmpi slt, %192, %c0_i64_82 : i64
    %c84_i8_83 = arith.constant 84 : i8
    cf.cond_br %193, ^bb1(%c84_i8_83 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %194 = arith.addi %192, %96 : i64
    %c0_i64_84 = arith.constant 0 : i64
    %195 = arith.cmpi slt, %194, %c0_i64_84 : i64
    %c84_i8_85 = arith.constant 84 : i8
    cf.cond_br %195, ^bb1(%c84_i8_85 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %c31_i64_86 = arith.constant 31 : i64
    %c32_i64_87 = arith.constant 32 : i64
    %196 = arith.addi %194, %c31_i64_86 : i64
    %197 = arith.divui %196, %c32_i64_87 : i64
    %c32_i64_88 = arith.constant 32 : i64
    %198 = arith.muli %197, %c32_i64_88 : i64
    %199 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> i64
    %c31_i64_89 = arith.constant 31 : i64
    %c32_i64_90 = arith.constant 32 : i64
    %201 = arith.addi %200, %c31_i64_89 : i64
    %202 = arith.divui %201, %c32_i64_90 : i64
    %203 = arith.muli %202, %c32_i64_88 : i64
    %204 = arith.cmpi ult, %203, %198 : i64
    cf.cond_br %204, ^bb60, ^bb59
  ^bb59:  // 2 preds: ^bb58, ^bb62
    cf.br ^bb32
  ^bb60:  // pred: ^bb58
    %c3_i64_91 = arith.constant 3 : i64
    %c512_i64_92 = arith.constant 512 : i64
    %205 = arith.muli %202, %202 : i64
    %206 = arith.divui %205, %c512_i64_92 : i64
    %207 = arith.muli %202, %c3_i64_91 : i64
    %208 = arith.addi %206, %207 : i64
    %c3_i64_93 = arith.constant 3 : i64
    %c512_i64_94 = arith.constant 512 : i64
    %209 = arith.muli %197, %197 : i64
    %210 = arith.divui %209, %c512_i64_94 : i64
    %211 = arith.muli %197, %c3_i64_93 : i64
    %212 = arith.addi %210, %211 : i64
    %213 = arith.subi %212, %208 : i64
    %214 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %215 = llvm.load %214 : !llvm.ptr -> i64
    %216 = arith.cmpi ult, %215, %213 : i64
    scf.if %216 {
    } else {
      %225 = arith.subi %215, %213 : i64
      llvm.store %225, %214 : i64, !llvm.ptr
    }
    %c80_i8_95 = arith.constant 80 : i8
    cf.cond_br %216, ^bb1(%c80_i8_95 : i8), ^bb61
  ^bb61:  // pred: ^bb60
    %217 = call @dora_fn_extend_memory(%arg0, %198) : (!llvm.ptr, i64) -> !llvm.ptr
    %218 = llvm.getelementptr %217[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %219 = llvm.load %218 : !llvm.ptr -> !llvm.ptr
    %220 = llvm.getelementptr %217[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %221 = llvm.load %220 : !llvm.ptr -> i8
    %c0_i8_96 = arith.constant 0 : i8
    %222 = arith.cmpi ne, %221, %c0_i8_96 : i8
    cf.cond_br %222, ^bb1(%221 : i8), ^bb62
  ^bb62:  // pred: ^bb61
    %223 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %219, %223 : !llvm.ptr, !llvm.ptr
    %224 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %198, %224 : i64, !llvm.ptr
    cf.br ^bb59
  }
}
