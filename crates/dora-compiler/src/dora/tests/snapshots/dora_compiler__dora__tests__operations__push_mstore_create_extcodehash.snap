---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %1 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%2: i8):  // 36 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb34, ^bb36, ^bb37, ^bb39, ^bb41, ^bb42, ^bb45, ^bb46, ^bb47, ^bb50, ^bb51, ^bb53, ^bb54, ^bb55, ^bb56, ^bb57, ^bb60, ^bb61
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %4, %2) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %2 : i8
  ^bb2(%5: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %5 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c7922816251414904634880670302451_i256 = arith.constant 7922816251414904634880670302451 : i256
    %6 = llvm.load %arg3 : !llvm.ptr -> i64
    %7 = llvm.getelementptr %arg2[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %8 = arith.addi %6, %c1_i64 : i64
    llvm.store %8, %arg3 : i64, !llvm.ptr
    llvm.store %c7922816251414904634880670302451_i256, %7 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %9 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %10 = arith.addi %9, %c1_i64_1 : i64
    %11 = arith.cmpi ult, %c1024_i64, %10 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %11, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %12 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %13 = llvm.load %12 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %14 = arith.cmpi uge, %13, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %14, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %15 = arith.subi %13, %c3_i64 : i64
    llvm.store %15, %12 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %16 = llvm.load %arg3 : !llvm.ptr -> i64
    %17 = llvm.getelementptr %arg2[%16] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %18 = arith.addi %16, %c1_i64_2 : i64
    llvm.store %18, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %17 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %19 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_4 : i64
    %21 = arith.cmpi ult, %c1024_i64_3, %20 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %22 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %24 = arith.cmpi uge, %23, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %24, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %25 = arith.subi %23, %c3_i64_6 : i64
    llvm.store %25, %22 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %26 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %27 = arith.subi %26, %c1_i64_8 : i64
    %28 = llvm.getelementptr %arg2[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %27, %arg3 : i64, !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> i256
    %30 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_9 = arith.constant 1 : i64
    %31 = arith.subi %30, %c1_i64_9 : i64
    %32 = llvm.getelementptr %arg2[%31] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %31, %arg3 : i64, !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_10 = arith.constant 0 : i64
    %34 = arith.cmpi ne, %c32_i64, %c0_i64_10 : i64
    cf.cond_br %34, ^bb45, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb49
    %35 = arith.trunci %29 : i256 to i64
    %36 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[%35] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %39 = llvm.intr.bswap(%33)  : (i256) -> i256
    llvm.store %39, %38 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_11 = arith.constant 1024 : i64
    %40 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %41 = arith.addi %40, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %42 = arith.cmpi ult, %40, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %42, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %43 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %44 = llvm.load %43 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %45 = arith.cmpi uge, %44, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %45, ^bb15, ^bb1(%c80_i8_13 : i8)
  ^bb15:  // pred: ^bb14
    %46 = arith.subi %44, %c3_i64_12 : i64
    llvm.store %46, %43 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c13_i256 = arith.constant 13 : i256
    %47 = llvm.load %arg3 : !llvm.ptr -> i64
    %48 = llvm.getelementptr %arg2[%47] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_14 = arith.constant 1 : i64
    %49 = arith.addi %47, %c1_i64_14 : i64
    llvm.store %49, %arg3 : i64, !llvm.ptr
    llvm.store %c13_i256, %48 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_15 = arith.constant 1024 : i64
    %50 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_16 = arith.constant 1 : i64
    %51 = arith.addi %50, %c1_i64_16 : i64
    %52 = arith.cmpi ult, %c1024_i64_15, %51 : i64
    %c92_i8_17 = arith.constant 92 : i8
    cf.cond_br %52, ^bb1(%c92_i8_17 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %53 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %c3_i64_18 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %55 = arith.cmpi uge, %54, %c3_i64_18 : i64
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %55, ^bb19, ^bb1(%c80_i8_19 : i8)
  ^bb19:  // pred: ^bb18
    %56 = arith.subi %54, %c3_i64_18 : i64
    llvm.store %56, %53 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c0_i256_20 = arith.constant 0 : i256
    %57 = llvm.load %arg3 : !llvm.ptr -> i64
    %58 = llvm.getelementptr %arg2[%57] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_21 = arith.constant 1 : i64
    %59 = arith.addi %57, %c1_i64_21 : i64
    llvm.store %59, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_20, %58 : i256, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %c1024_i64_22 = arith.constant 1024 : i64
    %60 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_23 : i64
    %62 = arith.cmpi ult, %c1024_i64_22, %61 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_24 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %63 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %65 = arith.cmpi uge, %64, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %65, ^bb23, ^bb1(%c80_i8_26 : i8)
  ^bb23:  // pred: ^bb22
    %66 = arith.subi %64, %c3_i64_25 : i64
    llvm.store %66, %63 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_27 = arith.constant 0 : i256
    %67 = llvm.load %arg3 : !llvm.ptr -> i64
    %68 = llvm.getelementptr %arg2[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_28 = arith.constant 1 : i64
    %69 = arith.addi %67, %c1_i64_28 : i64
    llvm.store %69, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_27, %68 : i256, !llvm.ptr
    cf.br ^bb37
  ^bb25:  // pred: ^bb27
    %c1024_i64_29 = arith.constant 1024 : i64
    %70 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_30 = arith.constant 1 : i64
    %71 = arith.addi %70, %c1_i64_30 : i64
    %72 = arith.cmpi ult, %c1024_i64_29, %71 : i64
    %c92_i8_31 = arith.constant 92 : i8
    cf.cond_br %72, ^bb1(%c92_i8_31 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %73 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c3_i64_32 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %75 = arith.cmpi uge, %74, %c3_i64_32 : i64
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %75, ^bb27, ^bb1(%c80_i8_33 : i8)
  ^bb27:  // pred: ^bb26
    %76 = arith.subi %74, %c3_i64_32 : i64
    llvm.store %76, %73 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb36
    %77 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %78 = arith.subi %77, %c1_i64_34 : i64
    %79 = llvm.getelementptr %arg2[%78] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %78, %arg3 : i64, !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> i256
    %81 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_35 = arith.constant 1 : i64
    %82 = arith.subi %81, %c1_i64_35 : i64
    %83 = llvm.getelementptr %arg2[%82] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %82, %arg3 : i64, !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> i256
    %85 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_36 = arith.constant 1 : i64
    %86 = arith.subi %85, %c1_i64_36 : i64
    %87 = llvm.getelementptr %arg2[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %86, %arg3 : i64, !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> i256
    %89 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %90 = arith.cmpi ne, %89, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %90, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %91 = arith.cmpi sgt, %88, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %91, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %92 = arith.trunci %88 : i256 to i64
    %c0_i64_37 = arith.constant 0 : i64
    %93 = arith.cmpi slt, %92, %c0_i64_37 : i64
    %c84_i8_38 = arith.constant 84 : i8
    cf.cond_br %93, ^bb1(%c84_i8_38 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i64_39 = arith.constant 0 : i64
    %94 = arith.cmpi ne, %92, %c0_i64_39 : i64
    cf.cond_br %94, ^bb53, ^bb32
  ^bb32:  // 2 preds: ^bb31, ^bb59
    %c32000_i64 = arith.constant 32000 : i64
    %95 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %97 = arith.cmpi ult, %96, %c32000_i64 : i64
    scf.if %97 {
    } else {
      %221 = arith.subi %96, %c32000_i64 : i64
      llvm.store %221, %95 : i64, !llvm.ptr
    }
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %97, ^bb1(%c80_i8_40 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c1_i256 = arith.constant 1 : i256
    %98 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %80, %98 {alignment = 1 : i64} : i256, !llvm.ptr
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %101 = arith.trunci %84 : i256 to i64
    %102 = call @dora_fn_create(%arg0, %92, %101, %98, %100) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %103 = llvm.getelementptr %102[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %104 = llvm.load %103 : !llvm.ptr -> i8
    %c0_i8_41 = arith.constant 0 : i8
    %105 = arith.cmpi ne, %104, %c0_i8_41 : i8
    cf.cond_br %105, ^bb1(%104 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %106 = llvm.getelementptr %102[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %108 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %109 = llvm.load %108 : !llvm.ptr -> i64
    %110 = arith.cmpi ult, %109, %107 : i64
    scf.if %110 {
    } else {
      %221 = arith.subi %109, %107 : i64
      llvm.store %221, %108 : i64, !llvm.ptr
    }
    %c80_i8_42 = arith.constant 80 : i8
    cf.cond_br %110, ^bb1(%c80_i8_42 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %111 = llvm.load %98 : !llvm.ptr -> i256
    %112 = llvm.load %arg3 : !llvm.ptr -> i64
    %113 = llvm.getelementptr %arg2[%112] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_43 = arith.constant 1 : i64
    %114 = arith.addi %112, %c1_i64_43 : i64
    llvm.store %114, %arg3 : i64, !llvm.ptr
    llvm.store %111, %113 : i256, !llvm.ptr
    cf.br ^bb42
  ^bb36:  // pred: ^bb38
    %c1024_i64_44 = arith.constant 1024 : i64
    %115 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_45 = arith.constant -2 : i64
    %116 = arith.addi %115, %c-2_i64_45 : i64
    %c3_i64_46 = arith.constant 3 : i64
    %117 = arith.cmpi ult, %115, %c3_i64_46 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %117, ^bb1(%c91_i8_47 : i8), ^bb28
  ^bb37:  // pred: ^bb24
    %118 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c0_i64_48 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %120 = arith.cmpi uge, %119, %c0_i64_48 : i64
    %c80_i8_49 = arith.constant 80 : i8
    cf.cond_br %120, ^bb38, ^bb1(%c80_i8_49 : i8)
  ^bb38:  // pred: ^bb37
    %121 = arith.subi %119, %c0_i64_48 : i64
    llvm.store %121, %118 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb41
    %122 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_50 = arith.constant 1 : i64
    %123 = arith.subi %122, %c1_i64_50 : i64
    %124 = llvm.getelementptr %arg2[%123] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %123, %arg3 : i64, !llvm.ptr
    %125 = llvm.load %124 : !llvm.ptr -> i256
    %c1_i256_51 = arith.constant 1 : i256
    %126 = llvm.alloca %c1_i256_51 x i256 : (i256) -> !llvm.ptr
    llvm.store %125, %126 {alignment = 1 : i64} : i256, !llvm.ptr
    %127 = call @dora_fn_ext_code_hash(%arg0, %126) : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %128 = llvm.getelementptr %127[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %129 = llvm.load %128 : !llvm.ptr -> i64
    %130 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %131 = llvm.load %130 : !llvm.ptr -> i64
    %132 = arith.cmpi ult, %131, %129 : i64
    scf.if %132 {
    } else {
      %221 = arith.subi %131, %129 : i64
      llvm.store %221, %130 : i64, !llvm.ptr
    }
    %c80_i8_52 = arith.constant 80 : i8
    cf.cond_br %132, ^bb1(%c80_i8_52 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %133 = llvm.load %126 : !llvm.ptr -> i256
    %134 = llvm.load %arg3 : !llvm.ptr -> i64
    %135 = llvm.getelementptr %arg2[%134] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_53 = arith.constant 1 : i64
    %136 = arith.addi %134, %c1_i64_53 : i64
    llvm.store %136, %arg3 : i64, !llvm.ptr
    llvm.store %133, %135 : i256, !llvm.ptr
    cf.br ^bb44
  ^bb41:  // pred: ^bb43
    %c1024_i64_54 = arith.constant 1024 : i64
    %137 = llvm.load %arg3 : !llvm.ptr -> i64
    %c0_i64_55 = arith.constant 0 : i64
    %138 = arith.addi %137, %c0_i64_55 : i64
    %c1_i64_56 = arith.constant 1 : i64
    %139 = arith.cmpi ult, %137, %c1_i64_56 : i64
    %c91_i8_57 = arith.constant 91 : i8
    cf.cond_br %139, ^bb1(%c91_i8_57 : i8), ^bb39
  ^bb42:  // pred: ^bb35
    %140 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %c0_i64_58 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %142 = arith.cmpi uge, %141, %c0_i64_58 : i64
    %c80_i8_59 = arith.constant 80 : i8
    cf.cond_br %142, ^bb43, ^bb1(%c80_i8_59 : i8)
  ^bb43:  // pred: ^bb42
    %143 = arith.subi %141, %c0_i64_58 : i64
    llvm.store %143, %140 : i64, !llvm.ptr
    cf.br ^bb41
  ^bb44:  // pred: ^bb40
    %c0_i64_60 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_60, %c0_i64_60, %145, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb45:  // pred: ^bb11
    %c18446744073709551615_i256_61 = arith.constant 18446744073709551615 : i256
    %146 = arith.cmpi sgt, %29, %c18446744073709551615_i256_61 : i256
    %c84_i8_62 = arith.constant 84 : i8
    cf.cond_br %146, ^bb1(%c84_i8_62 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %147 = arith.trunci %29 : i256 to i64
    %c0_i64_63 = arith.constant 0 : i64
    %148 = arith.cmpi slt, %147, %c0_i64_63 : i64
    %c84_i8_64 = arith.constant 84 : i8
    cf.cond_br %148, ^bb1(%c84_i8_64 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %149 = arith.addi %147, %c32_i64 : i64
    %c0_i64_65 = arith.constant 0 : i64
    %150 = arith.cmpi slt, %149, %c0_i64_65 : i64
    %c84_i8_66 = arith.constant 84 : i8
    cf.cond_br %150, ^bb1(%c84_i8_66 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_67 = arith.constant 32 : i64
    %151 = arith.addi %149, %c31_i64 : i64
    %152 = arith.divui %151, %c32_i64_67 : i64
    %c32_i64_68 = arith.constant 32 : i64
    %153 = arith.muli %152, %c32_i64_68 : i64
    %154 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> i64
    %c31_i64_69 = arith.constant 31 : i64
    %c32_i64_70 = arith.constant 32 : i64
    %156 = arith.addi %155, %c31_i64_69 : i64
    %157 = arith.divui %156, %c32_i64_70 : i64
    %158 = arith.muli %157, %c32_i64_68 : i64
    %159 = arith.cmpi ult, %158, %153 : i64
    cf.cond_br %159, ^bb50, ^bb49
  ^bb49:  // 2 preds: ^bb48, ^bb52
    cf.br ^bb12
  ^bb50:  // pred: ^bb48
    %c3_i64_71 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %160 = arith.muli %157, %157 : i64
    %161 = arith.divui %160, %c512_i64 : i64
    %162 = arith.muli %157, %c3_i64_71 : i64
    %163 = arith.addi %161, %162 : i64
    %c3_i64_72 = arith.constant 3 : i64
    %c512_i64_73 = arith.constant 512 : i64
    %164 = arith.muli %152, %152 : i64
    %165 = arith.divui %164, %c512_i64_73 : i64
    %166 = arith.muli %152, %c3_i64_72 : i64
    %167 = arith.addi %165, %166 : i64
    %168 = arith.subi %167, %163 : i64
    %169 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %170 = llvm.load %169 : !llvm.ptr -> i64
    %171 = arith.cmpi ult, %170, %168 : i64
    scf.if %171 {
    } else {
      %221 = arith.subi %170, %168 : i64
      llvm.store %221, %169 : i64, !llvm.ptr
    }
    %c80_i8_74 = arith.constant 80 : i8
    cf.cond_br %171, ^bb1(%c80_i8_74 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %172 = call @dora_fn_extend_memory(%arg0, %153) : (!llvm.ptr, i64) -> !llvm.ptr
    %173 = llvm.getelementptr %172[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %174 = llvm.load %173 : !llvm.ptr -> !llvm.ptr
    %175 = llvm.getelementptr %172[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %176 = llvm.load %175 : !llvm.ptr -> i8
    %c0_i8_75 = arith.constant 0 : i8
    %177 = arith.cmpi ne, %176, %c0_i8_75 : i8
    cf.cond_br %177, ^bb1(%176 : i8), ^bb52
  ^bb52:  // pred: ^bb51
    %178 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %174, %178 : !llvm.ptr, !llvm.ptr
    %179 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %153, %179 : i64, !llvm.ptr
    cf.br ^bb49
  ^bb53:  // pred: ^bb31
    %c49152_i64 = arith.constant 49152 : i64
    %180 = arith.cmpi ugt, %92, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %180, ^bb1(%c100_i8 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %c31_i64_76 = arith.constant 31 : i64
    %c32_i64_77 = arith.constant 32 : i64
    %181 = arith.addi %92, %c31_i64_76 : i64
    %182 = arith.divui %181, %c32_i64_77 : i64
    %c2_i64_78 = arith.constant 2 : i64
    %183 = arith.muli %182, %c2_i64_78 : i64
    %184 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %185 = llvm.load %184 : !llvm.ptr -> i64
    %186 = arith.cmpi ult, %185, %183 : i64
    scf.if %186 {
    } else {
      %221 = arith.subi %185, %183 : i64
      llvm.store %221, %184 : i64, !llvm.ptr
    }
    %c80_i8_79 = arith.constant 80 : i8
    cf.cond_br %186, ^bb1(%c80_i8_79 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %c18446744073709551615_i256_80 = arith.constant 18446744073709551615 : i256
    %187 = arith.cmpi sgt, %84, %c18446744073709551615_i256_80 : i256
    %c84_i8_81 = arith.constant 84 : i8
    cf.cond_br %187, ^bb1(%c84_i8_81 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %188 = arith.trunci %84 : i256 to i64
    %c0_i64_82 = arith.constant 0 : i64
    %189 = arith.cmpi slt, %188, %c0_i64_82 : i64
    %c84_i8_83 = arith.constant 84 : i8
    cf.cond_br %189, ^bb1(%c84_i8_83 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %190 = arith.addi %188, %92 : i64
    %c0_i64_84 = arith.constant 0 : i64
    %191 = arith.cmpi slt, %190, %c0_i64_84 : i64
    %c84_i8_85 = arith.constant 84 : i8
    cf.cond_br %191, ^bb1(%c84_i8_85 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %c31_i64_86 = arith.constant 31 : i64
    %c32_i64_87 = arith.constant 32 : i64
    %192 = arith.addi %190, %c31_i64_86 : i64
    %193 = arith.divui %192, %c32_i64_87 : i64
    %c32_i64_88 = arith.constant 32 : i64
    %194 = arith.muli %193, %c32_i64_88 : i64
    %195 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %196 = llvm.load %195 : !llvm.ptr -> i64
    %c31_i64_89 = arith.constant 31 : i64
    %c32_i64_90 = arith.constant 32 : i64
    %197 = arith.addi %196, %c31_i64_89 : i64
    %198 = arith.divui %197, %c32_i64_90 : i64
    %199 = arith.muli %198, %c32_i64_88 : i64
    %200 = arith.cmpi ult, %199, %194 : i64
    cf.cond_br %200, ^bb60, ^bb59
  ^bb59:  // 2 preds: ^bb58, ^bb62
    cf.br ^bb32
  ^bb60:  // pred: ^bb58
    %c3_i64_91 = arith.constant 3 : i64
    %c512_i64_92 = arith.constant 512 : i64
    %201 = arith.muli %198, %198 : i64
    %202 = arith.divui %201, %c512_i64_92 : i64
    %203 = arith.muli %198, %c3_i64_91 : i64
    %204 = arith.addi %202, %203 : i64
    %c3_i64_93 = arith.constant 3 : i64
    %c512_i64_94 = arith.constant 512 : i64
    %205 = arith.muli %193, %193 : i64
    %206 = arith.divui %205, %c512_i64_94 : i64
    %207 = arith.muli %193, %c3_i64_93 : i64
    %208 = arith.addi %206, %207 : i64
    %209 = arith.subi %208, %204 : i64
    %210 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %211 = llvm.load %210 : !llvm.ptr -> i64
    %212 = arith.cmpi ult, %211, %209 : i64
    scf.if %212 {
    } else {
      %221 = arith.subi %211, %209 : i64
      llvm.store %221, %210 : i64, !llvm.ptr
    }
    %c80_i8_95 = arith.constant 80 : i8
    cf.cond_br %212, ^bb1(%c80_i8_95 : i8), ^bb61
  ^bb61:  // pred: ^bb60
    %213 = call @dora_fn_extend_memory(%arg0, %194) : (!llvm.ptr, i64) -> !llvm.ptr
    %214 = llvm.getelementptr %213[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %215 = llvm.load %214 : !llvm.ptr -> !llvm.ptr
    %216 = llvm.getelementptr %213[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %217 = llvm.load %216 : !llvm.ptr -> i8
    %c0_i8_96 = arith.constant 0 : i8
    %218 = arith.cmpi ne, %217, %c0_i8_96 : i8
    cf.cond_br %218, ^bb1(%217 : i8), ^bb62
  ^bb62:  // pred: ^bb61
    %219 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %215, %219 : !llvm.ptr, !llvm.ptr
    %220 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %194, %220 : i64, !llvm.ptr
    cf.br ^bb59
  }
}
