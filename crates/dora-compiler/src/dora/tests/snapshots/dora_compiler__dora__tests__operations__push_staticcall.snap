---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64, %0 : i64, !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %1 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%2: i8):  // 31 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb12, ^bb13, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb27, ^bb28, ^bb30, ^bb31, ^bb33, ^bb34, ^bb36, ^bb37, ^bb40, ^bb41, ^bb42, ^bb45, ^bb46, ^bb48, ^bb49, ^bb50, ^bb53, ^bb54
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %4 = llvm.load %3 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %4, %2) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %2 : i8
  ^bb2(%5: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %5 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c8000_i256 = arith.constant 8000 : i256
    %6 = llvm.load %arg3 : !llvm.ptr -> i64
    %7 = llvm.getelementptr %arg2[%6] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %8 = arith.addi %6, %c1_i64 : i64
    llvm.store %8, %arg3 : i64, !llvm.ptr
    llvm.store %c8000_i256, %7 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %9 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_1 = arith.constant 1 : i64
    %10 = arith.addi %9, %c1_i64_1 : i64
    %11 = arith.cmpi ult, %c1024_i64, %10 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %11, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %12 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %13 = llvm.load %12 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %14 = arith.cmpi uge, %13, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %14, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %15 = arith.subi %13, %c3_i64 : i64
    llvm.store %15, %12 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c16384_i256 = arith.constant 16384 : i256
    %16 = llvm.load %arg3 : !llvm.ptr -> i64
    %17 = llvm.getelementptr %arg2[%16] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_2 = arith.constant 1 : i64
    %18 = arith.addi %16, %c1_i64_2 : i64
    llvm.store %18, %arg3 : i64, !llvm.ptr
    llvm.store %c16384_i256, %17 : i256, !llvm.ptr
    cf.br ^bb13
  ^bb8:  // pred: ^bb10
    %c1024_i64_3 = arith.constant 1024 : i64
    %19 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_4 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_4 : i64
    %21 = arith.cmpi ult, %c1024_i64_3, %20 : i64
    %c92_i8_5 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_5 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %22 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> i64
    %c3_i64_6 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %24 = arith.cmpi uge, %23, %c3_i64_6 : i64
    %c80_i8_7 = arith.constant 80 : i8
    cf.cond_br %24, ^bb10, ^bb1(%c80_i8_7 : i8)
  ^bb10:  // pred: ^bb9
    %25 = arith.subi %23, %c3_i64_6 : i64
    llvm.store %25, %22 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb12
    %c32_i256 = arith.constant 32 : i256
    %26 = llvm.load %arg3 : !llvm.ptr -> i64
    %27 = llvm.getelementptr %arg2[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_8 = arith.constant 1 : i64
    %28 = arith.addi %26, %c1_i64_8 : i64
    llvm.store %28, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256, %27 : i256, !llvm.ptr
    cf.br ^bb17
  ^bb12:  // pred: ^bb14
    %c1024_i64_9 = arith.constant 1024 : i64
    %29 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_10 : i64
    %31 = arith.cmpi ult, %c1024_i64_9, %30 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_11 : i8), ^bb11
  ^bb13:  // pred: ^bb7
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_12 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %34 = arith.cmpi uge, %33, %c3_i64_12 : i64
    %c80_i8_13 = arith.constant 80 : i8
    cf.cond_br %34, ^bb14, ^bb1(%c80_i8_13 : i8)
  ^bb14:  // pred: ^bb13
    %35 = arith.subi %33, %c3_i64_12 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb12
  ^bb15:  // pred: ^bb16
    %c32_i256_14 = arith.constant 32 : i256
    %36 = llvm.load %arg3 : !llvm.ptr -> i64
    %37 = llvm.getelementptr %arg2[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_15 = arith.constant 1 : i64
    %38 = arith.addi %36, %c1_i64_15 : i64
    llvm.store %38, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256_14, %37 : i256, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %c1024_i64_16 = arith.constant 1024 : i64
    %39 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_17 = arith.constant 1 : i64
    %40 = arith.addi %39, %c1_i64_17 : i64
    %41 = arith.cmpi ult, %c1024_i64_16, %40 : i64
    %c92_i8_18 = arith.constant 92 : i8
    cf.cond_br %41, ^bb1(%c92_i8_18 : i8), ^bb15
  ^bb17:  // pred: ^bb11
    %42 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %43 = llvm.load %42 : !llvm.ptr -> i64
    %c3_i64_19 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %44 = arith.cmpi uge, %43, %c3_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %44, ^bb18, ^bb1(%c80_i8_20 : i8)
  ^bb18:  // pred: ^bb17
    %45 = arith.subi %43, %c3_i64_19 : i64
    llvm.store %45, %42 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c64_i256 = arith.constant 64 : i256
    %46 = llvm.load %arg3 : !llvm.ptr -> i64
    %47 = llvm.getelementptr %arg2[%46] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_21 = arith.constant 1 : i64
    %48 = arith.addi %46, %c1_i64_21 : i64
    llvm.store %48, %arg3 : i64, !llvm.ptr
    llvm.store %c64_i256, %47 : i256, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %c1024_i64_22 = arith.constant 1024 : i64
    %49 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %50 = arith.addi %49, %c1_i64_23 : i64
    %51 = arith.cmpi ult, %c1024_i64_22, %50 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %51, ^bb1(%c92_i8_24 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %52 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %53 = llvm.load %52 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %54 = arith.cmpi uge, %53, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %54, ^bb22, ^bb1(%c80_i8_26 : i8)
  ^bb22:  // pred: ^bb21
    %55 = arith.subi %53, %c3_i64_25 : i64
    llvm.store %55, %52 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c64_i256_27 = arith.constant 64 : i256
    %56 = llvm.load %arg3 : !llvm.ptr -> i64
    %57 = llvm.getelementptr %arg2[%56] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_28 = arith.constant 1 : i64
    %58 = arith.addi %56, %c1_i64_28 : i64
    llvm.store %58, %arg3 : i64, !llvm.ptr
    llvm.store %c64_i256_27, %57 : i256, !llvm.ptr
    cf.br ^bb37
  ^bb24:  // pred: ^bb26
    %c1024_i64_29 = arith.constant 1024 : i64
    %59 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_30 = arith.constant 1 : i64
    %60 = arith.addi %59, %c1_i64_30 : i64
    %61 = arith.cmpi ult, %c1024_i64_29, %60 : i64
    %c92_i8_31 = arith.constant 92 : i8
    cf.cond_br %61, ^bb1(%c92_i8_31 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %62 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %63 = llvm.load %62 : !llvm.ptr -> i64
    %c3_i64_32 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %64 = arith.cmpi uge, %63, %c3_i64_32 : i64
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %64, ^bb26, ^bb1(%c80_i8_33 : i8)
  ^bb26:  // pred: ^bb25
    %65 = arith.subi %63, %c3_i64_32 : i64
    llvm.store %65, %62 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb36
    %66 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %67 = arith.subi %66, %c1_i64_34 : i64
    %68 = llvm.getelementptr %arg2[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %67, %arg3 : i64, !llvm.ptr
    %69 = llvm.load %68 : !llvm.ptr -> i256
    %70 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_35 = arith.constant 1 : i64
    %71 = arith.subi %70, %c1_i64_35 : i64
    %72 = llvm.getelementptr %arg2[%71] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %71, %arg3 : i64, !llvm.ptr
    %73 = llvm.load %72 : !llvm.ptr -> i256
    %74 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_36 = arith.constant 1 : i64
    %75 = arith.subi %74, %c1_i64_36 : i64
    %76 = llvm.getelementptr %arg2[%75] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %75, %arg3 : i64, !llvm.ptr
    %77 = llvm.load %76 : !llvm.ptr -> i256
    %78 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %79 = arith.subi %78, %c1_i64_37 : i64
    %80 = llvm.getelementptr %arg2[%79] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %79, %arg3 : i64, !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> i256
    %82 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_38 = arith.constant 1 : i64
    %83 = arith.subi %82, %c1_i64_38 : i64
    %84 = llvm.getelementptr %arg2[%83] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %83, %arg3 : i64, !llvm.ptr
    %85 = llvm.load %84 : !llvm.ptr -> i256
    %86 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_39 = arith.constant 1 : i64
    %87 = arith.subi %86, %c1_i64_39 : i64
    %88 = llvm.getelementptr %arg2[%87] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %87, %arg3 : i64, !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i256
    %c0_i256 = arith.constant 0 : i256
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %90 = arith.cmpi sgt, %81, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %90, ^bb1(%c84_i8 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %91 = arith.trunci %81 : i256 to i64
    %c0_i64_40 = arith.constant 0 : i64
    %92 = arith.cmpi slt, %91, %c0_i64_40 : i64
    %c84_i8_41 = arith.constant 84 : i8
    cf.cond_br %92, ^bb1(%c84_i8_41 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c0_i64_42 = arith.constant 0 : i64
    %93 = arith.cmpi ne, %91, %c0_i64_42 : i64
    cf.cond_br %93, ^bb40, ^bb30
  ^bb30:  // 2 preds: ^bb29, ^bb44
    %c18446744073709551615_i256_43 = arith.constant 18446744073709551615 : i256
    %94 = arith.cmpi sgt, %89, %c18446744073709551615_i256_43 : i256
    %c84_i8_44 = arith.constant 84 : i8
    cf.cond_br %94, ^bb1(%c84_i8_44 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %95 = arith.trunci %89 : i256 to i64
    %c0_i64_45 = arith.constant 0 : i64
    %96 = arith.cmpi slt, %95, %c0_i64_45 : i64
    %c84_i8_46 = arith.constant 84 : i8
    cf.cond_br %96, ^bb1(%c84_i8_46 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i64_47 = arith.constant 0 : i64
    %97 = arith.cmpi ne, %95, %c0_i64_47 : i64
    cf.cond_br %97, ^bb48, ^bb33
  ^bb33:  // 2 preds: ^bb32, ^bb52
    %98 = arith.trunci %77 : i256 to i64
    %99 = arith.trunci %85 : i256 to i64
    %100 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> i64
    %c1_i256 = arith.constant 1 : i256
    %102 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256, %102 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_48 = arith.constant 1 : i256
    %103 = llvm.alloca %c1_i256_48 x i256 : (i256) -> !llvm.ptr
    llvm.store %69, %103 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_49 = arith.constant 1 : i256
    %104 = llvm.alloca %c1_i256_49 x i256 : (i256) -> !llvm.ptr
    llvm.store %73, %104 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i8 = arith.constant 1 : i8
    %105 = call @dora_fn_call(%arg0, %103, %104, %102, %98, %91, %99, %95, %101, %c1_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %106 = llvm.getelementptr %105[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %107 = llvm.load %106 : !llvm.ptr -> i8
    %108 = llvm.getelementptr %105[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %109 = llvm.load %108 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %110 = arith.cmpi ne, %109, %c0_i8 : i8
    cf.cond_br %110, ^bb1(%109 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %111 = llvm.getelementptr %105[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %112 = llvm.load %111 : !llvm.ptr -> i64
    %113 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %114 = llvm.load %113 : !llvm.ptr -> i64
    %115 = arith.cmpi ult, %114, %112 : i64
    scf.if %115 {
    } else {
      %197 = arith.subi %114, %112 : i64
      llvm.store %197, %113 : i64, !llvm.ptr
    }
    %c80_i8_50 = arith.constant 80 : i8
    cf.cond_br %115, ^bb1(%c80_i8_50 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %116 = arith.extui %107 : i8 to i256
    %117 = llvm.load %arg3 : !llvm.ptr -> i64
    %118 = llvm.getelementptr %arg2[%117] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_51 = arith.constant 1 : i64
    %119 = arith.addi %117, %c1_i64_51 : i64
    llvm.store %119, %arg3 : i64, !llvm.ptr
    llvm.store %116, %118 : i256, !llvm.ptr
    cf.br ^bb39
  ^bb36:  // pred: ^bb38
    %c1024_i64_52 = arith.constant 1024 : i64
    %120 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %121 = arith.addi %120, %c-5_i64 : i64
    %c6_i64 = arith.constant 6 : i64
    %122 = arith.cmpi ult, %120, %c6_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %122, ^bb1(%c91_i8 : i8), ^bb27
  ^bb37:  // pred: ^bb23
    %123 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %124 = llvm.load %123 : !llvm.ptr -> i64
    %c0_i64_53 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %125 = arith.cmpi uge, %124, %c0_i64_53 : i64
    %c80_i8_54 = arith.constant 80 : i8
    cf.cond_br %125, ^bb38, ^bb1(%c80_i8_54 : i8)
  ^bb38:  // pred: ^bb37
    %126 = arith.subi %124, %c0_i64_53 : i64
    llvm.store %126, %123 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb35
    %c0_i64_55 = arith.constant 0 : i64
    %c1_i8_56 = arith.constant 1 : i8
    %127 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %128 = llvm.load %127 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_55, %c0_i64_55, %128, %c1_i8_56) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8_56 : i8
  ^bb40:  // pred: ^bb29
    %c18446744073709551615_i256_57 = arith.constant 18446744073709551615 : i256
    %129 = arith.cmpi sgt, %77, %c18446744073709551615_i256_57 : i256
    %c84_i8_58 = arith.constant 84 : i8
    cf.cond_br %129, ^bb1(%c84_i8_58 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %130 = arith.trunci %77 : i256 to i64
    %c0_i64_59 = arith.constant 0 : i64
    %131 = arith.cmpi slt, %130, %c0_i64_59 : i64
    %c84_i8_60 = arith.constant 84 : i8
    cf.cond_br %131, ^bb1(%c84_i8_60 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %132 = arith.addi %130, %91 : i64
    %c0_i64_61 = arith.constant 0 : i64
    %133 = arith.cmpi slt, %132, %c0_i64_61 : i64
    %c84_i8_62 = arith.constant 84 : i8
    cf.cond_br %133, ^bb1(%c84_i8_62 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %c31_i64 = arith.constant 31 : i64
    %c32_i64 = arith.constant 32 : i64
    %134 = arith.addi %132, %c31_i64 : i64
    %135 = arith.divui %134, %c32_i64 : i64
    %c32_i64_63 = arith.constant 32 : i64
    %136 = arith.muli %135, %c32_i64_63 : i64
    %137 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %138 = llvm.load %137 : !llvm.ptr -> i64
    %c31_i64_64 = arith.constant 31 : i64
    %c32_i64_65 = arith.constant 32 : i64
    %139 = arith.addi %138, %c31_i64_64 : i64
    %140 = arith.divui %139, %c32_i64_65 : i64
    %141 = arith.muli %140, %c32_i64_63 : i64
    %142 = arith.cmpi ult, %141, %136 : i64
    cf.cond_br %142, ^bb45, ^bb44
  ^bb44:  // 2 preds: ^bb43, ^bb47
    cf.br ^bb30
  ^bb45:  // pred: ^bb43
    %c3_i64_66 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %143 = arith.muli %140, %140 : i64
    %144 = arith.divui %143, %c512_i64 : i64
    %145 = arith.muli %140, %c3_i64_66 : i64
    %146 = arith.addi %144, %145 : i64
    %c3_i64_67 = arith.constant 3 : i64
    %c512_i64_68 = arith.constant 512 : i64
    %147 = arith.muli %135, %135 : i64
    %148 = arith.divui %147, %c512_i64_68 : i64
    %149 = arith.muli %135, %c3_i64_67 : i64
    %150 = arith.addi %148, %149 : i64
    %151 = arith.subi %150, %146 : i64
    %152 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %153 = llvm.load %152 : !llvm.ptr -> i64
    %154 = arith.cmpi ult, %153, %151 : i64
    scf.if %154 {
    } else {
      %197 = arith.subi %153, %151 : i64
      llvm.store %197, %152 : i64, !llvm.ptr
    }
    %c80_i8_69 = arith.constant 80 : i8
    cf.cond_br %154, ^bb1(%c80_i8_69 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %155 = call @dora_fn_extend_memory(%arg0, %136) : (!llvm.ptr, i64) -> !llvm.ptr
    %156 = llvm.getelementptr %155[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %157 = llvm.load %156 : !llvm.ptr -> !llvm.ptr
    %158 = llvm.getelementptr %155[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %159 = llvm.load %158 : !llvm.ptr -> i8
    %c0_i8_70 = arith.constant 0 : i8
    %160 = arith.cmpi ne, %159, %c0_i8_70 : i8
    cf.cond_br %160, ^bb1(%159 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %161 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %157, %161 : !llvm.ptr, !llvm.ptr
    %162 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %136, %162 : i64, !llvm.ptr
    cf.br ^bb44
  ^bb48:  // pred: ^bb32
    %c18446744073709551615_i256_71 = arith.constant 18446744073709551615 : i256
    %163 = arith.cmpi sgt, %85, %c18446744073709551615_i256_71 : i256
    %c84_i8_72 = arith.constant 84 : i8
    cf.cond_br %163, ^bb1(%c84_i8_72 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %164 = arith.trunci %85 : i256 to i64
    %c0_i64_73 = arith.constant 0 : i64
    %165 = arith.cmpi slt, %164, %c0_i64_73 : i64
    %c84_i8_74 = arith.constant 84 : i8
    cf.cond_br %165, ^bb1(%c84_i8_74 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %166 = arith.addi %164, %95 : i64
    %c0_i64_75 = arith.constant 0 : i64
    %167 = arith.cmpi slt, %166, %c0_i64_75 : i64
    %c84_i8_76 = arith.constant 84 : i8
    cf.cond_br %167, ^bb1(%c84_i8_76 : i8), ^bb51
  ^bb51:  // pred: ^bb50
    %c31_i64_77 = arith.constant 31 : i64
    %c32_i64_78 = arith.constant 32 : i64
    %168 = arith.addi %166, %c31_i64_77 : i64
    %169 = arith.divui %168, %c32_i64_78 : i64
    %c32_i64_79 = arith.constant 32 : i64
    %170 = arith.muli %169, %c32_i64_79 : i64
    %171 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %172 = llvm.load %171 : !llvm.ptr -> i64
    %c31_i64_80 = arith.constant 31 : i64
    %c32_i64_81 = arith.constant 32 : i64
    %173 = arith.addi %172, %c31_i64_80 : i64
    %174 = arith.divui %173, %c32_i64_81 : i64
    %175 = arith.muli %174, %c32_i64_79 : i64
    %176 = arith.cmpi ult, %175, %170 : i64
    cf.cond_br %176, ^bb53, ^bb52
  ^bb52:  // 2 preds: ^bb51, ^bb55
    cf.br ^bb33
  ^bb53:  // pred: ^bb51
    %c3_i64_82 = arith.constant 3 : i64
    %c512_i64_83 = arith.constant 512 : i64
    %177 = arith.muli %174, %174 : i64
    %178 = arith.divui %177, %c512_i64_83 : i64
    %179 = arith.muli %174, %c3_i64_82 : i64
    %180 = arith.addi %178, %179 : i64
    %c3_i64_84 = arith.constant 3 : i64
    %c512_i64_85 = arith.constant 512 : i64
    %181 = arith.muli %169, %169 : i64
    %182 = arith.divui %181, %c512_i64_85 : i64
    %183 = arith.muli %169, %c3_i64_84 : i64
    %184 = arith.addi %182, %183 : i64
    %185 = arith.subi %184, %180 : i64
    %186 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %187 = llvm.load %186 : !llvm.ptr -> i64
    %188 = arith.cmpi ult, %187, %185 : i64
    scf.if %188 {
    } else {
      %197 = arith.subi %187, %185 : i64
      llvm.store %197, %186 : i64, !llvm.ptr
    }
    %c80_i8_86 = arith.constant 80 : i8
    cf.cond_br %188, ^bb1(%c80_i8_86 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %189 = call @dora_fn_extend_memory(%arg0, %170) : (!llvm.ptr, i64) -> !llvm.ptr
    %190 = llvm.getelementptr %189[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %191 = llvm.load %190 : !llvm.ptr -> !llvm.ptr
    %192 = llvm.getelementptr %189[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %193 = llvm.load %192 : !llvm.ptr -> i8
    %c0_i8_87 = arith.constant 0 : i8
    %194 = arith.cmpi ne, %193, %c0_i8_87 : i8
    cf.cond_br %194, ^bb1(%193 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %195 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %191, %195 : !llvm.ptr, !llvm.ptr
    %196 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %170, %196 : i64, !llvm.ptr
    cf.br ^bb52
  }
}
