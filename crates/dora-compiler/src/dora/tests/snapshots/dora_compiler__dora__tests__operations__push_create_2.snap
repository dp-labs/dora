---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 30 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb14, ^bb15, ^bb18, ^bb19, ^bb22, ^bb23, ^bb26, ^bb27, ^bb29, ^bb30, ^bb31, ^bb33, ^bb34, ^bb35, ^bb37, ^bb38, ^bb41, ^bb42, ^bb43, ^bb45, ^bb46, ^bb47, ^bb48, ^bb49
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c30948500970605382398753381619_i256 = arith.constant 30948500970605382398753381619 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c30948500970605382398753381619_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb14
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %46 = arith.cmpi ne, %c32_i64, %c0_i64_8 : i64
    cf.cond_br %46, ^bb41, ^bb13
  ^bb13:  // 2 preds: ^bb12, ^bb44
    %47 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> !llvm.ptr
    %49 = llvm.getelementptr %48[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %50 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %50, %49 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb19
  ^bb14:  // pred: ^bb16
    %51 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_9 = arith.constant 1024 : i64
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %53 = arith.addi %52, %c-2_i64 : i64
    llvm.store %53, %51 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %54 = arith.cmpi ult, %52, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %54, ^bb1(%c91_i8 : i8), ^bb11
  ^bb15:  // pred: ^bb7
    %55 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %56 = llvm.load %55 : !llvm.ptr -> i64
    %c3_i64_10 = arith.constant 3 : i64
    %57 = arith.cmpi uge, %56, %c3_i64_10 : i64
    %c80_i8_11 = arith.constant 80 : i8
    cf.cond_br %57, ^bb16, ^bb1(%c80_i8_11 : i8)
  ^bb16:  // pred: ^bb15
    %58 = arith.subi %56, %c3_i64_10 : i64
    llvm.store %58, %55 : i64, !llvm.ptr
    cf.br ^bb14
  ^bb17:  // pred: ^bb18
    %c13_i256 = arith.constant 13 : i256
    %59 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %60 = llvm.load %59 : !llvm.ptr -> !llvm.ptr
    llvm.store %c13_i256, %60 : i256, !llvm.ptr
    %61 = llvm.getelementptr %60[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %61, %59 : !llvm.ptr, !llvm.ptr
    cf.br ^bb23
  ^bb18:  // pred: ^bb20
    %62 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_12 = arith.constant 1024 : i64
    %63 = llvm.load %62 : !llvm.ptr -> i64
    %c1_i64_13 = arith.constant 1 : i64
    %64 = arith.addi %63, %c1_i64_13 : i64
    llvm.store %64, %62 : i64, !llvm.ptr
    %65 = arith.cmpi ult, %c1024_i64_12, %64 : i64
    %c92_i8_14 = arith.constant 92 : i8
    cf.cond_br %65, ^bb1(%c92_i8_14 : i8), ^bb17
  ^bb19:  // pred: ^bb13
    %66 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %67 = llvm.load %66 : !llvm.ptr -> i64
    %c3_i64_15 = arith.constant 3 : i64
    %68 = arith.cmpi uge, %67, %c3_i64_15 : i64
    %c80_i8_16 = arith.constant 80 : i8
    cf.cond_br %68, ^bb20, ^bb1(%c80_i8_16 : i8)
  ^bb20:  // pred: ^bb19
    %69 = arith.subi %67, %c3_i64_15 : i64
    llvm.store %69, %66 : i64, !llvm.ptr
    cf.br ^bb18
  ^bb21:  // pred: ^bb22
    %c19_i256 = arith.constant 19 : i256
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    llvm.store %c19_i256, %71 : i256, !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb22:  // pred: ^bb24
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_17 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c1_i64_18 = arith.constant 1 : i64
    %75 = arith.addi %74, %c1_i64_18 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %76 = arith.cmpi ult, %c1024_i64_17, %75 : i64
    %c92_i8_19 = arith.constant 92 : i8
    cf.cond_br %76, ^bb1(%c92_i8_19 : i8), ^bb21
  ^bb23:  // pred: ^bb17
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_20 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_20 : i64
    %c80_i8_21 = arith.constant 80 : i8
    cf.cond_br %79, ^bb24, ^bb1(%c80_i8_21 : i8)
  ^bb24:  // pred: ^bb23
    %80 = arith.subi %78, %c3_i64_20 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb22
  ^bb25:  // pred: ^bb26
    %c0_i256_22 = arith.constant 0 : i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_22, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb38
  ^bb26:  // pred: ^bb28
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %86 = arith.addi %85, %c1_i64_24 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %c1024_i64_23, %86 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %87, ^bb1(%c92_i8_25 : i8), ^bb25
  ^bb27:  // pred: ^bb21
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    %90 = arith.cmpi uge, %89, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %90, ^bb28, ^bb1(%c80_i8_27 : i8)
  ^bb28:  // pred: ^bb27
    %91 = arith.subi %89, %c3_i64_26 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb37
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    %94 = llvm.getelementptr %93[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %95 = llvm.load %94 : !llvm.ptr -> i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    %96 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %97 = llvm.load %96 : !llvm.ptr -> !llvm.ptr
    %98 = llvm.getelementptr %97[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %99 = llvm.load %98 : !llvm.ptr -> i256
    llvm.store %98, %96 : !llvm.ptr, !llvm.ptr
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    %102 = llvm.getelementptr %101[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %103 = llvm.load %102 : !llvm.ptr -> i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    %104 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %105 = llvm.load %104 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %105, ^bb1(%c87_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %106 = arith.trunci %99 : i256 to i64
    %c0_i64_28 = arith.constant 0 : i64
    %107 = arith.cmpi slt, %106, %c0_i64_28 : i64
    %c84_i8_29 = arith.constant 84 : i8
    cf.cond_br %107, ^bb1(%c84_i8_29 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %108 = arith.trunci %103 : i256 to i64
    %c0_i64_30 = arith.constant 0 : i64
    %109 = arith.cmpi slt, %108, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %109, ^bb1(%c84_i8_31 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i64_32 = arith.constant 0 : i64
    %110 = arith.cmpi ne, %108, %c0_i64_32 : i64
    cf.cond_br %110, ^bb45, ^bb33
  ^bb33:  // 2 preds: ^bb32, ^bb50
    %c32000_i64 = arith.constant 32000 : i64
    %111 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> i64
    %113 = arith.cmpi ult, %112, %c32000_i64 : i64
    scf.if %113 {
    } else {
      %194 = arith.subi %112, %c32000_i64 : i64
      llvm.store %194, %111 : i64, !llvm.ptr
    }
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %113, ^bb1(%c80_i8_33 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %c1_i256 = arith.constant 1 : i256
    %114 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %95, %114 {alignment = 1 : i64} : i256, !llvm.ptr
    %115 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %116 = llvm.load %115 : !llvm.ptr -> i64
    %117 = call @dora_fn_create(%arg0, %108, %106, %114, %116) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %118 = llvm.getelementptr %117[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %119 = llvm.load %118 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %120 = arith.cmpi ne, %119, %c0_i8 : i8
    cf.cond_br %120, ^bb1(%119 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %121 = llvm.getelementptr %117[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %122 = llvm.load %121 : !llvm.ptr -> i64
    %123 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %124 = llvm.load %123 : !llvm.ptr -> i64
    %125 = arith.cmpi ult, %124, %122 : i64
    scf.if %125 {
    } else {
      %194 = arith.subi %124, %122 : i64
      llvm.store %194, %123 : i64, !llvm.ptr
    }
    %c80_i8_34 = arith.constant 80 : i8
    cf.cond_br %125, ^bb1(%c80_i8_34 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %126 = llvm.load %114 : !llvm.ptr -> i256
    %127 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %128 = llvm.load %127 : !llvm.ptr -> !llvm.ptr
    llvm.store %126, %128 : i256, !llvm.ptr
    %129 = llvm.getelementptr %128[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %129, %127 : !llvm.ptr, !llvm.ptr
    cf.br ^bb40
  ^bb37:  // pred: ^bb39
    %130 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_35 = arith.constant 1024 : i64
    %131 = llvm.load %130 : !llvm.ptr -> i64
    %c-2_i64_36 = arith.constant -2 : i64
    %132 = arith.addi %131, %c-2_i64_36 : i64
    llvm.store %132, %130 : i64, !llvm.ptr
    %c3_i64_37 = arith.constant 3 : i64
    %133 = arith.cmpi ult, %131, %c3_i64_37 : i64
    %c91_i8_38 = arith.constant 91 : i8
    cf.cond_br %133, ^bb1(%c91_i8_38 : i8), ^bb29
  ^bb38:  // pred: ^bb25
    %134 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %135 = llvm.load %134 : !llvm.ptr -> i64
    %c0_i64_39 = arith.constant 0 : i64
    %136 = arith.cmpi uge, %135, %c0_i64_39 : i64
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %136, ^bb39, ^bb1(%c80_i8_40 : i8)
  ^bb39:  // pred: ^bb38
    %137 = arith.subi %135, %c0_i64_39 : i64
    llvm.store %137, %134 : i64, !llvm.ptr
    cf.br ^bb37
  ^bb40:  // pred: ^bb36
    %c0_i64_41 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %138 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %139 = llvm.load %138 : !llvm.ptr -> i64
    %140 = call @dora_fn_write_result(%arg0, %c0_i64_41, %c0_i64_41, %139, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb41:  // pred: ^bb12
    %141 = arith.addi %44, %c32_i64 : i64
    %c0_i64_42 = arith.constant 0 : i64
    %142 = arith.cmpi slt, %141, %c0_i64_42 : i64
    %c84_i8_43 = arith.constant 84 : i8
    cf.cond_br %142, ^bb1(%c84_i8_43 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_44 = arith.constant 32 : i64
    %143 = arith.addi %141, %c31_i64 : i64
    %144 = arith.divui %143, %c32_i64_44 : i64
    %c32_i64_45 = arith.constant 32 : i64
    %145 = arith.muli %144, %c32_i64_45 : i64
    %146 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> i64
    %c31_i64_46 = arith.constant 31 : i64
    %c32_i64_47 = arith.constant 32 : i64
    %148 = arith.addi %147, %c31_i64_46 : i64
    %149 = arith.divui %148, %c32_i64_47 : i64
    %150 = arith.muli %149, %c32_i64_45 : i64
    %151 = arith.cmpi ult, %150, %145 : i64
    %152 = scf.if %151 -> (i64) {
      %c3_i64_63 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %194 = arith.muli %149, %149 : i64
      %195 = arith.divui %194, %c512_i64 : i64
      %196 = arith.muli %149, %c3_i64_63 : i64
      %197 = arith.addi %195, %196 : i64
      %c3_i64_64 = arith.constant 3 : i64
      %c512_i64_65 = arith.constant 512 : i64
      %198 = arith.muli %144, %144 : i64
      %199 = arith.divui %198, %c512_i64_65 : i64
      %200 = arith.muli %144, %c3_i64_64 : i64
      %201 = arith.addi %199, %200 : i64
      %202 = arith.subi %201, %197 : i64
      scf.yield %202 : i64
    } else {
      %c0_i64_63 = arith.constant 0 : i64
      scf.yield %c0_i64_63 : i64
    }
    %153 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %154 = llvm.load %153 : !llvm.ptr -> i64
    %155 = arith.cmpi ult, %154, %152 : i64
    scf.if %155 {
    } else {
      %194 = arith.subi %154, %152 : i64
      llvm.store %194, %153 : i64, !llvm.ptr
    }
    %c80_i8_48 = arith.constant 80 : i8
    cf.cond_br %155, ^bb1(%c80_i8_48 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %156 = call @dora_fn_extend_memory(%arg0, %145) : (!llvm.ptr, i64) -> !llvm.ptr
    %157 = llvm.getelementptr %156[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %158 = llvm.load %157 : !llvm.ptr -> !llvm.ptr
    %159 = llvm.getelementptr %156[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %160 = llvm.load %159 : !llvm.ptr -> i8
    %c0_i8_49 = arith.constant 0 : i8
    %161 = arith.cmpi ne, %160, %c0_i8_49 : i8
    cf.cond_br %161, ^bb1(%160 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %162 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %158, %162 : !llvm.ptr, !llvm.ptr
    %163 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %145, %163 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb45:  // pred: ^bb32
    %c49152_i64 = arith.constant 49152 : i64
    %164 = arith.cmpi ugt, %108, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %164, ^bb1(%c100_i8 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %c31_i64_50 = arith.constant 31 : i64
    %c32_i64_51 = arith.constant 32 : i64
    %165 = arith.addi %108, %c31_i64_50 : i64
    %166 = arith.divui %165, %c32_i64_51 : i64
    %c2_i64_52 = arith.constant 2 : i64
    %167 = arith.muli %166, %c2_i64_52 : i64
    %168 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> i64
    %170 = arith.cmpi ult, %169, %167 : i64
    scf.if %170 {
    } else {
      %194 = arith.subi %169, %167 : i64
      llvm.store %194, %168 : i64, !llvm.ptr
    }
    %c80_i8_53 = arith.constant 80 : i8
    cf.cond_br %170, ^bb1(%c80_i8_53 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %171 = arith.addi %106, %108 : i64
    %c0_i64_54 = arith.constant 0 : i64
    %172 = arith.cmpi slt, %171, %c0_i64_54 : i64
    %c84_i8_55 = arith.constant 84 : i8
    cf.cond_br %172, ^bb1(%c84_i8_55 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %c31_i64_56 = arith.constant 31 : i64
    %c32_i64_57 = arith.constant 32 : i64
    %173 = arith.addi %171, %c31_i64_56 : i64
    %174 = arith.divui %173, %c32_i64_57 : i64
    %c32_i64_58 = arith.constant 32 : i64
    %175 = arith.muli %174, %c32_i64_58 : i64
    %176 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %177 = llvm.load %176 : !llvm.ptr -> i64
    %c31_i64_59 = arith.constant 31 : i64
    %c32_i64_60 = arith.constant 32 : i64
    %178 = arith.addi %177, %c31_i64_59 : i64
    %179 = arith.divui %178, %c32_i64_60 : i64
    %180 = arith.muli %179, %c32_i64_58 : i64
    %181 = arith.cmpi ult, %180, %175 : i64
    %182 = scf.if %181 -> (i64) {
      %c3_i64_63 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %194 = arith.muli %179, %179 : i64
      %195 = arith.divui %194, %c512_i64 : i64
      %196 = arith.muli %179, %c3_i64_63 : i64
      %197 = arith.addi %195, %196 : i64
      %c3_i64_64 = arith.constant 3 : i64
      %c512_i64_65 = arith.constant 512 : i64
      %198 = arith.muli %174, %174 : i64
      %199 = arith.divui %198, %c512_i64_65 : i64
      %200 = arith.muli %174, %c3_i64_64 : i64
      %201 = arith.addi %199, %200 : i64
      %202 = arith.subi %201, %197 : i64
      scf.yield %202 : i64
    } else {
      %c0_i64_63 = arith.constant 0 : i64
      scf.yield %c0_i64_63 : i64
    }
    %183 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> i64
    %185 = arith.cmpi ult, %184, %182 : i64
    scf.if %185 {
    } else {
      %194 = arith.subi %184, %182 : i64
      llvm.store %194, %183 : i64, !llvm.ptr
    }
    %c80_i8_61 = arith.constant 80 : i8
    cf.cond_br %185, ^bb1(%c80_i8_61 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %186 = call @dora_fn_extend_memory(%arg0, %175) : (!llvm.ptr, i64) -> !llvm.ptr
    %187 = llvm.getelementptr %186[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %188 = llvm.load %187 : !llvm.ptr -> !llvm.ptr
    %189 = llvm.getelementptr %186[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %190 = llvm.load %189 : !llvm.ptr -> i8
    %c0_i8_62 = arith.constant 0 : i8
    %191 = arith.cmpi ne, %190, %c0_i8_62 : i8
    cf.cond_br %191, ^bb1(%190 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %192 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %188, %192 : !llvm.ptr, !llvm.ptr
    %193 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %175, %193 : i64, !llvm.ptr
    cf.br ^bb33
  }
}
