---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 30 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb25, ^bb26, ^bb28, ^bb29, ^bb31, ^bb32, ^bb33, ^bb35, ^bb36, ^bb39, ^bb40, ^bb43, ^bb44, ^bb46, ^bb47, ^bb48, ^bb49, ^bb52, ^bb53
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c30948500970605382398753381619_i256 = arith.constant 30948500970605382398753381619 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c30948500970605382398753381619_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %43 = arith.cmpi ne, %c32_i64, %c0_i64_7 : i64
    cf.cond_br %43, ^bb39, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb42
    %44 = arith.trunci %38 : i256 to i64
    %45 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %46 = llvm.load %45 : !llvm.ptr -> !llvm.ptr
    %47 = llvm.getelementptr %46[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %48 = llvm.intr.bswap(%42)  : (i256) -> i256
    llvm.store %48, %47 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %49 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_8 = arith.constant 1024 : i64
    %50 = llvm.load %49 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %51 = arith.addi %50, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    llvm.store %51, %49 : i64, !llvm.ptr
    %52 = arith.cmpi ult, %50, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %52, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %53 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %54 = llvm.load %53 : !llvm.ptr -> i64
    %c3_i64_9 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %55 = arith.cmpi uge, %54, %c3_i64_9 : i64
    %c80_i8_10 = arith.constant 80 : i8
    cf.cond_br %55, ^bb15, ^bb1(%c80_i8_10 : i8)
  ^bb15:  // pred: ^bb14
    %56 = arith.subi %54, %c3_i64_9 : i64
    llvm.store %56, %53 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c13_i256 = arith.constant 13 : i256
    %57 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %58 = llvm.load %57 : !llvm.ptr -> !llvm.ptr
    llvm.store %c13_i256, %58 : i256, !llvm.ptr
    %59 = llvm.getelementptr %58[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %59, %57 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %60 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_11 = arith.constant 1024 : i64
    %61 = llvm.load %60 : !llvm.ptr -> i64
    %c1_i64_12 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_12 : i64
    llvm.store %62, %60 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64_11, %62 : i64
    %c92_i8_13 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_13 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %64 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i64
    %c3_i64_14 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %66 = arith.cmpi uge, %65, %c3_i64_14 : i64
    %c80_i8_15 = arith.constant 80 : i8
    cf.cond_br %66, ^bb19, ^bb1(%c80_i8_15 : i8)
  ^bb19:  // pred: ^bb18
    %67 = arith.subi %65, %c3_i64_14 : i64
    llvm.store %67, %64 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c19_i256 = arith.constant 19 : i256
    %68 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %69 = llvm.load %68 : !llvm.ptr -> !llvm.ptr
    llvm.store %c19_i256, %69 : i256, !llvm.ptr
    %70 = llvm.getelementptr %69[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %70, %68 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb21:  // pred: ^bb23
    %71 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_16 = arith.constant 1024 : i64
    %72 = llvm.load %71 : !llvm.ptr -> i64
    %c1_i64_17 = arith.constant 1 : i64
    %73 = arith.addi %72, %c1_i64_17 : i64
    llvm.store %73, %71 : i64, !llvm.ptr
    %74 = arith.cmpi ult, %c1024_i64_16, %73 : i64
    %c92_i8_18 = arith.constant 92 : i8
    cf.cond_br %74, ^bb1(%c92_i8_18 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %75 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %76 = llvm.load %75 : !llvm.ptr -> i64
    %c3_i64_19 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %77 = arith.cmpi uge, %76, %c3_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %77, ^bb23, ^bb1(%c80_i8_20 : i8)
  ^bb23:  // pred: ^bb22
    %78 = arith.subi %76, %c3_i64_19 : i64
    llvm.store %78, %75 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb25
    %c0_i256_21 = arith.constant 0 : i256
    %79 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %80 = llvm.load %79 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_21, %80 : i256, !llvm.ptr
    %81 = llvm.getelementptr %80[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %81, %79 : !llvm.ptr, !llvm.ptr
    cf.br ^bb36
  ^bb25:  // pred: ^bb27
    %82 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_22 = arith.constant 1024 : i64
    %83 = llvm.load %82 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %84 = arith.addi %83, %c1_i64_23 : i64
    llvm.store %84, %82 : i64, !llvm.ptr
    %85 = arith.cmpi ult, %c1024_i64_22, %84 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %85, ^bb1(%c92_i8_24 : i8), ^bb24
  ^bb26:  // pred: ^bb20
    %86 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %87 = llvm.load %86 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %88 = arith.cmpi uge, %87, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %88, ^bb27, ^bb1(%c80_i8_26 : i8)
  ^bb27:  // pred: ^bb26
    %89 = arith.subi %87, %c3_i64_25 : i64
    llvm.store %89, %86 : i64, !llvm.ptr
    cf.br ^bb25
  ^bb28:  // pred: ^bb35
    %90 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %91 = llvm.load %90 : !llvm.ptr -> !llvm.ptr
    %92 = llvm.getelementptr %91[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %93 = llvm.load %92 : !llvm.ptr -> i256
    llvm.store %92, %90 : !llvm.ptr, !llvm.ptr
    %94 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %95 = llvm.load %94 : !llvm.ptr -> !llvm.ptr
    %96 = llvm.getelementptr %95[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %97 = llvm.load %96 : !llvm.ptr -> i256
    llvm.store %96, %94 : !llvm.ptr, !llvm.ptr
    %98 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %99 = llvm.load %98 : !llvm.ptr -> !llvm.ptr
    %100 = llvm.getelementptr %99[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %101 = llvm.load %100 : !llvm.ptr -> i256
    llvm.store %100, %98 : !llvm.ptr, !llvm.ptr
    %102 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %103 = arith.cmpi ne, %102, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %103, ^bb1(%c87_i8 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %104 = arith.trunci %101 : i256 to i64
    %c0_i64_27 = arith.constant 0 : i64
    %105 = arith.cmpi slt, %104, %c0_i64_27 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %105, ^bb1(%c84_i8 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %c0_i64_28 = arith.constant 0 : i64
    %106 = arith.cmpi ne, %104, %c0_i64_28 : i64
    cf.cond_br %106, ^bb46, ^bb31
  ^bb31:  // 2 preds: ^bb30, ^bb51
    %c32000_i64 = arith.constant 32000 : i64
    %107 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> i64
    %109 = arith.cmpi ult, %108, %c32000_i64 : i64
    scf.if %109 {
    } else {
      %210 = arith.subi %108, %c32000_i64 : i64
      llvm.store %210, %107 : i64, !llvm.ptr
    }
    %c80_i8_29 = arith.constant 80 : i8
    cf.cond_br %109, ^bb1(%c80_i8_29 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c1_i256 = arith.constant 1 : i256
    %110 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %93, %110 {alignment = 1 : i64} : i256, !llvm.ptr
    %111 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %112 = llvm.load %111 : !llvm.ptr -> i64
    %113 = arith.trunci %97 : i256 to i64
    %114 = call @dora_fn_create(%arg0, %104, %113, %110, %112) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %115 = llvm.getelementptr %114[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %116 = llvm.load %115 : !llvm.ptr -> i8
    %c0_i8_30 = arith.constant 0 : i8
    %117 = arith.cmpi ne, %116, %c0_i8_30 : i8
    cf.cond_br %117, ^bb1(%116 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %118 = llvm.getelementptr %114[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %120 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %121 = llvm.load %120 : !llvm.ptr -> i64
    %122 = arith.cmpi ult, %121, %119 : i64
    scf.if %122 {
    } else {
      %210 = arith.subi %121, %119 : i64
      llvm.store %210, %120 : i64, !llvm.ptr
    }
    %c80_i8_31 = arith.constant 80 : i8
    cf.cond_br %122, ^bb1(%c80_i8_31 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %123 = llvm.load %110 : !llvm.ptr -> i256
    %124 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %125 = llvm.load %124 : !llvm.ptr -> !llvm.ptr
    llvm.store %123, %125 : i256, !llvm.ptr
    %126 = llvm.getelementptr %125[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %126, %124 : !llvm.ptr, !llvm.ptr
    cf.br ^bb38
  ^bb35:  // pred: ^bb37
    %127 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_32 = arith.constant 1024 : i64
    %128 = llvm.load %127 : !llvm.ptr -> i64
    %c-2_i64_33 = arith.constant -2 : i64
    %129 = arith.addi %128, %c-2_i64_33 : i64
    %c3_i64_34 = arith.constant 3 : i64
    llvm.store %129, %127 : i64, !llvm.ptr
    %130 = arith.cmpi ult, %128, %c3_i64_34 : i64
    %c91_i8_35 = arith.constant 91 : i8
    cf.cond_br %130, ^bb1(%c91_i8_35 : i8), ^bb28
  ^bb36:  // pred: ^bb24
    %131 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %132 = llvm.load %131 : !llvm.ptr -> i64
    %c0_i64_36 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %133 = arith.cmpi uge, %132, %c0_i64_36 : i64
    %c80_i8_37 = arith.constant 80 : i8
    cf.cond_br %133, ^bb37, ^bb1(%c80_i8_37 : i8)
  ^bb37:  // pred: ^bb36
    %134 = arith.subi %132, %c0_i64_36 : i64
    llvm.store %134, %131 : i64, !llvm.ptr
    cf.br ^bb35
  ^bb38:  // pred: ^bb34
    %c0_i64_38 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %135 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_38, %c0_i64_38, %136, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb39:  // pred: ^bb11
    %137 = arith.trunci %38 : i256 to i64
    %c0_i64_39 = arith.constant 0 : i64
    %138 = arith.cmpi slt, %137, %c0_i64_39 : i64
    %c84_i8_40 = arith.constant 84 : i8
    cf.cond_br %138, ^bb1(%c84_i8_40 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %139 = arith.addi %137, %c32_i64 : i64
    %c0_i64_41 = arith.constant 0 : i64
    %140 = arith.cmpi slt, %139, %c0_i64_41 : i64
    %c84_i8_42 = arith.constant 84 : i8
    cf.cond_br %140, ^bb1(%c84_i8_42 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_43 = arith.constant 32 : i64
    %141 = arith.addi %139, %c31_i64 : i64
    %142 = arith.divui %141, %c32_i64_43 : i64
    %c32_i64_44 = arith.constant 32 : i64
    %143 = arith.muli %142, %c32_i64_44 : i64
    %144 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c31_i64_45 = arith.constant 31 : i64
    %c32_i64_46 = arith.constant 32 : i64
    %146 = arith.addi %145, %c31_i64_45 : i64
    %147 = arith.divui %146, %c32_i64_46 : i64
    %148 = arith.muli %147, %c32_i64_44 : i64
    %149 = arith.cmpi ult, %148, %143 : i64
    cf.cond_br %149, ^bb43, ^bb42
  ^bb42:  // 2 preds: ^bb41, ^bb45
    cf.br ^bb12
  ^bb43:  // pred: ^bb41
    %c3_i64_47 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %150 = arith.muli %147, %147 : i64
    %151 = arith.divui %150, %c512_i64 : i64
    %152 = arith.muli %147, %c3_i64_47 : i64
    %153 = arith.addi %151, %152 : i64
    %c3_i64_48 = arith.constant 3 : i64
    %c512_i64_49 = arith.constant 512 : i64
    %154 = arith.muli %142, %142 : i64
    %155 = arith.divui %154, %c512_i64_49 : i64
    %156 = arith.muli %142, %c3_i64_48 : i64
    %157 = arith.addi %155, %156 : i64
    %158 = arith.subi %157, %153 : i64
    %159 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> i64
    %161 = arith.cmpi ult, %160, %158 : i64
    scf.if %161 {
    } else {
      %210 = arith.subi %160, %158 : i64
      llvm.store %210, %159 : i64, !llvm.ptr
    }
    %c80_i8_50 = arith.constant 80 : i8
    cf.cond_br %161, ^bb1(%c80_i8_50 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %162 = call @dora_fn_extend_memory(%arg0, %143) : (!llvm.ptr, i64) -> !llvm.ptr
    %163 = llvm.getelementptr %162[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %164 = llvm.load %163 : !llvm.ptr -> !llvm.ptr
    %165 = llvm.getelementptr %162[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %166 = llvm.load %165 : !llvm.ptr -> i8
    %c0_i8_51 = arith.constant 0 : i8
    %167 = arith.cmpi ne, %166, %c0_i8_51 : i8
    cf.cond_br %167, ^bb1(%166 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %168 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %164, %168 : !llvm.ptr, !llvm.ptr
    %169 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %143, %169 : i64, !llvm.ptr
    cf.br ^bb42
  ^bb46:  // pred: ^bb30
    %c49152_i64 = arith.constant 49152 : i64
    %170 = arith.cmpi ugt, %104, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %170, ^bb1(%c100_i8 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %c31_i64_52 = arith.constant 31 : i64
    %c32_i64_53 = arith.constant 32 : i64
    %171 = arith.addi %104, %c31_i64_52 : i64
    %172 = arith.divui %171, %c32_i64_53 : i64
    %c2_i64_54 = arith.constant 2 : i64
    %173 = arith.muli %172, %c2_i64_54 : i64
    %174 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %175 = llvm.load %174 : !llvm.ptr -> i64
    %176 = arith.cmpi ult, %175, %173 : i64
    scf.if %176 {
    } else {
      %210 = arith.subi %175, %173 : i64
      llvm.store %210, %174 : i64, !llvm.ptr
    }
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %176, ^bb1(%c80_i8_55 : i8), ^bb48
  ^bb48:  // pred: ^bb47
    %177 = arith.trunci %97 : i256 to i64
    %c0_i64_56 = arith.constant 0 : i64
    %178 = arith.cmpi slt, %177, %c0_i64_56 : i64
    %c84_i8_57 = arith.constant 84 : i8
    cf.cond_br %178, ^bb1(%c84_i8_57 : i8), ^bb49
  ^bb49:  // pred: ^bb48
    %179 = arith.addi %177, %104 : i64
    %c0_i64_58 = arith.constant 0 : i64
    %180 = arith.cmpi slt, %179, %c0_i64_58 : i64
    %c84_i8_59 = arith.constant 84 : i8
    cf.cond_br %180, ^bb1(%c84_i8_59 : i8), ^bb50
  ^bb50:  // pred: ^bb49
    %c31_i64_60 = arith.constant 31 : i64
    %c32_i64_61 = arith.constant 32 : i64
    %181 = arith.addi %179, %c31_i64_60 : i64
    %182 = arith.divui %181, %c32_i64_61 : i64
    %c32_i64_62 = arith.constant 32 : i64
    %183 = arith.muli %182, %c32_i64_62 : i64
    %184 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %185 = llvm.load %184 : !llvm.ptr -> i64
    %c31_i64_63 = arith.constant 31 : i64
    %c32_i64_64 = arith.constant 32 : i64
    %186 = arith.addi %185, %c31_i64_63 : i64
    %187 = arith.divui %186, %c32_i64_64 : i64
    %188 = arith.muli %187, %c32_i64_62 : i64
    %189 = arith.cmpi ult, %188, %183 : i64
    cf.cond_br %189, ^bb52, ^bb51
  ^bb51:  // 2 preds: ^bb50, ^bb54
    cf.br ^bb31
  ^bb52:  // pred: ^bb50
    %c3_i64_65 = arith.constant 3 : i64
    %c512_i64_66 = arith.constant 512 : i64
    %190 = arith.muli %187, %187 : i64
    %191 = arith.divui %190, %c512_i64_66 : i64
    %192 = arith.muli %187, %c3_i64_65 : i64
    %193 = arith.addi %191, %192 : i64
    %c3_i64_67 = arith.constant 3 : i64
    %c512_i64_68 = arith.constant 512 : i64
    %194 = arith.muli %182, %182 : i64
    %195 = arith.divui %194, %c512_i64_68 : i64
    %196 = arith.muli %182, %c3_i64_67 : i64
    %197 = arith.addi %195, %196 : i64
    %198 = arith.subi %197, %193 : i64
    %199 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> i64
    %201 = arith.cmpi ult, %200, %198 : i64
    scf.if %201 {
    } else {
      %210 = arith.subi %200, %198 : i64
      llvm.store %210, %199 : i64, !llvm.ptr
    }
    %c80_i8_69 = arith.constant 80 : i8
    cf.cond_br %201, ^bb1(%c80_i8_69 : i8), ^bb53
  ^bb53:  // pred: ^bb52
    %202 = call @dora_fn_extend_memory(%arg0, %183) : (!llvm.ptr, i64) -> !llvm.ptr
    %203 = llvm.getelementptr %202[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %204 = llvm.load %203 : !llvm.ptr -> !llvm.ptr
    %205 = llvm.getelementptr %202[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %206 = llvm.load %205 : !llvm.ptr -> i8
    %c0_i8_70 = arith.constant 0 : i8
    %207 = arith.cmpi ne, %206, %c0_i8_70 : i8
    cf.cond_br %207, ^bb1(%206 : i8), ^bb54
  ^bb54:  // pred: ^bb53
    %208 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %204, %208 : !llvm.ptr, !llvm.ptr
    %209 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %183, %209 : i64, !llvm.ptr
    cf.br ^bb51
  }
}
