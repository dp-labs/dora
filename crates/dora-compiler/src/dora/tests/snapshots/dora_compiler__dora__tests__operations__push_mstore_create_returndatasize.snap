---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_memory_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_memory_size(!llvm.ptr) -> i64
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: !llvm.ptr, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    %c0_i64 = arith.constant 0 : i64
    %0 = llvm.alloca %c0_i64 x !llvm.ptr : (i64) -> !llvm.ptr
    llvm.store %arg2, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb5
  ^bb1(%1: i8):  // 87 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb39, ^bb40, ^bb43, ^bb44, ^bb47, ^bb48, ^bb51, ^bb52, ^bb54, ^bb55, ^bb56, ^bb58, ^bb59, ^bb60, ^bb62, ^bb63, ^bb66, ^bb67, ^bb70, ^bb71, ^bb74, ^bb75, ^bb78, ^bb79, ^bb82, ^bb83, ^bb86, ^bb87, ^bb89, ^bb90, ^bb92, ^bb93, ^bb95, ^bb96, ^bb98, ^bb99, ^bb102, ^bb103, ^bb106, ^bb107, ^bb108, ^bb111, ^bb112, ^bb114, ^bb115, ^bb116, ^bb119, ^bb120, ^bb122, ^bb123, ^bb124, ^bb127, ^bb128, ^bb130, ^bb131, ^bb132, ^bb133, ^bb134, ^bb137, ^bb138, ^bb140, ^bb141, ^bb142, ^bb145, ^bb146, ^bb148, ^bb149, ^bb150, ^bb153, ^bb154
    %c0_i64_0 = arith.constant 0 : i64
    %2 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_0, %c0_i64_0, %2, %1) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %1 : i8
  ^bb2(%3: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %3 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %4 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %4 : i256, !llvm.ptr
    %5 = llvm.getelementptr %4[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %5, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %6 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %7 = arith.addi %6, %c1_i64 : i64
    llvm.store %7, %arg3 : i64, !llvm.ptr
    %8 = arith.cmpi ult, %c1024_i64, %7 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %8, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %9 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %10 = arith.cmpi uge, %9, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %10, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %11 = arith.subi %9, %c3_i64 : i64
    llvm.store %11, %arg1 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %12 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %12 : i256, !llvm.ptr
    %13 = llvm.getelementptr %12[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %13, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_1 = arith.constant 1024 : i64
    %14 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %15 = arith.addi %14, %c1_i64_2 : i64
    llvm.store %15, %arg3 : i64, !llvm.ptr
    %16 = arith.cmpi ult, %c1024_i64_1, %15 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %16, ^bb1(%c92_i8_3 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %17 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_4 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %18 = arith.cmpi uge, %17, %c3_i64_4 : i64
    %c80_i8_5 = arith.constant 80 : i8
    cf.cond_br %18, ^bb10, ^bb1(%c80_i8_5 : i8)
  ^bb10:  // pred: ^bb9
    %19 = arith.subi %17, %c3_i64_4 : i64
    llvm.store %19, %arg1 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %20 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %21 = llvm.getelementptr %20[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %22 = llvm.load %21 : !llvm.ptr -> i256
    llvm.store %21, %0 : !llvm.ptr, !llvm.ptr
    %23 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %24 = llvm.getelementptr %23[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %25 = llvm.load %24 : !llvm.ptr -> i256
    llvm.store %24, %0 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_6 = arith.constant 0 : i64
    %26 = arith.cmpi ne, %c32_i64, %c0_i64_6 : i64
    cf.cond_br %26, ^bb106, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb110
    %27 = arith.trunci %22 : i256 to i64
    %28 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %29 = llvm.getelementptr %28[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %30 = llvm.intr.bswap(%25)  : (i256) -> i256
    llvm.store %30, %29 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_7 = arith.constant 1024 : i64
    %31 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %32 = arith.addi %31, %c-2_i64 : i64
    llvm.store %32, %arg3 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %33 = arith.cmpi ult, %31, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %33, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %34 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_8 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %35 = arith.cmpi uge, %34, %c3_i64_8 : i64
    %c80_i8_9 = arith.constant 80 : i8
    cf.cond_br %35, ^bb15, ^bb1(%c80_i8_9 : i8)
  ^bb15:  // pred: ^bb14
    %36 = arith.subi %34, %c3_i64_8 : i64
    llvm.store %36, %arg1 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %37 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %37 : i256, !llvm.ptr
    %38 = llvm.getelementptr %37[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %38, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_10 = arith.constant 1024 : i64
    %39 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_11 = arith.constant 1 : i64
    %40 = arith.addi %39, %c1_i64_11 : i64
    llvm.store %40, %arg3 : i64, !llvm.ptr
    %41 = arith.cmpi ult, %c1024_i64_10, %40 : i64
    %c92_i8_12 = arith.constant 92 : i8
    cf.cond_br %41, ^bb1(%c92_i8_12 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %42 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_13 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %43 = arith.cmpi uge, %42, %c3_i64_13 : i64
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %43, ^bb19, ^bb1(%c80_i8_14 : i8)
  ^bb19:  // pred: ^bb18
    %44 = arith.subi %42, %c3_i64_13 : i64
    llvm.store %44, %arg1 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c32_i256 = arith.constant 32 : i256
    %45 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %45 : i256, !llvm.ptr
    %46 = llvm.getelementptr %45[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %46, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %c1024_i64_15 = arith.constant 1024 : i64
    %47 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_16 = arith.constant 1 : i64
    %48 = arith.addi %47, %c1_i64_16 : i64
    llvm.store %48, %arg3 : i64, !llvm.ptr
    %49 = arith.cmpi ult, %c1024_i64_15, %48 : i64
    %c92_i8_17 = arith.constant 92 : i8
    cf.cond_br %49, ^bb1(%c92_i8_17 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %50 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_18 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %51 = arith.cmpi uge, %50, %c3_i64_18 : i64
    %c80_i8_19 = arith.constant 80 : i8
    cf.cond_br %51, ^bb23, ^bb1(%c80_i8_19 : i8)
  ^bb23:  // pred: ^bb22
    %52 = arith.subi %50, %c3_i64_18 : i64
    llvm.store %52, %arg1 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %53 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %54 = llvm.getelementptr %53[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %55 = llvm.load %54 : !llvm.ptr -> i256
    llvm.store %54, %0 : !llvm.ptr, !llvm.ptr
    %56 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %57 = llvm.getelementptr %56[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %58 = llvm.load %57 : !llvm.ptr -> i256
    llvm.store %57, %0 : !llvm.ptr, !llvm.ptr
    %c32_i64_20 = arith.constant 32 : i64
    %c0_i64_21 = arith.constant 0 : i64
    %59 = arith.cmpi ne, %c32_i64_20, %c0_i64_21 : i64
    cf.cond_br %59, ^bb114, ^bb25
  ^bb25:  // 2 preds: ^bb24, ^bb118
    %60 = arith.trunci %55 : i256 to i64
    %61 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %62 = llvm.getelementptr %61[%60] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %63 = llvm.intr.bswap(%58)  : (i256) -> i256
    llvm.store %63, %62 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %c1024_i64_22 = arith.constant 1024 : i64
    %64 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_23 = arith.constant -2 : i64
    %65 = arith.addi %64, %c-2_i64_23 : i64
    llvm.store %65, %arg3 : i64, !llvm.ptr
    %c2_i64_24 = arith.constant 2 : i64
    %66 = arith.cmpi ult, %64, %c2_i64_24 : i64
    %c91_i8_25 = arith.constant 91 : i8
    cf.cond_br %66, ^bb1(%c91_i8_25 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %67 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %68 = arith.cmpi uge, %67, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %68, ^bb28, ^bb1(%c80_i8_27 : i8)
  ^bb28:  // pred: ^bb27
    %69 = arith.subi %67, %c3_i64_26 : i64
    llvm.store %69, %arg1 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %70 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %70 : i256, !llvm.ptr
    %71 = llvm.getelementptr %70[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %71, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %c1024_i64_28 = arith.constant 1024 : i64
    %72 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_29 = arith.constant 1 : i64
    %73 = arith.addi %72, %c1_i64_29 : i64
    llvm.store %73, %arg3 : i64, !llvm.ptr
    %74 = arith.cmpi ult, %c1024_i64_28, %73 : i64
    %c92_i8_30 = arith.constant 92 : i8
    cf.cond_br %74, ^bb1(%c92_i8_30 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %75 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_31 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %76 = arith.cmpi uge, %75, %c3_i64_31 : i64
    %c80_i8_32 = arith.constant 80 : i8
    cf.cond_br %76, ^bb32, ^bb1(%c80_i8_32 : i8)
  ^bb32:  // pred: ^bb31
    %77 = arith.subi %75, %c3_i64_31 : i64
    llvm.store %77, %arg1 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %c64_i256 = arith.constant 64 : i256
    %78 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %78 : i256, !llvm.ptr
    %79 = llvm.getelementptr %78[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %79, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb40
  ^bb34:  // pred: ^bb36
    %c1024_i64_33 = arith.constant 1024 : i64
    %80 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_34 = arith.constant 1 : i64
    %81 = arith.addi %80, %c1_i64_34 : i64
    llvm.store %81, %arg3 : i64, !llvm.ptr
    %82 = arith.cmpi ult, %c1024_i64_33, %81 : i64
    %c92_i8_35 = arith.constant 92 : i8
    cf.cond_br %82, ^bb1(%c92_i8_35 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %83 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_36 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %84 = arith.cmpi uge, %83, %c3_i64_36 : i64
    %c80_i8_37 = arith.constant 80 : i8
    cf.cond_br %84, ^bb36, ^bb1(%c80_i8_37 : i8)
  ^bb36:  // pred: ^bb35
    %85 = arith.subi %83, %c3_i64_36 : i64
    llvm.store %85, %arg1 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb39
    %86 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %87 = llvm.getelementptr %86[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %88 = llvm.load %87 : !llvm.ptr -> i256
    llvm.store %87, %0 : !llvm.ptr, !llvm.ptr
    %89 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %90 = llvm.getelementptr %89[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %91 = llvm.load %90 : !llvm.ptr -> i256
    llvm.store %90, %0 : !llvm.ptr, !llvm.ptr
    %c32_i64_38 = arith.constant 32 : i64
    %c0_i64_39 = arith.constant 0 : i64
    %92 = arith.cmpi ne, %c32_i64_38, %c0_i64_39 : i64
    cf.cond_br %92, ^bb122, ^bb38
  ^bb38:  // 2 preds: ^bb37, ^bb126
    %93 = arith.trunci %88 : i256 to i64
    %94 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %95 = llvm.getelementptr %94[%93] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %96 = llvm.intr.bswap(%91)  : (i256) -> i256
    llvm.store %96, %95 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb44
  ^bb39:  // pred: ^bb41
    %c1024_i64_40 = arith.constant 1024 : i64
    %97 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_41 = arith.constant -2 : i64
    %98 = arith.addi %97, %c-2_i64_41 : i64
    llvm.store %98, %arg3 : i64, !llvm.ptr
    %c2_i64_42 = arith.constant 2 : i64
    %99 = arith.cmpi ult, %97, %c2_i64_42 : i64
    %c91_i8_43 = arith.constant 91 : i8
    cf.cond_br %99, ^bb1(%c91_i8_43 : i8), ^bb37
  ^bb40:  // pred: ^bb33
    %100 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_44 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %101 = arith.cmpi uge, %100, %c3_i64_44 : i64
    %c80_i8_45 = arith.constant 80 : i8
    cf.cond_br %101, ^bb41, ^bb1(%c80_i8_45 : i8)
  ^bb41:  // pred: ^bb40
    %102 = arith.subi %100, %c3_i64_44 : i64
    llvm.store %102, %arg1 : i64, !llvm.ptr
    cf.br ^bb39
  ^bb42:  // pred: ^bb43
    %c77_i256 = arith.constant 77 : i256
    %103 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %103 : i256, !llvm.ptr
    %104 = llvm.getelementptr %103[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %104, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb48
  ^bb43:  // pred: ^bb45
    %c1024_i64_46 = arith.constant 1024 : i64
    %105 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_47 = arith.constant 1 : i64
    %106 = arith.addi %105, %c1_i64_47 : i64
    llvm.store %106, %arg3 : i64, !llvm.ptr
    %107 = arith.cmpi ult, %c1024_i64_46, %106 : i64
    %c92_i8_48 = arith.constant 92 : i8
    cf.cond_br %107, ^bb1(%c92_i8_48 : i8), ^bb42
  ^bb44:  // pred: ^bb38
    %108 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_49 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %109 = arith.cmpi uge, %108, %c3_i64_49 : i64
    %c80_i8_50 = arith.constant 80 : i8
    cf.cond_br %109, ^bb45, ^bb1(%c80_i8_50 : i8)
  ^bb45:  // pred: ^bb44
    %110 = arith.subi %108, %c3_i64_49 : i64
    llvm.store %110, %arg1 : i64, !llvm.ptr
    cf.br ^bb43
  ^bb46:  // pred: ^bb47
    %c0_i256_51 = arith.constant 0 : i256
    %111 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_51, %111 : i256, !llvm.ptr
    %112 = llvm.getelementptr %111[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %112, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb52
  ^bb47:  // pred: ^bb49
    %c1024_i64_52 = arith.constant 1024 : i64
    %113 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_53 = arith.constant 1 : i64
    %114 = arith.addi %113, %c1_i64_53 : i64
    llvm.store %114, %arg3 : i64, !llvm.ptr
    %115 = arith.cmpi ult, %c1024_i64_52, %114 : i64
    %c92_i8_54 = arith.constant 92 : i8
    cf.cond_br %115, ^bb1(%c92_i8_54 : i8), ^bb46
  ^bb48:  // pred: ^bb42
    %116 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_55 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %117 = arith.cmpi uge, %116, %c3_i64_55 : i64
    %c80_i8_56 = arith.constant 80 : i8
    cf.cond_br %117, ^bb49, ^bb1(%c80_i8_56 : i8)
  ^bb49:  // pred: ^bb48
    %118 = arith.subi %116, %c3_i64_55 : i64
    llvm.store %118, %arg1 : i64, !llvm.ptr
    cf.br ^bb47
  ^bb50:  // pred: ^bb51
    %c0_i256_57 = arith.constant 0 : i256
    %119 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_57, %119 : i256, !llvm.ptr
    %120 = llvm.getelementptr %119[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %120, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb63
  ^bb51:  // pred: ^bb53
    %c1024_i64_58 = arith.constant 1024 : i64
    %121 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %122 = arith.addi %121, %c1_i64_59 : i64
    llvm.store %122, %arg3 : i64, !llvm.ptr
    %123 = arith.cmpi ult, %c1024_i64_58, %122 : i64
    %c92_i8_60 = arith.constant 92 : i8
    cf.cond_br %123, ^bb1(%c92_i8_60 : i8), ^bb50
  ^bb52:  // pred: ^bb46
    %124 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_61 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %125 = arith.cmpi uge, %124, %c3_i64_61 : i64
    %c80_i8_62 = arith.constant 80 : i8
    cf.cond_br %125, ^bb53, ^bb1(%c80_i8_62 : i8)
  ^bb53:  // pred: ^bb52
    %126 = arith.subi %124, %c3_i64_61 : i64
    llvm.store %126, %arg1 : i64, !llvm.ptr
    cf.br ^bb51
  ^bb54:  // pred: ^bb62
    %127 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %128 = llvm.getelementptr %127[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %129 = llvm.load %128 : !llvm.ptr -> i256
    llvm.store %128, %0 : !llvm.ptr, !llvm.ptr
    %130 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %131 = llvm.getelementptr %130[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %132 = llvm.load %131 : !llvm.ptr -> i256
    llvm.store %131, %0 : !llvm.ptr, !llvm.ptr
    %133 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %134 = llvm.getelementptr %133[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %135 = llvm.load %134 : !llvm.ptr -> i256
    llvm.store %134, %0 : !llvm.ptr, !llvm.ptr
    %136 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %137 = arith.cmpi ne, %136, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %137, ^bb1(%c87_i8 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %138 = arith.cmpi sgt, %135, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %138, ^bb1(%c84_i8 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %139 = arith.trunci %135 : i256 to i64
    %c0_i64_63 = arith.constant 0 : i64
    %140 = arith.cmpi slt, %139, %c0_i64_63 : i64
    %c84_i8_64 = arith.constant 84 : i8
    cf.cond_br %140, ^bb1(%c84_i8_64 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %c0_i64_65 = arith.constant 0 : i64
    %141 = arith.cmpi ne, %139, %c0_i64_65 : i64
    cf.cond_br %141, ^bb130, ^bb58
  ^bb58:  // 2 preds: ^bb57, ^bb136
    %c32000_i64 = arith.constant 32000 : i64
    %142 = llvm.load %arg1 : !llvm.ptr -> i64
    %143 = arith.cmpi ult, %142, %c32000_i64 : i64
    scf.if %143 {
    } else {
      %453 = arith.subi %142, %c32000_i64 : i64
      llvm.store %453, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_66 = arith.constant 80 : i8
    cf.cond_br %143, ^bb1(%c80_i8_66 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %c1_i256 = arith.constant 1 : i256
    %144 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %129, %144 {alignment = 1 : i64} : i256, !llvm.ptr
    %145 = llvm.load %arg1 : !llvm.ptr -> i64
    %146 = arith.trunci %132 : i256 to i64
    %147 = call @dora_fn_create(%arg0, %139, %146, %144, %145) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %148 = llvm.getelementptr %147[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %149 = llvm.load %148 : !llvm.ptr -> i8
    %c0_i8_67 = arith.constant 0 : i8
    %150 = arith.cmpi ne, %149, %c0_i8_67 : i8
    cf.cond_br %150, ^bb1(%149 : i8), ^bb60
  ^bb60:  // pred: ^bb59
    %151 = llvm.getelementptr %147[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %152 = llvm.load %151 : !llvm.ptr -> i64
    %153 = llvm.load %arg1 : !llvm.ptr -> i64
    %154 = arith.cmpi ult, %153, %152 : i64
    scf.if %154 {
    } else {
      %453 = arith.subi %153, %152 : i64
      llvm.store %453, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_68 = arith.constant 80 : i8
    cf.cond_br %154, ^bb1(%c80_i8_68 : i8), ^bb61
  ^bb61:  // pred: ^bb60
    %155 = llvm.load %144 : !llvm.ptr -> i256
    %156 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %155, %156 : i256, !llvm.ptr
    %157 = llvm.getelementptr %156[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %157, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb67
  ^bb62:  // pred: ^bb64
    %c1024_i64_69 = arith.constant 1024 : i64
    %158 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_70 = arith.constant -2 : i64
    %159 = arith.addi %158, %c-2_i64_70 : i64
    llvm.store %159, %arg3 : i64, !llvm.ptr
    %c3_i64_71 = arith.constant 3 : i64
    %160 = arith.cmpi ult, %158, %c3_i64_71 : i64
    %c91_i8_72 = arith.constant 91 : i8
    cf.cond_br %160, ^bb1(%c91_i8_72 : i8), ^bb54
  ^bb63:  // pred: ^bb50
    %161 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_73 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %162 = arith.cmpi uge, %161, %c0_i64_73 : i64
    %c80_i8_74 = arith.constant 80 : i8
    cf.cond_br %162, ^bb64, ^bb1(%c80_i8_74 : i8)
  ^bb64:  // pred: ^bb63
    %163 = arith.subi %161, %c0_i64_73 : i64
    llvm.store %163, %arg1 : i64, !llvm.ptr
    cf.br ^bb62
  ^bb65:  // pred: ^bb66
    %c0_i256_75 = arith.constant 0 : i256
    %164 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_75, %164 : i256, !llvm.ptr
    %165 = llvm.getelementptr %164[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %165, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb71
  ^bb66:  // pred: ^bb68
    %c1024_i64_76 = arith.constant 1024 : i64
    %166 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_77 = arith.constant 1 : i64
    %167 = arith.addi %166, %c1_i64_77 : i64
    llvm.store %167, %arg3 : i64, !llvm.ptr
    %168 = arith.cmpi ult, %c1024_i64_76, %167 : i64
    %c92_i8_78 = arith.constant 92 : i8
    cf.cond_br %168, ^bb1(%c92_i8_78 : i8), ^bb65
  ^bb67:  // pred: ^bb61
    %169 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_79 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %170 = arith.cmpi uge, %169, %c3_i64_79 : i64
    %c80_i8_80 = arith.constant 80 : i8
    cf.cond_br %170, ^bb68, ^bb1(%c80_i8_80 : i8)
  ^bb68:  // pred: ^bb67
    %171 = arith.subi %169, %c3_i64_79 : i64
    llvm.store %171, %arg1 : i64, !llvm.ptr
    cf.br ^bb66
  ^bb69:  // pred: ^bb70
    %c0_i256_81 = arith.constant 0 : i256
    %172 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_81, %172 : i256, !llvm.ptr
    %173 = llvm.getelementptr %172[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %173, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb75
  ^bb70:  // pred: ^bb72
    %c1024_i64_82 = arith.constant 1024 : i64
    %174 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_83 = arith.constant 1 : i64
    %175 = arith.addi %174, %c1_i64_83 : i64
    llvm.store %175, %arg3 : i64, !llvm.ptr
    %176 = arith.cmpi ult, %c1024_i64_82, %175 : i64
    %c92_i8_84 = arith.constant 92 : i8
    cf.cond_br %176, ^bb1(%c92_i8_84 : i8), ^bb69
  ^bb71:  // pred: ^bb65
    %177 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_85 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %178 = arith.cmpi uge, %177, %c3_i64_85 : i64
    %c80_i8_86 = arith.constant 80 : i8
    cf.cond_br %178, ^bb72, ^bb1(%c80_i8_86 : i8)
  ^bb72:  // pred: ^bb71
    %179 = arith.subi %177, %c3_i64_85 : i64
    llvm.store %179, %arg1 : i64, !llvm.ptr
    cf.br ^bb70
  ^bb73:  // pred: ^bb74
    %c0_i256_87 = arith.constant 0 : i256
    %180 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_87, %180 : i256, !llvm.ptr
    %181 = llvm.getelementptr %180[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %181, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb79
  ^bb74:  // pred: ^bb76
    %c1024_i64_88 = arith.constant 1024 : i64
    %182 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_89 = arith.constant 1 : i64
    %183 = arith.addi %182, %c1_i64_89 : i64
    llvm.store %183, %arg3 : i64, !llvm.ptr
    %184 = arith.cmpi ult, %c1024_i64_88, %183 : i64
    %c92_i8_90 = arith.constant 92 : i8
    cf.cond_br %184, ^bb1(%c92_i8_90 : i8), ^bb73
  ^bb75:  // pred: ^bb69
    %185 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_91 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %186 = arith.cmpi uge, %185, %c3_i64_91 : i64
    %c80_i8_92 = arith.constant 80 : i8
    cf.cond_br %186, ^bb76, ^bb1(%c80_i8_92 : i8)
  ^bb76:  // pred: ^bb75
    %187 = arith.subi %185, %c3_i64_91 : i64
    llvm.store %187, %arg1 : i64, !llvm.ptr
    cf.br ^bb74
  ^bb77:  // pred: ^bb78
    %c0_i256_93 = arith.constant 0 : i256
    %188 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_93, %188 : i256, !llvm.ptr
    %189 = llvm.getelementptr %188[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %189, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb83
  ^bb78:  // pred: ^bb80
    %c1024_i64_94 = arith.constant 1024 : i64
    %190 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_95 = arith.constant 1 : i64
    %191 = arith.addi %190, %c1_i64_95 : i64
    llvm.store %191, %arg3 : i64, !llvm.ptr
    %192 = arith.cmpi ult, %c1024_i64_94, %191 : i64
    %c92_i8_96 = arith.constant 92 : i8
    cf.cond_br %192, ^bb1(%c92_i8_96 : i8), ^bb77
  ^bb79:  // pred: ^bb73
    %193 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_97 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %194 = arith.cmpi uge, %193, %c3_i64_97 : i64
    %c80_i8_98 = arith.constant 80 : i8
    cf.cond_br %194, ^bb80, ^bb1(%c80_i8_98 : i8)
  ^bb80:  // pred: ^bb79
    %195 = arith.subi %193, %c3_i64_97 : i64
    llvm.store %195, %arg1 : i64, !llvm.ptr
    cf.br ^bb78
  ^bb81:  // pred: ^bb82
    %196 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %197 = llvm.getelementptr %196[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %198 = llvm.load %197 : !llvm.ptr -> i256
    %199 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %198, %199 : i256, !llvm.ptr
    %200 = llvm.getelementptr %199[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %200, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb87
  ^bb82:  // pred: ^bb84
    %c1024_i64_99 = arith.constant 1024 : i64
    %201 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_100 = arith.constant 1 : i64
    %202 = arith.addi %201, %c1_i64_100 : i64
    llvm.store %202, %arg3 : i64, !llvm.ptr
    %c5_i64 = arith.constant 5 : i64
    %203 = arith.cmpi ult, %201, %c5_i64 : i64
    %204 = arith.cmpi ult, %c1024_i64_99, %202 : i64
    %205 = arith.xori %203, %204 : i1
    %c92_i8_101 = arith.constant 92 : i8
    cf.cond_br %205, ^bb1(%c92_i8_101 : i8), ^bb81
  ^bb83:  // pred: ^bb77
    %206 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_102 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %207 = arith.cmpi uge, %206, %c3_i64_102 : i64
    %c80_i8_103 = arith.constant 80 : i8
    cf.cond_br %207, ^bb84, ^bb1(%c80_i8_103 : i8)
  ^bb84:  // pred: ^bb83
    %208 = arith.subi %206, %c3_i64_102 : i64
    llvm.store %208, %arg1 : i64, !llvm.ptr
    cf.br ^bb82
  ^bb85:  // pred: ^bb86
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %209 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %209 : i256, !llvm.ptr
    %210 = llvm.getelementptr %209[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %210, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb99
  ^bb86:  // pred: ^bb88
    %c1024_i64_104 = arith.constant 1024 : i64
    %211 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_105 = arith.constant 1 : i64
    %212 = arith.addi %211, %c1_i64_105 : i64
    llvm.store %212, %arg3 : i64, !llvm.ptr
    %213 = arith.cmpi ult, %c1024_i64_104, %212 : i64
    %c92_i8_106 = arith.constant 92 : i8
    cf.cond_br %213, ^bb1(%c92_i8_106 : i8), ^bb85
  ^bb87:  // pred: ^bb81
    %214 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_107 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %215 = arith.cmpi uge, %214, %c3_i64_107 : i64
    %c80_i8_108 = arith.constant 80 : i8
    cf.cond_br %215, ^bb88, ^bb1(%c80_i8_108 : i8)
  ^bb88:  // pred: ^bb87
    %216 = arith.subi %214, %c3_i64_107 : i64
    llvm.store %216, %arg1 : i64, !llvm.ptr
    cf.br ^bb86
  ^bb89:  // pred: ^bb98
    %217 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %218 = llvm.getelementptr %217[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %219 = llvm.load %218 : !llvm.ptr -> i256
    llvm.store %218, %0 : !llvm.ptr, !llvm.ptr
    %220 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %221 = llvm.getelementptr %220[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %222 = llvm.load %221 : !llvm.ptr -> i256
    llvm.store %221, %0 : !llvm.ptr, !llvm.ptr
    %223 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %224 = llvm.getelementptr %223[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %225 = llvm.load %224 : !llvm.ptr -> i256
    llvm.store %224, %0 : !llvm.ptr, !llvm.ptr
    %226 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %227 = llvm.getelementptr %226[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %228 = llvm.load %227 : !llvm.ptr -> i256
    llvm.store %227, %0 : !llvm.ptr, !llvm.ptr
    %229 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %230 = llvm.getelementptr %229[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %231 = llvm.load %230 : !llvm.ptr -> i256
    llvm.store %230, %0 : !llvm.ptr, !llvm.ptr
    %232 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    %233 = llvm.getelementptr %232[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %234 = llvm.load %233 : !llvm.ptr -> i256
    llvm.store %233, %0 : !llvm.ptr, !llvm.ptr
    %c0_i256_109 = arith.constant 0 : i256
    %c18446744073709551615_i256_110 = arith.constant 18446744073709551615 : i256
    %235 = arith.cmpi sgt, %228, %c18446744073709551615_i256_110 : i256
    %c84_i8_111 = arith.constant 84 : i8
    cf.cond_br %235, ^bb1(%c84_i8_111 : i8), ^bb90
  ^bb90:  // pred: ^bb89
    %236 = arith.trunci %228 : i256 to i64
    %c0_i64_112 = arith.constant 0 : i64
    %237 = arith.cmpi slt, %236, %c0_i64_112 : i64
    %c84_i8_113 = arith.constant 84 : i8
    cf.cond_br %237, ^bb1(%c84_i8_113 : i8), ^bb91
  ^bb91:  // pred: ^bb90
    %c0_i64_114 = arith.constant 0 : i64
    %238 = arith.cmpi ne, %236, %c0_i64_114 : i64
    cf.cond_br %238, ^bb140, ^bb92
  ^bb92:  // 2 preds: ^bb91, ^bb144
    %c18446744073709551615_i256_115 = arith.constant 18446744073709551615 : i256
    %239 = arith.cmpi sgt, %234, %c18446744073709551615_i256_115 : i256
    %c84_i8_116 = arith.constant 84 : i8
    cf.cond_br %239, ^bb1(%c84_i8_116 : i8), ^bb93
  ^bb93:  // pred: ^bb92
    %240 = arith.trunci %234 : i256 to i64
    %c0_i64_117 = arith.constant 0 : i64
    %241 = arith.cmpi slt, %240, %c0_i64_117 : i64
    %c84_i8_118 = arith.constant 84 : i8
    cf.cond_br %241, ^bb1(%c84_i8_118 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %c0_i64_119 = arith.constant 0 : i64
    %242 = arith.cmpi ne, %240, %c0_i64_119 : i64
    cf.cond_br %242, ^bb148, ^bb95
  ^bb95:  // 2 preds: ^bb94, ^bb152
    %243 = arith.trunci %225 : i256 to i64
    %244 = arith.trunci %231 : i256 to i64
    %245 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_120 = arith.constant 1 : i256
    %246 = llvm.alloca %c1_i256_120 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_109, %246 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_121 = arith.constant 1 : i256
    %247 = llvm.alloca %c1_i256_121 x i256 : (i256) -> !llvm.ptr
    llvm.store %219, %247 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_122 = arith.constant 1 : i256
    %248 = llvm.alloca %c1_i256_122 x i256 : (i256) -> !llvm.ptr
    llvm.store %222, %248 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i8 = arith.constant 1 : i8
    %249 = call @dora_fn_call(%arg0, %247, %248, %246, %243, %236, %244, %240, %245, %c1_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %250 = llvm.getelementptr %249[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %251 = llvm.load %250 : !llvm.ptr -> i8
    %252 = llvm.getelementptr %249[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %253 = llvm.load %252 : !llvm.ptr -> i8
    %c0_i8_123 = arith.constant 0 : i8
    %254 = arith.cmpi ne, %253, %c0_i8_123 : i8
    cf.cond_br %254, ^bb1(%253 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %255 = llvm.getelementptr %249[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %256 = llvm.load %255 : !llvm.ptr -> i64
    %257 = llvm.load %arg1 : !llvm.ptr -> i64
    %258 = arith.cmpi ult, %257, %256 : i64
    scf.if %258 {
    } else {
      %453 = arith.subi %257, %256 : i64
      llvm.store %453, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_124 = arith.constant 80 : i8
    cf.cond_br %258, ^bb1(%c80_i8_124 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %259 = arith.extui %251 : i8 to i256
    %260 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %259, %260 : i256, !llvm.ptr
    %261 = llvm.getelementptr %260[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %261, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb103
  ^bb98:  // pred: ^bb100
    %c1024_i64_125 = arith.constant 1024 : i64
    %262 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %263 = arith.addi %262, %c-5_i64 : i64
    llvm.store %263, %arg3 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %264 = arith.cmpi ult, %262, %c6_i64 : i64
    %c91_i8_126 = arith.constant 91 : i8
    cf.cond_br %264, ^bb1(%c91_i8_126 : i8), ^bb89
  ^bb99:  // pred: ^bb85
    %265 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_127 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %266 = arith.cmpi uge, %265, %c0_i64_127 : i64
    %c80_i8_128 = arith.constant 80 : i8
    cf.cond_br %266, ^bb100, ^bb1(%c80_i8_128 : i8)
  ^bb100:  // pred: ^bb99
    %267 = arith.subi %265, %c0_i64_127 : i64
    llvm.store %267, %arg1 : i64, !llvm.ptr
    cf.br ^bb98
  ^bb101:  // pred: ^bb102
    %268 = call @dora_fn_returndata_size(%arg0) : (!llvm.ptr) -> i64
    %269 = arith.extui %268 : i64 to i256
    %270 = llvm.load %0 : !llvm.ptr -> !llvm.ptr
    llvm.store %269, %270 : i256, !llvm.ptr
    %271 = llvm.getelementptr %270[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %271, %0 : !llvm.ptr, !llvm.ptr
    cf.br ^bb105
  ^bb102:  // pred: ^bb104
    %c1024_i64_129 = arith.constant 1024 : i64
    %272 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_130 = arith.constant 1 : i64
    %273 = arith.addi %272, %c1_i64_130 : i64
    llvm.store %273, %arg3 : i64, !llvm.ptr
    %274 = arith.cmpi ult, %c1024_i64_129, %273 : i64
    %c92_i8_131 = arith.constant 92 : i8
    cf.cond_br %274, ^bb1(%c92_i8_131 : i8), ^bb101
  ^bb103:  // pred: ^bb97
    %275 = llvm.load %arg1 : !llvm.ptr -> i64
    %c2_i64_132 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %276 = arith.cmpi uge, %275, %c2_i64_132 : i64
    %c80_i8_133 = arith.constant 80 : i8
    cf.cond_br %276, ^bb104, ^bb1(%c80_i8_133 : i8)
  ^bb104:  // pred: ^bb103
    %277 = arith.subi %275, %c2_i64_132 : i64
    llvm.store %277, %arg1 : i64, !llvm.ptr
    cf.br ^bb102
  ^bb105:  // pred: ^bb101
    %c0_i64_134 = arith.constant 0 : i64
    %c1_i8_135 = arith.constant 1 : i8
    %278 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_134, %c0_i64_134, %278, %c1_i8_135) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8_135 : i8
  ^bb106:  // pred: ^bb11
    %c18446744073709551615_i256_136 = arith.constant 18446744073709551615 : i256
    %279 = arith.cmpi sgt, %22, %c18446744073709551615_i256_136 : i256
    %c84_i8_137 = arith.constant 84 : i8
    cf.cond_br %279, ^bb1(%c84_i8_137 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %280 = arith.trunci %22 : i256 to i64
    %c0_i64_138 = arith.constant 0 : i64
    %281 = arith.cmpi slt, %280, %c0_i64_138 : i64
    %c84_i8_139 = arith.constant 84 : i8
    cf.cond_br %281, ^bb1(%c84_i8_139 : i8), ^bb108
  ^bb108:  // pred: ^bb107
    %282 = arith.addi %280, %c32_i64 : i64
    %c0_i64_140 = arith.constant 0 : i64
    %283 = arith.cmpi slt, %282, %c0_i64_140 : i64
    %c84_i8_141 = arith.constant 84 : i8
    cf.cond_br %283, ^bb1(%c84_i8_141 : i8), ^bb109
  ^bb109:  // pred: ^bb108
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_142 = arith.constant 32 : i64
    %284 = arith.addi %282, %c31_i64 : i64
    %285 = arith.divui %284, %c32_i64_142 : i64
    %c32_i64_143 = arith.constant 32 : i64
    %286 = arith.muli %285, %c32_i64_143 : i64
    %287 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_144 = arith.constant 31 : i64
    %c32_i64_145 = arith.constant 32 : i64
    %288 = arith.addi %287, %c31_i64_144 : i64
    %289 = arith.divui %288, %c32_i64_145 : i64
    %290 = arith.muli %289, %c32_i64_143 : i64
    %291 = arith.cmpi ult, %290, %286 : i64
    cf.cond_br %291, ^bb111, ^bb110
  ^bb110:  // 2 preds: ^bb109, ^bb113
    cf.br ^bb12
  ^bb111:  // pred: ^bb109
    %c3_i64_146 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %292 = arith.muli %289, %289 : i64
    %293 = arith.divui %292, %c512_i64 : i64
    %294 = arith.muli %289, %c3_i64_146 : i64
    %295 = arith.addi %293, %294 : i64
    %c3_i64_147 = arith.constant 3 : i64
    %c512_i64_148 = arith.constant 512 : i64
    %296 = arith.muli %285, %285 : i64
    %297 = arith.divui %296, %c512_i64_148 : i64
    %298 = arith.muli %285, %c3_i64_147 : i64
    %299 = arith.addi %297, %298 : i64
    %300 = arith.subi %299, %295 : i64
    %301 = llvm.load %arg1 : !llvm.ptr -> i64
    %302 = arith.cmpi ult, %301, %300 : i64
    scf.if %302 {
    } else {
      %453 = arith.subi %301, %300 : i64
      llvm.store %453, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_149 = arith.constant 80 : i8
    cf.cond_br %302, ^bb1(%c80_i8_149 : i8), ^bb112
  ^bb112:  // pred: ^bb111
    %303 = call @dora_fn_extend_memory(%arg0, %286) : (!llvm.ptr, i64) -> !llvm.ptr
    %304 = llvm.getelementptr %303[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %305 = llvm.load %304 : !llvm.ptr -> i8
    %c0_i8_150 = arith.constant 0 : i8
    %306 = arith.cmpi ne, %305, %c0_i8_150 : i8
    cf.cond_br %306, ^bb1(%305 : i8), ^bb113
  ^bb113:  // pred: ^bb112
    cf.br ^bb110
  ^bb114:  // pred: ^bb24
    %c18446744073709551615_i256_151 = arith.constant 18446744073709551615 : i256
    %307 = arith.cmpi sgt, %55, %c18446744073709551615_i256_151 : i256
    %c84_i8_152 = arith.constant 84 : i8
    cf.cond_br %307, ^bb1(%c84_i8_152 : i8), ^bb115
  ^bb115:  // pred: ^bb114
    %308 = arith.trunci %55 : i256 to i64
    %c0_i64_153 = arith.constant 0 : i64
    %309 = arith.cmpi slt, %308, %c0_i64_153 : i64
    %c84_i8_154 = arith.constant 84 : i8
    cf.cond_br %309, ^bb1(%c84_i8_154 : i8), ^bb116
  ^bb116:  // pred: ^bb115
    %310 = arith.addi %308, %c32_i64_20 : i64
    %c0_i64_155 = arith.constant 0 : i64
    %311 = arith.cmpi slt, %310, %c0_i64_155 : i64
    %c84_i8_156 = arith.constant 84 : i8
    cf.cond_br %311, ^bb1(%c84_i8_156 : i8), ^bb117
  ^bb117:  // pred: ^bb116
    %c31_i64_157 = arith.constant 31 : i64
    %c32_i64_158 = arith.constant 32 : i64
    %312 = arith.addi %310, %c31_i64_157 : i64
    %313 = arith.divui %312, %c32_i64_158 : i64
    %c32_i64_159 = arith.constant 32 : i64
    %314 = arith.muli %313, %c32_i64_159 : i64
    %315 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_160 = arith.constant 31 : i64
    %c32_i64_161 = arith.constant 32 : i64
    %316 = arith.addi %315, %c31_i64_160 : i64
    %317 = arith.divui %316, %c32_i64_161 : i64
    %318 = arith.muli %317, %c32_i64_159 : i64
    %319 = arith.cmpi ult, %318, %314 : i64
    cf.cond_br %319, ^bb119, ^bb118
  ^bb118:  // 2 preds: ^bb117, ^bb121
    cf.br ^bb25
  ^bb119:  // pred: ^bb117
    %c3_i64_162 = arith.constant 3 : i64
    %c512_i64_163 = arith.constant 512 : i64
    %320 = arith.muli %317, %317 : i64
    %321 = arith.divui %320, %c512_i64_163 : i64
    %322 = arith.muli %317, %c3_i64_162 : i64
    %323 = arith.addi %321, %322 : i64
    %c3_i64_164 = arith.constant 3 : i64
    %c512_i64_165 = arith.constant 512 : i64
    %324 = arith.muli %313, %313 : i64
    %325 = arith.divui %324, %c512_i64_165 : i64
    %326 = arith.muli %313, %c3_i64_164 : i64
    %327 = arith.addi %325, %326 : i64
    %328 = arith.subi %327, %323 : i64
    %329 = llvm.load %arg1 : !llvm.ptr -> i64
    %330 = arith.cmpi ult, %329, %328 : i64
    scf.if %330 {
    } else {
      %453 = arith.subi %329, %328 : i64
      llvm.store %453, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_166 = arith.constant 80 : i8
    cf.cond_br %330, ^bb1(%c80_i8_166 : i8), ^bb120
  ^bb120:  // pred: ^bb119
    %331 = call @dora_fn_extend_memory(%arg0, %314) : (!llvm.ptr, i64) -> !llvm.ptr
    %332 = llvm.getelementptr %331[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %333 = llvm.load %332 : !llvm.ptr -> i8
    %c0_i8_167 = arith.constant 0 : i8
    %334 = arith.cmpi ne, %333, %c0_i8_167 : i8
    cf.cond_br %334, ^bb1(%333 : i8), ^bb121
  ^bb121:  // pred: ^bb120
    cf.br ^bb118
  ^bb122:  // pred: ^bb37
    %c18446744073709551615_i256_168 = arith.constant 18446744073709551615 : i256
    %335 = arith.cmpi sgt, %88, %c18446744073709551615_i256_168 : i256
    %c84_i8_169 = arith.constant 84 : i8
    cf.cond_br %335, ^bb1(%c84_i8_169 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %336 = arith.trunci %88 : i256 to i64
    %c0_i64_170 = arith.constant 0 : i64
    %337 = arith.cmpi slt, %336, %c0_i64_170 : i64
    %c84_i8_171 = arith.constant 84 : i8
    cf.cond_br %337, ^bb1(%c84_i8_171 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %338 = arith.addi %336, %c32_i64_38 : i64
    %c0_i64_172 = arith.constant 0 : i64
    %339 = arith.cmpi slt, %338, %c0_i64_172 : i64
    %c84_i8_173 = arith.constant 84 : i8
    cf.cond_br %339, ^bb1(%c84_i8_173 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %c31_i64_174 = arith.constant 31 : i64
    %c32_i64_175 = arith.constant 32 : i64
    %340 = arith.addi %338, %c31_i64_174 : i64
    %341 = arith.divui %340, %c32_i64_175 : i64
    %c32_i64_176 = arith.constant 32 : i64
    %342 = arith.muli %341, %c32_i64_176 : i64
    %343 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_177 = arith.constant 31 : i64
    %c32_i64_178 = arith.constant 32 : i64
    %344 = arith.addi %343, %c31_i64_177 : i64
    %345 = arith.divui %344, %c32_i64_178 : i64
    %346 = arith.muli %345, %c32_i64_176 : i64
    %347 = arith.cmpi ult, %346, %342 : i64
    cf.cond_br %347, ^bb127, ^bb126
  ^bb126:  // 2 preds: ^bb125, ^bb129
    cf.br ^bb38
  ^bb127:  // pred: ^bb125
    %c3_i64_179 = arith.constant 3 : i64
    %c512_i64_180 = arith.constant 512 : i64
    %348 = arith.muli %345, %345 : i64
    %349 = arith.divui %348, %c512_i64_180 : i64
    %350 = arith.muli %345, %c3_i64_179 : i64
    %351 = arith.addi %349, %350 : i64
    %c3_i64_181 = arith.constant 3 : i64
    %c512_i64_182 = arith.constant 512 : i64
    %352 = arith.muli %341, %341 : i64
    %353 = arith.divui %352, %c512_i64_182 : i64
    %354 = arith.muli %341, %c3_i64_181 : i64
    %355 = arith.addi %353, %354 : i64
    %356 = arith.subi %355, %351 : i64
    %357 = llvm.load %arg1 : !llvm.ptr -> i64
    %358 = arith.cmpi ult, %357, %356 : i64
    scf.if %358 {
    } else {
      %453 = arith.subi %357, %356 : i64
      llvm.store %453, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_183 = arith.constant 80 : i8
    cf.cond_br %358, ^bb1(%c80_i8_183 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %359 = call @dora_fn_extend_memory(%arg0, %342) : (!llvm.ptr, i64) -> !llvm.ptr
    %360 = llvm.getelementptr %359[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %361 = llvm.load %360 : !llvm.ptr -> i8
    %c0_i8_184 = arith.constant 0 : i8
    %362 = arith.cmpi ne, %361, %c0_i8_184 : i8
    cf.cond_br %362, ^bb1(%361 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    cf.br ^bb126
  ^bb130:  // pred: ^bb57
    %c49152_i64 = arith.constant 49152 : i64
    %363 = arith.cmpi ugt, %139, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %363, ^bb1(%c100_i8 : i8), ^bb131
  ^bb131:  // pred: ^bb130
    %c31_i64_185 = arith.constant 31 : i64
    %c32_i64_186 = arith.constant 32 : i64
    %364 = arith.addi %139, %c31_i64_185 : i64
    %365 = arith.divui %364, %c32_i64_186 : i64
    %c2_i64_187 = arith.constant 2 : i64
    %366 = arith.muli %365, %c2_i64_187 : i64
    %367 = llvm.load %arg1 : !llvm.ptr -> i64
    %368 = arith.cmpi ult, %367, %366 : i64
    scf.if %368 {
    } else {
      %453 = arith.subi %367, %366 : i64
      llvm.store %453, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_188 = arith.constant 80 : i8
    cf.cond_br %368, ^bb1(%c80_i8_188 : i8), ^bb132
  ^bb132:  // pred: ^bb131
    %c18446744073709551615_i256_189 = arith.constant 18446744073709551615 : i256
    %369 = arith.cmpi sgt, %132, %c18446744073709551615_i256_189 : i256
    %c84_i8_190 = arith.constant 84 : i8
    cf.cond_br %369, ^bb1(%c84_i8_190 : i8), ^bb133
  ^bb133:  // pred: ^bb132
    %370 = arith.trunci %132 : i256 to i64
    %c0_i64_191 = arith.constant 0 : i64
    %371 = arith.cmpi slt, %370, %c0_i64_191 : i64
    %c84_i8_192 = arith.constant 84 : i8
    cf.cond_br %371, ^bb1(%c84_i8_192 : i8), ^bb134
  ^bb134:  // pred: ^bb133
    %372 = arith.addi %370, %139 : i64
    %c0_i64_193 = arith.constant 0 : i64
    %373 = arith.cmpi slt, %372, %c0_i64_193 : i64
    %c84_i8_194 = arith.constant 84 : i8
    cf.cond_br %373, ^bb1(%c84_i8_194 : i8), ^bb135
  ^bb135:  // pred: ^bb134
    %c31_i64_195 = arith.constant 31 : i64
    %c32_i64_196 = arith.constant 32 : i64
    %374 = arith.addi %372, %c31_i64_195 : i64
    %375 = arith.divui %374, %c32_i64_196 : i64
    %c32_i64_197 = arith.constant 32 : i64
    %376 = arith.muli %375, %c32_i64_197 : i64
    %377 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_198 = arith.constant 31 : i64
    %c32_i64_199 = arith.constant 32 : i64
    %378 = arith.addi %377, %c31_i64_198 : i64
    %379 = arith.divui %378, %c32_i64_199 : i64
    %380 = arith.muli %379, %c32_i64_197 : i64
    %381 = arith.cmpi ult, %380, %376 : i64
    cf.cond_br %381, ^bb137, ^bb136
  ^bb136:  // 2 preds: ^bb135, ^bb139
    cf.br ^bb58
  ^bb137:  // pred: ^bb135
    %c3_i64_200 = arith.constant 3 : i64
    %c512_i64_201 = arith.constant 512 : i64
    %382 = arith.muli %379, %379 : i64
    %383 = arith.divui %382, %c512_i64_201 : i64
    %384 = arith.muli %379, %c3_i64_200 : i64
    %385 = arith.addi %383, %384 : i64
    %c3_i64_202 = arith.constant 3 : i64
    %c512_i64_203 = arith.constant 512 : i64
    %386 = arith.muli %375, %375 : i64
    %387 = arith.divui %386, %c512_i64_203 : i64
    %388 = arith.muli %375, %c3_i64_202 : i64
    %389 = arith.addi %387, %388 : i64
    %390 = arith.subi %389, %385 : i64
    %391 = llvm.load %arg1 : !llvm.ptr -> i64
    %392 = arith.cmpi ult, %391, %390 : i64
    scf.if %392 {
    } else {
      %453 = arith.subi %391, %390 : i64
      llvm.store %453, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_204 = arith.constant 80 : i8
    cf.cond_br %392, ^bb1(%c80_i8_204 : i8), ^bb138
  ^bb138:  // pred: ^bb137
    %393 = call @dora_fn_extend_memory(%arg0, %376) : (!llvm.ptr, i64) -> !llvm.ptr
    %394 = llvm.getelementptr %393[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %395 = llvm.load %394 : !llvm.ptr -> i8
    %c0_i8_205 = arith.constant 0 : i8
    %396 = arith.cmpi ne, %395, %c0_i8_205 : i8
    cf.cond_br %396, ^bb1(%395 : i8), ^bb139
  ^bb139:  // pred: ^bb138
    cf.br ^bb136
  ^bb140:  // pred: ^bb91
    %c18446744073709551615_i256_206 = arith.constant 18446744073709551615 : i256
    %397 = arith.cmpi sgt, %225, %c18446744073709551615_i256_206 : i256
    %c84_i8_207 = arith.constant 84 : i8
    cf.cond_br %397, ^bb1(%c84_i8_207 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    %398 = arith.trunci %225 : i256 to i64
    %c0_i64_208 = arith.constant 0 : i64
    %399 = arith.cmpi slt, %398, %c0_i64_208 : i64
    %c84_i8_209 = arith.constant 84 : i8
    cf.cond_br %399, ^bb1(%c84_i8_209 : i8), ^bb142
  ^bb142:  // pred: ^bb141
    %400 = arith.addi %398, %236 : i64
    %c0_i64_210 = arith.constant 0 : i64
    %401 = arith.cmpi slt, %400, %c0_i64_210 : i64
    %c84_i8_211 = arith.constant 84 : i8
    cf.cond_br %401, ^bb1(%c84_i8_211 : i8), ^bb143
  ^bb143:  // pred: ^bb142
    %c31_i64_212 = arith.constant 31 : i64
    %c32_i64_213 = arith.constant 32 : i64
    %402 = arith.addi %400, %c31_i64_212 : i64
    %403 = arith.divui %402, %c32_i64_213 : i64
    %c32_i64_214 = arith.constant 32 : i64
    %404 = arith.muli %403, %c32_i64_214 : i64
    %405 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_215 = arith.constant 31 : i64
    %c32_i64_216 = arith.constant 32 : i64
    %406 = arith.addi %405, %c31_i64_215 : i64
    %407 = arith.divui %406, %c32_i64_216 : i64
    %408 = arith.muli %407, %c32_i64_214 : i64
    %409 = arith.cmpi ult, %408, %404 : i64
    cf.cond_br %409, ^bb145, ^bb144
  ^bb144:  // 2 preds: ^bb143, ^bb147
    cf.br ^bb92
  ^bb145:  // pred: ^bb143
    %c3_i64_217 = arith.constant 3 : i64
    %c512_i64_218 = arith.constant 512 : i64
    %410 = arith.muli %407, %407 : i64
    %411 = arith.divui %410, %c512_i64_218 : i64
    %412 = arith.muli %407, %c3_i64_217 : i64
    %413 = arith.addi %411, %412 : i64
    %c3_i64_219 = arith.constant 3 : i64
    %c512_i64_220 = arith.constant 512 : i64
    %414 = arith.muli %403, %403 : i64
    %415 = arith.divui %414, %c512_i64_220 : i64
    %416 = arith.muli %403, %c3_i64_219 : i64
    %417 = arith.addi %415, %416 : i64
    %418 = arith.subi %417, %413 : i64
    %419 = llvm.load %arg1 : !llvm.ptr -> i64
    %420 = arith.cmpi ult, %419, %418 : i64
    scf.if %420 {
    } else {
      %453 = arith.subi %419, %418 : i64
      llvm.store %453, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_221 = arith.constant 80 : i8
    cf.cond_br %420, ^bb1(%c80_i8_221 : i8), ^bb146
  ^bb146:  // pred: ^bb145
    %421 = call @dora_fn_extend_memory(%arg0, %404) : (!llvm.ptr, i64) -> !llvm.ptr
    %422 = llvm.getelementptr %421[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %423 = llvm.load %422 : !llvm.ptr -> i8
    %c0_i8_222 = arith.constant 0 : i8
    %424 = arith.cmpi ne, %423, %c0_i8_222 : i8
    cf.cond_br %424, ^bb1(%423 : i8), ^bb147
  ^bb147:  // pred: ^bb146
    cf.br ^bb144
  ^bb148:  // pred: ^bb94
    %c18446744073709551615_i256_223 = arith.constant 18446744073709551615 : i256
    %425 = arith.cmpi sgt, %231, %c18446744073709551615_i256_223 : i256
    %c84_i8_224 = arith.constant 84 : i8
    cf.cond_br %425, ^bb1(%c84_i8_224 : i8), ^bb149
  ^bb149:  // pred: ^bb148
    %426 = arith.trunci %231 : i256 to i64
    %c0_i64_225 = arith.constant 0 : i64
    %427 = arith.cmpi slt, %426, %c0_i64_225 : i64
    %c84_i8_226 = arith.constant 84 : i8
    cf.cond_br %427, ^bb1(%c84_i8_226 : i8), ^bb150
  ^bb150:  // pred: ^bb149
    %428 = arith.addi %426, %240 : i64
    %c0_i64_227 = arith.constant 0 : i64
    %429 = arith.cmpi slt, %428, %c0_i64_227 : i64
    %c84_i8_228 = arith.constant 84 : i8
    cf.cond_br %429, ^bb1(%c84_i8_228 : i8), ^bb151
  ^bb151:  // pred: ^bb150
    %c31_i64_229 = arith.constant 31 : i64
    %c32_i64_230 = arith.constant 32 : i64
    %430 = arith.addi %428, %c31_i64_229 : i64
    %431 = arith.divui %430, %c32_i64_230 : i64
    %c32_i64_231 = arith.constant 32 : i64
    %432 = arith.muli %431, %c32_i64_231 : i64
    %433 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_232 = arith.constant 31 : i64
    %c32_i64_233 = arith.constant 32 : i64
    %434 = arith.addi %433, %c31_i64_232 : i64
    %435 = arith.divui %434, %c32_i64_233 : i64
    %436 = arith.muli %435, %c32_i64_231 : i64
    %437 = arith.cmpi ult, %436, %432 : i64
    cf.cond_br %437, ^bb153, ^bb152
  ^bb152:  // 2 preds: ^bb151, ^bb155
    cf.br ^bb95
  ^bb153:  // pred: ^bb151
    %c3_i64_234 = arith.constant 3 : i64
    %c512_i64_235 = arith.constant 512 : i64
    %438 = arith.muli %435, %435 : i64
    %439 = arith.divui %438, %c512_i64_235 : i64
    %440 = arith.muli %435, %c3_i64_234 : i64
    %441 = arith.addi %439, %440 : i64
    %c3_i64_236 = arith.constant 3 : i64
    %c512_i64_237 = arith.constant 512 : i64
    %442 = arith.muli %431, %431 : i64
    %443 = arith.divui %442, %c512_i64_237 : i64
    %444 = arith.muli %431, %c3_i64_236 : i64
    %445 = arith.addi %443, %444 : i64
    %446 = arith.subi %445, %441 : i64
    %447 = llvm.load %arg1 : !llvm.ptr -> i64
    %448 = arith.cmpi ult, %447, %446 : i64
    scf.if %448 {
    } else {
      %453 = arith.subi %447, %446 : i64
      llvm.store %453, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_238 = arith.constant 80 : i8
    cf.cond_br %448, ^bb1(%c80_i8_238 : i8), ^bb154
  ^bb154:  // pred: ^bb153
    %449 = call @dora_fn_extend_memory(%arg0, %432) : (!llvm.ptr, i64) -> !llvm.ptr
    %450 = llvm.getelementptr %449[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %451 = llvm.load %450 : !llvm.ptr -> i8
    %c0_i8_239 = arith.constant 0 : i8
    %452 = arith.cmpi ne, %451, %c0_i8_239 : i8
    cf.cond_br %452, ^bb1(%451 : i8), ^bb155
  ^bb155:  // pred: ^bb154
    cf.br ^bb152
  }
}
