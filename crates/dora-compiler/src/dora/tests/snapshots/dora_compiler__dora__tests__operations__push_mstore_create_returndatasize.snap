---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_copy(!llvm.ptr, i64, !llvm.ptr, i64)
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_memory_ptr(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_memory_size(!llvm.ptr) -> i64
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: !llvm.ptr, %arg2: !llvm.ptr, %arg3: !llvm.ptr) -> i8 attributes {llvm.emit_c_interface} {
    cf.br ^bb5
  ^bb1(%0: i8):  // 87 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb39, ^bb40, ^bb43, ^bb44, ^bb47, ^bb48, ^bb51, ^bb52, ^bb54, ^bb55, ^bb56, ^bb58, ^bb59, ^bb60, ^bb62, ^bb63, ^bb66, ^bb67, ^bb70, ^bb71, ^bb74, ^bb75, ^bb78, ^bb79, ^bb82, ^bb83, ^bb86, ^bb87, ^bb89, ^bb90, ^bb92, ^bb93, ^bb95, ^bb96, ^bb98, ^bb99, ^bb102, ^bb103, ^bb106, ^bb107, ^bb108, ^bb111, ^bb112, ^bb114, ^bb115, ^bb116, ^bb119, ^bb120, ^bb122, ^bb123, ^bb124, ^bb127, ^bb128, ^bb130, ^bb131, ^bb132, ^bb133, ^bb134, ^bb137, ^bb138, ^bb140, ^bb141, ^bb142, ^bb145, ^bb146, ^bb148, ^bb149, ^bb150, ^bb153, ^bb154
    %c0_i64 = arith.constant 0 : i64
    %1 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64, %c0_i64, %1, %0) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %0 : i8
  ^bb2(%2: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %2 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %3 = llvm.load %arg3 : !llvm.ptr -> i64
    %4 = llvm.getelementptr %arg2[%3] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64 = arith.constant 1 : i64
    %5 = arith.addi %3, %c1_i64 : i64
    llvm.store %5, %arg3 : i64, !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %4 : i256, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %c1024_i64 = arith.constant 1024 : i64
    %6 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_0 = arith.constant 1 : i64
    %7 = arith.addi %6, %c1_i64_0 : i64
    %8 = arith.cmpi ult, %c1024_i64, %7 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %8, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %9 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %10 = arith.cmpi uge, %9, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %10, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %11 = arith.subi %9, %c3_i64 : i64
    llvm.store %11, %arg1 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %12 = llvm.load %arg3 : !llvm.ptr -> i64
    %13 = llvm.getelementptr %arg2[%12] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_1 = arith.constant 1 : i64
    %14 = arith.addi %12, %c1_i64_1 : i64
    llvm.store %14, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256, %13 : i256, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %c1024_i64_2 = arith.constant 1024 : i64
    %15 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %16 = arith.addi %15, %c1_i64_3 : i64
    %17 = arith.cmpi ult, %c1024_i64_2, %16 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %17, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %18 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %19 = arith.cmpi uge, %18, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %19, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %20 = arith.subi %18, %c3_i64_5 : i64
    llvm.store %20, %arg1 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %21 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_7 = arith.constant 1 : i64
    %22 = arith.subi %21, %c1_i64_7 : i64
    %23 = llvm.getelementptr %arg2[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %22, %arg3 : i64, !llvm.ptr
    %24 = llvm.load %23 : !llvm.ptr -> i256
    %25 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %26 = arith.subi %25, %c1_i64_8 : i64
    %27 = llvm.getelementptr %arg2[%26] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %26, %arg3 : i64, !llvm.ptr
    %28 = llvm.load %27 : !llvm.ptr -> i256
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_9 = arith.constant 0 : i64
    %29 = arith.cmpi ne, %c32_i64, %c0_i64_9 : i64
    cf.cond_br %29, ^bb106, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb110
    %30 = arith.trunci %24 : i256 to i64
    %31 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %32 = llvm.getelementptr %31[%30] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %33 = llvm.intr.bswap(%28)  : (i256) -> i256
    llvm.store %33, %32 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %c1024_i64_10 = arith.constant 1024 : i64
    %34 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %35 = arith.addi %34, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    %36 = arith.cmpi ult, %34, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %36, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %37 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_11 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %38 = arith.cmpi uge, %37, %c3_i64_11 : i64
    %c80_i8_12 = arith.constant 80 : i8
    cf.cond_br %38, ^bb15, ^bb1(%c80_i8_12 : i8)
  ^bb15:  // pred: ^bb14
    %39 = arith.subi %37, %c3_i64_11 : i64
    llvm.store %39, %arg1 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %40 = llvm.load %arg3 : !llvm.ptr -> i64
    %41 = llvm.getelementptr %arg2[%40] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_13 = arith.constant 1 : i64
    %42 = arith.addi %40, %c1_i64_13 : i64
    llvm.store %42, %arg3 : i64, !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %41 : i256, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %c1024_i64_14 = arith.constant 1024 : i64
    %43 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_15 = arith.constant 1 : i64
    %44 = arith.addi %43, %c1_i64_15 : i64
    %45 = arith.cmpi ult, %c1024_i64_14, %44 : i64
    %c92_i8_16 = arith.constant 92 : i8
    cf.cond_br %45, ^bb1(%c92_i8_16 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %46 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_17 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %47 = arith.cmpi uge, %46, %c3_i64_17 : i64
    %c80_i8_18 = arith.constant 80 : i8
    cf.cond_br %47, ^bb19, ^bb1(%c80_i8_18 : i8)
  ^bb19:  // pred: ^bb18
    %48 = arith.subi %46, %c3_i64_17 : i64
    llvm.store %48, %arg1 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c32_i256 = arith.constant 32 : i256
    %49 = llvm.load %arg3 : !llvm.ptr -> i64
    %50 = llvm.getelementptr %arg2[%49] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_19 = arith.constant 1 : i64
    %51 = arith.addi %49, %c1_i64_19 : i64
    llvm.store %51, %arg3 : i64, !llvm.ptr
    llvm.store %c32_i256, %50 : i256, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %c1024_i64_20 = arith.constant 1024 : i64
    %52 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_21 = arith.constant 1 : i64
    %53 = arith.addi %52, %c1_i64_21 : i64
    %54 = arith.cmpi ult, %c1024_i64_20, %53 : i64
    %c92_i8_22 = arith.constant 92 : i8
    cf.cond_br %54, ^bb1(%c92_i8_22 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %55 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_23 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %56 = arith.cmpi uge, %55, %c3_i64_23 : i64
    %c80_i8_24 = arith.constant 80 : i8
    cf.cond_br %56, ^bb23, ^bb1(%c80_i8_24 : i8)
  ^bb23:  // pred: ^bb22
    %57 = arith.subi %55, %c3_i64_23 : i64
    llvm.store %57, %arg1 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %58 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %59 = arith.subi %58, %c1_i64_25 : i64
    %60 = llvm.getelementptr %arg2[%59] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %59, %arg3 : i64, !llvm.ptr
    %61 = llvm.load %60 : !llvm.ptr -> i256
    %62 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_26 = arith.constant 1 : i64
    %63 = arith.subi %62, %c1_i64_26 : i64
    %64 = llvm.getelementptr %arg2[%63] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %63, %arg3 : i64, !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> i256
    %c32_i64_27 = arith.constant 32 : i64
    %c0_i64_28 = arith.constant 0 : i64
    %66 = arith.cmpi ne, %c32_i64_27, %c0_i64_28 : i64
    cf.cond_br %66, ^bb114, ^bb25
  ^bb25:  // 2 preds: ^bb24, ^bb118
    %67 = arith.trunci %61 : i256 to i64
    %68 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %69 = llvm.getelementptr %68[%67] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %70 = llvm.intr.bswap(%65)  : (i256) -> i256
    llvm.store %70, %69 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %c1024_i64_29 = arith.constant 1024 : i64
    %71 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_30 = arith.constant -2 : i64
    %72 = arith.addi %71, %c-2_i64_30 : i64
    %c2_i64_31 = arith.constant 2 : i64
    %73 = arith.cmpi ult, %71, %c2_i64_31 : i64
    %c91_i8_32 = arith.constant 91 : i8
    cf.cond_br %73, ^bb1(%c91_i8_32 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %74 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_33 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %75 = arith.cmpi uge, %74, %c3_i64_33 : i64
    %c80_i8_34 = arith.constant 80 : i8
    cf.cond_br %75, ^bb28, ^bb1(%c80_i8_34 : i8)
  ^bb28:  // pred: ^bb27
    %76 = arith.subi %74, %c3_i64_33 : i64
    llvm.store %76, %arg1 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %77 = llvm.load %arg3 : !llvm.ptr -> i64
    %78 = llvm.getelementptr %arg2[%77] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_35 = arith.constant 1 : i64
    %79 = arith.addi %77, %c1_i64_35 : i64
    llvm.store %79, %arg3 : i64, !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %78 : i256, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %c1024_i64_36 = arith.constant 1024 : i64
    %80 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_37 = arith.constant 1 : i64
    %81 = arith.addi %80, %c1_i64_37 : i64
    %82 = arith.cmpi ult, %c1024_i64_36, %81 : i64
    %c92_i8_38 = arith.constant 92 : i8
    cf.cond_br %82, ^bb1(%c92_i8_38 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %83 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_39 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %84 = arith.cmpi uge, %83, %c3_i64_39 : i64
    %c80_i8_40 = arith.constant 80 : i8
    cf.cond_br %84, ^bb32, ^bb1(%c80_i8_40 : i8)
  ^bb32:  // pred: ^bb31
    %85 = arith.subi %83, %c3_i64_39 : i64
    llvm.store %85, %arg1 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %c64_i256 = arith.constant 64 : i256
    %86 = llvm.load %arg3 : !llvm.ptr -> i64
    %87 = llvm.getelementptr %arg2[%86] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_41 = arith.constant 1 : i64
    %88 = arith.addi %86, %c1_i64_41 : i64
    llvm.store %88, %arg3 : i64, !llvm.ptr
    llvm.store %c64_i256, %87 : i256, !llvm.ptr
    cf.br ^bb40
  ^bb34:  // pred: ^bb36
    %c1024_i64_42 = arith.constant 1024 : i64
    %89 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %90 = arith.addi %89, %c1_i64_43 : i64
    %91 = arith.cmpi ult, %c1024_i64_42, %90 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %91, ^bb1(%c92_i8_44 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %92 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %93 = arith.cmpi uge, %92, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %93, ^bb36, ^bb1(%c80_i8_46 : i8)
  ^bb36:  // pred: ^bb35
    %94 = arith.subi %92, %c3_i64_45 : i64
    llvm.store %94, %arg1 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb39
    %95 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_47 = arith.constant 1 : i64
    %96 = arith.subi %95, %c1_i64_47 : i64
    %97 = llvm.getelementptr %arg2[%96] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %96, %arg3 : i64, !llvm.ptr
    %98 = llvm.load %97 : !llvm.ptr -> i256
    %99 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_48 = arith.constant 1 : i64
    %100 = arith.subi %99, %c1_i64_48 : i64
    %101 = llvm.getelementptr %arg2[%100] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %100, %arg3 : i64, !llvm.ptr
    %102 = llvm.load %101 : !llvm.ptr -> i256
    %c32_i64_49 = arith.constant 32 : i64
    %c0_i64_50 = arith.constant 0 : i64
    %103 = arith.cmpi ne, %c32_i64_49, %c0_i64_50 : i64
    cf.cond_br %103, ^bb122, ^bb38
  ^bb38:  // 2 preds: ^bb37, ^bb126
    %104 = arith.trunci %98 : i256 to i64
    %105 = call @dora_fn_memory_ptr(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %106 = llvm.getelementptr %105[%104] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %107 = llvm.intr.bswap(%102)  : (i256) -> i256
    llvm.store %107, %106 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb44
  ^bb39:  // pred: ^bb41
    %c1024_i64_51 = arith.constant 1024 : i64
    %108 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_52 = arith.constant -2 : i64
    %109 = arith.addi %108, %c-2_i64_52 : i64
    %c2_i64_53 = arith.constant 2 : i64
    %110 = arith.cmpi ult, %108, %c2_i64_53 : i64
    %c91_i8_54 = arith.constant 91 : i8
    cf.cond_br %110, ^bb1(%c91_i8_54 : i8), ^bb37
  ^bb40:  // pred: ^bb33
    %111 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_55 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %112 = arith.cmpi uge, %111, %c3_i64_55 : i64
    %c80_i8_56 = arith.constant 80 : i8
    cf.cond_br %112, ^bb41, ^bb1(%c80_i8_56 : i8)
  ^bb41:  // pred: ^bb40
    %113 = arith.subi %111, %c3_i64_55 : i64
    llvm.store %113, %arg1 : i64, !llvm.ptr
    cf.br ^bb39
  ^bb42:  // pred: ^bb43
    %c77_i256 = arith.constant 77 : i256
    %114 = llvm.load %arg3 : !llvm.ptr -> i64
    %115 = llvm.getelementptr %arg2[%114] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_57 = arith.constant 1 : i64
    %116 = arith.addi %114, %c1_i64_57 : i64
    llvm.store %116, %arg3 : i64, !llvm.ptr
    llvm.store %c77_i256, %115 : i256, !llvm.ptr
    cf.br ^bb48
  ^bb43:  // pred: ^bb45
    %c1024_i64_58 = arith.constant 1024 : i64
    %117 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %118 = arith.addi %117, %c1_i64_59 : i64
    %119 = arith.cmpi ult, %c1024_i64_58, %118 : i64
    %c92_i8_60 = arith.constant 92 : i8
    cf.cond_br %119, ^bb1(%c92_i8_60 : i8), ^bb42
  ^bb44:  // pred: ^bb38
    %120 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_61 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %121 = arith.cmpi uge, %120, %c3_i64_61 : i64
    %c80_i8_62 = arith.constant 80 : i8
    cf.cond_br %121, ^bb45, ^bb1(%c80_i8_62 : i8)
  ^bb45:  // pred: ^bb44
    %122 = arith.subi %120, %c3_i64_61 : i64
    llvm.store %122, %arg1 : i64, !llvm.ptr
    cf.br ^bb43
  ^bb46:  // pred: ^bb47
    %c0_i256_63 = arith.constant 0 : i256
    %123 = llvm.load %arg3 : !llvm.ptr -> i64
    %124 = llvm.getelementptr %arg2[%123] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_64 = arith.constant 1 : i64
    %125 = arith.addi %123, %c1_i64_64 : i64
    llvm.store %125, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_63, %124 : i256, !llvm.ptr
    cf.br ^bb52
  ^bb47:  // pred: ^bb49
    %c1024_i64_65 = arith.constant 1024 : i64
    %126 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_66 = arith.constant 1 : i64
    %127 = arith.addi %126, %c1_i64_66 : i64
    %128 = arith.cmpi ult, %c1024_i64_65, %127 : i64
    %c92_i8_67 = arith.constant 92 : i8
    cf.cond_br %128, ^bb1(%c92_i8_67 : i8), ^bb46
  ^bb48:  // pred: ^bb42
    %129 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_68 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %130 = arith.cmpi uge, %129, %c3_i64_68 : i64
    %c80_i8_69 = arith.constant 80 : i8
    cf.cond_br %130, ^bb49, ^bb1(%c80_i8_69 : i8)
  ^bb49:  // pred: ^bb48
    %131 = arith.subi %129, %c3_i64_68 : i64
    llvm.store %131, %arg1 : i64, !llvm.ptr
    cf.br ^bb47
  ^bb50:  // pred: ^bb51
    %c0_i256_70 = arith.constant 0 : i256
    %132 = llvm.load %arg3 : !llvm.ptr -> i64
    %133 = llvm.getelementptr %arg2[%132] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_71 = arith.constant 1 : i64
    %134 = arith.addi %132, %c1_i64_71 : i64
    llvm.store %134, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_70, %133 : i256, !llvm.ptr
    cf.br ^bb63
  ^bb51:  // pred: ^bb53
    %c1024_i64_72 = arith.constant 1024 : i64
    %135 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %136 = arith.addi %135, %c1_i64_73 : i64
    %137 = arith.cmpi ult, %c1024_i64_72, %136 : i64
    %c92_i8_74 = arith.constant 92 : i8
    cf.cond_br %137, ^bb1(%c92_i8_74 : i8), ^bb50
  ^bb52:  // pred: ^bb46
    %138 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_75 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %139 = arith.cmpi uge, %138, %c3_i64_75 : i64
    %c80_i8_76 = arith.constant 80 : i8
    cf.cond_br %139, ^bb53, ^bb1(%c80_i8_76 : i8)
  ^bb53:  // pred: ^bb52
    %140 = arith.subi %138, %c3_i64_75 : i64
    llvm.store %140, %arg1 : i64, !llvm.ptr
    cf.br ^bb51
  ^bb54:  // pred: ^bb62
    %141 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_77 = arith.constant 1 : i64
    %142 = arith.subi %141, %c1_i64_77 : i64
    %143 = llvm.getelementptr %arg2[%142] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %142, %arg3 : i64, !llvm.ptr
    %144 = llvm.load %143 : !llvm.ptr -> i256
    %145 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_78 = arith.constant 1 : i64
    %146 = arith.subi %145, %c1_i64_78 : i64
    %147 = llvm.getelementptr %arg2[%146] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %146, %arg3 : i64, !llvm.ptr
    %148 = llvm.load %147 : !llvm.ptr -> i256
    %149 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_79 = arith.constant 1 : i64
    %150 = arith.subi %149, %c1_i64_79 : i64
    %151 = llvm.getelementptr %arg2[%150] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %150, %arg3 : i64, !llvm.ptr
    %152 = llvm.load %151 : !llvm.ptr -> i256
    %153 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %154 = arith.cmpi ne, %153, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %154, ^bb1(%c87_i8 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %c18446744073709551615_i256 = arith.constant 18446744073709551615 : i256
    %155 = arith.cmpi sgt, %152, %c18446744073709551615_i256 : i256
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %155, ^bb1(%c84_i8 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %156 = arith.trunci %152 : i256 to i64
    %c0_i64_80 = arith.constant 0 : i64
    %157 = arith.cmpi slt, %156, %c0_i64_80 : i64
    %c84_i8_81 = arith.constant 84 : i8
    cf.cond_br %157, ^bb1(%c84_i8_81 : i8), ^bb57
  ^bb57:  // pred: ^bb56
    %c0_i64_82 = arith.constant 0 : i64
    %158 = arith.cmpi ne, %156, %c0_i64_82 : i64
    cf.cond_br %158, ^bb130, ^bb58
  ^bb58:  // 2 preds: ^bb57, ^bb136
    %c32000_i64 = arith.constant 32000 : i64
    %159 = llvm.load %arg1 : !llvm.ptr -> i64
    %160 = arith.cmpi ult, %159, %c32000_i64 : i64
    scf.if %160 {
    } else {
      %486 = arith.subi %159, %c32000_i64 : i64
      llvm.store %486, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_83 = arith.constant 80 : i8
    cf.cond_br %160, ^bb1(%c80_i8_83 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %c1_i256 = arith.constant 1 : i256
    %161 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %144, %161 {alignment = 1 : i64} : i256, !llvm.ptr
    %162 = llvm.load %arg1 : !llvm.ptr -> i64
    %163 = arith.trunci %148 : i256 to i64
    %164 = call @dora_fn_create(%arg0, %156, %163, %161, %162) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %165 = llvm.getelementptr %164[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %166 = llvm.load %165 : !llvm.ptr -> i8
    %c0_i8_84 = arith.constant 0 : i8
    %167 = arith.cmpi ne, %166, %c0_i8_84 : i8
    cf.cond_br %167, ^bb1(%166 : i8), ^bb60
  ^bb60:  // pred: ^bb59
    %168 = llvm.getelementptr %164[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %169 = llvm.load %168 : !llvm.ptr -> i64
    %170 = llvm.load %arg1 : !llvm.ptr -> i64
    %171 = arith.cmpi ult, %170, %169 : i64
    scf.if %171 {
    } else {
      %486 = arith.subi %170, %169 : i64
      llvm.store %486, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_85 = arith.constant 80 : i8
    cf.cond_br %171, ^bb1(%c80_i8_85 : i8), ^bb61
  ^bb61:  // pred: ^bb60
    %172 = llvm.load %161 : !llvm.ptr -> i256
    %173 = llvm.load %arg3 : !llvm.ptr -> i64
    %174 = llvm.getelementptr %arg2[%173] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_86 = arith.constant 1 : i64
    %175 = arith.addi %173, %c1_i64_86 : i64
    llvm.store %175, %arg3 : i64, !llvm.ptr
    llvm.store %172, %174 : i256, !llvm.ptr
    cf.br ^bb67
  ^bb62:  // pred: ^bb64
    %c1024_i64_87 = arith.constant 1024 : i64
    %176 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-2_i64_88 = arith.constant -2 : i64
    %177 = arith.addi %176, %c-2_i64_88 : i64
    %c3_i64_89 = arith.constant 3 : i64
    %178 = arith.cmpi ult, %176, %c3_i64_89 : i64
    %c91_i8_90 = arith.constant 91 : i8
    cf.cond_br %178, ^bb1(%c91_i8_90 : i8), ^bb54
  ^bb63:  // pred: ^bb50
    %179 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_91 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %180 = arith.cmpi uge, %179, %c0_i64_91 : i64
    %c80_i8_92 = arith.constant 80 : i8
    cf.cond_br %180, ^bb64, ^bb1(%c80_i8_92 : i8)
  ^bb64:  // pred: ^bb63
    %181 = arith.subi %179, %c0_i64_91 : i64
    llvm.store %181, %arg1 : i64, !llvm.ptr
    cf.br ^bb62
  ^bb65:  // pred: ^bb66
    %c0_i256_93 = arith.constant 0 : i256
    %182 = llvm.load %arg3 : !llvm.ptr -> i64
    %183 = llvm.getelementptr %arg2[%182] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_94 = arith.constant 1 : i64
    %184 = arith.addi %182, %c1_i64_94 : i64
    llvm.store %184, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_93, %183 : i256, !llvm.ptr
    cf.br ^bb71
  ^bb66:  // pred: ^bb68
    %c1024_i64_95 = arith.constant 1024 : i64
    %185 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_96 = arith.constant 1 : i64
    %186 = arith.addi %185, %c1_i64_96 : i64
    %187 = arith.cmpi ult, %c1024_i64_95, %186 : i64
    %c92_i8_97 = arith.constant 92 : i8
    cf.cond_br %187, ^bb1(%c92_i8_97 : i8), ^bb65
  ^bb67:  // pred: ^bb61
    %188 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_98 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %189 = arith.cmpi uge, %188, %c3_i64_98 : i64
    %c80_i8_99 = arith.constant 80 : i8
    cf.cond_br %189, ^bb68, ^bb1(%c80_i8_99 : i8)
  ^bb68:  // pred: ^bb67
    %190 = arith.subi %188, %c3_i64_98 : i64
    llvm.store %190, %arg1 : i64, !llvm.ptr
    cf.br ^bb66
  ^bb69:  // pred: ^bb70
    %c0_i256_100 = arith.constant 0 : i256
    %191 = llvm.load %arg3 : !llvm.ptr -> i64
    %192 = llvm.getelementptr %arg2[%191] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_101 = arith.constant 1 : i64
    %193 = arith.addi %191, %c1_i64_101 : i64
    llvm.store %193, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_100, %192 : i256, !llvm.ptr
    cf.br ^bb75
  ^bb70:  // pred: ^bb72
    %c1024_i64_102 = arith.constant 1024 : i64
    %194 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_103 = arith.constant 1 : i64
    %195 = arith.addi %194, %c1_i64_103 : i64
    %196 = arith.cmpi ult, %c1024_i64_102, %195 : i64
    %c92_i8_104 = arith.constant 92 : i8
    cf.cond_br %196, ^bb1(%c92_i8_104 : i8), ^bb69
  ^bb71:  // pred: ^bb65
    %197 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_105 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %198 = arith.cmpi uge, %197, %c3_i64_105 : i64
    %c80_i8_106 = arith.constant 80 : i8
    cf.cond_br %198, ^bb72, ^bb1(%c80_i8_106 : i8)
  ^bb72:  // pred: ^bb71
    %199 = arith.subi %197, %c3_i64_105 : i64
    llvm.store %199, %arg1 : i64, !llvm.ptr
    cf.br ^bb70
  ^bb73:  // pred: ^bb74
    %c0_i256_107 = arith.constant 0 : i256
    %200 = llvm.load %arg3 : !llvm.ptr -> i64
    %201 = llvm.getelementptr %arg2[%200] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_108 = arith.constant 1 : i64
    %202 = arith.addi %200, %c1_i64_108 : i64
    llvm.store %202, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_107, %201 : i256, !llvm.ptr
    cf.br ^bb79
  ^bb74:  // pred: ^bb76
    %c1024_i64_109 = arith.constant 1024 : i64
    %203 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_110 = arith.constant 1 : i64
    %204 = arith.addi %203, %c1_i64_110 : i64
    %205 = arith.cmpi ult, %c1024_i64_109, %204 : i64
    %c92_i8_111 = arith.constant 92 : i8
    cf.cond_br %205, ^bb1(%c92_i8_111 : i8), ^bb73
  ^bb75:  // pred: ^bb69
    %206 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_112 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %207 = arith.cmpi uge, %206, %c3_i64_112 : i64
    %c80_i8_113 = arith.constant 80 : i8
    cf.cond_br %207, ^bb76, ^bb1(%c80_i8_113 : i8)
  ^bb76:  // pred: ^bb75
    %208 = arith.subi %206, %c3_i64_112 : i64
    llvm.store %208, %arg1 : i64, !llvm.ptr
    cf.br ^bb74
  ^bb77:  // pred: ^bb78
    %c0_i256_114 = arith.constant 0 : i256
    %209 = llvm.load %arg3 : !llvm.ptr -> i64
    %210 = llvm.getelementptr %arg2[%209] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_115 = arith.constant 1 : i64
    %211 = arith.addi %209, %c1_i64_115 : i64
    llvm.store %211, %arg3 : i64, !llvm.ptr
    llvm.store %c0_i256_114, %210 : i256, !llvm.ptr
    cf.br ^bb83
  ^bb78:  // pred: ^bb80
    %c1024_i64_116 = arith.constant 1024 : i64
    %212 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_117 = arith.constant 1 : i64
    %213 = arith.addi %212, %c1_i64_117 : i64
    %214 = arith.cmpi ult, %c1024_i64_116, %213 : i64
    %c92_i8_118 = arith.constant 92 : i8
    cf.cond_br %214, ^bb1(%c92_i8_118 : i8), ^bb77
  ^bb79:  // pred: ^bb73
    %215 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_119 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %216 = arith.cmpi uge, %215, %c3_i64_119 : i64
    %c80_i8_120 = arith.constant 80 : i8
    cf.cond_br %216, ^bb80, ^bb1(%c80_i8_120 : i8)
  ^bb80:  // pred: ^bb79
    %217 = arith.subi %215, %c3_i64_119 : i64
    llvm.store %217, %arg1 : i64, !llvm.ptr
    cf.br ^bb78
  ^bb81:  // pred: ^bb82
    %218 = llvm.load %arg3 : !llvm.ptr -> i64
    %219 = llvm.getelementptr %arg2[%218] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %220 = llvm.getelementptr %219[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %221 = llvm.load %220 : !llvm.ptr -> i256
    %222 = llvm.load %arg3 : !llvm.ptr -> i64
    %223 = llvm.getelementptr %arg2[%222] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_121 = arith.constant 1 : i64
    %224 = arith.addi %222, %c1_i64_121 : i64
    llvm.store %224, %arg3 : i64, !llvm.ptr
    llvm.store %221, %223 : i256, !llvm.ptr
    cf.br ^bb87
  ^bb82:  // pred: ^bb84
    %c1024_i64_122 = arith.constant 1024 : i64
    %225 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_123 = arith.constant 1 : i64
    %226 = arith.addi %225, %c1_i64_123 : i64
    %c5_i64 = arith.constant 5 : i64
    %227 = arith.cmpi ult, %225, %c5_i64 : i64
    %228 = arith.cmpi ult, %c1024_i64_122, %226 : i64
    %229 = arith.xori %227, %228 : i1
    %c92_i8_124 = arith.constant 92 : i8
    cf.cond_br %229, ^bb1(%c92_i8_124 : i8), ^bb81
  ^bb83:  // pred: ^bb77
    %230 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_125 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %231 = arith.cmpi uge, %230, %c3_i64_125 : i64
    %c80_i8_126 = arith.constant 80 : i8
    cf.cond_br %231, ^bb84, ^bb1(%c80_i8_126 : i8)
  ^bb84:  // pred: ^bb83
    %232 = arith.subi %230, %c3_i64_125 : i64
    llvm.store %232, %arg1 : i64, !llvm.ptr
    cf.br ^bb82
  ^bb85:  // pred: ^bb86
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %233 = llvm.load %arg3 : !llvm.ptr -> i64
    %234 = llvm.getelementptr %arg2[%233] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_127 = arith.constant 1 : i64
    %235 = arith.addi %233, %c1_i64_127 : i64
    llvm.store %235, %arg3 : i64, !llvm.ptr
    llvm.store %c4294967295_i256, %234 : i256, !llvm.ptr
    cf.br ^bb99
  ^bb86:  // pred: ^bb88
    %c1024_i64_128 = arith.constant 1024 : i64
    %236 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_129 = arith.constant 1 : i64
    %237 = arith.addi %236, %c1_i64_129 : i64
    %238 = arith.cmpi ult, %c1024_i64_128, %237 : i64
    %c92_i8_130 = arith.constant 92 : i8
    cf.cond_br %238, ^bb1(%c92_i8_130 : i8), ^bb85
  ^bb87:  // pred: ^bb81
    %239 = llvm.load %arg1 : !llvm.ptr -> i64
    %c3_i64_131 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %240 = arith.cmpi uge, %239, %c3_i64_131 : i64
    %c80_i8_132 = arith.constant 80 : i8
    cf.cond_br %240, ^bb88, ^bb1(%c80_i8_132 : i8)
  ^bb88:  // pred: ^bb87
    %241 = arith.subi %239, %c3_i64_131 : i64
    llvm.store %241, %arg1 : i64, !llvm.ptr
    cf.br ^bb86
  ^bb89:  // pred: ^bb98
    %242 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_133 = arith.constant 1 : i64
    %243 = arith.subi %242, %c1_i64_133 : i64
    %244 = llvm.getelementptr %arg2[%243] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %243, %arg3 : i64, !llvm.ptr
    %245 = llvm.load %244 : !llvm.ptr -> i256
    %246 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_134 = arith.constant 1 : i64
    %247 = arith.subi %246, %c1_i64_134 : i64
    %248 = llvm.getelementptr %arg2[%247] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %247, %arg3 : i64, !llvm.ptr
    %249 = llvm.load %248 : !llvm.ptr -> i256
    %250 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_135 = arith.constant 1 : i64
    %251 = arith.subi %250, %c1_i64_135 : i64
    %252 = llvm.getelementptr %arg2[%251] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %251, %arg3 : i64, !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> i256
    %254 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_136 = arith.constant 1 : i64
    %255 = arith.subi %254, %c1_i64_136 : i64
    %256 = llvm.getelementptr %arg2[%255] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %255, %arg3 : i64, !llvm.ptr
    %257 = llvm.load %256 : !llvm.ptr -> i256
    %258 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_137 = arith.constant 1 : i64
    %259 = arith.subi %258, %c1_i64_137 : i64
    %260 = llvm.getelementptr %arg2[%259] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %259, %arg3 : i64, !llvm.ptr
    %261 = llvm.load %260 : !llvm.ptr -> i256
    %262 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_138 = arith.constant 1 : i64
    %263 = arith.subi %262, %c1_i64_138 : i64
    %264 = llvm.getelementptr %arg2[%263] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    llvm.store %263, %arg3 : i64, !llvm.ptr
    %265 = llvm.load %264 : !llvm.ptr -> i256
    %c0_i256_139 = arith.constant 0 : i256
    %c18446744073709551615_i256_140 = arith.constant 18446744073709551615 : i256
    %266 = arith.cmpi sgt, %257, %c18446744073709551615_i256_140 : i256
    %c84_i8_141 = arith.constant 84 : i8
    cf.cond_br %266, ^bb1(%c84_i8_141 : i8), ^bb90
  ^bb90:  // pred: ^bb89
    %267 = arith.trunci %257 : i256 to i64
    %c0_i64_142 = arith.constant 0 : i64
    %268 = arith.cmpi slt, %267, %c0_i64_142 : i64
    %c84_i8_143 = arith.constant 84 : i8
    cf.cond_br %268, ^bb1(%c84_i8_143 : i8), ^bb91
  ^bb91:  // pred: ^bb90
    %c0_i64_144 = arith.constant 0 : i64
    %269 = arith.cmpi ne, %267, %c0_i64_144 : i64
    cf.cond_br %269, ^bb140, ^bb92
  ^bb92:  // 2 preds: ^bb91, ^bb144
    %c18446744073709551615_i256_145 = arith.constant 18446744073709551615 : i256
    %270 = arith.cmpi sgt, %265, %c18446744073709551615_i256_145 : i256
    %c84_i8_146 = arith.constant 84 : i8
    cf.cond_br %270, ^bb1(%c84_i8_146 : i8), ^bb93
  ^bb93:  // pred: ^bb92
    %271 = arith.trunci %265 : i256 to i64
    %c0_i64_147 = arith.constant 0 : i64
    %272 = arith.cmpi slt, %271, %c0_i64_147 : i64
    %c84_i8_148 = arith.constant 84 : i8
    cf.cond_br %272, ^bb1(%c84_i8_148 : i8), ^bb94
  ^bb94:  // pred: ^bb93
    %c0_i64_149 = arith.constant 0 : i64
    %273 = arith.cmpi ne, %271, %c0_i64_149 : i64
    cf.cond_br %273, ^bb148, ^bb95
  ^bb95:  // 2 preds: ^bb94, ^bb152
    %274 = arith.trunci %253 : i256 to i64
    %275 = arith.trunci %261 : i256 to i64
    %276 = llvm.load %arg1 : !llvm.ptr -> i64
    %c1_i256_150 = arith.constant 1 : i256
    %277 = llvm.alloca %c1_i256_150 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_139, %277 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_151 = arith.constant 1 : i256
    %278 = llvm.alloca %c1_i256_151 x i256 : (i256) -> !llvm.ptr
    llvm.store %245, %278 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_152 = arith.constant 1 : i256
    %279 = llvm.alloca %c1_i256_152 x i256 : (i256) -> !llvm.ptr
    llvm.store %249, %279 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i8 = arith.constant 1 : i8
    %280 = call @dora_fn_call(%arg0, %278, %279, %277, %274, %267, %275, %271, %276, %c1_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %281 = llvm.getelementptr %280[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %282 = llvm.load %281 : !llvm.ptr -> i8
    %283 = llvm.getelementptr %280[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %284 = llvm.load %283 : !llvm.ptr -> i8
    %c0_i8_153 = arith.constant 0 : i8
    %285 = arith.cmpi ne, %284, %c0_i8_153 : i8
    cf.cond_br %285, ^bb1(%284 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %286 = llvm.getelementptr %280[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %287 = llvm.load %286 : !llvm.ptr -> i64
    %288 = llvm.load %arg1 : !llvm.ptr -> i64
    %289 = arith.cmpi ult, %288, %287 : i64
    scf.if %289 {
    } else {
      %486 = arith.subi %288, %287 : i64
      llvm.store %486, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_154 = arith.constant 80 : i8
    cf.cond_br %289, ^bb1(%c80_i8_154 : i8), ^bb97
  ^bb97:  // pred: ^bb96
    %290 = arith.extui %282 : i8 to i256
    %291 = llvm.load %arg3 : !llvm.ptr -> i64
    %292 = llvm.getelementptr %arg2[%291] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_155 = arith.constant 1 : i64
    %293 = arith.addi %291, %c1_i64_155 : i64
    llvm.store %293, %arg3 : i64, !llvm.ptr
    llvm.store %290, %292 : i256, !llvm.ptr
    cf.br ^bb103
  ^bb98:  // pred: ^bb100
    %c1024_i64_156 = arith.constant 1024 : i64
    %294 = llvm.load %arg3 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %295 = arith.addi %294, %c-5_i64 : i64
    %c6_i64 = arith.constant 6 : i64
    %296 = arith.cmpi ult, %294, %c6_i64 : i64
    %c91_i8_157 = arith.constant 91 : i8
    cf.cond_br %296, ^bb1(%c91_i8_157 : i8), ^bb89
  ^bb99:  // pred: ^bb85
    %297 = llvm.load %arg1 : !llvm.ptr -> i64
    %c0_i64_158 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %298 = arith.cmpi uge, %297, %c0_i64_158 : i64
    %c80_i8_159 = arith.constant 80 : i8
    cf.cond_br %298, ^bb100, ^bb1(%c80_i8_159 : i8)
  ^bb100:  // pred: ^bb99
    %299 = arith.subi %297, %c0_i64_158 : i64
    llvm.store %299, %arg1 : i64, !llvm.ptr
    cf.br ^bb98
  ^bb101:  // pred: ^bb102
    %300 = call @dora_fn_returndata_size(%arg0) : (!llvm.ptr) -> i64
    %301 = arith.extui %300 : i64 to i256
    %302 = llvm.load %arg3 : !llvm.ptr -> i64
    %303 = llvm.getelementptr %arg2[%302] : (!llvm.ptr, i64) -> !llvm.ptr, i256
    %c1_i64_160 = arith.constant 1 : i64
    %304 = arith.addi %302, %c1_i64_160 : i64
    llvm.store %304, %arg3 : i64, !llvm.ptr
    llvm.store %301, %303 : i256, !llvm.ptr
    cf.br ^bb105
  ^bb102:  // pred: ^bb104
    %c1024_i64_161 = arith.constant 1024 : i64
    %305 = llvm.load %arg3 : !llvm.ptr -> i64
    %c1_i64_162 = arith.constant 1 : i64
    %306 = arith.addi %305, %c1_i64_162 : i64
    %307 = arith.cmpi ult, %c1024_i64_161, %306 : i64
    %c92_i8_163 = arith.constant 92 : i8
    cf.cond_br %307, ^bb1(%c92_i8_163 : i8), ^bb101
  ^bb103:  // pred: ^bb97
    %308 = llvm.load %arg1 : !llvm.ptr -> i64
    %c2_i64_164 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %309 = arith.cmpi uge, %308, %c2_i64_164 : i64
    %c80_i8_165 = arith.constant 80 : i8
    cf.cond_br %309, ^bb104, ^bb1(%c80_i8_165 : i8)
  ^bb104:  // pred: ^bb103
    %310 = arith.subi %308, %c2_i64_164 : i64
    llvm.store %310, %arg1 : i64, !llvm.ptr
    cf.br ^bb102
  ^bb105:  // pred: ^bb101
    %c0_i64_166 = arith.constant 0 : i64
    %c1_i8_167 = arith.constant 1 : i8
    %311 = llvm.load %arg1 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_166, %c0_i64_166, %311, %c1_i8_167) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8_167 : i8
  ^bb106:  // pred: ^bb11
    %c18446744073709551615_i256_168 = arith.constant 18446744073709551615 : i256
    %312 = arith.cmpi sgt, %24, %c18446744073709551615_i256_168 : i256
    %c84_i8_169 = arith.constant 84 : i8
    cf.cond_br %312, ^bb1(%c84_i8_169 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %313 = arith.trunci %24 : i256 to i64
    %c0_i64_170 = arith.constant 0 : i64
    %314 = arith.cmpi slt, %313, %c0_i64_170 : i64
    %c84_i8_171 = arith.constant 84 : i8
    cf.cond_br %314, ^bb1(%c84_i8_171 : i8), ^bb108
  ^bb108:  // pred: ^bb107
    %315 = arith.addi %313, %c32_i64 : i64
    %c0_i64_172 = arith.constant 0 : i64
    %316 = arith.cmpi slt, %315, %c0_i64_172 : i64
    %c84_i8_173 = arith.constant 84 : i8
    cf.cond_br %316, ^bb1(%c84_i8_173 : i8), ^bb109
  ^bb109:  // pred: ^bb108
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_174 = arith.constant 32 : i64
    %317 = arith.addi %315, %c31_i64 : i64
    %318 = arith.divui %317, %c32_i64_174 : i64
    %c32_i64_175 = arith.constant 32 : i64
    %319 = arith.muli %318, %c32_i64_175 : i64
    %320 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_176 = arith.constant 31 : i64
    %c32_i64_177 = arith.constant 32 : i64
    %321 = arith.addi %320, %c31_i64_176 : i64
    %322 = arith.divui %321, %c32_i64_177 : i64
    %323 = arith.muli %322, %c32_i64_175 : i64
    %324 = arith.cmpi ult, %323, %319 : i64
    cf.cond_br %324, ^bb111, ^bb110
  ^bb110:  // 2 preds: ^bb109, ^bb113
    cf.br ^bb12
  ^bb111:  // pred: ^bb109
    %c3_i64_178 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %325 = arith.muli %322, %322 : i64
    %326 = arith.divui %325, %c512_i64 : i64
    %327 = arith.muli %322, %c3_i64_178 : i64
    %328 = arith.addi %326, %327 : i64
    %c3_i64_179 = arith.constant 3 : i64
    %c512_i64_180 = arith.constant 512 : i64
    %329 = arith.muli %318, %318 : i64
    %330 = arith.divui %329, %c512_i64_180 : i64
    %331 = arith.muli %318, %c3_i64_179 : i64
    %332 = arith.addi %330, %331 : i64
    %333 = arith.subi %332, %328 : i64
    %334 = llvm.load %arg1 : !llvm.ptr -> i64
    %335 = arith.cmpi ult, %334, %333 : i64
    scf.if %335 {
    } else {
      %486 = arith.subi %334, %333 : i64
      llvm.store %486, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_181 = arith.constant 80 : i8
    cf.cond_br %335, ^bb1(%c80_i8_181 : i8), ^bb112
  ^bb112:  // pred: ^bb111
    %336 = call @dora_fn_extend_memory(%arg0, %319) : (!llvm.ptr, i64) -> !llvm.ptr
    %337 = llvm.getelementptr %336[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %338 = llvm.load %337 : !llvm.ptr -> i8
    %c0_i8_182 = arith.constant 0 : i8
    %339 = arith.cmpi ne, %338, %c0_i8_182 : i8
    cf.cond_br %339, ^bb1(%338 : i8), ^bb113
  ^bb113:  // pred: ^bb112
    cf.br ^bb110
  ^bb114:  // pred: ^bb24
    %c18446744073709551615_i256_183 = arith.constant 18446744073709551615 : i256
    %340 = arith.cmpi sgt, %61, %c18446744073709551615_i256_183 : i256
    %c84_i8_184 = arith.constant 84 : i8
    cf.cond_br %340, ^bb1(%c84_i8_184 : i8), ^bb115
  ^bb115:  // pred: ^bb114
    %341 = arith.trunci %61 : i256 to i64
    %c0_i64_185 = arith.constant 0 : i64
    %342 = arith.cmpi slt, %341, %c0_i64_185 : i64
    %c84_i8_186 = arith.constant 84 : i8
    cf.cond_br %342, ^bb1(%c84_i8_186 : i8), ^bb116
  ^bb116:  // pred: ^bb115
    %343 = arith.addi %341, %c32_i64_27 : i64
    %c0_i64_187 = arith.constant 0 : i64
    %344 = arith.cmpi slt, %343, %c0_i64_187 : i64
    %c84_i8_188 = arith.constant 84 : i8
    cf.cond_br %344, ^bb1(%c84_i8_188 : i8), ^bb117
  ^bb117:  // pred: ^bb116
    %c31_i64_189 = arith.constant 31 : i64
    %c32_i64_190 = arith.constant 32 : i64
    %345 = arith.addi %343, %c31_i64_189 : i64
    %346 = arith.divui %345, %c32_i64_190 : i64
    %c32_i64_191 = arith.constant 32 : i64
    %347 = arith.muli %346, %c32_i64_191 : i64
    %348 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_192 = arith.constant 31 : i64
    %c32_i64_193 = arith.constant 32 : i64
    %349 = arith.addi %348, %c31_i64_192 : i64
    %350 = arith.divui %349, %c32_i64_193 : i64
    %351 = arith.muli %350, %c32_i64_191 : i64
    %352 = arith.cmpi ult, %351, %347 : i64
    cf.cond_br %352, ^bb119, ^bb118
  ^bb118:  // 2 preds: ^bb117, ^bb121
    cf.br ^bb25
  ^bb119:  // pred: ^bb117
    %c3_i64_194 = arith.constant 3 : i64
    %c512_i64_195 = arith.constant 512 : i64
    %353 = arith.muli %350, %350 : i64
    %354 = arith.divui %353, %c512_i64_195 : i64
    %355 = arith.muli %350, %c3_i64_194 : i64
    %356 = arith.addi %354, %355 : i64
    %c3_i64_196 = arith.constant 3 : i64
    %c512_i64_197 = arith.constant 512 : i64
    %357 = arith.muli %346, %346 : i64
    %358 = arith.divui %357, %c512_i64_197 : i64
    %359 = arith.muli %346, %c3_i64_196 : i64
    %360 = arith.addi %358, %359 : i64
    %361 = arith.subi %360, %356 : i64
    %362 = llvm.load %arg1 : !llvm.ptr -> i64
    %363 = arith.cmpi ult, %362, %361 : i64
    scf.if %363 {
    } else {
      %486 = arith.subi %362, %361 : i64
      llvm.store %486, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_198 = arith.constant 80 : i8
    cf.cond_br %363, ^bb1(%c80_i8_198 : i8), ^bb120
  ^bb120:  // pred: ^bb119
    %364 = call @dora_fn_extend_memory(%arg0, %347) : (!llvm.ptr, i64) -> !llvm.ptr
    %365 = llvm.getelementptr %364[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %366 = llvm.load %365 : !llvm.ptr -> i8
    %c0_i8_199 = arith.constant 0 : i8
    %367 = arith.cmpi ne, %366, %c0_i8_199 : i8
    cf.cond_br %367, ^bb1(%366 : i8), ^bb121
  ^bb121:  // pred: ^bb120
    cf.br ^bb118
  ^bb122:  // pred: ^bb37
    %c18446744073709551615_i256_200 = arith.constant 18446744073709551615 : i256
    %368 = arith.cmpi sgt, %98, %c18446744073709551615_i256_200 : i256
    %c84_i8_201 = arith.constant 84 : i8
    cf.cond_br %368, ^bb1(%c84_i8_201 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %369 = arith.trunci %98 : i256 to i64
    %c0_i64_202 = arith.constant 0 : i64
    %370 = arith.cmpi slt, %369, %c0_i64_202 : i64
    %c84_i8_203 = arith.constant 84 : i8
    cf.cond_br %370, ^bb1(%c84_i8_203 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %371 = arith.addi %369, %c32_i64_49 : i64
    %c0_i64_204 = arith.constant 0 : i64
    %372 = arith.cmpi slt, %371, %c0_i64_204 : i64
    %c84_i8_205 = arith.constant 84 : i8
    cf.cond_br %372, ^bb1(%c84_i8_205 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %c31_i64_206 = arith.constant 31 : i64
    %c32_i64_207 = arith.constant 32 : i64
    %373 = arith.addi %371, %c31_i64_206 : i64
    %374 = arith.divui %373, %c32_i64_207 : i64
    %c32_i64_208 = arith.constant 32 : i64
    %375 = arith.muli %374, %c32_i64_208 : i64
    %376 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_209 = arith.constant 31 : i64
    %c32_i64_210 = arith.constant 32 : i64
    %377 = arith.addi %376, %c31_i64_209 : i64
    %378 = arith.divui %377, %c32_i64_210 : i64
    %379 = arith.muli %378, %c32_i64_208 : i64
    %380 = arith.cmpi ult, %379, %375 : i64
    cf.cond_br %380, ^bb127, ^bb126
  ^bb126:  // 2 preds: ^bb125, ^bb129
    cf.br ^bb38
  ^bb127:  // pred: ^bb125
    %c3_i64_211 = arith.constant 3 : i64
    %c512_i64_212 = arith.constant 512 : i64
    %381 = arith.muli %378, %378 : i64
    %382 = arith.divui %381, %c512_i64_212 : i64
    %383 = arith.muli %378, %c3_i64_211 : i64
    %384 = arith.addi %382, %383 : i64
    %c3_i64_213 = arith.constant 3 : i64
    %c512_i64_214 = arith.constant 512 : i64
    %385 = arith.muli %374, %374 : i64
    %386 = arith.divui %385, %c512_i64_214 : i64
    %387 = arith.muli %374, %c3_i64_213 : i64
    %388 = arith.addi %386, %387 : i64
    %389 = arith.subi %388, %384 : i64
    %390 = llvm.load %arg1 : !llvm.ptr -> i64
    %391 = arith.cmpi ult, %390, %389 : i64
    scf.if %391 {
    } else {
      %486 = arith.subi %390, %389 : i64
      llvm.store %486, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_215 = arith.constant 80 : i8
    cf.cond_br %391, ^bb1(%c80_i8_215 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %392 = call @dora_fn_extend_memory(%arg0, %375) : (!llvm.ptr, i64) -> !llvm.ptr
    %393 = llvm.getelementptr %392[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %394 = llvm.load %393 : !llvm.ptr -> i8
    %c0_i8_216 = arith.constant 0 : i8
    %395 = arith.cmpi ne, %394, %c0_i8_216 : i8
    cf.cond_br %395, ^bb1(%394 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    cf.br ^bb126
  ^bb130:  // pred: ^bb57
    %c49152_i64 = arith.constant 49152 : i64
    %396 = arith.cmpi ugt, %156, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %396, ^bb1(%c100_i8 : i8), ^bb131
  ^bb131:  // pred: ^bb130
    %c31_i64_217 = arith.constant 31 : i64
    %c32_i64_218 = arith.constant 32 : i64
    %397 = arith.addi %156, %c31_i64_217 : i64
    %398 = arith.divui %397, %c32_i64_218 : i64
    %c2_i64_219 = arith.constant 2 : i64
    %399 = arith.muli %398, %c2_i64_219 : i64
    %400 = llvm.load %arg1 : !llvm.ptr -> i64
    %401 = arith.cmpi ult, %400, %399 : i64
    scf.if %401 {
    } else {
      %486 = arith.subi %400, %399 : i64
      llvm.store %486, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_220 = arith.constant 80 : i8
    cf.cond_br %401, ^bb1(%c80_i8_220 : i8), ^bb132
  ^bb132:  // pred: ^bb131
    %c18446744073709551615_i256_221 = arith.constant 18446744073709551615 : i256
    %402 = arith.cmpi sgt, %148, %c18446744073709551615_i256_221 : i256
    %c84_i8_222 = arith.constant 84 : i8
    cf.cond_br %402, ^bb1(%c84_i8_222 : i8), ^bb133
  ^bb133:  // pred: ^bb132
    %403 = arith.trunci %148 : i256 to i64
    %c0_i64_223 = arith.constant 0 : i64
    %404 = arith.cmpi slt, %403, %c0_i64_223 : i64
    %c84_i8_224 = arith.constant 84 : i8
    cf.cond_br %404, ^bb1(%c84_i8_224 : i8), ^bb134
  ^bb134:  // pred: ^bb133
    %405 = arith.addi %403, %156 : i64
    %c0_i64_225 = arith.constant 0 : i64
    %406 = arith.cmpi slt, %405, %c0_i64_225 : i64
    %c84_i8_226 = arith.constant 84 : i8
    cf.cond_br %406, ^bb1(%c84_i8_226 : i8), ^bb135
  ^bb135:  // pred: ^bb134
    %c31_i64_227 = arith.constant 31 : i64
    %c32_i64_228 = arith.constant 32 : i64
    %407 = arith.addi %405, %c31_i64_227 : i64
    %408 = arith.divui %407, %c32_i64_228 : i64
    %c32_i64_229 = arith.constant 32 : i64
    %409 = arith.muli %408, %c32_i64_229 : i64
    %410 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_230 = arith.constant 31 : i64
    %c32_i64_231 = arith.constant 32 : i64
    %411 = arith.addi %410, %c31_i64_230 : i64
    %412 = arith.divui %411, %c32_i64_231 : i64
    %413 = arith.muli %412, %c32_i64_229 : i64
    %414 = arith.cmpi ult, %413, %409 : i64
    cf.cond_br %414, ^bb137, ^bb136
  ^bb136:  // 2 preds: ^bb135, ^bb139
    cf.br ^bb58
  ^bb137:  // pred: ^bb135
    %c3_i64_232 = arith.constant 3 : i64
    %c512_i64_233 = arith.constant 512 : i64
    %415 = arith.muli %412, %412 : i64
    %416 = arith.divui %415, %c512_i64_233 : i64
    %417 = arith.muli %412, %c3_i64_232 : i64
    %418 = arith.addi %416, %417 : i64
    %c3_i64_234 = arith.constant 3 : i64
    %c512_i64_235 = arith.constant 512 : i64
    %419 = arith.muli %408, %408 : i64
    %420 = arith.divui %419, %c512_i64_235 : i64
    %421 = arith.muli %408, %c3_i64_234 : i64
    %422 = arith.addi %420, %421 : i64
    %423 = arith.subi %422, %418 : i64
    %424 = llvm.load %arg1 : !llvm.ptr -> i64
    %425 = arith.cmpi ult, %424, %423 : i64
    scf.if %425 {
    } else {
      %486 = arith.subi %424, %423 : i64
      llvm.store %486, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_236 = arith.constant 80 : i8
    cf.cond_br %425, ^bb1(%c80_i8_236 : i8), ^bb138
  ^bb138:  // pred: ^bb137
    %426 = call @dora_fn_extend_memory(%arg0, %409) : (!llvm.ptr, i64) -> !llvm.ptr
    %427 = llvm.getelementptr %426[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %428 = llvm.load %427 : !llvm.ptr -> i8
    %c0_i8_237 = arith.constant 0 : i8
    %429 = arith.cmpi ne, %428, %c0_i8_237 : i8
    cf.cond_br %429, ^bb1(%428 : i8), ^bb139
  ^bb139:  // pred: ^bb138
    cf.br ^bb136
  ^bb140:  // pred: ^bb91
    %c18446744073709551615_i256_238 = arith.constant 18446744073709551615 : i256
    %430 = arith.cmpi sgt, %253, %c18446744073709551615_i256_238 : i256
    %c84_i8_239 = arith.constant 84 : i8
    cf.cond_br %430, ^bb1(%c84_i8_239 : i8), ^bb141
  ^bb141:  // pred: ^bb140
    %431 = arith.trunci %253 : i256 to i64
    %c0_i64_240 = arith.constant 0 : i64
    %432 = arith.cmpi slt, %431, %c0_i64_240 : i64
    %c84_i8_241 = arith.constant 84 : i8
    cf.cond_br %432, ^bb1(%c84_i8_241 : i8), ^bb142
  ^bb142:  // pred: ^bb141
    %433 = arith.addi %431, %267 : i64
    %c0_i64_242 = arith.constant 0 : i64
    %434 = arith.cmpi slt, %433, %c0_i64_242 : i64
    %c84_i8_243 = arith.constant 84 : i8
    cf.cond_br %434, ^bb1(%c84_i8_243 : i8), ^bb143
  ^bb143:  // pred: ^bb142
    %c31_i64_244 = arith.constant 31 : i64
    %c32_i64_245 = arith.constant 32 : i64
    %435 = arith.addi %433, %c31_i64_244 : i64
    %436 = arith.divui %435, %c32_i64_245 : i64
    %c32_i64_246 = arith.constant 32 : i64
    %437 = arith.muli %436, %c32_i64_246 : i64
    %438 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_247 = arith.constant 31 : i64
    %c32_i64_248 = arith.constant 32 : i64
    %439 = arith.addi %438, %c31_i64_247 : i64
    %440 = arith.divui %439, %c32_i64_248 : i64
    %441 = arith.muli %440, %c32_i64_246 : i64
    %442 = arith.cmpi ult, %441, %437 : i64
    cf.cond_br %442, ^bb145, ^bb144
  ^bb144:  // 2 preds: ^bb143, ^bb147
    cf.br ^bb92
  ^bb145:  // pred: ^bb143
    %c3_i64_249 = arith.constant 3 : i64
    %c512_i64_250 = arith.constant 512 : i64
    %443 = arith.muli %440, %440 : i64
    %444 = arith.divui %443, %c512_i64_250 : i64
    %445 = arith.muli %440, %c3_i64_249 : i64
    %446 = arith.addi %444, %445 : i64
    %c3_i64_251 = arith.constant 3 : i64
    %c512_i64_252 = arith.constant 512 : i64
    %447 = arith.muli %436, %436 : i64
    %448 = arith.divui %447, %c512_i64_252 : i64
    %449 = arith.muli %436, %c3_i64_251 : i64
    %450 = arith.addi %448, %449 : i64
    %451 = arith.subi %450, %446 : i64
    %452 = llvm.load %arg1 : !llvm.ptr -> i64
    %453 = arith.cmpi ult, %452, %451 : i64
    scf.if %453 {
    } else {
      %486 = arith.subi %452, %451 : i64
      llvm.store %486, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_253 = arith.constant 80 : i8
    cf.cond_br %453, ^bb1(%c80_i8_253 : i8), ^bb146
  ^bb146:  // pred: ^bb145
    %454 = call @dora_fn_extend_memory(%arg0, %437) : (!llvm.ptr, i64) -> !llvm.ptr
    %455 = llvm.getelementptr %454[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %456 = llvm.load %455 : !llvm.ptr -> i8
    %c0_i8_254 = arith.constant 0 : i8
    %457 = arith.cmpi ne, %456, %c0_i8_254 : i8
    cf.cond_br %457, ^bb1(%456 : i8), ^bb147
  ^bb147:  // pred: ^bb146
    cf.br ^bb144
  ^bb148:  // pred: ^bb94
    %c18446744073709551615_i256_255 = arith.constant 18446744073709551615 : i256
    %458 = arith.cmpi sgt, %261, %c18446744073709551615_i256_255 : i256
    %c84_i8_256 = arith.constant 84 : i8
    cf.cond_br %458, ^bb1(%c84_i8_256 : i8), ^bb149
  ^bb149:  // pred: ^bb148
    %459 = arith.trunci %261 : i256 to i64
    %c0_i64_257 = arith.constant 0 : i64
    %460 = arith.cmpi slt, %459, %c0_i64_257 : i64
    %c84_i8_258 = arith.constant 84 : i8
    cf.cond_br %460, ^bb1(%c84_i8_258 : i8), ^bb150
  ^bb150:  // pred: ^bb149
    %461 = arith.addi %459, %271 : i64
    %c0_i64_259 = arith.constant 0 : i64
    %462 = arith.cmpi slt, %461, %c0_i64_259 : i64
    %c84_i8_260 = arith.constant 84 : i8
    cf.cond_br %462, ^bb1(%c84_i8_260 : i8), ^bb151
  ^bb151:  // pred: ^bb150
    %c31_i64_261 = arith.constant 31 : i64
    %c32_i64_262 = arith.constant 32 : i64
    %463 = arith.addi %461, %c31_i64_261 : i64
    %464 = arith.divui %463, %c32_i64_262 : i64
    %c32_i64_263 = arith.constant 32 : i64
    %465 = arith.muli %464, %c32_i64_263 : i64
    %466 = call @dora_fn_memory_size(%arg0) : (!llvm.ptr) -> i64
    %c31_i64_264 = arith.constant 31 : i64
    %c32_i64_265 = arith.constant 32 : i64
    %467 = arith.addi %466, %c31_i64_264 : i64
    %468 = arith.divui %467, %c32_i64_265 : i64
    %469 = arith.muli %468, %c32_i64_263 : i64
    %470 = arith.cmpi ult, %469, %465 : i64
    cf.cond_br %470, ^bb153, ^bb152
  ^bb152:  // 2 preds: ^bb151, ^bb155
    cf.br ^bb95
  ^bb153:  // pred: ^bb151
    %c3_i64_266 = arith.constant 3 : i64
    %c512_i64_267 = arith.constant 512 : i64
    %471 = arith.muli %468, %468 : i64
    %472 = arith.divui %471, %c512_i64_267 : i64
    %473 = arith.muli %468, %c3_i64_266 : i64
    %474 = arith.addi %472, %473 : i64
    %c3_i64_268 = arith.constant 3 : i64
    %c512_i64_269 = arith.constant 512 : i64
    %475 = arith.muli %464, %464 : i64
    %476 = arith.divui %475, %c512_i64_269 : i64
    %477 = arith.muli %464, %c3_i64_268 : i64
    %478 = arith.addi %476, %477 : i64
    %479 = arith.subi %478, %474 : i64
    %480 = llvm.load %arg1 : !llvm.ptr -> i64
    %481 = arith.cmpi ult, %480, %479 : i64
    scf.if %481 {
    } else {
      %486 = arith.subi %480, %479 : i64
      llvm.store %486, %arg1 : i64, !llvm.ptr
    }
    %c80_i8_270 = arith.constant 80 : i8
    cf.cond_br %481, ^bb1(%c80_i8_270 : i8), ^bb154
  ^bb154:  // pred: ^bb153
    %482 = call @dora_fn_extend_memory(%arg0, %465) : (!llvm.ptr, i64) -> !llvm.ptr
    %483 = llvm.getelementptr %482[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %484 = llvm.load %483 : !llvm.ptr -> i8
    %c0_i8_271 = arith.constant 0 : i8
    %485 = arith.cmpi ne, %484, %c0_i8_271 : i8
    cf.cond_br %485, ^bb1(%484 : i8), ^bb155
  ^bb155:  // pred: ^bb154
    cf.br ^bb152
  }
}
