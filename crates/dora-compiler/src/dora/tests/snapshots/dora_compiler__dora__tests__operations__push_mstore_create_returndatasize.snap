---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_read_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_write_storage(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_copy_ext_code_to_memory(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    cf.br ^bb3
  ^bb1(%10: i8):  // 12 preds: ^bb2, ^bb5, ^bb6, ^bb10, ^bb11, ^bb15, ^bb16, ^bb21, ^bb22, ^bb23, ^bb31, ^bb32
    %c0_i64_1 = arith.constant 0 : i64
    %11 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %10) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %10 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    cf.br ^bb5
  ^bb5:  // pred: ^bb4
    %19 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %20 = llvm.load %19 : !llvm.ptr -> !llvm.ptr
    %21 = llvm.getelementptr %20[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %22 = llvm.load %21 : !llvm.ptr -> i256
    llvm.store %21, %19 : !llvm.ptr, !llvm.ptr
    %23 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %24 = llvm.load %23 : !llvm.ptr -> !llvm.ptr
    %25 = llvm.getelementptr %24[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %26 = llvm.load %25 : !llvm.ptr -> i256
    llvm.store %25, %23 : !llvm.ptr, !llvm.ptr
    %27 = arith.trunci %22 : i256 to i64
    %c32_i64 = arith.constant 32 : i64
    %28 = arith.addi %27, %c32_i64 : i64
    %c0_i64_2 = arith.constant 0 : i64
    %29 = arith.cmpi slt, %28, %c0_i64_2 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %29, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_3 = arith.constant 32 : i64
    %30 = arith.addi %28, %c31_i64 : i64
    %31 = arith.divui %30, %c32_i64_3 : i64
    %32 = arith.muli %31, %c32_i64_3 : i64
    %33 = call @dora_fn_extend_memory(%arg0, %32) : (!llvm.ptr, i64) -> !llvm.ptr
    %34 = llvm.getelementptr %33[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %35 = llvm.load %34 : !llvm.ptr -> !llvm.ptr
    %36 = llvm.getelementptr %33[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %37 = llvm.load %36 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %38 = arith.cmpi ne, %37, %c0_i8 : i8
    cf.cond_br %38, ^bb1(%37 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %39 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %35, %39 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %32, %40 : i64, !llvm.ptr
    %41 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %42 = llvm.load %41 : !llvm.ptr -> !llvm.ptr
    %43 = llvm.getelementptr %42[%27] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %44 = llvm.intr.bswap(%26)  : (i256) -> i256
    llvm.store %44, %43 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb8
  ^bb8:  // pred: ^bb7
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %45 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %46 = llvm.load %45 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %46 : i256, !llvm.ptr
    %47 = llvm.getelementptr %46[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %47, %45 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb9:  // pred: ^bb8
    %c32_i256 = arith.constant 32 : i256
    %48 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %49 = llvm.load %48 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %49 : i256, !llvm.ptr
    %50 = llvm.getelementptr %49[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %50, %48 : !llvm.ptr, !llvm.ptr
    cf.br ^bb10
  ^bb10:  // pred: ^bb9
    %51 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %54 = llvm.load %53 : !llvm.ptr -> i256
    llvm.store %53, %51 : !llvm.ptr, !llvm.ptr
    %55 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %56 = llvm.load %55 : !llvm.ptr -> !llvm.ptr
    %57 = llvm.getelementptr %56[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %58 = llvm.load %57 : !llvm.ptr -> i256
    llvm.store %57, %55 : !llvm.ptr, !llvm.ptr
    %59 = arith.trunci %54 : i256 to i64
    %c32_i64_4 = arith.constant 32 : i64
    %60 = arith.addi %59, %c32_i64_4 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %61 = arith.cmpi slt, %60, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %61, ^bb1(%c84_i8_6 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %c31_i64_7 = arith.constant 31 : i64
    %c32_i64_8 = arith.constant 32 : i64
    %62 = arith.addi %60, %c31_i64_7 : i64
    %63 = arith.divui %62, %c32_i64_8 : i64
    %64 = arith.muli %63, %c32_i64_8 : i64
    %65 = call @dora_fn_extend_memory(%arg0, %64) : (!llvm.ptr, i64) -> !llvm.ptr
    %66 = llvm.getelementptr %65[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %67 = llvm.load %66 : !llvm.ptr -> !llvm.ptr
    %68 = llvm.getelementptr %65[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %69 = llvm.load %68 : !llvm.ptr -> i8
    %c0_i8_9 = arith.constant 0 : i8
    %70 = arith.cmpi ne, %69, %c0_i8_9 : i8
    cf.cond_br %70, ^bb1(%69 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %71 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %67, %71 : !llvm.ptr, !llvm.ptr
    %72 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %64, %72 : i64, !llvm.ptr
    %73 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %74 = llvm.load %73 : !llvm.ptr -> !llvm.ptr
    %75 = llvm.getelementptr %74[%59] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %76 = llvm.intr.bswap(%58)  : (i256) -> i256
    llvm.store %76, %75 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb13
  ^bb13:  // pred: ^bb12
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %77 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %78 : i256, !llvm.ptr
    %79 = llvm.getelementptr %78[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %79, %77 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb14:  // pred: ^bb13
    %c64_i256 = arith.constant 64 : i256
    %80 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %81 = llvm.load %80 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %81 : i256, !llvm.ptr
    %82 = llvm.getelementptr %81[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %82, %80 : !llvm.ptr, !llvm.ptr
    cf.br ^bb15
  ^bb15:  // pred: ^bb14
    %83 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %84 = llvm.load %83 : !llvm.ptr -> !llvm.ptr
    %85 = llvm.getelementptr %84[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %86 = llvm.load %85 : !llvm.ptr -> i256
    llvm.store %85, %83 : !llvm.ptr, !llvm.ptr
    %87 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> !llvm.ptr
    %89 = llvm.getelementptr %88[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %90 = llvm.load %89 : !llvm.ptr -> i256
    llvm.store %89, %87 : !llvm.ptr, !llvm.ptr
    %91 = arith.trunci %86 : i256 to i64
    %c32_i64_10 = arith.constant 32 : i64
    %92 = arith.addi %91, %c32_i64_10 : i64
    %c0_i64_11 = arith.constant 0 : i64
    %93 = arith.cmpi slt, %92, %c0_i64_11 : i64
    %c84_i8_12 = arith.constant 84 : i8
    cf.cond_br %93, ^bb1(%c84_i8_12 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c31_i64_13 = arith.constant 31 : i64
    %c32_i64_14 = arith.constant 32 : i64
    %94 = arith.addi %92, %c31_i64_13 : i64
    %95 = arith.divui %94, %c32_i64_14 : i64
    %96 = arith.muli %95, %c32_i64_14 : i64
    %97 = call @dora_fn_extend_memory(%arg0, %96) : (!llvm.ptr, i64) -> !llvm.ptr
    %98 = llvm.getelementptr %97[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %99 = llvm.load %98 : !llvm.ptr -> !llvm.ptr
    %100 = llvm.getelementptr %97[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %101 = llvm.load %100 : !llvm.ptr -> i8
    %c0_i8_15 = arith.constant 0 : i8
    %102 = arith.cmpi ne, %101, %c0_i8_15 : i8
    cf.cond_br %102, ^bb1(%101 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %103 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %99, %103 : !llvm.ptr, !llvm.ptr
    %104 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %96, %104 : i64, !llvm.ptr
    %105 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %106 = llvm.load %105 : !llvm.ptr -> !llvm.ptr
    %107 = llvm.getelementptr %106[%91] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %108 = llvm.intr.bswap(%90)  : (i256) -> i256
    llvm.store %108, %107 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb18:  // pred: ^bb17
    %c77_i256 = arith.constant 77 : i256
    %109 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %110 = llvm.load %109 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %110 : i256, !llvm.ptr
    %111 = llvm.getelementptr %110[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %111, %109 : !llvm.ptr, !llvm.ptr
    cf.br ^bb19
  ^bb19:  // pred: ^bb18
    %c0_i256_16 = arith.constant 0 : i256
    %112 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_16, %113 : i256, !llvm.ptr
    %114 = llvm.getelementptr %113[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %114, %112 : !llvm.ptr, !llvm.ptr
    cf.br ^bb20
  ^bb20:  // pred: ^bb19
    %c0_i256_17 = arith.constant 0 : i256
    %115 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %116 = llvm.load %115 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_17, %116 : i256, !llvm.ptr
    %117 = llvm.getelementptr %116[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %117, %115 : !llvm.ptr, !llvm.ptr
    cf.br ^bb21
  ^bb21:  // pred: ^bb20
    %118 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> !llvm.ptr
    %120 = llvm.getelementptr %119[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %121 = llvm.load %120 : !llvm.ptr -> i256
    llvm.store %120, %118 : !llvm.ptr, !llvm.ptr
    %122 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> !llvm.ptr
    %124 = llvm.getelementptr %123[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %125 = llvm.load %124 : !llvm.ptr -> i256
    llvm.store %124, %122 : !llvm.ptr, !llvm.ptr
    %126 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> !llvm.ptr
    %128 = llvm.getelementptr %127[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %129 = llvm.load %128 : !llvm.ptr -> i256
    llvm.store %128, %126 : !llvm.ptr, !llvm.ptr
    %130 = arith.trunci %125 : i256 to i64
    %131 = arith.trunci %129 : i256 to i64
    %132 = arith.addi %130, %131 : i64
    %c0_i64_18 = arith.constant 0 : i64
    %133 = arith.cmpi slt, %132, %c0_i64_18 : i64
    %c84_i8_19 = arith.constant 84 : i8
    cf.cond_br %133, ^bb1(%c84_i8_19 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c31_i64_20 = arith.constant 31 : i64
    %c32_i64_21 = arith.constant 32 : i64
    %134 = arith.addi %132, %c31_i64_20 : i64
    %135 = arith.divui %134, %c32_i64_21 : i64
    %136 = arith.muli %135, %c32_i64_21 : i64
    %137 = call @dora_fn_extend_memory(%arg0, %136) : (!llvm.ptr, i64) -> !llvm.ptr
    %138 = llvm.getelementptr %137[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %139 = llvm.load %138 : !llvm.ptr -> !llvm.ptr
    %140 = llvm.getelementptr %137[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %141 = llvm.load %140 : !llvm.ptr -> i8
    %c0_i8_22 = arith.constant 0 : i8
    %142 = arith.cmpi ne, %141, %c0_i8_22 : i8
    cf.cond_br %142, ^bb1(%141 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %143 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %139, %143 : !llvm.ptr, !llvm.ptr
    %144 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %136, %144 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %145 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %121, %145 {alignment = 1 : i64} : i256, !llvm.ptr
    %146 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %147 = llvm.load %146 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %148 = llvm.alloca %c1_i64 x i64 : (i64) -> !llvm.ptr
    llvm.store %147, %148 {alignment = 1 : i64} : i64, !llvm.ptr
    %149 = call @dora_fn_create(%arg0, %131, %130, %145, %148) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %150 = llvm.getelementptr %149[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %151 = llvm.load %150 : !llvm.ptr -> i8
    %c0_i8_23 = arith.constant 0 : i8
    %152 = arith.cmpi ne, %c0_i8_23, %151 : i8
    %c94_i8 = arith.constant 94 : i8
    cf.cond_br %152, ^bb1(%c94_i8 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %153 = llvm.load %145 : !llvm.ptr -> i256
    %154 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> !llvm.ptr
    llvm.store %153, %155 : i256, !llvm.ptr
    %156 = llvm.getelementptr %155[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %156, %154 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb25:  // pred: ^bb24
    %c0_i256_24 = arith.constant 0 : i256
    %157 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %158 = llvm.load %157 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_24, %158 : i256, !llvm.ptr
    %159 = llvm.getelementptr %158[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %159, %157 : !llvm.ptr, !llvm.ptr
    cf.br ^bb26
  ^bb26:  // pred: ^bb25
    %c0_i256_25 = arith.constant 0 : i256
    %160 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_25, %161 : i256, !llvm.ptr
    %162 = llvm.getelementptr %161[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb27:  // pred: ^bb26
    %c0_i256_26 = arith.constant 0 : i256
    %163 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %164 = llvm.load %163 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_26, %164 : i256, !llvm.ptr
    %165 = llvm.getelementptr %164[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %165, %163 : !llvm.ptr, !llvm.ptr
    cf.br ^bb28
  ^bb28:  // pred: ^bb27
    %c0_i256_27 = arith.constant 0 : i256
    %166 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_27, %167 : i256, !llvm.ptr
    %168 = llvm.getelementptr %167[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %168, %166 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb29:  // pred: ^bb28
    %169 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %170 = llvm.load %169 : !llvm.ptr -> !llvm.ptr
    %171 = llvm.getelementptr %170[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %172 = llvm.load %171 : !llvm.ptr -> i256
    %173 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %174 = llvm.load %173 : !llvm.ptr -> !llvm.ptr
    llvm.store %172, %174 : i256, !llvm.ptr
    %175 = llvm.getelementptr %174[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %175, %173 : !llvm.ptr, !llvm.ptr
    cf.br ^bb30
  ^bb30:  // pred: ^bb29
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %176 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %177 = llvm.load %176 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %177 : i256, !llvm.ptr
    %178 = llvm.getelementptr %177[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %178, %176 : !llvm.ptr, !llvm.ptr
    cf.br ^bb31
  ^bb31:  // pred: ^bb30
    %179 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %180 = llvm.load %179 : !llvm.ptr -> !llvm.ptr
    %181 = llvm.getelementptr %180[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %182 = llvm.load %181 : !llvm.ptr -> i256
    llvm.store %181, %179 : !llvm.ptr, !llvm.ptr
    %183 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> !llvm.ptr
    %185 = llvm.getelementptr %184[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %186 = llvm.load %185 : !llvm.ptr -> i256
    llvm.store %185, %183 : !llvm.ptr, !llvm.ptr
    %187 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %188 = llvm.load %187 : !llvm.ptr -> !llvm.ptr
    %189 = llvm.getelementptr %188[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %190 = llvm.load %189 : !llvm.ptr -> i256
    llvm.store %189, %187 : !llvm.ptr, !llvm.ptr
    %191 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %192 = llvm.load %191 : !llvm.ptr -> !llvm.ptr
    %193 = llvm.getelementptr %192[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %194 = llvm.load %193 : !llvm.ptr -> i256
    llvm.store %193, %191 : !llvm.ptr, !llvm.ptr
    %195 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %196 = llvm.load %195 : !llvm.ptr -> !llvm.ptr
    %197 = llvm.getelementptr %196[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %198 = llvm.load %197 : !llvm.ptr -> i256
    llvm.store %197, %195 : !llvm.ptr, !llvm.ptr
    %199 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %200 = llvm.load %199 : !llvm.ptr -> !llvm.ptr
    %201 = llvm.getelementptr %200[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %202 = llvm.load %201 : !llvm.ptr -> i256
    llvm.store %201, %199 : !llvm.ptr, !llvm.ptr
    %c0_i256_28 = arith.constant 0 : i256
    %203 = arith.trunci %182 : i256 to i64
    %204 = arith.trunci %190 : i256 to i64
    %205 = arith.trunci %194 : i256 to i64
    %206 = arith.trunci %198 : i256 to i64
    %207 = arith.trunci %202 : i256 to i64
    %208 = arith.addi %204, %205 : i64
    %209 = arith.addi %206, %207 : i64
    %210 = arith.maxui %208, %209 : i64
    %c0_i64_29 = arith.constant 0 : i64
    %211 = arith.cmpi slt, %210, %c0_i64_29 : i64
    %c84_i8_30 = arith.constant 84 : i8
    cf.cond_br %211, ^bb1(%c84_i8_30 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c31_i64_31 = arith.constant 31 : i64
    %c32_i64_32 = arith.constant 32 : i64
    %212 = arith.addi %210, %c31_i64_31 : i64
    %213 = arith.divui %212, %c32_i64_32 : i64
    %214 = arith.muli %213, %c32_i64_32 : i64
    %215 = call @dora_fn_extend_memory(%arg0, %214) : (!llvm.ptr, i64) -> !llvm.ptr
    %216 = llvm.getelementptr %215[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %217 = llvm.load %216 : !llvm.ptr -> !llvm.ptr
    %218 = llvm.getelementptr %215[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %219 = llvm.load %218 : !llvm.ptr -> i8
    %c0_i8_33 = arith.constant 0 : i8
    %220 = arith.cmpi ne, %219, %c0_i8_33 : i8
    cf.cond_br %220, ^bb1(%219 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %221 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %217, %221 : !llvm.ptr, !llvm.ptr
    %222 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %214, %222 : i64, !llvm.ptr
    %223 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %224 = llvm.load %223 : !llvm.ptr -> i64
    %c1_i256_34 = arith.constant 1 : i256
    %225 = llvm.alloca %c1_i256_34 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_28, %225 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_35 = arith.constant 1 : i256
    %226 = llvm.alloca %c1_i256_35 x i256 : (i256) -> !llvm.ptr
    llvm.store %186, %226 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_36 = arith.constant 1 : i64
    %227 = llvm.alloca %c1_i64_36 x i64 : (i64) -> !llvm.ptr
    %c0_i8_37 = arith.constant 0 : i8
    %228 = call @dora_fn_call(%arg0, %203, %226, %225, %204, %205, %206, %207, %224, %227, %c0_i8_37) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %229 = llvm.getelementptr %228[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %230 = llvm.load %229 : !llvm.ptr -> i8
    %231 = llvm.load %227 : !llvm.ptr -> i64
    %232 = arith.extui %230 : i8 to i256
    %233 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %234 = llvm.load %233 : !llvm.ptr -> !llvm.ptr
    llvm.store %232, %234 : i256, !llvm.ptr
    %235 = llvm.getelementptr %234[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %235, %233 : !llvm.ptr, !llvm.ptr
    cf.br ^bb34
  ^bb34:  // pred: ^bb33
    %236 = call @dora_fn_return_data_size(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %237 = llvm.getelementptr %236[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %238 = llvm.load %237 : !llvm.ptr -> i64
    %239 = arith.extui %238 : i64 to i256
    %240 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %241 = llvm.load %240 : !llvm.ptr -> !llvm.ptr
    llvm.store %239, %241 : i256, !llvm.ptr
    %242 = llvm.getelementptr %241[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %242, %240 : !llvm.ptr, !llvm.ptr
    cf.br ^bb35
  ^bb35:  // pred: ^bb34
    %c0_i64_38 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %243 = call @dora_fn_write_result(%arg0, %c0_i64_38, %c0_i64_38, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
