---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 79 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb11, ^bb12, ^bb13, ^bb14, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb27, ^bb28, ^bb29, ^bb30, ^bb32, ^bb33, ^bb36, ^bb37, ^bb40, ^bb41, ^bb43, ^bb44, ^bb45, ^bb46, ^bb48, ^bb49, ^bb52, ^bb53, ^bb56, ^bb57, ^bb60, ^bb61, ^bb63, ^bb64, ^bb65, ^bb67, ^bb68, ^bb69, ^bb71, ^bb72, ^bb75, ^bb76, ^bb79, ^bb80, ^bb83, ^bb84, ^bb87, ^bb88, ^bb91, ^bb92, ^bb95, ^bb96, ^bb98, ^bb99, ^bb100, ^bb101, ^bb102, ^bb105, ^bb106, ^bb108, ^bb109, ^bb112, ^bb113, ^bb116, ^bb117, ^bb118, ^bb119, ^bb120, ^bb122, ^bb123, ^bb124, ^bb126, ^bb127, ^bb128
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    %12 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %9 : i8
  ^bb2(%13: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %13 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %14 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %15 = llvm.load %14 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %15 : i256, !llvm.ptr
    %16 = llvm.getelementptr %15[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %16, %14 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %17 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %18 = llvm.load %17 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %19 = arith.addi %18, %c1_i64 : i64
    llvm.store %19, %17 : i64, !llvm.ptr
    %20 = arith.cmpi ult, %c1024_i64, %19 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %20, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %21 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %22 = llvm.load %21 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %23 = arith.cmpi uge, %22, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %23, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %24 = arith.subi %22, %c3_i64 : i64
    llvm.store %24, %21 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %25 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %26 = llvm.load %25 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %26 : i256, !llvm.ptr
    %27 = llvm.getelementptr %26[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %27, %25 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb8:  // pred: ^bb10
    %28 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %29 = llvm.load %28 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %30 = arith.addi %29, %c1_i64_3 : i64
    llvm.store %30, %28 : i64, !llvm.ptr
    %31 = arith.cmpi ult, %c1024_i64_2, %30 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %31, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %32 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %34 = arith.cmpi uge, %33, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %34, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %35 = arith.subi %33, %c3_i64_5 : i64
    llvm.store %35, %32 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb16
    %36 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %37 = llvm.load %36 : !llvm.ptr -> !llvm.ptr
    %38 = llvm.getelementptr %37[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %39 = llvm.load %38 : !llvm.ptr -> i256
    llvm.store %38, %36 : !llvm.ptr, !llvm.ptr
    %40 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %41 = llvm.load %40 : !llvm.ptr -> !llvm.ptr
    %42 = llvm.getelementptr %41[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %43 = llvm.load %42 : !llvm.ptr -> i256
    llvm.store %42, %40 : !llvm.ptr, !llvm.ptr
    %44 = arith.trunci %39 : i256 to i64
    %c0_i64_7 = arith.constant 0 : i64
    %45 = arith.cmpi slt, %44, %c0_i64_7 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %45, ^bb1(%c84_i8 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64 = arith.constant 32 : i64
    %46 = arith.addi %44, %c32_i64 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %47 = arith.cmpi slt, %46, %c0_i64_8 : i64
    %c84_i8_9 = arith.constant 84 : i8
    cf.cond_br %47, ^bb1(%c84_i8_9 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_10 = arith.constant 32 : i64
    %48 = arith.addi %46, %c31_i64 : i64
    %49 = arith.divui %48, %c32_i64_10 : i64
    %c32_i64_11 = arith.constant 32 : i64
    %50 = arith.muli %49, %c32_i64_11 : i64
    %51 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c31_i64_12 = arith.constant 31 : i64
    %c32_i64_13 = arith.constant 32 : i64
    %53 = arith.addi %52, %c31_i64_12 : i64
    %54 = arith.divui %53, %c32_i64_13 : i64
    %55 = arith.muli %54, %c32_i64_11 : i64
    %56 = arith.cmpi ult, %55, %50 : i64
    %57 = scf.if %56 -> (i64) {
      %c3_i64_198 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %521 = arith.muli %54, %54 : i64
      %522 = arith.divui %521, %c512_i64 : i64
      %523 = arith.muli %54, %c3_i64_198 : i64
      %524 = arith.addi %522, %523 : i64
      %c3_i64_199 = arith.constant 3 : i64
      %c512_i64_200 = arith.constant 512 : i64
      %525 = arith.muli %49, %49 : i64
      %526 = arith.divui %525, %c512_i64_200 : i64
      %527 = arith.muli %49, %c3_i64_199 : i64
      %528 = arith.addi %526, %527 : i64
      %529 = arith.subi %528, %524 : i64
      scf.yield %529 : i64
    } else {
      %c0_i64_198 = arith.constant 0 : i64
      scf.yield %c0_i64_198 : i64
    }
    %58 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> i64
    %60 = arith.cmpi ult, %59, %57 : i64
    scf.if %60 {
    } else {
      %521 = arith.subi %59, %57 : i64
      llvm.store %521, %58 : i64, !llvm.ptr
    }
    %c80_i8_14 = arith.constant 80 : i8
    cf.cond_br %60, ^bb1(%c80_i8_14 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %61 = call @dora_fn_extend_memory(%arg0, %50) : (!llvm.ptr, i64) -> !llvm.ptr
    %62 = llvm.getelementptr %61[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %63 = llvm.load %62 : !llvm.ptr -> !llvm.ptr
    %64 = llvm.getelementptr %61[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %65 = llvm.load %64 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %66 = arith.cmpi ne, %65, %c0_i8 : i8
    cf.cond_br %66, ^bb1(%65 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %67 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %63, %67 : !llvm.ptr, !llvm.ptr
    %68 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %50, %68 : i64, !llvm.ptr
    %69 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %70 = llvm.load %69 : !llvm.ptr -> !llvm.ptr
    %71 = llvm.getelementptr %70[%44] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %72 = llvm.intr.bswap(%43)  : (i256) -> i256
    llvm.store %72, %71 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_15 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %75 = arith.addi %74, %c-2_i64 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %76 = arith.cmpi ult, %74, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %76, ^bb1(%c91_i8 : i8), ^bb11
  ^bb17:  // pred: ^bb7
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_16 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_16 : i64
    %c80_i8_17 = arith.constant 80 : i8
    cf.cond_br %79, ^bb18, ^bb1(%c80_i8_17 : i8)
  ^bb18:  // pred: ^bb17
    %80 = arith.subi %78, %c3_i64_16 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_18 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c1_i64_19 = arith.constant 1 : i64
    %86 = arith.addi %85, %c1_i64_19 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %c1024_i64_18, %86 : i64
    %c92_i8_20 = arith.constant 92 : i8
    cf.cond_br %87, ^bb1(%c92_i8_20 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_21 = arith.constant 3 : i64
    %90 = arith.cmpi uge, %89, %c3_i64_21 : i64
    %c80_i8_22 = arith.constant 80 : i8
    cf.cond_br %90, ^bb22, ^bb1(%c80_i8_22 : i8)
  ^bb22:  // pred: ^bb21
    %91 = arith.subi %89, %c3_i64_21 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c32_i256 = arith.constant 32 : i256
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %93 : i256, !llvm.ptr
    %94 = llvm.getelementptr %93[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    cf.br ^bb33
  ^bb24:  // pred: ^bb26
    %95 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c1_i64_24 = arith.constant 1 : i64
    %97 = arith.addi %96, %c1_i64_24 : i64
    llvm.store %97, %95 : i64, !llvm.ptr
    %98 = arith.cmpi ult, %c1024_i64_23, %97 : i64
    %c92_i8_25 = arith.constant 92 : i8
    cf.cond_br %98, ^bb1(%c92_i8_25 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %99 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> i64
    %c3_i64_26 = arith.constant 3 : i64
    %101 = arith.cmpi uge, %100, %c3_i64_26 : i64
    %c80_i8_27 = arith.constant 80 : i8
    cf.cond_br %101, ^bb26, ^bb1(%c80_i8_27 : i8)
  ^bb26:  // pred: ^bb25
    %102 = arith.subi %100, %c3_i64_26 : i64
    llvm.store %102, %99 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb32
    %103 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %104 = llvm.load %103 : !llvm.ptr -> !llvm.ptr
    %105 = llvm.getelementptr %104[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %106 = llvm.load %105 : !llvm.ptr -> i256
    llvm.store %105, %103 : !llvm.ptr, !llvm.ptr
    %107 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %108 = llvm.load %107 : !llvm.ptr -> !llvm.ptr
    %109 = llvm.getelementptr %108[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %110 = llvm.load %109 : !llvm.ptr -> i256
    llvm.store %109, %107 : !llvm.ptr, !llvm.ptr
    %111 = arith.trunci %106 : i256 to i64
    %c0_i64_28 = arith.constant 0 : i64
    %112 = arith.cmpi slt, %111, %c0_i64_28 : i64
    %c84_i8_29 = arith.constant 84 : i8
    cf.cond_br %112, ^bb1(%c84_i8_29 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %c32_i64_30 = arith.constant 32 : i64
    %113 = arith.addi %111, %c32_i64_30 : i64
    %c0_i64_31 = arith.constant 0 : i64
    %114 = arith.cmpi slt, %113, %c0_i64_31 : i64
    %c84_i8_32 = arith.constant 84 : i8
    cf.cond_br %114, ^bb1(%c84_i8_32 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %c31_i64_33 = arith.constant 31 : i64
    %c32_i64_34 = arith.constant 32 : i64
    %115 = arith.addi %113, %c31_i64_33 : i64
    %116 = arith.divui %115, %c32_i64_34 : i64
    %c32_i64_35 = arith.constant 32 : i64
    %117 = arith.muli %116, %c32_i64_35 : i64
    %118 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c31_i64_36 = arith.constant 31 : i64
    %c32_i64_37 = arith.constant 32 : i64
    %120 = arith.addi %119, %c31_i64_36 : i64
    %121 = arith.divui %120, %c32_i64_37 : i64
    %122 = arith.muli %121, %c32_i64_35 : i64
    %123 = arith.cmpi ult, %122, %117 : i64
    %124 = scf.if %123 -> (i64) {
      %c3_i64_198 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %521 = arith.muli %121, %121 : i64
      %522 = arith.divui %521, %c512_i64 : i64
      %523 = arith.muli %121, %c3_i64_198 : i64
      %524 = arith.addi %522, %523 : i64
      %c3_i64_199 = arith.constant 3 : i64
      %c512_i64_200 = arith.constant 512 : i64
      %525 = arith.muli %116, %116 : i64
      %526 = arith.divui %525, %c512_i64_200 : i64
      %527 = arith.muli %116, %c3_i64_199 : i64
      %528 = arith.addi %526, %527 : i64
      %529 = arith.subi %528, %524 : i64
      scf.yield %529 : i64
    } else {
      %c0_i64_198 = arith.constant 0 : i64
      scf.yield %c0_i64_198 : i64
    }
    %125 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> i64
    %127 = arith.cmpi ult, %126, %124 : i64
    scf.if %127 {
    } else {
      %521 = arith.subi %126, %124 : i64
      llvm.store %521, %125 : i64, !llvm.ptr
    }
    %c80_i8_38 = arith.constant 80 : i8
    cf.cond_br %127, ^bb1(%c80_i8_38 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %128 = call @dora_fn_extend_memory(%arg0, %117) : (!llvm.ptr, i64) -> !llvm.ptr
    %129 = llvm.getelementptr %128[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %130 = llvm.load %129 : !llvm.ptr -> !llvm.ptr
    %131 = llvm.getelementptr %128[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %132 = llvm.load %131 : !llvm.ptr -> i8
    %c0_i8_39 = arith.constant 0 : i8
    %133 = arith.cmpi ne, %132, %c0_i8_39 : i8
    cf.cond_br %133, ^bb1(%132 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %134 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %130, %134 : !llvm.ptr, !llvm.ptr
    %135 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %117, %135 : i64, !llvm.ptr
    %136 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %137 = llvm.load %136 : !llvm.ptr -> !llvm.ptr
    %138 = llvm.getelementptr %137[%111] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %139 = llvm.intr.bswap(%110)  : (i256) -> i256
    llvm.store %139, %138 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb37
  ^bb32:  // pred: ^bb34
    %140 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_40 = arith.constant 1024 : i64
    %141 = llvm.load %140 : !llvm.ptr -> i64
    %c-2_i64_41 = arith.constant -2 : i64
    %142 = arith.addi %141, %c-2_i64_41 : i64
    llvm.store %142, %140 : i64, !llvm.ptr
    %c2_i64_42 = arith.constant 2 : i64
    %143 = arith.cmpi ult, %141, %c2_i64_42 : i64
    %c91_i8_43 = arith.constant 91 : i8
    cf.cond_br %143, ^bb1(%c91_i8_43 : i8), ^bb27
  ^bb33:  // pred: ^bb23
    %144 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %145 = llvm.load %144 : !llvm.ptr -> i64
    %c3_i64_44 = arith.constant 3 : i64
    %146 = arith.cmpi uge, %145, %c3_i64_44 : i64
    %c80_i8_45 = arith.constant 80 : i8
    cf.cond_br %146, ^bb34, ^bb1(%c80_i8_45 : i8)
  ^bb34:  // pred: ^bb33
    %147 = arith.subi %145, %c3_i64_44 : i64
    llvm.store %147, %144 : i64, !llvm.ptr
    cf.br ^bb32
  ^bb35:  // pred: ^bb36
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    cf.br ^bb41
  ^bb36:  // pred: ^bb38
    %151 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_46 = arith.constant 1024 : i64
    %152 = llvm.load %151 : !llvm.ptr -> i64
    %c1_i64_47 = arith.constant 1 : i64
    %153 = arith.addi %152, %c1_i64_47 : i64
    llvm.store %153, %151 : i64, !llvm.ptr
    %154 = arith.cmpi ult, %c1024_i64_46, %153 : i64
    %c92_i8_48 = arith.constant 92 : i8
    cf.cond_br %154, ^bb1(%c92_i8_48 : i8), ^bb35
  ^bb37:  // pred: ^bb31
    %155 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %156 = llvm.load %155 : !llvm.ptr -> i64
    %c3_i64_49 = arith.constant 3 : i64
    %157 = arith.cmpi uge, %156, %c3_i64_49 : i64
    %c80_i8_50 = arith.constant 80 : i8
    cf.cond_br %157, ^bb38, ^bb1(%c80_i8_50 : i8)
  ^bb38:  // pred: ^bb37
    %158 = arith.subi %156, %c3_i64_49 : i64
    llvm.store %158, %155 : i64, !llvm.ptr
    cf.br ^bb36
  ^bb39:  // pred: ^bb40
    %c64_i256 = arith.constant 64 : i256
    %159 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %160 = llvm.load %159 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %160 : i256, !llvm.ptr
    %161 = llvm.getelementptr %160[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %161, %159 : !llvm.ptr, !llvm.ptr
    cf.br ^bb49
  ^bb40:  // pred: ^bb42
    %162 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_51 = arith.constant 1024 : i64
    %163 = llvm.load %162 : !llvm.ptr -> i64
    %c1_i64_52 = arith.constant 1 : i64
    %164 = arith.addi %163, %c1_i64_52 : i64
    llvm.store %164, %162 : i64, !llvm.ptr
    %165 = arith.cmpi ult, %c1024_i64_51, %164 : i64
    %c92_i8_53 = arith.constant 92 : i8
    cf.cond_br %165, ^bb1(%c92_i8_53 : i8), ^bb39
  ^bb41:  // pred: ^bb35
    %166 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %167 = llvm.load %166 : !llvm.ptr -> i64
    %c3_i64_54 = arith.constant 3 : i64
    %168 = arith.cmpi uge, %167, %c3_i64_54 : i64
    %c80_i8_55 = arith.constant 80 : i8
    cf.cond_br %168, ^bb42, ^bb1(%c80_i8_55 : i8)
  ^bb42:  // pred: ^bb41
    %169 = arith.subi %167, %c3_i64_54 : i64
    llvm.store %169, %166 : i64, !llvm.ptr
    cf.br ^bb40
  ^bb43:  // pred: ^bb48
    %170 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %171 = llvm.load %170 : !llvm.ptr -> !llvm.ptr
    %172 = llvm.getelementptr %171[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %173 = llvm.load %172 : !llvm.ptr -> i256
    llvm.store %172, %170 : !llvm.ptr, !llvm.ptr
    %174 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %175 = llvm.load %174 : !llvm.ptr -> !llvm.ptr
    %176 = llvm.getelementptr %175[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %177 = llvm.load %176 : !llvm.ptr -> i256
    llvm.store %176, %174 : !llvm.ptr, !llvm.ptr
    %178 = arith.trunci %173 : i256 to i64
    %c0_i64_56 = arith.constant 0 : i64
    %179 = arith.cmpi slt, %178, %c0_i64_56 : i64
    %c84_i8_57 = arith.constant 84 : i8
    cf.cond_br %179, ^bb1(%c84_i8_57 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c32_i64_58 = arith.constant 32 : i64
    %180 = arith.addi %178, %c32_i64_58 : i64
    %c0_i64_59 = arith.constant 0 : i64
    %181 = arith.cmpi slt, %180, %c0_i64_59 : i64
    %c84_i8_60 = arith.constant 84 : i8
    cf.cond_br %181, ^bb1(%c84_i8_60 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %c31_i64_61 = arith.constant 31 : i64
    %c32_i64_62 = arith.constant 32 : i64
    %182 = arith.addi %180, %c31_i64_61 : i64
    %183 = arith.divui %182, %c32_i64_62 : i64
    %c32_i64_63 = arith.constant 32 : i64
    %184 = arith.muli %183, %c32_i64_63 : i64
    %185 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %186 = llvm.load %185 : !llvm.ptr -> i64
    %c31_i64_64 = arith.constant 31 : i64
    %c32_i64_65 = arith.constant 32 : i64
    %187 = arith.addi %186, %c31_i64_64 : i64
    %188 = arith.divui %187, %c32_i64_65 : i64
    %189 = arith.muli %188, %c32_i64_63 : i64
    %190 = arith.cmpi ult, %189, %184 : i64
    %191 = scf.if %190 -> (i64) {
      %c3_i64_198 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %521 = arith.muli %188, %188 : i64
      %522 = arith.divui %521, %c512_i64 : i64
      %523 = arith.muli %188, %c3_i64_198 : i64
      %524 = arith.addi %522, %523 : i64
      %c3_i64_199 = arith.constant 3 : i64
      %c512_i64_200 = arith.constant 512 : i64
      %525 = arith.muli %183, %183 : i64
      %526 = arith.divui %525, %c512_i64_200 : i64
      %527 = arith.muli %183, %c3_i64_199 : i64
      %528 = arith.addi %526, %527 : i64
      %529 = arith.subi %528, %524 : i64
      scf.yield %529 : i64
    } else {
      %c0_i64_198 = arith.constant 0 : i64
      scf.yield %c0_i64_198 : i64
    }
    %192 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> i64
    %194 = arith.cmpi ult, %193, %191 : i64
    scf.if %194 {
    } else {
      %521 = arith.subi %193, %191 : i64
      llvm.store %521, %192 : i64, !llvm.ptr
    }
    %c80_i8_66 = arith.constant 80 : i8
    cf.cond_br %194, ^bb1(%c80_i8_66 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %195 = call @dora_fn_extend_memory(%arg0, %184) : (!llvm.ptr, i64) -> !llvm.ptr
    %196 = llvm.getelementptr %195[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %197 = llvm.load %196 : !llvm.ptr -> !llvm.ptr
    %198 = llvm.getelementptr %195[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %199 = llvm.load %198 : !llvm.ptr -> i8
    %c0_i8_67 = arith.constant 0 : i8
    %200 = arith.cmpi ne, %199, %c0_i8_67 : i8
    cf.cond_br %200, ^bb1(%199 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %201 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %197, %201 : !llvm.ptr, !llvm.ptr
    %202 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %184, %202 : i64, !llvm.ptr
    %203 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %204 = llvm.load %203 : !llvm.ptr -> !llvm.ptr
    %205 = llvm.getelementptr %204[%178] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %206 = llvm.intr.bswap(%177)  : (i256) -> i256
    llvm.store %206, %205 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb53
  ^bb48:  // pred: ^bb50
    %207 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_68 = arith.constant 1024 : i64
    %208 = llvm.load %207 : !llvm.ptr -> i64
    %c-2_i64_69 = arith.constant -2 : i64
    %209 = arith.addi %208, %c-2_i64_69 : i64
    llvm.store %209, %207 : i64, !llvm.ptr
    %c2_i64_70 = arith.constant 2 : i64
    %210 = arith.cmpi ult, %208, %c2_i64_70 : i64
    %c91_i8_71 = arith.constant 91 : i8
    cf.cond_br %210, ^bb1(%c91_i8_71 : i8), ^bb43
  ^bb49:  // pred: ^bb39
    %211 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %212 = llvm.load %211 : !llvm.ptr -> i64
    %c3_i64_72 = arith.constant 3 : i64
    %213 = arith.cmpi uge, %212, %c3_i64_72 : i64
    %c80_i8_73 = arith.constant 80 : i8
    cf.cond_br %213, ^bb50, ^bb1(%c80_i8_73 : i8)
  ^bb50:  // pred: ^bb49
    %214 = arith.subi %212, %c3_i64_72 : i64
    llvm.store %214, %211 : i64, !llvm.ptr
    cf.br ^bb48
  ^bb51:  // pred: ^bb52
    %c77_i256 = arith.constant 77 : i256
    %215 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %216 = llvm.load %215 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %216 : i256, !llvm.ptr
    %217 = llvm.getelementptr %216[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %217, %215 : !llvm.ptr, !llvm.ptr
    cf.br ^bb57
  ^bb52:  // pred: ^bb54
    %218 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_74 = arith.constant 1024 : i64
    %219 = llvm.load %218 : !llvm.ptr -> i64
    %c1_i64_75 = arith.constant 1 : i64
    %220 = arith.addi %219, %c1_i64_75 : i64
    llvm.store %220, %218 : i64, !llvm.ptr
    %221 = arith.cmpi ult, %c1024_i64_74, %220 : i64
    %c92_i8_76 = arith.constant 92 : i8
    cf.cond_br %221, ^bb1(%c92_i8_76 : i8), ^bb51
  ^bb53:  // pred: ^bb47
    %222 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> i64
    %c3_i64_77 = arith.constant 3 : i64
    %224 = arith.cmpi uge, %223, %c3_i64_77 : i64
    %c80_i8_78 = arith.constant 80 : i8
    cf.cond_br %224, ^bb54, ^bb1(%c80_i8_78 : i8)
  ^bb54:  // pred: ^bb53
    %225 = arith.subi %223, %c3_i64_77 : i64
    llvm.store %225, %222 : i64, !llvm.ptr
    cf.br ^bb52
  ^bb55:  // pred: ^bb56
    %c0_i256_79 = arith.constant 0 : i256
    %226 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %227 = llvm.load %226 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_79, %227 : i256, !llvm.ptr
    %228 = llvm.getelementptr %227[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %228, %226 : !llvm.ptr, !llvm.ptr
    cf.br ^bb61
  ^bb56:  // pred: ^bb58
    %229 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_80 = arith.constant 1024 : i64
    %230 = llvm.load %229 : !llvm.ptr -> i64
    %c1_i64_81 = arith.constant 1 : i64
    %231 = arith.addi %230, %c1_i64_81 : i64
    llvm.store %231, %229 : i64, !llvm.ptr
    %232 = arith.cmpi ult, %c1024_i64_80, %231 : i64
    %c92_i8_82 = arith.constant 92 : i8
    cf.cond_br %232, ^bb1(%c92_i8_82 : i8), ^bb55
  ^bb57:  // pred: ^bb51
    %233 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %234 = llvm.load %233 : !llvm.ptr -> i64
    %c3_i64_83 = arith.constant 3 : i64
    %235 = arith.cmpi uge, %234, %c3_i64_83 : i64
    %c80_i8_84 = arith.constant 80 : i8
    cf.cond_br %235, ^bb58, ^bb1(%c80_i8_84 : i8)
  ^bb58:  // pred: ^bb57
    %236 = arith.subi %234, %c3_i64_83 : i64
    llvm.store %236, %233 : i64, !llvm.ptr
    cf.br ^bb56
  ^bb59:  // pred: ^bb60
    %c0_i256_85 = arith.constant 0 : i256
    %237 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %238 = llvm.load %237 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_85, %238 : i256, !llvm.ptr
    %239 = llvm.getelementptr %238[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %239, %237 : !llvm.ptr, !llvm.ptr
    cf.br ^bb72
  ^bb60:  // pred: ^bb62
    %240 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_86 = arith.constant 1024 : i64
    %241 = llvm.load %240 : !llvm.ptr -> i64
    %c1_i64_87 = arith.constant 1 : i64
    %242 = arith.addi %241, %c1_i64_87 : i64
    llvm.store %242, %240 : i64, !llvm.ptr
    %243 = arith.cmpi ult, %c1024_i64_86, %242 : i64
    %c92_i8_88 = arith.constant 92 : i8
    cf.cond_br %243, ^bb1(%c92_i8_88 : i8), ^bb59
  ^bb61:  // pred: ^bb55
    %244 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %245 = llvm.load %244 : !llvm.ptr -> i64
    %c3_i64_89 = arith.constant 3 : i64
    %246 = arith.cmpi uge, %245, %c3_i64_89 : i64
    %c80_i8_90 = arith.constant 80 : i8
    cf.cond_br %246, ^bb62, ^bb1(%c80_i8_90 : i8)
  ^bb62:  // pred: ^bb61
    %247 = arith.subi %245, %c3_i64_89 : i64
    llvm.store %247, %244 : i64, !llvm.ptr
    cf.br ^bb60
  ^bb63:  // pred: ^bb71
    %248 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %249 = llvm.load %248 : !llvm.ptr -> !llvm.ptr
    %250 = llvm.getelementptr %249[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %251 = llvm.load %250 : !llvm.ptr -> i256
    llvm.store %250, %248 : !llvm.ptr, !llvm.ptr
    %252 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> !llvm.ptr
    %254 = llvm.getelementptr %253[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %255 = llvm.load %254 : !llvm.ptr -> i256
    llvm.store %254, %252 : !llvm.ptr, !llvm.ptr
    %256 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %257 = llvm.load %256 : !llvm.ptr -> !llvm.ptr
    %258 = llvm.getelementptr %257[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %259 = llvm.load %258 : !llvm.ptr -> i256
    llvm.store %258, %256 : !llvm.ptr, !llvm.ptr
    %260 = llvm.mlir.addressof @dora_global_ctx_is_static : !llvm.ptr
    %261 = llvm.load %260 : !llvm.ptr -> i1
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %261, ^bb1(%c87_i8 : i8), ^bb64
  ^bb64:  // pred: ^bb63
    %262 = arith.trunci %255 : i256 to i64
    %c0_i64_91 = arith.constant 0 : i64
    %263 = arith.cmpi slt, %262, %c0_i64_91 : i64
    %c84_i8_92 = arith.constant 84 : i8
    cf.cond_br %263, ^bb1(%c84_i8_92 : i8), ^bb65
  ^bb65:  // pred: ^bb64
    %264 = arith.trunci %259 : i256 to i64
    %c0_i64_93 = arith.constant 0 : i64
    %265 = arith.cmpi slt, %264, %c0_i64_93 : i64
    %c84_i8_94 = arith.constant 84 : i8
    cf.cond_br %265, ^bb1(%c84_i8_94 : i8), ^bb66
  ^bb66:  // pred: ^bb65
    %c0_i64_95 = arith.constant 0 : i64
    %266 = arith.cmpi ne, %264, %c0_i64_95 : i64
    cf.cond_br %266, ^bb116, ^bb67
  ^bb67:  // 2 preds: ^bb66, ^bb121
    %c32000_i64 = arith.constant 32000 : i64
    %267 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %268 = llvm.load %267 : !llvm.ptr -> i64
    %269 = arith.cmpi ult, %268, %c32000_i64 : i64
    scf.if %269 {
    } else {
      %521 = arith.subi %268, %c32000_i64 : i64
      llvm.store %521, %267 : i64, !llvm.ptr
    }
    %c80_i8_96 = arith.constant 80 : i8
    cf.cond_br %269, ^bb1(%c80_i8_96 : i8), ^bb68
  ^bb68:  // pred: ^bb67
    %c1_i256 = arith.constant 1 : i256
    %270 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %251, %270 {alignment = 1 : i64} : i256, !llvm.ptr
    %271 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %272 = llvm.load %271 : !llvm.ptr -> i64
    %273 = call @dora_fn_create(%arg0, %264, %262, %270, %272) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %274 = llvm.getelementptr %273[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %275 = llvm.load %274 : !llvm.ptr -> i8
    %c0_i8_97 = arith.constant 0 : i8
    %276 = arith.cmpi ne, %275, %c0_i8_97 : i8
    cf.cond_br %276, ^bb1(%275 : i8), ^bb69
  ^bb69:  // pred: ^bb68
    %277 = llvm.getelementptr %273[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %278 = llvm.load %277 : !llvm.ptr -> i64
    %279 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %280 = llvm.load %279 : !llvm.ptr -> i64
    %281 = arith.cmpi ult, %280, %278 : i64
    scf.if %281 {
    } else {
      %521 = arith.subi %280, %278 : i64
      llvm.store %521, %279 : i64, !llvm.ptr
    }
    %c80_i8_98 = arith.constant 80 : i8
    cf.cond_br %281, ^bb1(%c80_i8_98 : i8), ^bb70
  ^bb70:  // pred: ^bb69
    %282 = llvm.load %270 : !llvm.ptr -> i256
    %283 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %284 = llvm.load %283 : !llvm.ptr -> !llvm.ptr
    llvm.store %282, %284 : i256, !llvm.ptr
    %285 = llvm.getelementptr %284[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %285, %283 : !llvm.ptr, !llvm.ptr
    cf.br ^bb76
  ^bb71:  // pred: ^bb73
    %286 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_99 = arith.constant 1024 : i64
    %287 = llvm.load %286 : !llvm.ptr -> i64
    %c-2_i64_100 = arith.constant -2 : i64
    %288 = arith.addi %287, %c-2_i64_100 : i64
    llvm.store %288, %286 : i64, !llvm.ptr
    %c3_i64_101 = arith.constant 3 : i64
    %289 = arith.cmpi ult, %287, %c3_i64_101 : i64
    %c91_i8_102 = arith.constant 91 : i8
    cf.cond_br %289, ^bb1(%c91_i8_102 : i8), ^bb63
  ^bb72:  // pred: ^bb59
    %290 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %291 = llvm.load %290 : !llvm.ptr -> i64
    %c0_i64_103 = arith.constant 0 : i64
    %292 = arith.cmpi uge, %291, %c0_i64_103 : i64
    %c80_i8_104 = arith.constant 80 : i8
    cf.cond_br %292, ^bb73, ^bb1(%c80_i8_104 : i8)
  ^bb73:  // pred: ^bb72
    %293 = arith.subi %291, %c0_i64_103 : i64
    llvm.store %293, %290 : i64, !llvm.ptr
    cf.br ^bb71
  ^bb74:  // pred: ^bb75
    %c0_i256_105 = arith.constant 0 : i256
    %294 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %295 = llvm.load %294 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_105, %295 : i256, !llvm.ptr
    %296 = llvm.getelementptr %295[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %296, %294 : !llvm.ptr, !llvm.ptr
    cf.br ^bb80
  ^bb75:  // pred: ^bb77
    %297 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_106 = arith.constant 1024 : i64
    %298 = llvm.load %297 : !llvm.ptr -> i64
    %c1_i64_107 = arith.constant 1 : i64
    %299 = arith.addi %298, %c1_i64_107 : i64
    llvm.store %299, %297 : i64, !llvm.ptr
    %300 = arith.cmpi ult, %c1024_i64_106, %299 : i64
    %c92_i8_108 = arith.constant 92 : i8
    cf.cond_br %300, ^bb1(%c92_i8_108 : i8), ^bb74
  ^bb76:  // pred: ^bb70
    %301 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %302 = llvm.load %301 : !llvm.ptr -> i64
    %c3_i64_109 = arith.constant 3 : i64
    %303 = arith.cmpi uge, %302, %c3_i64_109 : i64
    %c80_i8_110 = arith.constant 80 : i8
    cf.cond_br %303, ^bb77, ^bb1(%c80_i8_110 : i8)
  ^bb77:  // pred: ^bb76
    %304 = arith.subi %302, %c3_i64_109 : i64
    llvm.store %304, %301 : i64, !llvm.ptr
    cf.br ^bb75
  ^bb78:  // pred: ^bb79
    %c0_i256_111 = arith.constant 0 : i256
    %305 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %306 = llvm.load %305 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_111, %306 : i256, !llvm.ptr
    %307 = llvm.getelementptr %306[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %307, %305 : !llvm.ptr, !llvm.ptr
    cf.br ^bb84
  ^bb79:  // pred: ^bb81
    %308 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_112 = arith.constant 1024 : i64
    %309 = llvm.load %308 : !llvm.ptr -> i64
    %c1_i64_113 = arith.constant 1 : i64
    %310 = arith.addi %309, %c1_i64_113 : i64
    llvm.store %310, %308 : i64, !llvm.ptr
    %311 = arith.cmpi ult, %c1024_i64_112, %310 : i64
    %c92_i8_114 = arith.constant 92 : i8
    cf.cond_br %311, ^bb1(%c92_i8_114 : i8), ^bb78
  ^bb80:  // pred: ^bb74
    %312 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %313 = llvm.load %312 : !llvm.ptr -> i64
    %c3_i64_115 = arith.constant 3 : i64
    %314 = arith.cmpi uge, %313, %c3_i64_115 : i64
    %c80_i8_116 = arith.constant 80 : i8
    cf.cond_br %314, ^bb81, ^bb1(%c80_i8_116 : i8)
  ^bb81:  // pred: ^bb80
    %315 = arith.subi %313, %c3_i64_115 : i64
    llvm.store %315, %312 : i64, !llvm.ptr
    cf.br ^bb79
  ^bb82:  // pred: ^bb83
    %c0_i256_117 = arith.constant 0 : i256
    %316 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %317 = llvm.load %316 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_117, %317 : i256, !llvm.ptr
    %318 = llvm.getelementptr %317[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %318, %316 : !llvm.ptr, !llvm.ptr
    cf.br ^bb88
  ^bb83:  // pred: ^bb85
    %319 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_118 = arith.constant 1024 : i64
    %320 = llvm.load %319 : !llvm.ptr -> i64
    %c1_i64_119 = arith.constant 1 : i64
    %321 = arith.addi %320, %c1_i64_119 : i64
    llvm.store %321, %319 : i64, !llvm.ptr
    %322 = arith.cmpi ult, %c1024_i64_118, %321 : i64
    %c92_i8_120 = arith.constant 92 : i8
    cf.cond_br %322, ^bb1(%c92_i8_120 : i8), ^bb82
  ^bb84:  // pred: ^bb78
    %323 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %324 = llvm.load %323 : !llvm.ptr -> i64
    %c3_i64_121 = arith.constant 3 : i64
    %325 = arith.cmpi uge, %324, %c3_i64_121 : i64
    %c80_i8_122 = arith.constant 80 : i8
    cf.cond_br %325, ^bb85, ^bb1(%c80_i8_122 : i8)
  ^bb85:  // pred: ^bb84
    %326 = arith.subi %324, %c3_i64_121 : i64
    llvm.store %326, %323 : i64, !llvm.ptr
    cf.br ^bb83
  ^bb86:  // pred: ^bb87
    %c0_i256_123 = arith.constant 0 : i256
    %327 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %328 = llvm.load %327 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_123, %328 : i256, !llvm.ptr
    %329 = llvm.getelementptr %328[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %329, %327 : !llvm.ptr, !llvm.ptr
    cf.br ^bb92
  ^bb87:  // pred: ^bb89
    %330 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_124 = arith.constant 1024 : i64
    %331 = llvm.load %330 : !llvm.ptr -> i64
    %c1_i64_125 = arith.constant 1 : i64
    %332 = arith.addi %331, %c1_i64_125 : i64
    llvm.store %332, %330 : i64, !llvm.ptr
    %333 = arith.cmpi ult, %c1024_i64_124, %332 : i64
    %c92_i8_126 = arith.constant 92 : i8
    cf.cond_br %333, ^bb1(%c92_i8_126 : i8), ^bb86
  ^bb88:  // pred: ^bb82
    %334 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %335 = llvm.load %334 : !llvm.ptr -> i64
    %c3_i64_127 = arith.constant 3 : i64
    %336 = arith.cmpi uge, %335, %c3_i64_127 : i64
    %c80_i8_128 = arith.constant 80 : i8
    cf.cond_br %336, ^bb89, ^bb1(%c80_i8_128 : i8)
  ^bb89:  // pred: ^bb88
    %337 = arith.subi %335, %c3_i64_127 : i64
    llvm.store %337, %334 : i64, !llvm.ptr
    cf.br ^bb87
  ^bb90:  // pred: ^bb91
    %338 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %339 = llvm.load %338 : !llvm.ptr -> !llvm.ptr
    %340 = llvm.getelementptr %339[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %341 = llvm.load %340 : !llvm.ptr -> i256
    %342 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %343 = llvm.load %342 : !llvm.ptr -> !llvm.ptr
    llvm.store %341, %343 : i256, !llvm.ptr
    %344 = llvm.getelementptr %343[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %344, %342 : !llvm.ptr, !llvm.ptr
    cf.br ^bb96
  ^bb91:  // pred: ^bb93
    %345 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_129 = arith.constant 1024 : i64
    %346 = llvm.load %345 : !llvm.ptr -> i64
    %c1_i64_130 = arith.constant 1 : i64
    %347 = arith.addi %346, %c1_i64_130 : i64
    llvm.store %347, %345 : i64, !llvm.ptr
    %348 = arith.cmpi ult, %c1024_i64_129, %347 : i64
    %c92_i8_131 = arith.constant 92 : i8
    cf.cond_br %348, ^bb1(%c92_i8_131 : i8), ^bb90
  ^bb92:  // pred: ^bb86
    %349 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %350 = llvm.load %349 : !llvm.ptr -> i64
    %c3_i64_132 = arith.constant 3 : i64
    %351 = arith.cmpi uge, %350, %c3_i64_132 : i64
    %c80_i8_133 = arith.constant 80 : i8
    cf.cond_br %351, ^bb93, ^bb1(%c80_i8_133 : i8)
  ^bb93:  // pred: ^bb92
    %352 = arith.subi %350, %c3_i64_132 : i64
    llvm.store %352, %349 : i64, !llvm.ptr
    cf.br ^bb91
  ^bb94:  // pred: ^bb95
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %353 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %354 = llvm.load %353 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %354 : i256, !llvm.ptr
    %355 = llvm.getelementptr %354[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %355, %353 : !llvm.ptr, !llvm.ptr
    cf.br ^bb109
  ^bb95:  // pred: ^bb97
    %356 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_134 = arith.constant 1024 : i64
    %357 = llvm.load %356 : !llvm.ptr -> i64
    %c1_i64_135 = arith.constant 1 : i64
    %358 = arith.addi %357, %c1_i64_135 : i64
    llvm.store %358, %356 : i64, !llvm.ptr
    %359 = arith.cmpi ult, %c1024_i64_134, %358 : i64
    %c92_i8_136 = arith.constant 92 : i8
    cf.cond_br %359, ^bb1(%c92_i8_136 : i8), ^bb94
  ^bb96:  // pred: ^bb90
    %360 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %361 = llvm.load %360 : !llvm.ptr -> i64
    %c3_i64_137 = arith.constant 3 : i64
    %362 = arith.cmpi uge, %361, %c3_i64_137 : i64
    %c80_i8_138 = arith.constant 80 : i8
    cf.cond_br %362, ^bb97, ^bb1(%c80_i8_138 : i8)
  ^bb97:  // pred: ^bb96
    %363 = arith.subi %361, %c3_i64_137 : i64
    llvm.store %363, %360 : i64, !llvm.ptr
    cf.br ^bb95
  ^bb98:  // pred: ^bb108
    %364 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %365 = llvm.load %364 : !llvm.ptr -> !llvm.ptr
    %366 = llvm.getelementptr %365[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %367 = llvm.load %366 : !llvm.ptr -> i256
    llvm.store %366, %364 : !llvm.ptr, !llvm.ptr
    %368 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %369 = llvm.load %368 : !llvm.ptr -> !llvm.ptr
    %370 = llvm.getelementptr %369[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %371 = llvm.load %370 : !llvm.ptr -> i256
    llvm.store %370, %368 : !llvm.ptr, !llvm.ptr
    %372 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %373 = llvm.load %372 : !llvm.ptr -> !llvm.ptr
    %374 = llvm.getelementptr %373[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %375 = llvm.load %374 : !llvm.ptr -> i256
    llvm.store %374, %372 : !llvm.ptr, !llvm.ptr
    %376 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %377 = llvm.load %376 : !llvm.ptr -> !llvm.ptr
    %378 = llvm.getelementptr %377[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %379 = llvm.load %378 : !llvm.ptr -> i256
    llvm.store %378, %376 : !llvm.ptr, !llvm.ptr
    %380 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %381 = llvm.load %380 : !llvm.ptr -> !llvm.ptr
    %382 = llvm.getelementptr %381[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %383 = llvm.load %382 : !llvm.ptr -> i256
    llvm.store %382, %380 : !llvm.ptr, !llvm.ptr
    %384 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %385 = llvm.load %384 : !llvm.ptr -> !llvm.ptr
    %386 = llvm.getelementptr %385[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %387 = llvm.load %386 : !llvm.ptr -> i256
    llvm.store %386, %384 : !llvm.ptr, !llvm.ptr
    %c0_i256_139 = arith.constant 0 : i256
    %388 = arith.trunci %367 : i256 to i64
    %c0_i64_140 = arith.constant 0 : i64
    %389 = arith.cmpi slt, %388, %c0_i64_140 : i64
    %c84_i8_141 = arith.constant 84 : i8
    cf.cond_br %389, ^bb1(%c84_i8_141 : i8), ^bb99
  ^bb99:  // pred: ^bb98
    %390 = arith.trunci %375 : i256 to i64
    %c0_i64_142 = arith.constant 0 : i64
    %391 = arith.cmpi slt, %390, %c0_i64_142 : i64
    %c84_i8_143 = arith.constant 84 : i8
    cf.cond_br %391, ^bb1(%c84_i8_143 : i8), ^bb100
  ^bb100:  // pred: ^bb99
    %392 = arith.trunci %379 : i256 to i64
    %c0_i64_144 = arith.constant 0 : i64
    %393 = arith.cmpi slt, %392, %c0_i64_144 : i64
    %c84_i8_145 = arith.constant 84 : i8
    cf.cond_br %393, ^bb1(%c84_i8_145 : i8), ^bb101
  ^bb101:  // pred: ^bb100
    %394 = arith.trunci %383 : i256 to i64
    %c0_i64_146 = arith.constant 0 : i64
    %395 = arith.cmpi slt, %394, %c0_i64_146 : i64
    %c84_i8_147 = arith.constant 84 : i8
    cf.cond_br %395, ^bb1(%c84_i8_147 : i8), ^bb102
  ^bb102:  // pred: ^bb101
    %396 = arith.trunci %387 : i256 to i64
    %c0_i64_148 = arith.constant 0 : i64
    %397 = arith.cmpi slt, %396, %c0_i64_148 : i64
    %c84_i8_149 = arith.constant 84 : i8
    cf.cond_br %397, ^bb1(%c84_i8_149 : i8), ^bb103
  ^bb103:  // pred: ^bb102
    %c0_i64_150 = arith.constant 0 : i64
    %398 = arith.cmpi ne, %392, %c0_i64_150 : i64
    cf.cond_br %398, ^bb122, ^bb104
  ^bb104:  // 2 preds: ^bb103, ^bb125
    %c0_i64_151 = arith.constant 0 : i64
    %399 = arith.cmpi ne, %396, %c0_i64_151 : i64
    cf.cond_br %399, ^bb126, ^bb105
  ^bb105:  // 2 preds: ^bb104, ^bb129
    %400 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %401 = llvm.load %400 : !llvm.ptr -> i64
    %c1_i256_152 = arith.constant 1 : i256
    %402 = llvm.alloca %c1_i256_152 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_139, %402 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_153 = arith.constant 1 : i256
    %403 = llvm.alloca %c1_i256_153 x i256 : (i256) -> !llvm.ptr
    llvm.store %371, %403 {alignment = 1 : i64} : i256, !llvm.ptr
    %c0_i8_154 = arith.constant 0 : i8
    %404 = call @dora_fn_call(%arg0, %388, %403, %402, %390, %392, %394, %396, %401, %c0_i8_154) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %405 = llvm.getelementptr %404[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %406 = llvm.load %405 : !llvm.ptr -> i8
    %407 = llvm.getelementptr %404[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %408 = llvm.load %407 : !llvm.ptr -> i8
    %c0_i8_155 = arith.constant 0 : i8
    %409 = arith.cmpi ne, %408, %c0_i8_155 : i8
    cf.cond_br %409, ^bb1(%408 : i8), ^bb106
  ^bb106:  // pred: ^bb105
    %410 = llvm.getelementptr %404[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %411 = llvm.load %410 : !llvm.ptr -> i64
    %412 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %413 = llvm.load %412 : !llvm.ptr -> i64
    %414 = arith.cmpi ult, %413, %411 : i64
    scf.if %414 {
    } else {
      %521 = arith.subi %413, %411 : i64
      llvm.store %521, %412 : i64, !llvm.ptr
    }
    %c80_i8_156 = arith.constant 80 : i8
    cf.cond_br %414, ^bb1(%c80_i8_156 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %415 = arith.extui %406 : i8 to i256
    %416 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %417 = llvm.load %416 : !llvm.ptr -> !llvm.ptr
    llvm.store %415, %417 : i256, !llvm.ptr
    %418 = llvm.getelementptr %417[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %418, %416 : !llvm.ptr, !llvm.ptr
    cf.br ^bb113
  ^bb108:  // pred: ^bb110
    %419 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_157 = arith.constant 1024 : i64
    %420 = llvm.load %419 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %421 = arith.addi %420, %c-5_i64 : i64
    llvm.store %421, %419 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %422 = arith.cmpi ult, %420, %c6_i64 : i64
    %c91_i8_158 = arith.constant 91 : i8
    cf.cond_br %422, ^bb1(%c91_i8_158 : i8), ^bb98
  ^bb109:  // pred: ^bb94
    %423 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %424 = llvm.load %423 : !llvm.ptr -> i64
    %c0_i64_159 = arith.constant 0 : i64
    %425 = arith.cmpi uge, %424, %c0_i64_159 : i64
    %c80_i8_160 = arith.constant 80 : i8
    cf.cond_br %425, ^bb110, ^bb1(%c80_i8_160 : i8)
  ^bb110:  // pred: ^bb109
    %426 = arith.subi %424, %c0_i64_159 : i64
    llvm.store %426, %423 : i64, !llvm.ptr
    cf.br ^bb108
  ^bb111:  // pred: ^bb112
    %427 = call @dora_fn_returndata_size(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %428 = llvm.getelementptr %427[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %429 = llvm.load %428 : !llvm.ptr -> i64
    %430 = arith.extui %429 : i64 to i256
    %431 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %432 = llvm.load %431 : !llvm.ptr -> !llvm.ptr
    llvm.store %430, %432 : i256, !llvm.ptr
    %433 = llvm.getelementptr %432[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %433, %431 : !llvm.ptr, !llvm.ptr
    cf.br ^bb115
  ^bb112:  // pred: ^bb114
    %434 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_161 = arith.constant 1024 : i64
    %435 = llvm.load %434 : !llvm.ptr -> i64
    %c1_i64_162 = arith.constant 1 : i64
    %436 = arith.addi %435, %c1_i64_162 : i64
    llvm.store %436, %434 : i64, !llvm.ptr
    %437 = arith.cmpi ult, %c1024_i64_161, %436 : i64
    %c92_i8_163 = arith.constant 92 : i8
    cf.cond_br %437, ^bb1(%c92_i8_163 : i8), ^bb111
  ^bb113:  // pred: ^bb107
    %438 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %439 = llvm.load %438 : !llvm.ptr -> i64
    %c2_i64_164 = arith.constant 2 : i64
    %440 = arith.cmpi uge, %439, %c2_i64_164 : i64
    %c80_i8_165 = arith.constant 80 : i8
    cf.cond_br %440, ^bb114, ^bb1(%c80_i8_165 : i8)
  ^bb114:  // pred: ^bb113
    %441 = arith.subi %439, %c2_i64_164 : i64
    llvm.store %441, %438 : i64, !llvm.ptr
    cf.br ^bb112
  ^bb115:  // pred: ^bb111
    %c0_i64_166 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %442 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %443 = llvm.load %442 : !llvm.ptr -> i64
    %444 = call @dora_fn_write_result(%arg0, %c0_i64_166, %c0_i64_166, %443, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  ^bb116:  // pred: ^bb66
    %c49152_i64 = arith.constant 49152 : i64
    %445 = arith.cmpi ugt, %264, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %445, ^bb1(%c100_i8 : i8), ^bb117
  ^bb117:  // pred: ^bb116
    %c31_i64_167 = arith.constant 31 : i64
    %c32_i64_168 = arith.constant 32 : i64
    %446 = arith.addi %264, %c31_i64_167 : i64
    %447 = arith.divui %446, %c32_i64_168 : i64
    %c2_i64_169 = arith.constant 2 : i64
    %448 = arith.muli %447, %c2_i64_169 : i64
    %449 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %450 = llvm.load %449 : !llvm.ptr -> i64
    %451 = arith.cmpi ult, %450, %448 : i64
    scf.if %451 {
    } else {
      %521 = arith.subi %450, %448 : i64
      llvm.store %521, %449 : i64, !llvm.ptr
    }
    %c80_i8_170 = arith.constant 80 : i8
    cf.cond_br %451, ^bb1(%c80_i8_170 : i8), ^bb118
  ^bb118:  // pred: ^bb117
    %452 = arith.addi %262, %264 : i64
    %c0_i64_171 = arith.constant 0 : i64
    %453 = arith.cmpi slt, %452, %c0_i64_171 : i64
    %c84_i8_172 = arith.constant 84 : i8
    cf.cond_br %453, ^bb1(%c84_i8_172 : i8), ^bb119
  ^bb119:  // pred: ^bb118
    %c31_i64_173 = arith.constant 31 : i64
    %c32_i64_174 = arith.constant 32 : i64
    %454 = arith.addi %452, %c31_i64_173 : i64
    %455 = arith.divui %454, %c32_i64_174 : i64
    %c32_i64_175 = arith.constant 32 : i64
    %456 = arith.muli %455, %c32_i64_175 : i64
    %457 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %458 = llvm.load %457 : !llvm.ptr -> i64
    %c31_i64_176 = arith.constant 31 : i64
    %c32_i64_177 = arith.constant 32 : i64
    %459 = arith.addi %458, %c31_i64_176 : i64
    %460 = arith.divui %459, %c32_i64_177 : i64
    %461 = arith.muli %460, %c32_i64_175 : i64
    %462 = arith.cmpi ult, %461, %456 : i64
    %463 = scf.if %462 -> (i64) {
      %c3_i64_198 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %521 = arith.muli %460, %460 : i64
      %522 = arith.divui %521, %c512_i64 : i64
      %523 = arith.muli %460, %c3_i64_198 : i64
      %524 = arith.addi %522, %523 : i64
      %c3_i64_199 = arith.constant 3 : i64
      %c512_i64_200 = arith.constant 512 : i64
      %525 = arith.muli %455, %455 : i64
      %526 = arith.divui %525, %c512_i64_200 : i64
      %527 = arith.muli %455, %c3_i64_199 : i64
      %528 = arith.addi %526, %527 : i64
      %529 = arith.subi %528, %524 : i64
      scf.yield %529 : i64
    } else {
      %c0_i64_198 = arith.constant 0 : i64
      scf.yield %c0_i64_198 : i64
    }
    %464 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %465 = llvm.load %464 : !llvm.ptr -> i64
    %466 = arith.cmpi ult, %465, %463 : i64
    scf.if %466 {
    } else {
      %521 = arith.subi %465, %463 : i64
      llvm.store %521, %464 : i64, !llvm.ptr
    }
    %c80_i8_178 = arith.constant 80 : i8
    cf.cond_br %466, ^bb1(%c80_i8_178 : i8), ^bb120
  ^bb120:  // pred: ^bb119
    %467 = call @dora_fn_extend_memory(%arg0, %456) : (!llvm.ptr, i64) -> !llvm.ptr
    %468 = llvm.getelementptr %467[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %469 = llvm.load %468 : !llvm.ptr -> !llvm.ptr
    %470 = llvm.getelementptr %467[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %471 = llvm.load %470 : !llvm.ptr -> i8
    %c0_i8_179 = arith.constant 0 : i8
    %472 = arith.cmpi ne, %471, %c0_i8_179 : i8
    cf.cond_br %472, ^bb1(%471 : i8), ^bb121
  ^bb121:  // pred: ^bb120
    %473 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %469, %473 : !llvm.ptr, !llvm.ptr
    %474 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %456, %474 : i64, !llvm.ptr
    cf.br ^bb67
  ^bb122:  // pred: ^bb103
    %475 = arith.addi %390, %392 : i64
    %c0_i64_180 = arith.constant 0 : i64
    %476 = arith.cmpi slt, %475, %c0_i64_180 : i64
    %c84_i8_181 = arith.constant 84 : i8
    cf.cond_br %476, ^bb1(%c84_i8_181 : i8), ^bb123
  ^bb123:  // pred: ^bb122
    %c31_i64_182 = arith.constant 31 : i64
    %c32_i64_183 = arith.constant 32 : i64
    %477 = arith.addi %475, %c31_i64_182 : i64
    %478 = arith.divui %477, %c32_i64_183 : i64
    %c32_i64_184 = arith.constant 32 : i64
    %479 = arith.muli %478, %c32_i64_184 : i64
    %480 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %481 = llvm.load %480 : !llvm.ptr -> i64
    %c31_i64_185 = arith.constant 31 : i64
    %c32_i64_186 = arith.constant 32 : i64
    %482 = arith.addi %481, %c31_i64_185 : i64
    %483 = arith.divui %482, %c32_i64_186 : i64
    %484 = arith.muli %483, %c32_i64_184 : i64
    %485 = arith.cmpi ult, %484, %479 : i64
    %486 = scf.if %485 -> (i64) {
      %c3_i64_198 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %521 = arith.muli %483, %483 : i64
      %522 = arith.divui %521, %c512_i64 : i64
      %523 = arith.muli %483, %c3_i64_198 : i64
      %524 = arith.addi %522, %523 : i64
      %c3_i64_199 = arith.constant 3 : i64
      %c512_i64_200 = arith.constant 512 : i64
      %525 = arith.muli %478, %478 : i64
      %526 = arith.divui %525, %c512_i64_200 : i64
      %527 = arith.muli %478, %c3_i64_199 : i64
      %528 = arith.addi %526, %527 : i64
      %529 = arith.subi %528, %524 : i64
      scf.yield %529 : i64
    } else {
      %c0_i64_198 = arith.constant 0 : i64
      scf.yield %c0_i64_198 : i64
    }
    %487 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %488 = llvm.load %487 : !llvm.ptr -> i64
    %489 = arith.cmpi ult, %488, %486 : i64
    scf.if %489 {
    } else {
      %521 = arith.subi %488, %486 : i64
      llvm.store %521, %487 : i64, !llvm.ptr
    }
    %c80_i8_187 = arith.constant 80 : i8
    cf.cond_br %489, ^bb1(%c80_i8_187 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %490 = call @dora_fn_extend_memory(%arg0, %479) : (!llvm.ptr, i64) -> !llvm.ptr
    %491 = llvm.getelementptr %490[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %492 = llvm.load %491 : !llvm.ptr -> !llvm.ptr
    %493 = llvm.getelementptr %490[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %494 = llvm.load %493 : !llvm.ptr -> i8
    %c0_i8_188 = arith.constant 0 : i8
    %495 = arith.cmpi ne, %494, %c0_i8_188 : i8
    cf.cond_br %495, ^bb1(%494 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %496 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %492, %496 : !llvm.ptr, !llvm.ptr
    %497 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %479, %497 : i64, !llvm.ptr
    cf.br ^bb104
  ^bb126:  // pred: ^bb104
    %498 = arith.addi %394, %396 : i64
    %c0_i64_189 = arith.constant 0 : i64
    %499 = arith.cmpi slt, %498, %c0_i64_189 : i64
    %c84_i8_190 = arith.constant 84 : i8
    cf.cond_br %499, ^bb1(%c84_i8_190 : i8), ^bb127
  ^bb127:  // pred: ^bb126
    %c31_i64_191 = arith.constant 31 : i64
    %c32_i64_192 = arith.constant 32 : i64
    %500 = arith.addi %498, %c31_i64_191 : i64
    %501 = arith.divui %500, %c32_i64_192 : i64
    %c32_i64_193 = arith.constant 32 : i64
    %502 = arith.muli %501, %c32_i64_193 : i64
    %503 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %504 = llvm.load %503 : !llvm.ptr -> i64
    %c31_i64_194 = arith.constant 31 : i64
    %c32_i64_195 = arith.constant 32 : i64
    %505 = arith.addi %504, %c31_i64_194 : i64
    %506 = arith.divui %505, %c32_i64_195 : i64
    %507 = arith.muli %506, %c32_i64_193 : i64
    %508 = arith.cmpi ult, %507, %502 : i64
    %509 = scf.if %508 -> (i64) {
      %c3_i64_198 = arith.constant 3 : i64
      %c512_i64 = arith.constant 512 : i64
      %521 = arith.muli %506, %506 : i64
      %522 = arith.divui %521, %c512_i64 : i64
      %523 = arith.muli %506, %c3_i64_198 : i64
      %524 = arith.addi %522, %523 : i64
      %c3_i64_199 = arith.constant 3 : i64
      %c512_i64_200 = arith.constant 512 : i64
      %525 = arith.muli %501, %501 : i64
      %526 = arith.divui %525, %c512_i64_200 : i64
      %527 = arith.muli %501, %c3_i64_199 : i64
      %528 = arith.addi %526, %527 : i64
      %529 = arith.subi %528, %524 : i64
      scf.yield %529 : i64
    } else {
      %c0_i64_198 = arith.constant 0 : i64
      scf.yield %c0_i64_198 : i64
    }
    %510 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %511 = llvm.load %510 : !llvm.ptr -> i64
    %512 = arith.cmpi ult, %511, %509 : i64
    scf.if %512 {
    } else {
      %521 = arith.subi %511, %509 : i64
      llvm.store %521, %510 : i64, !llvm.ptr
    }
    %c80_i8_196 = arith.constant 80 : i8
    cf.cond_br %512, ^bb1(%c80_i8_196 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %513 = call @dora_fn_extend_memory(%arg0, %502) : (!llvm.ptr, i64) -> !llvm.ptr
    %514 = llvm.getelementptr %513[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %515 = llvm.load %514 : !llvm.ptr -> !llvm.ptr
    %516 = llvm.getelementptr %513[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %517 = llvm.load %516 : !llvm.ptr -> i8
    %c0_i8_197 = arith.constant 0 : i8
    %518 = arith.cmpi ne, %517, %c0_i8_197 : i8
    cf.cond_br %518, ^bb1(%517 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    %519 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %515, %519 : !llvm.ptr, !llvm.ptr
    %520 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %502, %520 : i64, !llvm.ptr
    cf.br ^bb105
  }
}
