---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  func.func private @dora_fn_nop()
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64, !llvm.ptr, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_is_static(!llvm.ptr) -> i8
  func.func private @dora_fn_exp(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> i64
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gaslimit_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, !llvm.ptr, i64, i64)
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_call(!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_tload(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_tstore(!llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 78 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb13, ^bb14, ^bb17, ^bb18, ^bb21, ^bb22, ^bb26, ^bb27, ^bb30, ^bb31, ^bb34, ^bb35, ^bb39, ^bb40, ^bb43, ^bb44, ^bb47, ^bb48, ^bb51, ^bb52, ^bb54, ^bb55, ^bb57, ^bb58, ^bb59, ^bb61, ^bb62, ^bb65, ^bb66, ^bb69, ^bb70, ^bb73, ^bb74, ^bb77, ^bb78, ^bb81, ^bb82, ^bb85, ^bb86, ^bb88, ^bb89, ^bb90, ^bb91, ^bb94, ^bb95, ^bb97, ^bb98, ^bb101, ^bb102, ^bb105, ^bb106, ^bb109, ^bb110, ^bb112, ^bb113, ^bb116, ^bb117, ^bb119, ^bb120, ^bb123, ^bb124, ^bb126, ^bb127, ^bb128, ^bb129, ^bb132, ^bb133, ^bb135, ^bb138, ^bb139, ^bb141, ^bb144, ^bb145
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb14
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb13
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    %39 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %40 = llvm.load %39 : !llvm.ptr -> !llvm.ptr
    %41 = llvm.getelementptr %40[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %42 = llvm.load %41 : !llvm.ptr -> i256
    llvm.store %41, %39 : !llvm.ptr, !llvm.ptr
    %c32_i64 = arith.constant 32 : i64
    %c0_i64_7 = arith.constant 0 : i64
    %43 = arith.cmpi ne, %c32_i64, %c0_i64_7 : i64
    cf.cond_br %43, ^bb105, ^bb12
  ^bb12:  // 2 preds: ^bb11, ^bb108
    %44 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %45[%38] : (!llvm.ptr, i256) -> !llvm.ptr, i8
    %47 = llvm.intr.bswap(%42)  : (i256) -> i256
    llvm.store %47, %46 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb18
  ^bb13:  // pred: ^bb15
    %48 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_8 = arith.constant 1024 : i64
    %49 = llvm.load %48 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %50 = arith.addi %49, %c-2_i64 : i64
    %c2_i64 = arith.constant 2 : i64
    llvm.store %50, %48 : i64, !llvm.ptr
    %51 = arith.cmpi ult, %49, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %51, ^bb1(%c91_i8 : i8), ^bb11
  ^bb14:  // pred: ^bb7
    %52 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %53 = llvm.load %52 : !llvm.ptr -> i64
    %c3_i64_9 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %54 = arith.cmpi uge, %53, %c3_i64_9 : i64
    %c80_i8_10 = arith.constant 80 : i8
    cf.cond_br %54, ^bb15, ^bb1(%c80_i8_10 : i8)
  ^bb15:  // pred: ^bb14
    %55 = arith.subi %53, %c3_i64_9 : i64
    llvm.store %55, %52 : i64, !llvm.ptr
    cf.br ^bb13
  ^bb16:  // pred: ^bb17
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %56 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %57 = llvm.load %56 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %57 : i256, !llvm.ptr
    %58 = llvm.getelementptr %57[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %58, %56 : !llvm.ptr, !llvm.ptr
    cf.br ^bb22
  ^bb17:  // pred: ^bb19
    %59 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_11 = arith.constant 1024 : i64
    %60 = llvm.load %59 : !llvm.ptr -> i64
    %c1_i64_12 = arith.constant 1 : i64
    %61 = arith.addi %60, %c1_i64_12 : i64
    llvm.store %61, %59 : i64, !llvm.ptr
    %62 = arith.cmpi ult, %c1024_i64_11, %61 : i64
    %c92_i8_13 = arith.constant 92 : i8
    cf.cond_br %62, ^bb1(%c92_i8_13 : i8), ^bb16
  ^bb18:  // pred: ^bb12
    %63 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %64 = llvm.load %63 : !llvm.ptr -> i64
    %c3_i64_14 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %65 = arith.cmpi uge, %64, %c3_i64_14 : i64
    %c80_i8_15 = arith.constant 80 : i8
    cf.cond_br %65, ^bb19, ^bb1(%c80_i8_15 : i8)
  ^bb19:  // pred: ^bb18
    %66 = arith.subi %64, %c3_i64_14 : i64
    llvm.store %66, %63 : i64, !llvm.ptr
    cf.br ^bb17
  ^bb20:  // pred: ^bb21
    %c32_i256 = arith.constant 32 : i256
    %67 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %68 = llvm.load %67 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %68 : i256, !llvm.ptr
    %69 = llvm.getelementptr %68[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %69, %67 : !llvm.ptr, !llvm.ptr
    cf.br ^bb27
  ^bb21:  // pred: ^bb23
    %70 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_16 = arith.constant 1024 : i64
    %71 = llvm.load %70 : !llvm.ptr -> i64
    %c1_i64_17 = arith.constant 1 : i64
    %72 = arith.addi %71, %c1_i64_17 : i64
    llvm.store %72, %70 : i64, !llvm.ptr
    %73 = arith.cmpi ult, %c1024_i64_16, %72 : i64
    %c92_i8_18 = arith.constant 92 : i8
    cf.cond_br %73, ^bb1(%c92_i8_18 : i8), ^bb20
  ^bb22:  // pred: ^bb16
    %74 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> i64
    %c3_i64_19 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %76 = arith.cmpi uge, %75, %c3_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %76, ^bb23, ^bb1(%c80_i8_20 : i8)
  ^bb23:  // pred: ^bb22
    %77 = arith.subi %75, %c3_i64_19 : i64
    llvm.store %77, %74 : i64, !llvm.ptr
    cf.br ^bb21
  ^bb24:  // pred: ^bb26
    %78 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %79 = llvm.load %78 : !llvm.ptr -> !llvm.ptr
    %80 = llvm.getelementptr %79[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %81 = llvm.load %80 : !llvm.ptr -> i256
    llvm.store %80, %78 : !llvm.ptr, !llvm.ptr
    %82 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %83 = llvm.load %82 : !llvm.ptr -> !llvm.ptr
    %84 = llvm.getelementptr %83[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %85 = llvm.load %84 : !llvm.ptr -> i256
    llvm.store %84, %82 : !llvm.ptr, !llvm.ptr
    %c32_i64_21 = arith.constant 32 : i64
    %c0_i64_22 = arith.constant 0 : i64
    %86 = arith.cmpi ne, %c32_i64_21, %c0_i64_22 : i64
    cf.cond_br %86, ^bb112, ^bb25
  ^bb25:  // 2 preds: ^bb24, ^bb115
    %87 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %88 = llvm.load %87 : !llvm.ptr -> !llvm.ptr
    %89 = llvm.getelementptr %88[%81] : (!llvm.ptr, i256) -> !llvm.ptr, i8
    %90 = llvm.intr.bswap(%85)  : (i256) -> i256
    llvm.store %90, %89 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb31
  ^bb26:  // pred: ^bb28
    %91 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_23 = arith.constant 1024 : i64
    %92 = llvm.load %91 : !llvm.ptr -> i64
    %c-2_i64_24 = arith.constant -2 : i64
    %93 = arith.addi %92, %c-2_i64_24 : i64
    %c2_i64_25 = arith.constant 2 : i64
    llvm.store %93, %91 : i64, !llvm.ptr
    %94 = arith.cmpi ult, %92, %c2_i64_25 : i64
    %c91_i8_26 = arith.constant 91 : i8
    cf.cond_br %94, ^bb1(%c91_i8_26 : i8), ^bb24
  ^bb27:  // pred: ^bb20
    %95 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %96 = llvm.load %95 : !llvm.ptr -> i64
    %c3_i64_27 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %97 = arith.cmpi uge, %96, %c3_i64_27 : i64
    %c80_i8_28 = arith.constant 80 : i8
    cf.cond_br %97, ^bb28, ^bb1(%c80_i8_28 : i8)
  ^bb28:  // pred: ^bb27
    %98 = arith.subi %96, %c3_i64_27 : i64
    llvm.store %98, %95 : i64, !llvm.ptr
    cf.br ^bb26
  ^bb29:  // pred: ^bb30
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %99 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %100 = llvm.load %99 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %100 : i256, !llvm.ptr
    %101 = llvm.getelementptr %100[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %101, %99 : !llvm.ptr, !llvm.ptr
    cf.br ^bb35
  ^bb30:  // pred: ^bb32
    %102 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_29 = arith.constant 1024 : i64
    %103 = llvm.load %102 : !llvm.ptr -> i64
    %c1_i64_30 = arith.constant 1 : i64
    %104 = arith.addi %103, %c1_i64_30 : i64
    llvm.store %104, %102 : i64, !llvm.ptr
    %105 = arith.cmpi ult, %c1024_i64_29, %104 : i64
    %c92_i8_31 = arith.constant 92 : i8
    cf.cond_br %105, ^bb1(%c92_i8_31 : i8), ^bb29
  ^bb31:  // pred: ^bb25
    %106 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> i64
    %c3_i64_32 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %108 = arith.cmpi uge, %107, %c3_i64_32 : i64
    %c80_i8_33 = arith.constant 80 : i8
    cf.cond_br %108, ^bb32, ^bb1(%c80_i8_33 : i8)
  ^bb32:  // pred: ^bb31
    %109 = arith.subi %107, %c3_i64_32 : i64
    llvm.store %109, %106 : i64, !llvm.ptr
    cf.br ^bb30
  ^bb33:  // pred: ^bb34
    %c64_i256 = arith.constant 64 : i256
    %110 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %111 = llvm.load %110 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %111 : i256, !llvm.ptr
    %112 = llvm.getelementptr %111[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %112, %110 : !llvm.ptr, !llvm.ptr
    cf.br ^bb40
  ^bb34:  // pred: ^bb36
    %113 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_34 = arith.constant 1024 : i64
    %114 = llvm.load %113 : !llvm.ptr -> i64
    %c1_i64_35 = arith.constant 1 : i64
    %115 = arith.addi %114, %c1_i64_35 : i64
    llvm.store %115, %113 : i64, !llvm.ptr
    %116 = arith.cmpi ult, %c1024_i64_34, %115 : i64
    %c92_i8_36 = arith.constant 92 : i8
    cf.cond_br %116, ^bb1(%c92_i8_36 : i8), ^bb33
  ^bb35:  // pred: ^bb29
    %117 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %118 = llvm.load %117 : !llvm.ptr -> i64
    %c3_i64_37 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %119 = arith.cmpi uge, %118, %c3_i64_37 : i64
    %c80_i8_38 = arith.constant 80 : i8
    cf.cond_br %119, ^bb36, ^bb1(%c80_i8_38 : i8)
  ^bb36:  // pred: ^bb35
    %120 = arith.subi %118, %c3_i64_37 : i64
    llvm.store %120, %117 : i64, !llvm.ptr
    cf.br ^bb34
  ^bb37:  // pred: ^bb39
    %121 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %122 = llvm.load %121 : !llvm.ptr -> !llvm.ptr
    %123 = llvm.getelementptr %122[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %124 = llvm.load %123 : !llvm.ptr -> i256
    llvm.store %123, %121 : !llvm.ptr, !llvm.ptr
    %125 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %126 = llvm.load %125 : !llvm.ptr -> !llvm.ptr
    %127 = llvm.getelementptr %126[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %128 = llvm.load %127 : !llvm.ptr -> i256
    llvm.store %127, %125 : !llvm.ptr, !llvm.ptr
    %c32_i64_39 = arith.constant 32 : i64
    %c0_i64_40 = arith.constant 0 : i64
    %129 = arith.cmpi ne, %c32_i64_39, %c0_i64_40 : i64
    cf.cond_br %129, ^bb119, ^bb38
  ^bb38:  // 2 preds: ^bb37, ^bb122
    %130 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %131 = llvm.load %130 : !llvm.ptr -> !llvm.ptr
    %132 = llvm.getelementptr %131[%124] : (!llvm.ptr, i256) -> !llvm.ptr, i8
    %133 = llvm.intr.bswap(%128)  : (i256) -> i256
    llvm.store %133, %132 {alignment = 1 : i64} : i256, !llvm.ptr
    cf.br ^bb44
  ^bb39:  // pred: ^bb41
    %134 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_41 = arith.constant 1024 : i64
    %135 = llvm.load %134 : !llvm.ptr -> i64
    %c-2_i64_42 = arith.constant -2 : i64
    %136 = arith.addi %135, %c-2_i64_42 : i64
    %c2_i64_43 = arith.constant 2 : i64
    llvm.store %136, %134 : i64, !llvm.ptr
    %137 = arith.cmpi ult, %135, %c2_i64_43 : i64
    %c91_i8_44 = arith.constant 91 : i8
    cf.cond_br %137, ^bb1(%c91_i8_44 : i8), ^bb37
  ^bb40:  // pred: ^bb33
    %138 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %139 = llvm.load %138 : !llvm.ptr -> i64
    %c3_i64_45 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %140 = arith.cmpi uge, %139, %c3_i64_45 : i64
    %c80_i8_46 = arith.constant 80 : i8
    cf.cond_br %140, ^bb41, ^bb1(%c80_i8_46 : i8)
  ^bb41:  // pred: ^bb40
    %141 = arith.subi %139, %c3_i64_45 : i64
    llvm.store %141, %138 : i64, !llvm.ptr
    cf.br ^bb39
  ^bb42:  // pred: ^bb43
    %c77_i256 = arith.constant 77 : i256
    %142 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %143 : i256, !llvm.ptr
    %144 = llvm.getelementptr %143[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %144, %142 : !llvm.ptr, !llvm.ptr
    cf.br ^bb48
  ^bb43:  // pred: ^bb45
    %145 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_47 = arith.constant 1024 : i64
    %146 = llvm.load %145 : !llvm.ptr -> i64
    %c1_i64_48 = arith.constant 1 : i64
    %147 = arith.addi %146, %c1_i64_48 : i64
    llvm.store %147, %145 : i64, !llvm.ptr
    %148 = arith.cmpi ult, %c1024_i64_47, %147 : i64
    %c92_i8_49 = arith.constant 92 : i8
    cf.cond_br %148, ^bb1(%c92_i8_49 : i8), ^bb42
  ^bb44:  // pred: ^bb38
    %149 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %150 = llvm.load %149 : !llvm.ptr -> i64
    %c3_i64_50 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %151 = arith.cmpi uge, %150, %c3_i64_50 : i64
    %c80_i8_51 = arith.constant 80 : i8
    cf.cond_br %151, ^bb45, ^bb1(%c80_i8_51 : i8)
  ^bb45:  // pred: ^bb44
    %152 = arith.subi %150, %c3_i64_50 : i64
    llvm.store %152, %149 : i64, !llvm.ptr
    cf.br ^bb43
  ^bb46:  // pred: ^bb47
    %c0_i256_52 = arith.constant 0 : i256
    %153 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %154 = llvm.load %153 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_52, %154 : i256, !llvm.ptr
    %155 = llvm.getelementptr %154[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %155, %153 : !llvm.ptr, !llvm.ptr
    cf.br ^bb52
  ^bb47:  // pred: ^bb49
    %156 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_53 = arith.constant 1024 : i64
    %157 = llvm.load %156 : !llvm.ptr -> i64
    %c1_i64_54 = arith.constant 1 : i64
    %158 = arith.addi %157, %c1_i64_54 : i64
    llvm.store %158, %156 : i64, !llvm.ptr
    %159 = arith.cmpi ult, %c1024_i64_53, %158 : i64
    %c92_i8_55 = arith.constant 92 : i8
    cf.cond_br %159, ^bb1(%c92_i8_55 : i8), ^bb46
  ^bb48:  // pred: ^bb42
    %160 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> i64
    %c3_i64_56 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %162 = arith.cmpi uge, %161, %c3_i64_56 : i64
    %c80_i8_57 = arith.constant 80 : i8
    cf.cond_br %162, ^bb49, ^bb1(%c80_i8_57 : i8)
  ^bb49:  // pred: ^bb48
    %163 = arith.subi %161, %c3_i64_56 : i64
    llvm.store %163, %160 : i64, !llvm.ptr
    cf.br ^bb47
  ^bb50:  // pred: ^bb51
    %c0_i256_58 = arith.constant 0 : i256
    %164 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %165 = llvm.load %164 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_58, %165 : i256, !llvm.ptr
    %166 = llvm.getelementptr %165[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %166, %164 : !llvm.ptr, !llvm.ptr
    cf.br ^bb62
  ^bb51:  // pred: ^bb53
    %167 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_59 = arith.constant 1024 : i64
    %168 = llvm.load %167 : !llvm.ptr -> i64
    %c1_i64_60 = arith.constant 1 : i64
    %169 = arith.addi %168, %c1_i64_60 : i64
    llvm.store %169, %167 : i64, !llvm.ptr
    %170 = arith.cmpi ult, %c1024_i64_59, %169 : i64
    %c92_i8_61 = arith.constant 92 : i8
    cf.cond_br %170, ^bb1(%c92_i8_61 : i8), ^bb50
  ^bb52:  // pred: ^bb46
    %171 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %172 = llvm.load %171 : !llvm.ptr -> i64
    %c3_i64_62 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %173 = arith.cmpi uge, %172, %c3_i64_62 : i64
    %c80_i8_63 = arith.constant 80 : i8
    cf.cond_br %173, ^bb53, ^bb1(%c80_i8_63 : i8)
  ^bb53:  // pred: ^bb52
    %174 = arith.subi %172, %c3_i64_62 : i64
    llvm.store %174, %171 : i64, !llvm.ptr
    cf.br ^bb51
  ^bb54:  // pred: ^bb61
    %175 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %176 = llvm.load %175 : !llvm.ptr -> !llvm.ptr
    %177 = llvm.getelementptr %176[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %178 = llvm.load %177 : !llvm.ptr -> i256
    llvm.store %177, %175 : !llvm.ptr, !llvm.ptr
    %179 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %180 = llvm.load %179 : !llvm.ptr -> !llvm.ptr
    %181 = llvm.getelementptr %180[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %182 = llvm.load %181 : !llvm.ptr -> i256
    llvm.store %181, %179 : !llvm.ptr, !llvm.ptr
    %183 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %184 = llvm.load %183 : !llvm.ptr -> !llvm.ptr
    %185 = llvm.getelementptr %184[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %186 = llvm.load %185 : !llvm.ptr -> i256
    llvm.store %185, %183 : !llvm.ptr, !llvm.ptr
    %187 = call @dora_fn_is_static(%arg0) : (!llvm.ptr) -> i8
    %c0_i8 = arith.constant 0 : i8
    %188 = arith.cmpi ne, %187, %c0_i8 : i8
    %c87_i8 = arith.constant 87 : i8
    cf.cond_br %188, ^bb1(%c87_i8 : i8), ^bb55
  ^bb55:  // pred: ^bb54
    %189 = arith.trunci %186 : i256 to i64
    %c0_i64_64 = arith.constant 0 : i64
    %190 = arith.cmpi slt, %189, %c0_i64_64 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %190, ^bb1(%c84_i8 : i8), ^bb56
  ^bb56:  // pred: ^bb55
    %c0_i64_65 = arith.constant 0 : i64
    %191 = arith.cmpi ne, %189, %c0_i64_65 : i64
    cf.cond_br %191, ^bb126, ^bb57
  ^bb57:  // 2 preds: ^bb56, ^bb131
    %c32000_i64 = arith.constant 32000 : i64
    %192 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %193 = llvm.load %192 : !llvm.ptr -> i64
    %194 = arith.cmpi ult, %193, %c32000_i64 : i64
    scf.if %194 {
    } else {
      %570 = arith.subi %193, %c32000_i64 : i64
      llvm.store %570, %192 : i64, !llvm.ptr
    }
    %c80_i8_66 = arith.constant 80 : i8
    cf.cond_br %194, ^bb1(%c80_i8_66 : i8), ^bb58
  ^bb58:  // pred: ^bb57
    %c1_i256 = arith.constant 1 : i256
    %195 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %178, %195 {alignment = 1 : i64} : i256, !llvm.ptr
    %196 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %197 = llvm.load %196 : !llvm.ptr -> i64
    %198 = arith.trunci %182 : i256 to i64
    %199 = call @dora_fn_create(%arg0, %189, %198, %195, %197) : (!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
    %200 = llvm.getelementptr %199[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %201 = llvm.load %200 : !llvm.ptr -> i8
    %c0_i8_67 = arith.constant 0 : i8
    %202 = arith.cmpi ne, %201, %c0_i8_67 : i8
    cf.cond_br %202, ^bb1(%201 : i8), ^bb59
  ^bb59:  // pred: ^bb58
    %203 = llvm.getelementptr %199[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %204 = llvm.load %203 : !llvm.ptr -> i64
    %205 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %206 = llvm.load %205 : !llvm.ptr -> i64
    %207 = arith.cmpi ult, %206, %204 : i64
    scf.if %207 {
    } else {
      %570 = arith.subi %206, %204 : i64
      llvm.store %570, %205 : i64, !llvm.ptr
    }
    %c80_i8_68 = arith.constant 80 : i8
    cf.cond_br %207, ^bb1(%c80_i8_68 : i8), ^bb60
  ^bb60:  // pred: ^bb59
    %208 = llvm.load %195 : !llvm.ptr -> i256
    %209 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %210 = llvm.load %209 : !llvm.ptr -> !llvm.ptr
    llvm.store %208, %210 : i256, !llvm.ptr
    %211 = llvm.getelementptr %210[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %211, %209 : !llvm.ptr, !llvm.ptr
    cf.br ^bb66
  ^bb61:  // pred: ^bb63
    %212 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_69 = arith.constant 1024 : i64
    %213 = llvm.load %212 : !llvm.ptr -> i64
    %c-2_i64_70 = arith.constant -2 : i64
    %214 = arith.addi %213, %c-2_i64_70 : i64
    %c3_i64_71 = arith.constant 3 : i64
    llvm.store %214, %212 : i64, !llvm.ptr
    %215 = arith.cmpi ult, %213, %c3_i64_71 : i64
    %c91_i8_72 = arith.constant 91 : i8
    cf.cond_br %215, ^bb1(%c91_i8_72 : i8), ^bb54
  ^bb62:  // pred: ^bb50
    %216 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %217 = llvm.load %216 : !llvm.ptr -> i64
    %c0_i64_73 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %218 = arith.cmpi uge, %217, %c0_i64_73 : i64
    %c80_i8_74 = arith.constant 80 : i8
    cf.cond_br %218, ^bb63, ^bb1(%c80_i8_74 : i8)
  ^bb63:  // pred: ^bb62
    %219 = arith.subi %217, %c0_i64_73 : i64
    llvm.store %219, %216 : i64, !llvm.ptr
    cf.br ^bb61
  ^bb64:  // pred: ^bb65
    %c0_i256_75 = arith.constant 0 : i256
    %220 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %221 = llvm.load %220 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_75, %221 : i256, !llvm.ptr
    %222 = llvm.getelementptr %221[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %222, %220 : !llvm.ptr, !llvm.ptr
    cf.br ^bb70
  ^bb65:  // pred: ^bb67
    %223 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_76 = arith.constant 1024 : i64
    %224 = llvm.load %223 : !llvm.ptr -> i64
    %c1_i64_77 = arith.constant 1 : i64
    %225 = arith.addi %224, %c1_i64_77 : i64
    llvm.store %225, %223 : i64, !llvm.ptr
    %226 = arith.cmpi ult, %c1024_i64_76, %225 : i64
    %c92_i8_78 = arith.constant 92 : i8
    cf.cond_br %226, ^bb1(%c92_i8_78 : i8), ^bb64
  ^bb66:  // pred: ^bb60
    %227 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %228 = llvm.load %227 : !llvm.ptr -> i64
    %c3_i64_79 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %229 = arith.cmpi uge, %228, %c3_i64_79 : i64
    %c80_i8_80 = arith.constant 80 : i8
    cf.cond_br %229, ^bb67, ^bb1(%c80_i8_80 : i8)
  ^bb67:  // pred: ^bb66
    %230 = arith.subi %228, %c3_i64_79 : i64
    llvm.store %230, %227 : i64, !llvm.ptr
    cf.br ^bb65
  ^bb68:  // pred: ^bb69
    %c0_i256_81 = arith.constant 0 : i256
    %231 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %232 = llvm.load %231 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_81, %232 : i256, !llvm.ptr
    %233 = llvm.getelementptr %232[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %233, %231 : !llvm.ptr, !llvm.ptr
    cf.br ^bb74
  ^bb69:  // pred: ^bb71
    %234 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_82 = arith.constant 1024 : i64
    %235 = llvm.load %234 : !llvm.ptr -> i64
    %c1_i64_83 = arith.constant 1 : i64
    %236 = arith.addi %235, %c1_i64_83 : i64
    llvm.store %236, %234 : i64, !llvm.ptr
    %237 = arith.cmpi ult, %c1024_i64_82, %236 : i64
    %c92_i8_84 = arith.constant 92 : i8
    cf.cond_br %237, ^bb1(%c92_i8_84 : i8), ^bb68
  ^bb70:  // pred: ^bb64
    %238 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %239 = llvm.load %238 : !llvm.ptr -> i64
    %c3_i64_85 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %240 = arith.cmpi uge, %239, %c3_i64_85 : i64
    %c80_i8_86 = arith.constant 80 : i8
    cf.cond_br %240, ^bb71, ^bb1(%c80_i8_86 : i8)
  ^bb71:  // pred: ^bb70
    %241 = arith.subi %239, %c3_i64_85 : i64
    llvm.store %241, %238 : i64, !llvm.ptr
    cf.br ^bb69
  ^bb72:  // pred: ^bb73
    %c0_i256_87 = arith.constant 0 : i256
    %242 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %243 = llvm.load %242 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_87, %243 : i256, !llvm.ptr
    %244 = llvm.getelementptr %243[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %244, %242 : !llvm.ptr, !llvm.ptr
    cf.br ^bb78
  ^bb73:  // pred: ^bb75
    %245 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_88 = arith.constant 1024 : i64
    %246 = llvm.load %245 : !llvm.ptr -> i64
    %c1_i64_89 = arith.constant 1 : i64
    %247 = arith.addi %246, %c1_i64_89 : i64
    llvm.store %247, %245 : i64, !llvm.ptr
    %248 = arith.cmpi ult, %c1024_i64_88, %247 : i64
    %c92_i8_90 = arith.constant 92 : i8
    cf.cond_br %248, ^bb1(%c92_i8_90 : i8), ^bb72
  ^bb74:  // pred: ^bb68
    %249 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %250 = llvm.load %249 : !llvm.ptr -> i64
    %c3_i64_91 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %251 = arith.cmpi uge, %250, %c3_i64_91 : i64
    %c80_i8_92 = arith.constant 80 : i8
    cf.cond_br %251, ^bb75, ^bb1(%c80_i8_92 : i8)
  ^bb75:  // pred: ^bb74
    %252 = arith.subi %250, %c3_i64_91 : i64
    llvm.store %252, %249 : i64, !llvm.ptr
    cf.br ^bb73
  ^bb76:  // pred: ^bb77
    %c0_i256_93 = arith.constant 0 : i256
    %253 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %254 = llvm.load %253 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_93, %254 : i256, !llvm.ptr
    %255 = llvm.getelementptr %254[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %255, %253 : !llvm.ptr, !llvm.ptr
    cf.br ^bb82
  ^bb77:  // pred: ^bb79
    %256 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_94 = arith.constant 1024 : i64
    %257 = llvm.load %256 : !llvm.ptr -> i64
    %c1_i64_95 = arith.constant 1 : i64
    %258 = arith.addi %257, %c1_i64_95 : i64
    llvm.store %258, %256 : i64, !llvm.ptr
    %259 = arith.cmpi ult, %c1024_i64_94, %258 : i64
    %c92_i8_96 = arith.constant 92 : i8
    cf.cond_br %259, ^bb1(%c92_i8_96 : i8), ^bb76
  ^bb78:  // pred: ^bb72
    %260 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %261 = llvm.load %260 : !llvm.ptr -> i64
    %c3_i64_97 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %262 = arith.cmpi uge, %261, %c3_i64_97 : i64
    %c80_i8_98 = arith.constant 80 : i8
    cf.cond_br %262, ^bb79, ^bb1(%c80_i8_98 : i8)
  ^bb79:  // pred: ^bb78
    %263 = arith.subi %261, %c3_i64_97 : i64
    llvm.store %263, %260 : i64, !llvm.ptr
    cf.br ^bb77
  ^bb80:  // pred: ^bb81
    %264 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %265 = llvm.load %264 : !llvm.ptr -> !llvm.ptr
    %266 = llvm.getelementptr %265[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %267 = llvm.load %266 : !llvm.ptr -> i256
    %268 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %269 = llvm.load %268 : !llvm.ptr -> !llvm.ptr
    llvm.store %267, %269 : i256, !llvm.ptr
    %270 = llvm.getelementptr %269[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %270, %268 : !llvm.ptr, !llvm.ptr
    cf.br ^bb86
  ^bb81:  // pred: ^bb83
    %271 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_99 = arith.constant 1024 : i64
    %272 = llvm.load %271 : !llvm.ptr -> i64
    %c1_i64_100 = arith.constant 1 : i64
    %273 = arith.addi %272, %c1_i64_100 : i64
    %c5_i64 = arith.constant 5 : i64
    %274 = arith.cmpi ult, %272, %c5_i64 : i64
    %275 = arith.cmpi ult, %c1024_i64_99, %273 : i64
    llvm.store %273, %271 : i64, !llvm.ptr
    %276 = arith.xori %274, %275 : i1
    %c92_i8_101 = arith.constant 92 : i8
    cf.cond_br %276, ^bb1(%c92_i8_101 : i8), ^bb80
  ^bb82:  // pred: ^bb76
    %277 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %278 = llvm.load %277 : !llvm.ptr -> i64
    %c3_i64_102 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %279 = arith.cmpi uge, %278, %c3_i64_102 : i64
    %c80_i8_103 = arith.constant 80 : i8
    cf.cond_br %279, ^bb83, ^bb1(%c80_i8_103 : i8)
  ^bb83:  // pred: ^bb82
    %280 = arith.subi %278, %c3_i64_102 : i64
    llvm.store %280, %277 : i64, !llvm.ptr
    cf.br ^bb81
  ^bb84:  // pred: ^bb85
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %281 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %282 = llvm.load %281 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %282 : i256, !llvm.ptr
    %283 = llvm.getelementptr %282[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %283, %281 : !llvm.ptr, !llvm.ptr
    cf.br ^bb98
  ^bb85:  // pred: ^bb87
    %284 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_104 = arith.constant 1024 : i64
    %285 = llvm.load %284 : !llvm.ptr -> i64
    %c1_i64_105 = arith.constant 1 : i64
    %286 = arith.addi %285, %c1_i64_105 : i64
    llvm.store %286, %284 : i64, !llvm.ptr
    %287 = arith.cmpi ult, %c1024_i64_104, %286 : i64
    %c92_i8_106 = arith.constant 92 : i8
    cf.cond_br %287, ^bb1(%c92_i8_106 : i8), ^bb84
  ^bb86:  // pred: ^bb80
    %288 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %289 = llvm.load %288 : !llvm.ptr -> i64
    %c3_i64_107 = arith.constant 3 : i64
    call @dora_fn_nop() : () -> ()
    %290 = arith.cmpi uge, %289, %c3_i64_107 : i64
    %c80_i8_108 = arith.constant 80 : i8
    cf.cond_br %290, ^bb87, ^bb1(%c80_i8_108 : i8)
  ^bb87:  // pred: ^bb86
    %291 = arith.subi %289, %c3_i64_107 : i64
    llvm.store %291, %288 : i64, !llvm.ptr
    cf.br ^bb85
  ^bb88:  // pred: ^bb97
    %292 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %293 = llvm.load %292 : !llvm.ptr -> !llvm.ptr
    %294 = llvm.getelementptr %293[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %295 = llvm.load %294 : !llvm.ptr -> i256
    llvm.store %294, %292 : !llvm.ptr, !llvm.ptr
    %296 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %297 = llvm.load %296 : !llvm.ptr -> !llvm.ptr
    %298 = llvm.getelementptr %297[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %299 = llvm.load %298 : !llvm.ptr -> i256
    llvm.store %298, %296 : !llvm.ptr, !llvm.ptr
    %300 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %301 = llvm.load %300 : !llvm.ptr -> !llvm.ptr
    %302 = llvm.getelementptr %301[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %303 = llvm.load %302 : !llvm.ptr -> i256
    llvm.store %302, %300 : !llvm.ptr, !llvm.ptr
    %304 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %305 = llvm.load %304 : !llvm.ptr -> !llvm.ptr
    %306 = llvm.getelementptr %305[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %307 = llvm.load %306 : !llvm.ptr -> i256
    llvm.store %306, %304 : !llvm.ptr, !llvm.ptr
    %308 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %309 = llvm.load %308 : !llvm.ptr -> !llvm.ptr
    %310 = llvm.getelementptr %309[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %311 = llvm.load %310 : !llvm.ptr -> i256
    llvm.store %310, %308 : !llvm.ptr, !llvm.ptr
    %312 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %313 = llvm.load %312 : !llvm.ptr -> !llvm.ptr
    %314 = llvm.getelementptr %313[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %315 = llvm.load %314 : !llvm.ptr -> i256
    llvm.store %314, %312 : !llvm.ptr, !llvm.ptr
    %c0_i256_109 = arith.constant 0 : i256
    %316 = arith.trunci %303 : i256 to i64
    %c0_i64_110 = arith.constant 0 : i64
    %317 = arith.cmpi slt, %316, %c0_i64_110 : i64
    %c84_i8_111 = arith.constant 84 : i8
    cf.cond_br %317, ^bb1(%c84_i8_111 : i8), ^bb89
  ^bb89:  // pred: ^bb88
    %318 = arith.trunci %307 : i256 to i64
    %c0_i64_112 = arith.constant 0 : i64
    %319 = arith.cmpi slt, %318, %c0_i64_112 : i64
    %c84_i8_113 = arith.constant 84 : i8
    cf.cond_br %319, ^bb1(%c84_i8_113 : i8), ^bb90
  ^bb90:  // pred: ^bb89
    %320 = arith.trunci %311 : i256 to i64
    %c0_i64_114 = arith.constant 0 : i64
    %321 = arith.cmpi slt, %320, %c0_i64_114 : i64
    %c84_i8_115 = arith.constant 84 : i8
    cf.cond_br %321, ^bb1(%c84_i8_115 : i8), ^bb91
  ^bb91:  // pred: ^bb90
    %322 = arith.trunci %315 : i256 to i64
    %c0_i64_116 = arith.constant 0 : i64
    %323 = arith.cmpi slt, %322, %c0_i64_116 : i64
    %c84_i8_117 = arith.constant 84 : i8
    cf.cond_br %323, ^bb1(%c84_i8_117 : i8), ^bb92
  ^bb92:  // pred: ^bb91
    %c0_i64_118 = arith.constant 0 : i64
    %324 = arith.cmpi ne, %318, %c0_i64_118 : i64
    cf.cond_br %324, ^bb135, ^bb93
  ^bb93:  // 2 preds: ^bb92, ^bb137
    %c0_i64_119 = arith.constant 0 : i64
    %325 = arith.cmpi ne, %322, %c0_i64_119 : i64
    cf.cond_br %325, ^bb141, ^bb94
  ^bb94:  // 2 preds: ^bb93, ^bb143
    %326 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %327 = llvm.load %326 : !llvm.ptr -> i64
    %c1_i256_120 = arith.constant 1 : i256
    %328 = llvm.alloca %c1_i256_120 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_109, %328 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_121 = arith.constant 1 : i256
    %329 = llvm.alloca %c1_i256_121 x i256 : (i256) -> !llvm.ptr
    llvm.store %295, %329 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_122 = arith.constant 1 : i256
    %330 = llvm.alloca %c1_i256_122 x i256 : (i256) -> !llvm.ptr
    llvm.store %299, %330 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i8 = arith.constant 1 : i8
    %331 = call @dora_fn_call(%arg0, %329, %330, %328, %316, %318, %320, %322, %327, %c1_i8) : (!llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
    %332 = llvm.getelementptr %331[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %333 = llvm.load %332 : !llvm.ptr -> i8
    %334 = llvm.getelementptr %331[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %335 = llvm.load %334 : !llvm.ptr -> i8
    %c0_i8_123 = arith.constant 0 : i8
    %336 = arith.cmpi ne, %335, %c0_i8_123 : i8
    cf.cond_br %336, ^bb1(%335 : i8), ^bb95
  ^bb95:  // pred: ^bb94
    %337 = llvm.getelementptr %331[8] : (!llvm.ptr) -> !llvm.ptr, i8
    %338 = llvm.load %337 : !llvm.ptr -> i64
    %339 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %340 = llvm.load %339 : !llvm.ptr -> i64
    %341 = arith.cmpi ult, %340, %338 : i64
    scf.if %341 {
    } else {
      %570 = arith.subi %340, %338 : i64
      llvm.store %570, %339 : i64, !llvm.ptr
    }
    %c80_i8_124 = arith.constant 80 : i8
    cf.cond_br %341, ^bb1(%c80_i8_124 : i8), ^bb96
  ^bb96:  // pred: ^bb95
    %342 = arith.extui %333 : i8 to i256
    %343 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %344 = llvm.load %343 : !llvm.ptr -> !llvm.ptr
    llvm.store %342, %344 : i256, !llvm.ptr
    %345 = llvm.getelementptr %344[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %345, %343 : !llvm.ptr, !llvm.ptr
    cf.br ^bb102
  ^bb97:  // pred: ^bb99
    %346 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_125 = arith.constant 1024 : i64
    %347 = llvm.load %346 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %348 = arith.addi %347, %c-5_i64 : i64
    %c6_i64 = arith.constant 6 : i64
    llvm.store %348, %346 : i64, !llvm.ptr
    %349 = arith.cmpi ult, %347, %c6_i64 : i64
    %c91_i8_126 = arith.constant 91 : i8
    cf.cond_br %349, ^bb1(%c91_i8_126 : i8), ^bb88
  ^bb98:  // pred: ^bb84
    %350 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %351 = llvm.load %350 : !llvm.ptr -> i64
    %c0_i64_127 = arith.constant 0 : i64
    call @dora_fn_nop() : () -> ()
    %352 = arith.cmpi uge, %351, %c0_i64_127 : i64
    %c80_i8_128 = arith.constant 80 : i8
    cf.cond_br %352, ^bb99, ^bb1(%c80_i8_128 : i8)
  ^bb99:  // pred: ^bb98
    %353 = arith.subi %351, %c0_i64_127 : i64
    llvm.store %353, %350 : i64, !llvm.ptr
    cf.br ^bb97
  ^bb100:  // pred: ^bb101
    %354 = call @dora_fn_returndata_size(%arg0) : (!llvm.ptr) -> i64
    %355 = arith.extui %354 : i64 to i256
    %356 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %357 = llvm.load %356 : !llvm.ptr -> !llvm.ptr
    llvm.store %355, %357 : i256, !llvm.ptr
    %358 = llvm.getelementptr %357[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %358, %356 : !llvm.ptr, !llvm.ptr
    cf.br ^bb104
  ^bb101:  // pred: ^bb103
    %359 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_129 = arith.constant 1024 : i64
    %360 = llvm.load %359 : !llvm.ptr -> i64
    %c1_i64_130 = arith.constant 1 : i64
    %361 = arith.addi %360, %c1_i64_130 : i64
    llvm.store %361, %359 : i64, !llvm.ptr
    %362 = arith.cmpi ult, %c1024_i64_129, %361 : i64
    %c92_i8_131 = arith.constant 92 : i8
    cf.cond_br %362, ^bb1(%c92_i8_131 : i8), ^bb100
  ^bb102:  // pred: ^bb96
    %363 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %364 = llvm.load %363 : !llvm.ptr -> i64
    %c2_i64_132 = arith.constant 2 : i64
    call @dora_fn_nop() : () -> ()
    %365 = arith.cmpi uge, %364, %c2_i64_132 : i64
    %c80_i8_133 = arith.constant 80 : i8
    cf.cond_br %365, ^bb103, ^bb1(%c80_i8_133 : i8)
  ^bb103:  // pred: ^bb102
    %366 = arith.subi %364, %c2_i64_132 : i64
    llvm.store %366, %363 : i64, !llvm.ptr
    cf.br ^bb101
  ^bb104:  // pred: ^bb100
    %c0_i64_134 = arith.constant 0 : i64
    %c1_i8_135 = arith.constant 1 : i8
    %367 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %368 = llvm.load %367 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_134, %c0_i64_134, %368, %c1_i8_135) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8_135 : i8
  ^bb105:  // pred: ^bb11
    %369 = arith.trunci %38 : i256 to i64
    %c0_i64_136 = arith.constant 0 : i64
    %370 = arith.cmpi slt, %369, %c0_i64_136 : i64
    %c84_i8_137 = arith.constant 84 : i8
    cf.cond_br %370, ^bb1(%c84_i8_137 : i8), ^bb106
  ^bb106:  // pred: ^bb105
    %371 = arith.addi %369, %c32_i64 : i64
    %c0_i64_138 = arith.constant 0 : i64
    %372 = arith.cmpi slt, %371, %c0_i64_138 : i64
    %c84_i8_139 = arith.constant 84 : i8
    cf.cond_br %372, ^bb1(%c84_i8_139 : i8), ^bb107
  ^bb107:  // pred: ^bb106
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_140 = arith.constant 32 : i64
    %373 = arith.addi %371, %c31_i64 : i64
    %374 = arith.divui %373, %c32_i64_140 : i64
    %c32_i64_141 = arith.constant 32 : i64
    %375 = arith.muli %374, %c32_i64_141 : i64
    %376 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %377 = llvm.load %376 : !llvm.ptr -> i64
    %c31_i64_142 = arith.constant 31 : i64
    %c32_i64_143 = arith.constant 32 : i64
    %378 = arith.addi %377, %c31_i64_142 : i64
    %379 = arith.divui %378, %c32_i64_143 : i64
    %380 = arith.muli %379, %c32_i64_141 : i64
    %381 = arith.cmpi ult, %380, %375 : i64
    cf.cond_br %381, ^bb109, ^bb108
  ^bb108:  // 2 preds: ^bb107, ^bb111
    cf.br ^bb12
  ^bb109:  // pred: ^bb107
    %c3_i64_144 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %382 = arith.muli %379, %379 : i64
    %383 = arith.divui %382, %c512_i64 : i64
    %384 = arith.muli %379, %c3_i64_144 : i64
    %385 = arith.addi %383, %384 : i64
    %c3_i64_145 = arith.constant 3 : i64
    %c512_i64_146 = arith.constant 512 : i64
    %386 = arith.muli %374, %374 : i64
    %387 = arith.divui %386, %c512_i64_146 : i64
    %388 = arith.muli %374, %c3_i64_145 : i64
    %389 = arith.addi %387, %388 : i64
    %390 = arith.subi %389, %385 : i64
    %391 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %392 = llvm.load %391 : !llvm.ptr -> i64
    %393 = arith.cmpi ult, %392, %390 : i64
    scf.if %393 {
    } else {
      %570 = arith.subi %392, %390 : i64
      llvm.store %570, %391 : i64, !llvm.ptr
    }
    %c80_i8_147 = arith.constant 80 : i8
    cf.cond_br %393, ^bb1(%c80_i8_147 : i8), ^bb110
  ^bb110:  // pred: ^bb109
    %394 = call @dora_fn_extend_memory(%arg0, %375) : (!llvm.ptr, i64) -> !llvm.ptr
    %395 = llvm.getelementptr %394[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %396 = llvm.load %395 : !llvm.ptr -> !llvm.ptr
    %397 = llvm.getelementptr %394[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %398 = llvm.load %397 : !llvm.ptr -> i8
    %c0_i8_148 = arith.constant 0 : i8
    %399 = arith.cmpi ne, %398, %c0_i8_148 : i8
    cf.cond_br %399, ^bb1(%398 : i8), ^bb111
  ^bb111:  // pred: ^bb110
    %400 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %396, %400 : !llvm.ptr, !llvm.ptr
    %401 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %375, %401 : i64, !llvm.ptr
    cf.br ^bb108
  ^bb112:  // pred: ^bb24
    %402 = arith.trunci %81 : i256 to i64
    %c0_i64_149 = arith.constant 0 : i64
    %403 = arith.cmpi slt, %402, %c0_i64_149 : i64
    %c84_i8_150 = arith.constant 84 : i8
    cf.cond_br %403, ^bb1(%c84_i8_150 : i8), ^bb113
  ^bb113:  // pred: ^bb112
    %404 = arith.addi %402, %c32_i64_21 : i64
    %c0_i64_151 = arith.constant 0 : i64
    %405 = arith.cmpi slt, %404, %c0_i64_151 : i64
    %c84_i8_152 = arith.constant 84 : i8
    cf.cond_br %405, ^bb1(%c84_i8_152 : i8), ^bb114
  ^bb114:  // pred: ^bb113
    %c31_i64_153 = arith.constant 31 : i64
    %c32_i64_154 = arith.constant 32 : i64
    %406 = arith.addi %404, %c31_i64_153 : i64
    %407 = arith.divui %406, %c32_i64_154 : i64
    %c32_i64_155 = arith.constant 32 : i64
    %408 = arith.muli %407, %c32_i64_155 : i64
    %409 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %410 = llvm.load %409 : !llvm.ptr -> i64
    %c31_i64_156 = arith.constant 31 : i64
    %c32_i64_157 = arith.constant 32 : i64
    %411 = arith.addi %410, %c31_i64_156 : i64
    %412 = arith.divui %411, %c32_i64_157 : i64
    %413 = arith.muli %412, %c32_i64_155 : i64
    %414 = arith.cmpi ult, %413, %408 : i64
    cf.cond_br %414, ^bb116, ^bb115
  ^bb115:  // 2 preds: ^bb114, ^bb118
    cf.br ^bb25
  ^bb116:  // pred: ^bb114
    %c3_i64_158 = arith.constant 3 : i64
    %c512_i64_159 = arith.constant 512 : i64
    %415 = arith.muli %412, %412 : i64
    %416 = arith.divui %415, %c512_i64_159 : i64
    %417 = arith.muli %412, %c3_i64_158 : i64
    %418 = arith.addi %416, %417 : i64
    %c3_i64_160 = arith.constant 3 : i64
    %c512_i64_161 = arith.constant 512 : i64
    %419 = arith.muli %407, %407 : i64
    %420 = arith.divui %419, %c512_i64_161 : i64
    %421 = arith.muli %407, %c3_i64_160 : i64
    %422 = arith.addi %420, %421 : i64
    %423 = arith.subi %422, %418 : i64
    %424 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %425 = llvm.load %424 : !llvm.ptr -> i64
    %426 = arith.cmpi ult, %425, %423 : i64
    scf.if %426 {
    } else {
      %570 = arith.subi %425, %423 : i64
      llvm.store %570, %424 : i64, !llvm.ptr
    }
    %c80_i8_162 = arith.constant 80 : i8
    cf.cond_br %426, ^bb1(%c80_i8_162 : i8), ^bb117
  ^bb117:  // pred: ^bb116
    %427 = call @dora_fn_extend_memory(%arg0, %408) : (!llvm.ptr, i64) -> !llvm.ptr
    %428 = llvm.getelementptr %427[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %429 = llvm.load %428 : !llvm.ptr -> !llvm.ptr
    %430 = llvm.getelementptr %427[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %431 = llvm.load %430 : !llvm.ptr -> i8
    %c0_i8_163 = arith.constant 0 : i8
    %432 = arith.cmpi ne, %431, %c0_i8_163 : i8
    cf.cond_br %432, ^bb1(%431 : i8), ^bb118
  ^bb118:  // pred: ^bb117
    %433 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %429, %433 : !llvm.ptr, !llvm.ptr
    %434 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %408, %434 : i64, !llvm.ptr
    cf.br ^bb115
  ^bb119:  // pred: ^bb37
    %435 = arith.trunci %124 : i256 to i64
    %c0_i64_164 = arith.constant 0 : i64
    %436 = arith.cmpi slt, %435, %c0_i64_164 : i64
    %c84_i8_165 = arith.constant 84 : i8
    cf.cond_br %436, ^bb1(%c84_i8_165 : i8), ^bb120
  ^bb120:  // pred: ^bb119
    %437 = arith.addi %435, %c32_i64_39 : i64
    %c0_i64_166 = arith.constant 0 : i64
    %438 = arith.cmpi slt, %437, %c0_i64_166 : i64
    %c84_i8_167 = arith.constant 84 : i8
    cf.cond_br %438, ^bb1(%c84_i8_167 : i8), ^bb121
  ^bb121:  // pred: ^bb120
    %c31_i64_168 = arith.constant 31 : i64
    %c32_i64_169 = arith.constant 32 : i64
    %439 = arith.addi %437, %c31_i64_168 : i64
    %440 = arith.divui %439, %c32_i64_169 : i64
    %c32_i64_170 = arith.constant 32 : i64
    %441 = arith.muli %440, %c32_i64_170 : i64
    %442 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %443 = llvm.load %442 : !llvm.ptr -> i64
    %c31_i64_171 = arith.constant 31 : i64
    %c32_i64_172 = arith.constant 32 : i64
    %444 = arith.addi %443, %c31_i64_171 : i64
    %445 = arith.divui %444, %c32_i64_172 : i64
    %446 = arith.muli %445, %c32_i64_170 : i64
    %447 = arith.cmpi ult, %446, %441 : i64
    cf.cond_br %447, ^bb123, ^bb122
  ^bb122:  // 2 preds: ^bb121, ^bb125
    cf.br ^bb38
  ^bb123:  // pred: ^bb121
    %c3_i64_173 = arith.constant 3 : i64
    %c512_i64_174 = arith.constant 512 : i64
    %448 = arith.muli %445, %445 : i64
    %449 = arith.divui %448, %c512_i64_174 : i64
    %450 = arith.muli %445, %c3_i64_173 : i64
    %451 = arith.addi %449, %450 : i64
    %c3_i64_175 = arith.constant 3 : i64
    %c512_i64_176 = arith.constant 512 : i64
    %452 = arith.muli %440, %440 : i64
    %453 = arith.divui %452, %c512_i64_176 : i64
    %454 = arith.muli %440, %c3_i64_175 : i64
    %455 = arith.addi %453, %454 : i64
    %456 = arith.subi %455, %451 : i64
    %457 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %458 = llvm.load %457 : !llvm.ptr -> i64
    %459 = arith.cmpi ult, %458, %456 : i64
    scf.if %459 {
    } else {
      %570 = arith.subi %458, %456 : i64
      llvm.store %570, %457 : i64, !llvm.ptr
    }
    %c80_i8_177 = arith.constant 80 : i8
    cf.cond_br %459, ^bb1(%c80_i8_177 : i8), ^bb124
  ^bb124:  // pred: ^bb123
    %460 = call @dora_fn_extend_memory(%arg0, %441) : (!llvm.ptr, i64) -> !llvm.ptr
    %461 = llvm.getelementptr %460[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %462 = llvm.load %461 : !llvm.ptr -> !llvm.ptr
    %463 = llvm.getelementptr %460[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %464 = llvm.load %463 : !llvm.ptr -> i8
    %c0_i8_178 = arith.constant 0 : i8
    %465 = arith.cmpi ne, %464, %c0_i8_178 : i8
    cf.cond_br %465, ^bb1(%464 : i8), ^bb125
  ^bb125:  // pred: ^bb124
    %466 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %462, %466 : !llvm.ptr, !llvm.ptr
    %467 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %441, %467 : i64, !llvm.ptr
    cf.br ^bb122
  ^bb126:  // pred: ^bb56
    %c49152_i64 = arith.constant 49152 : i64
    %468 = arith.cmpi ugt, %189, %c49152_i64 : i64
    %c100_i8 = arith.constant 100 : i8
    cf.cond_br %468, ^bb1(%c100_i8 : i8), ^bb127
  ^bb127:  // pred: ^bb126
    %c31_i64_179 = arith.constant 31 : i64
    %c32_i64_180 = arith.constant 32 : i64
    %469 = arith.addi %189, %c31_i64_179 : i64
    %470 = arith.divui %469, %c32_i64_180 : i64
    %c2_i64_181 = arith.constant 2 : i64
    %471 = arith.muli %470, %c2_i64_181 : i64
    %472 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %473 = llvm.load %472 : !llvm.ptr -> i64
    %474 = arith.cmpi ult, %473, %471 : i64
    scf.if %474 {
    } else {
      %570 = arith.subi %473, %471 : i64
      llvm.store %570, %472 : i64, !llvm.ptr
    }
    %c80_i8_182 = arith.constant 80 : i8
    cf.cond_br %474, ^bb1(%c80_i8_182 : i8), ^bb128
  ^bb128:  // pred: ^bb127
    %475 = arith.trunci %182 : i256 to i64
    %c0_i64_183 = arith.constant 0 : i64
    %476 = arith.cmpi slt, %475, %c0_i64_183 : i64
    %c84_i8_184 = arith.constant 84 : i8
    cf.cond_br %476, ^bb1(%c84_i8_184 : i8), ^bb129
  ^bb129:  // pred: ^bb128
    %477 = arith.addi %475, %189 : i64
    %c0_i64_185 = arith.constant 0 : i64
    %478 = arith.cmpi slt, %477, %c0_i64_185 : i64
    %c84_i8_186 = arith.constant 84 : i8
    cf.cond_br %478, ^bb1(%c84_i8_186 : i8), ^bb130
  ^bb130:  // pred: ^bb129
    %c31_i64_187 = arith.constant 31 : i64
    %c32_i64_188 = arith.constant 32 : i64
    %479 = arith.addi %477, %c31_i64_187 : i64
    %480 = arith.divui %479, %c32_i64_188 : i64
    %c32_i64_189 = arith.constant 32 : i64
    %481 = arith.muli %480, %c32_i64_189 : i64
    %482 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %483 = llvm.load %482 : !llvm.ptr -> i64
    %c31_i64_190 = arith.constant 31 : i64
    %c32_i64_191 = arith.constant 32 : i64
    %484 = arith.addi %483, %c31_i64_190 : i64
    %485 = arith.divui %484, %c32_i64_191 : i64
    %486 = arith.muli %485, %c32_i64_189 : i64
    %487 = arith.cmpi ult, %486, %481 : i64
    cf.cond_br %487, ^bb132, ^bb131
  ^bb131:  // 2 preds: ^bb130, ^bb134
    cf.br ^bb57
  ^bb132:  // pred: ^bb130
    %c3_i64_192 = arith.constant 3 : i64
    %c512_i64_193 = arith.constant 512 : i64
    %488 = arith.muli %485, %485 : i64
    %489 = arith.divui %488, %c512_i64_193 : i64
    %490 = arith.muli %485, %c3_i64_192 : i64
    %491 = arith.addi %489, %490 : i64
    %c3_i64_194 = arith.constant 3 : i64
    %c512_i64_195 = arith.constant 512 : i64
    %492 = arith.muli %480, %480 : i64
    %493 = arith.divui %492, %c512_i64_195 : i64
    %494 = arith.muli %480, %c3_i64_194 : i64
    %495 = arith.addi %493, %494 : i64
    %496 = arith.subi %495, %491 : i64
    %497 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %498 = llvm.load %497 : !llvm.ptr -> i64
    %499 = arith.cmpi ult, %498, %496 : i64
    scf.if %499 {
    } else {
      %570 = arith.subi %498, %496 : i64
      llvm.store %570, %497 : i64, !llvm.ptr
    }
    %c80_i8_196 = arith.constant 80 : i8
    cf.cond_br %499, ^bb1(%c80_i8_196 : i8), ^bb133
  ^bb133:  // pred: ^bb132
    %500 = call @dora_fn_extend_memory(%arg0, %481) : (!llvm.ptr, i64) -> !llvm.ptr
    %501 = llvm.getelementptr %500[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %502 = llvm.load %501 : !llvm.ptr -> !llvm.ptr
    %503 = llvm.getelementptr %500[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %504 = llvm.load %503 : !llvm.ptr -> i8
    %c0_i8_197 = arith.constant 0 : i8
    %505 = arith.cmpi ne, %504, %c0_i8_197 : i8
    cf.cond_br %505, ^bb1(%504 : i8), ^bb134
  ^bb134:  // pred: ^bb133
    %506 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %502, %506 : !llvm.ptr, !llvm.ptr
    %507 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %481, %507 : i64, !llvm.ptr
    cf.br ^bb131
  ^bb135:  // pred: ^bb92
    %508 = arith.addi %316, %318 : i64
    %c0_i64_198 = arith.constant 0 : i64
    %509 = arith.cmpi slt, %508, %c0_i64_198 : i64
    %c84_i8_199 = arith.constant 84 : i8
    cf.cond_br %509, ^bb1(%c84_i8_199 : i8), ^bb136
  ^bb136:  // pred: ^bb135
    %c31_i64_200 = arith.constant 31 : i64
    %c32_i64_201 = arith.constant 32 : i64
    %510 = arith.addi %508, %c31_i64_200 : i64
    %511 = arith.divui %510, %c32_i64_201 : i64
    %c32_i64_202 = arith.constant 32 : i64
    %512 = arith.muli %511, %c32_i64_202 : i64
    %513 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %514 = llvm.load %513 : !llvm.ptr -> i64
    %c31_i64_203 = arith.constant 31 : i64
    %c32_i64_204 = arith.constant 32 : i64
    %515 = arith.addi %514, %c31_i64_203 : i64
    %516 = arith.divui %515, %c32_i64_204 : i64
    %517 = arith.muli %516, %c32_i64_202 : i64
    %518 = arith.cmpi ult, %517, %512 : i64
    cf.cond_br %518, ^bb138, ^bb137
  ^bb137:  // 2 preds: ^bb136, ^bb140
    cf.br ^bb93
  ^bb138:  // pred: ^bb136
    %c3_i64_205 = arith.constant 3 : i64
    %c512_i64_206 = arith.constant 512 : i64
    %519 = arith.muli %516, %516 : i64
    %520 = arith.divui %519, %c512_i64_206 : i64
    %521 = arith.muli %516, %c3_i64_205 : i64
    %522 = arith.addi %520, %521 : i64
    %c3_i64_207 = arith.constant 3 : i64
    %c512_i64_208 = arith.constant 512 : i64
    %523 = arith.muli %511, %511 : i64
    %524 = arith.divui %523, %c512_i64_208 : i64
    %525 = arith.muli %511, %c3_i64_207 : i64
    %526 = arith.addi %524, %525 : i64
    %527 = arith.subi %526, %522 : i64
    %528 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %529 = llvm.load %528 : !llvm.ptr -> i64
    %530 = arith.cmpi ult, %529, %527 : i64
    scf.if %530 {
    } else {
      %570 = arith.subi %529, %527 : i64
      llvm.store %570, %528 : i64, !llvm.ptr
    }
    %c80_i8_209 = arith.constant 80 : i8
    cf.cond_br %530, ^bb1(%c80_i8_209 : i8), ^bb139
  ^bb139:  // pred: ^bb138
    %531 = call @dora_fn_extend_memory(%arg0, %512) : (!llvm.ptr, i64) -> !llvm.ptr
    %532 = llvm.getelementptr %531[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %533 = llvm.load %532 : !llvm.ptr -> !llvm.ptr
    %534 = llvm.getelementptr %531[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %535 = llvm.load %534 : !llvm.ptr -> i8
    %c0_i8_210 = arith.constant 0 : i8
    %536 = arith.cmpi ne, %535, %c0_i8_210 : i8
    cf.cond_br %536, ^bb1(%535 : i8), ^bb140
  ^bb140:  // pred: ^bb139
    %537 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %533, %537 : !llvm.ptr, !llvm.ptr
    %538 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %512, %538 : i64, !llvm.ptr
    cf.br ^bb137
  ^bb141:  // pred: ^bb93
    %539 = arith.addi %320, %322 : i64
    %c0_i64_211 = arith.constant 0 : i64
    %540 = arith.cmpi slt, %539, %c0_i64_211 : i64
    %c84_i8_212 = arith.constant 84 : i8
    cf.cond_br %540, ^bb1(%c84_i8_212 : i8), ^bb142
  ^bb142:  // pred: ^bb141
    %c31_i64_213 = arith.constant 31 : i64
    %c32_i64_214 = arith.constant 32 : i64
    %541 = arith.addi %539, %c31_i64_213 : i64
    %542 = arith.divui %541, %c32_i64_214 : i64
    %c32_i64_215 = arith.constant 32 : i64
    %543 = arith.muli %542, %c32_i64_215 : i64
    %544 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %545 = llvm.load %544 : !llvm.ptr -> i64
    %c31_i64_216 = arith.constant 31 : i64
    %c32_i64_217 = arith.constant 32 : i64
    %546 = arith.addi %545, %c31_i64_216 : i64
    %547 = arith.divui %546, %c32_i64_217 : i64
    %548 = arith.muli %547, %c32_i64_215 : i64
    %549 = arith.cmpi ult, %548, %543 : i64
    cf.cond_br %549, ^bb144, ^bb143
  ^bb143:  // 2 preds: ^bb142, ^bb146
    cf.br ^bb94
  ^bb144:  // pred: ^bb142
    %c3_i64_218 = arith.constant 3 : i64
    %c512_i64_219 = arith.constant 512 : i64
    %550 = arith.muli %547, %547 : i64
    %551 = arith.divui %550, %c512_i64_219 : i64
    %552 = arith.muli %547, %c3_i64_218 : i64
    %553 = arith.addi %551, %552 : i64
    %c3_i64_220 = arith.constant 3 : i64
    %c512_i64_221 = arith.constant 512 : i64
    %554 = arith.muli %542, %542 : i64
    %555 = arith.divui %554, %c512_i64_221 : i64
    %556 = arith.muli %542, %c3_i64_220 : i64
    %557 = arith.addi %555, %556 : i64
    %558 = arith.subi %557, %553 : i64
    %559 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %560 = llvm.load %559 : !llvm.ptr -> i64
    %561 = arith.cmpi ult, %560, %558 : i64
    scf.if %561 {
    } else {
      %570 = arith.subi %560, %558 : i64
      llvm.store %570, %559 : i64, !llvm.ptr
    }
    %c80_i8_222 = arith.constant 80 : i8
    cf.cond_br %561, ^bb1(%c80_i8_222 : i8), ^bb145
  ^bb145:  // pred: ^bb144
    %562 = call @dora_fn_extend_memory(%arg0, %543) : (!llvm.ptr, i64) -> !llvm.ptr
    %563 = llvm.getelementptr %562[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %564 = llvm.load %563 : !llvm.ptr -> !llvm.ptr
    %565 = llvm.getelementptr %562[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %566 = llvm.load %565 : !llvm.ptr -> i8
    %c0_i8_223 = arith.constant 0 : i8
    %567 = arith.cmpi ne, %566, %c0_i8_223 : i8
    cf.cond_br %567, ^bb1(%566 : i8), ^bb146
  ^bb146:  // pred: ^bb145
    %568 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %564, %568 : !llvm.ptr, !llvm.ptr
    %569 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %543, %569 : i64, !llvm.ptr
    cf.br ^bb143
  }
}
