---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_debug_print(i32)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_return_data_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    %9 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %10 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %11 = arith.addi %10, %c1_i64 : i64
    llvm.store %11, %9 : i64, !llvm.ptr
    %12 = arith.cmpi ult, %c1024_i64, %11 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %12, ^bb1(%c92_i8 : i8), ^bb3
  ^bb1(%13: i8):  // 46 preds: ^bb0, ^bb2, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb11, ^bb12, ^bb13, ^bb14, ^bb15, ^bb16, ^bb17, ^bb18, ^bb19, ^bb20, ^bb21, ^bb22, ^bb23, ^bb24, ^bb25, ^bb26, ^bb27, ^bb28, ^bb29, ^bb30, ^bb31, ^bb32, ^bb33, ^bb34, ^bb35, ^bb36, ^bb37, ^bb38, ^bb39, ^bb40, ^bb41, ^bb42, ^bb43, ^bb44, ^bb45, ^bb46
    %c0_i64_1 = arith.constant 0 : i64
    %14 = call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %c0_i64_1, %13) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %13 : i8
  ^bb2(%15: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %15 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb0
    %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256 = arith.constant 57669888194366464517598830424248860356609074394020202793089226410191109488639 : i256
    %16 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %17 = llvm.load %16 : !llvm.ptr -> !llvm.ptr
    llvm.store %c57669888194366464517598830424248860356609074394020202793089226410191109488639_i256, %17 : i256, !llvm.ptr
    %18 = llvm.getelementptr %17[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %18, %16 : !llvm.ptr, !llvm.ptr
    %19 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_2 = arith.constant 1 : i64
    %20 = arith.addi %19, %c1_i64_2 : i64
    llvm.store %20, %9 : i64, !llvm.ptr
    %21 = arith.cmpi ult, %c1024_i64, %20 : i64
    %c92_i8_3 = arith.constant 92 : i8
    cf.cond_br %21, ^bb1(%c92_i8_3 : i8), ^bb4
  ^bb4:  // pred: ^bb3
    %c0_i256 = arith.constant 0 : i256
    %22 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %23 = llvm.load %22 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %23 : i256, !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %24, %22 : !llvm.ptr, !llvm.ptr
    %25 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64 = arith.constant -2 : i64
    %26 = arith.addi %25, %c-2_i64 : i64
    llvm.store %26, %9 : i64, !llvm.ptr
    %c2_i64 = arith.constant 2 : i64
    %27 = arith.cmpi ult, %25, %c2_i64 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %27, ^bb1(%c91_i8 : i8), ^bb5
  ^bb5:  // pred: ^bb4
    %28 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %29 = llvm.load %28 : !llvm.ptr -> !llvm.ptr
    %30 = llvm.getelementptr %29[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %31 = llvm.load %30 : !llvm.ptr -> i256
    llvm.store %30, %28 : !llvm.ptr, !llvm.ptr
    %32 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %33 = llvm.load %32 : !llvm.ptr -> !llvm.ptr
    %34 = llvm.getelementptr %33[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %35 = llvm.load %34 : !llvm.ptr -> i256
    llvm.store %34, %32 : !llvm.ptr, !llvm.ptr
    %36 = arith.trunci %31 : i256 to i64
    %c0_i64_4 = arith.constant 0 : i64
    %37 = arith.cmpi slt, %36, %c0_i64_4 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %37, ^bb1(%c84_i8 : i8), ^bb6
  ^bb6:  // pred: ^bb5
    %c32_i64 = arith.constant 32 : i64
    %38 = arith.addi %36, %c32_i64 : i64
    %c0_i64_5 = arith.constant 0 : i64
    %39 = arith.cmpi slt, %38, %c0_i64_5 : i64
    %c84_i8_6 = arith.constant 84 : i8
    cf.cond_br %39, ^bb1(%c84_i8_6 : i8), ^bb7
  ^bb7:  // pred: ^bb6
    %c31_i64 = arith.constant 31 : i64
    %c32_i64_7 = arith.constant 32 : i64
    %40 = arith.addi %38, %c31_i64 : i64
    %41 = arith.divui %40, %c32_i64_7 : i64
    %42 = arith.muli %41, %c32_i64_7 : i64
    %43 = call @dora_fn_extend_memory(%arg0, %42) : (!llvm.ptr, i64) -> !llvm.ptr
    %44 = llvm.getelementptr %43[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %45 = llvm.load %44 : !llvm.ptr -> !llvm.ptr
    %46 = llvm.getelementptr %43[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %47 = llvm.load %46 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %48 = arith.cmpi ne, %47, %c0_i8 : i8
    cf.cond_br %48, ^bb1(%47 : i8), ^bb8
  ^bb8:  // pred: ^bb7
    %49 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %45, %49 : !llvm.ptr, !llvm.ptr
    %50 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %42, %50 : i64, !llvm.ptr
    %51 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %52 = llvm.load %51 : !llvm.ptr -> !llvm.ptr
    %53 = llvm.getelementptr %52[%36] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %54 = llvm.intr.bswap(%35)  : (i256) -> i256
    llvm.store %54, %53 {alignment = 1 : i64} : i256, !llvm.ptr
    %55 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_8 = arith.constant 1 : i64
    %56 = arith.addi %55, %c1_i64_8 : i64
    llvm.store %56, %9 : i64, !llvm.ptr
    %57 = arith.cmpi ult, %c1024_i64, %56 : i64
    %c92_i8_9 = arith.constant 92 : i8
    cf.cond_br %57, ^bb1(%c92_i8_9 : i8), ^bb9
  ^bb9:  // pred: ^bb8
    %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256 = arith.constant -282693306169198560872784742741978202424711039104693490077813924759764729856 : i256
    %58 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %59 = llvm.load %58 : !llvm.ptr -> !llvm.ptr
    llvm.store %c-282693306169198560872784742741978202424711039104693490077813924759764729856_i256, %59 : i256, !llvm.ptr
    %60 = llvm.getelementptr %59[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %60, %58 : !llvm.ptr, !llvm.ptr
    %61 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_10 = arith.constant 1 : i64
    %62 = arith.addi %61, %c1_i64_10 : i64
    llvm.store %62, %9 : i64, !llvm.ptr
    %63 = arith.cmpi ult, %c1024_i64, %62 : i64
    %c92_i8_11 = arith.constant 92 : i8
    cf.cond_br %63, ^bb1(%c92_i8_11 : i8), ^bb10
  ^bb10:  // pred: ^bb9
    %c32_i256 = arith.constant 32 : i256
    %64 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %65 = llvm.load %64 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %65 : i256, !llvm.ptr
    %66 = llvm.getelementptr %65[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %66, %64 : !llvm.ptr, !llvm.ptr
    %67 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_12 = arith.constant -2 : i64
    %68 = arith.addi %67, %c-2_i64_12 : i64
    llvm.store %68, %9 : i64, !llvm.ptr
    %c2_i64_13 = arith.constant 2 : i64
    %69 = arith.cmpi ult, %67, %c2_i64_13 : i64
    %c91_i8_14 = arith.constant 91 : i8
    cf.cond_br %69, ^bb1(%c91_i8_14 : i8), ^bb11
  ^bb11:  // pred: ^bb10
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    %72 = llvm.getelementptr %71[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %73 = llvm.load %72 : !llvm.ptr -> i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    %74 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %75 = llvm.load %74 : !llvm.ptr -> !llvm.ptr
    %76 = llvm.getelementptr %75[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %77 = llvm.load %76 : !llvm.ptr -> i256
    llvm.store %76, %74 : !llvm.ptr, !llvm.ptr
    %78 = arith.trunci %73 : i256 to i64
    %c0_i64_15 = arith.constant 0 : i64
    %79 = arith.cmpi slt, %78, %c0_i64_15 : i64
    %c84_i8_16 = arith.constant 84 : i8
    cf.cond_br %79, ^bb1(%c84_i8_16 : i8), ^bb12
  ^bb12:  // pred: ^bb11
    %c32_i64_17 = arith.constant 32 : i64
    %80 = arith.addi %78, %c32_i64_17 : i64
    %c0_i64_18 = arith.constant 0 : i64
    %81 = arith.cmpi slt, %80, %c0_i64_18 : i64
    %c84_i8_19 = arith.constant 84 : i8
    cf.cond_br %81, ^bb1(%c84_i8_19 : i8), ^bb13
  ^bb13:  // pred: ^bb12
    %c31_i64_20 = arith.constant 31 : i64
    %c32_i64_21 = arith.constant 32 : i64
    %82 = arith.addi %80, %c31_i64_20 : i64
    %83 = arith.divui %82, %c32_i64_21 : i64
    %84 = arith.muli %83, %c32_i64_21 : i64
    %85 = call @dora_fn_extend_memory(%arg0, %84) : (!llvm.ptr, i64) -> !llvm.ptr
    %86 = llvm.getelementptr %85[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %87 = llvm.load %86 : !llvm.ptr -> !llvm.ptr
    %88 = llvm.getelementptr %85[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %89 = llvm.load %88 : !llvm.ptr -> i8
    %c0_i8_22 = arith.constant 0 : i8
    %90 = arith.cmpi ne, %89, %c0_i8_22 : i8
    cf.cond_br %90, ^bb1(%89 : i8), ^bb14
  ^bb14:  // pred: ^bb13
    %91 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %87, %91 : !llvm.ptr, !llvm.ptr
    %92 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %84, %92 : i64, !llvm.ptr
    %93 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %94 = llvm.load %93 : !llvm.ptr -> !llvm.ptr
    %95 = llvm.getelementptr %94[%78] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %96 = llvm.intr.bswap(%77)  : (i256) -> i256
    llvm.store %96, %95 {alignment = 1 : i64} : i256, !llvm.ptr
    %97 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %98 = arith.addi %97, %c1_i64_23 : i64
    llvm.store %98, %9 : i64, !llvm.ptr
    %99 = arith.cmpi ult, %c1024_i64, %98 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %99, ^bb1(%c92_i8_24 : i8), ^bb15
  ^bb15:  // pred: ^bb14
    %c10123276409175967808859434475862811765392092841461775252157603250176_i256 = arith.constant 10123276409175967808859434475862811765392092841461775252157603250176 : i256
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    llvm.store %c10123276409175967808859434475862811765392092841461775252157603250176_i256, %101 : i256, !llvm.ptr
    %102 = llvm.getelementptr %101[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    %103 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_25 = arith.constant 1 : i64
    %104 = arith.addi %103, %c1_i64_25 : i64
    llvm.store %104, %9 : i64, !llvm.ptr
    %105 = arith.cmpi ult, %c1024_i64, %104 : i64
    %c92_i8_26 = arith.constant 92 : i8
    cf.cond_br %105, ^bb1(%c92_i8_26 : i8), ^bb16
  ^bb16:  // pred: ^bb15
    %c64_i256 = arith.constant 64 : i256
    %106 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %107 = llvm.load %106 : !llvm.ptr -> !llvm.ptr
    llvm.store %c64_i256, %107 : i256, !llvm.ptr
    %108 = llvm.getelementptr %107[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %108, %106 : !llvm.ptr, !llvm.ptr
    %109 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_27 = arith.constant -2 : i64
    %110 = arith.addi %109, %c-2_i64_27 : i64
    llvm.store %110, %9 : i64, !llvm.ptr
    %c2_i64_28 = arith.constant 2 : i64
    %111 = arith.cmpi ult, %109, %c2_i64_28 : i64
    %c91_i8_29 = arith.constant 91 : i8
    cf.cond_br %111, ^bb1(%c91_i8_29 : i8), ^bb17
  ^bb17:  // pred: ^bb16
    %112 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %113 = llvm.load %112 : !llvm.ptr -> !llvm.ptr
    %114 = llvm.getelementptr %113[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %115 = llvm.load %114 : !llvm.ptr -> i256
    llvm.store %114, %112 : !llvm.ptr, !llvm.ptr
    %116 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %117 = llvm.load %116 : !llvm.ptr -> !llvm.ptr
    %118 = llvm.getelementptr %117[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %119 = llvm.load %118 : !llvm.ptr -> i256
    llvm.store %118, %116 : !llvm.ptr, !llvm.ptr
    %120 = arith.trunci %115 : i256 to i64
    %c0_i64_30 = arith.constant 0 : i64
    %121 = arith.cmpi slt, %120, %c0_i64_30 : i64
    %c84_i8_31 = arith.constant 84 : i8
    cf.cond_br %121, ^bb1(%c84_i8_31 : i8), ^bb18
  ^bb18:  // pred: ^bb17
    %c32_i64_32 = arith.constant 32 : i64
    %122 = arith.addi %120, %c32_i64_32 : i64
    %c0_i64_33 = arith.constant 0 : i64
    %123 = arith.cmpi slt, %122, %c0_i64_33 : i64
    %c84_i8_34 = arith.constant 84 : i8
    cf.cond_br %123, ^bb1(%c84_i8_34 : i8), ^bb19
  ^bb19:  // pred: ^bb18
    %c31_i64_35 = arith.constant 31 : i64
    %c32_i64_36 = arith.constant 32 : i64
    %124 = arith.addi %122, %c31_i64_35 : i64
    %125 = arith.divui %124, %c32_i64_36 : i64
    %126 = arith.muli %125, %c32_i64_36 : i64
    %127 = call @dora_fn_extend_memory(%arg0, %126) : (!llvm.ptr, i64) -> !llvm.ptr
    %128 = llvm.getelementptr %127[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %129 = llvm.load %128 : !llvm.ptr -> !llvm.ptr
    %130 = llvm.getelementptr %127[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %131 = llvm.load %130 : !llvm.ptr -> i8
    %c0_i8_37 = arith.constant 0 : i8
    %132 = arith.cmpi ne, %131, %c0_i8_37 : i8
    cf.cond_br %132, ^bb1(%131 : i8), ^bb20
  ^bb20:  // pred: ^bb19
    %133 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %129, %133 : !llvm.ptr, !llvm.ptr
    %134 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %126, %134 : i64, !llvm.ptr
    %135 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    %136 = llvm.load %135 : !llvm.ptr -> !llvm.ptr
    %137 = llvm.getelementptr %136[%120] : (!llvm.ptr, i64) -> !llvm.ptr, i8
    %138 = llvm.intr.bswap(%119)  : (i256) -> i256
    llvm.store %138, %137 {alignment = 1 : i64} : i256, !llvm.ptr
    %139 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_38 = arith.constant 1 : i64
    %140 = arith.addi %139, %c1_i64_38 : i64
    llvm.store %140, %9 : i64, !llvm.ptr
    %141 = arith.cmpi ult, %c1024_i64, %140 : i64
    %c92_i8_39 = arith.constant 92 : i8
    cf.cond_br %141, ^bb1(%c92_i8_39 : i8), ^bb21
  ^bb21:  // pred: ^bb20
    %c77_i256 = arith.constant 77 : i256
    %142 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %143 = llvm.load %142 : !llvm.ptr -> !llvm.ptr
    llvm.store %c77_i256, %143 : i256, !llvm.ptr
    %144 = llvm.getelementptr %143[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %144, %142 : !llvm.ptr, !llvm.ptr
    %145 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_40 = arith.constant 1 : i64
    %146 = arith.addi %145, %c1_i64_40 : i64
    llvm.store %146, %9 : i64, !llvm.ptr
    %147 = arith.cmpi ult, %c1024_i64, %146 : i64
    %c92_i8_41 = arith.constant 92 : i8
    cf.cond_br %147, ^bb1(%c92_i8_41 : i8), ^bb22
  ^bb22:  // pred: ^bb21
    %c0_i256_42 = arith.constant 0 : i256
    %148 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_42, %149 : i256, !llvm.ptr
    %150 = llvm.getelementptr %149[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %150, %148 : !llvm.ptr, !llvm.ptr
    %151 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_43 = arith.constant 1 : i64
    %152 = arith.addi %151, %c1_i64_43 : i64
    llvm.store %152, %9 : i64, !llvm.ptr
    %153 = arith.cmpi ult, %c1024_i64, %152 : i64
    %c92_i8_44 = arith.constant 92 : i8
    cf.cond_br %153, ^bb1(%c92_i8_44 : i8), ^bb23
  ^bb23:  // pred: ^bb22
    %c0_i256_45 = arith.constant 0 : i256
    %154 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %155 = llvm.load %154 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_45, %155 : i256, !llvm.ptr
    %156 = llvm.getelementptr %155[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %156, %154 : !llvm.ptr, !llvm.ptr
    %157 = llvm.load %9 : !llvm.ptr -> i64
    %c-2_i64_46 = arith.constant -2 : i64
    %158 = arith.addi %157, %c-2_i64_46 : i64
    llvm.store %158, %9 : i64, !llvm.ptr
    %c3_i64 = arith.constant 3 : i64
    %159 = arith.cmpi ult, %157, %c3_i64 : i64
    %c91_i8_47 = arith.constant 91 : i8
    cf.cond_br %159, ^bb1(%c91_i8_47 : i8), ^bb24
  ^bb24:  // pred: ^bb23
    %160 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %161 = llvm.load %160 : !llvm.ptr -> !llvm.ptr
    %162 = llvm.getelementptr %161[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %163 = llvm.load %162 : !llvm.ptr -> i256
    llvm.store %162, %160 : !llvm.ptr, !llvm.ptr
    %164 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %165 = llvm.load %164 : !llvm.ptr -> !llvm.ptr
    %166 = llvm.getelementptr %165[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %167 = llvm.load %166 : !llvm.ptr -> i256
    llvm.store %166, %164 : !llvm.ptr, !llvm.ptr
    %168 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %169 = llvm.load %168 : !llvm.ptr -> !llvm.ptr
    %170 = llvm.getelementptr %169[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %171 = llvm.load %170 : !llvm.ptr -> i256
    llvm.store %170, %168 : !llvm.ptr, !llvm.ptr
    %172 = arith.trunci %167 : i256 to i64
    %c0_i64_48 = arith.constant 0 : i64
    %173 = arith.cmpi slt, %172, %c0_i64_48 : i64
    %c84_i8_49 = arith.constant 84 : i8
    cf.cond_br %173, ^bb1(%c84_i8_49 : i8), ^bb25
  ^bb25:  // pred: ^bb24
    %174 = arith.trunci %171 : i256 to i64
    %c0_i64_50 = arith.constant 0 : i64
    %175 = arith.cmpi slt, %174, %c0_i64_50 : i64
    %c84_i8_51 = arith.constant 84 : i8
    cf.cond_br %175, ^bb1(%c84_i8_51 : i8), ^bb26
  ^bb26:  // pred: ^bb25
    %176 = arith.addi %172, %174 : i64
    %c0_i64_52 = arith.constant 0 : i64
    %177 = arith.cmpi slt, %176, %c0_i64_52 : i64
    %c84_i8_53 = arith.constant 84 : i8
    cf.cond_br %177, ^bb1(%c84_i8_53 : i8), ^bb27
  ^bb27:  // pred: ^bb26
    %c31_i64_54 = arith.constant 31 : i64
    %c32_i64_55 = arith.constant 32 : i64
    %178 = arith.addi %176, %c31_i64_54 : i64
    %179 = arith.divui %178, %c32_i64_55 : i64
    %180 = arith.muli %179, %c32_i64_55 : i64
    %181 = call @dora_fn_extend_memory(%arg0, %180) : (!llvm.ptr, i64) -> !llvm.ptr
    %182 = llvm.getelementptr %181[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %183 = llvm.load %182 : !llvm.ptr -> !llvm.ptr
    %184 = llvm.getelementptr %181[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %185 = llvm.load %184 : !llvm.ptr -> i8
    %c0_i8_56 = arith.constant 0 : i8
    %186 = arith.cmpi ne, %185, %c0_i8_56 : i8
    cf.cond_br %186, ^bb1(%185 : i8), ^bb28
  ^bb28:  // pred: ^bb27
    %187 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %183, %187 : !llvm.ptr, !llvm.ptr
    %188 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %180, %188 : i64, !llvm.ptr
    %c1_i256 = arith.constant 1 : i256
    %189 = llvm.alloca %c1_i256 x i256 : (i256) -> !llvm.ptr
    llvm.store %163, %189 {alignment = 1 : i64} : i256, !llvm.ptr
    %190 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %191 = llvm.load %190 : !llvm.ptr -> i64
    %c1_i64_57 = arith.constant 1 : i64
    %192 = llvm.alloca %c1_i64_57 x i64 : (i64) -> !llvm.ptr
    llvm.store %191, %192 {alignment = 1 : i64} : i64, !llvm.ptr
    %193 = call @dora_fn_create(%arg0, %174, %172, %189, %192) : (!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %194 = llvm.getelementptr %193[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %195 = llvm.load %194 : !llvm.ptr -> i8
    %c0_i8_58 = arith.constant 0 : i8
    %196 = arith.cmpi ne, %195, %c0_i8_58 : i8
    cf.cond_br %196, ^bb1(%195 : i8), ^bb29
  ^bb29:  // pred: ^bb28
    %197 = llvm.load %189 : !llvm.ptr -> i256
    %198 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %199 = llvm.load %198 : !llvm.ptr -> !llvm.ptr
    llvm.store %197, %199 : i256, !llvm.ptr
    %200 = llvm.getelementptr %199[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %200, %198 : !llvm.ptr, !llvm.ptr
    %201 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_59 = arith.constant 1 : i64
    %202 = arith.addi %201, %c1_i64_59 : i64
    llvm.store %202, %9 : i64, !llvm.ptr
    %203 = arith.cmpi ult, %c1024_i64, %202 : i64
    %c92_i8_60 = arith.constant 92 : i8
    cf.cond_br %203, ^bb1(%c92_i8_60 : i8), ^bb30
  ^bb30:  // pred: ^bb29
    %c0_i256_61 = arith.constant 0 : i256
    %204 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %205 = llvm.load %204 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_61, %205 : i256, !llvm.ptr
    %206 = llvm.getelementptr %205[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %206, %204 : !llvm.ptr, !llvm.ptr
    %207 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_62 = arith.constant 1 : i64
    %208 = arith.addi %207, %c1_i64_62 : i64
    llvm.store %208, %9 : i64, !llvm.ptr
    %209 = arith.cmpi ult, %c1024_i64, %208 : i64
    %c92_i8_63 = arith.constant 92 : i8
    cf.cond_br %209, ^bb1(%c92_i8_63 : i8), ^bb31
  ^bb31:  // pred: ^bb30
    %c0_i256_64 = arith.constant 0 : i256
    %210 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %211 = llvm.load %210 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_64, %211 : i256, !llvm.ptr
    %212 = llvm.getelementptr %211[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %212, %210 : !llvm.ptr, !llvm.ptr
    %213 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_65 = arith.constant 1 : i64
    %214 = arith.addi %213, %c1_i64_65 : i64
    llvm.store %214, %9 : i64, !llvm.ptr
    %215 = arith.cmpi ult, %c1024_i64, %214 : i64
    %c92_i8_66 = arith.constant 92 : i8
    cf.cond_br %215, ^bb1(%c92_i8_66 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c0_i256_67 = arith.constant 0 : i256
    %216 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %217 = llvm.load %216 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_67, %217 : i256, !llvm.ptr
    %218 = llvm.getelementptr %217[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %218, %216 : !llvm.ptr, !llvm.ptr
    %219 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_68 = arith.constant 1 : i64
    %220 = arith.addi %219, %c1_i64_68 : i64
    llvm.store %220, %9 : i64, !llvm.ptr
    %221 = arith.cmpi ult, %c1024_i64, %220 : i64
    %c92_i8_69 = arith.constant 92 : i8
    cf.cond_br %221, ^bb1(%c92_i8_69 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %c0_i256_70 = arith.constant 0 : i256
    %222 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %223 = llvm.load %222 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_70, %223 : i256, !llvm.ptr
    %224 = llvm.getelementptr %223[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %224, %222 : !llvm.ptr, !llvm.ptr
    %225 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_71 = arith.constant 1 : i64
    %226 = arith.addi %225, %c1_i64_71 : i64
    llvm.store %226, %9 : i64, !llvm.ptr
    %227 = arith.cmpi ult, %c1024_i64, %226 : i64
    %c92_i8_72 = arith.constant 92 : i8
    cf.cond_br %227, ^bb1(%c92_i8_72 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %228 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %229 = llvm.load %228 : !llvm.ptr -> !llvm.ptr
    %230 = llvm.getelementptr %229[-5] : (!llvm.ptr) -> !llvm.ptr, i256
    %231 = llvm.load %230 : !llvm.ptr -> i256
    %232 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %233 = llvm.load %232 : !llvm.ptr -> !llvm.ptr
    llvm.store %231, %233 : i256, !llvm.ptr
    %234 = llvm.getelementptr %233[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %234, %232 : !llvm.ptr, !llvm.ptr
    %235 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_73 = arith.constant 1 : i64
    %236 = arith.addi %235, %c1_i64_73 : i64
    llvm.store %236, %9 : i64, !llvm.ptr
    %237 = arith.cmpi ult, %c1024_i64, %236 : i64
    %c92_i8_74 = arith.constant 92 : i8
    cf.cond_br %237, ^bb1(%c92_i8_74 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %c4294967295_i256 = arith.constant 4294967295 : i256
    %238 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %239 = llvm.load %238 : !llvm.ptr -> !llvm.ptr
    llvm.store %c4294967295_i256, %239 : i256, !llvm.ptr
    %240 = llvm.getelementptr %239[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %240, %238 : !llvm.ptr, !llvm.ptr
    %241 = llvm.load %9 : !llvm.ptr -> i64
    %c-5_i64 = arith.constant -5 : i64
    %242 = arith.addi %241, %c-5_i64 : i64
    llvm.store %242, %9 : i64, !llvm.ptr
    %c6_i64 = arith.constant 6 : i64
    %243 = arith.cmpi ult, %241, %c6_i64 : i64
    %c91_i8_75 = arith.constant 91 : i8
    cf.cond_br %243, ^bb1(%c91_i8_75 : i8), ^bb36
  ^bb36:  // pred: ^bb35
    %244 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %245 = llvm.load %244 : !llvm.ptr -> !llvm.ptr
    %246 = llvm.getelementptr %245[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %247 = llvm.load %246 : !llvm.ptr -> i256
    llvm.store %246, %244 : !llvm.ptr, !llvm.ptr
    %248 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %249 = llvm.load %248 : !llvm.ptr -> !llvm.ptr
    %250 = llvm.getelementptr %249[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %251 = llvm.load %250 : !llvm.ptr -> i256
    llvm.store %250, %248 : !llvm.ptr, !llvm.ptr
    %252 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %253 = llvm.load %252 : !llvm.ptr -> !llvm.ptr
    %254 = llvm.getelementptr %253[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %255 = llvm.load %254 : !llvm.ptr -> i256
    llvm.store %254, %252 : !llvm.ptr, !llvm.ptr
    %256 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %257 = llvm.load %256 : !llvm.ptr -> !llvm.ptr
    %258 = llvm.getelementptr %257[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %259 = llvm.load %258 : !llvm.ptr -> i256
    llvm.store %258, %256 : !llvm.ptr, !llvm.ptr
    %260 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %261 = llvm.load %260 : !llvm.ptr -> !llvm.ptr
    %262 = llvm.getelementptr %261[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %263 = llvm.load %262 : !llvm.ptr -> i256
    llvm.store %262, %260 : !llvm.ptr, !llvm.ptr
    %264 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %265 = llvm.load %264 : !llvm.ptr -> !llvm.ptr
    %266 = llvm.getelementptr %265[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %267 = llvm.load %266 : !llvm.ptr -> i256
    llvm.store %266, %264 : !llvm.ptr, !llvm.ptr
    %c0_i256_76 = arith.constant 0 : i256
    %268 = arith.trunci %247 : i256 to i64
    %c0_i64_77 = arith.constant 0 : i64
    %269 = arith.cmpi slt, %268, %c0_i64_77 : i64
    %c84_i8_78 = arith.constant 84 : i8
    cf.cond_br %269, ^bb1(%c84_i8_78 : i8), ^bb37
  ^bb37:  // pred: ^bb36
    %270 = arith.trunci %255 : i256 to i64
    %c0_i64_79 = arith.constant 0 : i64
    %271 = arith.cmpi slt, %270, %c0_i64_79 : i64
    %c84_i8_80 = arith.constant 84 : i8
    cf.cond_br %271, ^bb1(%c84_i8_80 : i8), ^bb38
  ^bb38:  // pred: ^bb37
    %272 = arith.trunci %259 : i256 to i64
    %c0_i64_81 = arith.constant 0 : i64
    %273 = arith.cmpi slt, %272, %c0_i64_81 : i64
    %c84_i8_82 = arith.constant 84 : i8
    cf.cond_br %273, ^bb1(%c84_i8_82 : i8), ^bb39
  ^bb39:  // pred: ^bb38
    %274 = arith.trunci %263 : i256 to i64
    %c0_i64_83 = arith.constant 0 : i64
    %275 = arith.cmpi slt, %274, %c0_i64_83 : i64
    %c84_i8_84 = arith.constant 84 : i8
    cf.cond_br %275, ^bb1(%c84_i8_84 : i8), ^bb40
  ^bb40:  // pred: ^bb39
    %276 = arith.trunci %267 : i256 to i64
    %c0_i64_85 = arith.constant 0 : i64
    %277 = arith.cmpi slt, %276, %c0_i64_85 : i64
    %c84_i8_86 = arith.constant 84 : i8
    cf.cond_br %277, ^bb1(%c84_i8_86 : i8), ^bb41
  ^bb41:  // pred: ^bb40
    %278 = arith.addi %270, %272 : i64
    %c0_i64_87 = arith.constant 0 : i64
    %279 = arith.cmpi slt, %278, %c0_i64_87 : i64
    %c84_i8_88 = arith.constant 84 : i8
    cf.cond_br %279, ^bb1(%c84_i8_88 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c31_i64_89 = arith.constant 31 : i64
    %c32_i64_90 = arith.constant 32 : i64
    %280 = arith.addi %278, %c31_i64_89 : i64
    %281 = arith.divui %280, %c32_i64_90 : i64
    %282 = arith.muli %281, %c32_i64_90 : i64
    %283 = call @dora_fn_extend_memory(%arg0, %282) : (!llvm.ptr, i64) -> !llvm.ptr
    %284 = llvm.getelementptr %283[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %285 = llvm.load %284 : !llvm.ptr -> !llvm.ptr
    %286 = llvm.getelementptr %283[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %287 = llvm.load %286 : !llvm.ptr -> i8
    %c0_i8_91 = arith.constant 0 : i8
    %288 = arith.cmpi ne, %287, %c0_i8_91 : i8
    cf.cond_br %288, ^bb1(%287 : i8), ^bb43
  ^bb43:  // pred: ^bb42
    %289 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %285, %289 : !llvm.ptr, !llvm.ptr
    %290 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %282, %290 : i64, !llvm.ptr
    %291 = arith.addi %274, %276 : i64
    %c0_i64_92 = arith.constant 0 : i64
    %292 = arith.cmpi slt, %291, %c0_i64_92 : i64
    %c84_i8_93 = arith.constant 84 : i8
    cf.cond_br %292, ^bb1(%c84_i8_93 : i8), ^bb44
  ^bb44:  // pred: ^bb43
    %c31_i64_94 = arith.constant 31 : i64
    %c32_i64_95 = arith.constant 32 : i64
    %293 = arith.addi %291, %c31_i64_94 : i64
    %294 = arith.divui %293, %c32_i64_95 : i64
    %295 = arith.muli %294, %c32_i64_95 : i64
    %296 = call @dora_fn_extend_memory(%arg0, %295) : (!llvm.ptr, i64) -> !llvm.ptr
    %297 = llvm.getelementptr %296[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %298 = llvm.load %297 : !llvm.ptr -> !llvm.ptr
    %299 = llvm.getelementptr %296[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %300 = llvm.load %299 : !llvm.ptr -> i8
    %c0_i8_96 = arith.constant 0 : i8
    %301 = arith.cmpi ne, %300, %c0_i8_96 : i8
    cf.cond_br %301, ^bb1(%300 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %302 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %298, %302 : !llvm.ptr, !llvm.ptr
    %303 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %295, %303 : i64, !llvm.ptr
    %304 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %305 = llvm.load %304 : !llvm.ptr -> i64
    %c1_i256_97 = arith.constant 1 : i256
    %306 = llvm.alloca %c1_i256_97 x i256 : (i256) -> !llvm.ptr
    llvm.store %c0_i256_76, %306 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i256_98 = arith.constant 1 : i256
    %307 = llvm.alloca %c1_i256_98 x i256 : (i256) -> !llvm.ptr
    llvm.store %251, %307 {alignment = 1 : i64} : i256, !llvm.ptr
    %c1_i64_99 = arith.constant 1 : i64
    %308 = llvm.alloca %c1_i64_99 x i64 : (i64) -> !llvm.ptr
    %c0_i8_100 = arith.constant 0 : i8
    %309 = call @dora_fn_call(%arg0, %268, %307, %306, %270, %272, %274, %276, %305, %308, %c0_i8_100) : (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, !llvm.ptr, i8) -> !llvm.ptr
    %310 = llvm.getelementptr %309[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %311 = llvm.load %310 : !llvm.ptr -> i8
    %312 = llvm.getelementptr %309[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %313 = llvm.load %312 : !llvm.ptr -> i8
    %c0_i8_101 = arith.constant 0 : i8
    %314 = arith.cmpi ne, %313, %c0_i8_101 : i8
    cf.cond_br %314, ^bb1(%313 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %315 = llvm.load %308 : !llvm.ptr -> i64
    %316 = arith.extui %311 : i8 to i256
    %317 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %318 = llvm.load %317 : !llvm.ptr -> !llvm.ptr
    llvm.store %316, %318 : i256, !llvm.ptr
    %319 = llvm.getelementptr %318[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %319, %317 : !llvm.ptr, !llvm.ptr
    %320 = llvm.load %9 : !llvm.ptr -> i64
    %c1_i64_102 = arith.constant 1 : i64
    %321 = arith.addi %320, %c1_i64_102 : i64
    llvm.store %321, %9 : i64, !llvm.ptr
    %322 = arith.cmpi ult, %c1024_i64, %321 : i64
    %c92_i8_103 = arith.constant 92 : i8
    cf.cond_br %322, ^bb1(%c92_i8_103 : i8), ^bb47
  ^bb47:  // pred: ^bb46
    %323 = call @dora_fn_return_data_size(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %324 = llvm.getelementptr %323[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %325 = llvm.load %324 : !llvm.ptr -> i64
    %326 = arith.extui %325 : i64 to i256
    %327 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %328 = llvm.load %327 : !llvm.ptr -> !llvm.ptr
    llvm.store %326, %328 : i256, !llvm.ptr
    %329 = llvm.getelementptr %328[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %329, %327 : !llvm.ptr, !llvm.ptr
    cf.br ^bb48
  ^bb48:  // pred: ^bb47
    %c0_i64_104 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %330 = call @dora_fn_write_result(%arg0, %c0_i64_104, %c0_i64_104, %arg1, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> !llvm.ptr
    return %c1_i8 : i8
  }
}
