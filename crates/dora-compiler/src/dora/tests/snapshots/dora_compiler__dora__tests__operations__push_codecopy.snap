---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
module {
  llvm.mlir.global internal @dora_global_stack_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_stack_length() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_memory_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_memory_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_calldata_ptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global internal @dora_global_calldata_size() {addr_space = 0 : i32} : i64
  llvm.mlir.global internal @dora_global_gas_counter() {addr_space = 0 : i32} : i64
  llvm.mlir.global external @dora_global_ctx_is_static() {addr_space = 0 : i32} : !llvm.ptr
  func.func private @dora_fn_tracing(!llvm.ptr, i8, i64)
  func.func private @dora_fn_write_result(!llvm.ptr, i64, i64, i64, i8)
  func.func private @dora_fn_keccak256_hasher(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_calldata(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_calldata_size(!llvm.ptr) -> i64
  func.func private @dora_fn_chainid(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_callvalue(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_caller(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_store_in_gasprice_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_selfbalance_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_blobbasefee_ptr(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_gaslimit(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extend_memory(!llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_code_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_sload(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_sstore(!llvm.ptr, !llvm.ptr, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_append_log(!llvm.ptr, i64, i64)
  func.func private @dora_fn_append_log_with_one_topic(!llvm.ptr, i64, i64, !llvm.ptr)
  func.func private @dora_fn_append_log_with_two_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_three_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_append_log_with_four_topics(!llvm.ptr, i64, i64, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_origin(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_coinbase(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_block_number(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_extcodesize(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_address(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_prevrando(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_timestamp_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_store_in_basefee_ptr(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_call(!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i64, i64, i64, i64, i64, i8) -> !llvm.ptr
  func.func private @dora_fn_store_in_balance(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_copy(!llvm.ptr, !llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_blob_hash(!llvm.ptr, !llvm.ptr)
  func.func private @dora_fn_block_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_ext_code_hash(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_create(!llvm.ptr, i64, i64, !llvm.ptr, i64) -> !llvm.ptr
  func.func private @dora_fn_create2(!llvm.ptr, i64, i64, !llvm.ptr, i64, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_size(!llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_returndata_copy(!llvm.ptr, i64, i64, i64) -> !llvm.ptr
  func.func private @dora_fn_selfdestruct(!llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_read(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func private @dora_fn_transient_storage_write(!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
  func.func public @main(%arg0: !llvm.ptr, %arg1: i64) -> i8 attributes {llvm.emit_c_interface} {
    %c1024_i256 = arith.constant 1024 : i256
    %0 = llvm.alloca %c1024_i256 x i256 : (i256) -> !llvm.ptr
    %1 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    llvm.store %0, %1 : !llvm.ptr, !llvm.ptr
    %c0_i64 = arith.constant 0 : i64
    %2 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    llvm.store %c0_i64, %2 : i64, !llvm.ptr
    %c0_i64_0 = arith.constant 0 : i64
    %3 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %c0_i64_0, %3 : i64, !llvm.ptr
    %4 = call @dora_fn_calldata(%arg0) : (!llvm.ptr) -> !llvm.ptr
    %5 = llvm.mlir.addressof @dora_global_calldata_ptr : !llvm.ptr
    llvm.store %4, %5 : !llvm.ptr, !llvm.ptr
    %6 = call @dora_fn_calldata_size(%arg0) : (!llvm.ptr) -> i64
    %7 = llvm.mlir.addressof @dora_global_calldata_size : !llvm.ptr
    llvm.store %6, %7 : i64, !llvm.ptr
    %8 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    llvm.store %arg1, %8 : i64, !llvm.ptr
    cf.br ^bb5
  ^bb1(%9: i8):  // 24 preds: ^bb2, ^bb4, ^bb5, ^bb8, ^bb9, ^bb12, ^bb13, ^bb16, ^bb17, ^bb20, ^bb21, ^bb24, ^bb25, ^bb28, ^bb29, ^bb31, ^bb32, ^bb33, ^bb34, ^bb37, ^bb38, ^bb41, ^bb44, ^bb45
    %c0_i64_1 = arith.constant 0 : i64
    %10 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %11 = llvm.load %10 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_1, %c0_i64_1, %11, %9) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %9 : i8
  ^bb2(%12: i256):  // no predecessors
    %c89_i8 = arith.constant 89 : i8
    cf.switch %12 : i256, [
      default: ^bb1(%c89_i8 : i8)
    ]
  ^bb3:  // pred: ^bb4
    %c1329227995784915872903807060280344575_i256 = arith.constant 1329227995784915872903807060280344575 : i256
    %13 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %14 = llvm.load %13 : !llvm.ptr -> !llvm.ptr
    llvm.store %c1329227995784915872903807060280344575_i256, %14 : i256, !llvm.ptr
    %15 = llvm.getelementptr %14[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %15, %13 : !llvm.ptr, !llvm.ptr
    cf.br ^bb9
  ^bb4:  // pred: ^bb6
    %16 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64 = arith.constant 1024 : i64
    %17 = llvm.load %16 : !llvm.ptr -> i64
    %c1_i64 = arith.constant 1 : i64
    %18 = arith.addi %17, %c1_i64 : i64
    llvm.store %18, %16 : i64, !llvm.ptr
    %19 = arith.cmpi ult, %c1024_i64, %18 : i64
    %c92_i8 = arith.constant 92 : i8
    cf.cond_br %19, ^bb1(%c92_i8 : i8), ^bb3
  ^bb5:  // pred: ^bb0
    %20 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %21 = llvm.load %20 : !llvm.ptr -> i64
    %c3_i64 = arith.constant 3 : i64
    %22 = arith.cmpi uge, %21, %c3_i64 : i64
    %c80_i8 = arith.constant 80 : i8
    cf.cond_br %22, ^bb6, ^bb1(%c80_i8 : i8)
  ^bb6:  // pred: ^bb5
    %23 = arith.subi %21, %c3_i64 : i64
    llvm.store %23, %20 : i64, !llvm.ptr
    cf.br ^bb4
  ^bb7:  // pred: ^bb8
    %c0_i256 = arith.constant 0 : i256
    %24 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %25 = llvm.load %24 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256, %25 : i256, !llvm.ptr
    %26 = llvm.getelementptr %25[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %26, %24 : !llvm.ptr, !llvm.ptr
    cf.br ^bb13
  ^bb8:  // pred: ^bb10
    %27 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_2 = arith.constant 1024 : i64
    %28 = llvm.load %27 : !llvm.ptr -> i64
    %c1_i64_3 = arith.constant 1 : i64
    %29 = arith.addi %28, %c1_i64_3 : i64
    llvm.store %29, %27 : i64, !llvm.ptr
    %30 = arith.cmpi ult, %c1024_i64_2, %29 : i64
    %c92_i8_4 = arith.constant 92 : i8
    cf.cond_br %30, ^bb1(%c92_i8_4 : i8), ^bb7
  ^bb9:  // pred: ^bb3
    %31 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %32 = llvm.load %31 : !llvm.ptr -> i64
    %c3_i64_5 = arith.constant 3 : i64
    %33 = arith.cmpi uge, %32, %c3_i64_5 : i64
    %c80_i8_6 = arith.constant 80 : i8
    cf.cond_br %33, ^bb10, ^bb1(%c80_i8_6 : i8)
  ^bb10:  // pred: ^bb9
    %34 = arith.subi %32, %c3_i64_5 : i64
    llvm.store %34, %31 : i64, !llvm.ptr
    cf.br ^bb8
  ^bb11:  // pred: ^bb12
    %35 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %36 = llvm.load %35 : !llvm.ptr -> !llvm.ptr
    %37 = llvm.getelementptr %36[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %38 = llvm.load %37 : !llvm.ptr -> i256
    llvm.store %37, %35 : !llvm.ptr, !llvm.ptr
    cf.br ^bb17
  ^bb12:  // pred: ^bb14
    %39 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_7 = arith.constant 1024 : i64
    %40 = llvm.load %39 : !llvm.ptr -> i64
    %c-1_i64 = arith.constant -1 : i64
    %41 = arith.addi %40, %c-1_i64 : i64
    llvm.store %41, %39 : i64, !llvm.ptr
    %c1_i64_8 = arith.constant 1 : i64
    %42 = arith.cmpi ult, %40, %c1_i64_8 : i64
    %c91_i8 = arith.constant 91 : i8
    cf.cond_br %42, ^bb1(%c91_i8 : i8), ^bb11
  ^bb13:  // pred: ^bb7
    %43 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %44 = llvm.load %43 : !llvm.ptr -> i64
    %c2_i64 = arith.constant 2 : i64
    %45 = arith.cmpi uge, %44, %c2_i64 : i64
    %c80_i8_9 = arith.constant 80 : i8
    cf.cond_br %45, ^bb14, ^bb1(%c80_i8_9 : i8)
  ^bb14:  // pred: ^bb13
    %46 = arith.subi %44, %c2_i64 : i64
    llvm.store %46, %43 : i64, !llvm.ptr
    cf.br ^bb12
  ^bb15:  // pred: ^bb16
    %47 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %48 = llvm.load %47 : !llvm.ptr -> !llvm.ptr
    %49 = llvm.getelementptr %48[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %50 = llvm.load %49 : !llvm.ptr -> i256
    llvm.store %49, %47 : !llvm.ptr, !llvm.ptr
    cf.br ^bb21
  ^bb16:  // pred: ^bb18
    %51 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_10 = arith.constant 1024 : i64
    %52 = llvm.load %51 : !llvm.ptr -> i64
    %c-1_i64_11 = arith.constant -1 : i64
    %53 = arith.addi %52, %c-1_i64_11 : i64
    llvm.store %53, %51 : i64, !llvm.ptr
    %c1_i64_12 = arith.constant 1 : i64
    %54 = arith.cmpi ult, %52, %c1_i64_12 : i64
    %c91_i8_13 = arith.constant 91 : i8
    cf.cond_br %54, ^bb1(%c91_i8_13 : i8), ^bb15
  ^bb17:  // pred: ^bb11
    %55 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %56 = llvm.load %55 : !llvm.ptr -> i64
    %c2_i64_14 = arith.constant 2 : i64
    %57 = arith.cmpi uge, %56, %c2_i64_14 : i64
    %c80_i8_15 = arith.constant 80 : i8
    cf.cond_br %57, ^bb18, ^bb1(%c80_i8_15 : i8)
  ^bb18:  // pred: ^bb17
    %58 = arith.subi %56, %c2_i64_14 : i64
    llvm.store %58, %55 : i64, !llvm.ptr
    cf.br ^bb16
  ^bb19:  // pred: ^bb20
    %c32_i256 = arith.constant 32 : i256
    %59 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %60 = llvm.load %59 : !llvm.ptr -> !llvm.ptr
    llvm.store %c32_i256, %60 : i256, !llvm.ptr
    %61 = llvm.getelementptr %60[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %61, %59 : !llvm.ptr, !llvm.ptr
    cf.br ^bb25
  ^bb20:  // pred: ^bb22
    %62 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_16 = arith.constant 1024 : i64
    %63 = llvm.load %62 : !llvm.ptr -> i64
    %c1_i64_17 = arith.constant 1 : i64
    %64 = arith.addi %63, %c1_i64_17 : i64
    llvm.store %64, %62 : i64, !llvm.ptr
    %65 = arith.cmpi ult, %c1024_i64_16, %64 : i64
    %c92_i8_18 = arith.constant 92 : i8
    cf.cond_br %65, ^bb1(%c92_i8_18 : i8), ^bb19
  ^bb21:  // pred: ^bb15
    %66 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %67 = llvm.load %66 : !llvm.ptr -> i64
    %c3_i64_19 = arith.constant 3 : i64
    %68 = arith.cmpi uge, %67, %c3_i64_19 : i64
    %c80_i8_20 = arith.constant 80 : i8
    cf.cond_br %68, ^bb22, ^bb1(%c80_i8_20 : i8)
  ^bb22:  // pred: ^bb21
    %69 = arith.subi %67, %c3_i64_19 : i64
    llvm.store %69, %66 : i64, !llvm.ptr
    cf.br ^bb20
  ^bb23:  // pred: ^bb24
    %c0_i256_21 = arith.constant 0 : i256
    %70 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %71 = llvm.load %70 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_21, %71 : i256, !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %72, %70 : !llvm.ptr, !llvm.ptr
    cf.br ^bb29
  ^bb24:  // pred: ^bb26
    %73 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_22 = arith.constant 1024 : i64
    %74 = llvm.load %73 : !llvm.ptr -> i64
    %c1_i64_23 = arith.constant 1 : i64
    %75 = arith.addi %74, %c1_i64_23 : i64
    llvm.store %75, %73 : i64, !llvm.ptr
    %76 = arith.cmpi ult, %c1024_i64_22, %75 : i64
    %c92_i8_24 = arith.constant 92 : i8
    cf.cond_br %76, ^bb1(%c92_i8_24 : i8), ^bb23
  ^bb25:  // pred: ^bb19
    %77 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %78 = llvm.load %77 : !llvm.ptr -> i64
    %c3_i64_25 = arith.constant 3 : i64
    %79 = arith.cmpi uge, %78, %c3_i64_25 : i64
    %c80_i8_26 = arith.constant 80 : i8
    cf.cond_br %79, ^bb26, ^bb1(%c80_i8_26 : i8)
  ^bb26:  // pred: ^bb25
    %80 = arith.subi %78, %c3_i64_25 : i64
    llvm.store %80, %77 : i64, !llvm.ptr
    cf.br ^bb24
  ^bb27:  // pred: ^bb28
    %c0_i256_27 = arith.constant 0 : i256
    %81 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %82 = llvm.load %81 : !llvm.ptr -> !llvm.ptr
    llvm.store %c0_i256_27, %82 : i256, !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, i256
    llvm.store %83, %81 : !llvm.ptr, !llvm.ptr
    cf.br ^bb38
  ^bb28:  // pred: ^bb30
    %84 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_28 = arith.constant 1024 : i64
    %85 = llvm.load %84 : !llvm.ptr -> i64
    %c1_i64_29 = arith.constant 1 : i64
    %86 = arith.addi %85, %c1_i64_29 : i64
    llvm.store %86, %84 : i64, !llvm.ptr
    %87 = arith.cmpi ult, %c1024_i64_28, %86 : i64
    %c92_i8_30 = arith.constant 92 : i8
    cf.cond_br %87, ^bb1(%c92_i8_30 : i8), ^bb27
  ^bb29:  // pred: ^bb23
    %88 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %89 = llvm.load %88 : !llvm.ptr -> i64
    %c3_i64_31 = arith.constant 3 : i64
    %90 = arith.cmpi uge, %89, %c3_i64_31 : i64
    %c80_i8_32 = arith.constant 80 : i8
    cf.cond_br %90, ^bb30, ^bb1(%c80_i8_32 : i8)
  ^bb30:  // pred: ^bb29
    %91 = arith.subi %89, %c3_i64_31 : i64
    llvm.store %91, %88 : i64, !llvm.ptr
    cf.br ^bb28
  ^bb31:  // pred: ^bb37
    %92 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %93 = llvm.load %92 : !llvm.ptr -> !llvm.ptr
    %94 = llvm.getelementptr %93[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %95 = llvm.load %94 : !llvm.ptr -> i256
    llvm.store %94, %92 : !llvm.ptr, !llvm.ptr
    %96 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %97 = llvm.load %96 : !llvm.ptr -> !llvm.ptr
    %98 = llvm.getelementptr %97[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %99 = llvm.load %98 : !llvm.ptr -> i256
    llvm.store %98, %96 : !llvm.ptr, !llvm.ptr
    %100 = llvm.mlir.addressof @dora_global_stack_ptr : !llvm.ptr
    %101 = llvm.load %100 : !llvm.ptr -> !llvm.ptr
    %102 = llvm.getelementptr %101[-1] : (!llvm.ptr) -> !llvm.ptr, i256
    %103 = llvm.load %102 : !llvm.ptr -> i256
    llvm.store %102, %100 : !llvm.ptr, !llvm.ptr
    %104 = arith.trunci %103 : i256 to i64
    %c0_i64_33 = arith.constant 0 : i64
    %105 = arith.cmpi slt, %104, %c0_i64_33 : i64
    %c84_i8 = arith.constant 84 : i8
    cf.cond_br %105, ^bb1(%c84_i8 : i8), ^bb32
  ^bb32:  // pred: ^bb31
    %c31_i64 = arith.constant 31 : i64
    %c32_i64 = arith.constant 32 : i64
    %106 = arith.addi %104, %c31_i64 : i64
    %107 = arith.divui %106, %c32_i64 : i64
    %c3_i64_34 = arith.constant 3 : i64
    %108 = arith.muli %107, %c3_i64_34 : i64
    %109 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %110 = llvm.load %109 : !llvm.ptr -> i64
    %111 = arith.cmpi ult, %110, %108 : i64
    scf.if %111 {
    } else {
      %159 = arith.subi %110, %108 : i64
      llvm.store %159, %109 : i64, !llvm.ptr
    }
    %c80_i8_35 = arith.constant 80 : i8
    cf.cond_br %111, ^bb1(%c80_i8_35 : i8), ^bb33
  ^bb33:  // pred: ^bb32
    %112 = arith.trunci %99 : i256 to i64
    %c0_i64_36 = arith.constant 0 : i64
    %113 = arith.cmpi slt, %112, %c0_i64_36 : i64
    %c84_i8_37 = arith.constant 84 : i8
    cf.cond_br %113, ^bb1(%c84_i8_37 : i8), ^bb34
  ^bb34:  // pred: ^bb33
    %114 = arith.trunci %95 : i256 to i64
    %c0_i64_38 = arith.constant 0 : i64
    %115 = arith.cmpi slt, %114, %c0_i64_38 : i64
    %c84_i8_39 = arith.constant 84 : i8
    cf.cond_br %115, ^bb1(%c84_i8_39 : i8), ^bb35
  ^bb35:  // pred: ^bb34
    %c0_i64_40 = arith.constant 0 : i64
    %116 = arith.cmpi ne, %104, %c0_i64_40 : i64
    cf.cond_br %116, ^bb41, ^bb36
  ^bb36:  // 2 preds: ^bb35, ^bb43
    %117 = call @dora_fn_code_copy(%arg0, %112, %104, %114) : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr
    cf.br ^bb40
  ^bb37:  // pred: ^bb39
    %118 = llvm.mlir.addressof @dora_global_stack_length : !llvm.ptr
    %c1024_i64_41 = arith.constant 1024 : i64
    %119 = llvm.load %118 : !llvm.ptr -> i64
    %c-3_i64 = arith.constant -3 : i64
    %120 = arith.addi %119, %c-3_i64 : i64
    llvm.store %120, %118 : i64, !llvm.ptr
    %c3_i64_42 = arith.constant 3 : i64
    %121 = arith.cmpi ult, %119, %c3_i64_42 : i64
    %c91_i8_43 = arith.constant 91 : i8
    cf.cond_br %121, ^bb1(%c91_i8_43 : i8), ^bb31
  ^bb38:  // pred: ^bb27
    %122 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %123 = llvm.load %122 : !llvm.ptr -> i64
    %c3_i64_44 = arith.constant 3 : i64
    %124 = arith.cmpi uge, %123, %c3_i64_44 : i64
    %c80_i8_45 = arith.constant 80 : i8
    cf.cond_br %124, ^bb39, ^bb1(%c80_i8_45 : i8)
  ^bb39:  // pred: ^bb38
    %125 = arith.subi %123, %c3_i64_44 : i64
    llvm.store %125, %122 : i64, !llvm.ptr
    cf.br ^bb37
  ^bb40:  // pred: ^bb36
    %c0_i64_46 = arith.constant 0 : i64
    %c1_i8 = arith.constant 1 : i8
    %126 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %127 = llvm.load %126 : !llvm.ptr -> i64
    call @dora_fn_write_result(%arg0, %c0_i64_46, %c0_i64_46, %127, %c1_i8) : (!llvm.ptr, i64, i64, i64, i8) -> ()
    return %c1_i8 : i8
  ^bb41:  // pred: ^bb35
    %128 = arith.addi %114, %104 : i64
    %c0_i64_47 = arith.constant 0 : i64
    %129 = arith.cmpi slt, %128, %c0_i64_47 : i64
    %c84_i8_48 = arith.constant 84 : i8
    cf.cond_br %129, ^bb1(%c84_i8_48 : i8), ^bb42
  ^bb42:  // pred: ^bb41
    %c31_i64_49 = arith.constant 31 : i64
    %c32_i64_50 = arith.constant 32 : i64
    %130 = arith.addi %128, %c31_i64_49 : i64
    %131 = arith.divui %130, %c32_i64_50 : i64
    %c32_i64_51 = arith.constant 32 : i64
    %132 = arith.muli %131, %c32_i64_51 : i64
    %133 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    %134 = llvm.load %133 : !llvm.ptr -> i64
    %c31_i64_52 = arith.constant 31 : i64
    %c32_i64_53 = arith.constant 32 : i64
    %135 = arith.addi %134, %c31_i64_52 : i64
    %136 = arith.divui %135, %c32_i64_53 : i64
    %137 = arith.muli %136, %c32_i64_51 : i64
    %138 = arith.cmpi ult, %137, %132 : i64
    cf.cond_br %138, ^bb44, ^bb43
  ^bb43:  // 2 preds: ^bb42, ^bb46
    cf.br ^bb36
  ^bb44:  // pred: ^bb42
    %c3_i64_54 = arith.constant 3 : i64
    %c512_i64 = arith.constant 512 : i64
    %139 = arith.muli %136, %136 : i64
    %140 = arith.divui %139, %c512_i64 : i64
    %141 = arith.muli %136, %c3_i64_54 : i64
    %142 = arith.addi %140, %141 : i64
    %c3_i64_55 = arith.constant 3 : i64
    %c512_i64_56 = arith.constant 512 : i64
    %143 = arith.muli %131, %131 : i64
    %144 = arith.divui %143, %c512_i64_56 : i64
    %145 = arith.muli %131, %c3_i64_55 : i64
    %146 = arith.addi %144, %145 : i64
    %147 = arith.subi %146, %142 : i64
    %148 = llvm.mlir.addressof @dora_global_gas_counter : !llvm.ptr
    %149 = llvm.load %148 : !llvm.ptr -> i64
    %150 = arith.cmpi ult, %149, %147 : i64
    scf.if %150 {
    } else {
      %159 = arith.subi %149, %147 : i64
      llvm.store %159, %148 : i64, !llvm.ptr
    }
    %c80_i8_57 = arith.constant 80 : i8
    cf.cond_br %150, ^bb1(%c80_i8_57 : i8), ^bb45
  ^bb45:  // pred: ^bb44
    %151 = call @dora_fn_extend_memory(%arg0, %132) : (!llvm.ptr, i64) -> !llvm.ptr
    %152 = llvm.getelementptr %151[16] : (!llvm.ptr) -> !llvm.ptr, i8
    %153 = llvm.load %152 : !llvm.ptr -> !llvm.ptr
    %154 = llvm.getelementptr %151[0] : (!llvm.ptr) -> !llvm.ptr, i8
    %155 = llvm.load %154 : !llvm.ptr -> i8
    %c0_i8 = arith.constant 0 : i8
    %156 = arith.cmpi ne, %155, %c0_i8 : i8
    cf.cond_br %156, ^bb1(%155 : i8), ^bb46
  ^bb46:  // pred: ^bb45
    %157 = llvm.mlir.addressof @dora_global_memory_ptr : !llvm.ptr
    llvm.store %153, %157 : !llvm.ptr, !llvm.ptr
    %158 = llvm.mlir.addressof @dora_global_memory_size : !llvm.ptr
    llvm.store %132, %158 : i64, !llvm.ptr
    cf.br ^bb43
  }
}
