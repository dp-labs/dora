use crate::run_evm_bytecode_with_calldata;
use dora_primitives::spec::SpecId;

mod operations;

const COUNTER_BYTECODE: &str = "6080806040526004361015610012575f80fd5b5f3560e01c9081633fb5c1cb146101035781638381f58a146100cc575063d09de08a1461003d575f80fd5b346100c8575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c8575f547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461009b576001015f55005b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f80fd5b346100c8575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c8576020905f548152f35b346100c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c8576004355f5500fea264697066735822122019105920c33dab502c8d24693bd24f1b4b0fbb562ad3a475173a15b7aa3574f064736f6c63430008190033";
const ERC20_TRANSFER_BYTECODE: &str = "608060405234801561000f575f80fd5b50600436106100cf575f3560e01c8063395093511161007d578063a457c2d711610058578063a457c2d7146101a2578063a9059cbb146101b5578063dd62ed3e146101c8575f80fd5b8063395093511461015257806370a082311461016557806395d89b411461019a575f80fd5b806323b872dd116100ad57806323b872dd1461012657806330627b7c14610139578063313ce56714610143575f80fd5b806306fdde03146100d3578063095ea7b3146100f157806318160ddd14610114575b5f80fd5b6100db61020d565b6040516100e89190610a3f565b60405180910390f35b6101046100ff366004610aba565b61029d565b60405190151581526020016100e8565b6002545b6040519081526020016100e8565b610104610134366004610ae2565b6102b6565b6101416102d9565b005b604051601281526020016100e8565b610104610160366004610aba565b61031d565b610118610173366004610b1b565b73ffffffffffffffffffffffffffffffffffffffff165f9081526020819052604090205490565b6100db610368565b6101046101b0366004610aba565b610377565b6101046101c3366004610aba565b61044c565b6101186101d6366004610b3b565b73ffffffffffffffffffffffffffffffffffffffff9182165f90815260016020908152604080832093909416825291909152205490565b60606003805461021c90610b6c565b80601f016020809104026020016040519081016040528092919081815260200182805461024890610b6c565b80156102935780601f1061026a57610100808354040283529160200191610293565b820191905f5260205f20905b81548152906001019060200180831161027657829003601f168201915b5050505050905090565b5f336102aa818585610459565b60019150505b92915050565b5f336102c385828561060b565b6102ce8585856106e1565b506001949350505050565b6102fa336102e96012600a610d08565b6102f590612710610d16565b61094e565b5f5b6101f481101561031a5761031160018261044c565b506001016102fc565b50565b335f81815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102aa9082908690610363908790610d2d565b610459565b60606004805461021c90610b6c565b335f81815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102ce8286868403610459565b5f336102aa8185856106e1565b73ffffffffffffffffffffffffffffffffffffffff83166104fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610436565b73ffffffffffffffffffffffffffffffffffffffff821661059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610436565b73ffffffffffffffffffffffffffffffffffffffff8381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381165f908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106db57818110156106ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610436565b6106db8484848403610459565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610436565b73ffffffffffffffffffffffffffffffffffffffff8216610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610436565b73ffffffffffffffffffffffffffffffffffffffff83165f90815260208190526040902054818110156108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610436565b73ffffffffffffffffffffffffffffffffffffffff8481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106db565b73ffffffffffffffffffffffffffffffffffffffff82166109cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610436565b8060025f8282546109dc9190610d2d565b909155505073ffffffffffffffffffffffffffffffffffffffff82165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ab5575f80fd5b919050565b5f8060408385031215610acb575f80fd5b610ad483610a92565b946020939093013593505050565b5f805f60608486031215610af4575f80fd5b610afd84610a92565b9250610b0b60208501610a92565b9150604084013590509250925092565b5f60208284031215610b2b575f80fd5b610b3482610a92565b9392505050565b5f8060408385031215610b4c575f80fd5b610b5583610a92565b9150610b6360208401610a92565b90509250929050565b600181811c90821680610b8057607f821691505b602082108103610bb7577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b600181815b80851115610c4357817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610c2957610c29610bbd565b80851615610c3657918102915b93841c9390800290610bef565b509250929050565b5f82610c59575060016102b0565b81610c6557505f6102b0565b8160018114610c7b5760028114610c8557610ca1565b60019150506102b0565b60ff841115610c9657610c96610bbd565b50506001821b6102b0565b5060208310610133831016604e8410600b8410161715610cc4575081810a6102b0565b610cce8383610bea565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610d0057610d00610bbd565b029392505050565b5f610b3460ff841683610c4b565b80820281158282048414176102b0576102b0610bbd565b808201808211156102b0576102b0610bbd56fea26469706673582212202876b78b10607faa6f80d7286e1d3c837a871525c86393c77cfefde3b06bbefa64736f6c63430008190033";

const INIT_GAS: u64 = 999_999;

#[test]
fn test_counter() {
    let result =
        run_evm_bytecode_with_calldata(COUNTER_BYTECODE, "d09de08a", INIT_GAS, SpecId::CANCUN);
    let result = result.as_ref().unwrap();
    assert!(result.result.is_success(), "{:?}", result);
}

/// Solidity code:
/// ```solidity
/// function 0x30627b7c() public payable {
///     v0 = 0xd08(10, 18);
///     v1 = _SafeMul(10000, v0);
///     require(msg.sender, Error('ERC20: mint to the zero address'));
///     v2 = _SafeAdd(_totalSupply, v1);
///     _totalSupply = v2;
///     _balanceOf[msg.sender] += v1;
///     emit Transfer(0, msg.sender, v1);
///     v3 = v4 = 0;
///     while (v3 < 500) {
///         v5 = 0x6e1(v3, 1, msg.sender);
///         v3 += 1;
///     }
/// }
/// function 0x6e1(uint256 varg0, address varg1, address varg2) private {
///     require(varg2, Error('ERC20: transfer from the zero address'));
///     require(varg1, Error('ERC20: transfer to the zero address'));
///     require(_balanceOf[varg2] >= varg0, Error('ERC20: transfer amount exceeds balance'));
///     _balanceOf[varg2] = _balanceOf[varg2] - varg0;
///     _balanceOf[varg1] += varg0;
///     emit Transfer(varg2, varg1, varg0);
///     return ;
/// }
/// ```
#[test]
fn test_erc20_transfer() {
    let result = run_evm_bytecode_with_calldata(
        ERC20_TRANSFER_BYTECODE,
        "30627b7c",
        INIT_GAS,
        SpecId::CANCUN,
    );
    let result = result.as_ref().unwrap();
    assert!(result.result.is_success(), "{:?}", result);
}
