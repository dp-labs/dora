name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: ["**"]
    types: [synchronize, opened, reopened, converted_to_draft, ready_for_review]

env:
  LLVM_MAJOR_VERSION: "19"
  LLVM_VERSION: "19.1.5"
  RUST_VERSION: 1.84.1
  MACOSX_DEPLOYMENT_TARGET: '12.0'

jobs:
  ubuntu-test:
    name: Ubuntu Test
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: clippy, rustfmt

      - name: Add LLVM deb repository
        uses: myci-actions/add-deb-repo@11
        with:
          repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
          repo-name: llvm-repo
          keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
      - name: Install LLVM
        run: |
          v=${{ env.LLVM_MAJOR_VERSION }}
          sudo apt-get install llvm-${v} llvm-${v}-dev llvm-${v}-runtime clang-${v} clang-tools-${v} lld-${v} libpolly-${v}-dev libmlir-${v}-dev mlir-${v}-tools
          echo "LLVM_SYS_${v}0_PREFIX=/usr/lib/llvm-${v}/" >> $GITHUB_ENV
          echo "MLIR_SYS_${v}0_PREFIX=/usr/lib/llvm-${v}/" >> $GITHUB_ENV
          echo "TABLEGEN_${v}0_PREFIX=/usr/lib/llvm-${v}/" >> $GITHUB_ENV
          echo "PATH=/usr/lib/llvm-${v}/bin:$PATH" >> $GITHUB_ENV
      - name: Cargo fmt
        run: cargo fmt --all -- --check
      - name: Cargo clippy
        run: cargo clippy --workspace --all-features --benches --examples --tests -- -D warnings
      - name: Run tests
        run: cargo test -r --workspace --all-features

  macos-test:
    name: Macos Test
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        os: [macos-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: clippy, rustfmt
      - name: Install LLVM (brew)
        run: |
          v=${{ env.LLVM_MAJOR_VERSION }}
          brew install "llvm@${v}"
          echo "LLVM_SYS_${v}0_PREFIX=$(brew --prefix llvm@${v})" >> $GITHUB_ENV
          echo "MLIR_SYS_${v}0_PREFIX=$(brew --prefix llvm@${v})" >> $GITHUB_ENV
          echo "TABLEGEN_${v}0_PREFIX=$(brew --prefix llvm@${v})" >> $GITHUB_ENV
          echo "PATH=$(brew --prefix)/opt/llvm@${v}/bin:$PATH" >> $GITHUB_ENV
          echo "LIBRARY_PATH=/opt/homebrew/lib:$LIBRARY_PATH" >> $GITHUB_ENV
      - name: Cargo fmt
        run: cargo fmt --all -- --check
      - name: Cargo clippy
        run: cargo clippy --workspace --all-features --benches --examples --tests -- -D warnings
      - name: Run tests
        run: cargo test -r --workspace --all-features

  windows-test:
    name: Windows Test
    if: github.event.pull_request.draft == false
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: clippy, rustfmt

      # Download LLVM from Build Artifacts
      # https://github.com/dp-labs/dora/actions/runs/13151166250
      - name: Download LLVM from Build Artifacts
        id: download-llvm
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: llvm-build.yaml
          workflow_conclusion: success
          event: push
          branch: llvm-head
          name: llvm-windows-x64
          path: llvm-artifact

      - name: Extract LLVM
        run: |
          $llvmArtifactPath = "llvm-artifact\llvm-${{ env.LLVM_MAJOR_VERSION }}-windows-x64.tar.gz"
          $llvmInstallPath = "C:\Program Files\LLVM"
          if (Test-Path -Path $llvmInstallPath) {
              Remove-Item -Recurse -Force -Path $llvmInstallPath
          }
          New-Item -ItemType Directory -Path $llvmInstallPath

          tar -xzf $llvmArtifactPath -C $llvmInstallPath --strip-components=1

          Add-Content $env:GITHUB_ENV "PATH=$llvmInstallPath\bin;$env:PATH"
          echo "LLVM_SYS_${{ env.LLVM_MAJOR_VERSION }}0_PREFIX=$llvmInstallPath" >> $env:GITHUB_ENV
          echo "MLIR_SYS_${{ env.LLVM_MAJOR_VERSION }}0_PREFIX=$llvmInstallPath" >> $env:GITHUB_ENV
          echo "TABLEGEN_${{ env.LLVM_MAJOR_VERSION }}0_PREFIX=$llvmInstallPath" >> $env:GITHUB_ENV
          echo "PATH=$llvmInstallPath\bin;$env:PATH" >> $env:GITHUB_ENV

      - name: Verify LLVM installation
        run: |
          llvm-config --version

      # TODO: fix the bug in `mlir-sys`: https://github.com/mlir-rs/mlir-sys/issues/61
      # - name: Run tests
      #   run: cargo test -r --workspace --all-features
